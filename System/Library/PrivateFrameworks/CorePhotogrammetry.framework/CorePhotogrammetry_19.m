void sub_239AFF67C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8C18;
  v1 = (std::__shared_weak_count *)a1[3];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239AFF6F0(__n128 *a1)
{
  __n128 *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  __n128 result;

  v2 = (__n128 *)operator new(0x38uLL);
  v3 = a1->n128_u64[1];
  v4 = a1[1].n128_u64[0];
  v2->n128_u64[0] = (unint64_t)&off_250AF8C18;
  v2->n128_u64[1] = v3;
  v5 = a1[1].n128_u64[1];
  v2[1].n128_u64[0] = v4;
  v2[1].n128_u64[1] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[2];
  v2[2] = result;
  return result;
}

__n128 sub_239AFF74C(__n128 *a1, __n128 *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __n128 result;

  v2 = a1->n128_u64[1];
  v3 = a1[1].n128_u64[0];
  a2->n128_u64[0] = (unint64_t)&off_250AF8C18;
  a2->n128_u64[1] = v2;
  v4 = a1[1].n128_u64[1];
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = a1[2];
  a2[2] = result;
  return result;
}

void sub_239AFF788(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AFF7E0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239AFF838(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v2 = a1[5];
  v3 = (std::__shared_weak_count *)a1[3];
  v12 = a1[2];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v14 = a1[1];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v12, &v14);
  v7 = v13;
  if (v13)
  {
    v8 = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (unsigned int *)a1[4];
  LOBYTE(v14) = 1;
  return sub_2395BFE44(v10, &v14);
}

void sub_239AFF8F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AFF93C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8B88;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239AFF9A0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8B88;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AFFA14(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8B88;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239AFFA6C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8B88;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239AFFAA4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AFFAFC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239AFFB54(uint64_t a1)
{
  uint64_t result;

  sub_239467C88(*(_QWORD *)(a1 + 24));
  result = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 224);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

_QWORD *sub_239AFFB98(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8B40;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239AFFBFC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8B40;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AFFC70(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8B40;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239AFFCC8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8B40;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239AFFD00(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AFFD58(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239AFFDB0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  char v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 8);
  v4 = (std::__shared_weak_count *)v3[16];
  v15 = v3[15];
  v16 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v3 = *(_QWORD **)(a1 + 8);
  }
  v17 = v3[14];
  v7 = *(_QWORD *)(v2 + 200);
  if (!v7)
    sub_2394172E0();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v15, &v17);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(v12 + 160);
  if (v13)
  {
    LOBYTE(v17) = v8;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v13 + 48))(v13, &v17);
    v12 = *(_QWORD *)(a1 + 8);
  }
  return sub_239AFFEE4(v2, *(_QWORD *)(v12 + 112));
}

void sub_239AFFEA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AFFEE4(uint64_t a1, unint64_t a2)
{
  pthread_mutex_t *v4;
  int8x8_t v5;
  _QWORD *v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD **v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *__p;

  v4 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v5 = *(int8x8_t *)(a1 + 312);
  if (v5)
  {
    v6 = (_QWORD *)(a1 + 304);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = a2;
      if (*(_QWORD *)&v5 <= a2)
        v8 = a2 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*v6 + 8 * v8);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v13 == a2)
            {
              if (v10[2] == a2)
                goto LABEL_22;
            }
            else if ((v13 & v11) != v8)
            {
              return sub_2397A16B4(v4);
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              return sub_2397A16B4(v4);
          }
        }
        do
        {
          v12 = v10[1];
          if (v12 == a2)
          {
            if (v10[2] == a2)
            {
LABEL_22:
              sub_239A78378((uint64_t)&__p, v6, v10);
              if (__p)
                operator delete(__p);
              return sub_2397A16B4(v4);
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              return sub_2397A16B4(v4);
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  return sub_2397A16B4(v4);
}

_QWORD *sub_239B00014(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8AB0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B00078(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8AB0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B000EC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8AB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B00144(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8AB0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B0017C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B001D4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B0022C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  int8x8_t v8;
  _QWORD *v9;
  uint8x8_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD **v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unsigned __int8 v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  std::__shared_weak_count *v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  char v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  __int128 v64;
  void *v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  char v68;
  void *v69;
  uint64_t v70;
  std::__shared_weak_count *v71;
  _QWORD v72[3];
  _QWORD *v73;
  void *__p[9];
  char v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  std::__shared_weak_count *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[3];
  _QWORD *v86;
  uint64_t v87;

  v87 = *MEMORY[0x24BDAC8D0];
  v3 = (unint64_t *)a1[1];
  v4 = (uint64_t *)(v3 + 7);
  if (v3[7])
  {
    v6 = a1[3];
    sub_23946BA10(v6, v3 + 6, v4, (uint64_t)&v65);
    v7 = a1[1];
    if (*(_BYTE *)(v7 + 72))
    {
      v1 = *(std::__shared_weak_count **)(v7 + 48);
      if (sub_2397A1B98((pthread_mutex_t *)(v6 + 344)))
      {
        sub_2397A16B4((pthread_mutex_t *)(v6 + 344));
        sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      v8 = *(int8x8_t *)(v6 + 312);
      if (v8)
      {
        v9 = (_QWORD *)(v6 + 304);
        v10 = (uint8x8_t)vcnt_s8(v8);
        v10.i16[0] = vaddlv_u8(v10);
        if (v10.u32[0] > 1uLL)
        {
          v11 = (unint64_t)v1;
          if (*(_QWORD *)&v8 <= (unint64_t)v1)
            v11 = (unint64_t)v1 % *(_QWORD *)&v8;
        }
        else
        {
          v11 = (*(_QWORD *)&v8 - 1) & (unint64_t)v1;
        }
        v13 = *(_QWORD ***)(*v9 + 8 * v11);
        if (v13)
        {
          v14 = *v13;
          if (*v13)
          {
            if (v10.u32[0] < 2uLL)
            {
              v15 = *(_QWORD *)&v8 - 1;
              while (1)
              {
                v17 = v14[1];
                if ((std::__shared_weak_count *)v17 == v1)
                {
                  if ((std::__shared_weak_count *)v14[2] == v1)
                    goto LABEL_27;
                }
                else if ((v17 & v15) != v11)
                {
                  goto LABEL_29;
                }
                v14 = (_QWORD *)*v14;
                if (!v14)
                  goto LABEL_29;
              }
            }
            do
            {
              v16 = v14[1];
              if ((std::__shared_weak_count *)v16 == v1)
              {
                if ((std::__shared_weak_count *)v14[2] == v1)
                {
LABEL_27:
                  sub_239A78378((uint64_t)__p, v9, v14);
                  if (__p[0])
                    operator delete(__p[0]);
                  break;
                }
              }
              else
              {
                if (v16 >= *(_QWORD *)&v8)
                  v16 %= *(_QWORD *)&v8;
                if (v16 != v11)
                  break;
              }
              v14 = (_QWORD *)*v14;
            }
            while (v14);
          }
        }
      }
    }
LABEL_29:
    if (v68)
    {
      v18 = a1[1];
      if (*(_QWORD *)(v6 + 200))
      {
        v19 = (unint64_t)v65;
        if (*(void **)(v18 + 48) != v65 || !*(_BYTE *)(v18 + 72))
        {
          v20 = (std::__shared_weak_count *)a1[2];
          if (!v20)
            goto LABEL_37;
          p_shared_owners = (unint64_t *)&v20->__shared_owners_;
          do
            v22 = __ldxr(p_shared_owners);
          while (__stxr(v22 + 1, p_shared_owners));
          if (!v68)
          {
            v27 = 0;
            v29 = 0;
            v28 = 1;
          }
          else
          {
LABEL_37:
            v2 = v66;
            v1 = v67;
            if (v67)
            {
              v23 = (unint64_t *)&v67->__shared_owners_;
              do
                v24 = __ldxr(v23);
              while (__stxr(v24 + 1, v23));
            }
            if (v20)
            {
              v25 = (unint64_t *)&v20->__shared_owners_;
              do
                v26 = __ldxr(v25);
              while (__stxr(v26 + 1, v25));
            }
            v27 = v19 & 0xFFFFFFFFFFFFFF00;
            v28 = 0;
            if (!v1)
            {
              v29 = v19;
              goto LABEL_58;
            }
            p_shared_owners = (unint64_t *)&v1->__shared_owners_;
            v29 = v19;
          }
          do
            v34 = __ldxr(p_shared_owners);
          while (__stxr(v34 + 1, p_shared_owners));
LABEL_58:
          v86 = 0;
          v35 = operator new(0x40uLL);
          *v35 = &off_250AF8AF8;
          v35[1] = v18;
          v35[2] = v20;
          *((_BYTE *)v35 + 24) = 0;
          *((_BYTE *)v35 + 48) = 0;
          v36 = v1;
          if ((v28 & 1) == 0)
          {
            v36 = 0;
            v35[3] = v27 | v29;
            v35[4] = v2;
            v35[5] = v1;
            *((_BYTE *)v35 + 48) = 1;
          }
          v35[7] = v6;
          v86 = v35;
          v37 = sub_239A82B00(v6, v19, v85);
          v38 = v86;
          if (v86 == v85)
          {
            v39 = 4;
            v38 = v85;
          }
          else
          {
            if (!v86)
              goto LABEL_65;
            v39 = 5;
          }
          (*(void (**)(void))(*v38 + 8 * v39))();
LABEL_65:
          if (v36)
            v40 = v28;
          else
            v40 = 1;
          if ((v40 & 1) != 0)
            goto LABEL_72;
          v41 = (unint64_t *)&v36->__shared_owners_;
          do
            v42 = __ldaxr(v41);
          while (__stlxr(v42 - 1, v41));
          if (v42)
          {
LABEL_72:
            if ((v37 & 1) == 0)
              goto LABEL_73;
          }
          else
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
            if ((v37 & 1) == 0)
            {
LABEL_73:
              v69 = v65;
              v70 = v66;
              v71 = v67;
              if (v67)
              {
                v43 = (unint64_t *)&v67->__shared_owners_;
                do
                  v44 = __ldxr(v43);
                while (__stxr(v44 + 1, v43));
              }
              v45 = v72;
              v46 = a1[1];
              v47 = *(_QWORD *)(v46 + 104);
              if (v47)
              {
                if (v47 == v46 + 80)
                {
                  v73 = v72;
                  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v47 + 24))(v47, v72);
LABEL_83:
                  LODWORD(__p[0]) = 2;
                  __p[7] = 0;
                  __p[8] = 0;
                  __p[5] = 0;
                  v75 = 0;
                  v76 = 0;
                  v77 = v69;
                  v78 = v70;
                  v79 = v71;
                  if (v71)
                  {
                    v48 = (unint64_t *)&v71->__shared_owners_;
                    do
                      v49 = __ldxr(v48);
                    while (__stxr(v49 + 1, v48));
                  }
                  v50 = (uint64_t)v73;
                  if (v73)
                  {
                    if (v73 == v72)
                    {
                      v81 = &v80;
                      (*(void (**)(_QWORD *))(v72[0] + 24))(v72);
LABEL_91:
                      v83 = 0;
                      v84 = 0;
                      __p[1] = v69;
                      __p[6] = v69;
                      v82 = 0;
                      v77 = v69;
                      v51 = operator new(0x120uLL);
                      v51[1] = 0;
                      v51[2] = 0;
                      *v51 = &off_250AF8A78;
                      *(_QWORD *)&v64 = sub_239B00B80((uint64_t)(v51 + 3), (uint64_t)__p);
                      *((_QWORD *)&v64 + 1) = v51;
                      sub_239A82E8C(__p);
                      if (v73 == v72)
                      {
                        v52 = 4;
                      }
                      else
                      {
                        if (!v73)
                          goto LABEL_96;
                        v52 = 5;
                        v45 = v73;
                      }
                      (*(void (**)(_QWORD *))(*v45 + 8 * v52))(v45);
LABEL_96:
                      v53 = v71;
                      if (v71)
                      {
                        v54 = (unint64_t *)&v71->__shared_owners_;
                        do
                          v55 = __ldaxr(v54);
                        while (__stlxr(v55 - 1, v54));
                        if (!v55)
                        {
                          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
                          std::__shared_weak_count::__release_weak(v53);
                        }
                      }
                      sub_239AFE6F4(*(unsigned int **)(v6 + 288), &v64);
                      v56 = (std::__shared_weak_count *)*((_QWORD *)&v64 + 1);
                      if (*((_QWORD *)&v64 + 1))
                      {
                        v57 = (unint64_t *)(*((_QWORD *)&v64 + 1) + 8);
                        do
                          v58 = __ldaxr(v57);
                        while (__stlxr(v58 - 1, v57));
                        if (!v58)
                        {
                          ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
                          std::__shared_weak_count::__release_weak(v56);
                        }
                      }
                      goto LABEL_106;
                    }
                    v50 = (*(uint64_t (**)(void))(*v73 + 16))();
                  }
                  v81 = (uint64_t *)v50;
                  goto LABEL_91;
                }
                v47 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v47 + 16))(v47);
              }
              v73 = (_QWORD *)v47;
              goto LABEL_83;
            }
          }
LABEL_106:
          if (v1)
            v59 = v28;
          else
            v59 = 1;
          if ((v59 & 1) == 0)
          {
            v60 = (unint64_t *)&v1->__shared_owners_;
            do
              v61 = __ldaxr(v60);
            while (__stlxr(v61 - 1, v60));
            if (!v61)
            {
              ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
              std::__shared_weak_count::__release_weak(v1);
            }
          }
          if (v20)
          {
            v62 = (unint64_t *)&v20->__shared_owners_;
            do
              v63 = __ldaxr(v62);
            while (__stlxr(v63 - 1, v62));
            if (!v63)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
LABEL_48:
          if (v68)
          {
            v31 = v67;
            if (v67)
            {
              v32 = (unint64_t *)&v67->__shared_owners_;
              do
                v33 = __ldaxr(v32);
              while (__stlxr(v33 - 1, v32));
              if (!v33)
              {
                ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
                std::__shared_weak_count::__release_weak(v31);
              }
            }
          }
          return;
        }
      }
    }
    else
    {
      v18 = a1[1];
    }
    v30 = *(_QWORD *)(v18 + 104);
    if (v30)
    {
      LOBYTE(__p[0]) = 1;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)v30 + 48))(v30, __p);
    }
    goto LABEL_48;
  }
  v12 = v3[13];
  if (v12)
  {
    LOBYTE(__p[0]) = 0;
    (*(void (**)(unint64_t, void **, uint64_t *))(*(_QWORD *)v12 + 48))(v12, __p, v4);
  }
}

void sub_239B00874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, char a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17, uint64_t a18, uint64_t a19, uint64_t a20,_QWORD *a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t *a27,uint64_t a28,uint64_t a29,std::__shared_weak_count *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t *a35,uint64_t a36,uint64_t a37,std::__shared_weak_count *a38)
{
  std::__shared_weak_count *v38;
  std::__shared_weak_count *v39;
  _QWORD *v40;
  char v41;
  std::__shared_weak_count *v43;
  unint64_t *p_shared_owners;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  char v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t *v61;
  unint64_t v62;

  v43 = a38;
  if (a38)
  {
    p_shared_owners = (unint64_t *)&a38->__shared_owners_;
    do
      v45 = __ldaxr(p_shared_owners);
    while (__stlxr(v45 - 1, p_shared_owners));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
  v46 = a35;
  if (a35 == &a32)
  {
    v47 = 4;
    v46 = &a32;
  }
  else
  {
    if (!a35)
    {
LABEL_11:
      v48 = a30;
      if (a30)
      {
        v49 = (unint64_t *)&a30->__shared_owners_;
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (!v50)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }
      v51 = a27;
      if (a27 == &a24)
      {
        v52 = 4;
        v51 = &a24;
      }
      else
      {
        if (!a27)
          goto LABEL_21;
        v52 = 5;
      }
      (*(void (**)(void))(*v51 + 8 * v52))();
LABEL_21:
      if (a21 == v40)
      {
        v53 = 4;
      }
      else
      {
        if (!a21)
        {
LABEL_26:
          if (a17)
          {
            v54 = (unint64_t *)&a17->__shared_owners_;
            do
              v55 = __ldaxr(v54);
            while (__stlxr(v55 - 1, v54));
            if (!v55)
            {
              ((void (*)(std::__shared_weak_count *))a17->__on_zero_shared)(a17);
              std::__shared_weak_count::__release_weak(a17);
            }
          }
          if (v39)
            v56 = v41;
          else
            v56 = 1;
          if ((v56 & 1) == 0)
          {
            v57 = (unint64_t *)&v39->__shared_owners_;
            do
              v58 = __ldaxr(v57);
            while (__stlxr(v58 - 1, v57));
            if (!v58)
            {
              ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
              std::__shared_weak_count::__release_weak(v39);
            }
          }
          if (v38)
          {
            v59 = (unint64_t *)&v38->__shared_owners_;
            do
              v60 = __ldaxr(v59);
            while (__stlxr(v60 - 1, v59));
            if (!v60)
            {
              ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
              std::__shared_weak_count::__release_weak(v38);
            }
          }
          if (a14 && a13)
          {
            v61 = (unint64_t *)&a13->__shared_owners_;
            do
              v62 = __ldaxr(v61);
            while (__stlxr(v62 - 1, v61));
            if (!v62)
            {
              ((void (*)(std::__shared_weak_count *))a13->__on_zero_shared)(a13);
              std::__shared_weak_count::__release_weak(a13);
              _Unwind_Resume(exception_object);
            }
          }
          _Unwind_Resume(exception_object);
        }
        v53 = 5;
        v40 = a21;
      }
      (*(void (**)(_QWORD *))(*v40 + 8 * v53))(v40);
      goto LABEL_26;
    }
    v47 = 5;
  }
  (*(void (**)(void))(*v46 + 8 * v47))();
  goto LABEL_11;
}

uint64_t sub_239B00B80(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    v4 = (_QWORD *)(a1 + 40);
    goto LABEL_5;
  }
  if (v5 != a2 + 16)
  {
    *(_QWORD *)(a1 + 40) = v5;
LABEL_5:
    *v4 = 0;
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 40) = a1 + 16;
  (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 24))(*v4);
LABEL_7:
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = (_QWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (!v7)
  {
    v6 = (_QWORD *)(a1 + 104);
    goto LABEL_11;
  }
  if (v7 != a2 + 80)
  {
    *(_QWORD *)(a1 + 104) = v7;
LABEL_11:
    *v6 = 0;
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 104) = a1 + 80;
  (*(void (**)(_QWORD))(*(_QWORD *)*v6 + 24))(*v6);
LABEL_13:
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v8 = (_QWORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 120) = 0;
  if (!v9)
  {
    v8 = (_QWORD *)(a1 + 160);
    goto LABEL_17;
  }
  if (v9 != a2 + 136)
  {
    *(_QWORD *)(a1 + 160) = v9;
LABEL_17:
    *v8 = 0;
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 160) = a1 + 136;
  (*(void (**)(_QWORD))(*(_QWORD *)*v8 + 24))(*v8);
LABEL_19:
  v10 = (_QWORD *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 192);
  if (!v11)
  {
    v10 = (_QWORD *)(a1 + 192);
    goto LABEL_23;
  }
  if (v11 != a2 + 168)
  {
    *(_QWORD *)(a1 + 192) = v11;
LABEL_23:
    *v10 = 0;
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 192) = a1 + 168;
  (*(void (**)(_QWORD))(*(_QWORD *)*v10 + 24))(*v10);
LABEL_25:
  v12 = (_QWORD *)(a2 + 224);
  v13 = *(_QWORD *)(a2 + 224);
  if (!v13)
  {
    v12 = (_QWORD *)(a1 + 224);
    goto LABEL_29;
  }
  if (v13 != a2 + 200)
  {
    *(_QWORD *)(a1 + 224) = v13;
LABEL_29:
    *v12 = 0;
    goto LABEL_31;
  }
  *(_QWORD *)(a1 + 224) = a1 + 200;
  (*(void (**)(_QWORD))(*(_QWORD *)*v12 + 24))(*v12);
LABEL_31:
  v14 = *(_QWORD *)(a2 + 256);
  if (v14)
  {
    v15 = (_QWORD *)(a2 + 256);
    if (v14 == a2 + 232)
    {
      *(_QWORD *)(a1 + 256) = a1 + 232;
      (*(void (**)(_QWORD))(*(_QWORD *)*v15 + 24))(*v15);
      return a1;
    }
    *(_QWORD *)(a1 + 256) = v14;
  }
  else
  {
    v15 = (_QWORD *)(a1 + 256);
  }
  *v15 = 0;
  return a1;
}

void sub_239B00D9C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8A78;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B00DAC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8A78;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B00DDC(uint64_t a1)
{
  return sub_239A82E8C((_QWORD *)(a1 + 24));
}

uint64_t sub_239B00DE8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AF8AF8;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_239B00E8C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AF8AF8;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B00F40(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  result = operator new(0x40uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF8AF8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *((_BYTE *)result + 24) = 0;
  *((_BYTE *)result + 48) = 0;
  if (*(_BYTE *)(a1 + 48))
  {
    v7 = *(_QWORD *)(a1 + 32);
    result[3] = *(_QWORD *)(a1 + 24);
    result[4] = v7;
    v8 = *(_QWORD *)(a1 + 40);
    result[5] = v8;
    if (v8)
    {
      v9 = (unint64_t *)(v8 + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    *((_BYTE *)result + 48) = 1;
  }
  result[7] = *(_QWORD *)(a1 + 56);
  return result;
}

uint64_t sub_239B00FD8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *(_QWORD *)a2 = &off_250AF8AF8;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  if (*(_BYTE *)(result + 48))
  {
    v6 = *(_QWORD *)(result + 32);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(result + 24);
    *(_QWORD *)(a2 + 32) = v6;
    v7 = *(_QWORD *)(result + 40);
    *(_QWORD *)(a2 + 40) = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 8);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    *(_BYTE *)(a2 + 48) = 1;
  }
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(result + 56);
  return result;
}

void sub_239B01050(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (!*(_BYTE *)(a1 + 48))
    goto LABEL_6;
  v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v2)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  else
  {
LABEL_6:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_239B010F8(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (*((_BYTE *)__p + 48))
  {
    v2 = (std::__shared_weak_count *)__p[5];
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B01190(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  char v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;

  v2 = a1[7];
  v3 = (std::__shared_weak_count *)a1[5];
  v13 = a1[4];
  v14 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v15 = a1[3];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v13, &v15);
  v8 = v14;
  if (v14)
  {
    v9 = (unint64_t *)&v14->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = *(_QWORD *)(a1[1] + 104);
  if (v11)
  {
    LOBYTE(v15) = v7;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v11 + 48))(v11, &v15);
  }
  return sub_239AFFEE4(v2, a1[3]);
}

void sub_239B01274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B012B8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF89E8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B0131C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF89E8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B01390(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF89E8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B013E8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF89E8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B01420(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B01478(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B014D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  uint64_t *v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  char v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  uint64_t *v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v2 = a1[3];
  ++*(_QWORD *)(v2 + 208);
  v4 = a1 + 1;
  v3 = a1[1];
  v27 = 0;
  v28 = 0;
  if (sub_23946A940(v2, (unint64_t *)(v3 + 8), &v27))
  {
    ++*(_QWORD *)(v2 + 216);
    v5 = *(_QWORD *)v4;
    v6 = *(_QWORD *)(*(_QWORD *)v4 + 40);
    if (v6)
    {
      v30 = v27;
      v31 = v28;
      if (v28)
      {
        p_shared_owners = (unint64_t *)&v28->__shared_owners_;
        do
          v8 = __ldxr(p_shared_owners);
        while (__stxr(v8 + 1, p_shared_owners));
        v6 = *(_QWORD *)(v5 + 40);
        v29 = 1;
        if (!v6)
          sub_2394172E0();
      }
      else
      {
        v29 = 1;
      }
      (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v6 + 48))(v6, &v30, &v29);
      v10 = v31;
      if (v31)
      {
        v18 = (unint64_t *)&v31->__shared_owners_;
        do
          v17 = __ldaxr(v18);
        while (__stlxr(v17 - 1, v18));
        goto LABEL_36;
      }
    }
    goto LABEL_38;
  }
  v9 = *(_QWORD *)v4;
  if (!*(_QWORD *)(v2 + 168))
  {
    v15 = *(_QWORD *)(v9 + 40);
    if (!v15)
      goto LABEL_38;
    v30 = 0;
    v31 = 0;
    v29 = 1;
    (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v15 + 48))(v15, &v30, &v29);
    v10 = v31;
    if (!v31)
      goto LABEL_38;
    v16 = (unint64_t *)&v31->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    goto LABEL_36;
  }
  v10 = (std::__shared_weak_count *)a1[2];
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    v13 = *(_QWORD *)(*(_QWORD *)v4 + 8);
    do
      v14 = __ldxr(v11);
    while (__stxr(v14 + 1, v11));
  }
  else
  {
    v13 = *(_QWORD *)(v9 + 8);
  }
  v32 = 0;
  v19 = (uint64_t *)operator new(0x20uLL);
  *v19 = (uint64_t)&off_250AF8A30;
  v19[1] = v9;
  v19[2] = (uint64_t)v10;
  v19[3] = v2;
  v32 = v19;
  v20 = sub_239A82B00(v2, v13, &v30);
  v21 = v32;
  if (v32 == &v30)
  {
    v22 = 4;
    v21 = &v30;
  }
  else
  {
    if (!v32)
      goto LABEL_31;
    v22 = 5;
  }
  (*(void (**)(void))(*v21 + 8 * v22))();
LABEL_31:
  if ((v20 & 1) == 0)
  {
    sub_239AFE6F4(*(unsigned int **)(v2 + 288), v4);
    --*(_QWORD *)(v2 + 208);
  }
  if (v10)
  {
    v23 = (unint64_t *)&v10->__shared_owners_;
    do
      v17 = __ldaxr(v23);
    while (__stlxr(v17 - 1, v23));
LABEL_36:
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_38:
  v24 = v28;
  if (v28)
  {
    v25 = (unint64_t *)&v28->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_239B01770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, char a12, std::__shared_weak_count *a13, uint64_t a14, uint64_t a15)
{
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a13)
  {
    p_shared_owners = (unint64_t *)&a13->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a13->__on_zero_shared)(a13);
      std::__shared_weak_count::__release_weak(a13);
    }
  }
  if (a10)
  {
    v18 = (unint64_t *)&a10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B018A8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8A30;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B0190C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8A30;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B01980(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8A30;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B019D8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8A30;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B01A10(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B01A68(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B01AC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  uint64_t v32[2];
  std::__shared_weak_count *v33;
  char v34;
  _BYTE v35[24];
  _BYTE *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 24);
  v37 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  v3 = *(_QWORD *)(v2 + 168);
  if (!v3)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v3 + 48))(&v30, v3, &v37);
  v4 = *(_QWORD *)(a1 + 8);
  if (v30)
  {
    v5 = *(_QWORD *)(v4 + 40);
    if (v5)
    {
      v37 = v30;
      v38 = v31;
      if (v31)
      {
        p_shared_owners = (unint64_t *)&v31->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        v5 = *(_QWORD *)(v4 + 40);
        LOBYTE(v32[0]) = 1;
        if (!v5)
          sub_2394172E0();
      }
      else
      {
        LOBYTE(v32[0]) = 1;
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v5 + 48))(v5, &v37, v32);
      v12 = v38;
      if (v38)
      {
        v13 = (unint64_t *)&v38->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
    }
    v32[0] = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
    v32[1] = v30;
    v33 = v31;
    if (v31)
    {
      v15 = (unint64_t *)&v31->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    v34 = 1;
    v17 = v35;
    v36 = 0;
    sub_239B01EF8((uint64_t)&v37, v32);
    v18 = operator new(0x120uLL);
    v18[1] = 0;
    v18[2] = 0;
    *v18 = &off_250AF8A78;
    *(_QWORD *)&v29 = sub_239B00B80((uint64_t)(v18 + 3), (uint64_t)&v37);
    *((_QWORD *)&v29 + 1) = v18;
    sub_239A82E8C(&v37);
    if (v36 == v35)
    {
      v19 = 4;
    }
    else
    {
      if (!v36)
        goto LABEL_30;
      v19 = 5;
      v17 = v36;
    }
    (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
LABEL_30:
    v20 = v33;
    if (v33)
    {
      v21 = (unint64_t *)&v33->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    sub_239AFE6F4(*(unsigned int **)(v2 + 288), &v29);
    v23 = (std::__shared_weak_count *)*((_QWORD *)&v29 + 1);
    if (*((_QWORD *)&v29 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    goto LABEL_40;
  }
  v8 = *(_QWORD *)(v4 + 40);
  if (v8)
  {
    v37 = 0;
    v38 = 0;
    LOBYTE(v32[0]) = 1;
    (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v8 + 48))(v8, &v37, v32);
    v9 = v38;
    if (v38)
    {
      v10 = (unint64_t *)&v38->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  sub_239AFFEE4(v2, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8));
LABEL_40:
  v26 = v31;
  if (v31)
  {
    v27 = (unint64_t *)&v31->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
}

void sub_239B01DBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,std::__shared_weak_count *a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;

  if (a22)
  {
    p_shared_owners = (unint64_t *)&a22->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a22->__on_zero_shared)(a22);
      std::__shared_weak_count::__release_weak(a22);
    }
  }
  if (a12)
  {
    v25 = (unint64_t *)&a12->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B01EF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = 1;
  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v4;
  v6 = a2[2];
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 24);
  v9 = a2[7];
  if (v9)
  {
    if ((uint64_t *)v9 == a2 + 4)
    {
      *(_QWORD *)(a1 + 104) = a1 + 80;
      (*(void (**)(uint64_t))(*(_QWORD *)a2[7] + 24))(a2[7]);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  *(_QWORD *)(a1 + 104) = v9;
LABEL_9:
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  v10 = *a2;
  *(_QWORD *)(a1 + 8) = *a2;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 112) = v10;
  return a1;
}

void sub_239B01FC0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = *(std::__shared_weak_count **)(v1 + 64);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = *(_QWORD **)(v1 + 40);
  if (v6 == (_QWORD *)(v1 + 16))
  {
    v7 = 4;
    v6 = (_QWORD *)(v1 + 16);
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  _Unwind_Resume(exception_object);
}

void sub_239B02034(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8988;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B02044(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8988;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B02074(uint64_t a1)
{
  pthread_mutex_t *v2;
  int v3;

  v2 = (pthread_mutex_t *)(a1 + 200);
  sub_2397A1694((pthread_mutex_t *)(a1 + 200));
  v3 = *(unsigned __int8 *)(a1 + 80);
  sub_2397A16B4(v2);
  if (!v3)
    sub_239B020F8(a1 + 24);
  sub_2397A1694(v2);
  sub_2397A16B4(v2);
  pthread_cond_destroy((pthread_cond_t *)(a1 + 104));
  pthread_cond_destroy((pthread_cond_t *)(a1 + 152));
  sub_2397A163C(v2);
  return sub_239A7BCF8(a1 + 32);
}

uint64_t sub_239B020F8(uint64_t a1)
{
  pthread_mutex_t *v2;
  uint64_t v4;

  v2 = (pthread_mutex_t *)(a1 + 176);
  sub_2397A1694((pthread_mutex_t *)(a1 + 176));
  *(_BYTE *)(a1 + 56) = 1;
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 64) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 80)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 64) <= 0)
        goto LABEL_4;
    }
    v4 = 261;
LABEL_15:
    sub_239A444D4((uint64_t)"unknown file", v4, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
LABEL_4:
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  while (*(_QWORD *)(a1 + 48) && *(uint64_t *)(a1 + 72) >= 1)
  {
    if (pthread_cond_wait((pthread_cond_t *)(a1 + 80), v2))
    {
      sub_239A444D4((uint64_t)"unknown file", 277, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 72) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 128)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 72) <= 0)
        return sub_2397A16B4(v2);
    }
    v4 = 287;
    goto LABEL_15;
  }
  return sub_2397A16B4(v2);
}

void sub_239B02278(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

void sub_239B02298(uint64_t a1)
{
  sub_239B022BC(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B022BC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  uint64_t v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t i;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = &off_250AF8968;
  if (*(_QWORD *)(a1 + 272))
  {
    v3 = *(_QWORD *)(a1 + 240);
    v2 = *(std::__shared_weak_count **)(a1 + 248);
    if (!v2)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (v6)
    {
LABEL_7:
      if (v3)
        goto LABEL_10;
      goto LABEL_8;
    }
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (!v3)
LABEL_8:
      sub_2397A3758(*(_QWORD *)(a1 + 272));
  }
LABEL_10:
  v7 = *(_QWORD *)(a1 + 288);
  if (v7)
    sub_239B020F8(v7);
  while (1)
  {
    v42[0] = &off_250AF8CF0;
    v43 = v42;
    sub_2397A1694((pthread_mutex_t *)(a1 + 344));
    v8 = *(_QWORD *)(a1 + 328);
    if (!v8)
    {
      if (!v43)
        sub_2394172E0();
      (*(void (**)(_QWORD *))(*v43 + 48))(v43);
    }
    sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
    v9 = v43;
    if (v43 == v42)
    {
      v9 = v42;
      v10 = 4;
    }
    else
    {
      if (!v43)
        goto LABEL_20;
      v10 = 5;
    }
    (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_20:
    if (!v8)
      break;
    sub_2397A186C(1);
  }
  v11 = *(_QWORD *)(a1 + 256);
  if (v11)
  {
    sub_2397A195C(v11);
    v12 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 264) = 0;
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  if (*(_QWORD *)(a1 + 288))
  {
    v15 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = 0;
    *(_QWORD *)(a1 + 296) = 0;
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_QWORD *)(a1 + 328))
  {
    v18 = *(_QWORD **)(a1 + 320);
    if (v18)
    {
      do
      {
        v19 = (_QWORD *)*v18;
        operator delete(v18);
        v18 = v19;
      }
      while (v19);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v20 = *(_QWORD *)(a1 + 312);
    if (v20)
    {
      for (i = 0; i != v20; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 304) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  sub_2397A163C((pthread_mutex_t *)(a1 + 344));
  v22 = *(_QWORD **)(a1 + 320);
  if (v22)
  {
    do
    {
      v23 = (_QWORD *)*v22;
      operator delete(v22);
      v22 = v23;
    }
    while (v23);
  }
  v24 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = 0;
  if (v24)
    operator delete(v24);
  v25 = *(std::__shared_weak_count **)(a1 + 296);
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = *(std::__shared_weak_count **)(a1 + 280);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = *(std::__shared_weak_count **)(a1 + 264);
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = *(std::__shared_weak_count **)(a1 + 248);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = *(_QWORD **)(a1 + 200);
  if (v37 == (_QWORD *)(a1 + 176))
  {
    v38 = 4;
    v37 = (_QWORD *)(a1 + 176);
LABEL_69:
    (*(void (**)(void))(*v37 + 8 * v38))();
  }
  else if (v37)
  {
    v38 = 5;
    goto LABEL_69;
  }
  v39 = *(_QWORD **)(a1 + 168);
  if (v39 == (_QWORD *)(a1 + 144))
  {
    v40 = 4;
    v39 = (_QWORD *)(a1 + 144);
LABEL_74:
    (*(void (**)(void))(*v39 + 8 * v40))();
  }
  else if (v39)
  {
    v40 = 5;
    goto LABEL_74;
  }
  return sub_2394679A8(a1);
}

void sub_239B0266C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_239416A48(exception_object);
}

void sub_239B026E8()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B026FC()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF8CF0;
  return result;
}

void sub_239B02720(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF8CF0;
}

void sub_239B02740()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B02754()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF4148;
  return result;
}

void sub_239B02778(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF4148;
}

uint64_t sub_239B02790(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return 0;
}

uint64_t sub_239B027E8(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = off_250AF4100;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v6 = (_QWORD *)*v2;
    v7 = v2[3];
    if (v7)
    {
      v8 = v2[4];
      v5 = (void *)v2[3];
      if (v8 != v7)
      {
        do
        {
          if (*(char *)(v8 - 1) < 0)
            operator delete(*(void **)(v8 - 24));
          v8 -= 24;
        }
        while (v8 != v7);
        v5 = (void *)v2[3];
      }
      v2[4] = v7;
      operator delete(v5);
    }
    operator delete(v2);
    v2 = v6;
  }
  while (v6);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void sub_239B028B4(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_250AF4100;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v5 = (_QWORD *)*v2;
    v6 = v2[3];
    if (v6)
    {
      v7 = v2[4];
      v4 = (void *)v2[3];
      if (v7 != v6)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0)
            operator delete(*(void **)(v7 - 24));
          v7 -= 24;
        }
        while (v7 != v6);
        v4 = (void *)v2[3];
      }
      v2[4] = v6;
      operator delete(v4);
    }
    operator delete(v2);
    v2 = v5;
  }
  while (v5);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B02990(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = a1 + 8;
  v2 = operator new(0x48uLL);
  *v2 = off_250AF4100;
  sub_239AFC55C((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_239B029D0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B029E4(uint64_t a1, _QWORD *a2)
{
  *a2 = off_250AF4100;
  return sub_239AFC55C((uint64_t)(a2 + 1), a1 + 8);
}

void sub_239B02A00(uint64_t a1)
{
  sub_239AA5734(a1 + 8);
}

void sub_239B02A08(void *a1)
{
  sub_239AA5734((uint64_t)a1 + 8);
  operator delete(a1);
}

void sub_239B02A30(int8x8_t *a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  int8x8_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::__fs::filesystem::path __p;
  unsigned __int8 v23;

  v4 = a1[2];
  if (!*(_QWORD *)&v4)
    goto LABEL_21;
  v5 = *a2;
  v6 = (uint8x8_t)vcnt_s8(v4);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v7 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v7 = (*(_QWORD *)&v4 - 1) & v5;
  }
  v8 = a1[1];
  v9 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v7);
  if (!v9 || (v10 = (_QWORD *)*v9) == 0)
  {
LABEL_21:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  v11 = *(_QWORD *)&v4 - 1;
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v12 = v10[1];
      if (v12 == v5)
      {
        if (v10[2] == v5)
          goto LABEL_23;
      }
      else if ((v12 & v11) != v7)
      {
        goto LABEL_21;
      }
      v10 = (_QWORD *)*v10;
      if (!v10)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v13 = v10[1];
    if (v13 == v5)
      break;
    if (v13 >= *(_QWORD *)&v4)
      v13 %= *(_QWORD *)&v4;
    if (v13 != v7)
      goto LABEL_21;
LABEL_16:
    v10 = (_QWORD *)*v10;
    if (!v10)
      goto LABEL_21;
  }
  if (v10[2] != v5)
    goto LABEL_16;
LABEL_23:
  if (v6.u32[0] > 1uLL)
  {
    v14 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v14 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v14 = v11 & v5;
  }
  v15 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v14);
  if (!v15 || (v16 = (_QWORD *)*v15) == 0)
LABEL_53:
    sub_23941D898("unordered_map::at: key not found");
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v17 = v16[1];
      if (v17 == v5)
      {
        if (v16[2] == v5)
          goto LABEL_35;
      }
      else if ((v17 & v11) != v14)
      {
        goto LABEL_53;
      }
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_53;
    }
  }
  while (2)
  {
    v18 = v16[1];
    if (v18 != v5)
    {
      if (v18 >= *(_QWORD *)&v4)
        v18 %= *(_QWORD *)&v4;
      if (v18 != v14)
        goto LABEL_53;
      goto LABEL_41;
    }
    if (v16[2] != v5)
    {
LABEL_41:
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_53;
      continue;
    }
    break;
  }
LABEL_35:
  sub_2396F295C(v16 + 3, (uint64_t)&a1[6], (uint64_t)&__p);
  std::__fs::filesystem::__status(&__p, 0);
  if (v23 != 255 && v23)
  {
    v19 = (std::__shared_weak_count *)operator new(0x78uLL);
    v19->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v19->__shared_owners_;
    v19->__shared_weak_owners_ = 0;
    v19->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB7B8;
    v19[1].std::__shared_count = (std::__shared_count)xmmword_239EC65B0;
    *(_OWORD *)&v19[1].__shared_weak_owners_ = 0u;
    *(_OWORD *)&v19[2].__shared_owners_ = 0u;
    v19[3].std::__shared_count = 0u;
    *(_OWORD *)&v19[3].__shared_weak_owners_ = 0u;
    *(_OWORD *)&v19[4].__shared_owners_ = 0u;
    if (sub_239B02D38((uint64_t)&v19[1]))
    {
      *a3 = v19 + 1;
      a3[1] = v19;
    }
    else
    {
      *a3 = 0;
      a3[1] = 0;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
}

BOOL sub_239B02D38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  _BOOL8 v8;
  std::string::size_type size;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  const void *v14[4];
  void *v15[3];
  uint64_t v16[2];
  _QWORD v17[11];
  char v18;
  uint64_t v19;
  void *v20[2];
  unsigned __int8 v21;
  char v22;
  std::string v23;
  _QWORD v24[2];
  _BYTE v25[408];
  _QWORD v26[20];

  v26[19] = *MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEDB838];
  v3 = MEMORY[0x24BEDB838] + 64;
  v4 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v26[0] = MEMORY[0x24BEDB838] + 64;
  v24[0] = v5;
  *(_QWORD *)((char *)v24 + *(_QWORD *)(v5 - 24)) = v6;
  v24[1] = 0;
  v7 = (std::ios_base *)((char *)v24 + *(_QWORD *)(v24[0] - 24));
  std::ios_base::init(v7, v25);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  v24[0] = v2 + 24;
  v26[0] = v3;
  MEMORY[0x23B83DC80](v25);
  std::ifstream::open();
  if ((v25[*(_QWORD *)(v24[0] - 24) + 16] & 5) != 0)
  {
    v8 = 0;
    goto LABEL_26;
  }
  HIBYTE(v14[2]) = 18;
  strcpy((char *)v14, "CorePhotogrammetry");
  sub_2395AC84C(v14, v15);
  sub_239A7D600(&v23, *(_QWORD **)&v25[*(_QWORD *)(v24[0] - 24) + 24]);
  size = HIBYTE(v23.__r_.__value_.__r.__words[2]);
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v23.__r_.__value_.__l.__size_;
  if (size)
  {
    sub_2395AC2E8((const void **)&v23.__r_.__value_.__l.__data_, (uint64_t)v15, (uint64_t)v20);
    v8 = v22 != 0;
    if (v22)
    {
      sub_2394988CC((uint64_t)v16);
      if ((v21 & 0x80u) == 0)
        v10 = v20;
      else
        v10 = (void **)v20[0];
      if ((v21 & 0x80u) == 0)
        v11 = v21;
      else
        v11 = (uint64_t)v20[1];
      sub_239458500(v17, (uint64_t)v10, v11);
      sub_2395ADB14(v16, a1);
      v16[0] = *MEMORY[0x24BEDB7F0];
      v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      *(uint64_t *)((char *)v16 + *(_QWORD *)(v16[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v17[0] = v12;
      v17[1] = MEMORY[0x24BEDB848] + 16;
      if (v18 < 0)
        operator delete((void *)v17[9]);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x23B83E250](&v19);
      if (v22 && (char)v21 < 0)
        operator delete(v20[0]);
    }
    if ((*((_BYTE *)&v23.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_20;
  }
  else
  {
    v8 = 0;
    if ((*((_BYTE *)&v23.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_20;
  }
  operator delete(v23.__r_.__value_.__l.__data_);
LABEL_20:
  if (v15[0])
  {
    v15[1] = v15[0];
    operator delete(v15[0]);
  }
  if (SHIBYTE(v14[2]) < 0)
    operator delete((void *)v14[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v24 + *(_QWORD *)(v24[0] - 24)), *(_DWORD *)&v25[*(_QWORD *)(v24[0] - 24) + 16] | 4);
LABEL_26:
  v24[0] = *v4;
  *(_QWORD *)((char *)v24 + *(_QWORD *)(v24[0] - 24)) = v4[3];
  MEMORY[0x23B83DC8C](v25);
  std::istream::~istream();
  MEMORY[0x23B83E250](v26);
  return v8;
}

void sub_239B03038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *__p,uint64_t a55,int a56,__int16 a57,char a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  uint64_t a67;
  void *v68;

  if (a60)
  {
    if (a59 < 0)
      operator delete(__p);
  }
  if (a66 < 0)
  {
    operator delete(a61);
    v68 = a16;
    if (!a16)
    {
LABEL_6:
      if ((a14 & 0x80000000) == 0)
      {
LABEL_11:
        sub_23955CB90(&a67);
        _Unwind_Resume(a1);
      }
LABEL_10:
      operator delete(a9);
      goto LABEL_11;
    }
  }
  else
  {
    v68 = a16;
    if (!a16)
      goto LABEL_6;
  }
  operator delete(v68);
  if ((a14 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

void sub_239B030EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

void sub_239B03114(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF88A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B03124(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF88A0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B03154(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_239B03164(uint64_t a1, uint64_t *a2, unint64_t **a3)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  const std::locale::facet *v15;
  std::string *v16;
  __int128 v17;
  unsigned __int8 v18;
  int v19;
  void **v20;
  void **v21;
  void **v22;
  void *v23;
  __int128 *v24;
  _QWORD *v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  std::string v33;
  void *__p[2];
  std::string::size_type v35;
  std::locale v36;
  char v37;
  _QWORD v38[2];
  _QWORD v39[11];
  char v40;
  uint64_t v41;
  unint64_t v42;
  __int128 v43;
  __int128 v44;
  int v45;
  uint64_t v46;

  if (!*(_BYTE *)(a1 + 4))
  {
    sub_239A444D4((uint64_t)"unknown file", 925, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  kdebug_trace();
  v6 = *a2;
  if (*(_QWORD *)(*a2 + 200))
  {
    LOBYTE(v43) = 0;
    v38[0] = sub_239B03660;
    v38[1] = 0;
    v39[0] = v6;
    sub_239B0397C((uint64_t)v38, (uint64_t)&v43);
  }
  v31 = a1;
  kdebug_trace();
  v43 = 0u;
  v44 = 0u;
  v45 = 1065353216;
  v8 = *a3;
  v7 = a3[1];
  if (*a3 != v7)
  {
    v9 = *MEMORY[0x24BEDB7F0];
    v10 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    v32 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
    v11 = MEMORY[0x24BEDB848] + 16;
    do
    {
      v12 = *v8;
      v42 = *v8;
      sub_2394988CC((uint64_t)v38);
      v13 = v39[0];
      v14 = (char *)v39 + *(_QWORD *)(v39[0] - 24);
      if (*((_DWORD *)v14 + 36) == -1)
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v39 + *(_QWORD *)(v39[0] - 24)));
        v15 = std::locale::use_facet(&v36, MEMORY[0x24BEDB350]);
        ((void (*)(const std::locale::facet *, uint64_t))v15->__vftable[2].~facet_0)(v15, 32);
        std::locale::~locale(&v36);
        v13 = v39[0];
      }
      *((_DWORD *)v14 + 36) = 48;
      *(_QWORD *)((char *)&v39[3] + *(_QWORD *)(v13 - 24)) = 8;
      std::ostream::operator<<();
      std::stringbuf::str();
      v16 = std::string::append(&v33, ".bin");
      v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
      v35 = v16->__r_.__value_.__r.__words[2];
      *(_OWORD *)__p = v17;
      v16->__r_.__value_.__l.__size_ = 0;
      v16->__r_.__value_.__r.__words[2] = 0;
      v16->__r_.__value_.__r.__words[0] = 0;
      sub_2395ACAA8((uint64_t)__p, (char *)&v36);
      if (SHIBYTE(v35) < 0)
      {
        operator delete(__p[0]);
        if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_11;
      }
      else if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_11;
      }
      operator delete(v33.__r_.__value_.__l.__data_);
LABEL_11:
      sub_2396F2748(__p, (uint64_t *)(v31 + 392), (uint64_t)&v36);
      sub_2396F295C((uint64_t *)__p, v31 + 8, (uint64_t)&v33);
      std::__fs::filesystem::__status((const std::__fs::filesystem::path *)&v33, 0);
      v18 = v46;
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v33.__r_.__value_.__l.__data_);
        v19 = v18;
        if (v18)
        {
LABEL_17:
          if (v19 != 255)
          {
            v20 = (void **)(sub_239A9A10C((uint64_t)&v43, v12, &v42) + 3);
            if (v20 != __p)
              sub_239A70694((uint64_t)v20, (std::string *)__p[0], (std::string *)__p[1], 0xAAAAAAAAAAAAAAABLL * (((char *)__p[1] - (char *)__p[0]) >> 3));
          }
        }
      }
      else
      {
        v19 = v46;
        if ((_BYTE)v46)
          goto LABEL_17;
      }
      v21 = (void **)__p[0];
      if (__p[0])
      {
        v22 = (void **)__p[1];
        v23 = __p[0];
        if (__p[1] != __p[0])
        {
          do
          {
            if (*((char *)v22 - 1) < 0)
              operator delete(*(v22 - 3));
            v22 -= 3;
          }
          while (v22 != v21);
          v23 = __p[0];
        }
        __p[1] = v21;
        operator delete(v23);
      }
      if (v37 < 0)
        operator delete(v36.__locale_);
      v38[0] = v9;
      *(_QWORD *)((char *)v38 + *(_QWORD *)(v9 - 24)) = v32;
      v39[0] = v10;
      v39[1] = v11;
      if (v40 < 0)
        operator delete((void *)v39[9]);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x23B83E250](&v41);
      ++v8;
    }
    while (v8 != v7);
  }
  v24 = (__int128 *)(v31 + 1200);
  if (!*(_BYTE *)(v31 + 1240))
  {
    sub_239A8DC0C((uint64_t)v24, (uint64_t)&v43);
    *(_BYTE *)(v31 + 1240) = 1;
    v25 = (_QWORD *)v44;
    if (!(_QWORD)v44)
      goto LABEL_38;
    goto LABEL_44;
  }
  if (v24 != &v43)
  {
    *(_DWORD *)(v31 + 1232) = v45;
    sub_239B03B40(v24, (uint64_t **)v44);
  }
  v25 = (_QWORD *)v44;
  if ((_QWORD)v44)
  {
    do
    {
LABEL_44:
      v28 = (_QWORD *)*v25;
      v29 = v25[3];
      if (v29)
      {
        v30 = v25[4];
        v27 = (void *)v25[3];
        if (v30 != v29)
        {
          do
          {
            if (*(char *)(v30 - 1) < 0)
              operator delete(*(void **)(v30 - 24));
            v30 -= 24;
          }
          while (v30 != v29);
          v27 = (void *)v25[3];
        }
        v25[4] = v29;
        operator delete(v27);
      }
      operator delete(v25);
      v25 = v28;
    }
    while (v28);
  }
LABEL_38:
  v26 = (void *)v43;
  *(_QWORD *)&v43 = 0;
  if (v26)
    operator delete(v26);
}

void sub_239B035B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  uint64_t v32;

  sub_239A8E020(v32 - 144);
  _Unwind_Resume(a1);
}

uint64_t sub_239B03660(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 654, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 100;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v24 = v3;
    goto LABEL_12;
  }
  v24 = &v23;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8A78;
  *(_QWORD *)&v12 = sub_239B00B80((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239AFE6F4(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239B03864(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B03870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,_QWORD *a43)
{
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  if (a43 == v46)
  {
    v48 = 4;
  }
  else
  {
    if (!a43)
      goto LABEL_6;
    v48 = 5;
    v46 = a43;
  }
  (*(void (**)(_QWORD *))(*v46 + 8 * v48))(v46);
LABEL_6:
  if (a39 == v45)
  {
    v49 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_11;
    v49 = 5;
    v45 = a39;
  }
  (*(void (**)(_QWORD *))(*v45 + 8 * v49))(v45);
LABEL_11:
  sub_239A8303C(v44);
  sub_239A83110(v43);
  v50 = a20;
  if (a20 == &a17)
  {
    v51 = 4;
    v50 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_16;
    v51 = 5;
  }
  (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_16:
  v52 = a14;
  if (a14 == &a11)
  {
    v53 = 4;
    v52 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v53 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v52 + 8 * v53))();
  _Unwind_Resume(a1);
}

uint64_t sub_239B0397C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, _QWORD *);
  _QWORD *v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  pthread_cond_t v18;
  pthread_cond_t v19;
  pthread_mutex_t v20;
  _QWORD v21[3];
  _QWORD *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  sub_2397A1618(&v20);
  v11 = 0x7FFFFFFF;
  pthread_cond_init(&v18, 0);
  pthread_cond_init(&v19, 0);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(uint64_t (**)(_QWORD *, _QWORD *))a1;
  v6 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v4 >> 1));
  if ((v4 & 1) != 0)
    v5 = *(uint64_t (**)(_QWORD *, _QWORD *))(*v6 + v5);
  v21[0] = &off_250AF73F8;
  v21[1] = &v11;
  v21[2] = a2;
  v22 = v21;
  v7 = v5(v6, v21);
  v8 = v22;
  if (v22 == v21)
  {
    v9 = 4;
    v8 = v21;
  }
  else
  {
    if (!v22)
      goto LABEL_8;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_8:
  if (v7)
  {
    sub_2395BFB54(&v11);
    sub_2395C2A4C((uint64_t)&v11);
  }
  return sub_2395C29C4((uint64_t)&v11);
}

void sub_239B03AD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B03B1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_239B03B40(_QWORD *a1, uint64_t **a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t *v6;
  uint64_t *v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v4 = a1[1];
  if (!v4)
    goto LABEL_9;
  for (i = 0; i != v4; ++i)
    *(_QWORD *)(*a1 + 8 * i) = 0;
  v6 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v6)
  {
    while (a2)
    {
      v6[2] = (uint64_t)a2[2];
      if (v6 != (uint64_t *)a2)
        sub_239A70694((uint64_t)(v6 + 3), (std::string *)a2[3], (std::string *)a2[4], 0xAAAAAAAAAAAAAAABLL * (a2[4] - a2[3]));
      v7 = (uint64_t *)*v6;
      sub_239A997F8((uint64_t)a1, v6);
      a2 = (uint64_t **)*a2;
      v6 = v7;
      if (!v7)
        goto LABEL_9;
    }
    do
    {
      v9 = (uint64_t *)*v6;
      v10 = v6[3];
      if (v10)
      {
        v11 = v6[4];
        v8 = (void *)v6[3];
        if (v11 != v10)
        {
          do
          {
            if (*(char *)(v11 - 1) < 0)
              operator delete(*(void **)(v11 - 24));
            v11 -= 24;
          }
          while (v11 != v10);
          v8 = (void *)v6[3];
        }
        v6[4] = v10;
        operator delete(v8);
      }
      operator delete(v6);
      v6 = v9;
    }
    while (v9);
  }
  else
  {
LABEL_9:
    while (a2)
    {
      v12 = (char *)operator new(0x30uLL);
      *(_QWORD *)v12 = 0;
      *((_QWORD *)v12 + 1) = 0;
      *((_QWORD *)v12 + 2) = a2[2];
      *((_QWORD *)v12 + 3) = 0;
      *((_QWORD *)v12 + 4) = 0;
      *((_QWORD *)v12 + 5) = 0;
      sub_239490944(v12 + 24, (uint64_t)a2[3], (uint64_t)a2[4], 0xAAAAAAAAAAAAAAABLL * (a2[4] - a2[3]));
      *((_QWORD *)v12 + 1) = *((_QWORD *)v12 + 2);
      sub_239A997F8((uint64_t)a1, v12);
      a2 = (uint64_t **)*a2;
    }
  }
}

void sub_239B03CC0(void *a1)
{
  _QWORD *v1;

  __cxa_begin_catch(a1);
  sub_239B03D04(v1);
  __cxa_rethrow();
}

void sub_239B03CD8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239B03CEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239A8E0C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B03D04(_QWORD *a1)
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  do
  {
    v3 = (_QWORD *)*a1;
    v4 = a1[3];
    if (v4)
    {
      v5 = a1[4];
      v2 = (void *)a1[3];
      if (v5 != v4)
      {
        do
        {
          if (*(char *)(v5 - 1) < 0)
            operator delete(*(void **)(v5 - 24));
          v5 -= 24;
        }
        while (v5 != v4);
        v2 = (void *)a1[3];
      }
      a1[4] = v4;
      operator delete(v2);
    }
    operator delete(a1);
    a1 = v3;
  }
  while (v3);
}

void sub_239B03D8C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B03DA0(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF73F8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B03DD8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF73F8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B03DF8(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

_QWORD *sub_239B03E2C(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[4];

  v6[3] = *MEMORY[0x24BDAC8D0];
  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_239B03F94(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

uint64_t sub_239B03FA0(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = off_250AF4190;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v6 = (_QWORD *)*v2;
    v7 = v2[3];
    if (v7)
    {
      v8 = v2[4];
      v5 = (void *)v2[3];
      if (v8 != v7)
      {
        do
        {
          if (*(char *)(v8 - 1) < 0)
            operator delete(*(void **)(v8 - 24));
          v8 -= 24;
        }
        while (v8 != v7);
        v5 = (void *)v2[3];
      }
      v2[4] = v7;
      operator delete(v5);
    }
    operator delete(v2);
    v2 = v6;
  }
  while (v6);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void sub_239B0406C(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_250AF4190;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v5 = (_QWORD *)*v2;
    v6 = v2[3];
    if (v6)
    {
      v7 = v2[4];
      v4 = (void *)v2[3];
      if (v7 != v6)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0)
            operator delete(*(void **)(v7 - 24));
          v7 -= 24;
        }
        while (v7 != v6);
        v4 = (void *)v2[3];
      }
      v2[4] = v6;
      operator delete(v4);
    }
    operator delete(v2);
    v2 = v5;
  }
  while (v5);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B04148(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = a1 + 8;
  v2 = operator new(0x48uLL);
  *v2 = off_250AF4190;
  sub_239B048C4((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_239B04188(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B0419C(uint64_t a1, _QWORD *a2)
{
  *a2 = off_250AF4190;
  return sub_239B048C4((uint64_t)(a2 + 1), a1 + 8);
}

void sub_239B041B8(uint64_t a1)
{
  sub_239AA5734(a1 + 8);
}

void sub_239B041C0(void *a1)
{
  sub_239AA5734((uint64_t)a1 + 8);
  operator delete(a1);
}

void sub_239B041E8(int8x8_t *a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  int8x8_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::__fs::filesystem::path __p;
  unsigned __int8 v23;

  v4 = a1[2];
  if (!*(_QWORD *)&v4)
    goto LABEL_21;
  v5 = *a2;
  v6 = (uint8x8_t)vcnt_s8(v4);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v7 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v7 = (*(_QWORD *)&v4 - 1) & v5;
  }
  v8 = a1[1];
  v9 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v7);
  if (!v9 || (v10 = (_QWORD *)*v9) == 0)
  {
LABEL_21:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  v11 = *(_QWORD *)&v4 - 1;
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v12 = v10[1];
      if (v12 == v5)
      {
        if (v10[2] == v5)
          goto LABEL_23;
      }
      else if ((v12 & v11) != v7)
      {
        goto LABEL_21;
      }
      v10 = (_QWORD *)*v10;
      if (!v10)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v13 = v10[1];
    if (v13 == v5)
      break;
    if (v13 >= *(_QWORD *)&v4)
      v13 %= *(_QWORD *)&v4;
    if (v13 != v7)
      goto LABEL_21;
LABEL_16:
    v10 = (_QWORD *)*v10;
    if (!v10)
      goto LABEL_21;
  }
  if (v10[2] != v5)
    goto LABEL_16;
LABEL_23:
  if (v6.u32[0] > 1uLL)
  {
    v14 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v14 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v14 = v11 & v5;
  }
  v15 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v14);
  if (!v15 || (v16 = (_QWORD *)*v15) == 0)
LABEL_53:
    sub_23941D898("unordered_map::at: key not found");
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v17 = v16[1];
      if (v17 == v5)
      {
        if (v16[2] == v5)
          goto LABEL_35;
      }
      else if ((v17 & v11) != v14)
      {
        goto LABEL_53;
      }
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_53;
    }
  }
  while (2)
  {
    v18 = v16[1];
    if (v18 != v5)
    {
      if (v18 >= *(_QWORD *)&v4)
        v18 %= *(_QWORD *)&v4;
      if (v18 != v14)
        goto LABEL_53;
      goto LABEL_41;
    }
    if (v16[2] != v5)
    {
LABEL_41:
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_53;
      continue;
    }
    break;
  }
LABEL_35:
  sub_2396F295C(v16 + 3, (uint64_t)&a1[6], (uint64_t)&__p);
  std::__fs::filesystem::__status(&__p, 0);
  if (v23 != 255 && v23)
  {
    v19 = (std::__shared_weak_count *)operator new(0x40uLL);
    v19->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v19->__shared_owners_;
    v19->__shared_weak_owners_ = 0;
    v19->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBF90;
    v19[1].std::__shared_count = 0u;
    v19[2].__shared_owners_ = 0;
    *(_OWORD *)&v19[1].__shared_weak_owners_ = 0u;
    LODWORD(v19[2].__shared_owners_) = 1065353216;
    if (sub_239B044E4(&v19[1].__vftable))
    {
      *a3 = v19 + 1;
      a3[1] = v19;
    }
    else
    {
      *a3 = 0;
      a3[1] = 0;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
}

BOOL sub_239B044E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  _BOOL8 v8;
  std::string::size_type size;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  const void *v14[4];
  void *v15[3];
  uint64_t v16[2];
  _QWORD v17[11];
  char v18;
  uint64_t v19;
  void *v20[2];
  unsigned __int8 v21;
  char v22;
  std::string v23;
  _QWORD v24[2];
  _BYTE v25[408];
  _QWORD v26[20];

  v26[19] = *MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEDB838];
  v3 = MEMORY[0x24BEDB838] + 64;
  v4 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v26[0] = MEMORY[0x24BEDB838] + 64;
  v24[0] = v5;
  *(_QWORD *)((char *)v24 + *(_QWORD *)(v5 - 24)) = v6;
  v24[1] = 0;
  v7 = (std::ios_base *)((char *)v24 + *(_QWORD *)(v24[0] - 24));
  std::ios_base::init(v7, v25);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  v24[0] = v2 + 24;
  v26[0] = v3;
  MEMORY[0x23B83DC80](v25);
  std::ifstream::open();
  if ((v25[*(_QWORD *)(v24[0] - 24) + 16] & 5) != 0)
  {
    v8 = 0;
    goto LABEL_26;
  }
  HIBYTE(v14[2]) = 18;
  strcpy((char *)v14, "CorePhotogrammetry");
  sub_2395AC84C(v14, v15);
  sub_239A7D600(&v23, *(_QWORD **)&v25[*(_QWORD *)(v24[0] - 24) + 24]);
  size = HIBYTE(v23.__r_.__value_.__r.__words[2]);
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v23.__r_.__value_.__l.__size_;
  if (size)
  {
    sub_2395AC2E8((const void **)&v23.__r_.__value_.__l.__data_, (uint64_t)v15, (uint64_t)v20);
    v8 = v22 != 0;
    if (v22)
    {
      sub_2394988CC((uint64_t)v16);
      if ((v21 & 0x80u) == 0)
        v10 = v20;
      else
        v10 = (void **)v20[0];
      if ((v21 & 0x80u) == 0)
        v11 = v21;
      else
        v11 = (uint64_t)v20[1];
      sub_239458500(v17, (uint64_t)v10, v11);
      sub_23960C06C(v16, a1, 1);
      v16[0] = *MEMORY[0x24BEDB7F0];
      v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      *(uint64_t *)((char *)v16 + *(_QWORD *)(v16[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v17[0] = v12;
      v17[1] = MEMORY[0x24BEDB848] + 16;
      if (v18 < 0)
        operator delete((void *)v17[9]);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x23B83E250](&v19);
      if (v22 && (char)v21 < 0)
        operator delete(v20[0]);
    }
    if ((*((_BYTE *)&v23.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_20;
  }
  else
  {
    v8 = 0;
    if ((*((_BYTE *)&v23.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_20;
  }
  operator delete(v23.__r_.__value_.__l.__data_);
LABEL_20:
  if (v15[0])
  {
    v15[1] = v15[0];
    operator delete(v15[0]);
  }
  if (SHIBYTE(v14[2]) < 0)
    operator delete((void *)v14[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v24 + *(_QWORD *)(v24[0] - 24)), *(_DWORD *)&v25[*(_QWORD *)(v24[0] - 24) + 16] | 4);
LABEL_26:
  v24[0] = *v4;
  *(_QWORD *)((char *)v24 + *(_QWORD *)(v24[0] - 24)) = v4[3];
  MEMORY[0x23B83DC8C](v25);
  std::istream::~istream();
  MEMORY[0x23B83E250](v26);
  return v8;
}

void sub_239B047E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *__p,uint64_t a55,int a56,__int16 a57,char a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  uint64_t a67;
  void *v68;

  if (a60)
  {
    if (a59 < 0)
      operator delete(__p);
  }
  if (a66 < 0)
  {
    operator delete(a61);
    v68 = a16;
    if (!a16)
    {
LABEL_6:
      if ((a14 & 0x80000000) == 0)
      {
LABEL_11:
        sub_23955CB90(&a67);
        _Unwind_Resume(a1);
      }
LABEL_10:
      operator delete(a9);
      goto LABEL_11;
    }
  }
  else
  {
    v68 = a16;
    if (!a16)
      goto LABEL_6;
  }
  operator delete(v68);
  if ((a14 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

void sub_239B0489C(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B048C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = sub_239A8DC0C(a1, a2) + 40;
  if (*(char *)(a2 + 63) < 0)
  {
    sub_23941A7F8((_BYTE *)v4, *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)v4 = v5;
  }
  return a1;
}

void sub_239B04928(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)(v1 + 16);
  if (v3)
  {
    do
    {
      v6 = (_QWORD *)*v3;
      v7 = v3[3];
      if (v7)
      {
        v8 = v3[4];
        v5 = (void *)v3[3];
        if (v8 != v7)
        {
          do
          {
            if (*(char *)(v8 - 1) < 0)
              operator delete(*(void **)(v8 - 24));
            v8 -= 24;
          }
          while (v8 != v7);
          v5 = (void *)v3[3];
        }
        v3[4] = v7;
        operator delete(v5);
      }
      operator delete(v3);
      v3 = v6;
    }
    while (v6);
  }
  v4 = *(void **)v1;
  *(_QWORD *)v1 = 0;
  if (v4)
    operator delete(v4);
  _Unwind_Resume(exception_object);
}

void sub_239B049A8(uint64_t a1, uint64_t *a2, unint64_t **a3)
{
  uint64_t v6;
  unint64_t *v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  const std::locale::facet *v15;
  std::string *v16;
  __int128 v17;
  unsigned __int8 v18;
  int v19;
  void **v20;
  void **v21;
  void **v22;
  void *v23;
  __int128 *v24;
  _QWORD *v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  std::string v33;
  void *__p[2];
  std::string::size_type v35;
  std::locale v36;
  char v37;
  _QWORD v38[2];
  _QWORD v39[11];
  char v40;
  uint64_t v41;
  unint64_t v42;
  __int128 v43;
  __int128 v44;
  int v45;
  uint64_t v46;

  if (!*(_BYTE *)(a1 + 4))
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  kdebug_trace();
  v6 = *a2;
  if (*(_QWORD *)(*a2 + 200))
  {
    LOBYTE(v43) = 0;
    v38[0] = sub_239B04EA4;
    v38[1] = 0;
    v39[0] = v6;
    sub_239B051C0((uint64_t)v38, (uint64_t)&v43);
  }
  v31 = a1;
  kdebug_trace();
  v43 = 0u;
  v44 = 0u;
  v45 = 1065353216;
  v8 = *a3;
  v7 = a3[1];
  if (*a3 != v7)
  {
    v9 = *MEMORY[0x24BEDB7F0];
    v10 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    v32 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
    v11 = MEMORY[0x24BEDB848] + 16;
    do
    {
      v12 = *v8;
      v42 = *v8;
      sub_2394988CC((uint64_t)v38);
      v13 = v39[0];
      v14 = (char *)v39 + *(_QWORD *)(v39[0] - 24);
      if (*((_DWORD *)v14 + 36) == -1)
      {
        std::ios_base::getloc((const std::ios_base *)((char *)v39 + *(_QWORD *)(v39[0] - 24)));
        v15 = std::locale::use_facet(&v36, MEMORY[0x24BEDB350]);
        ((void (*)(const std::locale::facet *, uint64_t))v15->__vftable[2].~facet_0)(v15, 32);
        std::locale::~locale(&v36);
        v13 = v39[0];
      }
      *((_DWORD *)v14 + 36) = 48;
      *(_QWORD *)((char *)&v39[3] + *(_QWORD *)(v13 - 24)) = 8;
      std::ostream::operator<<();
      std::stringbuf::str();
      v16 = std::string::append(&v33, ".bin");
      v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
      v35 = v16->__r_.__value_.__r.__words[2];
      *(_OWORD *)__p = v17;
      v16->__r_.__value_.__l.__size_ = 0;
      v16->__r_.__value_.__r.__words[2] = 0;
      v16->__r_.__value_.__r.__words[0] = 0;
      sub_2395ACAA8((uint64_t)__p, (char *)&v36);
      if (SHIBYTE(v35) < 0)
      {
        operator delete(__p[0]);
        if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_11;
      }
      else if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_11;
      }
      operator delete(v33.__r_.__value_.__l.__data_);
LABEL_11:
      sub_2396F2748(__p, (uint64_t *)(v31 + 416), (uint64_t)&v36);
      sub_2396F295C((uint64_t *)__p, v31 + 8, (uint64_t)&v33);
      std::__fs::filesystem::__status((const std::__fs::filesystem::path *)&v33, 0);
      v18 = v46;
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v33.__r_.__value_.__l.__data_);
        v19 = v18;
        if (v18)
        {
LABEL_17:
          if (v19 != 255)
          {
            v20 = (void **)(sub_239A9A10C((uint64_t)&v43, v12, &v42) + 3);
            if (v20 != __p)
              sub_239A70694((uint64_t)v20, (std::string *)__p[0], (std::string *)__p[1], 0xAAAAAAAAAAAAAAABLL * (((char *)__p[1] - (char *)__p[0]) >> 3));
          }
        }
      }
      else
      {
        v19 = v46;
        if ((_BYTE)v46)
          goto LABEL_17;
      }
      v21 = (void **)__p[0];
      if (__p[0])
      {
        v22 = (void **)__p[1];
        v23 = __p[0];
        if (__p[1] != __p[0])
        {
          do
          {
            if (*((char *)v22 - 1) < 0)
              operator delete(*(v22 - 3));
            v22 -= 3;
          }
          while (v22 != v21);
          v23 = __p[0];
        }
        __p[1] = v21;
        operator delete(v23);
      }
      if (v37 < 0)
        operator delete(v36.__locale_);
      v38[0] = v9;
      *(_QWORD *)((char *)v38 + *(_QWORD *)(v9 - 24)) = v32;
      v39[0] = v10;
      v39[1] = v11;
      if (v40 < 0)
        operator delete((void *)v39[9]);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x23B83E250](&v41);
      ++v8;
    }
    while (v8 != v7);
  }
  v24 = (__int128 *)(v31 + 1248);
  if (!*(_BYTE *)(v31 + 1288))
  {
    sub_239A8DC0C((uint64_t)v24, (uint64_t)&v43);
    *(_BYTE *)(v31 + 1288) = 1;
    v25 = (_QWORD *)v44;
    if (!(_QWORD)v44)
      goto LABEL_38;
    goto LABEL_44;
  }
  if (v24 != &v43)
  {
    *(_DWORD *)(v31 + 1280) = v45;
    sub_239B03B40(v24, (uint64_t **)v44);
  }
  v25 = (_QWORD *)v44;
  if ((_QWORD)v44)
  {
    do
    {
LABEL_44:
      v28 = (_QWORD *)*v25;
      v29 = v25[3];
      if (v29)
      {
        v30 = v25[4];
        v27 = (void *)v25[3];
        if (v30 != v29)
        {
          do
          {
            if (*(char *)(v30 - 1) < 0)
              operator delete(*(void **)(v30 - 24));
            v30 -= 24;
          }
          while (v30 != v29);
          v27 = (void *)v25[3];
        }
        v25[4] = v29;
        operator delete(v27);
      }
      operator delete(v25);
      v25 = v28;
    }
    while (v28);
  }
LABEL_38:
  v26 = (void *)v43;
  *(_QWORD *)&v43 = 0;
  if (v26)
    operator delete(v26);
}

void sub_239B04DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  uint64_t v32;

  sub_239A8E020(v32 - 144);
  _Unwind_Resume(a1);
}

uint64_t sub_239B04EA4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 654, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 100;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v24 = v3;
    goto LABEL_12;
  }
  v24 = &v23;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8F30;
  *(_QWORD *)&v12 = sub_239B05428((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239B05644(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239B050A8(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B050B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,_QWORD *a43)
{
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  if (a43 == v46)
  {
    v48 = 4;
  }
  else
  {
    if (!a43)
      goto LABEL_6;
    v48 = 5;
    v46 = a43;
  }
  (*(void (**)(_QWORD *))(*v46 + 8 * v48))(v46);
LABEL_6:
  if (a39 == v45)
  {
    v49 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_11;
    v49 = 5;
    v45 = a39;
  }
  (*(void (**)(_QWORD *))(*v45 + 8 * v49))(v45);
LABEL_11:
  sub_239A8303C(v44);
  sub_239A83110(v43);
  v50 = a20;
  if (a20 == &a17)
  {
    v51 = 4;
    v50 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_16;
    v51 = 5;
  }
  (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_16:
  v52 = a14;
  if (a14 == &a11)
  {
    v53 = 4;
    v52 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v53 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v52 + 8 * v53))();
  _Unwind_Resume(a1);
}

uint64_t sub_239B051C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, _QWORD *);
  _QWORD *v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  pthread_cond_t v18;
  pthread_cond_t v19;
  pthread_mutex_t v20;
  _QWORD v21[3];
  _QWORD *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  sub_2397A1618(&v20);
  v11 = 0x7FFFFFFF;
  pthread_cond_init(&v18, 0);
  pthread_cond_init(&v19, 0);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(uint64_t (**)(_QWORD *, _QWORD *))a1;
  v6 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v4 >> 1));
  if ((v4 & 1) != 0)
    v5 = *(uint64_t (**)(_QWORD *, _QWORD *))(*v6 + v5);
  v21[0] = &off_250AF5B48;
  v21[1] = &v11;
  v21[2] = a2;
  v22 = v21;
  v7 = v5(v6, v21);
  v8 = v22;
  if (v22 == v21)
  {
    v9 = 4;
    v8 = v21;
  }
  else
  {
    if (!v22)
      goto LABEL_8;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_8:
  if (v7)
  {
    sub_2395BFB54(&v11);
    sub_2395C2A4C((uint64_t)&v11);
  }
  return sub_2395C29C4((uint64_t)&v11);
}

void sub_239B05318(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B05360(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_239B05388()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B0539C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF5B48;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B053D4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF5B48;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B053F4(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

uint64_t sub_239B05428(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    v4 = (_QWORD *)(a1 + 40);
    goto LABEL_5;
  }
  if (v5 != a2 + 16)
  {
    *(_QWORD *)(a1 + 40) = v5;
LABEL_5:
    *v4 = 0;
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 40) = a1 + 16;
  (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 24))(*v4);
LABEL_7:
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = (_QWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (!v7)
  {
    v6 = (_QWORD *)(a1 + 104);
    goto LABEL_11;
  }
  if (v7 != a2 + 80)
  {
    *(_QWORD *)(a1 + 104) = v7;
LABEL_11:
    *v6 = 0;
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 104) = a1 + 80;
  (*(void (**)(_QWORD))(*(_QWORD *)*v6 + 24))(*v6);
LABEL_13:
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v8 = (_QWORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 120) = 0;
  if (!v9)
  {
    v8 = (_QWORD *)(a1 + 160);
    goto LABEL_17;
  }
  if (v9 != a2 + 136)
  {
    *(_QWORD *)(a1 + 160) = v9;
LABEL_17:
    *v8 = 0;
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 160) = a1 + 136;
  (*(void (**)(_QWORD))(*(_QWORD *)*v8 + 24))(*v8);
LABEL_19:
  v10 = (_QWORD *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 192);
  if (!v11)
  {
    v10 = (_QWORD *)(a1 + 192);
    goto LABEL_23;
  }
  if (v11 != a2 + 168)
  {
    *(_QWORD *)(a1 + 192) = v11;
LABEL_23:
    *v10 = 0;
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 192) = a1 + 168;
  (*(void (**)(_QWORD))(*(_QWORD *)*v10 + 24))(*v10);
LABEL_25:
  v12 = (_QWORD *)(a2 + 224);
  v13 = *(_QWORD *)(a2 + 224);
  if (!v13)
  {
    v12 = (_QWORD *)(a1 + 224);
    goto LABEL_29;
  }
  if (v13 != a2 + 200)
  {
    *(_QWORD *)(a1 + 224) = v13;
LABEL_29:
    *v12 = 0;
    goto LABEL_31;
  }
  *(_QWORD *)(a1 + 224) = a1 + 200;
  (*(void (**)(_QWORD))(*(_QWORD *)*v12 + 24))(*v12);
LABEL_31:
  v14 = *(_QWORD *)(a2 + 256);
  if (v14)
  {
    v15 = (_QWORD *)(a2 + 256);
    if (v14 == a2 + 232)
    {
      *(_QWORD *)(a1 + 256) = a1 + 232;
      (*(void (**)(_QWORD))(*(_QWORD *)*v15 + 24))(*v15);
      return a1;
    }
    *(_QWORD *)(a1 + 256) = v14;
  }
  else
  {
    v15 = (_QWORD *)(a1 + 256);
  }
  *v15 = 0;
  return a1;
}

uint64_t sub_239B05644(unsigned int *a1, _OWORD *a2)
{
  pthread_mutex_t *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  void *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  BOOL v36;
  int64_t v37;
  unint64_t v38;
  char *v39;
  void *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  _OWORD *v54;
  uint64_t v55;
  __int128 v56;
  unint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  _OWORD *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  size_t v103;
  char *v104;
  unint64_t v105;
  char *v106;
  char *v107;
  int64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 *v114;
  _OWORD *v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  void *v119;
  _OWORD *v120;

  v4 = (pthread_mutex_t *)(a1 + 44);
  sub_2397A1694((pthread_mutex_t *)(a1 + 44));
  v5 = *((_QWORD *)a1 + 6);
  if (v5 >= *a1)
  {
    while (!*((_BYTE *)a1 + 56))
    {
      ++*((_QWORD *)a1 + 8);
      pthread_cond_wait((pthread_cond_t *)(a1 + 20), v4);
      --*((_QWORD *)a1 + 8);
      v5 = *((_QWORD *)a1 + 6);
      if (v5 < *a1)
        goto LABEL_4;
    }
    goto LABEL_5;
  }
LABEL_4:
  if (*((_BYTE *)a1 + 56))
  {
LABEL_5:
    v6 = 0;
    goto LABEL_100;
  }
  v7 = (char *)*((_QWORD *)a1 + 3);
  v8 = (char *)*((_QWORD *)a1 + 2);
  v9 = v7 - v8;
  if (v7 == v8)
    v10 = 0;
  else
    v10 = 32 * (v7 - v8) - 1;
  v11 = *((_QWORD *)a1 + 5);
  v12 = v11 + v5;
  if (v10 == v11 + v5)
  {
    if (v11 >= 0x100)
    {
      *((_QWORD *)a1 + 5) = v11 - 256;
      v13 = v8 + 8;
      v14 = *(_QWORD *)v8;
      *((_QWORD *)a1 + 2) = v8 + 8;
      if (*((char **)a1 + 4) != v7)
      {
LABEL_92:
        *(_QWORD *)v7 = v14;
        goto LABEL_93;
      }
      v15 = (char *)*((_QWORD *)a1 + 1);
      if (v13 > v15)
      {
        v16 = (v13 - v15) >> 3;
        if (v16 >= -1)
          v17 = v16 + 1;
        else
          v17 = v16 + 2;
        v18 = v17 >> 1;
        v19 = -v18;
        v20 = &v13[-8 * v18];
        v21 = v7 - v13;
        if (v7 == v13)
        {
          v22 = v7;
        }
        else
        {
          memmove(&v13[-8 * v18], v13, v7 - v13);
          v22 = (char *)*((_QWORD *)a1 + 2);
        }
        v7 = &v20[v21];
        *((_QWORD *)a1 + 2) = &v22[8 * v19];
        *((_QWORD *)a1 + 3) = &v20[v21];
        goto LABEL_92;
      }
      if (v7 == v15)
        v33 = 1;
      else
        v33 = (v7 - v15) >> 2;
      if (!(v33 >> 61))
      {
        v34 = (char *)operator new(8 * v33);
        v35 = &v34[8 * (v33 >> 2)];
        v37 = v7 - v13;
        v36 = v7 == v13;
        v7 = v35;
        if (v36)
          goto LABEL_90;
        v7 = &v35[v37 & 0xFFFFFFFFFFFFFFF8];
        v38 = v37 - 8;
        if (v38 >= 0x38)
        {
          v81 = &v34[8 * (v33 >> 2)];
          v39 = v81;
          if ((unint64_t)(v81 - v13) >= 0x20)
          {
            v82 = (v38 >> 3) + 1;
            v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
            v39 = &v35[v83];
            v84 = (__int128 *)(v8 + 24);
            v85 = v81 + 16;
            v86 = v82 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v87 = *v84;
              *(v85 - 1) = *(v84 - 1);
              *v85 = v87;
              v84 += 2;
              v85 += 2;
              v86 -= 4;
            }
            while (v86);
            if (v82 == (v82 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_90:
              *((_QWORD *)a1 + 1) = v34;
              *((_QWORD *)a1 + 2) = v35;
              *((_QWORD *)a1 + 3) = v7;
              *((_QWORD *)a1 + 4) = &v34[8 * v33];
              if (v15)
              {
                operator delete(v15);
                v7 = (char *)*((_QWORD *)a1 + 3);
              }
              goto LABEL_92;
            }
            v13 += v83;
          }
        }
        else
        {
          v39 = &v34[8 * (v33 >> 2)];
        }
        do
        {
          v88 = *(_QWORD *)v13;
          v13 += 8;
          *(_QWORD *)v39 = v88;
          v39 += 8;
        }
        while (v39 != v7);
        goto LABEL_90;
      }
LABEL_130:
      sub_239418A80();
    }
    v23 = v9 >> 3;
    v24 = (char *)*((_QWORD *)a1 + 4);
    v25 = (char *)*((_QWORD *)a1 + 1);
    v26 = v24 - v25;
    if (v9 >> 3 < (unint64_t)((v24 - v25) >> 3))
    {
      if (v24 != v7)
      {
        *(_QWORD *)v7 = operator new(0x1000uLL);
LABEL_93:
        *((_QWORD *)a1 + 3) += 8;
LABEL_94:
        v8 = (char *)*((_QWORD *)a1 + 2);
        v5 = *((_QWORD *)a1 + 6);
        v12 = v5 + *((_QWORD *)a1 + 5);
        goto LABEL_95;
      }
      v40 = operator new(0x1000uLL);
      v41 = v8;
      if (v25 != v8)
      {
LABEL_105:
        *((_QWORD *)v41 - 1) = v40;
        v94 = (char *)*((_QWORD *)a1 + 2);
        v95 = (char *)*((_QWORD *)a1 + 3);
        *((_QWORD *)a1 + 2) = v94 - 8;
        v96 = *((_QWORD *)v94 - 1);
        *((_QWORD *)a1 + 2) = v94;
        if (v95 != *((char **)a1 + 4))
        {
LABEL_106:
          *(_QWORD *)v95 = v96;
          goto LABEL_93;
        }
        v97 = (char *)*((_QWORD *)a1 + 1);
        if (v94 > v97)
        {
          v98 = (v94 - v97) >> 3;
          if (v98 >= -1)
            v99 = v98 + 1;
          else
            v99 = v98 + 2;
          v100 = v99 >> 1;
          v101 = -v100;
          v102 = &v94[-8 * v100];
          v103 = v95 - v94;
          if (v103)
          {
            memmove(&v94[-8 * v100], v94, v103);
            v94 = (char *)*((_QWORD *)a1 + 2);
          }
          v104 = &v102[v103];
          *((_QWORD *)a1 + 2) = &v94[8 * v101];
          *((_QWORD *)a1 + 3) = v104;
          *(_QWORD *)v104 = v96;
          goto LABEL_93;
        }
        if (v95 == v97)
          v105 = 1;
        else
          v105 = (v95 - v97) >> 2;
        if (v105 >> 61)
          goto LABEL_130;
        v106 = (char *)operator new(8 * v105);
        v107 = &v106[8 * (v105 >> 2)];
        v108 = v95 - v94;
        v36 = v95 == v94;
        v95 = v107;
        if (!v36)
        {
          v95 = &v107[v108 & 0xFFFFFFFFFFFFFFF8];
          v109 = v108 - 8;
          if (v109 < 0x38)
          {
            v110 = &v106[8 * (v105 >> 2)];
            goto LABEL_126;
          }
          v111 = &v106[8 * (v105 >> 2)];
          v110 = v111;
          if ((unint64_t)(v111 - v94) < 0x20)
          {
            do
            {
LABEL_126:
              v118 = *(_QWORD *)v94;
              v94 += 8;
              *(_QWORD *)v110 = v118;
              v110 += 8;
            }
            while (v110 != v95);
            goto LABEL_127;
          }
          v112 = (v109 >> 3) + 1;
          v113 = 8 * (v112 & 0x3FFFFFFFFFFFFFFCLL);
          v110 = &v107[v113];
          v114 = (__int128 *)(v94 + 16);
          v115 = v111 + 16;
          v116 = v112 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v117 = *v114;
            *(v115 - 1) = *(v114 - 1);
            *v115 = v117;
            v114 += 2;
            v115 += 2;
            v116 -= 4;
          }
          while (v116);
          if (v112 != (v112 & 0x3FFFFFFFFFFFFFFCLL))
          {
            v94 += v113;
            goto LABEL_126;
          }
        }
LABEL_127:
        *((_QWORD *)a1 + 1) = v106;
        *((_QWORD *)a1 + 2) = v107;
        *((_QWORD *)a1 + 3) = v95;
        *((_QWORD *)a1 + 4) = &v106[8 * v105];
        if (v97)
        {
          operator delete(v97);
          v95 = (char *)*((_QWORD *)a1 + 3);
        }
        goto LABEL_106;
      }
      if (v7 == v8)
        v42 = 1;
      else
        v42 = v26 >> 2;
      if (v42 >> 61)
        goto LABEL_130;
      v43 = (char *)operator new(8 * v42);
      v44 = (v42 + 3) >> 2;
      v41 = &v43[8 * v44];
      v45 = &v43[8 * v42];
      v46 = v41;
      if (v7 != v8)
      {
        v46 = &v41[(v7 - v25) & 0xFFFFFFFFFFFFFFF8];
        v47 = v7 - v25 - 8;
        v48 = &v43[8 * v44];
        v49 = v8;
        if (v47 > 0x37)
        {
          v50 = &v43[8 * v44];
          v48 = v50;
          v49 = v8;
          if ((unint64_t)(v50 - v25) >= 0x20)
          {
            v51 = (v47 >> 3) + 1;
            v52 = 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
            v48 = &v41[v52];
            v53 = (__int128 *)(v8 + 16);
            v54 = v50 + 16;
            v55 = v51 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v56 = *v53;
              *(v54 - 1) = *(v53 - 1);
              *v54 = v56;
              v53 += 2;
              v54 += 2;
              v55 -= 4;
            }
            while (v55);
            if (v51 == (v51 & 0x3FFFFFFFFFFFFFFCLL))
            {
              *((_QWORD *)a1 + 1) = v43;
              *((_QWORD *)a1 + 2) = v41;
              *((_QWORD *)a1 + 3) = v46;
              *((_QWORD *)a1 + 4) = v45;
LABEL_104:
              operator delete(v8);
              v41 = (char *)*((_QWORD *)a1 + 2);
              goto LABEL_105;
            }
            v49 = &v8[v52];
          }
        }
        do
        {
          v93 = *(_QWORD *)v49;
          v49 += 8;
          *(_QWORD *)v48 = v93;
          v48 += 8;
        }
        while (v48 != v46);
      }
      *((_QWORD *)a1 + 1) = v43;
      *((_QWORD *)a1 + 2) = v41;
      *((_QWORD *)a1 + 3) = v46;
      *((_QWORD *)a1 + 4) = v45;
      if (!v8)
        goto LABEL_105;
      goto LABEL_104;
    }
    if (v24 == v25)
      v27 = 1;
    else
      v27 = v26 >> 2;
    if (v27 >> 61)
      goto LABEL_130;
    v28 = (char *)operator new(8 * v27);
    v120 = a2;
    v29 = operator new(0x1000uLL);
    v30 = &v28[8 * v23];
    v31 = &v28[8 * v27];
    if (v23 == v27)
    {
      v119 = v29;
      if (v9 < 1)
      {
        if (v7 == v8)
          v57 = 1;
        else
          v57 = v9 >> 2;
        if (v57 >> 61)
          sub_239418A80();
        v30 = (char *)operator new(8 * v57);
        v31 = &v30[8 * v57];
        operator delete(v28);
        v8 = (char *)*((_QWORD *)a1 + 2);
        v7 = (char *)*((_QWORD *)a1 + 3);
        v28 = v30;
      }
      else
      {
        v32 = v23 + 2;
        if (v23 >= -1)
          v32 = v23 + 1;
        v30 -= 8 * (v32 >> 1);
      }
      v29 = v119;
    }
    *(_QWORD *)v30 = v29;
    v58 = v30 + 8;
    if (v7 == v8)
    {
      v59 = v30;
      v60 = v30 + 8;
LABEL_57:
      v61 = (void *)*((_QWORD *)a1 + 1);
      *((_QWORD *)a1 + 1) = v28;
      *((_QWORD *)a1 + 2) = v59;
      *((_QWORD *)a1 + 3) = v60;
      *((_QWORD *)a1 + 4) = v31;
      a2 = v120;
      if (v61)
        operator delete(v61);
      goto LABEL_94;
    }
    while (v30 != v28)
    {
      v62 = v30;
      v60 = v58;
LABEL_60:
      v63 = *((_QWORD *)v7 - 1);
      v7 -= 8;
      *((_QWORD *)v62 - 1) = v63;
      v59 = v62 - 8;
      v58 = v60;
      v30 = v59;
      if (v7 == *((char **)a1 + 2))
        goto LABEL_57;
    }
    if (v58 < v31)
    {
      v64 = (v31 - v58) >> 3;
      if (v64 >= -1)
        v65 = v64 + 1;
      else
        v65 = v64 + 2;
      v60 = &v58[8 * (v65 >> 1)];
      v62 = &v30[8 * (v65 >> 1)];
      if (v58 == v30)
      {
        v28 = v58;
      }
      else
      {
        memmove(&v30[8 * (v65 >> 1)], v30, v58 - v30);
        v28 = v30;
      }
      goto LABEL_60;
    }
    if (v31 == v30)
      v66 = 1;
    else
      v66 = (v31 - v30) >> 2;
    if (v66 >> 61)
      sub_239418A80();
    v67 = (char *)operator new(8 * v66);
    v28 = v67;
    v68 = (v66 + 3) >> 2;
    v62 = &v67[8 * v68];
    v60 = v62;
    v69 = v58 - v30;
    if (v58 != v30)
    {
      v60 = &v62[v69 & 0xFFFFFFFFFFFFFFF8];
      v70 = v69 - 8;
      v71 = &v67[8 * v68];
      v72 = v30;
      if (v70 >= 0x38)
      {
        v73 = 8 * v68;
        v71 = &v67[8 * v68];
        v72 = v30;
        if ((unint64_t)(v71 - v30) >= 0x20)
        {
          v74 = (v70 >> 3) + 1;
          v75 = 8 * (v74 & 0x3FFFFFFFFFFFFFFCLL);
          v71 = &v62[v75];
          v76 = (__int128 *)(v30 + 16);
          v77 = &v67[v73 + 16];
          v78 = v74 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v79 = *v76;
            *((_OWORD *)v77 - 1) = *(v76 - 1);
            *(_OWORD *)v77 = v79;
            v76 += 2;
            v77 += 32;
            v78 -= 4;
          }
          while (v78);
          if (v74 == (v74 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_80;
          v72 = &v30[v75];
        }
      }
      do
      {
        v80 = *(_QWORD *)v72;
        v72 += 8;
        *(_QWORD *)v71 = v80;
        v71 += 8;
      }
      while (v71 != v60);
    }
LABEL_80:
    v31 = &v67[8 * v66];
    operator delete(v30);
    goto LABEL_60;
  }
LABEL_95:
  v89 = *a2;
  *(_OWORD *)(*(_QWORD *)&v8[(v12 >> 5) & 0x7FFFFFFFFFFFFF8] + 16 * v12) = *a2;
  if (*((_QWORD *)&v89 + 1))
  {
    v90 = (unint64_t *)(*((_QWORD *)&v89 + 1) + 8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 1, v90));
    v5 = *((_QWORD *)a1 + 6);
  }
  *((_QWORD *)a1 + 6) = v5 + 1;
  pthread_cond_signal((pthread_cond_t *)(a1 + 32));
  v6 = 1;
LABEL_100:
  sub_2397A16B4(v4);
  return v6;
}

void sub_239B05DB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  pthread_mutex_t *v9;
  void *v10;

  operator delete(__p);
  operator delete(v10);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

void sub_239B05E08(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8F30;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B05E18(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8F30;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B05E48(uint64_t a1)
{
  return sub_239A82E8C((_QWORD *)(a1 + 24));
}

uint64_t sub_239B05E54(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  char *v6;
  BOOL v7;
  std::__fs::filesystem::path::__string_view v8;
  __int128 *p_dst;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::basic_string_view<_CharT, _Traits>::size_type v17;
  std::basic_string_view<_CharT, _Traits>::size_type v18;
  char *v19;
  std::__fs::filesystem::path::__string_view v20;
  __int128 *v21;
  std::basic_string_view<_CharT, _Traits>::size_type v22;
  std::basic_string_view<_CharT, _Traits>::size_type v23;
  std::__shared_weak_count *v24;
  char *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  char *v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  void *__p[2];
  unint64_t v42;
  char *v43;
  std::__shared_weak_count *v44;
  std::__fs::filesystem::path v45;
  __int128 __dst;
  unint64_t v47;

  v4 = *(_QWORD *)(a1 + 1856);
  if (v4)
  {
LABEL_12:
    v10 = *(_QWORD *)(a1 + 1864);
    if (!v10)
      goto LABEL_15;
LABEL_13:
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1 + 4) || !*(_BYTE *)(a1 + 1320))
  {
    v4 = 0;
    goto LABEL_12;
  }
  sub_2396F295C((uint64_t *)(a1 + 1296), a1 + 8, (uint64_t)&v45);
  std::__fs::filesystem::__status(&v45, 0);
  v5 = 1;
  if (!(_BYTE)__dst || __dst == 255)
    goto LABEL_60;
  kdebug_trace();
  v6 = (char *)operator new(0x3C0uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_250B01B38;
  bzero(v6 + 24, 0x3A8uLL);
  *((_DWORD *)v6 + 22) = 1065353216;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_DWORD *)v6 + 32) = 1065353216;
  *(_OWORD *)(v6 + 152) = 0u;
  *(_OWORD *)(v6 + 168) = 0u;
  *(_OWORD *)(v6 + 184) = 0u;
  *((_QWORD *)v6 + 25) = 0;
  *((_DWORD *)v6 + 52) = 1065353216;
  *(_OWORD *)(v6 + 216) = 0u;
  *(_OWORD *)(v6 + 232) = 0u;
  *((_DWORD *)v6 + 62) = 1065353216;
  *((_OWORD *)v6 + 16) = 0u;
  *((_OWORD *)v6 + 17) = 0u;
  *((_OWORD *)v6 + 18) = 0u;
  *((_OWORD *)v6 + 19) = 0u;
  *((_QWORD *)v6 + 40) = 0;
  *((_QWORD *)v6 + 41) = 0x3FF0000000000000;
  *((_QWORD *)v6 + 46) = 0;
  *((_OWORD *)v6 + 21) = 0u;
  *((_OWORD *)v6 + 22) = 0u;
  *((_DWORD *)v6 + 118) = -1;
  *((_OWORD *)v6 + 30) = 0u;
  *((_OWORD *)v6 + 31) = 0u;
  *((_DWORD *)v6 + 128) = 1065353216;
  *(_OWORD *)(v6 + 520) = 0u;
  *(_OWORD *)(v6 + 536) = 0u;
  *((_DWORD *)v6 + 138) = 1065353216;
  *((_OWORD *)v6 + 35) = 0u;
  *((_OWORD *)v6 + 36) = 0u;
  *((_OWORD *)v6 + 37) = 0u;
  *((_OWORD *)v6 + 38) = 0u;
  *((_OWORD *)v6 + 39) = 0u;
  *((_OWORD *)v6 + 40) = 0u;
  *((_OWORD *)v6 + 41) = 0u;
  *((_OWORD *)v6 + 42) = 0u;
  *((_OWORD *)v6 + 43) = 0u;
  *((_OWORD *)v6 + 44) = 0u;
  *((_OWORD *)v6 + 45) = 0u;
  *((_OWORD *)v6 + 46) = 0u;
  *((_OWORD *)v6 + 47) = 0u;
  *((_OWORD *)v6 + 48) = 0u;
  *((_OWORD *)v6 + 49) = 0u;
  *((_OWORD *)v6 + 50) = 0u;
  *((_OWORD *)v6 + 51) = 0u;
  *((_OWORD *)v6 + 52) = 0u;
  *((_DWORD *)v6 + 212) = 1065353216;
  *((_QWORD *)v6 + 107) = 0;
  *((_QWORD *)v6 + 109) = 0;
  *((_QWORD *)v6 + 108) = 0;
  v6[880] = 0;
  v43 = v6 + 24;
  v44 = (std::__shared_weak_count *)v6;
  v7 = sub_239A9D108((uint64_t)(v6 + 24));
  kdebug_trace();
  if (v7)
  {
    v8 = std::__fs::filesystem::path::__parent_path(&v45);
    if (v8.__size_ > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    if (v8.__size_ >= 0x17)
    {
      v17 = (v8.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8.__size_ | 7) != 0x17)
        v17 = v8.__size_ | 7;
      v18 = v17 + 1;
      p_dst = (__int128 *)operator new(v17 + 1);
      *((_QWORD *)&__dst + 1) = v8.__size_;
      v47 = v18 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v47) = v8.__size_;
      p_dst = &__dst;
      if (!v8.__size_)
      {
LABEL_26:
        *((_BYTE *)p_dst + v8.__size_) = 0;
        *(_OWORD *)__p = __dst;
        v42 = v47;
        sub_2396B8C08((uint64_t)(v6 + 480), (uint64_t)__p);
        if (SHIBYTE(v42) < 0)
          operator delete(__p[0]);
        v19 = v43;
        v20 = std::__fs::filesystem::path::__parent_path(&v45);
        if (v20.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v20.__size_ >= 0x17)
        {
          v22 = (v20.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v20.__size_ | 7) != 0x17)
            v22 = v20.__size_ | 7;
          v23 = v22 + 1;
          v21 = (__int128 *)operator new(v22 + 1);
          *((_QWORD *)&__dst + 1) = v20.__size_;
          v47 = v23 | 0x8000000000000000;
          *(_QWORD *)&__dst = v21;
        }
        else
        {
          HIBYTE(v47) = v20.__size_;
          v21 = &__dst;
          if (!v20.__size_)
            goto LABEL_36;
        }
        memmove(v21, v20.__data_, v20.__size_);
LABEL_36:
        *((_BYTE *)v21 + v20.__size_) = 0;
        *(_OWORD *)__p = __dst;
        v42 = v47;
        sub_2396B8C08((uint64_t)(v19 + 496), (uint64_t)__p);
        if (SHIBYTE(v42) < 0)
          operator delete(__p[0]);
        v25 = v43;
        v24 = v44;
        if (v44)
        {
          p_shared_owners = (unint64_t *)&v44->__shared_owners_;
          do
            v27 = __ldxr(p_shared_owners);
          while (__stxr(v27 + 1, p_shared_owners));
        }
        *(_QWORD *)(a1 + 1856) = v25;
        v28 = *(std::__shared_weak_count **)(a1 + 1864);
        *(_QWORD *)(a1 + 1864) = v24;
        if (v28)
        {
          v29 = (unint64_t *)&v28->__shared_owners_;
          do
            v30 = __ldaxr(v29);
          while (__stlxr(v30 - 1, v29));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        v32 = v43;
        v31 = v44;
        if (v44)
        {
          v33 = (unint64_t *)&v44->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
        }
        *(_QWORD *)(a1 + 2168) = v32;
        v35 = *(std::__shared_weak_count **)(a1 + 2176);
        *(_QWORD *)(a1 + 2176) = v31;
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldaxr(v36);
          while (__stlxr(v37 - 1, v36));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
        }
        v5 = 0;
        goto LABEL_55;
      }
    }
    memmove(p_dst, v8.__data_, v8.__size_);
    goto LABEL_26;
  }
  v5 = 1;
LABEL_55:
  v38 = v44;
  if (v44)
  {
    v39 = (unint64_t *)&v44->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
LABEL_60:
  if (SHIBYTE(v45.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v45.__pn_.__r_.__value_.__l.__data_);
    if (v5)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 1856);
  v10 = *(_QWORD *)(a1 + 1864);
  if (v10)
    goto LABEL_13;
LABEL_15:
  v13 = (std::__shared_weak_count *)a2[1];
  *a2 = v4;
  a2[1] = v10;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  return 1;
}

void sub_239B062E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0)
    operator delete(__p);
  sub_239A4D7C0((uint64_t)&a16);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(a1);
}

uint64_t sub_239B06344(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  void **v20;
  char *v21;
  void **v22;
  void *v23;
  void **v24;
  void *v25;
  void **v27;
  void **v28;
  std::__fs::filesystem::path __p;
  void *v30[2];
  void *v31;
  int v32;
  void *v33[2];
  void *v34;
  int v35;
  void *v36;
  char v37;

  v5 = *a2;
  v4 = a2[1];
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  *(_QWORD *)(a1 + 1856) = v5;
  v8 = *(std::__shared_weak_count **)(a1 + 1864);
  *(_QWORD *)(a1 + 1864) = v4;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v12 = *a2;
  v11 = a2[1];
  if (v11)
  {
    v13 = (unint64_t *)(v11 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  *(_QWORD *)(a1 + 2168) = v12;
  v15 = *(std::__shared_weak_count **)(a1 + 2176);
  *(_QWORD *)(a1 + 2176) = v11;
  if (!v15)
    goto LABEL_48;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_20;
  }
  else
  {
LABEL_48:
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_20;
  }
  if (!*(_DWORD *)a1)
    return 1;
LABEL_20:
  sub_2396F295C((uint64_t *)(a1 + 440), a1 + 8, (uint64_t)&v36);
  v19 = *a2;
  v20 = (void **)(*a2 + 456);
  sub_2395F6750((uint64_t)v33, (uint64_t)v20);
  sub_2395F6750((uint64_t)v30, v19 + 496);
  sub_2396F295C((uint64_t *)(a1 + 368), a1 + 8, (uint64_t)&__p);
  sub_2396B8CE0((uint64_t)v20, &__p);
  sub_2396B8CE0(v19 + 496, &__p);
  kdebug_trace();
  v18 = sub_239A9D788(*a2);
  kdebug_trace();
  if (v20 != v33)
  {
    *(_DWORD *)(v19 + 488) = v35;
    sub_239A99678(v20, (const std::string *)v34);
  }
  if ((void **)(v19 + 496) != v30)
  {
    *(_DWORD *)(v19 + 528) = v32;
    sub_239A99678((_QWORD *)(v19 + 496), (const std::string *)v31);
  }
  if (v18)
  {
    v21 = (char *)(a1 + 1296);
    if (!*(_BYTE *)(a1 + 1320))
    {
      *(_QWORD *)v21 = 0;
      *(_QWORD *)(a1 + 1304) = 0;
      *(_QWORD *)(a1 + 1312) = 0;
      sub_239490944(v21, *(_QWORD *)(a1 + 440), *(_QWORD *)(a1 + 448), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 448) - *(_QWORD *)(a1 + 440)) >> 3));
      *(_BYTE *)(a1 + 1320) = 1;
      if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_29;
      goto LABEL_28;
    }
    sub_239A70694((uint64_t)v21, *(std::string **)(a1 + 440), *(std::string **)(a1 + 448), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 448) - *(_QWORD *)(a1 + 440)) >> 3));
  }
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_28:
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
LABEL_29:
  v22 = (void **)v31;
  if (v31)
  {
    do
    {
      v27 = (void **)*v22;
      if (*((char *)v22 + 47) < 0)
        operator delete(v22[3]);
      operator delete(v22);
      v22 = v27;
    }
    while (v27);
  }
  v23 = v30[0];
  v30[0] = 0;
  if (v23)
    operator delete(v23);
  v24 = (void **)v34;
  if (v34)
  {
    do
    {
      v28 = (void **)*v24;
      if (*((char *)v24 + 47) < 0)
        operator delete(v24[3]);
      operator delete(v24);
      v24 = v28;
    }
    while (v28);
  }
  v25 = v33[0];
  v33[0] = 0;
  if (v25)
    operator delete(v25);
  if (v37 < 0)
    operator delete(v36);
  return v18;
}

void sub_239B0664C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;

  sub_23959F2D4((uint64_t)&a15);
  sub_23959F2D4((uint64_t)&a20);
  if (*(char *)(v20 - 49) < 0)
    operator delete(*(void **)(v20 - 72));
  _Unwind_Resume(a1);
}

void sub_239B066A4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  _QWORD *v58;
  void *v59;
  void *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  void *v73[2];
  _QWORD *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  void *v80;
  unint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  int v84;
  __int128 __p;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  _QWORD v89[3];
  _QWORD *v90;
  _QWORD v91[3];
  _QWORD *v92;
  uint64_t v93;

  v93 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 1872))
    goto LABEL_2;
  if (*(_BYTE *)(a1 + 4))
  {
    if (!*(_BYTE *)(a1 + 1032) || !*(_QWORD *)(a1 + 1016))
      goto LABEL_2;
    v11 = *(_QWORD *)(a1 + 2328);
    sub_239A8DC0C((uint64_t)v73, a1 + 992);
    if (*(char *)(a1 + 31) < 0)
    {
      sub_23941A7F8(&v75, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
    }
    else
    {
      v75 = *(_OWORD *)(a1 + 8);
      v76 = *(_QWORD *)(a1 + 24);
    }
    v77 = 1064514355;
    v78 = v11;
    v79 = 1;
    v24 = *(_QWORD *)(a1 + 2312);
    v25 = *(std::__shared_weak_count **)(a1 + 2320);
    v68 = v25;
    if (v25)
    {
      p_shared_owners = (unint64_t *)&v25->__shared_owners_;
      do
        v27 = __ldxr(p_shared_owners);
      while (__stxr(v27 + 1, p_shared_owners));
      v69 = 0;
      v70 = 0;
      v71 = v24;
      v72 = v25;
      do
        v28 = __ldxr(p_shared_owners);
      while (__stxr(v28 + 1, p_shared_owners));
    }
    else
    {
      v69 = 0;
      v70 = 0;
      v71 = v24;
      v72 = 0;
    }
    v70 = (int)std::thread::hardware_concurrency();
    v29 = operator new(0x1B0uLL);
    v29[1] = 0;
    v29[2] = 0;
    *v29 = &off_250AF7EE8;
    sub_239B06E04((uint64_t)&v80, (uint64_t)v73);
    v90 = 0;
    v30 = (char *)operator new(0x60uLL);
    v31 = v80;
    v32 = v81;
    v80 = 0;
    v81 = 0;
    *(_QWORD *)v30 = off_250AF41D8;
    *((_QWORD *)v30 + 1) = v31;
    *((_QWORD *)v30 + 2) = v32;
    v34 = v82;
    v33 = v83;
    *((_QWORD *)v30 + 3) = v82;
    *((_QWORD *)v30 + 4) = v33;
    *((_DWORD *)v30 + 10) = v84;
    if (v33)
    {
      v35 = v34[1];
      if ((v32 & (v32 - 1)) != 0)
      {
        if (v35 >= v32)
          v35 %= v32;
      }
      else
      {
        v35 &= v32 - 1;
      }
      v31[v35] = v30 + 24;
      v82 = 0;
      v83 = 0;
    }
    *((_OWORD *)v30 + 3) = __p;
    v36 = v88;
    *((_QWORD *)v30 + 8) = v86;
    v86 = 0;
    __p = 0uLL;
    *(_OWORD *)(v30 + 72) = v87;
    *((_QWORD *)v30 + 11) = v36;
    v90 = v30;
    v92 = 0;
    sub_239A7DBE8((uint64_t)(v29 + 3), &v69, v89, v91);
    v37 = v92;
    if (v92 == v91)
    {
      v38 = 4;
      v37 = v91;
    }
    else
    {
      if (!v92)
        goto LABEL_52;
      v38 = 5;
    }
    (*(void (**)(void))(*v37 + 8 * v38))();
LABEL_52:
    v39 = v90;
    if (v90 == v89)
    {
      v40 = 4;
      v39 = v89;
    }
    else
    {
      if (!v90)
      {
LABEL_57:
        if (SHIBYTE(v86) < 0)
          operator delete((void *)__p);
        v41 = v82;
        if (v82)
        {
          do
          {
            v61 = (_QWORD *)*v41;
            v62 = v41[3];
            if (v62)
            {
              v63 = v41[4];
              v60 = (void *)v41[3];
              if (v63 != v62)
              {
                do
                {
                  if (*(char *)(v63 - 1) < 0)
                    operator delete(*(void **)(v63 - 24));
                  v63 -= 24;
                }
                while (v63 != v62);
                v60 = (void *)v41[3];
              }
              v41[4] = v62;
              operator delete(v60);
            }
            operator delete(v41);
            v41 = v61;
          }
          while (v61);
        }
        v42 = v80;
        v80 = 0;
        if (v42)
          operator delete(v42);
        *(_QWORD *)(a1 + 1872) = v29 + 3;
        v43 = *(std::__shared_weak_count **)(a1 + 1880);
        *(_QWORD *)(a1 + 1880) = v29;
        if (v43)
        {
          v44 = (unint64_t *)&v43->__shared_owners_;
          do
            v45 = __ldaxr(v44);
          while (__stlxr(v45 - 1, v44));
          if (!v45)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
        v46 = v72;
        if (v72)
        {
          v47 = (unint64_t *)&v72->__shared_owners_;
          do
            v48 = __ldaxr(v47);
          while (__stlxr(v48 - 1, v47));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
        }
        if (v68)
        {
          v49 = (unint64_t *)&v68->__shared_owners_;
          do
            v50 = __ldaxr(v49);
          while (__stlxr(v50 - 1, v49));
          if (!v50)
          {
            ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
            std::__shared_weak_count::__release_weak(v68);
          }
        }
        v51 = *(_QWORD *)(a1 + 1872);
        v52 = *(_QWORD *)(a1 + 1880);
        if (v52)
        {
          v53 = (unint64_t *)(v52 + 8);
          do
            v54 = __ldxr(v53);
          while (__stxr(v54 + 1, v53));
        }
        *(_QWORD *)(a1 + 2104) = v51;
        v55 = *(std::__shared_weak_count **)(a1 + 2112);
        *(_QWORD *)(a1 + 2112) = v52;
        if (v55)
        {
          v56 = (unint64_t *)&v55->__shared_owners_;
          do
            v57 = __ldaxr(v56);
          while (__stlxr(v57 - 1, v56));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
            std::__shared_weak_count::__release_weak(v55);
          }
        }
        if (SHIBYTE(v76) < 0)
          operator delete((void *)v75);
        v58 = v74;
        if (v74)
        {
          do
          {
            v65 = (_QWORD *)*v58;
            v66 = v58[3];
            if (v66)
            {
              v67 = v58[4];
              v64 = (void *)v58[3];
              if (v67 != v66)
              {
                do
                {
                  if (*(char *)(v67 - 1) < 0)
                    operator delete(*(void **)(v67 - 24));
                  v67 -= 24;
                }
                while (v67 != v66);
                v64 = (void *)v58[3];
              }
              v58[4] = v66;
              operator delete(v64);
            }
            operator delete(v58);
            v58 = v65;
          }
          while (v65);
        }
        v59 = v73[0];
        v73[0] = 0;
        if (v59)
          operator delete(v59);
        goto LABEL_2;
      }
      v40 = 5;
    }
    (*(void (**)(void))(*v39 + 8 * v40))();
    goto LABEL_57;
  }
  v12 = *(_QWORD *)(a1 + 1792);
  v13 = *(_QWORD *)(a1 + 1800);
  if (v13)
  {
    v14 = (unint64_t *)(v13 + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  *(_QWORD *)(a1 + 1872) = v12;
  v16 = *(std::__shared_weak_count **)(a1 + 1880);
  *(_QWORD *)(a1 + 1880) = v13;
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v13 = *(_QWORD *)(a1 + 1880);
    v12 = *(_QWORD *)(a1 + 1872);
  }
  if (v13)
  {
    v19 = (unint64_t *)(v13 + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  *(_QWORD *)(a1 + 2104) = v12;
  v21 = *(std::__shared_weak_count **)(a1 + 2112);
  *(_QWORD *)(a1 + 2112) = v13;
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
LABEL_2:
  v4 = *(_QWORD *)(a1 + 1872);
  v5 = *(_QWORD *)(a1 + 1880);
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = (std::__shared_weak_count *)a2[1];
  *a2 = v4;
  a2[1] = v5;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239B06C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239A8E020((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B06C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,_QWORD *a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  std::__shared_weak_count *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;

  v41 = *(_QWORD **)(v39 - 96);
  if (v41 == v38)
  {
    v42 = 4;
    v41 = (_QWORD *)(v39 - 120);
  }
  else
  {
    if (!v41)
      goto LABEL_6;
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
LABEL_6:
  v43 = *(_QWORD **)(v39 - 128);
  if (v43 == (_QWORD *)(v39 - 152))
  {
    v44 = 4;
    v43 = (_QWORD *)(v39 - 152);
  }
  else
  {
    if (!v43)
    {
      if (a37 < 0)
        goto LABEL_14;
      goto LABEL_10;
    }
    v44 = 5;
  }
  (*(void (**)(void))(*v43 + 8 * v44))();
  if (a37 < 0)
  {
LABEL_14:
    operator delete(__p);
    v45 = a29;
    if (!a29)
      goto LABEL_15;
    do
    {
LABEL_20:
      v48 = (_QWORD *)*v45;
      v49 = v45[3];
      if (v49)
      {
        v50 = v45[4];
        v47 = (void *)v45[3];
        if (v50 != v49)
        {
          do
          {
            if (*(char *)(v50 - 1) < 0)
              operator delete(*(void **)(v50 - 24));
            v50 -= 24;
          }
          while (v50 != v49);
          v47 = (void *)v45[3];
        }
        v45[4] = v49;
        operator delete(v47);
      }
      operator delete(v45);
      v45 = v48;
    }
    while (v48);
LABEL_15:
    v46 = a27;
    a27 = 0;
    if (v46)
      operator delete(v46);
    std::__shared_weak_count::~__shared_weak_count(v37);
    operator delete(v51);
    sub_239A74534((uint64_t)&a12);
    sub_239416DA0((uint64_t)&a10);
    sub_239A9E4FC((uint64_t)&a16);
    _Unwind_Resume(a1);
  }
LABEL_10:
  v45 = a29;
  if (!a29)
    goto LABEL_15;
  goto LABEL_20;
}

void sub_239B06DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a15)
  {
    p_shared_owners = (unint64_t *)&a15->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a15->__on_zero_shared)(a15);
      std::__shared_weak_count::__release_weak(a15);
    }
  }
  JUMPOUT(0x239B06DA8);
}

uint64_t sub_239B06E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = sub_239A8DC0C(a1, a2) + 40;
  if (*(char *)(a2 + 63) < 0)
  {
    sub_23941A7F8((_BYTE *)v4, *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)v4 = v5;
  }
  v6 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v6;
  return a1;
}

void sub_239B06E78(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)(v1 + 16);
  if (v3)
  {
    do
    {
      v6 = (_QWORD *)*v3;
      v7 = v3[3];
      if (v7)
      {
        v8 = v3[4];
        v5 = (void *)v3[3];
        if (v8 != v7)
        {
          do
          {
            if (*(char *)(v8 - 1) < 0)
              operator delete(*(void **)(v8 - 24));
            v8 -= 24;
          }
          while (v8 != v7);
          v5 = (void *)v3[3];
        }
        v3[4] = v7;
        operator delete(v5);
      }
      operator delete(v3);
      v3 = v6;
    }
    while (v6);
  }
  v4 = *(void **)v1;
  *(_QWORD *)v1 = 0;
  if (v4)
    operator delete(v4);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B06EF8(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = off_250AF41D8;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v6 = (_QWORD *)*v2;
    v7 = v2[3];
    if (v7)
    {
      v8 = v2[4];
      v5 = (void *)v2[3];
      if (v8 != v7)
      {
        do
        {
          if (*(char *)(v8 - 1) < 0)
            operator delete(*(void **)(v8 - 24));
          v8 -= 24;
        }
        while (v8 != v7);
        v5 = (void *)v2[3];
      }
      v2[4] = v7;
      operator delete(v5);
    }
    operator delete(v2);
    v2 = v6;
  }
  while (v6);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void sub_239B06FC4(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_250AF41D8;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v5 = (_QWORD *)*v2;
    v6 = v2[3];
    if (v6)
    {
      v7 = v2[4];
      v4 = (void *)v2[3];
      if (v7 != v6)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0)
            operator delete(*(void **)(v7 - 24));
          v7 -= 24;
        }
        while (v7 != v6);
        v4 = (void *)v2[3];
      }
      v2[4] = v6;
      operator delete(v4);
    }
    operator delete(v2);
    v2 = v5;
  }
  while (v5);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B070A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = a1 + 8;
  v2 = operator new(0x60uLL);
  *v2 = off_250AF41D8;
  sub_239B06E04((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_239B070E0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B070F4(uint64_t a1, _QWORD *a2)
{
  *a2 = off_250AF41D8;
  return sub_239B06E04((uint64_t)(a2 + 1), a1 + 8);
}

void sub_239B07110(uint64_t a1)
{
  sub_239AA5734(a1 + 8);
}

void sub_239B07118(void *a1)
{
  sub_239AA5734((uint64_t)a1 + 8);
  operator delete(a1);
}

void sub_239B07140(uint64_t a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  int8x8_t v4;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  std::ios_base *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _BYTE v35[144];
  void *__p;
  char v37;
  _QWORD v38[2];
  _BYTE v39[408];
  _QWORD v40[20];

  v40[19] = *MEMORY[0x24BDAC8D0];
  v4 = *(int8x8_t *)(a1 + 16);
  if (!*(_QWORD *)&v4)
    goto LABEL_21;
  v6 = *a2;
  v7 = (uint8x8_t)vcnt_s8(v4);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    v8 = *a2;
    if (*(_QWORD *)&v4 <= v6)
      v8 = v6 % *(_QWORD *)&v4;
  }
  else
  {
    v8 = (*(_QWORD *)&v4 - 1) & v6;
  }
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD **)(v9 + 8 * v8);
  if (!v10 || (v11 = (_QWORD *)*v10) == 0)
  {
LABEL_21:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  v12 = *(_QWORD *)&v4 - 1;
  if (v7.u32[0] < 2uLL)
  {
    while (1)
    {
      v13 = v11[1];
      if (v13 == v6)
      {
        if (v11[2] == v6)
          goto LABEL_23;
      }
      else if ((v13 & v12) != v8)
      {
        goto LABEL_21;
      }
      v11 = (_QWORD *)*v11;
      if (!v11)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v14 = v11[1];
    if (v14 == v6)
      break;
    if (v14 >= *(_QWORD *)&v4)
      v14 %= *(_QWORD *)&v4;
    if (v14 != v8)
      goto LABEL_21;
LABEL_16:
    v11 = (_QWORD *)*v11;
    if (!v11)
      goto LABEL_21;
  }
  if (v11[2] != v6)
    goto LABEL_16;
LABEL_23:
  if (v7.u32[0] > 1uLL)
  {
    v15 = *a2;
    if (*(_QWORD *)&v4 <= v6)
      v15 = v6 % *(_QWORD *)&v4;
  }
  else
  {
    v15 = v12 & v6;
  }
  v16 = *(_QWORD **)(v9 + 8 * v15);
  if (!v16 || (v17 = (_QWORD *)*v16) == 0)
LABEL_52:
    sub_23941D898("unordered_map::at: key not found");
  if (v7.u32[0] < 2uLL)
  {
    while (1)
    {
      v18 = v17[1];
      if (v18 == v6)
      {
        if (v17[2] == v6)
          goto LABEL_35;
      }
      else if ((v18 & v12) != v15)
      {
        goto LABEL_52;
      }
      v17 = (_QWORD *)*v17;
      if (!v17)
        goto LABEL_52;
    }
  }
  while (2)
  {
    v25 = v17[1];
    if (v25 != v6)
    {
      if (v25 >= *(_QWORD *)&v4)
        v25 %= *(_QWORD *)&v4;
      if (v25 != v15)
        goto LABEL_52;
      goto LABEL_38;
    }
    if (v17[2] != v6)
    {
LABEL_38:
      v17 = (_QWORD *)*v17;
      if (!v17)
        goto LABEL_52;
      continue;
    }
    break;
  }
LABEL_35:
  sub_2396F295C(v17 + 3, a1 + 48, (uint64_t)&__p);
  v19 = MEMORY[0x24BEDB838];
  v20 = MEMORY[0x24BEDB838] + 64;
  v21 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v22 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v23 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v40[0] = MEMORY[0x24BEDB838] + 64;
  v38[0] = v22;
  *(_QWORD *)((char *)v38 + *(_QWORD *)(v22 - 24)) = v23;
  v38[1] = 0;
  v24 = (std::ios_base *)((char *)v38 + *(_QWORD *)(v38[0] - 24));
  std::ios_base::init(v24, v39);
  v24[1].__vftable = 0;
  v24[1].__fmtflags_ = -1;
  v38[0] = v19 + 24;
  v40[0] = v20;
  MEMORY[0x23B83DC80](v39);
  std::ifstream::open();
  if ((v39[*(_QWORD *)(v38[0] - 24) + 16] & 5) != 0)
  {
    *a3 = 0;
    a3[1] = 0;
  }
  else
  {
    v33 = *(_OWORD *)(a1 + 72);
    v34 = *(_QWORD *)(a1 + 88);
    sub_23961BD14(v38, 0, (uint64_t)&v33, (uint64_t)v35);
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)((char *)v38 + *(_QWORD *)(v38[0] - 24)), *(_DWORD *)&v39[*(_QWORD *)(v38[0] - 24) + 16] | 4);
    if (v35[136])
    {
      v26 = sub_239620FD4((uint64_t)v35);
      v27 = operator new(0xA0uLL);
      v27[1] = 0;
      v27[2] = 0;
      *v27 = &off_250ADD758;
      v27[3] = &off_250ADBEA0;
      *((_OWORD *)v27 + 2) = *(_OWORD *)(v26 + 8);
      *(_QWORD *)(v26 + 8) = 0;
      *(_QWORD *)(v26 + 16) = 0;
      v28 = *(_OWORD *)(v26 + 88);
      v29 = *(_OWORD *)(v26 + 104);
      v30 = *(_OWORD *)(v26 + 72);
      v27[18] = *(_QWORD *)(v26 + 120);
      *((_OWORD *)v27 + 7) = v28;
      *((_OWORD *)v27 + 8) = v29;
      *((_OWORD *)v27 + 6) = v30;
      v31 = *(_OWORD *)(v26 + 56);
      v32 = *(_OWORD *)(v26 + 24);
      *((_OWORD *)v27 + 4) = *(_OWORD *)(v26 + 40);
      *((_OWORD *)v27 + 5) = v31;
      *((_OWORD *)v27 + 3) = v32;
      *((_WORD *)v27 + 76) = *(_WORD *)(v26 + 128);
      *a3 = v27 + 3;
      a3[1] = v27;
    }
    else
    {
      *a3 = 0;
      a3[1] = 0;
    }
    sub_239621094((uint64_t)v35);
  }
  v38[0] = *v21;
  *(_QWORD *)((char *)v38 + *(_QWORD *)(v38[0] - 24)) = v21[3];
  MEMORY[0x23B83DC8C](v39);
  std::istream::~istream();
  MEMORY[0x23B83E250](v40);
  if (v37 < 0)
    operator delete(__p);
}

void sub_239B07530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37)
{
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;

  a37 = *v39;
  *(uint64_t *)((char *)&a37 + *(_QWORD *)(a37 - 24)) = v39[3];
  MEMORY[0x23B83DC8C](v38);
  std::istream::~istream();
  MEMORY[0x23B83E250](v37);
  if (a36 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B075B4(uint64_t result)
{
  uint64_t v1;
  _QWORD v2[3];

  if (*(_BYTE *)(result + 4) || *(_DWORD *)result >= 2u)
  {
    v1 = *(_QWORD *)(result + 1872);
    if (v1)
    {
      v2[0] = sub_239A9C608;
      v2[1] = 0;
      v2[2] = v1;
      return sub_239A9C8F0((uint64_t)v2);
    }
  }
  return result;
}

void sub_239B07600(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  _QWORD *v44;
  void *v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  void *v59[2];
  _QWORD *v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int v67;
  void *__p[2];
  uint64_t v69;
  _QWORD v70[3];
  _QWORD *v71;
  _QWORD v72[3];
  _QWORD *v73;
  uint64_t v74;

  v74 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 1888);
  if (v4)
  {
LABEL_8:
    v5 = *(_QWORD *)(a1 + 1896);
    if (!v5)
      goto LABEL_11;
    goto LABEL_9;
  }
  if (!*(_BYTE *)(a1 + 4) || !*(_BYTE *)(a1 + 1368))
  {
    v4 = 0;
    goto LABEL_8;
  }
  v4 = *(_QWORD *)(a1 + 1352);
  if (!v4)
    goto LABEL_8;
  sub_239A8DC0C((uint64_t)v59, a1 + 1328);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(&v61, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v61 = *(_OWORD *)(a1 + 8);
    v62 = *(_QWORD *)(a1 + 24);
  }
  v11 = *(_QWORD *)(a1 + 2312);
  v12 = *(std::__shared_weak_count **)(a1 + 2320);
  v54 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    v55 = 0;
    v56 = 0;
    v57 = v11;
    v58 = v12;
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
  }
  else
  {
    v55 = 0;
    v56 = 0;
    v57 = v11;
    v58 = 0;
  }
  v56 = (int)std::thread::hardware_concurrency();
  v16 = operator new(0x1B0uLL);
  v16[1] = 0;
  v16[2] = 0;
  *v16 = &off_250AF83E8;
  sub_239B07C88((uint64_t)&v63, (uint64_t)v59);
  v73 = 0;
  v17 = operator new(0x48uLL);
  v18 = v63;
  v19 = v64;
  v63 = 0;
  v64 = 0;
  *v17 = off_250AF4220;
  v17[1] = v18;
  v17[2] = v19;
  v21 = v65;
  v20 = v66;
  v17[3] = v65;
  v17[4] = v20;
  *((_DWORD *)v17 + 10) = v67;
  if (v20)
  {
    v22 = v21[1];
    if ((v19 & (v19 - 1)) != 0)
    {
      if (v22 >= v19)
        v22 %= v19;
    }
    else
    {
      v22 &= v19 - 1;
    }
    v18[v22] = v17 + 3;
    v65 = 0;
    v66 = 0;
  }
  *((_OWORD *)v17 + 3) = *(_OWORD *)__p;
  v17[8] = v69;
  __p[1] = 0;
  v69 = 0;
  __p[0] = 0;
  v73 = v17;
  v70[0] = &off_250AF4268;
  v71 = v70;
  sub_239B07D6C((uint64_t)(v16 + 3), &v55, v72, v70);
  v23 = v71;
  if (v71 == v70)
  {
    v24 = 4;
    v23 = v70;
  }
  else
  {
    if (!v71)
      goto LABEL_36;
    v24 = 5;
  }
  (*(void (**)(void))(*v23 + 8 * v24))();
LABEL_36:
  v25 = v73;
  if (v73 == v72)
  {
    v26 = 4;
    v25 = v72;
  }
  else
  {
    if (!v73)
      goto LABEL_41;
    v26 = 5;
  }
  (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_41:
  if (SHIBYTE(v69) < 0)
    operator delete(__p[0]);
  v27 = v65;
  if (v65)
  {
    do
    {
      v47 = (_QWORD *)*v27;
      v48 = v27[3];
      if (v48)
      {
        v49 = v27[4];
        v46 = (void *)v27[3];
        if (v49 != v48)
        {
          do
          {
            if (*(char *)(v49 - 1) < 0)
              operator delete(*(void **)(v49 - 24));
            v49 -= 24;
          }
          while (v49 != v48);
          v46 = (void *)v27[3];
        }
        v27[4] = v48;
        operator delete(v46);
      }
      operator delete(v27);
      v27 = v47;
    }
    while (v47);
  }
  v28 = v63;
  v63 = 0;
  if (v28)
    operator delete(v28);
  *(_QWORD *)(a1 + 1888) = v16 + 3;
  v29 = *(std::__shared_weak_count **)(a1 + 1896);
  *(_QWORD *)(a1 + 1896) = v16;
  if (v29)
  {
    v30 = (unint64_t *)&v29->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v32 = v58;
  if (v58)
  {
    v33 = (unint64_t *)&v58->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  if (v54)
  {
    v35 = (unint64_t *)&v54->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
      std::__shared_weak_count::__release_weak(v54);
    }
  }
  v37 = *(_QWORD *)(a1 + 1888);
  v38 = *(_QWORD *)(a1 + 1896);
  if (v38)
  {
    v39 = (unint64_t *)(v38 + 8);
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 1, v39));
  }
  *(_QWORD *)(a1 + 2120) = v37;
  v41 = *(std::__shared_weak_count **)(a1 + 2128);
  *(_QWORD *)(a1 + 2128) = v38;
  if (v41)
  {
    v42 = (unint64_t *)&v41->__shared_owners_;
    do
      v43 = __ldaxr(v42);
    while (__stlxr(v43 - 1, v42));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
      std::__shared_weak_count::__release_weak(v41);
    }
  }
  if (SHIBYTE(v62) < 0)
    operator delete((void *)v61);
  v44 = v60;
  if (v60)
  {
    do
    {
      v51 = (_QWORD *)*v44;
      v52 = v44[3];
      if (v52)
      {
        v53 = v44[4];
        v50 = (void *)v44[3];
        if (v53 != v52)
        {
          do
          {
            if (*(char *)(v53 - 1) < 0)
              operator delete(*(void **)(v53 - 24));
            v53 -= 24;
          }
          while (v53 != v52);
          v50 = (void *)v44[3];
        }
        v44[4] = v52;
        operator delete(v50);
      }
      operator delete(v44);
      v44 = v51;
    }
    while (v51);
  }
  v45 = v59[0];
  v59[0] = 0;
  if (v45)
    operator delete(v45);
  v4 = *(_QWORD *)(a1 + 1888);
  v5 = *(_QWORD *)(a1 + 1896);
  if (v5)
  {
LABEL_9:
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a2[1];
  *a2 = v4;
  a2[1] = v5;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239B07AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239A8E020((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B07B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,_QWORD *a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  std::__shared_weak_count *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;

  v38 = *(_QWORD **)(v36 - 128);
  if (v38 == v35)
  {
    v39 = 4;
    v38 = (_QWORD *)(v36 - 152);
  }
  else
  {
    if (!v38)
      goto LABEL_6;
    v39 = 5;
  }
  (*(void (**)(void))(*v38 + 8 * v39))();
LABEL_6:
  v40 = *(_QWORD **)(v36 - 96);
  if (v40 == (_QWORD *)(v36 - 120))
  {
    v41 = 4;
    v40 = (_QWORD *)(v36 - 120);
  }
  else
  {
    if (!v40)
    {
      if ((a34 & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_10;
    }
    v41 = 5;
  }
  (*(void (**)(void))(*v40 + 8 * v41))();
  if ((a34 & 0x80000000) == 0)
  {
LABEL_14:
    v42 = a26;
    if (!a26)
      goto LABEL_15;
    do
    {
LABEL_20:
      v45 = (_QWORD *)*v42;
      v46 = v42[3];
      if (v46)
      {
        v47 = v42[4];
        v44 = (void *)v42[3];
        if (v47 != v46)
        {
          do
          {
            if (*(char *)(v47 - 1) < 0)
              operator delete(*(void **)(v47 - 24));
            v47 -= 24;
          }
          while (v47 != v46);
          v44 = (void *)v42[3];
        }
        v42[4] = v46;
        operator delete(v44);
      }
      operator delete(v42);
      v42 = v45;
    }
    while (v45);
LABEL_15:
    v43 = a24;
    a24 = 0;
    if (v43)
      operator delete(v43);
    std::__shared_weak_count::~__shared_weak_count(v34);
    operator delete(v48);
    sub_239A74534((uint64_t)&a12);
    sub_239416DA0((uint64_t)&a10);
    sub_239A9E4FC((uint64_t)&a16);
    _Unwind_Resume(a1);
  }
LABEL_10:
  operator delete(__p);
  v42 = a26;
  if (!a26)
    goto LABEL_15;
  goto LABEL_20;
}

void sub_239B07C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a15)
  {
    p_shared_owners = (unint64_t *)&a15->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a15->__on_zero_shared)(a15);
      std::__shared_weak_count::__release_weak(a15);
    }
  }
  JUMPOUT(0x239B07C2CLL);
}

uint64_t sub_239B07C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = sub_239A8DC0C(a1, a2) + 40;
  if (*(char *)(a2 + 63) < 0)
  {
    sub_23941A7F8((_BYTE *)v4, *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)v4 = v5;
  }
  return a1;
}

void sub_239B07CEC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)(v1 + 16);
  if (v3)
  {
    do
    {
      v6 = (_QWORD *)*v3;
      v7 = v3[3];
      if (v7)
      {
        v8 = v3[4];
        v5 = (void *)v3[3];
        if (v8 != v7)
        {
          do
          {
            if (*(char *)(v8 - 1) < 0)
              operator delete(*(void **)(v8 - 24));
            v8 -= 24;
          }
          while (v8 != v7);
          v5 = (void *)v3[3];
        }
        v3[4] = v7;
        operator delete(v5);
      }
      operator delete(v3);
      v3 = v6;
    }
    while (v6);
  }
  v4 = *(void **)v1;
  *(_QWORD *)v1 = 0;
  if (v4)
    operator delete(v4);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B07D6C(uint64_t a1, uint64_t *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  pthread_rwlock_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  char *v34;
  _DWORD *v35;
  unsigned int v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  std::__shared_weak_count *v51;
  unint64_t *p_shared_owners;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  _QWORD v62[3];
  _QWORD *v63;
  uint64_t v64;
  _BYTE v65[24];
  _BYTE *v66;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  v7 = *a2;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = a1 + 56;
  *(_QWORD *)(a1 + 64) = a1 + 56;
  *(_OWORD *)(a1 + 72) = xmmword_239EC69E0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)a1 = &off_250AF84B0;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 240) = a2[2];
  v8 = a2[3];
  *(_QWORD *)(a1 + 248) = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = (uint64_t *)(a1 + 256);
  *(_OWORD *)(a1 + 304) = 0uLL;
  *(_OWORD *)(a1 + 320) = 0uLL;
  v60 = (uint64_t *)(a1 + 256);
  v61 = (uint64_t *)(a1 + 272);
  v12 = (_QWORD *)(a1 + 288);
  v13 = (_QWORD *)(a1 + 304);
  *(_OWORD *)(a1 + 272) = 0uLL;
  *(_OWORD *)(a1 + 288) = 0uLL;
  *(_OWORD *)(a1 + 256) = 0uLL;
  *(_DWORD *)(a1 + 336) = 1065353216;
  sub_2397A1618((pthread_mutex_t *)(a1 + 344));
  if (!*v12)
  {
    v34 = (char *)operator new(0x108uLL);
    *((_DWORD *)v34 + 6) = 0x7FFFFFFF;
    v35 = v34 + 24;
    *(_OWORD *)(v34 + 8) = 0u;
    *((_OWORD *)v34 + 2) = 0u;
    *(_QWORD *)v34 = &off_250AF84F0;
    *((_OWORD *)v34 + 3) = 0u;
    *((_OWORD *)v34 + 4) = 0u;
    v34[80] = 0;
    *(_OWORD *)(v34 + 88) = 0u;
    sub_2397A1618((pthread_mutex_t *)(v34 + 200));
    v36 = *((_DWORD *)v34 + 6);
    if (v36 >= 0x7FFFFFFF)
    {
      v36 = 0x7FFFFFFF;
      *v35 = 0x7FFFFFFF;
    }
    else if (v36 < 2)
    {
      v36 = 1;
    }
    *((_DWORD *)v34 + 6) = v36;
    pthread_cond_init((pthread_cond_t *)(v34 + 104), 0);
    pthread_cond_init((pthread_cond_t *)(v34 + 152), 0);
    v51 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = v35;
    *(_QWORD *)(a1 + 296) = v34;
    v11 = v60;
    if (v51)
    {
      p_shared_owners = (unint64_t *)&v51->__shared_owners_;
      do
        v53 = __ldaxr(p_shared_owners);
      while (__stlxr(v53 - 1, p_shared_owners));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
        std::__shared_weak_count::__release_weak(v51);
      }
    }
  }
  if (!*v11)
  {
    v14 = operator new(0x120uLL);
    v14[1] = 0;
    v14[2] = 0;
    *v14 = &off_250AE9800;
    v15 = sub_2397A1740((uint64_t)(v14 + 3));
    v16 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = v15;
    *(_QWORD *)(a1 + 264) = v14;
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v19 = *v11;
    v20 = (pthread_rwlock_t *)(*v11 + 24);
    j__pthread_rwlock_wrlock(v20);
    *(_BYTE *)(v19 + 16) = 1;
    j__pthread_rwlock_unlock(v20);
    sub_2397A195C(v19);
    v21 = (_QWORD *)operator new();
    *v21 = &off_250AF8528;
    v21[1] = a1;
    *(_QWORD *)(v19 + 224) = v21;
    sub_2397A1878((pthread_t *)v19);
  }
  if (!*v61)
  {
    v22 = *(_QWORD *)(a1 + 240);
    v23 = *(_QWORD *)(a1 + 248);
    if (v23)
    {
      v24 = (unint64_t *)(v23 + 8);
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
    }
    v26 = *(std::__shared_weak_count **)(a1 + 280);
    *(_QWORD *)(a1 + 272) = v22;
    *(_QWORD *)(a1 + 280) = v23;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
      v22 = *v61;
    }
    if (!v22)
    {
      v54 = *(_QWORD *)(a1 + 232);
      v55 = operator new(0x178uLL);
      v55[1] = 0;
      v55[2] = 0;
      *v55 = &off_250ADB8B0;
      v56 = sub_2397A2A50((uint64_t)(v55 + 3), v54, 0);
      v57 = *(std::__shared_weak_count **)(a1 + 280);
      *(_QWORD *)(a1 + 272) = v56;
      *(_QWORD *)(a1 + 280) = v55;
      if (v57)
      {
        v58 = (unint64_t *)&v57->__shared_owners_;
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
    }
  }
  sub_239467C88(a1);
  if (*(_QWORD *)(a1 + 328))
  {
    v29 = *(_QWORD **)(a1 + 320);
    if (v29)
    {
      do
      {
        v30 = (_QWORD *)*v29;
        operator delete(v29);
        v29 = v30;
      }
      while (v30);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v31 = *(_QWORD *)(a1 + 312);
    if (v31)
    {
      for (i = 0; i != v31; ++i)
        *(_QWORD *)(*v13 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  v33 = a3[3];
  if (!v33)
    goto LABEL_33;
  if ((_QWORD *)v33 != a3)
  {
    v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 16))(v33);
LABEL_33:
    v63 = (_QWORD *)v33;
    goto LABEL_38;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v62);
LABEL_38:
  v64 = a1;
  v66 = 0;
  v37 = operator new(0x30uLL);
  *v37 = &off_250AF87C8;
  v38 = (uint64_t)v63;
  if (!v63)
  {
LABEL_41:
    v37[4] = v38;
    goto LABEL_43;
  }
  if (v63 != v62)
  {
    v38 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_41;
  }
  v37[4] = v37 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_43:
  v37[5] = v64;
  v66 = v37;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v39 = v66;
  if (v66 == v65)
  {
    v40 = 4;
    v39 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_51;
    v40 = 5;
  }
  (*(void (**)(void))(*v39 + 8 * v40))();
LABEL_51:
  v41 = v63;
  if (v63 == v62)
  {
    v42 = 4;
    v41 = v62;
  }
  else
  {
    if (!v63)
      goto LABEL_56;
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
LABEL_56:
  v43 = a4[3];
  if (!v43)
  {
LABEL_59:
    v63 = (_QWORD *)v43;
    goto LABEL_61;
  }
  if ((_QWORD *)v43 != a4)
  {
    v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 16))(v43);
    goto LABEL_59;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a4 + 24))(a4, v62);
LABEL_61:
  v64 = a1;
  v66 = 0;
  v44 = operator new(0x30uLL);
  *v44 = &off_250AF8810;
  v45 = (uint64_t)v63;
  if (!v63)
  {
LABEL_64:
    v44[4] = v45;
    goto LABEL_66;
  }
  if (v63 != v62)
  {
    v45 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_64;
  }
  v44[4] = v44 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_66:
  v44[5] = v64;
  v66 = v44;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v46 = v66;
  if (v66 == v65)
  {
    v47 = 4;
    v46 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_74;
    v47 = 5;
  }
  (*(void (**)(void))(*v46 + 8 * v47))();
LABEL_74:
  v48 = v63;
  if (v63 == v62)
  {
    v49 = 4;
    v48 = v62;
    goto LABEL_78;
  }
  if (v63)
  {
    v49 = 5;
LABEL_78:
    (*(void (**)(void))(*v48 + 8 * v49))();
  }
  return a1;
}

void sub_239B083F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  _QWORD **v22;
  uint64_t v23;
  pthread_mutex_t *v24;
  std::__shared_weak_count *v25;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  std::__shared_weak_count::~__shared_weak_count(v25);
  operator delete(v27);
  sub_2397A163C(v24);
  sub_239420950(v23);
  sub_239A4D7C0(a10);
  sub_239416DA0(a12);
  sub_239416DA0(a11);
  sub_239A74534(v21 + 224);
  v28 = *v22;
  if (*v22 == (_QWORD *)(v21 + 176))
  {
    v29 = 4;
    v28 = (_QWORD *)(v21 + 176);
  }
  else
  {
    if (!v28)
      goto LABEL_6;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_6:
  v30 = *(_QWORD **)(v21 + 168);
  if (v30 == (_QWORD *)(v21 + 144))
  {
    v31 = 4;
    v30 = (_QWORD *)(v21 + 144);
  }
  else
  {
    if (!v30)
      goto LABEL_11;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_11:
  sub_239B085C8(v21);
  _Unwind_Resume(a1);
}

uint64_t sub_239B085C8(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;

  *(_QWORD *)a1 = &off_250AF84D0;
  sub_239467C88(a1);
  std::mutex::~mutex((std::mutex *)(a1 + 80));
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(_QWORD *)(a1 + 56);
    v2 = *(uint64_t **)(a1 + 64);
    v4 = *v2;
    *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
    **(_QWORD **)(v3 + 8) = v4;
    *(_QWORD *)(a1 + 72) = 0;
    if (v2 != (uint64_t *)(a1 + 56))
    {
      do
      {
        v5 = (uint64_t *)v2[1];
        operator delete(v2);
        v2 = v5;
      }
      while (v5 != (uint64_t *)(a1 + 56));
    }
  }
  v6 = *(_QWORD **)(a1 + 24);
  while (v6)
  {
    v9 = v6;
    v6 = (_QWORD *)*v6;
    v10 = (std::__shared_weak_count *)v9[4];
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    operator delete(v9);
  }
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v7)
    operator delete(v7);
  return a1;
}

void sub_239B086BC(uint64_t a1)
{
  sub_239B085C8(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B086E0(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF8810;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B0873C(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF8810;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B087A8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF8810;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239B08824(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B08838(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF8810;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239B088B0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B088E4(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239B08934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = a1 + 8;
    if (v1 == v3)
    {
      v10 = v9;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(v3, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    }
  }
  else
  {
    v10 = 0;
  }
  v4 = v2 + 176;
  if ((_QWORD *)(v2 + 176) != v9)
  {
    v5 = v10;
    v6 = *(_QWORD *)(v2 + 200);
    if (v10 == v9)
    {
      if (v6 == v4)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v2 + 200) + 24))(*(_QWORD *)(v2 + 200), v9);
        (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
        *(_QWORD *)(v2 + 200) = 0;
        v10 = v9;
        (*(void (**)(_QWORD *, uint64_t))(v11[0] + 24))(v11, v2 + 176);
        (*(void (**)(_QWORD *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v9[0] + 24))(v9, v2 + 176);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = *(_QWORD **)(v2 + 200);
      }
      *(_QWORD *)(v2 + 200) = v4;
    }
    else if (v6 == v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v2 + 176, v9);
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
      *(_QWORD *)(v2 + 200) = v10;
      v10 = v9;
    }
    else
    {
      v10 = *(_QWORD **)(v2 + 200);
      *(_QWORD *)(v2 + 200) = v5;
    }
  }
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239B08B28(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

_QWORD *sub_239B08B34(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF87C8;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B08B90(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF87C8;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B08BFC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF87C8;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239B08C78(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B08C8C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF87C8;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239B08D04(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B08D38(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239B08D88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  _QWORD v8[3];
  _QWORD *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a1 + 32;
  v2 = *(_QWORD *)(a1 + 32);
  v4 = (_QWORD *)(*(_QWORD *)(v3 + 8) + 144);
  if (v2)
  {
    v5 = a1 + 8;
    if (v2 == v5)
    {
      v9 = v8;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v5 + 24))(v5, v8);
    }
    else
    {
      v9 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
    }
  }
  else
  {
    v9 = 0;
  }
  sub_23948AB98(v8, v4);
  result = v9;
  if (v9 == v8)
  {
    v7 = 4;
    result = v8;
  }
  else
  {
    if (!v9)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239B08E68(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B08E8C(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  int *v3;
  BOOL v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  BOOL v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  int8x8_t v35;
  uint8x8_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  int8x8_t v43;
  uint8x8_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t *v60;
  unint64_t *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t *v79;
  __int128 v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  __int128 v90;
  char v91;
  __int128 v92;
  __int128 v93;
  char v94;
  _BYTE v95[24];
  _BYTE *v96;
  _BYTE v97[24];
  _BYTE *v98;
  _QWORD v99[3];
  _QWORD *v100;
  _BYTE v101[24];
  _BYTE *v102;
  _BYTE v103[24];
  _BYTE *v104;
  _BYTE v105[24];
  _BYTE *v106;
  uint64_t v107;

  v107 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(unsigned int **)(v1 + 288);
  if (v2)
  {
    sub_239B09BE8((uint64_t)&v93, v2);
    v3 = (int *)v93;
    if ((_QWORD)v93)
      v4 = v94 == 0;
    else
      v4 = 1;
    if (!v4)
    {
      v8 = (_QWORD *)(v1 + 304);
      while (2)
      {
        v10 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
        *(_QWORD *)&v92 = v3;
        *((_QWORD *)&v92 + 1) = *((_QWORD *)&v93 + 1);
        if (*((_QWORD *)&v93 + 1))
        {
          v11 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        v13 = *v3;
        switch(*v3)
        {
          case 0:
            if (v10)
            {
              p_shared_owners = (unint64_t *)&v10->__shared_owners_;
              do
                v15 = __ldxr(p_shared_owners);
              while (__stxr(v15 + 1, p_shared_owners));
              v16 = *((_QWORD *)v3 + 1);
              do
                v17 = __ldxr(p_shared_owners);
              while (__stxr(v17 + 1, p_shared_owners));
            }
            else
            {
              v16 = *((_QWORD *)v3 + 1);
            }
            v106 = 0;
            v50 = operator new(0x20uLL);
            *v50 = &off_250AF8550;
            v50[1] = v3;
            v50[2] = v10;
            v50[3] = v1;
            v106 = v50;
            v51 = sub_239B09DE0(v1, v16, (uint64_t)v105);
            v52 = v106;
            if (v106 == v105)
            {
              v52 = v105;
              v53 = 4;
            }
            else
            {
              if (!v106)
                goto LABEL_82;
              v53 = 5;
            }
            (*(void (**)(void))(*v52 + 8 * v53))();
LABEL_82:
            if ((v51 & 1) == 0)
              sub_239B09F38(*(unsigned int **)(v1 + 288), &v92);
            if (v10)
            {
              v58 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v58);
              while (__stlxr(v59 - 1, v58));
              goto LABEL_166;
            }
            goto LABEL_168;
          case 1:
            if (v10)
            {
              v29 = (unint64_t *)&v10->__shared_owners_;
              do
                v30 = __ldxr(v29);
              while (__stxr(v30 + 1, v29));
              v31 = *((unsigned __int8 *)v3 + 72);
              v32 = *((_QWORD *)v3 + 6);
              do
                v33 = __ldxr(v29);
              while (__stxr(v33 + 1, v29));
              if (!v31)
              {
LABEL_77:
                v104 = 0;
                v54 = operator new(0x20uLL);
                *v54 = &off_250AF8618;
                v54[1] = v3;
                v54[2] = v10;
                v54[3] = v1;
                v104 = v54;
                v55 = sub_239B09DE0(v1, v32, (uint64_t)v103);
                v56 = v104;
                if (v104 == v103)
                {
                  v56 = v103;
                  v57 = 4;
LABEL_160:
                  (*(void (**)(void))(*v56 + 8 * v57))();
                }
                else if (v104)
                {
                  v57 = 5;
                  goto LABEL_160;
                }
                if ((v55 & 1) == 0)
                  sub_239B09F38(*(unsigned int **)(v1 + 288), &v92);
                goto LABEL_163;
              }
            }
            else
            {
              v32 = *((_QWORD *)v3 + 6);
              if (!*((_BYTE *)v3 + 72))
                goto LABEL_77;
            }
            v102 = 0;
            v34 = operator new(0x20uLL);
            *v34 = &off_250AF8618;
            v34[1] = v3;
            v34[2] = v10;
            v34[3] = v1;
            v102 = v34;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v35 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v35)
              goto LABEL_151;
            v36 = (uint8x8_t)vcnt_s8(v35);
            v36.i16[0] = vaddlv_u8(v36);
            if (v36.u32[0] > 1uLL)
            {
              v37 = v32;
              if (*(_QWORD *)&v35 <= v32)
                v37 = v32 % *(_QWORD *)&v35;
            }
            else
            {
              v37 = (*(_QWORD *)&v35 - 1) & v32;
            }
            v71 = *(_QWORD **)(*v8 + 8 * v37);
            if (!v71 || (v72 = (_QWORD *)*v71) == 0)
            {
LABEL_151:
              v76 = 0;
              goto LABEL_152;
            }
            if (v36.u32[0] < 2uLL)
            {
              v73 = *(_QWORD *)&v35 - 1;
              while (1)
              {
                v75 = v72[1];
                if (v75 == v32)
                {
                  if (v72[2] == v32)
                    goto LABEL_184;
                }
                else if ((v75 & v73) != v37)
                {
                  goto LABEL_151;
                }
                v72 = (_QWORD *)*v72;
                if (!v72)
                  goto LABEL_151;
              }
            }
            while (1)
            {
              v74 = v72[1];
              if (v74 == v32)
                break;
              if (v74 >= *(_QWORD *)&v35)
                v74 %= *(_QWORD *)&v35;
              if (v74 != v37)
                goto LABEL_151;
LABEL_141:
              v72 = (_QWORD *)*v72;
              if (!v72)
                goto LABEL_151;
            }
            if (v72[2] != v32)
              goto LABEL_141;
LABEL_184:
            if (!v102)
              sub_2394172E0();
            (*(void (**)(_BYTE *))(*(_QWORD *)v102 + 48))(v102);
            v76 = 1;
LABEL_152:
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v77 = v102;
            if (v102 == v101)
            {
              v77 = v101;
              v78 = 4;
LABEL_156:
              (*(void (**)(void))(*v77 + 8 * v78))();
            }
            else if (v102)
            {
              v78 = 5;
              goto LABEL_156;
            }
            if ((v76 & 1) == 0)
            {
              sub_239A444D4((uint64_t)"unknown file", 793, (uint64_t)"", (void (*)(void *))sub_239A4463C);
              sub_239A4475C();
              abort();
            }
LABEL_163:
            if (v10)
            {
              v79 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v79);
              while (__stlxr(v59 - 1, v79));
              goto LABEL_166;
            }
LABEL_168:
            sub_239B09BE8((uint64_t)&v90, *(unsigned int **)(v1 + 288));
            v80 = v90;
            v90 = 0uLL;
            v81 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
            v93 = v80;
            if (v81)
            {
              v82 = (unint64_t *)&v81->__shared_owners_;
              do
                v83 = __ldaxr(v82);
              while (__stlxr(v83 - 1, v82));
              if (!v83)
              {
                ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                std::__shared_weak_count::__release_weak(v81);
              }
            }
            v94 = v91;
            v84 = (std::__shared_weak_count *)*((_QWORD *)&v90 + 1);
            if (!*((_QWORD *)&v90 + 1))
              goto LABEL_177;
            v85 = (unint64_t *)(*((_QWORD *)&v90 + 1) + 8);
            do
              v86 = __ldaxr(v85);
            while (__stlxr(v86 - 1, v85));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
              std::__shared_weak_count::__release_weak(v84);
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
              {
LABEL_178:
                v88 = (unint64_t *)&v87->__shared_owners_;
                do
                  v89 = __ldaxr(v88);
                while (__stlxr(v89 - 1, v88));
                if (!v89)
                {
                  ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                  std::__shared_weak_count::__release_weak(v87);
                }
              }
            }
            else
            {
LABEL_177:
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
                goto LABEL_178;
            }
            v3 = (int *)v93;
            if ((_QWORD)v93)
              v9 = v94 == 0;
            else
              v9 = 1;
            if (v9)
              break;
            continue;
          case 2:
            if (v10)
            {
              v24 = (unint64_t *)&v10->__shared_owners_;
              do
                v25 = __ldxr(v24);
              while (__stxr(v25 + 1, v24));
              v26 = *((_QWORD *)v3 + 14);
              do
                v27 = __ldxr(v24);
              while (__stxr(v27 + 1, v24));
            }
            else
            {
              v26 = *((_QWORD *)v3 + 14);
            }
            v100 = 0;
            v42 = operator new(0x20uLL);
            *v42 = &off_250AF86A8;
            v42[1] = v3;
            v42[2] = v10;
            v42[3] = v1;
            v100 = v42;
            *(_QWORD *)&v90 = v26;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v43 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v43)
              goto LABEL_122;
            v44 = (uint8x8_t)vcnt_s8(v43);
            v44.i16[0] = vaddlv_u8(v44);
            if (v44.u32[0] > 1uLL)
            {
              v45 = v26;
              if (*(_QWORD *)&v43 <= v26)
                v45 = v26 % *(_QWORD *)&v43;
            }
            else
            {
              v45 = (*(_QWORD *)&v43 - 1) & v26;
            }
            v62 = *(_QWORD **)(*v8 + 8 * v45);
            if (!v62)
              goto LABEL_122;
            v63 = (_QWORD *)*v62;
            if (!v63)
              goto LABEL_122;
            if (v44.u32[0] < 2uLL)
            {
              v64 = *(_QWORD *)&v43 - 1;
              while (1)
              {
                v66 = v63[1];
                if (v66 == v26)
                {
                  if (v63[2] == v26)
                    goto LABEL_121;
                }
                else if ((v66 & v64) != v45)
                {
                  goto LABEL_122;
                }
                v63 = (_QWORD *)*v63;
                if (!v63)
                  goto LABEL_122;
              }
            }
            while (1)
            {
              v65 = v63[1];
              if (v65 == v26)
              {
                if (v63[2] == v26)
                {
LABEL_121:
                  v67 = 0;
                  goto LABEL_123;
                }
              }
              else
              {
                if (v65 >= *(_QWORD *)&v43)
                  v65 %= *(_QWORD *)&v43;
                if (v65 != v45)
                {
LABEL_122:
                  sub_239465800(v1 + 304, (unint64_t *)&v90, &v90);
                  sub_239A7798C(*(_QWORD *)(v1 + 272), v99);
                  v67 = 1;
LABEL_123:
                  sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
                  v68 = v100;
                  if (v100 == v99)
                  {
                    v68 = v99;
                    v69 = 4;
LABEL_127:
                    (*(void (**)(void))(*v68 + 8 * v69))();
                  }
                  else if (v100)
                  {
                    v69 = 5;
                    goto LABEL_127;
                  }
                  if ((v67 & 1) == 0)
                    sub_239B09F38(*(unsigned int **)(v1 + 288), &v92);
                  if (v10)
                  {
                    v70 = (unint64_t *)&v10->__shared_owners_;
                    do
                      v59 = __ldaxr(v70);
                    while (__stlxr(v59 - 1, v70));
                    goto LABEL_166;
                  }
                  goto LABEL_168;
                }
              }
              v63 = (_QWORD *)*v63;
              if (!v63)
                goto LABEL_122;
            }
          case 3:
            v90 = *(_OWORD *)(v1 + 208);
            v28 = *((_QWORD *)v3 + 24);
            if (v28)
              (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)v28 + 48))(v28, &v90);
            goto LABEL_168;
          default:
            if (v13 != 99)
            {
              if (v13 != 100)
                goto LABEL_168;
              if (v10)
              {
                v18 = (unint64_t *)&v10->__shared_owners_;
                do
                  v19 = __ldxr(v18);
                while (__stxr(v19 + 1, v18));
                do
                  v20 = __ldxr(v18);
                while (__stxr(v20 + 1, v18));
              }
              v96 = 0;
              v46 = operator new(0x20uLL);
              *v46 = &off_250AF8738;
              v46[1] = v3;
              v46[2] = v10;
              v46[3] = v1;
              v96 = v46;
              sub_2397A1694((pthread_mutex_t *)(v1 + 344));
              v47 = *(_QWORD *)(v1 + 328);
              if (!v47)
              {
                if (!v96)
                  sub_2394172E0();
                (*(void (**)(_BYTE *))(*(_QWORD *)v96 + 48))(v96);
              }
              sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
              v48 = v96;
              if (v96 == v95)
              {
                v48 = v95;
                v49 = 4;
              }
              else
              {
                if (!v96)
                {
LABEL_98:
                  if (v47)
                    sub_239B09F38(*(unsigned int **)(v1 + 288), &v92);
                  if (!v10)
                    goto LABEL_168;
                  v61 = (unint64_t *)&v10->__shared_owners_;
                  do
                    v59 = __ldaxr(v61);
                  while (__stlxr(v59 - 1, v61));
                  goto LABEL_166;
                }
                v49 = 5;
              }
              (*(void (**)(void))(*v48 + 8 * v49))();
              goto LABEL_98;
            }
            if (v10)
            {
              v21 = (unint64_t *)&v10->__shared_owners_;
              do
                v22 = __ldxr(v21);
              while (__stxr(v22 + 1, v21));
              do
                v23 = __ldxr(v21);
              while (__stxr(v23 + 1, v21));
            }
            v98 = 0;
            v38 = operator new(0x20uLL);
            *v38 = &off_250AF86F0;
            v38[1] = v3;
            v38[2] = v10;
            v38[3] = v1;
            v98 = v38;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v39 = *(_QWORD *)(v1 + 328);
            if (!v39)
            {
              if (!v98)
                sub_2394172E0();
              (*(void (**)(_BYTE *))(*(_QWORD *)v98 + 48))(v98);
            }
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v40 = v98;
            if (v98 == v97)
            {
              v40 = v97;
              v41 = 4;
            }
            else
            {
              if (!v98)
              {
LABEL_90:
                if (v39)
                  sub_239B09F38(*(unsigned int **)(v1 + 288), &v92);
                if (!v10)
                  goto LABEL_168;
                v60 = (unint64_t *)&v10->__shared_owners_;
                do
                  v59 = __ldaxr(v60);
                while (__stlxr(v59 - 1, v60));
LABEL_166:
                if (!v59)
                {
                  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
                  std::__shared_weak_count::__release_weak(v10);
                }
                goto LABEL_168;
              }
              v41 = 5;
            }
            (*(void (**)(void))(*v40 + 8 * v41))();
            goto LABEL_90;
        }
        break;
      }
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
    if (*((_QWORD *)&v93 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
}

void sub_239B0979C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,char *a34)
{
  std::__shared_weak_count *v34;
  pthread_mutex_t *v35;
  char *v37;
  uint64_t v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;

  sub_2397A16B4(v35);
  v37 = a34;
  if (a34 == &a31)
  {
    v38 = 4;
    v37 = &a31;
  }
  else
  {
    if (!a34)
    {
LABEL_6:
      if (v34)
      {
        p_shared_owners = (unint64_t *)&v34->__shared_owners_;
        do
          v40 = __ldaxr(p_shared_owners);
        while (__stlxr(v40 - 1, p_shared_owners));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      if (a14)
      {
        v41 = (unint64_t *)&a14->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
          std::__shared_weak_count::__release_weak(a14);
        }
      }
      if (a16)
      {
        v43 = (unint64_t *)&a16->__shared_owners_;
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
          std::__shared_weak_count::__release_weak(a16);
        }
      }
      _Unwind_Resume(a1);
    }
    v38 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v37 + 8 * v38))();
  goto LABEL_6;
}

uint64_t sub_239B09BE8(uint64_t a1, unsigned int *a2)
{
  pthread_mutex_t *v4;
  __int128 v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v17;

  v4 = (pthread_mutex_t *)(a2 + 44);
  sub_2397A1694((pthread_mutex_t *)(a2 + 44));
  if (*((_QWORD *)a2 + 6))
  {
LABEL_4:
    v5 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 2) + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                   + 16 * *((_QWORD *)a2 + 5));
    v17 = v5;
    if (*((_QWORD *)&v5 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
      v8 = *(std::__shared_weak_count **)(*(_QWORD *)(*((_QWORD *)a2 + 2)
                                                    + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                                        + 16 * *((_QWORD *)a2 + 5)
                                        + 8);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
    }
    v11 = *((_QWORD *)a2 + 6) - 1;
    v12 = *((_QWORD *)a2 + 5) + 1;
    *((_QWORD *)a2 + 5) = v12;
    *((_QWORD *)a2 + 6) = v11;
    if (v12 >= 0x200)
    {
      operator delete(**((void ***)a2 + 2));
      *((_QWORD *)a2 + 2) += 8;
      v11 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a2 + 5) -= 256;
    }
    if (v11 < *a2)
      pthread_cond_signal((pthread_cond_t *)(a2 + 20));
    *(_OWORD *)a1 = v17;
    if (*((_QWORD *)&v17 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v17 + 1) + 16))(*((_QWORD *)&v17 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v17 + 1));
      }
    }
    else
    {
      *(_BYTE *)(a1 + 16) = 1;
    }
  }
  else
  {
    while (!*((_BYTE *)a2 + 56))
    {
      ++*((_QWORD *)a2 + 9);
      pthread_cond_wait((pthread_cond_t *)(a2 + 32), v4);
      --*((_QWORD *)a2 + 9);
      if (*((_QWORD *)a2 + 6))
        goto LABEL_4;
    }
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 0;
  }
  return sub_2397A16B4(v4);
}

void sub_239B09DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pthread_mutex_t *v9;

  sub_239A4D7C0((uint64_t)&a9);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_239B09DE0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  pthread_mutex_t *v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v7 = *(int8x8_t *)(a1 + 312);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8(v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v9 = a2;
      if (*(_QWORD *)&v7 <= a2)
        v9 = a2 % *(_QWORD *)&v7;
    }
    else
    {
      v9 = (*(_QWORD *)&v7 - 1) & a2;
    }
    v10 = *(_QWORD **)(*(_QWORD *)(a1 + 304) + 8 * v9);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (v11)
      {
        if (v8.u32[0] < 2uLL)
        {
          v12 = *(_QWORD *)&v7 - 1;
          while (1)
          {
            v14 = v11[1];
            if (v14 == a2)
            {
              if (v11[2] == a2)
                goto LABEL_21;
            }
            else if ((v14 & v12) != v9)
            {
              goto LABEL_22;
            }
            v11 = (_QWORD *)*v11;
            if (!v11)
              goto LABEL_22;
          }
        }
        do
        {
          v13 = v11[1];
          if (v13 == a2)
          {
            if (v11[2] == a2)
            {
LABEL_21:
              v15 = 0;
              goto LABEL_24;
            }
          }
          else
          {
            if (v13 >= *(_QWORD *)&v7)
              v13 %= *(_QWORD *)&v7;
            if (v13 != v9)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_22:
  v16 = *(_QWORD *)(a3 + 24);
  if (!v16)
    sub_2394172E0();
  (*(void (**)(uint64_t))(*(_QWORD *)v16 + 48))(v16);
  v15 = 1;
LABEL_24:
  sub_2397A16B4(v6);
  return v15;
}

void sub_239B09F20(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B09F38(unsigned int *a1, _OWORD *a2)
{
  pthread_mutex_t *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  void *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  BOOL v36;
  int64_t v37;
  unint64_t v38;
  char *v39;
  void *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  _OWORD *v54;
  uint64_t v55;
  __int128 v56;
  unint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  _OWORD *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  size_t v103;
  char *v104;
  unint64_t v105;
  char *v106;
  char *v107;
  int64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 *v114;
  _OWORD *v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  void *v119;
  _OWORD *v120;

  v4 = (pthread_mutex_t *)(a1 + 44);
  sub_2397A1694((pthread_mutex_t *)(a1 + 44));
  v5 = *((_QWORD *)a1 + 6);
  if (v5 >= *a1)
  {
    while (!*((_BYTE *)a1 + 56))
    {
      ++*((_QWORD *)a1 + 8);
      pthread_cond_wait((pthread_cond_t *)(a1 + 20), v4);
      --*((_QWORD *)a1 + 8);
      v5 = *((_QWORD *)a1 + 6);
      if (v5 < *a1)
        goto LABEL_4;
    }
    goto LABEL_5;
  }
LABEL_4:
  if (*((_BYTE *)a1 + 56))
  {
LABEL_5:
    v6 = 0;
    goto LABEL_100;
  }
  v7 = (char *)*((_QWORD *)a1 + 3);
  v8 = (char *)*((_QWORD *)a1 + 2);
  v9 = v7 - v8;
  if (v7 == v8)
    v10 = 0;
  else
    v10 = 32 * (v7 - v8) - 1;
  v11 = *((_QWORD *)a1 + 5);
  v12 = v11 + v5;
  if (v10 == v11 + v5)
  {
    if (v11 >= 0x100)
    {
      *((_QWORD *)a1 + 5) = v11 - 256;
      v13 = v8 + 8;
      v14 = *(_QWORD *)v8;
      *((_QWORD *)a1 + 2) = v8 + 8;
      if (*((char **)a1 + 4) != v7)
      {
LABEL_92:
        *(_QWORD *)v7 = v14;
        goto LABEL_93;
      }
      v15 = (char *)*((_QWORD *)a1 + 1);
      if (v13 > v15)
      {
        v16 = (v13 - v15) >> 3;
        if (v16 >= -1)
          v17 = v16 + 1;
        else
          v17 = v16 + 2;
        v18 = v17 >> 1;
        v19 = -v18;
        v20 = &v13[-8 * v18];
        v21 = v7 - v13;
        if (v7 == v13)
        {
          v22 = v7;
        }
        else
        {
          memmove(&v13[-8 * v18], v13, v7 - v13);
          v22 = (char *)*((_QWORD *)a1 + 2);
        }
        v7 = &v20[v21];
        *((_QWORD *)a1 + 2) = &v22[8 * v19];
        *((_QWORD *)a1 + 3) = &v20[v21];
        goto LABEL_92;
      }
      if (v7 == v15)
        v33 = 1;
      else
        v33 = (v7 - v15) >> 2;
      if (!(v33 >> 61))
      {
        v34 = (char *)operator new(8 * v33);
        v35 = &v34[8 * (v33 >> 2)];
        v37 = v7 - v13;
        v36 = v7 == v13;
        v7 = v35;
        if (v36)
          goto LABEL_90;
        v7 = &v35[v37 & 0xFFFFFFFFFFFFFFF8];
        v38 = v37 - 8;
        if (v38 >= 0x38)
        {
          v81 = &v34[8 * (v33 >> 2)];
          v39 = v81;
          if ((unint64_t)(v81 - v13) >= 0x20)
          {
            v82 = (v38 >> 3) + 1;
            v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
            v39 = &v35[v83];
            v84 = (__int128 *)(v8 + 24);
            v85 = v81 + 16;
            v86 = v82 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v87 = *v84;
              *(v85 - 1) = *(v84 - 1);
              *v85 = v87;
              v84 += 2;
              v85 += 2;
              v86 -= 4;
            }
            while (v86);
            if (v82 == (v82 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_90:
              *((_QWORD *)a1 + 1) = v34;
              *((_QWORD *)a1 + 2) = v35;
              *((_QWORD *)a1 + 3) = v7;
              *((_QWORD *)a1 + 4) = &v34[8 * v33];
              if (v15)
              {
                operator delete(v15);
                v7 = (char *)*((_QWORD *)a1 + 3);
              }
              goto LABEL_92;
            }
            v13 += v83;
          }
        }
        else
        {
          v39 = &v34[8 * (v33 >> 2)];
        }
        do
        {
          v88 = *(_QWORD *)v13;
          v13 += 8;
          *(_QWORD *)v39 = v88;
          v39 += 8;
        }
        while (v39 != v7);
        goto LABEL_90;
      }
LABEL_130:
      sub_239418A80();
    }
    v23 = v9 >> 3;
    v24 = (char *)*((_QWORD *)a1 + 4);
    v25 = (char *)*((_QWORD *)a1 + 1);
    v26 = v24 - v25;
    if (v9 >> 3 < (unint64_t)((v24 - v25) >> 3))
    {
      if (v24 != v7)
      {
        *(_QWORD *)v7 = operator new(0x1000uLL);
LABEL_93:
        *((_QWORD *)a1 + 3) += 8;
LABEL_94:
        v8 = (char *)*((_QWORD *)a1 + 2);
        v5 = *((_QWORD *)a1 + 6);
        v12 = v5 + *((_QWORD *)a1 + 5);
        goto LABEL_95;
      }
      v40 = operator new(0x1000uLL);
      v41 = v8;
      if (v25 != v8)
      {
LABEL_105:
        *((_QWORD *)v41 - 1) = v40;
        v94 = (char *)*((_QWORD *)a1 + 2);
        v95 = (char *)*((_QWORD *)a1 + 3);
        *((_QWORD *)a1 + 2) = v94 - 8;
        v96 = *((_QWORD *)v94 - 1);
        *((_QWORD *)a1 + 2) = v94;
        if (v95 != *((char **)a1 + 4))
        {
LABEL_106:
          *(_QWORD *)v95 = v96;
          goto LABEL_93;
        }
        v97 = (char *)*((_QWORD *)a1 + 1);
        if (v94 > v97)
        {
          v98 = (v94 - v97) >> 3;
          if (v98 >= -1)
            v99 = v98 + 1;
          else
            v99 = v98 + 2;
          v100 = v99 >> 1;
          v101 = -v100;
          v102 = &v94[-8 * v100];
          v103 = v95 - v94;
          if (v103)
          {
            memmove(&v94[-8 * v100], v94, v103);
            v94 = (char *)*((_QWORD *)a1 + 2);
          }
          v104 = &v102[v103];
          *((_QWORD *)a1 + 2) = &v94[8 * v101];
          *((_QWORD *)a1 + 3) = v104;
          *(_QWORD *)v104 = v96;
          goto LABEL_93;
        }
        if (v95 == v97)
          v105 = 1;
        else
          v105 = (v95 - v97) >> 2;
        if (v105 >> 61)
          goto LABEL_130;
        v106 = (char *)operator new(8 * v105);
        v107 = &v106[8 * (v105 >> 2)];
        v108 = v95 - v94;
        v36 = v95 == v94;
        v95 = v107;
        if (!v36)
        {
          v95 = &v107[v108 & 0xFFFFFFFFFFFFFFF8];
          v109 = v108 - 8;
          if (v109 < 0x38)
          {
            v110 = &v106[8 * (v105 >> 2)];
            goto LABEL_126;
          }
          v111 = &v106[8 * (v105 >> 2)];
          v110 = v111;
          if ((unint64_t)(v111 - v94) < 0x20)
          {
            do
            {
LABEL_126:
              v118 = *(_QWORD *)v94;
              v94 += 8;
              *(_QWORD *)v110 = v118;
              v110 += 8;
            }
            while (v110 != v95);
            goto LABEL_127;
          }
          v112 = (v109 >> 3) + 1;
          v113 = 8 * (v112 & 0x3FFFFFFFFFFFFFFCLL);
          v110 = &v107[v113];
          v114 = (__int128 *)(v94 + 16);
          v115 = v111 + 16;
          v116 = v112 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v117 = *v114;
            *(v115 - 1) = *(v114 - 1);
            *v115 = v117;
            v114 += 2;
            v115 += 2;
            v116 -= 4;
          }
          while (v116);
          if (v112 != (v112 & 0x3FFFFFFFFFFFFFFCLL))
          {
            v94 += v113;
            goto LABEL_126;
          }
        }
LABEL_127:
        *((_QWORD *)a1 + 1) = v106;
        *((_QWORD *)a1 + 2) = v107;
        *((_QWORD *)a1 + 3) = v95;
        *((_QWORD *)a1 + 4) = &v106[8 * v105];
        if (v97)
        {
          operator delete(v97);
          v95 = (char *)*((_QWORD *)a1 + 3);
        }
        goto LABEL_106;
      }
      if (v7 == v8)
        v42 = 1;
      else
        v42 = v26 >> 2;
      if (v42 >> 61)
        goto LABEL_130;
      v43 = (char *)operator new(8 * v42);
      v44 = (v42 + 3) >> 2;
      v41 = &v43[8 * v44];
      v45 = &v43[8 * v42];
      v46 = v41;
      if (v7 != v8)
      {
        v46 = &v41[(v7 - v25) & 0xFFFFFFFFFFFFFFF8];
        v47 = v7 - v25 - 8;
        v48 = &v43[8 * v44];
        v49 = v8;
        if (v47 > 0x37)
        {
          v50 = &v43[8 * v44];
          v48 = v50;
          v49 = v8;
          if ((unint64_t)(v50 - v25) >= 0x20)
          {
            v51 = (v47 >> 3) + 1;
            v52 = 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
            v48 = &v41[v52];
            v53 = (__int128 *)(v8 + 16);
            v54 = v50 + 16;
            v55 = v51 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v56 = *v53;
              *(v54 - 1) = *(v53 - 1);
              *v54 = v56;
              v53 += 2;
              v54 += 2;
              v55 -= 4;
            }
            while (v55);
            if (v51 == (v51 & 0x3FFFFFFFFFFFFFFCLL))
            {
              *((_QWORD *)a1 + 1) = v43;
              *((_QWORD *)a1 + 2) = v41;
              *((_QWORD *)a1 + 3) = v46;
              *((_QWORD *)a1 + 4) = v45;
LABEL_104:
              operator delete(v8);
              v41 = (char *)*((_QWORD *)a1 + 2);
              goto LABEL_105;
            }
            v49 = &v8[v52];
          }
        }
        do
        {
          v93 = *(_QWORD *)v49;
          v49 += 8;
          *(_QWORD *)v48 = v93;
          v48 += 8;
        }
        while (v48 != v46);
      }
      *((_QWORD *)a1 + 1) = v43;
      *((_QWORD *)a1 + 2) = v41;
      *((_QWORD *)a1 + 3) = v46;
      *((_QWORD *)a1 + 4) = v45;
      if (!v8)
        goto LABEL_105;
      goto LABEL_104;
    }
    if (v24 == v25)
      v27 = 1;
    else
      v27 = v26 >> 2;
    if (v27 >> 61)
      goto LABEL_130;
    v28 = (char *)operator new(8 * v27);
    v120 = a2;
    v29 = operator new(0x1000uLL);
    v30 = &v28[8 * v23];
    v31 = &v28[8 * v27];
    if (v23 == v27)
    {
      v119 = v29;
      if (v9 < 1)
      {
        if (v7 == v8)
          v57 = 1;
        else
          v57 = v9 >> 2;
        if (v57 >> 61)
          sub_239418A80();
        v30 = (char *)operator new(8 * v57);
        v31 = &v30[8 * v57];
        operator delete(v28);
        v8 = (char *)*((_QWORD *)a1 + 2);
        v7 = (char *)*((_QWORD *)a1 + 3);
        v28 = v30;
      }
      else
      {
        v32 = v23 + 2;
        if (v23 >= -1)
          v32 = v23 + 1;
        v30 -= 8 * (v32 >> 1);
      }
      v29 = v119;
    }
    *(_QWORD *)v30 = v29;
    v58 = v30 + 8;
    if (v7 == v8)
    {
      v59 = v30;
      v60 = v30 + 8;
LABEL_57:
      v61 = (void *)*((_QWORD *)a1 + 1);
      *((_QWORD *)a1 + 1) = v28;
      *((_QWORD *)a1 + 2) = v59;
      *((_QWORD *)a1 + 3) = v60;
      *((_QWORD *)a1 + 4) = v31;
      a2 = v120;
      if (v61)
        operator delete(v61);
      goto LABEL_94;
    }
    while (v30 != v28)
    {
      v62 = v30;
      v60 = v58;
LABEL_60:
      v63 = *((_QWORD *)v7 - 1);
      v7 -= 8;
      *((_QWORD *)v62 - 1) = v63;
      v59 = v62 - 8;
      v58 = v60;
      v30 = v59;
      if (v7 == *((char **)a1 + 2))
        goto LABEL_57;
    }
    if (v58 < v31)
    {
      v64 = (v31 - v58) >> 3;
      if (v64 >= -1)
        v65 = v64 + 1;
      else
        v65 = v64 + 2;
      v60 = &v58[8 * (v65 >> 1)];
      v62 = &v30[8 * (v65 >> 1)];
      if (v58 == v30)
      {
        v28 = v58;
      }
      else
      {
        memmove(&v30[8 * (v65 >> 1)], v30, v58 - v30);
        v28 = v30;
      }
      goto LABEL_60;
    }
    if (v31 == v30)
      v66 = 1;
    else
      v66 = (v31 - v30) >> 2;
    if (v66 >> 61)
      sub_239418A80();
    v67 = (char *)operator new(8 * v66);
    v28 = v67;
    v68 = (v66 + 3) >> 2;
    v62 = &v67[8 * v68];
    v60 = v62;
    v69 = v58 - v30;
    if (v58 != v30)
    {
      v60 = &v62[v69 & 0xFFFFFFFFFFFFFFF8];
      v70 = v69 - 8;
      v71 = &v67[8 * v68];
      v72 = v30;
      if (v70 >= 0x38)
      {
        v73 = 8 * v68;
        v71 = &v67[8 * v68];
        v72 = v30;
        if ((unint64_t)(v71 - v30) >= 0x20)
        {
          v74 = (v70 >> 3) + 1;
          v75 = 8 * (v74 & 0x3FFFFFFFFFFFFFFCLL);
          v71 = &v62[v75];
          v76 = (__int128 *)(v30 + 16);
          v77 = &v67[v73 + 16];
          v78 = v74 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v79 = *v76;
            *((_OWORD *)v77 - 1) = *(v76 - 1);
            *(_OWORD *)v77 = v79;
            v76 += 2;
            v77 += 32;
            v78 -= 4;
          }
          while (v78);
          if (v74 == (v74 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_80;
          v72 = &v30[v75];
        }
      }
      do
      {
        v80 = *(_QWORD *)v72;
        v72 += 8;
        *(_QWORD *)v71 = v80;
        v71 += 8;
      }
      while (v71 != v60);
    }
LABEL_80:
    v31 = &v67[8 * v66];
    operator delete(v30);
    goto LABEL_60;
  }
LABEL_95:
  v89 = *a2;
  *(_OWORD *)(*(_QWORD *)&v8[(v12 >> 5) & 0x7FFFFFFFFFFFFF8] + 16 * v12) = *a2;
  if (*((_QWORD *)&v89 + 1))
  {
    v90 = (unint64_t *)(*((_QWORD *)&v89 + 1) + 8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 1, v90));
    v5 = *((_QWORD *)a1 + 6);
  }
  *((_QWORD *)a1 + 6) = v5 + 1;
  pthread_cond_signal((pthread_cond_t *)(a1 + 32));
  v6 = 1;
LABEL_100:
  sub_2397A16B4(v4);
  return v6;
}

void sub_239B0A6AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  pthread_mutex_t *v9;
  void *v10;

  operator delete(__p);
  operator delete(v10);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B0A6FC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8738;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B0A760(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8738;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0A7D4(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8738;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B0A82C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8738;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B0A864(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B0A8BC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B0A914(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned int *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unsigned __int16 i;
  uint64_t v27;
  uint64_t v29;
  unsigned int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  pthread_cond_t v37;
  pthread_cond_t v38;
  pthread_mutex_t v39;
  _BYTE v40[24];
  _BYTE *v41;
  uint64_t v42;

  v1 = a1;
  v42 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD **)(a1 + 24);
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_2397A1618(&v39);
  v30 = 0x7FFFFFFF;
  pthread_cond_init(&v37, 0);
  pthread_cond_init(&v38, 0);
  v3 = (_QWORD *)v2[3];
  if (!v3)
    goto LABEL_44;
  v29 = v1;
  v4 = 0;
  do
  {
    v6 = v3[2];
    v5 = v3[3];
    v7 = (std::__shared_weak_count *)v3[4];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }
    if (!v5 || !v2[25])
    {
      if (!v7)
        goto LABEL_4;
      goto LABEL_36;
    }
    if (v7)
    {
      v10 = (unint64_t *)&v7->__shared_owners_;
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
      v12 = v2[34];
      if (!*(_QWORD *)(v12 + 272))
      {
LABEL_50:
        sub_239A444D4((uint64_t)"unknown file", 546, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      v13 = (unint64_t *)&v7->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v15 = *(unsigned int **)(v12 + 272);
      do
        v16 = __ldxr(v13);
      while (__stxr(v16 + 1, v13));
    }
    else
    {
      v15 = *(unsigned int **)(v2[34] + 272);
      if (!v15)
        goto LABEL_50;
    }
    v41 = 0;
    v17 = operator new(0x38uLL);
    *v17 = &off_250AF8780;
    v17[1] = v6;
    v17[2] = v5;
    v17[3] = v7;
    v17[4] = &v30;
    v17[5] = v2;
    v41 = v17;
    sub_2394D0CC4(v15, (uint64_t)v40);
    v18 = v41;
    if (v41 == v40)
    {
      v18 = v40;
      v19 = 4;
      goto LABEL_26;
    }
    if (v41)
    {
      v19 = 5;
LABEL_26:
      (*(void (**)(void))(*v18 + 8 * v19))();
    }
    if (!v7)
    {
      ++v4;
      goto LABEL_4;
    }
    v20 = (unint64_t *)&v7->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    ++v4;
    v22 = (unint64_t *)&v7->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_36:
    v24 = (unint64_t *)&v7->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_4:
    v3 = (_QWORD *)*v3;
  }
  while (v3);
  v1 = v29;
  if (v4 && (unsigned __int16)sub_2395BFB54(&v30) >= 0x100u)
  {
    do
      --v4;
    while (v4 && (unsigned __int16)sub_2395BFB54(&v30) > 0xFFu);
  }
LABEL_44:
  sub_2395C2A4C((uint64_t)&v30);
  for (i = sub_2395BFB54(&v30); i >= 0x100u; i = sub_2395BFB54(&v30))
    ;
  v27 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 256);
  if (v27)
  {
    v40[0] = 1;
    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v27 + 48))(v27, v40);
  }
  return sub_2395C29C4((uint64_t)&v30);
}

void sub_239B0AC6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_2395C29C4((uint64_t)&a11);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B0AE5C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8780;
  v2 = (std::__shared_weak_count *)a1[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B0AEC0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8780;
  v1 = (std::__shared_weak_count *)a1[3];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B0AF34(__n128 *a1)
{
  __n128 *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  __n128 result;

  v2 = (__n128 *)operator new(0x38uLL);
  v3 = a1->n128_u64[1];
  v4 = a1[1].n128_u64[0];
  v2->n128_u64[0] = (unint64_t)&off_250AF8780;
  v2->n128_u64[1] = v3;
  v5 = a1[1].n128_u64[1];
  v2[1].n128_u64[0] = v4;
  v2[1].n128_u64[1] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[2];
  v2[2] = result;
  return result;
}

__n128 sub_239B0AF90(__n128 *a1, __n128 *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __n128 result;

  v2 = a1->n128_u64[1];
  v3 = a1[1].n128_u64[0];
  a2->n128_u64[0] = (unint64_t)&off_250AF8780;
  a2->n128_u64[1] = v2;
  v4 = a1[1].n128_u64[1];
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = a1[2];
  a2[2] = result;
  return result;
}

void sub_239B0AFCC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B0B024(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B0B07C(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v2 = a1[5];
  v3 = (std::__shared_weak_count *)a1[3];
  v12 = a1[2];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v14 = a1[1];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v12, &v14);
  v7 = v13;
  if (v13)
  {
    v8 = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (unsigned int *)a1[4];
  LOBYTE(v14) = 1;
  return sub_2395BFE44(v10, &v14);
}

void sub_239B0B13C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B0B180(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF86F0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B0B1E4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF86F0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0B258(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF86F0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B0B2B0(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF86F0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B0B2E8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B0B340(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B0B398(uint64_t a1)
{
  uint64_t result;

  sub_239467C88(*(_QWORD *)(a1 + 24));
  result = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 224);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

_QWORD *sub_239B0B3DC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF86A8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B0B440(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF86A8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0B4B4(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF86A8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B0B50C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF86A8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B0B544(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B0B59C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B0B5F4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  char v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 8);
  v4 = (std::__shared_weak_count *)v3[16];
  v15 = v3[15];
  v16 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v3 = *(_QWORD **)(a1 + 8);
  }
  v17 = v3[14];
  v7 = *(_QWORD *)(v2 + 200);
  if (!v7)
    sub_2394172E0();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v15, &v17);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(v12 + 160);
  if (v13)
  {
    LOBYTE(v17) = v8;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v13 + 48))(v13, &v17);
    v12 = *(_QWORD *)(a1 + 8);
  }
  return sub_239B0B728(v2, *(_QWORD *)(v12 + 112));
}

void sub_239B0B6E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B0B728(uint64_t a1, unint64_t a2)
{
  pthread_mutex_t *v4;
  int8x8_t v5;
  _QWORD *v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD **v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *__p;

  v4 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v5 = *(int8x8_t *)(a1 + 312);
  if (v5)
  {
    v6 = (_QWORD *)(a1 + 304);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = a2;
      if (*(_QWORD *)&v5 <= a2)
        v8 = a2 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*v6 + 8 * v8);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v13 == a2)
            {
              if (v10[2] == a2)
                goto LABEL_22;
            }
            else if ((v13 & v11) != v8)
            {
              return sub_2397A16B4(v4);
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              return sub_2397A16B4(v4);
          }
        }
        do
        {
          v12 = v10[1];
          if (v12 == a2)
          {
            if (v10[2] == a2)
            {
LABEL_22:
              sub_239A78378((uint64_t)&__p, v6, v10);
              if (__p)
                operator delete(__p);
              return sub_2397A16B4(v4);
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              return sub_2397A16B4(v4);
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  return sub_2397A16B4(v4);
}

_QWORD *sub_239B0B858(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8618;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B0B8BC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8618;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0B930(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8618;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B0B988(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8618;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B0B9C0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B0BA18(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B0BA70(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  uint64_t v28;
  int8x8_t v29;
  uint8x8_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD **v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD **v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  float v43;
  float v44;
  _BOOL8 v46;
  unint64_t v47;
  unint64_t v48;
  size_t prime;
  unint64_t v50;
  unint64_t v51;
  uint8x8_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  int8x8_t v72;
  _QWORD *v73;
  uint8x8_t v74;
  unint64_t v75;
  _QWORD **v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t *v93;
  unint64_t v94;
  _QWORD *v95;
  char v96;
  _QWORD *v97;
  uint64_t v98;
  unint64_t *v99;
  unint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t *v109;
  unint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  unint64_t *v114;
  unint64_t v115;
  unint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t *v123;
  unint64_t v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  __int128 v128;
  void *v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  _QWORD v132[3];
  _QWORD *v133;
  void *__p[9];
  char v135;
  uint64_t v136;
  void *v137;
  unint64_t v138;
  std::__shared_weak_count *v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD v145[3];
  _QWORD *v146;
  uint64_t v147;

  v147 = *MEMORY[0x24BDAC8D0];
  v2 = (_QWORD *)a1[1];
  if (!v2[7])
  {
    v10 = v2[13];
    if (v10)
    {
      LOBYTE(__p[0]) = 0;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)v10 + 48))(v10, __p);
    }
    return;
  }
  v4 = a1[3];
  std::mutex::lock((std::mutex *)(v4 + 80));
  v5 = (uint64_t *)(v4 + 8);
  v6 = v2[6];
  v7 = *(_QWORD *)(v4 + 16);
  if (!v7)
    goto LABEL_24;
  v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
  v8.i16[0] = vaddlv_u8(v8);
  v1 = (std::__shared_weak_count *)v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v9 = v2[6];
    if (v6 >= v7)
      v9 = v6 % v7;
  }
  else
  {
    v9 = (v7 - 1) & v6;
  }
  v11 = *(_QWORD **)(*v5 + 8 * v9);
  if (!v11 || (v12 = (_QWORD *)*v11) == 0)
  {
LABEL_24:
    if ((unint64_t)(*(_QWORD *)(v4 + 32) + 1) > *(_QWORD *)(v4 + 48))
    {
      v16 = *(_QWORD *)(v4 + 72);
      if (v16)
      {
        v17 = *(uint64_t **)(v4 + 56);
        v6 = v17[2];
        if ((v7 & (v7 - 1)) != 0)
        {
          v25 = v17[2];
          if (v6 >= v7)
            v25 = v6 % v7;
          v18 = *(_QWORD **)(*v5 + 8 * v25);
          do
          {
            do
              v18 = (_QWORD *)*v18;
            while (v18[1] != v6);
          }
          while (v18[2] != v6);
        }
        else
        {
          v18 = *(_QWORD **)(*v5 + 8 * (v6 & (v7 - 1)));
          do
          {
            do
              v18 = (_QWORD *)*v18;
            while (v18[1] != v6);
          }
          while (v18[2] != v6);
        }
        v7 = v18[3];
        v1 = (std::__shared_weak_count *)v18[4];
        if (v1)
        {
          p_shared_owners = (unint64_t *)&v1->__shared_owners_;
          do
            v27 = __ldxr(p_shared_owners);
          while (__stxr(v27 + 1, p_shared_owners));
          v17 = *(uint64_t **)(v4 + 56);
          v16 = *(_QWORD *)(v4 + 72);
        }
        v28 = *v17;
        *(_QWORD *)(v28 + 8) = v17[1];
        *(_QWORD *)v17[1] = v28;
        *(_QWORD *)(v4 + 72) = v16 - 1;
        operator delete(v17);
        v29 = *(int8x8_t *)(v4 + 16);
        if (v29)
        {
          v30 = (uint8x8_t)vcnt_s8(v29);
          v30.i16[0] = vaddlv_u8(v30);
          if (v30.u32[0] > 1uLL)
          {
            v31 = v6;
            if (v6 >= *(_QWORD *)&v29)
              v31 = v6 % *(_QWORD *)&v29;
          }
          else
          {
            v31 = (*(_QWORD *)&v29 - 1) & v6;
          }
          v32 = *v5;
          v33 = *(_QWORD ***)(*v5 + 8 * v31);
          if (v33)
          {
            v34 = *v33;
            if (*v33)
            {
              v35 = *(_QWORD *)&v29 - 1;
              if (v30.u32[0] < 2uLL)
              {
                while (1)
                {
                  v36 = v34[1];
                  if (v36 == v6)
                  {
                    if (v34[2] == v6)
                      goto LABEL_98;
                  }
                  else if ((v36 & v35) != v31)
                  {
                    goto LABEL_140;
                  }
                  v34 = (_QWORD *)*v34;
                  if (!v34)
                    goto LABEL_140;
                }
              }
              do
              {
                v37 = v34[1];
                if (v37 == v6)
                {
                  if (v34[2] == v6)
                  {
LABEL_98:
                    if (v30.u32[0] > 1uLL)
                    {
                      v50 = v6;
                      if (v6 >= *(_QWORD *)&v29)
                        v50 = v6 % *(_QWORD *)&v29;
                    }
                    else
                    {
                      v50 = v35 & v6;
                    }
                    v54 = *(_QWORD **)(v32 + 8 * v50);
                    do
                    {
                      v55 = v54;
                      v54 = (_QWORD *)*v54;
                    }
                    while (v54 != v34);
                    if (v55 == (_QWORD *)(v4 + 24))
                      goto LABEL_125;
                    v56 = v55[1];
                    if (v30.u32[0] > 1uLL)
                    {
                      if (v56 >= *(_QWORD *)&v29)
                        v56 %= *(_QWORD *)&v29;
                    }
                    else
                    {
                      v56 &= v35;
                    }
                    if (v56 != v50)
                    {
LABEL_125:
                      if (!*v34)
                        goto LABEL_126;
                      v57 = *(_QWORD *)(*v34 + 8);
                      if (v30.u32[0] > 1uLL)
                      {
                        if (v57 >= *(_QWORD *)&v29)
                          v57 %= *(_QWORD *)&v29;
                      }
                      else
                      {
                        v57 &= v35;
                      }
                      if (v57 != v50)
LABEL_126:
                        *(_QWORD *)(v32 + 8 * v50) = 0;
                    }
                    v58 = *v34;
                    v127 = v7;
                    if (*v34)
                    {
                      v59 = *(_QWORD *)(v58 + 8);
                      if (v30.u32[0] > 1uLL)
                      {
                        if (v59 >= *(_QWORD *)&v29)
                          v59 %= *(_QWORD *)&v29;
                      }
                      else
                      {
                        v59 &= v35;
                      }
                      if (v59 != v50)
                      {
                        *(_QWORD *)(*v5 + 8 * v59) = v55;
                        v58 = *v34;
                      }
                    }
                    *v55 = v58;
                    *v34 = 0;
                    --*(_QWORD *)(v4 + 32);
                    v60 = (std::__shared_weak_count *)v34[4];
                    if (v60)
                    {
                      v61 = (unint64_t *)&v60->__shared_owners_;
                      do
                        v62 = __ldaxr(v61);
                      while (__stlxr(v62 - 1, v61));
                      if (!v62)
                      {
                        ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
                        std::__shared_weak_count::__release_weak(v60);
                      }
                    }
                    operator delete(v34);
                    v7 = v127;
                    break;
                  }
                }
                else
                {
                  if (v37 >= *(_QWORD *)&v29)
                    v37 %= *(_QWORD *)&v29;
                  if (v37 != v31)
                    break;
                }
                v34 = (_QWORD *)*v34;
              }
              while (v34);
            }
          }
        }
LABEL_140:
        v63 = operator new(0x18uLL);
        v63[2] = v2[6];
        *v63 = v4 + 56;
        v64 = *(_QWORD **)(v4 + 64);
        v63[1] = v64;
        *v64 = v63;
        v65 = *(_QWORD *)(v4 + 72) + 1;
        *(_QWORD *)(v4 + 64) = v63;
        *(_QWORD *)(v4 + 72) = v65;
        sub_239B0D248(v4 + 8, v2[6], v2[6], v2[7], v2[8]);
        if (v1)
        {
          v66 = (unint64_t *)&v1->__shared_owners_;
          do
            v67 = __ldxr(v66);
          while (__stxr(v67 + 1, v66));
          do
            v68 = __ldaxr(v66);
          while (__stlxr(v68 - 1, v66));
          v69 = 0;
          v22 = 0;
          if (!v68)
            goto LABEL_145;
          goto LABEL_147;
        }
      }
      else
      {
        v7 = v2[7];
        v1 = (std::__shared_weak_count *)v2[8];
        if (v1)
        {
          v23 = (unint64_t *)&v1->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
        }
      }
      v22 = 0;
      goto LABEL_147;
    }
    v19 = operator new(0x18uLL);
    v19[2] = v6;
    *v19 = v4 + 56;
    v20 = *(_QWORD **)(v4 + 64);
    v19[1] = v20;
    *v20 = v19;
    v21 = *(_QWORD *)(v4 + 72) + 1;
    *(_QWORD *)(v4 + 64) = v19;
    *(_QWORD *)(v4 + 72) = v21;
    sub_239B0D248(v4 + 8, v2[6], v2[6], v2[7], v2[8]);
    goto LABEL_32;
  }
  v13 = v7 - 1;
  if (v8.u32[0] < 2uLL)
  {
    while (1)
    {
      v14 = v12[1];
      if (v14 == v6)
      {
        if (v12[2] == v6)
          goto LABEL_67;
      }
      else if ((v14 & v13) != v9)
      {
        goto LABEL_24;
      }
      v12 = (_QWORD *)*v12;
      if (!v12)
        goto LABEL_24;
    }
  }
  while (1)
  {
    v15 = v12[1];
    if (v15 == v6)
      break;
    if (v15 >= v7)
      v15 %= v7;
    if (v15 != v9)
      goto LABEL_24;
LABEL_19:
    v12 = (_QWORD *)*v12;
    if (!v12)
      goto LABEL_24;
  }
  if (v12[2] != v6)
    goto LABEL_19;
LABEL_67:
  if (v8.u32[0] > 1uLL)
  {
    v38 = v2[6];
    if (v6 >= v7)
      v38 = v6 % v7;
  }
  else
  {
    v38 = v13 & v6;
  }
  v39 = *(_QWORD ***)(*v5 + 8 * v38);
  if (v39)
  {
    v40 = *v39;
    if (*v39)
    {
      if (v8.u32[0] < 2uLL)
      {
        while (1)
        {
          v41 = v40[1];
          if (v41 == v6)
          {
            if (v40[2] == v6)
              goto LABEL_266;
          }
          else if ((v41 & v13) != v38)
          {
            goto LABEL_86;
          }
          v40 = (_QWORD *)*v40;
          if (!v40)
            goto LABEL_86;
        }
      }
      do
      {
        v42 = v40[1];
        if (v42 == v6)
        {
          if (v40[2] == v6)
            goto LABEL_266;
        }
        else
        {
          if (v42 >= v7)
            v42 %= v7;
          if (v42 != v38)
            break;
        }
        v40 = (_QWORD *)*v40;
      }
      while (v40);
    }
  }
LABEL_86:
  v40 = operator new(0x28uLL);
  *v40 = 0;
  v40[1] = v6;
  v40[3] = 0;
  v40[4] = 0;
  v40[2] = v6;
  v43 = (float)(unint64_t)(*(_QWORD *)(v4 + 32) + 1);
  v44 = *(float *)(v4 + 40);
  if ((float)(v44 * (float)v7) < v43)
  {
    v46 = v7 < 3 || (unint64_t)v1 > 1;
    v47 = v46 | (2 * v7);
    v48 = vcvtps_u32_f32(v43 / v44);
    if (v47 <= v48)
      prime = v48;
    else
      prime = v47;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(v4 + 16);
    }
    if (prime > v7)
      goto LABEL_103;
    if (prime < v7)
    {
      v51 = vcvtps_u32_f32((float)*(unint64_t *)(v4 + 32) / *(float *)(v4 + 40));
      if (v7 < 3 || (v52 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v52.i16[0] = vaddlv_u8(v52), v52.u32[0] > 1uLL))
      {
        v51 = std::__next_prime(v51);
      }
      else
      {
        v53 = 1 << -(char)__clz(v51 - 1);
        if (v51 >= 2)
          v51 = v53;
      }
      if (prime <= v51)
        prime = v51;
      if (prime < v7)
LABEL_103:
        sub_239A501C8(v4 + 8, prime);
    }
    v7 = *(_QWORD *)(v4 + 16);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v38 = v6 % v7;
      else
        v38 = v6;
    }
    else
    {
      v38 = (v7 - 1) & v6;
    }
  }
  v118 = *v5;
  v119 = *(_QWORD **)(*v5 + 8 * v38);
  if (v119)
  {
    *v40 = *v119;
    goto LABEL_264;
  }
  *v40 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v4 + 24) = v40;
  *(_QWORD *)(v118 + 8 * v38) = v4 + 24;
  if (*v40)
  {
    v120 = *(_QWORD *)(*v40 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v120 >= v7)
        v120 %= v7;
    }
    else
    {
      v120 &= v7 - 1;
    }
    v119 = (_QWORD *)(*v5 + 8 * v120);
LABEL_264:
    *v119 = v40;
  }
  ++*(_QWORD *)(v4 + 32);
LABEL_266:
  v122 = v2[7];
  v121 = v2[8];
  if (v121)
  {
    v123 = (unint64_t *)(v121 + 8);
    do
      v124 = __ldxr(v123);
    while (__stxr(v124 + 1, v123));
  }
  v1 = (std::__shared_weak_count *)v40[4];
  v40[3] = v122;
  v40[4] = v121;
  if (!v1)
  {
LABEL_32:
    v6 = 0;
    v22 = 1;
    goto LABEL_147;
  }
  v125 = (unint64_t *)&v1->__shared_owners_;
  do
    v126 = __ldaxr(v125);
  while (__stlxr(v126 - 1, v125));
  v6 = 0;
  v69 = 1;
  v22 = 1;
  if (!v126)
  {
LABEL_145:
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
    v22 = v69;
  }
LABEL_147:
  std::mutex::unlock((std::mutex *)(v4 + 80));
  v70 = a1[1];
  if (*(_BYTE *)(v70 + 72))
  {
    v71 = *(_QWORD *)(v70 + 48);
    if (sub_2397A1B98((pthread_mutex_t *)(v4 + 344)))
    {
      sub_2397A16B4((pthread_mutex_t *)(v4 + 344));
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v72 = *(int8x8_t *)(v4 + 312);
    if (v72)
    {
      v73 = (_QWORD *)(v4 + 304);
      v74 = (uint8x8_t)vcnt_s8(v72);
      v74.i16[0] = vaddlv_u8(v74);
      if (v74.u32[0] > 1uLL)
      {
        v75 = v71;
        if (*(_QWORD *)&v72 <= v71)
          v75 = v71 % *(_QWORD *)&v72;
      }
      else
      {
        v75 = (*(_QWORD *)&v72 - 1) & v71;
      }
      v76 = *(_QWORD ***)(*v73 + 8 * v75);
      if (v76)
      {
        v77 = *v76;
        if (*v76)
        {
          if (v74.u32[0] < 2uLL)
          {
            v78 = *(_QWORD *)&v72 - 1;
            while (1)
            {
              v80 = v77[1];
              if (v80 == v71)
              {
                if (v77[2] == v71)
                  goto LABEL_170;
              }
              else if ((v80 & v78) != v75)
              {
                goto LABEL_172;
              }
              v77 = (_QWORD *)*v77;
              if (!v77)
                goto LABEL_172;
            }
          }
          do
          {
            v79 = v77[1];
            if (v79 == v71)
            {
              if (v77[2] == v71)
              {
LABEL_170:
                sub_239A78378((uint64_t)__p, v73, v77);
                if (__p[0])
                  operator delete(__p[0]);
                break;
              }
            }
            else
            {
              if (v79 >= *(_QWORD *)&v72)
                v79 %= *(_QWORD *)&v72;
              if (v79 != v75)
                break;
            }
            v77 = (_QWORD *)*v77;
          }
          while (v77);
        }
      }
    }
  }
LABEL_172:
  if (!v22)
  {
    v81 = a1[1];
    if (!*(_QWORD *)(v4 + 200) || *(_QWORD *)(v81 + 48) == v6 && *(_BYTE *)(v81 + 72))
      goto LABEL_177;
    v86 = (std::__shared_weak_count *)a1[2];
    if (v86)
    {
      v87 = (unint64_t *)&v86->__shared_owners_;
      do
        v88 = __ldxr(v87);
      while (__stxr(v88 + 1, v87));
    }
    if (v1)
    {
      v89 = (unint64_t *)&v1->__shared_owners_;
      do
        v90 = __ldxr(v89);
      while (__stxr(v90 + 1, v89));
    }
    if (v86)
    {
      v91 = (unint64_t *)&v86->__shared_owners_;
      do
        v92 = __ldxr(v91);
      while (__stxr(v92 + 1, v91));
    }
    if (v1)
    {
      v93 = (unint64_t *)&v1->__shared_owners_;
      do
        v94 = __ldxr(v93);
      while (__stxr(v94 + 1, v93));
    }
    v146 = 0;
    v95 = operator new(0x40uLL);
    *v95 = &off_250AF8660;
    v95[1] = v81;
    v95[2] = v86;
    v95[3] = v6;
    v95[4] = v7;
    v95[5] = v1;
    *((_BYTE *)v95 + 48) = 1;
    v95[7] = v4;
    v146 = v95;
    v96 = sub_239A82B00(v4, v6, v145);
    v97 = v146;
    if (v146 == v145)
    {
      v98 = 4;
      v97 = v145;
    }
    else
    {
      if (!v146)
        goto LABEL_205;
      v98 = 5;
    }
    (*(void (**)(void))(*v97 + 8 * v98))();
LABEL_205:
    if ((v96 & 1) != 0)
    {
LABEL_237:
      if (v1)
      {
        v114 = (unint64_t *)&v1->__shared_owners_;
        do
          v115 = __ldaxr(v114);
        while (__stlxr(v115 - 1, v114));
        if (!v115)
        {
          ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
          std::__shared_weak_count::__release_weak(v1);
        }
      }
      if (v86)
      {
        v116 = (unint64_t *)&v86->__shared_owners_;
        do
          v117 = __ldaxr(v116);
        while (__stlxr(v117 - 1, v116));
        if (!v117)
        {
          ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
          std::__shared_weak_count::__release_weak(v86);
        }
      }
      goto LABEL_179;
    }
    v129 = (void *)v6;
    v130 = v7;
    v131 = v1;
    if (v1)
    {
      v99 = (unint64_t *)&v1->__shared_owners_;
      do
        v100 = __ldxr(v99);
      while (__stxr(v100 + 1, v99));
    }
    v101 = v132;
    v102 = a1[1];
    v103 = *(_QWORD *)(v102 + 104);
    if (v103)
    {
      if (v103 == v102 + 80)
      {
        v133 = v132;
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v103 + 24))(v103, v132);
LABEL_214:
        LODWORD(__p[0]) = 2;
        __p[7] = 0;
        __p[8] = 0;
        __p[5] = 0;
        v135 = 0;
        v136 = 0;
        v137 = v129;
        v138 = v130;
        v139 = v131;
        if (v131)
        {
          v104 = &v131->__shared_owners_;
          do
            v105 = __ldxr((unint64_t *)v104);
          while (__stxr(v105 + 1, (unint64_t *)v104));
        }
        v106 = (uint64_t)v133;
        if (v133)
        {
          if (v133 == v132)
          {
            v141 = &v140;
            (*(void (**)(_QWORD *))(v132[0] + 24))(v132);
LABEL_222:
            v143 = 0;
            v144 = 0;
            __p[1] = v129;
            __p[6] = v129;
            v142 = 0;
            v137 = v129;
            v107 = operator new(0x120uLL);
            v107[1] = 0;
            v107[2] = 0;
            *v107 = &off_250AF85E0;
            *(_QWORD *)&v128 = sub_239B0CB10((uint64_t)(v107 + 3), (uint64_t)__p);
            *((_QWORD *)&v128 + 1) = v107;
            sub_239A82E8C(__p);
            if (v133 == v132)
            {
              v108 = 4;
            }
            else
            {
              if (!v133)
                goto LABEL_227;
              v108 = 5;
              v101 = v133;
            }
            (*(void (**)(_QWORD *))(*v101 + 8 * v108))(v101);
LABEL_227:
            if (v131)
            {
              v109 = &v131->__shared_owners_;
              do
                v110 = __ldaxr((unint64_t *)v109);
              while (__stlxr(v110 - 1, (unint64_t *)v109));
              if (!v110)
              {
                ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
                std::__shared_weak_count::__release_weak(v131);
              }
            }
            sub_239B09F38(*(unsigned int **)(v4 + 288), &v128);
            v111 = (std::__shared_weak_count *)*((_QWORD *)&v128 + 1);
            if (*((_QWORD *)&v128 + 1))
            {
              v112 = (unint64_t *)(*((_QWORD *)&v128 + 1) + 8);
              do
                v113 = __ldaxr(v112);
              while (__stlxr(v113 - 1, v112));
              if (!v113)
              {
                ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
                std::__shared_weak_count::__release_weak(v111);
              }
            }
            goto LABEL_237;
          }
          v106 = (*(uint64_t (**)(void))(*v133 + 16))();
        }
        v141 = (uint64_t *)v106;
        goto LABEL_222;
      }
      v103 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v103 + 16))(v103);
    }
    v133 = (_QWORD *)v103;
    goto LABEL_214;
  }
  v81 = a1[1];
LABEL_177:
  v82 = *(_QWORD *)(v81 + 104);
  if (v82)
  {
    LOBYTE(__p[0]) = 1;
    (*(void (**)(uint64_t, void **))(*(_QWORD *)v82 + 48))(v82, __p);
  }
LABEL_179:
  if (v1)
    v83 = v22;
  else
    v83 = 1;
  if ((v83 & 1) == 0)
  {
    v84 = (unint64_t *)&v1->__shared_owners_;
    do
      v85 = __ldaxr(v84);
    while (__stlxr(v85 - 1, v84));
    if (!v85)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B0C774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  std::mutex *v36;
  _QWORD *v37;
  std::__shared_weak_count *v39;
  unint64_t *p_shared_owners;
  unint64_t v41;

  v39 = (std::__shared_weak_count *)v37[4];
  if (v39)
  {
    p_shared_owners = (unint64_t *)&v39->__shared_owners_;
    do
      v41 = __ldaxr(p_shared_owners);
    while (__stlxr(v41 - 1, p_shared_owners));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  operator delete(v37);
  std::mutex::unlock(v36);
  _Unwind_Resume(a1);
}

uint64_t sub_239B0CB10(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    v4 = (_QWORD *)(a1 + 40);
    goto LABEL_5;
  }
  if (v5 != a2 + 16)
  {
    *(_QWORD *)(a1 + 40) = v5;
LABEL_5:
    *v4 = 0;
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 40) = a1 + 16;
  (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 24))(*v4);
LABEL_7:
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = (_QWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (!v7)
  {
    v6 = (_QWORD *)(a1 + 104);
    goto LABEL_11;
  }
  if (v7 != a2 + 80)
  {
    *(_QWORD *)(a1 + 104) = v7;
LABEL_11:
    *v6 = 0;
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 104) = a1 + 80;
  (*(void (**)(_QWORD))(*(_QWORD *)*v6 + 24))(*v6);
LABEL_13:
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v8 = (_QWORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 120) = 0;
  if (!v9)
  {
    v8 = (_QWORD *)(a1 + 160);
    goto LABEL_17;
  }
  if (v9 != a2 + 136)
  {
    *(_QWORD *)(a1 + 160) = v9;
LABEL_17:
    *v8 = 0;
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 160) = a1 + 136;
  (*(void (**)(_QWORD))(*(_QWORD *)*v8 + 24))(*v8);
LABEL_19:
  v10 = (_QWORD *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 192);
  if (!v11)
  {
    v10 = (_QWORD *)(a1 + 192);
    goto LABEL_23;
  }
  if (v11 != a2 + 168)
  {
    *(_QWORD *)(a1 + 192) = v11;
LABEL_23:
    *v10 = 0;
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 192) = a1 + 168;
  (*(void (**)(_QWORD))(*(_QWORD *)*v10 + 24))(*v10);
LABEL_25:
  v12 = (_QWORD *)(a2 + 224);
  v13 = *(_QWORD *)(a2 + 224);
  if (!v13)
  {
    v12 = (_QWORD *)(a1 + 224);
    goto LABEL_29;
  }
  if (v13 != a2 + 200)
  {
    *(_QWORD *)(a1 + 224) = v13;
LABEL_29:
    *v12 = 0;
    goto LABEL_31;
  }
  *(_QWORD *)(a1 + 224) = a1 + 200;
  (*(void (**)(_QWORD))(*(_QWORD *)*v12 + 24))(*v12);
LABEL_31:
  v14 = *(_QWORD *)(a2 + 256);
  if (v14)
  {
    v15 = (_QWORD *)(a2 + 256);
    if (v14 == a2 + 232)
    {
      *(_QWORD *)(a1 + 256) = a1 + 232;
      (*(void (**)(_QWORD))(*(_QWORD *)*v15 + 24))(*v15);
      return a1;
    }
    *(_QWORD *)(a1 + 256) = v14;
  }
  else
  {
    v15 = (_QWORD *)(a1 + 256);
  }
  *v15 = 0;
  return a1;
}

void sub_239B0CD2C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF85E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B0CD3C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF85E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0CD6C(uint64_t a1)
{
  return sub_239A82E8C((_QWORD *)(a1 + 24));
}

uint64_t sub_239B0CD78(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AF8660;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_239B0CE1C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AF8660;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0CED0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  result = operator new(0x40uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF8660;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *((_BYTE *)result + 24) = 0;
  *((_BYTE *)result + 48) = 0;
  if (*(_BYTE *)(a1 + 48))
  {
    v7 = *(_QWORD *)(a1 + 32);
    result[3] = *(_QWORD *)(a1 + 24);
    result[4] = v7;
    v8 = *(_QWORD *)(a1 + 40);
    result[5] = v8;
    if (v8)
    {
      v9 = (unint64_t *)(v8 + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    *((_BYTE *)result + 48) = 1;
  }
  result[7] = *(_QWORD *)(a1 + 56);
  return result;
}

uint64_t sub_239B0CF68(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *(_QWORD *)a2 = &off_250AF8660;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  if (*(_BYTE *)(result + 48))
  {
    v6 = *(_QWORD *)(result + 32);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(result + 24);
    *(_QWORD *)(a2 + 32) = v6;
    v7 = *(_QWORD *)(result + 40);
    *(_QWORD *)(a2 + 40) = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 8);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    *(_BYTE *)(a2 + 48) = 1;
  }
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(result + 56);
  return result;
}

void sub_239B0CFE0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (!*(_BYTE *)(a1 + 48))
    goto LABEL_6;
  v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v2)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  else
  {
LABEL_6:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_239B0D088(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (*((_BYTE *)__p + 48))
  {
    v2 = (std::__shared_weak_count *)__p[5];
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B0D120(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  char v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;

  v2 = a1[7];
  v3 = (std::__shared_weak_count *)a1[5];
  v13 = a1[4];
  v14 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v15 = a1[3];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v13, &v15);
  v8 = v14;
  if (v14)
  {
    v9 = (unint64_t *)&v14->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = *(_QWORD *)(a1[1] + 104);
  if (v11)
  {
    LOBYTE(v15) = v7;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v11 + 48))(v11, &v15);
  }
  return sub_239B0B728(v2, a1[3]);
}

void sub_239B0D204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B0D248(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v11;
  uint8x8_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t *v19;
  unint64_t v20;
  float v21;
  float v22;
  _BOOL8 v23;
  unint64_t v24;
  unint64_t v25;
  size_t prime;
  int8x8_t v27;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;

  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v5 = a2;
      if (v11 <= a2)
        v5 = a2 % v11;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
    v13 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
    if (v13)
    {
      v14 = (_QWORD *)*v13;
      if (v14)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == a2)
            {
              if (v14[2] == a2)
                return;
            }
            else if ((v16 & (v11 - 1)) != v5)
            {
              goto LABEL_22;
            }
            v14 = (_QWORD *)*v14;
            if (!v14)
              goto LABEL_22;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == a2)
          {
            if (v14[2] == a2)
              return;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v5)
              break;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_22:
  v17 = (_QWORD *)(a1 + 16);
  v18 = operator new(0x28uLL);
  *v18 = 0;
  v18[1] = a2;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  if (a5)
  {
    v19 = (unint64_t *)(a5 + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v22 = *(float *)(a1 + 32);
  if (!v11 || (float)(v22 * (float)v11) < v21)
  {
    v23 = 1;
    if (v11 >= 3)
      v23 = (v11 & (v11 - 1)) != 0;
    v24 = v23 | (2 * v11);
    v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25)
      prime = v25;
    else
      prime = v24;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v27 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v27)
      goto LABEL_37;
    if (prime < *(_QWORD *)&v27)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v27 < 3uLL || (v29 = (uint8x8_t)vcnt_s8(v27), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (prime <= v28)
        prime = v28;
      if (prime < *(_QWORD *)&v27)
LABEL_37:
        sub_239A501C8(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v11 <= a2)
        v5 = a2 % v11;
      else
        v5 = a2;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
  }
  v31 = *(_QWORD *)a1;
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v32)
  {
    *v18 = *v32;
LABEL_61:
    *v32 = v18;
    goto LABEL_62;
  }
  *v18 = *v17;
  *v17 = v18;
  *(_QWORD *)(v31 + 8 * v5) = v17;
  if (*v18)
  {
    v33 = *(_QWORD *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v33 >= v11)
        v33 %= v11;
    }
    else
    {
      v33 &= v11 - 1;
    }
    v32 = (_QWORD *)(*(_QWORD *)a1 + 8 * v33);
    goto LABEL_61;
  }
LABEL_62:
  ++*(_QWORD *)(a1 + 24);
}

void sub_239B0D54C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B0D560(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8550;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B0D5C4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8550;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0D638(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8550;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B0D690(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8550;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B0D6C8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B0D720(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B0D778(_QWORD *a1)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  char v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  uint64_t *v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v2 = a1 + 1;
  v3 = a1[1];
  v4 = a1[3];
  ++*(_QWORD *)(v4 + 208);
  std::mutex::lock((std::mutex *)(v4 + 80));
  v5 = *(int8x8_t *)(v4 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v3 + 8);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = *(_QWORD *)(v3 + 8);
      if (v6 >= *(_QWORD *)&v5)
        v8 = v6 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & v6;
    }
    v9 = *(_QWORD **)(*(_QWORD *)(v4 + 8) + 8 * v8);
    if (v9)
    {
      v10 = (_QWORD *)*v9;
      if (v10)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v6 == v13)
            {
              if (v10[2] == v6)
                goto LABEL_47;
            }
            else if ((v13 & v11) != v8)
            {
              goto LABEL_21;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_21;
          }
        }
        do
        {
          v12 = v10[1];
          if (v6 == v12)
          {
            if (v10[2] == v6)
            {
LABEL_47:
              v28 = v10[3];
              v15 = (std::__shared_weak_count *)v10[4];
              if (v15)
              {
                p_shared_owners = (unint64_t *)&v15->__shared_owners_;
                do
                  v30 = __ldxr(p_shared_owners);
                while (__stxr(v30 + 1, p_shared_owners));
              }
              std::mutex::unlock((std::mutex *)(v4 + 80));
              ++*(_QWORD *)(v4 + 216);
              v31 = *(_QWORD *)v2;
              v32 = *(_QWORD *)(*(_QWORD *)v2 + 40);
              if (v32)
              {
                v40 = v28;
                v41 = v15;
                if (v15)
                {
                  v33 = (unint64_t *)&v15->__shared_owners_;
                  do
                    v34 = __ldxr(v33);
                  while (__stxr(v34 + 1, v33));
                  v32 = *(_QWORD *)(v31 + 40);
                  v39 = 1;
                  if (!v32)
                    sub_2394172E0();
                }
                else
                {
                  v39 = 1;
                }
                (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v32 + 48))(v32, &v40, &v39);
                v35 = v41;
                if (v41)
                {
                  v36 = (unint64_t *)&v41->__shared_owners_;
                  do
                    v37 = __ldaxr(v36);
                  while (__stlxr(v37 - 1, v36));
                  if (!v37)
                  {
                    ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
                    std::__shared_weak_count::__release_weak(v35);
                  }
                }
              }
              if (v15)
              {
                v38 = (unint64_t *)&v15->__shared_owners_;
                do
                  v22 = __ldaxr(v38);
                while (__stlxr(v22 - 1, v38));
LABEL_44:
                if (!v22)
                {
                  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                  std::__shared_weak_count::__release_weak(v15);
                }
              }
              return;
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_21:
  std::mutex::unlock((std::mutex *)(v4 + 80));
  v14 = *(_QWORD *)v2;
  if (*(_QWORD *)(v4 + 168))
  {
    v15 = (std::__shared_weak_count *)a1[2];
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      v18 = *(_QWORD *)(*(_QWORD *)v2 + 8);
      do
        v19 = __ldxr(v16);
      while (__stxr(v19 + 1, v16));
    }
    else
    {
      v18 = *(_QWORD *)(v14 + 8);
    }
    v23 = (uint64_t *)operator new(0x20uLL);
    *v23 = (uint64_t)&off_250AF8598;
    v23[1] = v14;
    v23[2] = (uint64_t)v15;
    v23[3] = v4;
    v42 = v23;
    v24 = sub_239A82B00(v4, v18, &v40);
    v25 = v42;
    if (v42 == &v40)
    {
      v26 = 4;
      v25 = &v40;
    }
    else
    {
      if (!v42)
        goto LABEL_39;
      v26 = 5;
    }
    (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_39:
    if ((v24 & 1) == 0)
    {
      sub_239B09F38(*(unsigned int **)(v4 + 288), v2);
      --*(_QWORD *)(v4 + 208);
    }
    if (v15)
    {
      v27 = (unint64_t *)&v15->__shared_owners_;
      do
        v22 = __ldaxr(v27);
      while (__stlxr(v22 - 1, v27));
      goto LABEL_44;
    }
    return;
  }
  v20 = *(_QWORD *)(v14 + 40);
  if (v20)
  {
    v40 = 0;
    v41 = 0;
    v39 = 1;
    (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v20 + 48))(v20, &v40, &v39);
    v15 = v41;
    if (v41)
    {
      v21 = (unint64_t *)&v41->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      goto LABEL_44;
    }
  }
}

void sub_239B0DB00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  if (v13)
  {
    v17 = (unint64_t *)&v13->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B0DC38(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8598;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B0DC9C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8598;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0DD10(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8598;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B0DD68(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8598;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B0DDA0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B0DDF8(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B0DE50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  uint64_t v32[2];
  std::__shared_weak_count *v33;
  char v34;
  _BYTE v35[24];
  _BYTE *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 24);
  v37 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  v3 = *(_QWORD *)(v2 + 168);
  if (!v3)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v3 + 48))(&v30, v3, &v37);
  v4 = *(_QWORD *)(a1 + 8);
  if (v30)
  {
    v5 = *(_QWORD *)(v4 + 40);
    if (v5)
    {
      v37 = v30;
      v38 = v31;
      if (v31)
      {
        p_shared_owners = (unint64_t *)&v31->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        v5 = *(_QWORD *)(v4 + 40);
        LOBYTE(v32[0]) = 1;
        if (!v5)
          sub_2394172E0();
      }
      else
      {
        LOBYTE(v32[0]) = 1;
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v5 + 48))(v5, &v37, v32);
      v12 = v38;
      if (v38)
      {
        v13 = (unint64_t *)&v38->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
    }
    v32[0] = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
    v32[1] = v30;
    v33 = v31;
    if (v31)
    {
      v15 = (unint64_t *)&v31->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    v34 = 1;
    v17 = v35;
    v36 = 0;
    sub_239B0E288((uint64_t)&v37, v32);
    v18 = operator new(0x120uLL);
    v18[1] = 0;
    v18[2] = 0;
    *v18 = &off_250AF85E0;
    *(_QWORD *)&v29 = sub_239B0CB10((uint64_t)(v18 + 3), (uint64_t)&v37);
    *((_QWORD *)&v29 + 1) = v18;
    sub_239A82E8C(&v37);
    if (v36 == v35)
    {
      v19 = 4;
    }
    else
    {
      if (!v36)
        goto LABEL_30;
      v19 = 5;
      v17 = v36;
    }
    (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
LABEL_30:
    v20 = v33;
    if (v33)
    {
      v21 = (unint64_t *)&v33->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    sub_239B09F38(*(unsigned int **)(v2 + 288), &v29);
    v23 = (std::__shared_weak_count *)*((_QWORD *)&v29 + 1);
    if (*((_QWORD *)&v29 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    goto LABEL_40;
  }
  v8 = *(_QWORD *)(v4 + 40);
  if (v8)
  {
    v37 = 0;
    v38 = 0;
    LOBYTE(v32[0]) = 1;
    (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v8 + 48))(v8, &v37, v32);
    v9 = v38;
    if (v38)
    {
      v10 = (unint64_t *)&v38->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  sub_239B0B728(v2, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8));
LABEL_40:
  v26 = v31;
  if (v31)
  {
    v27 = (unint64_t *)&v31->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
}

void sub_239B0E14C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,std::__shared_weak_count *a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;

  if (a22)
  {
    p_shared_owners = (unint64_t *)&a22->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a22->__on_zero_shared)(a22);
      std::__shared_weak_count::__release_weak(a22);
    }
  }
  if (a12)
  {
    v25 = (unint64_t *)&a12->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B0E288(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = 1;
  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v4;
  v6 = a2[2];
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 24);
  v9 = a2[7];
  if (v9)
  {
    if ((uint64_t *)v9 == a2 + 4)
    {
      *(_QWORD *)(a1 + 104) = a1 + 80;
      (*(void (**)(uint64_t))(*(_QWORD *)a2[7] + 24))(a2[7]);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  *(_QWORD *)(a1 + 104) = v9;
LABEL_9:
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  v10 = *a2;
  *(_QWORD *)(a1 + 8) = *a2;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 112) = v10;
  return a1;
}

void sub_239B0E350(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = *(std::__shared_weak_count **)(v1 + 64);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = *(_QWORD **)(v1 + 40);
  if (v6 == (_QWORD *)(v1 + 16))
  {
    v7 = 4;
    v6 = (_QWORD *)(v1 + 16);
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  _Unwind_Resume(exception_object);
}

void sub_239B0E3C4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF84F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B0E3D4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF84F0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B0E404(uint64_t a1)
{
  pthread_mutex_t *v2;
  int v3;

  v2 = (pthread_mutex_t *)(a1 + 200);
  sub_2397A1694((pthread_mutex_t *)(a1 + 200));
  v3 = *(unsigned __int8 *)(a1 + 80);
  sub_2397A16B4(v2);
  if (!v3)
    sub_239B0E488(a1 + 24);
  sub_2397A1694(v2);
  sub_2397A16B4(v2);
  pthread_cond_destroy((pthread_cond_t *)(a1 + 104));
  pthread_cond_destroy((pthread_cond_t *)(a1 + 152));
  sub_2397A163C(v2);
  return sub_239A7BCF8(a1 + 32);
}

uint64_t sub_239B0E488(uint64_t a1)
{
  pthread_mutex_t *v2;
  uint64_t v4;

  v2 = (pthread_mutex_t *)(a1 + 176);
  sub_2397A1694((pthread_mutex_t *)(a1 + 176));
  *(_BYTE *)(a1 + 56) = 1;
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 64) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 80)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 64) <= 0)
        goto LABEL_4;
    }
    v4 = 261;
LABEL_15:
    sub_239A444D4((uint64_t)"unknown file", v4, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
LABEL_4:
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  while (*(_QWORD *)(a1 + 48) && *(uint64_t *)(a1 + 72) >= 1)
  {
    if (pthread_cond_wait((pthread_cond_t *)(a1 + 80), v2))
    {
      sub_239A444D4((uint64_t)"unknown file", 277, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 72) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 128)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 72) <= 0)
        return sub_2397A16B4(v2);
    }
    v4 = 287;
    goto LABEL_15;
  }
  return sub_2397A16B4(v2);
}

void sub_239B0E608(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

void sub_239B0E628(uint64_t a1)
{
  sub_239B0E64C(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B0E64C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  uint64_t v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t i;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = &off_250AF84B0;
  if (*(_QWORD *)(a1 + 272))
  {
    v3 = *(_QWORD *)(a1 + 240);
    v2 = *(std::__shared_weak_count **)(a1 + 248);
    if (!v2)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (v6)
    {
LABEL_7:
      if (v3)
        goto LABEL_10;
      goto LABEL_8;
    }
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (!v3)
LABEL_8:
      sub_2397A3758(*(_QWORD *)(a1 + 272));
  }
LABEL_10:
  v7 = *(_QWORD *)(a1 + 288);
  if (v7)
    sub_239B0E488(v7);
  while (1)
  {
    v42[0] = &off_250AF8858;
    v43 = v42;
    sub_2397A1694((pthread_mutex_t *)(a1 + 344));
    v8 = *(_QWORD *)(a1 + 328);
    if (!v8)
    {
      if (!v43)
        sub_2394172E0();
      (*(void (**)(_QWORD *))(*v43 + 48))(v43);
    }
    sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
    v9 = v43;
    if (v43 == v42)
    {
      v9 = v42;
      v10 = 4;
    }
    else
    {
      if (!v43)
        goto LABEL_20;
      v10 = 5;
    }
    (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_20:
    if (!v8)
      break;
    sub_2397A186C(1);
  }
  v11 = *(_QWORD *)(a1 + 256);
  if (v11)
  {
    sub_2397A195C(v11);
    v12 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 264) = 0;
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  if (*(_QWORD *)(a1 + 288))
  {
    v15 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = 0;
    *(_QWORD *)(a1 + 296) = 0;
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_QWORD *)(a1 + 328))
  {
    v18 = *(_QWORD **)(a1 + 320);
    if (v18)
    {
      do
      {
        v19 = (_QWORD *)*v18;
        operator delete(v18);
        v18 = v19;
      }
      while (v19);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v20 = *(_QWORD *)(a1 + 312);
    if (v20)
    {
      for (i = 0; i != v20; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 304) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  sub_2397A163C((pthread_mutex_t *)(a1 + 344));
  v22 = *(_QWORD **)(a1 + 320);
  if (v22)
  {
    do
    {
      v23 = (_QWORD *)*v22;
      operator delete(v22);
      v22 = v23;
    }
    while (v23);
  }
  v24 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = 0;
  if (v24)
    operator delete(v24);
  v25 = *(std::__shared_weak_count **)(a1 + 296);
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = *(std::__shared_weak_count **)(a1 + 280);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = *(std::__shared_weak_count **)(a1 + 264);
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = *(std::__shared_weak_count **)(a1 + 248);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = *(_QWORD **)(a1 + 200);
  if (v37 == (_QWORD *)(a1 + 176))
  {
    v38 = 4;
    v37 = (_QWORD *)(a1 + 176);
LABEL_69:
    (*(void (**)(void))(*v37 + 8 * v38))();
  }
  else if (v37)
  {
    v38 = 5;
    goto LABEL_69;
  }
  v39 = *(_QWORD **)(a1 + 168);
  if (v39 == (_QWORD *)(a1 + 144))
  {
    v40 = 4;
    v39 = (_QWORD *)(a1 + 144);
LABEL_74:
    (*(void (**)(void))(*v39 + 8 * v40))();
  }
  else if (v39)
  {
    v40 = 5;
    goto LABEL_74;
  }
  return sub_239B085C8(a1);
}

void sub_239B0E9FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_239416A48(exception_object);
}

void sub_239B0EA78()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0EA8C()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF8858;
  return result;
}

void sub_239B0EAB0(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF8858;
}

void sub_239B0EAD0()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0EAE4()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF4268;
  return result;
}

void sub_239B0EB08(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF4268;
}

uint64_t sub_239B0EB20(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return 0;
}

uint64_t sub_239B0EB78(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = off_250AF4220;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v6 = (_QWORD *)*v2;
    v7 = v2[3];
    if (v7)
    {
      v8 = v2[4];
      v5 = (void *)v2[3];
      if (v8 != v7)
      {
        do
        {
          if (*(char *)(v8 - 1) < 0)
            operator delete(*(void **)(v8 - 24));
          v8 -= 24;
        }
        while (v8 != v7);
        v5 = (void *)v2[3];
      }
      v2[4] = v7;
      operator delete(v5);
    }
    operator delete(v2);
    v2 = v6;
  }
  while (v6);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void sub_239B0EC44(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_250AF4220;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v5 = (_QWORD *)*v2;
    v6 = v2[3];
    if (v6)
    {
      v7 = v2[4];
      v4 = (void *)v2[3];
      if (v7 != v6)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0)
            operator delete(*(void **)(v7 - 24));
          v7 -= 24;
        }
        while (v7 != v6);
        v4 = (void *)v2[3];
      }
      v2[4] = v6;
      operator delete(v4);
    }
    operator delete(v2);
    v2 = v5;
  }
  while (v5);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B0ED20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = a1 + 8;
  v2 = operator new(0x48uLL);
  *v2 = off_250AF4220;
  sub_239B07C88((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_239B0ED60(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B0ED74(uint64_t a1, _QWORD *a2)
{
  *a2 = off_250AF4220;
  return sub_239B07C88((uint64_t)(a2 + 1), a1 + 8);
}

void sub_239B0ED90(uint64_t a1)
{
  sub_239AA5734(a1 + 8);
}

void sub_239B0ED98(void *a1)
{
  sub_239AA5734((uint64_t)a1 + 8);
  operator delete(a1);
}

void sub_239B0EDC0(int8x8_t *a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  int8x8_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  unint64_t v22;
  char v23[8];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int16 v29;
  char v30;
  void *v31;
  char v32;

  v4 = a1[2];
  if (!*(_QWORD *)&v4)
    goto LABEL_21;
  v5 = *a2;
  v6 = (uint8x8_t)vcnt_s8(v4);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v7 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v7 = (*(_QWORD *)&v4 - 1) & v5;
  }
  v8 = a1[1];
  v9 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v7);
  if (!v9 || (v10 = (_QWORD *)*v9) == 0)
  {
LABEL_21:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  v11 = *(_QWORD *)&v4 - 1;
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v12 = v10[1];
      if (v12 == v5)
      {
        if (v10[2] == v5)
          goto LABEL_23;
      }
      else if ((v12 & v11) != v7)
      {
        goto LABEL_21;
      }
      v10 = (_QWORD *)*v10;
      if (!v10)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v13 = v10[1];
    if (v13 == v5)
      break;
    if (v13 >= *(_QWORD *)&v4)
      v13 %= *(_QWORD *)&v4;
    if (v13 != v7)
      goto LABEL_21;
LABEL_16:
    v10 = (_QWORD *)*v10;
    if (!v10)
      goto LABEL_21;
  }
  if (v10[2] != v5)
    goto LABEL_16;
LABEL_23:
  if (v6.u32[0] > 1uLL)
  {
    v14 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v14 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v14 = v11 & v5;
  }
  v15 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v14);
  if (!v15 || (v16 = (_QWORD *)*v15) == 0)
LABEL_47:
    sub_23941D898("unordered_map::at: key not found");
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v17 = v16[1];
      if (v17 == v5)
      {
        if (v16[2] == v5)
          goto LABEL_35;
      }
      else if ((v17 & v11) != v14)
      {
        goto LABEL_47;
      }
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_47;
    }
  }
  while (2)
  {
    v22 = v16[1];
    if (v22 != v5)
    {
      if (v22 >= *(_QWORD *)&v4)
        v22 %= *(_QWORD *)&v4;
      if (v22 != v14)
        goto LABEL_47;
      goto LABEL_38;
    }
    if (v16[2] != v5)
    {
LABEL_38:
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_47;
      continue;
    }
    break;
  }
LABEL_35:
  sub_2396F295C(v16 + 3, (uint64_t)&a1[6], (uint64_t)&v31);
  sub_239B0F040((uint64_t)v23);
  if (v30)
  {
    sub_239B0F55C((uint64_t)v23);
    v18 = operator new(0x70uLL);
    v18[1] = 0;
    v18[2] = 0;
    *v18 = &off_250ADB878;
    v18[3] = &off_250ADB628;
    v19 = v24;
    v20 = v25;
    v24 = 0uLL;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    v21 = v27;
    *((_OWORD *)v18 + 4) = v26;
    *((_OWORD *)v18 + 5) = v21;
    v18[12] = v28;
    *((_WORD *)v18 + 52) = v29;
    *a3 = v18 + 3;
    a3[1] = v18;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  sub_239AA557C((uint64_t)v23);
  if (v32 < 0)
    operator delete(v31);
}

void sub_239B0F014(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;

  if (*(char *)(v10 - 17) < 0)
    operator delete(*(void **)(v10 - 40));
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B0F040(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  int v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  const void *v14[3];
  void *v15[3];
  void *v16[2];
  char v17;
  char v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  __int128 v25;
  __int128 __p;
  uint64_t v27;
  unsigned __int8 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  void *v38[2];
  unsigned __int8 v39;
  char v40;
  std::string v41;
  _QWORD v42[2];
  _BYTE v43[408];
  _QWORD v44[20];

  v44[19] = *MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEDB838];
  v3 = MEMORY[0x24BEDB838] + 64;
  v4 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v44[0] = MEMORY[0x24BEDB838] + 64;
  v42[0] = v5;
  *(_QWORD *)((char *)v42 + *(_QWORD *)(v5 - 24)) = v6;
  v42[1] = 0;
  v7 = (std::ios_base *)((char *)v42 + *(_QWORD *)(v42[0] - 24));
  std::ios_base::init(v7, v43);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  v42[0] = v2 + 24;
  v44[0] = v3;
  MEMORY[0x23B83DC80](v43);
  std::ifstream::open();
  if ((v43[*(_QWORD *)(v42[0] - 24) + 16] & 5) != 0)
  {
    sub_239618F08(v16, "Failure during loading image file");
    v24 = 1;
    sub_239616578(5u, (__int128 *)v16, (uint64_t)&v25);
    *(_OWORD *)a1 = v25;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v36)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v8 = v28;
      if (v28)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v27;
        v27 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v34)
      {
        v9 = v31;
        *(_QWORD *)(a1 + 64) = v30;
        *(_OWORD *)(a1 + 48) = v29;
        v29 = 0uLL;
        *(_QWORD *)(a1 + 72) = v9;
        *(_OWORD *)(a1 + 80) = v32;
        *(_QWORD *)(a1 + 96) = v33;
        v30 = 0;
        v32 = 0uLL;
        v33 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v8 && SHIBYTE(v27) < 0)
        operator delete((void *)__p);
      if (!v24)
        goto LABEL_38;
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
      if (!v24)
        goto LABEL_38;
    }
    if (!v23)
      goto LABEL_35;
    if (v22 < 0)
    {
      operator delete(v21);
      if ((v20 & 0x80000000) == 0)
      {
LABEL_35:
        if (!v18)
          goto LABEL_38;
        goto LABEL_36;
      }
    }
    else if ((v20 & 0x80000000) == 0)
    {
      goto LABEL_35;
    }
    operator delete(v19);
    if (!v18)
      goto LABEL_38;
LABEL_36:
    if (v17 < 0)
      operator delete(v16[0]);
    goto LABEL_38;
  }
  HIBYTE(v14[2]) = 18;
  strcpy((char *)v14, "CorePhotogrammetry");
  sub_2395AC84C(v14, v15);
  sub_239A7D600(&v41, *(_QWORD **)&v43[*(_QWORD *)(v42[0] - 24) + 24]);
  sub_2395AC2E8((const void **)&v41.__r_.__value_.__l.__data_, (uint64_t)v15, (uint64_t)v38);
  sub_2394988CC((uint64_t)&v25);
  if ((v39 & 0x80u) == 0)
    v10 = v38;
  else
    v10 = (void **)v38[0];
  if ((v39 & 0x80u) == 0)
    v11 = v39;
  else
    v11 = (uint64_t)v38[1];
  sub_239458500(&__p, (uint64_t)v10, v11);
  sub_239624168(&v25, 4, a1);
  *(_QWORD *)&v25 = *MEMORY[0x24BEDB7F0];
  v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)&v25 + *(_QWORD *)(v25 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  *(_QWORD *)&__p = v12;
  *((_QWORD *)&__p + 1) = MEMORY[0x24BEDB848] + 16;
  if (v35 < 0)
    operator delete(*((void **)&v32 + 1));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v37);
  if (v40 && (char)v39 < 0)
    operator delete(v38[0]);
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v41.__r_.__value_.__l.__data_);
  if (v15[0])
  {
    v15[1] = v15[0];
    operator delete(v15[0]);
  }
  if (SHIBYTE(v14[2]) < 0)
    operator delete((void *)v14[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v42 + *(_QWORD *)(v42[0] - 24)), *(_DWORD *)&v43[*(_QWORD *)(v42[0] - 24) + 16] | 4);
LABEL_38:
  v42[0] = *v4;
  *(_QWORD *)((char *)v42 + *(_QWORD *)(v42[0] - 24)) = v4[3];
  MEMORY[0x23B83DC8C](v43);
  std::istream::~istream();
  return MEMORY[0x23B83E250](v44);
}

void sub_239B0F460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a71;
  char a72;
  void *a73;
  char a74;
  uint64_t a75;
  void *v76;

  if (a72)
  {
    if (a71 < 0)
      operator delete(__p);
  }
  if (a74 < 0)
  {
    operator delete(a73);
    v76 = a15;
    if (!a15)
    {
LABEL_6:
      if ((a14 & 0x80000000) == 0)
      {
LABEL_11:
        sub_23955CB90(&a75);
        _Unwind_Resume(a1);
      }
LABEL_10:
      operator delete(a9);
      goto LABEL_11;
    }
  }
  else
  {
    v76 = a15;
    if (!a15)
      goto LABEL_6;
  }
  operator delete(v76);
  if ((a14 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

void sub_239B0F534(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B0F55C(uint64_t result)
{
  __int128 *v1;
  void *exception;
  __int128 v3;
  _BYTE v4[112];

  v1 = (__int128 *)result;
  if (!*(_BYTE *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    v3 = *v1;
    sub_23952329C(v4, v1 + 1);
    sub_239523424((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_250ADD7C0, (void (*)(void *))sub_239523474);
  }
  return result;
}

void sub_239B0F5D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239522FE4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239B0F5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_239522FE4((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_239B0F610(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF83E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B0F620(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF83E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B0F650(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_239B0F660(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  const std::__fs::filesystem::path *v21;
  uint64_t *v22;
  std::__fs::filesystem::path::__string_view v23;
  void **p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v25;
  std::basic_string_view<_CharT, _Traits>::size_type v26;
  void **v27;
  int v28;
  _QWORD *v29;
  _QWORD *v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  _QWORD *v36;
  void *v37;
  void *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void *__p[2];
  _BYTE v54[7];
  char v55;
  void *v56[2];
  char v57;
  __int128 v58;
  uint64_t v59;
  void *v60[2];
  __int128 v61;
  int v62;
  void **__dst;
  void *size;
  unint64_t v65;

  v7 = *a2;
  v6 = a2[1];
  if (v6)
  {
    v8 = (unint64_t *)(v6 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a1 + 1888) = v7;
  v10 = *(std::__shared_weak_count **)(a1 + 1896);
  *(_QWORD *)(a1 + 1896) = v6;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v14 = *a2;
  v13 = a2[1];
  if (v13)
  {
    v15 = (unint64_t *)(v13 + 8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
  }
  *(_QWORD *)(a1 + 2120) = v14;
  v17 = *(std::__shared_weak_count **)(a1 + 2128);
  *(_QWORD *)(a1 + 2128) = v13;
  if (!v17)
    goto LABEL_91;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_20;
  }
  else
  {
LABEL_91:
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_20;
  }
  if (*(_DWORD *)a1 < 2u)
    return;
LABEL_20:
  if (*a2)
  {
    kdebug_trace();
    v20 = *a2;
    if (*(_QWORD *)(*a2 + 200))
    {
      LOBYTE(__dst) = 0;
      v60[0] = sub_239B0FBE8;
      v60[1] = 0;
      *(_QWORD *)&v61 = v20;
      sub_239B0FF04((uint64_t)v60, (uint64_t)&__dst);
    }
    v51 = a1;
    kdebug_trace();
    *(_OWORD *)v60 = 0u;
    v61 = 0u;
    v62 = 1065353216;
    v21 = *(const std::__fs::filesystem::path **)(a3 + 16);
    if (v21)
    {
      v22 = (uint64_t *)(a1 + 248);
      while (1)
      {
        v23 = std::__fs::filesystem::path::__filename(v21 + 1);
        if (v23.__size_ >= 0x7FFFFFFFFFFFFFF8)
          sub_23941A5AC();
        if (v23.__size_ >= 0x17)
        {
          v25 = (v23.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v23.__size_ | 7) != 0x17)
            v25 = v23.__size_ | 7;
          v26 = v25 + 1;
          p_dst = (void **)operator new(v25 + 1);
          size = (void *)v23.__size_;
          v65 = v26 | 0x8000000000000000;
          __dst = p_dst;
        }
        else
        {
          HIBYTE(v65) = v23.__size_;
          p_dst = (void **)&__dst;
          if (!v23.__size_)
            goto LABEL_35;
        }
        memmove(p_dst, v23.__data_, v23.__size_);
LABEL_35:
        *((_BYTE *)p_dst + v23.__size_) = 0;
        v27 = __dst;
        v52 = v65;
        HIBYTE(v52) = BYTE3(v65);
        v28 = SHIBYTE(v65);
        if (SHIBYTE(v65) < 0)
        {
          sub_23941A7F8(__p, __dst, (unint64_t)size);
        }
        else
        {
          __p[0] = __dst;
          __p[1] = size;
          *(_DWORD *)v54 = v52;
          *(_DWORD *)&v54[3] = *(_DWORD *)((char *)&v65 + 3);
          v55 = HIBYTE(v65);
        }
        sub_2395ACAA8((uint64_t)__p, (char *)v56);
        sub_2396F2748(&v58, v22, (uint64_t)v56);
        v29 = sub_239A9A10C((uint64_t)v60, v21->__pn_.__r_.__value_.__r.__words[2], &v21->__pn_.__r_.__value_.__r.__words[2]);
        v30 = v29;
        v31 = (void **)(v29 + 3);
        v32 = v29[3];
        if (v32)
        {
          v33 = v29[4];
          v34 = (void *)v29[3];
          if (v33 != v32)
          {
            do
            {
              if (*(char *)(v33 - 1) < 0)
                operator delete(*(void **)(v33 - 24));
              v33 -= 24;
            }
            while (v33 != v32);
            v34 = *v31;
          }
          v30[4] = v32;
          operator delete(v34);
          *v31 = 0;
          v31[1] = 0;
          v31[2] = 0;
        }
        *(_OWORD *)(v30 + 3) = v58;
        v30[5] = v59;
        v59 = 0;
        v58 = 0uLL;
        if (v57 < 0)
        {
          operator delete(v56[0]);
          if (v55 < 0)
            goto LABEL_25;
LABEL_50:
          if ((v28 & 0x80000000) == 0)
            goto LABEL_26;
LABEL_51:
          operator delete(v27);
          v21 = (const std::__fs::filesystem::path *)v21->__pn_.__r_.__value_.__r.__words[0];
          if (!v21)
            break;
        }
        else
        {
          if ((v55 & 0x80000000) == 0)
            goto LABEL_50;
LABEL_25:
          operator delete(__p[0]);
          if (v28 < 0)
            goto LABEL_51;
LABEL_26:
          v21 = (const std::__fs::filesystem::path *)v21->__pn_.__r_.__value_.__r.__words[0];
          if (!v21)
            break;
        }
      }
    }
    if (*(_BYTE *)(v51 + 1368))
    {
      sub_239A71290(v51 + 1328, (uint64_t *)v60);
      v35 = (_QWORD *)v61;
      if (!(_QWORD)v61)
      {
LABEL_76:
        v46 = v60[0];
        v60[0] = 0;
        if (v46)
          operator delete(v46);
        return;
      }
    }
    else
    {
      v42 = v60[0];
      v43 = (unint64_t)v60[1];
      v60[0] = 0;
      v60[1] = 0;
      *(_QWORD *)(v51 + 1328) = v42;
      *(_QWORD *)(v51 + 1336) = v43;
      v44 = *((_QWORD *)&v61 + 1);
      v35 = (_QWORD *)v61;
      *(_QWORD *)(v51 + 1344) = v61;
      *(_QWORD *)(v51 + 1352) = v44;
      *(_DWORD *)(v51 + 1360) = v62;
      if (v44)
      {
        v45 = v35[1];
        if ((v43 & (v43 - 1)) != 0)
        {
          if (v45 >= v43)
            v45 %= v43;
        }
        else
        {
          v45 &= v43 - 1;
        }
        v35 = 0;
        v42[v45] = v51 + 1344;
        v61 = 0uLL;
      }
      *(_BYTE *)(v51 + 1368) = 1;
      if (!v35)
        goto LABEL_76;
    }
    do
    {
      v48 = (_QWORD *)*v35;
      v49 = v35[3];
      if (v49)
      {
        v50 = v35[4];
        v47 = (void *)v35[3];
        if (v50 != v49)
        {
          do
          {
            if (*(char *)(v50 - 1) < 0)
              operator delete(*(void **)(v50 - 24));
            v50 -= 24;
          }
          while (v50 != v49);
          v47 = (void *)v35[3];
        }
        v35[4] = v49;
        operator delete(v47);
      }
      operator delete(v35);
      v35 = v48;
    }
    while (v48);
    goto LABEL_76;
  }
  if (*(_BYTE *)(a1 + 1368))
  {
    v36 = *(_QWORD **)(a1 + 1344);
    if (v36)
    {
      do
      {
        v39 = (_QWORD *)*v36;
        v40 = v36[3];
        if (v40)
        {
          v41 = v36[4];
          v38 = (void *)v36[3];
          if (v41 != v40)
          {
            do
            {
              if (*(char *)(v41 - 1) < 0)
                operator delete(*(void **)(v41 - 24));
              v41 -= 24;
            }
            while (v41 != v40);
            v38 = (void *)v36[3];
          }
          v36[4] = v40;
          operator delete(v38);
        }
        operator delete(v36);
        v36 = v39;
      }
      while (v39);
    }
    v37 = *(void **)(a1 + 1328);
    *(_QWORD *)(a1 + 1328) = 0;
    if (v37)
      operator delete(v37);
    *(_BYTE *)(a1 + 1368) = 0;
  }
}

void sub_239B0FB6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  void *v27;

  operator delete(v27);
  sub_239A8E020((uint64_t)&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_239B0FBE8(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 654, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 100;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v24 = v3;
    goto LABEL_12;
  }
  v24 = &v23;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF85E0;
  *(_QWORD *)&v12 = sub_239B0CB10((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239B09F38(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239B0FDEC(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B0FDF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,_QWORD *a43)
{
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  if (a43 == v46)
  {
    v48 = 4;
  }
  else
  {
    if (!a43)
      goto LABEL_6;
    v48 = 5;
    v46 = a43;
  }
  (*(void (**)(_QWORD *))(*v46 + 8 * v48))(v46);
LABEL_6:
  if (a39 == v45)
  {
    v49 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_11;
    v49 = 5;
    v45 = a39;
  }
  (*(void (**)(_QWORD *))(*v45 + 8 * v49))(v45);
LABEL_11:
  sub_239A8303C(v44);
  sub_239A83110(v43);
  v50 = a20;
  if (a20 == &a17)
  {
    v51 = 4;
    v50 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_16;
    v51 = 5;
  }
  (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_16:
  v52 = a14;
  if (a14 == &a11)
  {
    v53 = 4;
    v52 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v53 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v52 + 8 * v53))();
  _Unwind_Resume(a1);
}

uint64_t sub_239B0FF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, _QWORD *);
  _QWORD *v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  pthread_cond_t v18;
  pthread_cond_t v19;
  pthread_mutex_t v20;
  _QWORD v21[3];
  _QWORD *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  sub_2397A1618(&v20);
  v11 = 0x7FFFFFFF;
  pthread_cond_init(&v18, 0);
  pthread_cond_init(&v19, 0);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(uint64_t (**)(_QWORD *, _QWORD *))a1;
  v6 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v4 >> 1));
  if ((v4 & 1) != 0)
    v5 = *(uint64_t (**)(_QWORD *, _QWORD *))(*v6 + v5);
  v21[0] = &off_250AF5C68;
  v21[1] = &v11;
  v21[2] = a2;
  v22 = v21;
  v7 = v5(v6, v21);
  v8 = v22;
  if (v22 == v21)
  {
    v9 = 4;
    v8 = v21;
  }
  else
  {
    if (!v22)
      goto LABEL_8;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_8:
  if (v7)
  {
    sub_2395BFB54(&v11);
    sub_2395C2A4C((uint64_t)&v11);
  }
  return sub_2395C29C4((uint64_t)&v11);
}

void sub_239B1005C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B100A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_239B100CC()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B100E0(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF5C68;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B10118(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF5C68;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B10138(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

uint64_t sub_239B1016C(uint64_t result)
{
  uint64_t v1;
  _QWORD v2[3];

  if (*(_BYTE *)(result + 4) || *(_DWORD *)result >= 2u)
  {
    v1 = *(_QWORD *)(result + 1888);
    if (v1)
    {
      v2[0] = sub_239B101B8;
      v2[1] = 0;
      v2[2] = v1;
      return sub_239B104A0((uint64_t)v2);
    }
  }
  return result;
}

uint64_t sub_239B101B8(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 647, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 99;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v23 = v3;
    goto LABEL_12;
  }
  v23 = &v22;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v24 = 0;
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF85E0;
  *(_QWORD *)&v12 = sub_239B0CB10((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239B09F38(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239B103B8(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B103C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39)
{
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  if (a39 == v41)
  {
    v43 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_6;
    v43 = 5;
    v41 = a39;
  }
  (*(void (**)(_QWORD *))(*v41 + 8 * v43))(v41);
LABEL_6:
  sub_239A8303C(v40);
  sub_239A83110(v39);
  v44 = a20;
  if (a20 == &a17)
  {
    v45 = 4;
    v44 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_11;
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
LABEL_11:
  v46 = a14;
  if (a14 == &a11)
  {
    v47 = 4;
    v46 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v47 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v46 + 8 * v47))();
  _Unwind_Resume(a1);
}

uint64_t sub_239B104A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *, _QWORD *);
  _QWORD *v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  unsigned int v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  pthread_cond_t v16;
  pthread_cond_t v17;
  pthread_mutex_t v18;
  _QWORD v19[3];
  _QWORD *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_2397A1618(&v18);
  v9 = 0x7FFFFFFF;
  pthread_cond_init(&v16, 0);
  pthread_cond_init(&v17, 0);
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(_QWORD *, _QWORD *))a1;
  v4 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v2 >> 1));
  if ((v2 & 1) != 0)
    v3 = *(uint64_t (**)(_QWORD *, _QWORD *))(*v4 + v3);
  v19[0] = &off_250AF6688;
  v19[1] = &v9;
  v20 = v19;
  v5 = v3(v4, v19);
  v6 = v20;
  if (v20 == v19)
  {
    v7 = 4;
    v6 = v19;
  }
  else
  {
    if (!v20)
      goto LABEL_8;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_8:
  if (v5)
  {
    sub_2395BFB54(&v9);
    sub_2395C2A4C((uint64_t)&v9);
  }
  return sub_2395C29C4((uint64_t)&v9);
}

void sub_239B105F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B1063C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_239B10664()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B10678(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6688;
  result[1] = v3;
  return result;
}

uint64_t sub_239B106AC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6688;
  a2[1] = v2;
  return result;
}

uint64_t sub_239B106C8(uint64_t a1)
{
  unsigned int *v1;
  char v3;

  v1 = *(unsigned int **)(a1 + 8);
  v3 = 1;
  return sub_2395BFE44(v1, &v3);
}

uint64_t sub_239B106F4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  char *v6;
  BOOL v7;
  std::__fs::filesystem::path::__string_view v8;
  __int128 *p_dst;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::basic_string_view<_CharT, _Traits>::size_type v17;
  std::basic_string_view<_CharT, _Traits>::size_type v18;
  char *v19;
  std::__fs::filesystem::path::__string_view v20;
  __int128 *v21;
  std::basic_string_view<_CharT, _Traits>::size_type v22;
  std::basic_string_view<_CharT, _Traits>::size_type v23;
  std::__shared_weak_count *v24;
  char *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  void *__p[2];
  unint64_t v35;
  char *v36;
  std::__shared_weak_count *v37;
  std::__fs::filesystem::path v38;
  __int128 __dst;
  unint64_t v40;

  v4 = *(_QWORD *)(a1 + 1904);
  if (v4)
  {
LABEL_12:
    v10 = *(_QWORD *)(a1 + 1912);
    if (!v10)
      goto LABEL_15;
LABEL_13:
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1 + 4) || !*(_BYTE *)(a1 + 1400))
  {
    v4 = 0;
    goto LABEL_12;
  }
  sub_2396F295C((uint64_t *)(a1 + 1376), a1 + 8, (uint64_t)&v38);
  std::__fs::filesystem::__status(&v38, 0);
  v5 = 1;
  if (!(_BYTE)__dst || __dst == 255)
    goto LABEL_52;
  kdebug_trace();
  v6 = (char *)operator new(0x3C0uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_250B01B38;
  bzero(v6 + 24, 0x3A8uLL);
  *((_DWORD *)v6 + 22) = 1065353216;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_DWORD *)v6 + 32) = 1065353216;
  *(_OWORD *)(v6 + 152) = 0u;
  *(_OWORD *)(v6 + 168) = 0u;
  *(_OWORD *)(v6 + 184) = 0u;
  *((_QWORD *)v6 + 25) = 0;
  *((_DWORD *)v6 + 52) = 1065353216;
  *(_OWORD *)(v6 + 216) = 0u;
  *(_OWORD *)(v6 + 232) = 0u;
  *((_DWORD *)v6 + 62) = 1065353216;
  *((_OWORD *)v6 + 16) = 0u;
  *((_OWORD *)v6 + 17) = 0u;
  *((_OWORD *)v6 + 18) = 0u;
  *((_OWORD *)v6 + 19) = 0u;
  *((_QWORD *)v6 + 40) = 0;
  *((_QWORD *)v6 + 41) = 0x3FF0000000000000;
  *((_QWORD *)v6 + 46) = 0;
  *((_OWORD *)v6 + 21) = 0u;
  *((_OWORD *)v6 + 22) = 0u;
  *((_DWORD *)v6 + 118) = -1;
  *((_OWORD *)v6 + 30) = 0u;
  *((_OWORD *)v6 + 31) = 0u;
  *((_DWORD *)v6 + 128) = 1065353216;
  *(_OWORD *)(v6 + 520) = 0u;
  *(_OWORD *)(v6 + 536) = 0u;
  *((_DWORD *)v6 + 138) = 1065353216;
  *((_OWORD *)v6 + 35) = 0u;
  *((_OWORD *)v6 + 36) = 0u;
  *((_OWORD *)v6 + 37) = 0u;
  *((_OWORD *)v6 + 38) = 0u;
  *((_OWORD *)v6 + 39) = 0u;
  *((_OWORD *)v6 + 40) = 0u;
  *((_OWORD *)v6 + 41) = 0u;
  *((_OWORD *)v6 + 42) = 0u;
  *((_OWORD *)v6 + 43) = 0u;
  *((_OWORD *)v6 + 44) = 0u;
  *((_OWORD *)v6 + 45) = 0u;
  *((_OWORD *)v6 + 46) = 0u;
  *((_OWORD *)v6 + 47) = 0u;
  *((_OWORD *)v6 + 48) = 0u;
  *((_OWORD *)v6 + 49) = 0u;
  *((_OWORD *)v6 + 50) = 0u;
  *((_OWORD *)v6 + 51) = 0u;
  *((_OWORD *)v6 + 52) = 0u;
  *((_DWORD *)v6 + 212) = 1065353216;
  *((_QWORD *)v6 + 107) = 0;
  *((_QWORD *)v6 + 109) = 0;
  *((_QWORD *)v6 + 108) = 0;
  v6[880] = 0;
  v36 = v6 + 24;
  v37 = (std::__shared_weak_count *)v6;
  v7 = sub_239A9D108((uint64_t)(v6 + 24));
  kdebug_trace();
  if (v7)
  {
    v8 = std::__fs::filesystem::path::__parent_path(&v38);
    if (v8.__size_ > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    if (v8.__size_ >= 0x17)
    {
      v17 = (v8.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8.__size_ | 7) != 0x17)
        v17 = v8.__size_ | 7;
      v18 = v17 + 1;
      p_dst = (__int128 *)operator new(v17 + 1);
      *((_QWORD *)&__dst + 1) = v8.__size_;
      v40 = v18 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v40) = v8.__size_;
      p_dst = &__dst;
      if (!v8.__size_)
      {
LABEL_26:
        *((_BYTE *)p_dst + v8.__size_) = 0;
        *(_OWORD *)__p = __dst;
        v35 = v40;
        sub_2396B8C08((uint64_t)(v6 + 480), (uint64_t)__p);
        if (SHIBYTE(v35) < 0)
          operator delete(__p[0]);
        v19 = v36;
        v20 = std::__fs::filesystem::path::__parent_path(&v38);
        if (v20.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v20.__size_ >= 0x17)
        {
          v22 = (v20.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v20.__size_ | 7) != 0x17)
            v22 = v20.__size_ | 7;
          v23 = v22 + 1;
          v21 = (__int128 *)operator new(v22 + 1);
          *((_QWORD *)&__dst + 1) = v20.__size_;
          v40 = v23 | 0x8000000000000000;
          *(_QWORD *)&__dst = v21;
        }
        else
        {
          HIBYTE(v40) = v20.__size_;
          v21 = &__dst;
          if (!v20.__size_)
            goto LABEL_36;
        }
        memmove(v21, v20.__data_, v20.__size_);
LABEL_36:
        *((_BYTE *)v21 + v20.__size_) = 0;
        *(_OWORD *)__p = __dst;
        v35 = v40;
        sub_2396B8C08((uint64_t)(v19 + 496), (uint64_t)__p);
        if (SHIBYTE(v35) < 0)
          operator delete(__p[0]);
        v25 = v36;
        v24 = v37;
        if (v37)
        {
          p_shared_owners = (unint64_t *)&v37->__shared_owners_;
          do
            v27 = __ldxr(p_shared_owners);
          while (__stxr(v27 + 1, p_shared_owners));
        }
        *(_QWORD *)(a1 + 1904) = v25;
        v28 = *(std::__shared_weak_count **)(a1 + 1912);
        *(_QWORD *)(a1 + 1912) = v24;
        if (v28)
        {
          v29 = (unint64_t *)&v28->__shared_owners_;
          do
            v30 = __ldaxr(v29);
          while (__stlxr(v30 - 1, v29));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        v5 = 0;
        goto LABEL_47;
      }
    }
    memmove(p_dst, v8.__data_, v8.__size_);
    goto LABEL_26;
  }
  v5 = 1;
LABEL_47:
  v31 = v37;
  if (v37)
  {
    v32 = (unint64_t *)&v37->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
LABEL_52:
  if (SHIBYTE(v38.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v38.__pn_.__r_.__value_.__l.__data_);
    if (v5)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 1904);
  v10 = *(_QWORD *)(a1 + 1912);
  if (v10)
    goto LABEL_13;
LABEL_15:
  v13 = (std::__shared_weak_count *)a2[1];
  *a2 = v4;
  a2[1] = v10;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  return 1;
}

void sub_239B10B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0)
    operator delete(__p);
  sub_239A4D7C0((uint64_t)&a16);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(a1);
}

uint64_t sub_239B10B88(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  void **v13;
  char *v14;
  void **v15;
  void *v16;
  void **v17;
  void *v18;
  void **v20;
  void **v21;
  std::__fs::filesystem::path __p;
  void *v23[2];
  void *v24;
  int v25;
  void *v26[2];
  void *v27;
  int v28;
  void *v29;
  char v30;

  v5 = *a2;
  v4 = a2[1];
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  *(_QWORD *)(a1 + 1904) = v5;
  v8 = *(std::__shared_weak_count **)(a1 + 1912);
  *(_QWORD *)(a1 + 1912) = v4;
  if (!v8)
    goto LABEL_40;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  if (*(_DWORD *)a1 < 2u)
    return 1;
LABEL_12:
  sub_2396F295C((uint64_t *)(a1 + 560), a1 + 8, (uint64_t)&v29);
  v12 = *a2;
  v13 = (void **)(*a2 + 456);
  sub_2395F6750((uint64_t)v26, (uint64_t)v13);
  sub_2395F6750((uint64_t)v23, v12 + 496);
  sub_2396F295C((uint64_t *)(a1 + 512), a1 + 8, (uint64_t)&__p);
  sub_2396B8CE0((uint64_t)v13, &__p);
  sub_2396B8CE0(v12 + 496, &__p);
  kdebug_trace();
  v11 = sub_239A9D788(*a2);
  kdebug_trace();
  if (v13 != v26)
  {
    *(_DWORD *)(v12 + 488) = v28;
    sub_239A99678(v13, (const std::string *)v27);
  }
  if ((void **)(v12 + 496) != v23)
  {
    *(_DWORD *)(v12 + 528) = v25;
    sub_239A99678((_QWORD *)(v12 + 496), (const std::string *)v24);
  }
  if (v11)
  {
    v14 = (char *)(a1 + 1376);
    if (!*(_BYTE *)(a1 + 1400))
    {
      *(_QWORD *)v14 = 0;
      *(_QWORD *)(a1 + 1384) = 0;
      *(_QWORD *)(a1 + 1392) = 0;
      sub_239490944(v14, *(_QWORD *)(a1 + 560), *(_QWORD *)(a1 + 568), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 568) - *(_QWORD *)(a1 + 560)) >> 3));
      *(_BYTE *)(a1 + 1400) = 1;
      if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
    sub_239A70694((uint64_t)v14, *(std::string **)(a1 + 560), *(std::string **)(a1 + 568), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 568) - *(_QWORD *)(a1 + 560)) >> 3));
  }
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_20:
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
LABEL_21:
  v15 = (void **)v24;
  if (v24)
  {
    do
    {
      v20 = (void **)*v15;
      if (*((char *)v15 + 47) < 0)
        operator delete(v15[3]);
      operator delete(v15);
      v15 = v20;
    }
    while (v20);
  }
  v16 = v23[0];
  v23[0] = 0;
  if (v16)
    operator delete(v16);
  v17 = (void **)v27;
  if (v27)
  {
    do
    {
      v21 = (void **)*v17;
      if (*((char *)v17 + 47) < 0)
        operator delete(v17[3]);
      operator delete(v17);
      v17 = v21;
    }
    while (v21);
  }
  v18 = v26[0];
  v26[0] = 0;
  if (v18)
    operator delete(v18);
  if (v30 < 0)
    operator delete(v29);
  return v11;
}

void sub_239B10E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;

  sub_23959F2D4((uint64_t)&a15);
  sub_23959F2D4((uint64_t)&a20);
  if (*(char *)(v20 - 49) < 0)
    operator delete(*(void **)(v20 - 72));
  _Unwind_Resume(a1);
}

void sub_239B10E98(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  _QWORD *v39;
  void *v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  void *v54[2];
  _QWORD *v55;
  __int128 v56;
  uint64_t v57;
  void *v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  int v62;
  void *__p[2];
  uint64_t v64;
  _QWORD v65[3];
  _QWORD *v66;
  _QWORD v67[3];
  _QWORD *v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 1920);
  if (v5)
  {
LABEL_8:
    v7 = *(_QWORD *)(a1 + 1928);
    if (!v7)
      goto LABEL_11;
    goto LABEL_9;
  }
  if (!*(_BYTE *)(a1 + 4) || !*(_BYTE *)(a1 + 1448))
  {
    v5 = 0;
    goto LABEL_8;
  }
  v5 = *(_QWORD *)(a1 + 1432);
  if (!v5)
    goto LABEL_8;
  sub_239A8DC0C((uint64_t)v54, a1 + 1408);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(&v56, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v56 = *(_OWORD *)(a1 + 8);
    v57 = *(_QWORD *)(a1 + 24);
  }
  v13 = *(_QWORD *)(a1 + 2312);
  v14 = *(std::__shared_weak_count **)(a1 + 2320);
  v49 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    v50 = a3;
    v51 = 0;
    v52 = v13;
    v53 = v14;
    do
      v17 = __ldxr(p_shared_owners);
    while (__stxr(v17 + 1, p_shared_owners));
  }
  else
  {
    v50 = a3;
    v51 = 0;
    v52 = v13;
    v53 = 0;
  }
  v51 = (int)std::thread::hardware_concurrency();
  v18 = operator new(0x1B0uLL);
  v18[1] = 0;
  v18[2] = 0;
  *v18 = &off_250AF7EE8;
  sub_239B114B8((uint64_t)&v58, (uint64_t)v54);
  v66 = 0;
  v19 = operator new(0x48uLL);
  v20 = v58;
  v21 = v59;
  v58 = 0;
  v59 = 0;
  *v19 = off_250AF42B0;
  v19[1] = v20;
  v19[2] = v21;
  v23 = v60;
  v22 = v61;
  v19[3] = v60;
  v19[4] = v22;
  *((_DWORD *)v19 + 10) = v62;
  if (v22)
  {
    v24 = v23[1];
    if ((v21 & (v21 - 1)) != 0)
    {
      if (v24 >= v21)
        v24 %= v21;
    }
    else
    {
      v24 &= v21 - 1;
    }
    v20[v24] = v19 + 3;
    v60 = 0;
    v61 = 0;
  }
  *((_OWORD *)v19 + 3) = *(_OWORD *)__p;
  v19[8] = v64;
  __p[1] = 0;
  v64 = 0;
  __p[0] = 0;
  v66 = v19;
  v68 = 0;
  sub_239A7DBE8((uint64_t)(v18 + 3), &v50, v65, v67);
  v25 = v68;
  if (v68 == v67)
  {
    v26 = 4;
    v25 = v67;
  }
  else
  {
    if (!v68)
      goto LABEL_36;
    v26 = 5;
  }
  (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_36:
  v27 = v66;
  if (v66 == v65)
  {
    v28 = 4;
    v27 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_41;
    v28 = 5;
  }
  (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_41:
  if (SHIBYTE(v64) < 0)
    operator delete(__p[0]);
  v29 = v60;
  if (v60)
  {
    do
    {
      v42 = (_QWORD *)*v29;
      v43 = v29[3];
      if (v43)
      {
        v44 = v29[4];
        v41 = (void *)v29[3];
        if (v44 != v43)
        {
          do
          {
            if (*(char *)(v44 - 1) < 0)
              operator delete(*(void **)(v44 - 24));
            v44 -= 24;
          }
          while (v44 != v43);
          v41 = (void *)v29[3];
        }
        v29[4] = v43;
        operator delete(v41);
      }
      operator delete(v29);
      v29 = v42;
    }
    while (v42);
  }
  v30 = v58;
  v58 = 0;
  if (v30)
    operator delete(v30);
  *(_QWORD *)(a1 + 1920) = v18 + 3;
  v31 = *(std::__shared_weak_count **)(a1 + 1928);
  *(_QWORD *)(a1 + 1928) = v18;
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = v53;
  if (v53)
  {
    v35 = (unint64_t *)&v53->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  if (v49)
  {
    v37 = (unint64_t *)&v49->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
  }
  if (SHIBYTE(v57) < 0)
    operator delete((void *)v56);
  v39 = v55;
  if (v55)
  {
    do
    {
      v46 = (_QWORD *)*v39;
      v47 = v39[3];
      if (v47)
      {
        v48 = v39[4];
        v45 = (void *)v39[3];
        if (v48 != v47)
        {
          do
          {
            if (*(char *)(v48 - 1) < 0)
              operator delete(*(void **)(v48 - 24));
            v48 -= 24;
          }
          while (v48 != v47);
          v45 = (void *)v39[3];
        }
        v39[4] = v47;
        operator delete(v45);
      }
      operator delete(v39);
      v39 = v46;
    }
    while (v46);
  }
  v40 = v54[0];
  v54[0] = 0;
  if (v40)
    operator delete(v40);
  v5 = *(_QWORD *)(a1 + 1920);
  v7 = *(_QWORD *)(a1 + 1928);
  if (v7)
  {
LABEL_9:
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
LABEL_11:
  v10 = (std::__shared_weak_count *)a2[1];
  *a2 = v5;
  a2[1] = v7;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_239B1131C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239A8E020((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B11330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,_QWORD *a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  std::__shared_weak_count *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;

  v38 = *(_QWORD **)(v36 - 96);
  if (v38 == v35)
  {
    v39 = 4;
    v38 = (_QWORD *)(v36 - 120);
  }
  else
  {
    if (!v38)
      goto LABEL_6;
    v39 = 5;
  }
  (*(void (**)(void))(*v38 + 8 * v39))();
LABEL_6:
  v40 = *(_QWORD **)(v36 - 128);
  if (v40 == (_QWORD *)(v36 - 152))
  {
    v41 = 4;
    v40 = (_QWORD *)(v36 - 152);
  }
  else
  {
    if (!v40)
    {
      if ((a34 & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_10;
    }
    v41 = 5;
  }
  (*(void (**)(void))(*v40 + 8 * v41))();
  if ((a34 & 0x80000000) == 0)
  {
LABEL_14:
    v42 = a26;
    if (!a26)
      goto LABEL_15;
    do
    {
LABEL_20:
      v45 = (_QWORD *)*v42;
      v46 = v42[3];
      if (v46)
      {
        v47 = v42[4];
        v44 = (void *)v42[3];
        if (v47 != v46)
        {
          do
          {
            if (*(char *)(v47 - 1) < 0)
              operator delete(*(void **)(v47 - 24));
            v47 -= 24;
          }
          while (v47 != v46);
          v44 = (void *)v42[3];
        }
        v42[4] = v46;
        operator delete(v44);
      }
      operator delete(v42);
      v42 = v45;
    }
    while (v45);
LABEL_15:
    v43 = a24;
    a24 = 0;
    if (v43)
      operator delete(v43);
    std::__shared_weak_count::~__shared_weak_count(v34);
    operator delete(v48);
    sub_239A74534((uint64_t)&a12);
    sub_239416DA0((uint64_t)&a10);
    sub_239A9E4FC((uint64_t)&a16);
    _Unwind_Resume(a1);
  }
LABEL_10:
  operator delete(__p);
  v42 = a26;
  if (!a26)
    goto LABEL_15;
  goto LABEL_20;
}

void sub_239B11474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a15)
  {
    p_shared_owners = (unint64_t *)&a15->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a15->__on_zero_shared)(a15);
      std::__shared_weak_count::__release_weak(a15);
    }
  }
  JUMPOUT(0x239B1145CLL);
}

uint64_t sub_239B114B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = sub_239A8DC0C(a1, a2) + 40;
  if (*(char *)(a2 + 63) < 0)
  {
    sub_23941A7F8((_BYTE *)v4, *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)v4 = v5;
  }
  return a1;
}

void sub_239B1151C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)(v1 + 16);
  if (v3)
  {
    do
    {
      v6 = (_QWORD *)*v3;
      v7 = v3[3];
      if (v7)
      {
        v8 = v3[4];
        v5 = (void *)v3[3];
        if (v8 != v7)
        {
          do
          {
            if (*(char *)(v8 - 1) < 0)
              operator delete(*(void **)(v8 - 24));
            v8 -= 24;
          }
          while (v8 != v7);
          v5 = (void *)v3[3];
        }
        v3[4] = v7;
        operator delete(v5);
      }
      operator delete(v3);
      v3 = v6;
    }
    while (v6);
  }
  v4 = *(void **)v1;
  *(_QWORD *)v1 = 0;
  if (v4)
    operator delete(v4);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B1159C(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = off_250AF42B0;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v6 = (_QWORD *)*v2;
    v7 = v2[3];
    if (v7)
    {
      v8 = v2[4];
      v5 = (void *)v2[3];
      if (v8 != v7)
      {
        do
        {
          if (*(char *)(v8 - 1) < 0)
            operator delete(*(void **)(v8 - 24));
          v8 -= 24;
        }
        while (v8 != v7);
        v5 = (void *)v2[3];
      }
      v2[4] = v7;
      operator delete(v5);
    }
    operator delete(v2);
    v2 = v6;
  }
  while (v6);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void sub_239B11668(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_250AF42B0;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v5 = (_QWORD *)*v2;
    v6 = v2[3];
    if (v6)
    {
      v7 = v2[4];
      v4 = (void *)v2[3];
      if (v7 != v6)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0)
            operator delete(*(void **)(v7 - 24));
          v7 -= 24;
        }
        while (v7 != v6);
        v4 = (void *)v2[3];
      }
      v2[4] = v6;
      operator delete(v4);
    }
    operator delete(v2);
    v2 = v5;
  }
  while (v5);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B11744(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = a1 + 8;
  v2 = operator new(0x48uLL);
  *v2 = off_250AF42B0;
  sub_239B114B8((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_239B11784(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B11798(uint64_t a1, _QWORD *a2)
{
  *a2 = off_250AF42B0;
  return sub_239B114B8((uint64_t)(a2 + 1), a1 + 8);
}

void sub_239B117B4(uint64_t a1)
{
  sub_239AA5734(a1 + 8);
}

void sub_239B117BC(void *a1)
{
  sub_239AA5734((uint64_t)a1 + 8);
  operator delete(a1);
}

void sub_239B117E4(int8x8_t *a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  int8x8_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  std::ios_base *v23;
  unint64_t v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  void *v47;
  char v48;
  const void *v49[3];
  void *v50[3];
  void *v51[2];
  unsigned __int8 v52;
  char v53;
  void *v54;
  char v55;
  void *v56;
  char v57;
  char v58;
  char v59;
  __int128 v60;
  __int128 __p;
  uint64_t v62;
  char v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  char v69;
  char v70;
  char v71;
  uint64_t v72;
  std::string v73;
  _QWORD v74[2];
  _BYTE v75[408];
  _QWORD v76[20];

  v76[19] = *MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  if (!*(_QWORD *)&v4)
    goto LABEL_21;
  v5 = *a2;
  v6 = (uint8x8_t)vcnt_s8(v4);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v7 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v7 = (*(_QWORD *)&v4 - 1) & v5;
  }
  v8 = a1[1];
  v9 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v7);
  if (!v9 || (v10 = (_QWORD *)*v9) == 0)
  {
LABEL_21:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  v11 = *(_QWORD *)&v4 - 1;
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v12 = v10[1];
      if (v12 == v5)
      {
        if (v10[2] == v5)
          goto LABEL_23;
      }
      else if ((v12 & v11) != v7)
      {
        goto LABEL_21;
      }
      v10 = (_QWORD *)*v10;
      if (!v10)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v13 = v10[1];
    if (v13 == v5)
      break;
    if (v13 >= *(_QWORD *)&v4)
      v13 %= *(_QWORD *)&v4;
    if (v13 != v7)
      goto LABEL_21;
LABEL_16:
    v10 = (_QWORD *)*v10;
    if (!v10)
      goto LABEL_21;
  }
  if (v10[2] != v5)
    goto LABEL_16;
LABEL_23:
  if (v6.u32[0] > 1uLL)
  {
    v14 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v14 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v14 = v11 & v5;
  }
  v15 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v14);
  if (!v15 || (v16 = (_QWORD *)*v15) == 0)
LABEL_85:
    sub_23941D898("unordered_map::at: key not found");
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v17 = v16[1];
      if (v17 == v5)
      {
        if (v16[2] == v5)
          goto LABEL_35;
      }
      else if ((v17 & v11) != v14)
      {
        goto LABEL_85;
      }
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_85;
    }
  }
  while (2)
  {
    v24 = v16[1];
    if (v24 != v5)
    {
      if (v24 >= *(_QWORD *)&v4)
        v24 %= *(_QWORD *)&v4;
      if (v24 != v14)
        goto LABEL_85;
      goto LABEL_45;
    }
    if (v16[2] != v5)
    {
LABEL_45:
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_85;
      continue;
    }
    break;
  }
LABEL_35:
  sub_2396F295C(v16 + 3, (uint64_t)&a1[6], (uint64_t)&v47);
  v18 = MEMORY[0x24BEDB838];
  v19 = MEMORY[0x24BEDB838] + 64;
  v20 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v21 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v22 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v76[0] = MEMORY[0x24BEDB838] + 64;
  v74[0] = v21;
  *(_QWORD *)((char *)v74 + *(_QWORD *)(v21 - 24)) = v22;
  v74[1] = 0;
  v23 = (std::ios_base *)((char *)v74 + *(_QWORD *)(v74[0] - 24));
  std::ios_base::init(v23, v75);
  v23[1].__vftable = 0;
  v23[1].__fmtflags_ = -1;
  v74[0] = v18 + 24;
  v76[0] = v19;
  MEMORY[0x23B83DC80](v75);
  std::ifstream::open();
  if ((v75[*(_QWORD *)(v74[0] - 24) + 16] & 5) != 0)
  {
    sub_239618F08(v51, "Failure during loading image file");
    v59 = 1;
    sub_239616578(5u, (__int128 *)v51, (uint64_t)&v60);
    v35 = v60;
    LOBYTE(v36) = 0;
    v45 = 0;
    if (v71)
    {
      v38 = 0;
      if (v63)
      {
        v36 = __p;
        v37 = v62;
        v62 = 0;
        __p = 0uLL;
        v38 = 1;
      }
      LOBYTE(v39) = 0;
      v44 = 0;
      if (v69)
      {
        v40 = v65;
        v39 = v64;
        v64 = 0uLL;
        v41 = v66;
        v42 = v67;
        v43 = v68;
        v65 = 0;
        v67 = 0uLL;
        v68 = 0;
        v44 = 1;
      }
      v45 = 1;
      v46 = 0;
      if (v63 && SHIBYTE(v62) < 0)
        operator delete((void *)__p);
    }
    else
    {
      v46 = 0;
    }
    if (v59)
    {
      if (v58)
      {
        if (v57 < 0)
          operator delete(v56);
        if (v55 < 0)
          operator delete(v54);
      }
      if (v53 && (char)v52 < 0)
        operator delete(v51[0]);
    }
  }
  else
  {
    HIBYTE(v49[2]) = 18;
    strcpy((char *)v49, "CorePhotogrammetry");
    sub_2395AC84C(v49, v50);
    sub_239A7D600(&v73, *(_QWORD **)&v75[*(_QWORD *)(v74[0] - 24) + 24]);
    sub_2395AC2E8((const void **)&v73.__r_.__value_.__l.__data_, (uint64_t)v50, (uint64_t)v51);
    sub_2394988CC((uint64_t)&v60);
    if ((v52 & 0x80u) == 0)
      v25 = v51;
    else
      v25 = (void **)v51[0];
    if ((v52 & 0x80u) == 0)
      v26 = v52;
    else
      v26 = (uint64_t)v51[1];
    sub_239458500(&__p, (uint64_t)v25, v26);
    sub_239622B98(&v60, 4, (uint64_t)&v35);
    *(_QWORD *)&v60 = *MEMORY[0x24BEDB7F0];
    v27 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    *(_QWORD *)((char *)&v60 + *(_QWORD *)(v60 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
    *(_QWORD *)&__p = v27;
    *((_QWORD *)&__p + 1) = MEMORY[0x24BEDB848] + 16;
    if (v70 < 0)
      operator delete(*((void **)&v67 + 1));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x23B83E250](&v72);
    if (v53 && (char)v52 < 0)
      operator delete(v51[0]);
    if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v73.__r_.__value_.__l.__data_);
    if (v50[0])
    {
      v50[1] = v50[0];
      operator delete(v50[0]);
    }
    if (SHIBYTE(v49[2]) < 0)
      operator delete((void *)v49[0]);
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)((char *)v74 + *(_QWORD *)(v74[0] - 24)), *(_DWORD *)&v75[*(_QWORD *)(v74[0] - 24) + 16] | 4);
  }
  v74[0] = *v20;
  *(_QWORD *)((char *)v74 + *(_QWORD *)(v74[0] - 24)) = v20[3];
  MEMORY[0x23B83DC8C](v75);
  std::istream::~istream();
  MEMORY[0x23B83E250](v76);
  if (v46)
  {
    v28 = sub_239620FD4((uint64_t)&v35);
    v29 = operator new(0xA0uLL);
    v29[1] = 0;
    v29[2] = 0;
    *v29 = &off_250ADBE68;
    v29[3] = &off_250ADBEA0;
    *((_OWORD *)v29 + 2) = *(_OWORD *)(v28 + 8);
    *(_QWORD *)(v28 + 8) = 0;
    *(_QWORD *)(v28 + 16) = 0;
    v30 = *(_OWORD *)(v28 + 88);
    v31 = *(_OWORD *)(v28 + 104);
    v32 = *(_OWORD *)(v28 + 72);
    v29[18] = *(_QWORD *)(v28 + 120);
    *((_OWORD *)v29 + 7) = v30;
    *((_OWORD *)v29 + 8) = v31;
    *((_OWORD *)v29 + 6) = v32;
    v33 = *(_OWORD *)(v28 + 56);
    v34 = *(_OWORD *)(v28 + 24);
    *((_OWORD *)v29 + 4) = *(_OWORD *)(v28 + 40);
    *((_OWORD *)v29 + 5) = v33;
    *((_OWORD *)v29 + 3) = v34;
    *((_WORD *)v29 + 76) = *(_WORD *)(v28 + 128);
    *a3 = v29 + 3;
    a3[1] = v29;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  sub_239621094((uint64_t)&v35);
  if (v48 < 0)
    operator delete(v47);
}

void sub_239B11E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49)
{
  void *v50;

  if (a49 && a48 < 0)
    operator delete(__p);
  if (SLOBYTE(STACK[0x277]) < 0)
  {
    operator delete((void *)STACK[0x260]);
    v50 = a40;
    if (a40)
      goto LABEL_6;
  }
  else
  {
    v50 = a40;
    if (a40)
    {
LABEL_6:
      operator delete(v50);
      if ((a39 & 0x80000000) == 0)
        goto LABEL_11;
LABEL_10:
      operator delete(a34);
LABEL_11:
      sub_23955CB90(&STACK[0x278]);
      if (a33 < 0)
        operator delete(a28);
      _Unwind_Resume(a1);
    }
  }
  if ((a39 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

void sub_239B11F50(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  const std::__fs::filesystem::path *v14;
  uint64_t *v15;
  std::__fs::filesystem::path::__string_view v16;
  void **p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v18;
  std::basic_string_view<_CharT, _Traits>::size_type v19;
  void **v20;
  int v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void **v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  void *__p[2];
  _BYTE v41[7];
  char v42;
  void *v43[2];
  char v44;
  __int128 v45;
  uint64_t v46;
  void *v47[2];
  __int128 v48;
  int v49;
  void **__dst;
  void *size;
  unint64_t v52;

  v7 = *a2;
  v6 = a2[1];
  if (v6)
  {
    v8 = (unint64_t *)(v6 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a1 + 1920) = v7;
  v10 = *(std::__shared_weak_count **)(a1 + 1928);
  *(_QWORD *)(a1 + 1928) = v6;
  if (!v10)
    goto LABEL_68;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  else
  {
LABEL_68:
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  if (*(_DWORD *)a1 < 2u)
    return;
LABEL_12:
  kdebug_trace();
  v13 = *a2;
  if (*(_QWORD *)(*a2 + 200))
  {
    LOBYTE(__dst) = 0;
    v47[0] = sub_239A9C128;
    v47[1] = 0;
    *(_QWORD *)&v48 = v13;
    sub_239A9C444((uint64_t)v47, (uint64_t)&__dst);
  }
  v38 = a1;
  kdebug_trace();
  *(_OWORD *)v47 = 0u;
  v48 = 0u;
  v49 = 1065353216;
  v14 = *(const std::__fs::filesystem::path **)(a3 + 16);
  if (v14)
  {
    v15 = (uint64_t *)(a1 + 584);
    while (1)
    {
      v16 = std::__fs::filesystem::path::__filename(v14 + 1);
      if (v16.__size_ >= 0x7FFFFFFFFFFFFFF8)
        sub_23941A5AC();
      if (v16.__size_ >= 0x17)
      {
        v18 = (v16.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v16.__size_ | 7) != 0x17)
          v18 = v16.__size_ | 7;
        v19 = v18 + 1;
        p_dst = (void **)operator new(v18 + 1);
        size = (void *)v16.__size_;
        v52 = v19 | 0x8000000000000000;
        __dst = p_dst;
      }
      else
      {
        HIBYTE(v52) = v16.__size_;
        p_dst = (void **)&__dst;
        if (!v16.__size_)
          goto LABEL_26;
      }
      memmove(p_dst, v16.__data_, v16.__size_);
LABEL_26:
      *((_BYTE *)p_dst + v16.__size_) = 0;
      v20 = __dst;
      v39 = v52;
      HIBYTE(v39) = BYTE3(v52);
      v21 = SHIBYTE(v52);
      if (SHIBYTE(v52) < 0)
      {
        sub_23941A7F8(__p, __dst, (unint64_t)size);
      }
      else
      {
        __p[0] = __dst;
        __p[1] = size;
        *(_DWORD *)v41 = v39;
        *(_DWORD *)&v41[3] = *(_DWORD *)((char *)&v52 + 3);
        v42 = HIBYTE(v52);
      }
      sub_2395ACAA8((uint64_t)__p, (char *)v43);
      sub_2396F2748(&v45, v15, (uint64_t)v43);
      v22 = sub_239A9A10C((uint64_t)v47, v14->__pn_.__r_.__value_.__r.__words[2], &v14->__pn_.__r_.__value_.__r.__words[2]);
      v23 = v22;
      v25 = (void **)(v22 + 3);
      v24 = v22[3];
      if (v24)
      {
        v26 = v22[4];
        v27 = (void *)v22[3];
        if (v26 != v24)
        {
          do
          {
            if (*(char *)(v26 - 1) < 0)
              operator delete(*(void **)(v26 - 24));
            v26 -= 24;
          }
          while (v26 != v24);
          v27 = *v25;
        }
        v23[4] = v24;
        operator delete(v27);
        *v25 = 0;
        v25[1] = 0;
        v25[2] = 0;
      }
      *(_OWORD *)(v23 + 3) = v45;
      v23[5] = v46;
      v46 = 0;
      v45 = 0uLL;
      if (v44 < 0)
      {
        operator delete(v43[0]);
        if (v42 < 0)
          goto LABEL_16;
LABEL_41:
        if ((v21 & 0x80000000) == 0)
          goto LABEL_17;
LABEL_42:
        operator delete(v20);
        v14 = (const std::__fs::filesystem::path *)v14->__pn_.__r_.__value_.__r.__words[0];
        if (!v14)
          break;
      }
      else
      {
        if ((v42 & 0x80000000) == 0)
          goto LABEL_41;
LABEL_16:
        operator delete(__p[0]);
        if (v21 < 0)
          goto LABEL_42;
LABEL_17:
        v14 = (const std::__fs::filesystem::path *)v14->__pn_.__r_.__value_.__r.__words[0];
        if (!v14)
          break;
      }
    }
  }
  if (!*(_BYTE *)(v38 + 1448))
  {
    v29 = v47[0];
    v30 = (unint64_t)v47[1];
    v47[0] = 0;
    v47[1] = 0;
    *(_QWORD *)(v38 + 1408) = v29;
    *(_QWORD *)(v38 + 1416) = v30;
    v31 = *((_QWORD *)&v48 + 1);
    v28 = (_QWORD *)v48;
    *(_QWORD *)(v38 + 1424) = v48;
    *(_QWORD *)(v38 + 1432) = v31;
    *(_DWORD *)(v38 + 1440) = v49;
    if (v31)
    {
      v32 = v28[1];
      if ((v30 & (v30 - 1)) != 0)
      {
        if (v32 >= v30)
          v32 %= v30;
      }
      else
      {
        v32 &= v30 - 1;
      }
      v28 = 0;
      v29[v32] = v38 + 1424;
      v48 = 0uLL;
    }
    *(_BYTE *)(v38 + 1448) = 1;
    if (!v28)
      goto LABEL_53;
    goto LABEL_59;
  }
  sub_239A71290(v38 + 1408, (uint64_t *)v47);
  v28 = (_QWORD *)v48;
  if ((_QWORD)v48)
  {
    do
    {
LABEL_59:
      v35 = (_QWORD *)*v28;
      v36 = v28[3];
      if (v36)
      {
        v37 = v28[4];
        v34 = (void *)v28[3];
        if (v37 != v36)
        {
          do
          {
            if (*(char *)(v37 - 1) < 0)
              operator delete(*(void **)(v37 - 24));
            v37 -= 24;
          }
          while (v37 != v36);
          v34 = (void *)v28[3];
        }
        v28[4] = v36;
        operator delete(v34);
      }
      operator delete(v28);
      v28 = v35;
    }
    while (v35);
  }
LABEL_53:
  v33 = v47[0];
  v47[0] = 0;
  if (v33)
    operator delete(v33);
}

void sub_239B12374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  void *v27;

  operator delete(v27);
  sub_239A8E020((uint64_t)&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_239B123F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD v3[3];

  if (a2)
  {
    v3[0] = sub_239A9C608;
    v3[1] = 0;
    v3[2] = a2;
    return sub_239A9C8F0((uint64_t)v3);
  }
  return result;
}

void sub_239B12424(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  _QWORD *v39;
  void *v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  void *v54[2];
  _QWORD *v55;
  __int128 v56;
  uint64_t v57;
  void *v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  int v62;
  void *__p[2];
  uint64_t v64;
  _QWORD v65[3];
  _QWORD *v66;
  _QWORD v67[3];
  _QWORD *v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 1936);
  if (v5)
  {
LABEL_8:
    v7 = *(_QWORD *)(a1 + 1944);
    if (!v7)
      goto LABEL_11;
    goto LABEL_9;
  }
  if (!*(_BYTE *)(a1 + 4) || !*(_BYTE *)(a1 + 1496))
  {
    v5 = 0;
    goto LABEL_8;
  }
  v5 = *(_QWORD *)(a1 + 1480);
  if (!v5)
    goto LABEL_8;
  sub_239A8DC0C((uint64_t)v54, a1 + 1456);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(&v56, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v56 = *(_OWORD *)(a1 + 8);
    v57 = *(_QWORD *)(a1 + 24);
  }
  v13 = *(_QWORD *)(a1 + 2312);
  v14 = *(std::__shared_weak_count **)(a1 + 2320);
  v49 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    v50 = a3;
    v51 = 0;
    v52 = v13;
    v53 = v14;
    do
      v17 = __ldxr(p_shared_owners);
    while (__stxr(v17 + 1, p_shared_owners));
  }
  else
  {
    v50 = a3;
    v51 = 0;
    v52 = v13;
    v53 = 0;
  }
  v51 = (int)std::thread::hardware_concurrency();
  v18 = operator new(0x1B0uLL);
  v18[1] = 0;
  v18[2] = 0;
  *v18 = &off_250AF83E8;
  sub_239B12A44((uint64_t)&v58, (uint64_t)v54);
  v66 = 0;
  v19 = operator new(0x48uLL);
  v20 = v58;
  v21 = v59;
  v58 = 0;
  v59 = 0;
  *v19 = off_250AF42F8;
  v19[1] = v20;
  v19[2] = v21;
  v23 = v60;
  v22 = v61;
  v19[3] = v60;
  v19[4] = v22;
  *((_DWORD *)v19 + 10) = v62;
  if (v22)
  {
    v24 = v23[1];
    if ((v21 & (v21 - 1)) != 0)
    {
      if (v24 >= v21)
        v24 %= v21;
    }
    else
    {
      v24 &= v21 - 1;
    }
    v20[v24] = v19 + 3;
    v60 = 0;
    v61 = 0;
  }
  *((_OWORD *)v19 + 3) = *(_OWORD *)__p;
  v19[8] = v64;
  __p[1] = 0;
  v64 = 0;
  __p[0] = 0;
  v66 = v19;
  v68 = 0;
  sub_239B07D6C((uint64_t)(v18 + 3), &v50, v65, v67);
  v25 = v68;
  if (v68 == v67)
  {
    v26 = 4;
    v25 = v67;
  }
  else
  {
    if (!v68)
      goto LABEL_36;
    v26 = 5;
  }
  (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_36:
  v27 = v66;
  if (v66 == v65)
  {
    v28 = 4;
    v27 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_41;
    v28 = 5;
  }
  (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_41:
  if (SHIBYTE(v64) < 0)
    operator delete(__p[0]);
  v29 = v60;
  if (v60)
  {
    do
    {
      v42 = (_QWORD *)*v29;
      v43 = v29[3];
      if (v43)
      {
        v44 = v29[4];
        v41 = (void *)v29[3];
        if (v44 != v43)
        {
          do
          {
            if (*(char *)(v44 - 1) < 0)
              operator delete(*(void **)(v44 - 24));
            v44 -= 24;
          }
          while (v44 != v43);
          v41 = (void *)v29[3];
        }
        v29[4] = v43;
        operator delete(v41);
      }
      operator delete(v29);
      v29 = v42;
    }
    while (v42);
  }
  v30 = v58;
  v58 = 0;
  if (v30)
    operator delete(v30);
  *(_QWORD *)(a1 + 1936) = v18 + 3;
  v31 = *(std::__shared_weak_count **)(a1 + 1944);
  *(_QWORD *)(a1 + 1944) = v18;
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = v53;
  if (v53)
  {
    v35 = (unint64_t *)&v53->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  if (v49)
  {
    v37 = (unint64_t *)&v49->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
  }
  if (SHIBYTE(v57) < 0)
    operator delete((void *)v56);
  v39 = v55;
  if (v55)
  {
    do
    {
      v46 = (_QWORD *)*v39;
      v47 = v39[3];
      if (v47)
      {
        v48 = v39[4];
        v45 = (void *)v39[3];
        if (v48 != v47)
        {
          do
          {
            if (*(char *)(v48 - 1) < 0)
              operator delete(*(void **)(v48 - 24));
            v48 -= 24;
          }
          while (v48 != v47);
          v45 = (void *)v39[3];
        }
        v39[4] = v47;
        operator delete(v45);
      }
      operator delete(v39);
      v39 = v46;
    }
    while (v46);
  }
  v40 = v54[0];
  v54[0] = 0;
  if (v40)
    operator delete(v40);
  v5 = *(_QWORD *)(a1 + 1936);
  v7 = *(_QWORD *)(a1 + 1944);
  if (v7)
  {
LABEL_9:
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
LABEL_11:
  v10 = (std::__shared_weak_count *)a2[1];
  *a2 = v5;
  a2[1] = v7;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_239B128A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239A8E020((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B128BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,_QWORD *a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  std::__shared_weak_count *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;

  v38 = *(_QWORD **)(v36 - 96);
  if (v38 == v35)
  {
    v39 = 4;
    v38 = (_QWORD *)(v36 - 120);
  }
  else
  {
    if (!v38)
      goto LABEL_6;
    v39 = 5;
  }
  (*(void (**)(void))(*v38 + 8 * v39))();
LABEL_6:
  v40 = *(_QWORD **)(v36 - 128);
  if (v40 == (_QWORD *)(v36 - 152))
  {
    v41 = 4;
    v40 = (_QWORD *)(v36 - 152);
  }
  else
  {
    if (!v40)
    {
      if ((a34 & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_10;
    }
    v41 = 5;
  }
  (*(void (**)(void))(*v40 + 8 * v41))();
  if ((a34 & 0x80000000) == 0)
  {
LABEL_14:
    v42 = a26;
    if (!a26)
      goto LABEL_15;
    do
    {
LABEL_20:
      v45 = (_QWORD *)*v42;
      v46 = v42[3];
      if (v46)
      {
        v47 = v42[4];
        v44 = (void *)v42[3];
        if (v47 != v46)
        {
          do
          {
            if (*(char *)(v47 - 1) < 0)
              operator delete(*(void **)(v47 - 24));
            v47 -= 24;
          }
          while (v47 != v46);
          v44 = (void *)v42[3];
        }
        v42[4] = v46;
        operator delete(v44);
      }
      operator delete(v42);
      v42 = v45;
    }
    while (v45);
LABEL_15:
    v43 = a24;
    a24 = 0;
    if (v43)
      operator delete(v43);
    std::__shared_weak_count::~__shared_weak_count(v34);
    operator delete(v48);
    sub_239A74534((uint64_t)&a12);
    sub_239416DA0((uint64_t)&a10);
    sub_239A9E4FC((uint64_t)&a16);
    _Unwind_Resume(a1);
  }
LABEL_10:
  operator delete(__p);
  v42 = a26;
  if (!a26)
    goto LABEL_15;
  goto LABEL_20;
}

void sub_239B12A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a15)
  {
    p_shared_owners = (unint64_t *)&a15->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a15->__on_zero_shared)(a15);
      std::__shared_weak_count::__release_weak(a15);
    }
  }
  JUMPOUT(0x239B129E8);
}

uint64_t sub_239B12A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = sub_239A8DC0C(a1, a2) + 40;
  if (*(char *)(a2 + 63) < 0)
  {
    sub_23941A7F8((_BYTE *)v4, *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)v4 = v5;
  }
  return a1;
}

void sub_239B12AA8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)(v1 + 16);
  if (v3)
  {
    do
    {
      v6 = (_QWORD *)*v3;
      v7 = v3[3];
      if (v7)
      {
        v8 = v3[4];
        v5 = (void *)v3[3];
        if (v8 != v7)
        {
          do
          {
            if (*(char *)(v8 - 1) < 0)
              operator delete(*(void **)(v8 - 24));
            v8 -= 24;
          }
          while (v8 != v7);
          v5 = (void *)v3[3];
        }
        v3[4] = v7;
        operator delete(v5);
      }
      operator delete(v3);
      v3 = v6;
    }
    while (v6);
  }
  v4 = *(void **)v1;
  *(_QWORD *)v1 = 0;
  if (v4)
    operator delete(v4);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B12B28(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = off_250AF42F8;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v6 = (_QWORD *)*v2;
    v7 = v2[3];
    if (v7)
    {
      v8 = v2[4];
      v5 = (void *)v2[3];
      if (v8 != v7)
      {
        do
        {
          if (*(char *)(v8 - 1) < 0)
            operator delete(*(void **)(v8 - 24));
          v8 -= 24;
        }
        while (v8 != v7);
        v5 = (void *)v2[3];
      }
      v2[4] = v7;
      operator delete(v5);
    }
    operator delete(v2);
    v2 = v6;
  }
  while (v6);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void sub_239B12BF4(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_250AF42F8;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v5 = (_QWORD *)*v2;
    v6 = v2[3];
    if (v6)
    {
      v7 = v2[4];
      v4 = (void *)v2[3];
      if (v7 != v6)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0)
            operator delete(*(void **)(v7 - 24));
          v7 -= 24;
        }
        while (v7 != v6);
        v4 = (void *)v2[3];
      }
      v2[4] = v6;
      operator delete(v4);
    }
    operator delete(v2);
    v2 = v5;
  }
  while (v5);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B12CD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = a1 + 8;
  v2 = operator new(0x48uLL);
  *v2 = off_250AF42F8;
  sub_239B12A44((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_239B12D10(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B12D24(uint64_t a1, _QWORD *a2)
{
  *a2 = off_250AF42F8;
  return sub_239B12A44((uint64_t)(a2 + 1), a1 + 8);
}

void sub_239B12D40(uint64_t a1)
{
  sub_239AA5734(a1 + 8);
}

void sub_239B12D48(void *a1)
{
  sub_239AA5734((uint64_t)a1 + 8);
  operator delete(a1);
}

void sub_239B12D70(int8x8_t *a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  int8x8_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  unint64_t v22;
  char v23[8];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int16 v29;
  char v30;
  void *v31;
  char v32;

  v4 = a1[2];
  if (!*(_QWORD *)&v4)
    goto LABEL_21;
  v5 = *a2;
  v6 = (uint8x8_t)vcnt_s8(v4);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v7 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v7 = (*(_QWORD *)&v4 - 1) & v5;
  }
  v8 = a1[1];
  v9 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v7);
  if (!v9 || (v10 = (_QWORD *)*v9) == 0)
  {
LABEL_21:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  v11 = *(_QWORD *)&v4 - 1;
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v12 = v10[1];
      if (v12 == v5)
      {
        if (v10[2] == v5)
          goto LABEL_23;
      }
      else if ((v12 & v11) != v7)
      {
        goto LABEL_21;
      }
      v10 = (_QWORD *)*v10;
      if (!v10)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v13 = v10[1];
    if (v13 == v5)
      break;
    if (v13 >= *(_QWORD *)&v4)
      v13 %= *(_QWORD *)&v4;
    if (v13 != v7)
      goto LABEL_21;
LABEL_16:
    v10 = (_QWORD *)*v10;
    if (!v10)
      goto LABEL_21;
  }
  if (v10[2] != v5)
    goto LABEL_16;
LABEL_23:
  if (v6.u32[0] > 1uLL)
  {
    v14 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v14 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v14 = v11 & v5;
  }
  v15 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v14);
  if (!v15 || (v16 = (_QWORD *)*v15) == 0)
LABEL_47:
    sub_23941D898("unordered_map::at: key not found");
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v17 = v16[1];
      if (v17 == v5)
      {
        if (v16[2] == v5)
          goto LABEL_35;
      }
      else if ((v17 & v11) != v14)
      {
        goto LABEL_47;
      }
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_47;
    }
  }
  while (2)
  {
    v22 = v16[1];
    if (v22 != v5)
    {
      if (v22 >= *(_QWORD *)&v4)
        v22 %= *(_QWORD *)&v4;
      if (v22 != v14)
        goto LABEL_47;
      goto LABEL_38;
    }
    if (v16[2] != v5)
    {
LABEL_38:
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_47;
      continue;
    }
    break;
  }
LABEL_35:
  sub_2396F295C(v16 + 3, (uint64_t)&a1[6], (uint64_t)&v31);
  sub_239B0F040((uint64_t)v23);
  if (v30)
  {
    sub_239B0F55C((uint64_t)v23);
    v18 = operator new(0x70uLL);
    v18[1] = 0;
    v18[2] = 0;
    *v18 = &off_250ADB878;
    v18[3] = &off_250ADB628;
    v19 = v24;
    v20 = v25;
    v24 = 0uLL;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    v21 = v27;
    *((_OWORD *)v18 + 4) = v26;
    *((_OWORD *)v18 + 5) = v21;
    v18[12] = v28;
    *((_WORD *)v18 + 52) = v29;
    *a3 = v18 + 3;
    a3[1] = v18;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  sub_239AA557C((uint64_t)v23);
  if (v32 < 0)
    operator delete(v31);
}

void sub_239B12FC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;

  if (*(char *)(v10 - 17) < 0)
    operator delete(*(void **)(v10 - 40));
  _Unwind_Resume(exception_object);
}

void sub_239B12FF0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  const std::__fs::filesystem::path *v14;
  uint64_t *v15;
  std::__fs::filesystem::path::__string_view v16;
  void **p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v18;
  std::basic_string_view<_CharT, _Traits>::size_type v19;
  void **v20;
  int v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void **v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  void *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void *__p[2];
  _BYTE v47[7];
  char v48;
  void *v49[2];
  char v50;
  __int128 v51;
  uint64_t v52;
  void *v53[2];
  __int128 v54;
  int v55;
  void **__dst;
  void *size;
  unint64_t v58;

  v7 = *a2;
  v6 = a2[1];
  if (v6)
  {
    v8 = (unint64_t *)(v6 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a1 + 1936) = v7;
  v10 = *(std::__shared_weak_count **)(a1 + 1944);
  *(_QWORD *)(a1 + 1944) = v6;
  if (!v10)
    goto LABEL_83;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  else
  {
LABEL_83:
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  if (*(_DWORD *)a1 < 2u)
    return;
LABEL_12:
  if (*a2)
  {
    kdebug_trace();
    v13 = *a2;
    if (*(_QWORD *)(*a2 + 200))
    {
      LOBYTE(__dst) = 0;
      v53[0] = sub_239B0FBE8;
      v53[1] = 0;
      *(_QWORD *)&v54 = v13;
      sub_239B0FF04((uint64_t)v53, (uint64_t)&__dst);
    }
    v44 = a1;
    kdebug_trace();
    *(_OWORD *)v53 = 0u;
    v54 = 0u;
    v55 = 1065353216;
    v14 = *(const std::__fs::filesystem::path **)(a3 + 16);
    if (v14)
    {
      v15 = (uint64_t *)(a1 + 608);
      while (1)
      {
        v16 = std::__fs::filesystem::path::__filename(v14 + 1);
        if (v16.__size_ >= 0x7FFFFFFFFFFFFFF8)
          sub_23941A5AC();
        if (v16.__size_ >= 0x17)
        {
          v18 = (v16.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v16.__size_ | 7) != 0x17)
            v18 = v16.__size_ | 7;
          v19 = v18 + 1;
          p_dst = (void **)operator new(v18 + 1);
          size = (void *)v16.__size_;
          v58 = v19 | 0x8000000000000000;
          __dst = p_dst;
        }
        else
        {
          HIBYTE(v58) = v16.__size_;
          p_dst = (void **)&__dst;
          if (!v16.__size_)
            goto LABEL_27;
        }
        memmove(p_dst, v16.__data_, v16.__size_);
LABEL_27:
        *((_BYTE *)p_dst + v16.__size_) = 0;
        v20 = __dst;
        v45 = v58;
        HIBYTE(v45) = BYTE3(v58);
        v21 = SHIBYTE(v58);
        if (SHIBYTE(v58) < 0)
        {
          sub_23941A7F8(__p, __dst, (unint64_t)size);
        }
        else
        {
          __p[0] = __dst;
          __p[1] = size;
          *(_DWORD *)v47 = v45;
          *(_DWORD *)&v47[3] = *(_DWORD *)((char *)&v58 + 3);
          v48 = HIBYTE(v58);
        }
        sub_2395ACAA8((uint64_t)__p, (char *)v49);
        sub_2396F2748(&v51, v15, (uint64_t)v49);
        v22 = sub_239A9A10C((uint64_t)v53, v14->__pn_.__r_.__value_.__r.__words[2], &v14->__pn_.__r_.__value_.__r.__words[2]);
        v23 = v22;
        v25 = (void **)(v22 + 3);
        v24 = v22[3];
        if (v24)
        {
          v26 = v22[4];
          v27 = (void *)v22[3];
          if (v26 != v24)
          {
            do
            {
              if (*(char *)(v26 - 1) < 0)
                operator delete(*(void **)(v26 - 24));
              v26 -= 24;
            }
            while (v26 != v24);
            v27 = *v25;
          }
          v23[4] = v24;
          operator delete(v27);
          *v25 = 0;
          v25[1] = 0;
          v25[2] = 0;
        }
        *(_OWORD *)(v23 + 3) = v51;
        v23[5] = v52;
        v52 = 0;
        v51 = 0uLL;
        if (v50 < 0)
        {
          operator delete(v49[0]);
          if (v48 < 0)
            goto LABEL_17;
LABEL_42:
          if ((v21 & 0x80000000) == 0)
            goto LABEL_18;
LABEL_43:
          operator delete(v20);
          v14 = (const std::__fs::filesystem::path *)v14->__pn_.__r_.__value_.__r.__words[0];
          if (!v14)
            break;
        }
        else
        {
          if ((v48 & 0x80000000) == 0)
            goto LABEL_42;
LABEL_17:
          operator delete(__p[0]);
          if (v21 < 0)
            goto LABEL_43;
LABEL_18:
          v14 = (const std::__fs::filesystem::path *)v14->__pn_.__r_.__value_.__r.__words[0];
          if (!v14)
            break;
        }
      }
    }
    if (*(_BYTE *)(v44 + 1496))
    {
      sub_239A71290(v44 + 1456, (uint64_t *)v53);
      v28 = (_QWORD *)v54;
      if (!(_QWORD)v54)
      {
LABEL_68:
        v39 = v53[0];
        v53[0] = 0;
        if (v39)
          operator delete(v39);
        return;
      }
    }
    else
    {
      v35 = v53[0];
      v36 = (unint64_t)v53[1];
      v53[0] = 0;
      v53[1] = 0;
      *(_QWORD *)(v44 + 1456) = v35;
      *(_QWORD *)(v44 + 1464) = v36;
      v37 = *((_QWORD *)&v54 + 1);
      v28 = (_QWORD *)v54;
      *(_QWORD *)(v44 + 1472) = v54;
      *(_QWORD *)(v44 + 1480) = v37;
      *(_DWORD *)(v44 + 1488) = v55;
      if (v37)
      {
        v38 = v28[1];
        if ((v36 & (v36 - 1)) != 0)
        {
          if (v38 >= v36)
            v38 %= v36;
        }
        else
        {
          v38 &= v36 - 1;
        }
        v28 = 0;
        v35[v38] = v44 + 1472;
        v54 = 0uLL;
      }
      *(_BYTE *)(v44 + 1496) = 1;
      if (!v28)
        goto LABEL_68;
    }
    do
    {
      v41 = (_QWORD *)*v28;
      v42 = v28[3];
      if (v42)
      {
        v43 = v28[4];
        v40 = (void *)v28[3];
        if (v43 != v42)
        {
          do
          {
            if (*(char *)(v43 - 1) < 0)
              operator delete(*(void **)(v43 - 24));
            v43 -= 24;
          }
          while (v43 != v42);
          v40 = (void *)v28[3];
        }
        v28[4] = v42;
        operator delete(v40);
      }
      operator delete(v28);
      v28 = v41;
    }
    while (v41);
    goto LABEL_68;
  }
  if (*(_BYTE *)(a1 + 1496))
  {
    v29 = *(_QWORD **)(a1 + 1472);
    if (v29)
    {
      do
      {
        v32 = (_QWORD *)*v29;
        v33 = v29[3];
        if (v33)
        {
          v34 = v29[4];
          v31 = (void *)v29[3];
          if (v34 != v33)
          {
            do
            {
              if (*(char *)(v34 - 1) < 0)
                operator delete(*(void **)(v34 - 24));
              v34 -= 24;
            }
            while (v34 != v33);
            v31 = (void *)v29[3];
          }
          v29[4] = v33;
          operator delete(v31);
        }
        operator delete(v29);
        v29 = v32;
      }
      while (v32);
    }
    v30 = *(void **)(a1 + 1456);
    *(_QWORD *)(a1 + 1456) = 0;
    if (v30)
      operator delete(v30);
    *(_BYTE *)(a1 + 1496) = 0;
  }
}

void sub_239B134A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  void *v27;

  operator delete(v27);
  sub_239A8E020((uint64_t)&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_239B1351C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD v3[3];

  if (a2)
  {
    v3[0] = sub_239B101B8;
    v3[1] = 0;
    v3[2] = a2;
    return sub_239B104A0((uint64_t)v3);
  }
  return result;
}

uint64_t sub_239B13550(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  std::ios_base *v14;
  int v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::string::size_type size;
  char v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  std::__fs::filesystem::path v33;
  const void *v34[3];
  void *v35[3];
  uint64_t v36[2];
  _QWORD v37[11];
  char v38;
  uint64_t v39;
  void *v40[2];
  unsigned __int8 v41;
  char v42;
  std::string v43;
  _QWORD v44[2];
  _BYTE v45[408];
  _QWORD v46[21];

  v46[19] = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 1952);
  if (v4)
  {
LABEL_9:
    v16 = *(_QWORD *)(a1 + 1960);
    if (!v16)
      goto LABEL_12;
LABEL_10:
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    goto LABEL_12;
  }
  if (!*(_BYTE *)(a1 + 4) || !*(_BYTE *)(a1 + 1528))
  {
    v4 = 0;
    goto LABEL_9;
  }
  sub_2396F295C((uint64_t *)(a1 + 1504), a1 + 8, (uint64_t)&v33);
  std::__fs::filesystem::__status(&v33, 0);
  LODWORD(v5) = 1;
  if (LOBYTE(v44[0]) && LOBYTE(v44[0]) != 255)
  {
    kdebug_trace();
    v6 = (std::__shared_weak_count *)operator new(0xB0uLL);
    v6->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&off_250B020F8;
    v6[1].__vftable = 0;
    v8 = (uint64_t)&v6[1];
    LOBYTE(v6[3].__vftable) = 0;
    LOBYTE(v6[3].__shared_owners_) = 0;
    LOBYTE(v6[4].__shared_owners_) = 0;
    LOBYTE(v6[4].__shared_weak_owners_) = 0;
    LOBYTE(v6[5].__shared_weak_owners_) = 0;
    LOBYTE(v6[6].__vftable) = 0;
    LOBYTE(v6[7].__vftable) = 0;
    v6[1].__shared_owners_ = 0;
    v6[1].__shared_weak_owners_ = 0;
    LOBYTE(v6[2].__vftable) = 0;
    v9 = MEMORY[0x24BEDB838];
    v10 = MEMORY[0x24BEDB838] + 64;
    v11 = (_QWORD *)MEMORY[0x24BEDB7E0];
    v12 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
    v13 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
    v46[0] = MEMORY[0x24BEDB838] + 64;
    v44[0] = v12;
    *(_QWORD *)((char *)v44 + *(_QWORD *)(v12 - 24)) = v13;
    v44[1] = 0;
    v14 = (std::ios_base *)((char *)v44 + *(_QWORD *)(v44[0] - 24));
    std::ios_base::init(v14, v45);
    v14[1].__vftable = 0;
    v14[1].__fmtflags_ = -1;
    v44[0] = v9 + 24;
    v46[0] = v10;
    MEMORY[0x23B83DC80](v45);
    std::ifstream::open();
    if ((v45[*(_QWORD *)(v44[0] - 24) + 16] & 5) != 0)
    {
      v15 = 0;
    }
    else
    {
      HIBYTE(v34[2]) = 18;
      strcpy((char *)v34, "CorePhotogrammetry");
      sub_2395AC84C(v34, v35);
      sub_239A7D600(&v43, *(_QWORD **)&v45[*(_QWORD *)(v44[0] - 24) + 24]);
      size = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      v24 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = v43.__r_.__value_.__l.__size_;
      if (size)
      {
        sub_2395AC2E8((const void **)&v43.__r_.__value_.__l.__data_, (uint64_t)v35, (uint64_t)v40);
        if (v42)
        {
          sub_2394988CC((uint64_t)v36);
          if ((v41 & 0x80u) == 0)
            v25 = v40;
          else
            v25 = (void **)v40[0];
          if ((v41 & 0x80u) == 0)
            v26 = v41;
          else
            v26 = (uint64_t)v40[1];
          sub_239458500(v37, (uint64_t)v25, v26);
          v15 = sub_2395B3924(v36, v8, 0);
          v36[0] = *MEMORY[0x24BEDB7F0];
          v27 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          *(uint64_t *)((char *)v36 + *(_QWORD *)(v36[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          v37[0] = v27;
          v37[1] = MEMORY[0x24BEDB848] + 16;
          if (v38 < 0)
            operator delete((void *)v37[9]);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          MEMORY[0x23B83E250](&v39);
          if (v42 && (char)v41 < 0)
            operator delete(v40[0]);
        }
        else
        {
          v15 = 0;
        }
        v24 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      }
      else
      {
        v15 = 0;
      }
      if (v24 < 0)
        operator delete(v43.__r_.__value_.__l.__data_);
      if (v35[0])
      {
        v35[1] = v35[0];
        operator delete(v35[0]);
      }
      if (SHIBYTE(v34[2]) < 0)
        operator delete((void *)v34[0]);
      if (!std::filebuf::close())
        std::ios_base::clear((std::ios_base *)((char *)v44 + *(_QWORD *)(v44[0] - 24)), *(_DWORD *)&v45[*(_QWORD *)(v44[0] - 24) + 16] | 4);
    }
    v44[0] = *v11;
    *(_QWORD *)((char *)v44 + *(_QWORD *)(v44[0] - 24)) = v11[3];
    MEMORY[0x23B83DC8C](v45);
    std::istream::~istream();
    MEMORY[0x23B83E250](v46);
    kdebug_trace();
    if (v15)
    {
      do
        v28 = __ldxr(p_shared_owners);
      while (__stxr(v28 + 1, p_shared_owners));
      *(_QWORD *)(a1 + 1952) = v8;
      v5 = *(std::__shared_weak_count **)(a1 + 1960);
      *(_QWORD *)(a1 + 1960) = v6;
      if (v5)
      {
        v29 = (unint64_t *)&v5->__shared_owners_;
        do
          v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        LODWORD(v5) = 0;
      }
    }
    else
    {
      LODWORD(v5) = 1;
    }
    if (v6)
    {
      v31 = (unint64_t *)&v6->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
  if (SHIBYTE(v33.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v33.__pn_.__r_.__value_.__l.__data_);
    if ((_DWORD)v5)
      return 0;
  }
  else if ((_DWORD)v5)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 1952);
  v16 = *(_QWORD *)(a1 + 1960);
  if (v16)
    goto LABEL_10;
LABEL_12:
  v19 = (std::__shared_weak_count *)a2[1];
  *a2 = v4;
  a2[1] = v16;
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  return 1;
}

void sub_239B13A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *__p,uint64_t a63)
{
  char a67;
  char a68;
  void *a69;
  char a72;
  uint64_t a73;
  void *v74;

  if (a68 && a67 < 0)
    operator delete(__p);
  if (a72 < 0)
  {
    operator delete(a69);
    v74 = a24;
    if (a24)
    {
LABEL_10:
      a25 = (uint64_t)v74;
      operator delete(v74);
      if ((a23 & 0x80000000) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
  }
  else
  {
    v74 = a24;
    if (a24)
      goto LABEL_10;
  }
  if ((a23 & 0x80000000) == 0)
  {
LABEL_12:
    sub_23955CB90(&a73);
    sub_239A4D7C0((uint64_t)&a10);
    if (a17 < 0)
    {
      operator delete(a12);
      _Unwind_Resume(a1);
    }
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a18);
  goto LABEL_12;
}

void sub_239B13B74(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250B020F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B13B84(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250B020F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B13BB4(uint64_t a1)
{
  return sub_2394B6764(a1 + 24);
}

uint64_t sub_239B13BC0(uint64_t a1, uint64_t **a2)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  _BOOL8 v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  std::ios_base *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  std::ios_base *v24;
  uint64_t v25;
  void **v26;
  void *v27;
  void **v28;
  std::string *v29;
  std::string *v30;
  void *v31;
  void *v33;
  char v34;
  void *v35;
  std::string *v36;
  uint64_t v37;
  const void *v38[3];
  void *v39[3];
  void *__p;
  char v41;
  void *v42[2];
  unsigned __int8 v43;
  char v44;
  uint64_t v45;
  uint64_t v46[8];
  __int128 v47;
  __int128 v48;
  int v49;
  uint64_t v50[19];
  uint64_t v51;
  _BYTE v52[408];
  _QWORD v53[22];

  v53[19] = *MEMORY[0x24BDAC8D0];
  v5 = *a2;
  v4 = a2[1];
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 1);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  *(_QWORD *)(a1 + 1952) = v5;
  v8 = *(std::__shared_weak_count **)(a1 + 1960);
  *(_QWORD *)(a1 + 1960) = v4;
  if (!v8)
    goto LABEL_55;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  else
  {
LABEL_55:
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  if (*(_DWORD *)a1 < 2u)
    return 1;
LABEL_12:
  v35 = 0;
  v36 = 0;
  v37 = 0;
  sub_239490944((char *)&v35, *(_QWORD *)(a1 + 632), *(_QWORD *)(a1 + 640), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 640) - *(_QWORD *)(a1 + 632)) >> 3));
  sub_2396F295C((uint64_t *)&v35, a1 + 8, (uint64_t)&v33);
  kdebug_trace();
  v12 = *a2;
  v13 = MEMORY[0x24BEDB840];
  v14 = MEMORY[0x24BEDB840] + 64;
  v15 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v16 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v17 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v53[0] = MEMORY[0x24BEDB840] + 64;
  v51 = v16;
  *(_QWORD *)&v52[*(_QWORD *)(v16 - 24) - 8] = v17;
  v18 = (std::ios_base *)&v52[*(_QWORD *)(v51 - 24) - 8];
  std::ios_base::init(v18, v52);
  v18[1].__vftable = 0;
  v18[1].__fmtflags_ = -1;
  v51 = v13 + 24;
  v53[0] = v14;
  MEMORY[0x23B83DC80](v52);
  std::ofstream::open();
  if ((v52[*(_QWORD *)(v51 - 24) + 24] & 5) != 0)
  {
    v11 = 0;
  }
  else
  {
    HIBYTE(v38[2]) = 18;
    strcpy((char *)v38, "CorePhotogrammetry");
    sub_2395AC84C(v38, v39);
    v19 = MEMORY[0x24BEDB870];
    v20 = MEMORY[0x24BEDB870] + 64;
    v21 = (uint64_t *)MEMORY[0x24BEDB800];
    v22 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
    v23 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
    v50[0] = MEMORY[0x24BEDB870] + 64;
    v45 = v22;
    *(uint64_t *)((char *)&v46[-1] + *(_QWORD *)(v22 - 24)) = v23;
    v24 = (std::ios_base *)((char *)&v46[-1] + *(_QWORD *)(v45 - 24));
    std::ios_base::init(v24, v46);
    v24[1].__vftable = 0;
    v24[1].__fmtflags_ = -1;
    v45 = v19 + 24;
    v50[0] = v20;
    std::streambuf::basic_streambuf();
    v25 = MEMORY[0x24BEDB848];
    v46[0] = MEMORY[0x24BEDB848] + 16;
    v47 = 0u;
    v48 = 0u;
    v49 = 16;
    if ((sub_2395B2E60(v12, &v45, 0x1Fu) & 1) != 0)
    {
      std::stringbuf::str();
      sub_2395ABE70((const void **)&__p, (uint64_t)v39, (uint64_t)v42);
      if (v41 < 0)
        operator delete(__p);
      v11 = v44 != 0;
      if (v44)
      {
        v26 = (v43 & 0x80u) == 0 ? v42 : (void **)v42[0];
        v27 = (v43 & 0x80u) == 0 ? (void *)v43 : v42[1];
        sub_239458500(&v51, (uint64_t)v26, (uint64_t)v27);
        if (v44)
        {
          if ((char)v43 < 0)
            operator delete(v42[0]);
        }
      }
    }
    else
    {
      v11 = 0;
    }
    v45 = *v21;
    *(uint64_t *)((char *)&v46[-1] + *(_QWORD *)(v45 - 24)) = v21[3];
    v46[0] = v25 + 16;
    if (SBYTE7(v48) < 0)
      operator delete((void *)v47);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x23B83E250](v50);
    if (v39[0])
    {
      v39[1] = v39[0];
      operator delete(v39[0]);
    }
    if (SHIBYTE(v38[2]) < 0)
      operator delete((void *)v38[0]);
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)&v52[*(_QWORD *)(v51 - 24) - 8], *(_DWORD *)&v52[*(_QWORD *)(v51 - 24) + 24] | 4);
  }
  v51 = *v15;
  *(_QWORD *)&v52[*(_QWORD *)(v51 - 24) - 8] = v15[3];
  MEMORY[0x23B83DC8C](v52);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v53);
  kdebug_trace();
  if (!v11)
  {
LABEL_40:
    if ((v34 & 0x80000000) == 0)
      goto LABEL_42;
    goto LABEL_41;
  }
  v28 = (void **)(a1 + 1504);
  if (*(_BYTE *)(a1 + 1528))
  {
    if (v28 != &v35)
      sub_239A70694((uint64_t)v28, (std::string *)v35, v36, 0xAAAAAAAAAAAAAAABLL * (((char *)v36 - (_BYTE *)v35) >> 3));
    goto LABEL_40;
  }
  *v28 = 0;
  *(_QWORD *)(a1 + 1512) = 0;
  *(_QWORD *)(a1 + 1520) = 0;
  sub_239490944((char *)v28, (uint64_t)v35, (uint64_t)v36, 0xAAAAAAAAAAAAAAABLL * (((char *)v36 - (_BYTE *)v35) >> 3));
  *(_BYTE *)(a1 + 1528) = 1;
  if (v34 < 0)
LABEL_41:
    operator delete(v33);
LABEL_42:
  v29 = (std::string *)v35;
  if (v35)
  {
    v30 = v36;
    v31 = v35;
    if (v36 != v35)
    {
      do
      {
        if (SHIBYTE(v30[-1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v30[-1].__r_.__value_.__l.__data_);
        --v30;
      }
      while (v30 != v29);
      v31 = v35;
    }
    v36 = v29;
    operator delete(v31);
  }
  return v11;
}

void sub_239B140D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38,int a39,__int16 a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a72;

  if (a38 && a37 < 0)
    operator delete(__p);
  sub_239A90B68((uint64_t)&a40);
  if (a26)
  {
    a27 = (uint64_t)a26;
    operator delete(a26);
  }
  if (a25 < 0)
    operator delete(a20);
  sub_23955C978(&a72);
  if (a16 < 0)
    operator delete(a11);
  sub_23941A260(&a17);
  _Unwind_Resume(a1);
}

void sub_239B141EC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 1960);
  *(_QWORD *)(a1 + 1952) = 0;
  *(_QWORD *)(a1 + 1960) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_239B1424C(uint64_t a1, uint64_t **a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  std::ios_base *v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  std::ios_base *v17;
  uint64_t v18;
  void **v19;
  void *v20;
  void **v21;
  void **v22;
  void *v23;
  void *v25;
  char v26;
  void *v27;
  void **v28;
  uint64_t v29;
  const void *v30[3];
  void *v31[3];
  void *__p;
  char v33;
  void *v34[2];
  unsigned __int8 v35;
  char v36;
  uint64_t v37;
  uint64_t v38[8];
  __int128 v39;
  __int128 v40;
  int v41;
  uint64_t v42[19];
  uint64_t v43;
  _BYTE v44[408];
  _QWORD v45[22];

  v45[19] = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(a1 + 4) && !*(_DWORD *)a1)
    return 1;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  sub_239490944((char *)&v27, *(_QWORD *)(a1 + 680), *(_QWORD *)(a1 + 688), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 688) - *(_QWORD *)(a1 + 680)) >> 3));
  sub_2396F295C((uint64_t *)&v27, a1 + 8, (uint64_t)&v25);
  kdebug_trace();
  v4 = *a2;
  v5 = MEMORY[0x24BEDB840];
  v6 = MEMORY[0x24BEDB840] + 64;
  v7 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v8 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v9 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v45[0] = MEMORY[0x24BEDB840] + 64;
  v43 = v8;
  *(_QWORD *)&v44[*(_QWORD *)(v8 - 24) - 8] = v9;
  v10 = (std::ios_base *)&v44[*(_QWORD *)(v43 - 24) - 8];
  std::ios_base::init(v10, v44);
  v10[1].__vftable = 0;
  v10[1].__fmtflags_ = -1;
  v43 = v5 + 24;
  v45[0] = v6;
  MEMORY[0x23B83DC80](v44);
  std::ofstream::open();
  if ((v44[*(_QWORD *)(v43 - 24) + 24] & 5) != 0)
  {
    v11 = 0;
  }
  else
  {
    HIBYTE(v30[2]) = 18;
    strcpy((char *)v30, "CorePhotogrammetry");
    sub_2395AC84C(v30, v31);
    v12 = MEMORY[0x24BEDB870];
    v13 = MEMORY[0x24BEDB870] + 64;
    v14 = (uint64_t *)MEMORY[0x24BEDB800];
    v15 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
    v16 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
    v42[0] = MEMORY[0x24BEDB870] + 64;
    v37 = v15;
    *(uint64_t *)((char *)&v38[-1] + *(_QWORD *)(v15 - 24)) = v16;
    v17 = (std::ios_base *)((char *)&v38[-1] + *(_QWORD *)(v37 - 24));
    std::ios_base::init(v17, v38);
    v17[1].__vftable = 0;
    v17[1].__fmtflags_ = -1;
    v37 = v12 + 24;
    v42[0] = v13;
    std::streambuf::basic_streambuf();
    v18 = MEMORY[0x24BEDB848];
    v38[0] = MEMORY[0x24BEDB848] + 16;
    v39 = 0u;
    v40 = 0u;
    v41 = 16;
    if ((sub_2395B2E60(v4, &v37, 0x1Fu) & 1) != 0)
    {
      std::stringbuf::str();
      sub_2395ABE70((const void **)&__p, (uint64_t)v31, (uint64_t)v34);
      if (v33 < 0)
        operator delete(__p);
      v11 = v36 != 0;
      if (v36)
      {
        v19 = (v35 & 0x80u) == 0 ? v34 : (void **)v34[0];
        v20 = (v35 & 0x80u) == 0 ? (void *)v35 : v34[1];
        sub_239458500(&v43, (uint64_t)v19, (uint64_t)v20);
        if (v36)
        {
          if ((char)v35 < 0)
            operator delete(v34[0]);
        }
      }
    }
    else
    {
      v11 = 0;
    }
    v37 = *v14;
    *(uint64_t *)((char *)&v38[-1] + *(_QWORD *)(v37 - 24)) = v14[3];
    v38[0] = v18 + 16;
    if (SBYTE7(v40) < 0)
      operator delete((void *)v39);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x23B83E250](v42);
    if (v31[0])
    {
      v31[1] = v31[0];
      operator delete(v31[0]);
    }
    if (SHIBYTE(v30[2]) < 0)
      operator delete((void *)v30[0]);
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)&v44[*(_QWORD *)(v43 - 24) - 8], *(_DWORD *)&v44[*(_QWORD *)(v43 - 24) + 24] | 4);
  }
  v43 = *v7;
  *(_QWORD *)&v44[*(_QWORD *)(v43 - 24) - 8] = v7[3];
  MEMORY[0x23B83DC8C](v44);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v45);
  kdebug_trace();
  if (v26 < 0)
    operator delete(v25);
  v21 = (void **)v27;
  if (v27)
  {
    v22 = v28;
    v23 = v27;
    if (v28 != v27)
    {
      do
      {
        if (*((char *)v22 - 1) < 0)
          operator delete(*(v22 - 3));
        v22 -= 3;
      }
      while (v22 != v21);
      v23 = v27;
    }
    v28 = v21;
    operator delete(v23);
  }
  return v11;
}

void sub_239B14680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,int a37,__int16 a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;

  if (a36 && a35 < 0)
    operator delete(__p);
  sub_239A90B68((uint64_t)&a38);
  if (a24)
  {
    a25 = (uint64_t)a24;
    operator delete(a24);
  }
  if (a23 < 0)
    operator delete(a18);
  sub_23955C978(&a71);
  if (a14 < 0)
    operator delete(a9);
  sub_23941A260(&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_239B14794(std::string *a1, uint64_t **a2)
{
  uint64_t v4;
  std::string *v5;
  std::string *v6;
  void **p_data;
  std::string *v8;
  std::string *v9;
  void *v10;
  std::string __p;
  void *v13;
  std::string *v14;
  uint64_t v15;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_239490944((char *)&v13, a1[27].__r_.__value_.__l.__size_, a1[27].__r_.__value_.__r.__words[2], 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[27].__r_.__value_.__r.__words[2] - a1[27].__r_.__value_.__l.__size_) >> 3));
  sub_2396F295C((uint64_t *)&v13, (uint64_t)&a1->__r_.__value_.__l.__size_, (uint64_t)&__p);
  kdebug_trace();
  v4 = sub_2395B2D40(*a2, (uint64_t)&__p, 6u);
  kdebug_trace();
  if ((v4 & 1) == 0)
    goto LABEL_17;
  v5 = a1 + 82;
  if (a1[83].__r_.__value_.__s.__data_[0])
  {
    std::string::operator=(v5, &__p);
  }
  else
  {
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_23941A7F8(v5, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)&v5->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      a1[82].__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    }
    a1[83].__r_.__value_.__s.__data_[0] = 1;
  }
  v6 = a1 + 91;
  if (a1[92].__r_.__value_.__s.__data_[0])
  {
    std::string::operator=(v6, &__p);
  }
  else
  {
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_23941A7F8(v6, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      a1[91].__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    }
    a1[92].__r_.__value_.__s.__data_[0] = 1;
  }
  p_data = (void **)&a1[64].__r_.__value_.__l.__data_;
  if (a1[65].__r_.__value_.__s.__data_[0])
  {
    if (p_data != &v13)
      sub_239A70694((uint64_t)p_data, (std::string *)v13, v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 3));
LABEL_17:
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_19;
    goto LABEL_18;
  }
  *p_data = 0;
  a1[64].__r_.__value_.__l.__size_ = 0;
  a1[64].__r_.__value_.__r.__words[2] = 0;
  sub_239490944((char *)p_data, (uint64_t)v13, (uint64_t)v14, 0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (_BYTE *)v13) >> 3));
  a1[65].__r_.__value_.__s.__data_[0] = 1;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
LABEL_18:
    operator delete(__p.__r_.__value_.__l.__data_);
LABEL_19:
  v8 = (std::string *)v13;
  if (v13)
  {
    v9 = v14;
    v10 = v13;
    if (v14 != v13)
    {
      do
      {
        if (SHIBYTE(v9[-1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v9[-1].__r_.__value_.__l.__data_);
        --v9;
      }
      while (v9 != v8);
      v10 = v13;
    }
    v14 = v8;
    operator delete(v10);
  }
  return v4;
}

void sub_239B149A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15)
{
  sub_23941A260(&a15);
  _Unwind_Resume(a1);
}

void sub_239B149D4(char *__dst, uint64_t a2)
{
  std::string *v4;
  _BYTE *v5;
  std::string *v6;
  int v7;
  std::string __p;

  v4 = (std::string *)(a2 + 1968);
  if (!*(_BYTE *)(a2 + 1992))
  {
    if (!*(_BYTE *)(a2 + 4) || !*(_BYTE *)(a2 + 1560))
    {
      *__dst = 0;
      __dst[24] = 0;
      return;
    }
    sub_2396F295C((uint64_t *)(a2 + 1536), a2 + 8, (uint64_t)&__p);
    std::__fs::filesystem::__status((const std::__fs::filesystem::path *)&__p, 0);
    if (*(_BYTE *)(a2 + 1992))
    {
      std::string::operator=(v4, &__p);
    }
    else
    {
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        sub_23941A7F8(v4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      else
        *v4 = __p;
      *(_BYTE *)(a2 + 1992) = 1;
    }
    v6 = (std::string *)(a2 + 2184);
    if (*(_BYTE *)(a2 + 2208))
    {
      std::string::operator=(v6, &__p);
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_18;
    }
    else
    {
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_23941A7F8(v6, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      }
      else
      {
        *(_OWORD *)&v6->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *(_QWORD *)(a2 + 2200) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
      }
      *(_BYTE *)(a2 + 2208) = 1;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_18:
        v7 = *(unsigned __int8 *)(a2 + 1992);
        *__dst = 0;
        __dst[24] = 0;
        v5 = __dst + 24;
        if (!v7)
          return;
        goto LABEL_3;
      }
    }
    operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_18;
  }
  *__dst = 0;
  __dst[24] = 0;
  v5 = __dst + 24;
LABEL_3:
  if (*(char *)(a2 + 1991) < 0)
  {
    sub_23941A7F8(__dst, *(void **)(a2 + 1968), *(_QWORD *)(a2 + 1976));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    *((_QWORD *)__dst + 2) = *((_QWORD *)&v4->__r_.__value_.__l + 2);
  }
  *v5 = 1;
}

void sub_239B14B48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (*(_BYTE *)(v14 + 24))
  {
    if (*(char *)(v14 + 23) < 0)
      operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

void sub_239B14B80(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  _BYTE *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t (***v19)();
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (**v29)();
  _QWORD *v30;
  __n128 v31;
  _QWORD *v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  char *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  char *v52;
  std::__shared_weak_count *v53;
  _BYTE v54[24];
  _BYTE *v55;
  __int128 v56;
  __int128 *v57;
  _BYTE v58[200];
  uint64_t v59;
  unsigned int *v60;
  pthread_rwlock_t v61;
  _QWORD v62[3];
  _QWORD *v63;
  uint64_t (**v64)();
  _QWORD v65[2];
  uint64_t (***v66)();
  _QWORD *v67;
  uint64_t (*v68)(uint64_t, _QWORD *);
  uint64_t (**v69)();
  _BYTE *v70;
  std::__shared_weak_count *v71;
  uint64_t v72;
  uint64_t (**v73)();
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t (**v78)();
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v85 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 2032);
  if (!v4)
  {
    if (*(_BYTE *)(a1 + 4) && *(_BYTE *)(a1 + 1608))
    {
      kdebug_trace();
      v62[0] = &off_250AF4340;
      v63 = v62;
      v5 = (char *)operator new(0x40uLL);
      *((_QWORD *)v5 + 1) = 0;
      *((_QWORD *)v5 + 2) = 0;
      *(_QWORD *)v5 = &off_250AF96A8;
      *(_OWORD *)(v5 + 40) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *((_DWORD *)v5 + 14) = 1065353216;
      v52 = v5 + 24;
      v53 = (std::__shared_weak_count *)v5;
      sub_2397A1588(&v61);
      v6 = *(_BYTE **)(a1 + 2312);
      v7 = *(std::__shared_weak_count **)(a1 + 2320);
      v51 = v7;
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        v69 = 0;
        v68 = 0;
        v70 = v6;
        v71 = v7;
        do
          v10 = __ldxr(p_shared_owners);
        while (__stxr(v10 + 1, p_shared_owners));
      }
      else
      {
        v69 = 0;
        v68 = 0;
        v70 = v6;
        v71 = 0;
      }
      v69 = (uint64_t (**)())(int)std::thread::hardware_concurrency();
      v64 = &off_250AF4388;
      v65[0] = a1 + 1568;
      v65[1] = a1 + 8;
      v66 = &v64;
      *(_QWORD *)&v56 = &off_250AF43D0;
      v57 = &v56;
      sub_239B152CC((uint64_t)v58, (uint64_t *)&v68, &v64, &v56);
      v17 = v57;
      if (v57 == &v56)
      {
        v18 = 4;
        v17 = &v56;
      }
      else
      {
        if (!v57)
          goto LABEL_26;
        v18 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_26:
      v19 = v66;
      if (v66 == &v64)
      {
        v20 = 4;
        v19 = &v64;
      }
      else
      {
        if (!v66)
        {
LABEL_31:
          v21 = v71;
          if (v71)
          {
            v22 = (unint64_t *)&v71->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
              std::__shared_weak_count::__release_weak(v21);
            }
          }
          if (v51)
          {
            v24 = (unint64_t *)&v51->__shared_owners_;
            do
              v25 = __ldaxr(v24);
            while (__stlxr(v25 - 1, v24));
            if (!v25)
            {
              ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
              std::__shared_weak_count::__release_weak(v51);
            }
          }
          v26 = *(_QWORD **)(a1 + 1584);
          if (v26)
          {
            while (1)
            {
              v29 = (uint64_t (**)())v26[2];
              v55 = 0;
              v30 = operator new(0x20uLL);
              *v30 = &off_250AF4808;
              v30[1] = &v52;
              v30[2] = v29;
              v30[3] = &v61;
              v55 = v30;
              if (!v60)
              {
                sub_239A444D4((uint64_t)"unknown file", 308, (uint64_t)"", (void (*)(void *))sub_239A4463C);
                sub_239A4475C();
                abort();
              }
              v64 = v29;
              v31 = sub_239B171A8((uint64_t)v30);
              v67 = v32;
              LODWORD(v68) = 0;
              v69 = v29;
              v33 = (*(uint64_t (**)(_QWORD *, __n128))(*v32 + 16))(v32, v31);
              v74 = 0;
              v75 = 0;
              v76 = 0;
              v79 = 0;
              v80 = 0;
              v82 = 0;
              v83 = 0;
              v84 = 0;
              v72 = v33;
              v69 = v64;
              v77 = 0;
              v73 = v64;
              v81 = 0;
              v78 = v64;
              v34 = (std::__shared_weak_count *)operator new(0x120uLL);
              v34->__shared_owners_ = 0;
              v35 = (unint64_t *)&v34->__shared_owners_;
              v34->__shared_weak_owners_ = 0;
              v34->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF4548;
              *(_QWORD *)&v56 = sub_239B16764((uint64_t)&v34[1], (uint64_t)&v68);
              *((_QWORD *)&v56 + 1) = v34;
              sub_239A82E8C(&v68);
              v36 = v67;
              if (v67 == v65)
                break;
              if (v67)
              {
                v37 = 5;
LABEL_51:
                (*(void (**)(void))(*v36 + 8 * v37))();
              }
              sub_239B16980(v60, &v56);
              do
                v38 = __ldaxr(v35);
              while (__stlxr(v38 - 1, v35));
              if (!v38)
              {
                ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
                std::__shared_weak_count::__release_weak(v34);
              }
              v27 = v55;
              if (v55 == v54)
              {
                v27 = v54;
                v28 = 4;
              }
              else
              {
                if (!v55)
                  goto LABEL_45;
                v28 = 5;
              }
              (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_45:
              v26 = (_QWORD *)*v26;
              if (!v26)
                goto LABEL_59;
            }
            v36 = v65;
            v37 = 4;
            goto LABEL_51;
          }
LABEL_59:
          if (v59)
          {
            LOBYTE(v64) = 0;
            v68 = sub_239B15B28;
            v69 = 0;
            v70 = v58;
            sub_239B15E44((uint64_t)&v68, (uint64_t)&v64);
          }
          v40 = v52;
          v39 = v53;
          if (v53)
          {
            v41 = (unint64_t *)&v53->__shared_owners_;
            do
              v42 = __ldxr(v41);
            while (__stxr(v42 + 1, v41));
          }
          *(_QWORD *)(a1 + 2032) = v40;
          v43 = *(std::__shared_weak_count **)(a1 + 2040);
          *(_QWORD *)(a1 + 2040) = v39;
          if (v43)
          {
            v44 = (unint64_t *)&v43->__shared_owners_;
            do
              v45 = __ldaxr(v44);
            while (__stlxr(v45 - 1, v44));
            if (!v45)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
            }
          }
          sub_239B16008((uint64_t)v58);
          sub_2397A15B0(&v61);
          v46 = v53;
          if (v53)
          {
            v47 = (unint64_t *)&v53->__shared_owners_;
            do
              v48 = __ldaxr(v47);
            while (__stlxr(v48 - 1, v47));
            if (!v48)
            {
              ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
              std::__shared_weak_count::__release_weak(v46);
            }
          }
          if (!v63)
            sub_2394172E0();
          (*(void (**)(_QWORD *))(*v63 + 48))(v63);
          v49 = v63;
          if (v63 == v62)
          {
            v50 = 4;
            v49 = v62;
          }
          else
          {
            if (!v63)
              goto LABEL_80;
            v50 = 5;
          }
          (*(void (**)(void))(*v49 + 8 * v50))();
LABEL_80:
          v4 = *(_QWORD *)(a1 + 2032);
          v11 = *(_QWORD *)(a1 + 2040);
          if (!v11)
            goto LABEL_14;
          goto LABEL_12;
        }
        v20 = 5;
      }
      (*v19)[v20]();
      goto LABEL_31;
    }
    v4 = 0;
  }
  v11 = *(_QWORD *)(a1 + 2040);
  if (!v11)
    goto LABEL_14;
LABEL_12:
  v12 = (unint64_t *)(v11 + 8);
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
LABEL_14:
  v14 = (std::__shared_weak_count *)a2[1];
  *a2 = v4;
  a2[1] = v11;
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_239B15130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  sub_239B16008((uint64_t)&a23);
  sub_2397A15B0((pthread_rwlock_t *)&STACK[0x208]);
  sub_239A4D7C0((uint64_t)&a13);
  sub_239416834(&STACK[0x2D0]);
  _Unwind_Resume(a1);
}

uint64_t sub_239B152CC(uint64_t a1, uint64_t *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  pthread_rwlock_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  char *v34;
  _DWORD *v35;
  unsigned int v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  std::__shared_weak_count *v51;
  unint64_t *p_shared_owners;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  _QWORD v62[3];
  _QWORD *v63;
  uint64_t v64;
  _BYTE v65[24];
  _BYTE *v66;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  v7 = *a2;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = a1 + 56;
  *(_QWORD *)(a1 + 64) = a1 + 56;
  *(_OWORD *)(a1 + 72) = xmmword_239EC69E0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)a1 = &off_250AF4418;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 240) = a2[2];
  v8 = a2[3];
  *(_QWORD *)(a1 + 248) = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = (uint64_t *)(a1 + 256);
  *(_OWORD *)(a1 + 304) = 0uLL;
  *(_OWORD *)(a1 + 320) = 0uLL;
  v60 = (uint64_t *)(a1 + 256);
  v61 = (uint64_t *)(a1 + 272);
  v12 = (_QWORD *)(a1 + 288);
  v13 = (_QWORD *)(a1 + 304);
  *(_OWORD *)(a1 + 272) = 0uLL;
  *(_OWORD *)(a1 + 288) = 0uLL;
  *(_OWORD *)(a1 + 256) = 0uLL;
  *(_DWORD *)(a1 + 336) = 1065353216;
  sub_2397A1618((pthread_mutex_t *)(a1 + 344));
  if (!*v12)
  {
    v34 = (char *)operator new(0x108uLL);
    *((_DWORD *)v34 + 6) = 0x7FFFFFFF;
    v35 = v34 + 24;
    *(_OWORD *)(v34 + 8) = 0u;
    *((_OWORD *)v34 + 2) = 0u;
    *(_QWORD *)v34 = &off_250AF4458;
    *((_OWORD *)v34 + 3) = 0u;
    *((_OWORD *)v34 + 4) = 0u;
    v34[80] = 0;
    *(_OWORD *)(v34 + 88) = 0u;
    sub_2397A1618((pthread_mutex_t *)(v34 + 200));
    v36 = *((_DWORD *)v34 + 6);
    if (v36 >= 0x7FFFFFFF)
    {
      v36 = 0x7FFFFFFF;
      *v35 = 0x7FFFFFFF;
    }
    else if (v36 < 2)
    {
      v36 = 1;
    }
    *((_DWORD *)v34 + 6) = v36;
    pthread_cond_init((pthread_cond_t *)(v34 + 104), 0);
    pthread_cond_init((pthread_cond_t *)(v34 + 152), 0);
    v51 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = v35;
    *(_QWORD *)(a1 + 296) = v34;
    v11 = v60;
    if (v51)
    {
      p_shared_owners = (unint64_t *)&v51->__shared_owners_;
      do
        v53 = __ldaxr(p_shared_owners);
      while (__stlxr(v53 - 1, p_shared_owners));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
        std::__shared_weak_count::__release_weak(v51);
      }
    }
  }
  if (!*v11)
  {
    v14 = operator new(0x120uLL);
    v14[1] = 0;
    v14[2] = 0;
    *v14 = &off_250AE9800;
    v15 = sub_2397A1740((uint64_t)(v14 + 3));
    v16 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = v15;
    *(_QWORD *)(a1 + 264) = v14;
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v19 = *v11;
    v20 = (pthread_rwlock_t *)(*v11 + 24);
    j__pthread_rwlock_wrlock(v20);
    *(_BYTE *)(v19 + 16) = 1;
    j__pthread_rwlock_unlock(v20);
    sub_2397A195C(v19);
    v21 = (_QWORD *)operator new();
    *v21 = &off_250AF4490;
    v21[1] = a1;
    *(_QWORD *)(v19 + 224) = v21;
    sub_2397A1878((pthread_t *)v19);
  }
  if (!*v61)
  {
    v22 = *(_QWORD *)(a1 + 240);
    v23 = *(_QWORD *)(a1 + 248);
    if (v23)
    {
      v24 = (unint64_t *)(v23 + 8);
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
    }
    v26 = *(std::__shared_weak_count **)(a1 + 280);
    *(_QWORD *)(a1 + 272) = v22;
    *(_QWORD *)(a1 + 280) = v23;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
      v22 = *v61;
    }
    if (!v22)
    {
      v54 = *(_QWORD *)(a1 + 232);
      v55 = operator new(0x178uLL);
      v55[1] = 0;
      v55[2] = 0;
      *v55 = &off_250ADB8B0;
      v56 = sub_2397A2A50((uint64_t)(v55 + 3), v54, 0);
      v57 = *(std::__shared_weak_count **)(a1 + 280);
      *(_QWORD *)(a1 + 272) = v56;
      *(_QWORD *)(a1 + 280) = v55;
      if (v57)
      {
        v58 = (unint64_t *)&v57->__shared_owners_;
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
    }
  }
  sub_239467C88(a1);
  if (*(_QWORD *)(a1 + 328))
  {
    v29 = *(_QWORD **)(a1 + 320);
    if (v29)
    {
      do
      {
        v30 = (_QWORD *)*v29;
        operator delete(v29);
        v29 = v30;
      }
      while (v30);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v31 = *(_QWORD *)(a1 + 312);
    if (v31)
    {
      for (i = 0; i != v31; ++i)
        *(_QWORD *)(*v13 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  v33 = a3[3];
  if (!v33)
    goto LABEL_33;
  if ((_QWORD *)v33 != a3)
  {
    v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 16))(v33);
LABEL_33:
    v63 = (_QWORD *)v33;
    goto LABEL_38;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v62);
LABEL_38:
  v64 = a1;
  v66 = 0;
  v37 = operator new(0x30uLL);
  *v37 = &off_250AF4730;
  v38 = (uint64_t)v63;
  if (!v63)
  {
LABEL_41:
    v37[4] = v38;
    goto LABEL_43;
  }
  if (v63 != v62)
  {
    v38 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_41;
  }
  v37[4] = v37 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_43:
  v37[5] = v64;
  v66 = v37;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v39 = v66;
  if (v66 == v65)
  {
    v40 = 4;
    v39 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_51;
    v40 = 5;
  }
  (*(void (**)(void))(*v39 + 8 * v40))();
LABEL_51:
  v41 = v63;
  if (v63 == v62)
  {
    v42 = 4;
    v41 = v62;
  }
  else
  {
    if (!v63)
      goto LABEL_56;
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
LABEL_56:
  v43 = a4[3];
  if (!v43)
  {
LABEL_59:
    v63 = (_QWORD *)v43;
    goto LABEL_61;
  }
  if ((_QWORD *)v43 != a4)
  {
    v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 16))(v43);
    goto LABEL_59;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a4 + 24))(a4, v62);
LABEL_61:
  v64 = a1;
  v66 = 0;
  v44 = operator new(0x30uLL);
  *v44 = &off_250AF4778;
  v45 = (uint64_t)v63;
  if (!v63)
  {
LABEL_64:
    v44[4] = v45;
    goto LABEL_66;
  }
  if (v63 != v62)
  {
    v45 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_64;
  }
  v44[4] = v44 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_66:
  v44[5] = v64;
  v66 = v44;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v46 = v66;
  if (v66 == v65)
  {
    v47 = 4;
    v46 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_74;
    v47 = 5;
  }
  (*(void (**)(void))(*v46 + 8 * v47))();
LABEL_74:
  v48 = v63;
  if (v63 == v62)
  {
    v49 = 4;
    v48 = v62;
    goto LABEL_78;
  }
  if (v63)
  {
    v49 = 5;
LABEL_78:
    (*(void (**)(void))(*v48 + 8 * v49))();
  }
  return a1;
}

void sub_239B15954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  _QWORD **v22;
  uint64_t v23;
  pthread_mutex_t *v24;
  std::__shared_weak_count *v25;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  std::__shared_weak_count::~__shared_weak_count(v25);
  operator delete(v27);
  sub_2397A163C(v24);
  sub_239420950(v23);
  sub_239A4D7C0(a10);
  sub_239416DA0(a12);
  sub_239416DA0(a11);
  sub_239A74534(v21 + 224);
  v28 = *v22;
  if (*v22 == (_QWORD *)(v21 + 176))
  {
    v29 = 4;
    v28 = (_QWORD *)(v21 + 176);
  }
  else
  {
    if (!v28)
      goto LABEL_6;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_6:
  v30 = *(_QWORD **)(v21 + 168);
  if (v30 == (_QWORD *)(v21 + 144))
  {
    v31 = 4;
    v30 = (_QWORD *)(v21 + 144);
  }
  else
  {
    if (!v30)
      goto LABEL_11;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_11:
  sub_239B16430(v21);
  _Unwind_Resume(a1);
}

uint64_t sub_239B15B28(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 654, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 100;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v24 = v3;
    goto LABEL_12;
  }
  v24 = &v23;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF4548;
  *(_QWORD *)&v12 = sub_239B16764((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239B16980(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239B15D2C(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B15D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,_QWORD *a43)
{
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  if (a43 == v46)
  {
    v48 = 4;
  }
  else
  {
    if (!a43)
      goto LABEL_6;
    v48 = 5;
    v46 = a43;
  }
  (*(void (**)(_QWORD *))(*v46 + 8 * v48))(v46);
LABEL_6:
  if (a39 == v45)
  {
    v49 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_11;
    v49 = 5;
    v45 = a39;
  }
  (*(void (**)(_QWORD *))(*v45 + 8 * v49))(v45);
LABEL_11:
  sub_239A8303C(v44);
  sub_239A83110(v43);
  v50 = a20;
  if (a20 == &a17)
  {
    v51 = 4;
    v50 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_16;
    v51 = 5;
  }
  (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_16:
  v52 = a14;
  if (a14 == &a11)
  {
    v53 = 4;
    v52 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v53 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v52 + 8 * v53))();
  _Unwind_Resume(a1);
}

uint64_t sub_239B15E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, _QWORD *);
  _QWORD *v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  pthread_cond_t v18;
  pthread_cond_t v19;
  pthread_mutex_t v20;
  _QWORD v21[3];
  _QWORD *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  sub_2397A1618(&v20);
  v11 = 0x7FFFFFFF;
  pthread_cond_init(&v18, 0);
  pthread_cond_init(&v19, 0);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(uint64_t (**)(_QWORD *, _QWORD *))a1;
  v6 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v4 >> 1));
  if ((v4 & 1) != 0)
    v5 = *(uint64_t (**)(_QWORD *, _QWORD *))(*v6 + v5);
  v21[0] = &off_250AF4850;
  v21[1] = &v11;
  v21[2] = a2;
  v22 = v21;
  v7 = v5(v6, v21);
  v8 = v22;
  if (v22 == v21)
  {
    v9 = 4;
    v8 = v21;
  }
  else
  {
    if (!v22)
      goto LABEL_8;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_8:
  if (v7)
  {
    sub_2395BFB54(&v11);
    sub_2395C2A4C((uint64_t)&v11);
  }
  return sub_2395C29C4((uint64_t)&v11);
}

void sub_239B15F9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B15FE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

uint64_t sub_239B16008(uint64_t a1)
{
  std::__shared_weak_count *v2;
  uint64_t v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t i;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = &off_250AF4418;
  if (*(_QWORD *)(a1 + 272))
  {
    v3 = *(_QWORD *)(a1 + 240);
    v2 = *(std::__shared_weak_count **)(a1 + 248);
    if (!v2)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (v6)
    {
LABEL_7:
      if (v3)
        goto LABEL_10;
      goto LABEL_8;
    }
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (!v3)
LABEL_8:
      sub_2397A3758(*(_QWORD *)(a1 + 272));
  }
LABEL_10:
  v7 = *(_QWORD *)(a1 + 288);
  if (v7)
    sub_239B16548(v7);
  while (1)
  {
    v42[0] = &off_250AF47C0;
    v43 = v42;
    sub_2397A1694((pthread_mutex_t *)(a1 + 344));
    v8 = *(_QWORD *)(a1 + 328);
    if (!v8)
    {
      if (!v43)
        sub_2394172E0();
      (*(void (**)(_QWORD *))(*v43 + 48))(v43);
    }
    sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
    v9 = v43;
    if (v43 == v42)
    {
      v9 = v42;
      v10 = 4;
    }
    else
    {
      if (!v43)
        goto LABEL_20;
      v10 = 5;
    }
    (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_20:
    if (!v8)
      break;
    sub_2397A186C(1);
  }
  v11 = *(_QWORD *)(a1 + 256);
  if (v11)
  {
    sub_2397A195C(v11);
    v12 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 264) = 0;
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  if (*(_QWORD *)(a1 + 288))
  {
    v15 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = 0;
    *(_QWORD *)(a1 + 296) = 0;
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_QWORD *)(a1 + 328))
  {
    v18 = *(_QWORD **)(a1 + 320);
    if (v18)
    {
      do
      {
        v19 = (_QWORD *)*v18;
        operator delete(v18);
        v18 = v19;
      }
      while (v19);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v20 = *(_QWORD *)(a1 + 312);
    if (v20)
    {
      for (i = 0; i != v20; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 304) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  sub_2397A163C((pthread_mutex_t *)(a1 + 344));
  v22 = *(_QWORD **)(a1 + 320);
  if (v22)
  {
    do
    {
      v23 = (_QWORD *)*v22;
      operator delete(v22);
      v22 = v23;
    }
    while (v23);
  }
  v24 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = 0;
  if (v24)
    operator delete(v24);
  v25 = *(std::__shared_weak_count **)(a1 + 296);
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = *(std::__shared_weak_count **)(a1 + 280);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = *(std::__shared_weak_count **)(a1 + 264);
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = *(std::__shared_weak_count **)(a1 + 248);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = *(_QWORD **)(a1 + 200);
  if (v37 == (_QWORD *)(a1 + 176))
  {
    v38 = 4;
    v37 = (_QWORD *)(a1 + 176);
LABEL_69:
    (*(void (**)(void))(*v37 + 8 * v38))();
  }
  else if (v37)
  {
    v38 = 5;
    goto LABEL_69;
  }
  v39 = *(_QWORD **)(a1 + 168);
  if (v39 == (_QWORD *)(a1 + 144))
  {
    v40 = 4;
    v39 = (_QWORD *)(a1 + 144);
LABEL_74:
    (*(void (**)(void))(*v39 + 8 * v40))();
  }
  else if (v39)
  {
    v40 = 5;
    goto LABEL_74;
  }
  return sub_239B16430(a1);
}

void sub_239B163B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_239416A48(exception_object);
}

uint64_t sub_239B16430(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;

  *(_QWORD *)a1 = &off_250AF4438;
  sub_239467C88(a1);
  std::mutex::~mutex((std::mutex *)(a1 + 80));
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(_QWORD *)(a1 + 56);
    v2 = *(uint64_t **)(a1 + 64);
    v4 = *v2;
    *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
    **(_QWORD **)(v3 + 8) = v4;
    *(_QWORD *)(a1 + 72) = 0;
    if (v2 != (uint64_t *)(a1 + 56))
    {
      do
      {
        v5 = (uint64_t *)v2[1];
        operator delete(v2);
        v2 = v5;
      }
      while (v5 != (uint64_t *)(a1 + 56));
    }
  }
  v6 = *(_QWORD **)(a1 + 24);
  while (v6)
  {
    v9 = v6;
    v6 = (_QWORD *)*v6;
    v10 = (std::__shared_weak_count *)v9[4];
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    operator delete(v9);
  }
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v7)
    operator delete(v7);
  return a1;
}

void sub_239B16524(uint64_t a1)
{
  sub_239B16430(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B16548(uint64_t a1)
{
  pthread_mutex_t *v2;
  uint64_t v4;

  v2 = (pthread_mutex_t *)(a1 + 176);
  sub_2397A1694((pthread_mutex_t *)(a1 + 176));
  *(_BYTE *)(a1 + 56) = 1;
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 64) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 80)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 64) <= 0)
        goto LABEL_4;
    }
    v4 = 261;
LABEL_15:
    sub_239A444D4((uint64_t)"unknown file", v4, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
LABEL_4:
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  while (*(_QWORD *)(a1 + 48) && *(uint64_t *)(a1 + 72) >= 1)
  {
    if (pthread_cond_wait((pthread_cond_t *)(a1 + 80), v2))
    {
      sub_239A444D4((uint64_t)"unknown file", 277, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 72) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 128)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 72) <= 0)
        return sub_2397A16B4(v2);
    }
    v4 = 287;
    goto LABEL_15;
  }
  return sub_2397A16B4(v2);
}

void sub_239B166C8(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

void sub_239B166E8()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B166FC()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF47C0;
  return result;
}

void sub_239B16720(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF47C0;
}

void sub_239B16740(uint64_t a1)
{
  sub_239B16008(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B16764(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    v4 = (_QWORD *)(a1 + 40);
    goto LABEL_5;
  }
  if (v5 != a2 + 16)
  {
    *(_QWORD *)(a1 + 40) = v5;
LABEL_5:
    *v4 = 0;
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 40) = a1 + 16;
  (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 24))(*v4);
LABEL_7:
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = (_QWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (!v7)
  {
    v6 = (_QWORD *)(a1 + 104);
    goto LABEL_11;
  }
  if (v7 != a2 + 80)
  {
    *(_QWORD *)(a1 + 104) = v7;
LABEL_11:
    *v6 = 0;
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 104) = a1 + 80;
  (*(void (**)(_QWORD))(*(_QWORD *)*v6 + 24))(*v6);
LABEL_13:
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v8 = (_QWORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 120) = 0;
  if (!v9)
  {
    v8 = (_QWORD *)(a1 + 160);
    goto LABEL_17;
  }
  if (v9 != a2 + 136)
  {
    *(_QWORD *)(a1 + 160) = v9;
LABEL_17:
    *v8 = 0;
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 160) = a1 + 136;
  (*(void (**)(_QWORD))(*(_QWORD *)*v8 + 24))(*v8);
LABEL_19:
  v10 = (_QWORD *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 192);
  if (!v11)
  {
    v10 = (_QWORD *)(a1 + 192);
    goto LABEL_23;
  }
  if (v11 != a2 + 168)
  {
    *(_QWORD *)(a1 + 192) = v11;
LABEL_23:
    *v10 = 0;
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 192) = a1 + 168;
  (*(void (**)(_QWORD))(*(_QWORD *)*v10 + 24))(*v10);
LABEL_25:
  v12 = (_QWORD *)(a2 + 224);
  v13 = *(_QWORD *)(a2 + 224);
  if (!v13)
  {
    v12 = (_QWORD *)(a1 + 224);
    goto LABEL_29;
  }
  if (v13 != a2 + 200)
  {
    *(_QWORD *)(a1 + 224) = v13;
LABEL_29:
    *v12 = 0;
    goto LABEL_31;
  }
  *(_QWORD *)(a1 + 224) = a1 + 200;
  (*(void (**)(_QWORD))(*(_QWORD *)*v12 + 24))(*v12);
LABEL_31:
  v14 = *(_QWORD *)(a2 + 256);
  if (v14)
  {
    v15 = (_QWORD *)(a2 + 256);
    if (v14 == a2 + 232)
    {
      *(_QWORD *)(a1 + 256) = a1 + 232;
      (*(void (**)(_QWORD))(*(_QWORD *)*v15 + 24))(*v15);
      return a1;
    }
    *(_QWORD *)(a1 + 256) = v14;
  }
  else
  {
    v15 = (_QWORD *)(a1 + 256);
  }
  *v15 = 0;
  return a1;
}

uint64_t sub_239B16980(unsigned int *a1, _OWORD *a2)
{
  pthread_mutex_t *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  void *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  BOOL v36;
  int64_t v37;
  unint64_t v38;
  char *v39;
  void *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  _OWORD *v54;
  uint64_t v55;
  __int128 v56;
  unint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  _OWORD *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  size_t v103;
  char *v104;
  unint64_t v105;
  char *v106;
  char *v107;
  int64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 *v114;
  _OWORD *v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  void *v119;
  _OWORD *v120;

  v4 = (pthread_mutex_t *)(a1 + 44);
  sub_2397A1694((pthread_mutex_t *)(a1 + 44));
  v5 = *((_QWORD *)a1 + 6);
  if (v5 >= *a1)
  {
    while (!*((_BYTE *)a1 + 56))
    {
      ++*((_QWORD *)a1 + 8);
      pthread_cond_wait((pthread_cond_t *)(a1 + 20), v4);
      --*((_QWORD *)a1 + 8);
      v5 = *((_QWORD *)a1 + 6);
      if (v5 < *a1)
        goto LABEL_4;
    }
    goto LABEL_5;
  }
LABEL_4:
  if (*((_BYTE *)a1 + 56))
  {
LABEL_5:
    v6 = 0;
    goto LABEL_100;
  }
  v7 = (char *)*((_QWORD *)a1 + 3);
  v8 = (char *)*((_QWORD *)a1 + 2);
  v9 = v7 - v8;
  if (v7 == v8)
    v10 = 0;
  else
    v10 = 32 * (v7 - v8) - 1;
  v11 = *((_QWORD *)a1 + 5);
  v12 = v11 + v5;
  if (v10 == v11 + v5)
  {
    if (v11 >= 0x100)
    {
      *((_QWORD *)a1 + 5) = v11 - 256;
      v13 = v8 + 8;
      v14 = *(_QWORD *)v8;
      *((_QWORD *)a1 + 2) = v8 + 8;
      if (*((char **)a1 + 4) != v7)
      {
LABEL_92:
        *(_QWORD *)v7 = v14;
        goto LABEL_93;
      }
      v15 = (char *)*((_QWORD *)a1 + 1);
      if (v13 > v15)
      {
        v16 = (v13 - v15) >> 3;
        if (v16 >= -1)
          v17 = v16 + 1;
        else
          v17 = v16 + 2;
        v18 = v17 >> 1;
        v19 = -v18;
        v20 = &v13[-8 * v18];
        v21 = v7 - v13;
        if (v7 == v13)
        {
          v22 = v7;
        }
        else
        {
          memmove(&v13[-8 * v18], v13, v7 - v13);
          v22 = (char *)*((_QWORD *)a1 + 2);
        }
        v7 = &v20[v21];
        *((_QWORD *)a1 + 2) = &v22[8 * v19];
        *((_QWORD *)a1 + 3) = &v20[v21];
        goto LABEL_92;
      }
      if (v7 == v15)
        v33 = 1;
      else
        v33 = (v7 - v15) >> 2;
      if (!(v33 >> 61))
      {
        v34 = (char *)operator new(8 * v33);
        v35 = &v34[8 * (v33 >> 2)];
        v37 = v7 - v13;
        v36 = v7 == v13;
        v7 = v35;
        if (v36)
          goto LABEL_90;
        v7 = &v35[v37 & 0xFFFFFFFFFFFFFFF8];
        v38 = v37 - 8;
        if (v38 >= 0x38)
        {
          v81 = &v34[8 * (v33 >> 2)];
          v39 = v81;
          if ((unint64_t)(v81 - v13) >= 0x20)
          {
            v82 = (v38 >> 3) + 1;
            v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
            v39 = &v35[v83];
            v84 = (__int128 *)(v8 + 24);
            v85 = v81 + 16;
            v86 = v82 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v87 = *v84;
              *(v85 - 1) = *(v84 - 1);
              *v85 = v87;
              v84 += 2;
              v85 += 2;
              v86 -= 4;
            }
            while (v86);
            if (v82 == (v82 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_90:
              *((_QWORD *)a1 + 1) = v34;
              *((_QWORD *)a1 + 2) = v35;
              *((_QWORD *)a1 + 3) = v7;
              *((_QWORD *)a1 + 4) = &v34[8 * v33];
              if (v15)
              {
                operator delete(v15);
                v7 = (char *)*((_QWORD *)a1 + 3);
              }
              goto LABEL_92;
            }
            v13 += v83;
          }
        }
        else
        {
          v39 = &v34[8 * (v33 >> 2)];
        }
        do
        {
          v88 = *(_QWORD *)v13;
          v13 += 8;
          *(_QWORD *)v39 = v88;
          v39 += 8;
        }
        while (v39 != v7);
        goto LABEL_90;
      }
LABEL_130:
      sub_239418A80();
    }
    v23 = v9 >> 3;
    v24 = (char *)*((_QWORD *)a1 + 4);
    v25 = (char *)*((_QWORD *)a1 + 1);
    v26 = v24 - v25;
    if (v9 >> 3 < (unint64_t)((v24 - v25) >> 3))
    {
      if (v24 != v7)
      {
        *(_QWORD *)v7 = operator new(0x1000uLL);
LABEL_93:
        *((_QWORD *)a1 + 3) += 8;
LABEL_94:
        v8 = (char *)*((_QWORD *)a1 + 2);
        v5 = *((_QWORD *)a1 + 6);
        v12 = v5 + *((_QWORD *)a1 + 5);
        goto LABEL_95;
      }
      v40 = operator new(0x1000uLL);
      v41 = v8;
      if (v25 != v8)
      {
LABEL_105:
        *((_QWORD *)v41 - 1) = v40;
        v94 = (char *)*((_QWORD *)a1 + 2);
        v95 = (char *)*((_QWORD *)a1 + 3);
        *((_QWORD *)a1 + 2) = v94 - 8;
        v96 = *((_QWORD *)v94 - 1);
        *((_QWORD *)a1 + 2) = v94;
        if (v95 != *((char **)a1 + 4))
        {
LABEL_106:
          *(_QWORD *)v95 = v96;
          goto LABEL_93;
        }
        v97 = (char *)*((_QWORD *)a1 + 1);
        if (v94 > v97)
        {
          v98 = (v94 - v97) >> 3;
          if (v98 >= -1)
            v99 = v98 + 1;
          else
            v99 = v98 + 2;
          v100 = v99 >> 1;
          v101 = -v100;
          v102 = &v94[-8 * v100];
          v103 = v95 - v94;
          if (v103)
          {
            memmove(&v94[-8 * v100], v94, v103);
            v94 = (char *)*((_QWORD *)a1 + 2);
          }
          v104 = &v102[v103];
          *((_QWORD *)a1 + 2) = &v94[8 * v101];
          *((_QWORD *)a1 + 3) = v104;
          *(_QWORD *)v104 = v96;
          goto LABEL_93;
        }
        if (v95 == v97)
          v105 = 1;
        else
          v105 = (v95 - v97) >> 2;
        if (v105 >> 61)
          goto LABEL_130;
        v106 = (char *)operator new(8 * v105);
        v107 = &v106[8 * (v105 >> 2)];
        v108 = v95 - v94;
        v36 = v95 == v94;
        v95 = v107;
        if (!v36)
        {
          v95 = &v107[v108 & 0xFFFFFFFFFFFFFFF8];
          v109 = v108 - 8;
          if (v109 < 0x38)
          {
            v110 = &v106[8 * (v105 >> 2)];
            goto LABEL_126;
          }
          v111 = &v106[8 * (v105 >> 2)];
          v110 = v111;
          if ((unint64_t)(v111 - v94) < 0x20)
          {
            do
            {
LABEL_126:
              v118 = *(_QWORD *)v94;
              v94 += 8;
              *(_QWORD *)v110 = v118;
              v110 += 8;
            }
            while (v110 != v95);
            goto LABEL_127;
          }
          v112 = (v109 >> 3) + 1;
          v113 = 8 * (v112 & 0x3FFFFFFFFFFFFFFCLL);
          v110 = &v107[v113];
          v114 = (__int128 *)(v94 + 16);
          v115 = v111 + 16;
          v116 = v112 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v117 = *v114;
            *(v115 - 1) = *(v114 - 1);
            *v115 = v117;
            v114 += 2;
            v115 += 2;
            v116 -= 4;
          }
          while (v116);
          if (v112 != (v112 & 0x3FFFFFFFFFFFFFFCLL))
          {
            v94 += v113;
            goto LABEL_126;
          }
        }
LABEL_127:
        *((_QWORD *)a1 + 1) = v106;
        *((_QWORD *)a1 + 2) = v107;
        *((_QWORD *)a1 + 3) = v95;
        *((_QWORD *)a1 + 4) = &v106[8 * v105];
        if (v97)
        {
          operator delete(v97);
          v95 = (char *)*((_QWORD *)a1 + 3);
        }
        goto LABEL_106;
      }
      if (v7 == v8)
        v42 = 1;
      else
        v42 = v26 >> 2;
      if (v42 >> 61)
        goto LABEL_130;
      v43 = (char *)operator new(8 * v42);
      v44 = (v42 + 3) >> 2;
      v41 = &v43[8 * v44];
      v45 = &v43[8 * v42];
      v46 = v41;
      if (v7 != v8)
      {
        v46 = &v41[(v7 - v25) & 0xFFFFFFFFFFFFFFF8];
        v47 = v7 - v25 - 8;
        v48 = &v43[8 * v44];
        v49 = v8;
        if (v47 > 0x37)
        {
          v50 = &v43[8 * v44];
          v48 = v50;
          v49 = v8;
          if ((unint64_t)(v50 - v25) >= 0x20)
          {
            v51 = (v47 >> 3) + 1;
            v52 = 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
            v48 = &v41[v52];
            v53 = (__int128 *)(v8 + 16);
            v54 = v50 + 16;
            v55 = v51 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v56 = *v53;
              *(v54 - 1) = *(v53 - 1);
              *v54 = v56;
              v53 += 2;
              v54 += 2;
              v55 -= 4;
            }
            while (v55);
            if (v51 == (v51 & 0x3FFFFFFFFFFFFFFCLL))
            {
              *((_QWORD *)a1 + 1) = v43;
              *((_QWORD *)a1 + 2) = v41;
              *((_QWORD *)a1 + 3) = v46;
              *((_QWORD *)a1 + 4) = v45;
LABEL_104:
              operator delete(v8);
              v41 = (char *)*((_QWORD *)a1 + 2);
              goto LABEL_105;
            }
            v49 = &v8[v52];
          }
        }
        do
        {
          v93 = *(_QWORD *)v49;
          v49 += 8;
          *(_QWORD *)v48 = v93;
          v48 += 8;
        }
        while (v48 != v46);
      }
      *((_QWORD *)a1 + 1) = v43;
      *((_QWORD *)a1 + 2) = v41;
      *((_QWORD *)a1 + 3) = v46;
      *((_QWORD *)a1 + 4) = v45;
      if (!v8)
        goto LABEL_105;
      goto LABEL_104;
    }
    if (v24 == v25)
      v27 = 1;
    else
      v27 = v26 >> 2;
    if (v27 >> 61)
      goto LABEL_130;
    v28 = (char *)operator new(8 * v27);
    v120 = a2;
    v29 = operator new(0x1000uLL);
    v30 = &v28[8 * v23];
    v31 = &v28[8 * v27];
    if (v23 == v27)
    {
      v119 = v29;
      if (v9 < 1)
      {
        if (v7 == v8)
          v57 = 1;
        else
          v57 = v9 >> 2;
        if (v57 >> 61)
          sub_239418A80();
        v30 = (char *)operator new(8 * v57);
        v31 = &v30[8 * v57];
        operator delete(v28);
        v8 = (char *)*((_QWORD *)a1 + 2);
        v7 = (char *)*((_QWORD *)a1 + 3);
        v28 = v30;
      }
      else
      {
        v32 = v23 + 2;
        if (v23 >= -1)
          v32 = v23 + 1;
        v30 -= 8 * (v32 >> 1);
      }
      v29 = v119;
    }
    *(_QWORD *)v30 = v29;
    v58 = v30 + 8;
    if (v7 == v8)
    {
      v59 = v30;
      v60 = v30 + 8;
LABEL_57:
      v61 = (void *)*((_QWORD *)a1 + 1);
      *((_QWORD *)a1 + 1) = v28;
      *((_QWORD *)a1 + 2) = v59;
      *((_QWORD *)a1 + 3) = v60;
      *((_QWORD *)a1 + 4) = v31;
      a2 = v120;
      if (v61)
        operator delete(v61);
      goto LABEL_94;
    }
    while (v30 != v28)
    {
      v62 = v30;
      v60 = v58;
LABEL_60:
      v63 = *((_QWORD *)v7 - 1);
      v7 -= 8;
      *((_QWORD *)v62 - 1) = v63;
      v59 = v62 - 8;
      v58 = v60;
      v30 = v59;
      if (v7 == *((char **)a1 + 2))
        goto LABEL_57;
    }
    if (v58 < v31)
    {
      v64 = (v31 - v58) >> 3;
      if (v64 >= -1)
        v65 = v64 + 1;
      else
        v65 = v64 + 2;
      v60 = &v58[8 * (v65 >> 1)];
      v62 = &v30[8 * (v65 >> 1)];
      if (v58 == v30)
      {
        v28 = v58;
      }
      else
      {
        memmove(&v30[8 * (v65 >> 1)], v30, v58 - v30);
        v28 = v30;
      }
      goto LABEL_60;
    }
    if (v31 == v30)
      v66 = 1;
    else
      v66 = (v31 - v30) >> 2;
    if (v66 >> 61)
      sub_239418A80();
    v67 = (char *)operator new(8 * v66);
    v28 = v67;
    v68 = (v66 + 3) >> 2;
    v62 = &v67[8 * v68];
    v60 = v62;
    v69 = v58 - v30;
    if (v58 != v30)
    {
      v60 = &v62[v69 & 0xFFFFFFFFFFFFFFF8];
      v70 = v69 - 8;
      v71 = &v67[8 * v68];
      v72 = v30;
      if (v70 >= 0x38)
      {
        v73 = 8 * v68;
        v71 = &v67[8 * v68];
        v72 = v30;
        if ((unint64_t)(v71 - v30) >= 0x20)
        {
          v74 = (v70 >> 3) + 1;
          v75 = 8 * (v74 & 0x3FFFFFFFFFFFFFFCLL);
          v71 = &v62[v75];
          v76 = (__int128 *)(v30 + 16);
          v77 = &v67[v73 + 16];
          v78 = v74 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v79 = *v76;
            *((_OWORD *)v77 - 1) = *(v76 - 1);
            *(_OWORD *)v77 = v79;
            v76 += 2;
            v77 += 32;
            v78 -= 4;
          }
          while (v78);
          if (v74 == (v74 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_80;
          v72 = &v30[v75];
        }
      }
      do
      {
        v80 = *(_QWORD *)v72;
        v72 += 8;
        *(_QWORD *)v71 = v80;
        v71 += 8;
      }
      while (v71 != v60);
    }
LABEL_80:
    v31 = &v67[8 * v66];
    operator delete(v30);
    goto LABEL_60;
  }
LABEL_95:
  v89 = *a2;
  *(_OWORD *)(*(_QWORD *)&v8[(v12 >> 5) & 0x7FFFFFFFFFFFFF8] + 16 * v12) = *a2;
  if (*((_QWORD *)&v89 + 1))
  {
    v90 = (unint64_t *)(*((_QWORD *)&v89 + 1) + 8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 1, v90));
    v5 = *((_QWORD *)a1 + 6);
  }
  *((_QWORD *)a1 + 6) = v5 + 1;
  pthread_cond_signal((pthread_cond_t *)(a1 + 32));
  v6 = 1;
LABEL_100:
  sub_2397A16B4(v4);
  return v6;
}

void sub_239B170F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  pthread_mutex_t *v9;
  void *v10;

  operator delete(__p);
  operator delete(v10);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

void sub_239B17144(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF4548;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B17154(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF4548;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B17184(uint64_t a1)
{
  return sub_239A82E8C((_QWORD *)(a1 + 24));
}

void sub_239B17194()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B171A8(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF4808;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B171E8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF4808;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B17210(uint64_t a1, __int128 **a2, _BYTE *a3)
{
  unint64_t v3;
  std::__shared_weak_count *v4;
  __int128 *v5;
  pthread_rwlock_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint8x8_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  float v20;
  float v21;
  _BOOL8 v22;
  unint64_t v23;
  unint64_t v24;
  size_t prime;
  int8x8_t v26;
  unint64_t v27;
  uint8x8_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  __int128 v35;

  v5 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  if (!*a3)
    goto LABEL_65;
  v7 = *(pthread_rwlock_t **)(a1 + 24);
  j__pthread_rwlock_wrlock(v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = **(_QWORD **)(a1 + 8);
  v35 = *v5;
  v10 = *((_QWORD *)v5 + 2);
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  v11 = *((_BYTE *)v5 + 24);
  v12 = *(_QWORD *)(v9 + 8);
  if (!v12)
    goto LABEL_25;
  v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
  v13.i16[0] = vaddlv_u8(v13);
  if (v13.u32[0] > 1uLL)
  {
    v3 = v8;
    if (v8 >= v12)
      v3 = v8 % v12;
  }
  else
  {
    v3 = (v12 - 1) & v8;
  }
  v14 = *(_QWORD **)(*(_QWORD *)v9 + 8 * v3);
  if (!v14 || (v15 = (_QWORD *)*v14) == 0)
  {
LABEL_25:
    v18 = (char *)operator new(0x38uLL);
    v19 = (_QWORD *)(v9 + 16);
    *(_QWORD *)v18 = 0;
    *((_QWORD *)v18 + 1) = v8;
    *((_QWORD *)v18 + 2) = v8;
    *(_OWORD *)(v18 + 24) = v35;
    *((_QWORD *)v18 + 5) = v10;
    v18[48] = v11;
    v20 = (float)(unint64_t)(*(_QWORD *)(v9 + 24) + 1);
    v21 = *(float *)(v9 + 32);
    if (!v12 || (float)(v21 * (float)v12) < v20)
    {
      v22 = 1;
      if (v12 >= 3)
        v22 = (v12 & (v12 - 1)) != 0;
      v23 = v22 | (2 * v12);
      v24 = vcvtps_u32_f32(v20 / v21);
      if (v23 <= v24)
        prime = v24;
      else
        prime = v23;
      if (prime == 1)
      {
        prime = 2;
      }
      else if ((prime & (prime - 1)) != 0)
      {
        prime = std::__next_prime(prime);
      }
      v26 = *(int8x8_t *)(v9 + 8);
      if (prime > *(_QWORD *)&v26)
        goto LABEL_37;
      if (prime < *(_QWORD *)&v26)
      {
        v27 = vcvtps_u32_f32((float)*(unint64_t *)(v9 + 24) / *(float *)(v9 + 32));
        if (*(_QWORD *)&v26 < 3uLL || (v28 = (uint8x8_t)vcnt_s8(v26), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
        {
          v27 = std::__next_prime(v27);
        }
        else
        {
          v29 = 1 << -(char)__clz(v27 - 1);
          if (v27 >= 2)
            v27 = v29;
        }
        if (prime <= v27)
          prime = v27;
        if (prime < *(_QWORD *)&v26)
LABEL_37:
          sub_239A501C8(v9, prime);
      }
      v12 = *(_QWORD *)(v9 + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v8 >= v12)
          v3 = v8 % v12;
        else
          v3 = v8;
      }
      else
      {
        v3 = (v12 - 1) & v8;
      }
    }
    v30 = *(_QWORD *)v9;
    v31 = *(_QWORD **)(*(_QWORD *)v9 + 8 * v3);
    if (v31)
    {
      *(_QWORD *)v18 = *v31;
    }
    else
    {
      *(_QWORD *)v18 = *v19;
      *v19 = v18;
      *(_QWORD *)(v30 + 8 * v3) = v19;
      if (!*(_QWORD *)v18)
      {
LABEL_62:
        ++*(_QWORD *)(v9 + 24);
        goto LABEL_64;
      }
      v32 = *(_QWORD *)(*(_QWORD *)v18 + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v32 >= v12)
          v32 %= v12;
      }
      else
      {
        v32 &= v12 - 1;
      }
      v31 = (_QWORD *)(*(_QWORD *)v9 + 8 * v32);
    }
    *v31 = v18;
    goto LABEL_62;
  }
  if (v13.u32[0] < 2uLL)
  {
    while (1)
    {
      v17 = v15[1];
      if (v17 == v8)
      {
        if (v15[2] == v8)
          goto LABEL_23;
      }
      else if ((v17 & (v12 - 1)) != v3)
      {
        goto LABEL_25;
      }
      v15 = (_QWORD *)*v15;
      if (!v15)
        goto LABEL_25;
    }
  }
  while (1)
  {
    v16 = v15[1];
    if (v16 == v8)
      break;
    if (v16 >= v12)
      v16 %= v12;
    if (v16 != v3)
      goto LABEL_25;
LABEL_13:
    v15 = (_QWORD *)*v15;
    if (!v15)
      goto LABEL_25;
  }
  if (v15[2] != v8)
    goto LABEL_13;
LABEL_23:
  if ((_QWORD)v35)
    operator delete((void *)v35);
LABEL_64:
  j__pthread_rwlock_unlock(v7);
LABEL_65:
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_239B175B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  pthread_rwlock_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  va_list va;

  va_start(va, a4);
  sub_239474998((uint64_t)va);
  j__pthread_rwlock_unlock(v5);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239B17634()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B17648(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF4850;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B17680(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF4850;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B176A0(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

_QWORD *sub_239B176D4(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF4778;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B17730(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF4778;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B1779C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF4778;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239B17818(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B1782C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF4778;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239B178A4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B178D8(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239B17928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = a1 + 8;
    if (v1 == v3)
    {
      v10 = v9;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(v3, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    }
  }
  else
  {
    v10 = 0;
  }
  v4 = v2 + 176;
  if ((_QWORD *)(v2 + 176) != v9)
  {
    v5 = v10;
    v6 = *(_QWORD *)(v2 + 200);
    if (v10 == v9)
    {
      if (v6 == v4)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v2 + 200) + 24))(*(_QWORD *)(v2 + 200), v9);
        (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
        *(_QWORD *)(v2 + 200) = 0;
        v10 = v9;
        (*(void (**)(_QWORD *, uint64_t))(v11[0] + 24))(v11, v2 + 176);
        (*(void (**)(_QWORD *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v9[0] + 24))(v9, v2 + 176);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = *(_QWORD **)(v2 + 200);
      }
      *(_QWORD *)(v2 + 200) = v4;
    }
    else if (v6 == v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v2 + 176, v9);
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
      *(_QWORD *)(v2 + 200) = v10;
      v10 = v9;
    }
    else
    {
      v10 = *(_QWORD **)(v2 + 200);
      *(_QWORD *)(v2 + 200) = v5;
    }
  }
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239B17B1C(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

_QWORD *sub_239B17B28(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF4730;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B17B84(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF4730;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B17BF0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF4730;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239B17C6C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B17C80(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF4730;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239B17CF8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B17D2C(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239B17D7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = a1 + 8;
    if (v1 == v3)
    {
      v10 = v9;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(v3, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    }
  }
  else
  {
    v10 = 0;
  }
  v4 = v2 + 144;
  if ((_QWORD *)(v2 + 144) != v9)
  {
    v5 = v10;
    v6 = *(_QWORD *)(v2 + 168);
    if (v10 == v9)
    {
      if (v6 == v4)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v2 + 168) + 24))(*(_QWORD *)(v2 + 168), v9);
        (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 168) + 32))(*(_QWORD *)(v2 + 168));
        *(_QWORD *)(v2 + 168) = 0;
        v10 = v9;
        (*(void (**)(_QWORD *, uint64_t))(v11[0] + 24))(v11, v2 + 144);
        (*(void (**)(_QWORD *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v9[0] + 24))(v9, v2 + 144);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = *(_QWORD **)(v2 + 168);
      }
      *(_QWORD *)(v2 + 168) = v4;
    }
    else if (v6 == v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v2 + 144, v9);
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 168) + 32))(*(_QWORD *)(v2 + 168));
      *(_QWORD *)(v2 + 168) = v10;
      v10 = v9;
    }
    else
    {
      v10 = *(_QWORD **)(v2 + 168);
      *(_QWORD *)(v2 + 168) = v5;
    }
  }
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239B17F70(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

void sub_239B17F80(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B17FA4(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  int *v3;
  BOOL v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  BOOL v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  int8x8_t v35;
  uint8x8_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  int8x8_t v43;
  uint8x8_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t *v60;
  unint64_t *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t *v79;
  __int128 v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  __int128 v90;
  char v91;
  __int128 v92;
  __int128 v93;
  char v94;
  _BYTE v95[24];
  _BYTE *v96;
  _BYTE v97[24];
  _BYTE *v98;
  _QWORD v99[3];
  _QWORD *v100;
  _BYTE v101[24];
  _BYTE *v102;
  _BYTE v103[24];
  _BYTE *v104;
  _BYTE v105[24];
  _BYTE *v106;
  uint64_t v107;

  v107 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(unsigned int **)(v1 + 288);
  if (v2)
  {
    sub_239B18D00((uint64_t)&v93, v2);
    v3 = (int *)v93;
    if ((_QWORD)v93)
      v4 = v94 == 0;
    else
      v4 = 1;
    if (!v4)
    {
      v8 = (_QWORD *)(v1 + 304);
      while (2)
      {
        v10 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
        *(_QWORD *)&v92 = v3;
        *((_QWORD *)&v92 + 1) = *((_QWORD *)&v93 + 1);
        if (*((_QWORD *)&v93 + 1))
        {
          v11 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        v13 = *v3;
        switch(*v3)
        {
          case 0:
            if (v10)
            {
              p_shared_owners = (unint64_t *)&v10->__shared_owners_;
              do
                v15 = __ldxr(p_shared_owners);
              while (__stxr(v15 + 1, p_shared_owners));
              v16 = *((_QWORD *)v3 + 1);
              do
                v17 = __ldxr(p_shared_owners);
              while (__stxr(v17 + 1, p_shared_owners));
            }
            else
            {
              v16 = *((_QWORD *)v3 + 1);
            }
            v106 = 0;
            v50 = operator new(0x20uLL);
            *v50 = &off_250AF44B8;
            v50[1] = v3;
            v50[2] = v10;
            v50[3] = v1;
            v106 = v50;
            v51 = sub_239B18EF8(v1, v16, (uint64_t)v105);
            v52 = v106;
            if (v106 == v105)
            {
              v52 = v105;
              v53 = 4;
            }
            else
            {
              if (!v106)
                goto LABEL_82;
              v53 = 5;
            }
            (*(void (**)(void))(*v52 + 8 * v53))();
LABEL_82:
            if ((v51 & 1) == 0)
              sub_239B16980(*(unsigned int **)(v1 + 288), &v92);
            if (v10)
            {
              v58 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v58);
              while (__stlxr(v59 - 1, v58));
              goto LABEL_166;
            }
            goto LABEL_168;
          case 1:
            if (v10)
            {
              v29 = (unint64_t *)&v10->__shared_owners_;
              do
                v30 = __ldxr(v29);
              while (__stxr(v30 + 1, v29));
              v31 = *((unsigned __int8 *)v3 + 72);
              v32 = *((_QWORD *)v3 + 6);
              do
                v33 = __ldxr(v29);
              while (__stxr(v33 + 1, v29));
              if (!v31)
              {
LABEL_77:
                v104 = 0;
                v54 = operator new(0x20uLL);
                *v54 = &off_250AF4580;
                v54[1] = v3;
                v54[2] = v10;
                v54[3] = v1;
                v104 = v54;
                v55 = sub_239B18EF8(v1, v32, (uint64_t)v103);
                v56 = v104;
                if (v104 == v103)
                {
                  v56 = v103;
                  v57 = 4;
LABEL_160:
                  (*(void (**)(void))(*v56 + 8 * v57))();
                }
                else if (v104)
                {
                  v57 = 5;
                  goto LABEL_160;
                }
                if ((v55 & 1) == 0)
                  sub_239B16980(*(unsigned int **)(v1 + 288), &v92);
                goto LABEL_163;
              }
            }
            else
            {
              v32 = *((_QWORD *)v3 + 6);
              if (!*((_BYTE *)v3 + 72))
                goto LABEL_77;
            }
            v102 = 0;
            v34 = operator new(0x20uLL);
            *v34 = &off_250AF4580;
            v34[1] = v3;
            v34[2] = v10;
            v34[3] = v1;
            v102 = v34;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v35 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v35)
              goto LABEL_151;
            v36 = (uint8x8_t)vcnt_s8(v35);
            v36.i16[0] = vaddlv_u8(v36);
            if (v36.u32[0] > 1uLL)
            {
              v37 = v32;
              if (*(_QWORD *)&v35 <= v32)
                v37 = v32 % *(_QWORD *)&v35;
            }
            else
            {
              v37 = (*(_QWORD *)&v35 - 1) & v32;
            }
            v71 = *(_QWORD **)(*v8 + 8 * v37);
            if (!v71 || (v72 = (_QWORD *)*v71) == 0)
            {
LABEL_151:
              v76 = 0;
              goto LABEL_152;
            }
            if (v36.u32[0] < 2uLL)
            {
              v73 = *(_QWORD *)&v35 - 1;
              while (1)
              {
                v75 = v72[1];
                if (v75 == v32)
                {
                  if (v72[2] == v32)
                    goto LABEL_184;
                }
                else if ((v75 & v73) != v37)
                {
                  goto LABEL_151;
                }
                v72 = (_QWORD *)*v72;
                if (!v72)
                  goto LABEL_151;
              }
            }
            while (1)
            {
              v74 = v72[1];
              if (v74 == v32)
                break;
              if (v74 >= *(_QWORD *)&v35)
                v74 %= *(_QWORD *)&v35;
              if (v74 != v37)
                goto LABEL_151;
LABEL_141:
              v72 = (_QWORD *)*v72;
              if (!v72)
                goto LABEL_151;
            }
            if (v72[2] != v32)
              goto LABEL_141;
LABEL_184:
            if (!v102)
              sub_2394172E0();
            (*(void (**)(_BYTE *))(*(_QWORD *)v102 + 48))(v102);
            v76 = 1;
LABEL_152:
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v77 = v102;
            if (v102 == v101)
            {
              v77 = v101;
              v78 = 4;
LABEL_156:
              (*(void (**)(void))(*v77 + 8 * v78))();
            }
            else if (v102)
            {
              v78 = 5;
              goto LABEL_156;
            }
            if ((v76 & 1) == 0)
            {
              sub_239A444D4((uint64_t)"unknown file", 793, (uint64_t)"", (void (*)(void *))sub_239A4463C);
              sub_239A4475C();
              abort();
            }
LABEL_163:
            if (v10)
            {
              v79 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v79);
              while (__stlxr(v59 - 1, v79));
              goto LABEL_166;
            }
LABEL_168:
            sub_239B18D00((uint64_t)&v90, *(unsigned int **)(v1 + 288));
            v80 = v90;
            v90 = 0uLL;
            v81 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
            v93 = v80;
            if (v81)
            {
              v82 = (unint64_t *)&v81->__shared_owners_;
              do
                v83 = __ldaxr(v82);
              while (__stlxr(v83 - 1, v82));
              if (!v83)
              {
                ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                std::__shared_weak_count::__release_weak(v81);
              }
            }
            v94 = v91;
            v84 = (std::__shared_weak_count *)*((_QWORD *)&v90 + 1);
            if (!*((_QWORD *)&v90 + 1))
              goto LABEL_177;
            v85 = (unint64_t *)(*((_QWORD *)&v90 + 1) + 8);
            do
              v86 = __ldaxr(v85);
            while (__stlxr(v86 - 1, v85));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
              std::__shared_weak_count::__release_weak(v84);
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
              {
LABEL_178:
                v88 = (unint64_t *)&v87->__shared_owners_;
                do
                  v89 = __ldaxr(v88);
                while (__stlxr(v89 - 1, v88));
                if (!v89)
                {
                  ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                  std::__shared_weak_count::__release_weak(v87);
                }
              }
            }
            else
            {
LABEL_177:
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
                goto LABEL_178;
            }
            v3 = (int *)v93;
            if ((_QWORD)v93)
              v9 = v94 == 0;
            else
              v9 = 1;
            if (v9)
              break;
            continue;
          case 2:
            if (v10)
            {
              v24 = (unint64_t *)&v10->__shared_owners_;
              do
                v25 = __ldxr(v24);
              while (__stxr(v25 + 1, v24));
              v26 = *((_QWORD *)v3 + 14);
              do
                v27 = __ldxr(v24);
              while (__stxr(v27 + 1, v24));
            }
            else
            {
              v26 = *((_QWORD *)v3 + 14);
            }
            v100 = 0;
            v42 = operator new(0x20uLL);
            *v42 = &off_250AF4610;
            v42[1] = v3;
            v42[2] = v10;
            v42[3] = v1;
            v100 = v42;
            *(_QWORD *)&v90 = v26;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v43 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v43)
              goto LABEL_122;
            v44 = (uint8x8_t)vcnt_s8(v43);
            v44.i16[0] = vaddlv_u8(v44);
            if (v44.u32[0] > 1uLL)
            {
              v45 = v26;
              if (*(_QWORD *)&v43 <= v26)
                v45 = v26 % *(_QWORD *)&v43;
            }
            else
            {
              v45 = (*(_QWORD *)&v43 - 1) & v26;
            }
            v62 = *(_QWORD **)(*v8 + 8 * v45);
            if (!v62)
              goto LABEL_122;
            v63 = (_QWORD *)*v62;
            if (!v63)
              goto LABEL_122;
            if (v44.u32[0] < 2uLL)
            {
              v64 = *(_QWORD *)&v43 - 1;
              while (1)
              {
                v66 = v63[1];
                if (v66 == v26)
                {
                  if (v63[2] == v26)
                    goto LABEL_121;
                }
                else if ((v66 & v64) != v45)
                {
                  goto LABEL_122;
                }
                v63 = (_QWORD *)*v63;
                if (!v63)
                  goto LABEL_122;
              }
            }
            while (1)
            {
              v65 = v63[1];
              if (v65 == v26)
              {
                if (v63[2] == v26)
                {
LABEL_121:
                  v67 = 0;
                  goto LABEL_123;
                }
              }
              else
              {
                if (v65 >= *(_QWORD *)&v43)
                  v65 %= *(_QWORD *)&v43;
                if (v65 != v45)
                {
LABEL_122:
                  sub_239465800(v1 + 304, (unint64_t *)&v90, &v90);
                  sub_239A7798C(*(_QWORD *)(v1 + 272), v99);
                  v67 = 1;
LABEL_123:
                  sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
                  v68 = v100;
                  if (v100 == v99)
                  {
                    v68 = v99;
                    v69 = 4;
LABEL_127:
                    (*(void (**)(void))(*v68 + 8 * v69))();
                  }
                  else if (v100)
                  {
                    v69 = 5;
                    goto LABEL_127;
                  }
                  if ((v67 & 1) == 0)
                    sub_239B16980(*(unsigned int **)(v1 + 288), &v92);
                  if (v10)
                  {
                    v70 = (unint64_t *)&v10->__shared_owners_;
                    do
                      v59 = __ldaxr(v70);
                    while (__stlxr(v59 - 1, v70));
                    goto LABEL_166;
                  }
                  goto LABEL_168;
                }
              }
              v63 = (_QWORD *)*v63;
              if (!v63)
                goto LABEL_122;
            }
          case 3:
            v90 = *(_OWORD *)(v1 + 208);
            v28 = *((_QWORD *)v3 + 24);
            if (v28)
              (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)v28 + 48))(v28, &v90);
            goto LABEL_168;
          default:
            if (v13 != 99)
            {
              if (v13 != 100)
                goto LABEL_168;
              if (v10)
              {
                v18 = (unint64_t *)&v10->__shared_owners_;
                do
                  v19 = __ldxr(v18);
                while (__stxr(v19 + 1, v18));
                do
                  v20 = __ldxr(v18);
                while (__stxr(v20 + 1, v18));
              }
              v96 = 0;
              v46 = operator new(0x20uLL);
              *v46 = &off_250AF46A0;
              v46[1] = v3;
              v46[2] = v10;
              v46[3] = v1;
              v96 = v46;
              sub_2397A1694((pthread_mutex_t *)(v1 + 344));
              v47 = *(_QWORD *)(v1 + 328);
              if (!v47)
              {
                if (!v96)
                  sub_2394172E0();
                (*(void (**)(_BYTE *))(*(_QWORD *)v96 + 48))(v96);
              }
              sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
              v48 = v96;
              if (v96 == v95)
              {
                v48 = v95;
                v49 = 4;
              }
              else
              {
                if (!v96)
                {
LABEL_98:
                  if (v47)
                    sub_239B16980(*(unsigned int **)(v1 + 288), &v92);
                  if (!v10)
                    goto LABEL_168;
                  v61 = (unint64_t *)&v10->__shared_owners_;
                  do
                    v59 = __ldaxr(v61);
                  while (__stlxr(v59 - 1, v61));
                  goto LABEL_166;
                }
                v49 = 5;
              }
              (*(void (**)(void))(*v48 + 8 * v49))();
              goto LABEL_98;
            }
            if (v10)
            {
              v21 = (unint64_t *)&v10->__shared_owners_;
              do
                v22 = __ldxr(v21);
              while (__stxr(v22 + 1, v21));
              do
                v23 = __ldxr(v21);
              while (__stxr(v23 + 1, v21));
            }
            v98 = 0;
            v38 = operator new(0x20uLL);
            *v38 = &off_250AF4658;
            v38[1] = v3;
            v38[2] = v10;
            v38[3] = v1;
            v98 = v38;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v39 = *(_QWORD *)(v1 + 328);
            if (!v39)
            {
              if (!v98)
                sub_2394172E0();
              (*(void (**)(_BYTE *))(*(_QWORD *)v98 + 48))(v98);
            }
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v40 = v98;
            if (v98 == v97)
            {
              v40 = v97;
              v41 = 4;
            }
            else
            {
              if (!v98)
              {
LABEL_90:
                if (v39)
                  sub_239B16980(*(unsigned int **)(v1 + 288), &v92);
                if (!v10)
                  goto LABEL_168;
                v60 = (unint64_t *)&v10->__shared_owners_;
                do
                  v59 = __ldaxr(v60);
                while (__stlxr(v59 - 1, v60));
LABEL_166:
                if (!v59)
                {
                  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
                  std::__shared_weak_count::__release_weak(v10);
                }
                goto LABEL_168;
              }
              v41 = 5;
            }
            (*(void (**)(void))(*v40 + 8 * v41))();
            goto LABEL_90;
        }
        break;
      }
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
    if (*((_QWORD *)&v93 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
}

void sub_239B188B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,char *a34)
{
  std::__shared_weak_count *v34;
  pthread_mutex_t *v35;
  char *v37;
  uint64_t v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;

  sub_2397A16B4(v35);
  v37 = a34;
  if (a34 == &a31)
  {
    v38 = 4;
    v37 = &a31;
  }
  else
  {
    if (!a34)
    {
LABEL_6:
      if (v34)
      {
        p_shared_owners = (unint64_t *)&v34->__shared_owners_;
        do
          v40 = __ldaxr(p_shared_owners);
        while (__stlxr(v40 - 1, p_shared_owners));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      if (a14)
      {
        v41 = (unint64_t *)&a14->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
          std::__shared_weak_count::__release_weak(a14);
        }
      }
      if (a16)
      {
        v43 = (unint64_t *)&a16->__shared_owners_;
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
          std::__shared_weak_count::__release_weak(a16);
        }
      }
      _Unwind_Resume(a1);
    }
    v38 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v37 + 8 * v38))();
  goto LABEL_6;
}

uint64_t sub_239B18D00(uint64_t a1, unsigned int *a2)
{
  pthread_mutex_t *v4;
  __int128 v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v17;

  v4 = (pthread_mutex_t *)(a2 + 44);
  sub_2397A1694((pthread_mutex_t *)(a2 + 44));
  if (*((_QWORD *)a2 + 6))
  {
LABEL_4:
    v5 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 2) + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                   + 16 * *((_QWORD *)a2 + 5));
    v17 = v5;
    if (*((_QWORD *)&v5 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
      v8 = *(std::__shared_weak_count **)(*(_QWORD *)(*((_QWORD *)a2 + 2)
                                                    + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                                        + 16 * *((_QWORD *)a2 + 5)
                                        + 8);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
    }
    v11 = *((_QWORD *)a2 + 6) - 1;
    v12 = *((_QWORD *)a2 + 5) + 1;
    *((_QWORD *)a2 + 5) = v12;
    *((_QWORD *)a2 + 6) = v11;
    if (v12 >= 0x200)
    {
      operator delete(**((void ***)a2 + 2));
      *((_QWORD *)a2 + 2) += 8;
      v11 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a2 + 5) -= 256;
    }
    if (v11 < *a2)
      pthread_cond_signal((pthread_cond_t *)(a2 + 20));
    *(_OWORD *)a1 = v17;
    if (*((_QWORD *)&v17 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v17 + 1) + 16))(*((_QWORD *)&v17 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v17 + 1));
      }
    }
    else
    {
      *(_BYTE *)(a1 + 16) = 1;
    }
  }
  else
  {
    while (!*((_BYTE *)a2 + 56))
    {
      ++*((_QWORD *)a2 + 9);
      pthread_cond_wait((pthread_cond_t *)(a2 + 32), v4);
      --*((_QWORD *)a2 + 9);
      if (*((_QWORD *)a2 + 6))
        goto LABEL_4;
    }
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 0;
  }
  return sub_2397A16B4(v4);
}

void sub_239B18ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pthread_mutex_t *v9;

  sub_239A4D7C0((uint64_t)&a9);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_239B18EF8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  pthread_mutex_t *v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v7 = *(int8x8_t *)(a1 + 312);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8(v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v9 = a2;
      if (*(_QWORD *)&v7 <= a2)
        v9 = a2 % *(_QWORD *)&v7;
    }
    else
    {
      v9 = (*(_QWORD *)&v7 - 1) & a2;
    }
    v10 = *(_QWORD **)(*(_QWORD *)(a1 + 304) + 8 * v9);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (v11)
      {
        if (v8.u32[0] < 2uLL)
        {
          v12 = *(_QWORD *)&v7 - 1;
          while (1)
          {
            v14 = v11[1];
            if (v14 == a2)
            {
              if (v11[2] == a2)
                goto LABEL_21;
            }
            else if ((v14 & v12) != v9)
            {
              goto LABEL_22;
            }
            v11 = (_QWORD *)*v11;
            if (!v11)
              goto LABEL_22;
          }
        }
        do
        {
          v13 = v11[1];
          if (v13 == a2)
          {
            if (v11[2] == a2)
            {
LABEL_21:
              v15 = 0;
              goto LABEL_24;
            }
          }
          else
          {
            if (v13 >= *(_QWORD *)&v7)
              v13 %= *(_QWORD *)&v7;
            if (v13 != v9)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_22:
  v16 = *(_QWORD *)(a3 + 24);
  if (!v16)
    sub_2394172E0();
  (*(void (**)(uint64_t))(*(_QWORD *)v16 + 48))(v16);
  v15 = 1;
LABEL_24:
  sub_2397A16B4(v6);
  return v15;
}

void sub_239B19038(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B19050(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF46A0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B190B4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF46A0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B19128(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF46A0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B19180(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF46A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B191B8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B19210(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B19268(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned int *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unsigned __int16 i;
  uint64_t v27;
  uint64_t v29;
  unsigned int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  pthread_cond_t v37;
  pthread_cond_t v38;
  pthread_mutex_t v39;
  _BYTE v40[24];
  _BYTE *v41;
  uint64_t v42;

  v1 = a1;
  v42 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD **)(a1 + 24);
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_2397A1618(&v39);
  v30 = 0x7FFFFFFF;
  pthread_cond_init(&v37, 0);
  pthread_cond_init(&v38, 0);
  v3 = (_QWORD *)v2[3];
  if (!v3)
    goto LABEL_44;
  v29 = v1;
  v4 = 0;
  do
  {
    v6 = v3[2];
    v5 = v3[3];
    v7 = (std::__shared_weak_count *)v3[4];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }
    if (!v5 || !v2[25])
    {
      if (!v7)
        goto LABEL_4;
      goto LABEL_36;
    }
    if (v7)
    {
      v10 = (unint64_t *)&v7->__shared_owners_;
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
      v12 = v2[34];
      if (!*(_QWORD *)(v12 + 272))
      {
LABEL_50:
        sub_239A444D4((uint64_t)"unknown file", 546, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      v13 = (unint64_t *)&v7->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v15 = *(unsigned int **)(v12 + 272);
      do
        v16 = __ldxr(v13);
      while (__stxr(v16 + 1, v13));
    }
    else
    {
      v15 = *(unsigned int **)(v2[34] + 272);
      if (!v15)
        goto LABEL_50;
    }
    v41 = 0;
    v17 = operator new(0x38uLL);
    *v17 = &off_250AF46E8;
    v17[1] = v6;
    v17[2] = v5;
    v17[3] = v7;
    v17[4] = &v30;
    v17[5] = v2;
    v41 = v17;
    sub_2394D0CC4(v15, (uint64_t)v40);
    v18 = v41;
    if (v41 == v40)
    {
      v18 = v40;
      v19 = 4;
      goto LABEL_26;
    }
    if (v41)
    {
      v19 = 5;
LABEL_26:
      (*(void (**)(void))(*v18 + 8 * v19))();
    }
    if (!v7)
    {
      ++v4;
      goto LABEL_4;
    }
    v20 = (unint64_t *)&v7->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    ++v4;
    v22 = (unint64_t *)&v7->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_36:
    v24 = (unint64_t *)&v7->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_4:
    v3 = (_QWORD *)*v3;
  }
  while (v3);
  v1 = v29;
  if (v4 && (unsigned __int16)sub_2395BFB54(&v30) >= 0x100u)
  {
    do
      --v4;
    while (v4 && (unsigned __int16)sub_2395BFB54(&v30) > 0xFFu);
  }
LABEL_44:
  sub_2395C2A4C((uint64_t)&v30);
  for (i = sub_2395BFB54(&v30); i >= 0x100u; i = sub_2395BFB54(&v30))
    ;
  v27 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 256);
  if (v27)
  {
    v40[0] = 1;
    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v27 + 48))(v27, v40);
  }
  return sub_2395C29C4((uint64_t)&v30);
}

void sub_239B195C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_2395C29C4((uint64_t)&a11);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B197B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF46E8;
  v2 = (std::__shared_weak_count *)a1[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B19814(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF46E8;
  v1 = (std::__shared_weak_count *)a1[3];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B19888(__n128 *a1)
{
  __n128 *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  __n128 result;

  v2 = (__n128 *)operator new(0x38uLL);
  v3 = a1->n128_u64[1];
  v4 = a1[1].n128_u64[0];
  v2->n128_u64[0] = (unint64_t)&off_250AF46E8;
  v2->n128_u64[1] = v3;
  v5 = a1[1].n128_u64[1];
  v2[1].n128_u64[0] = v4;
  v2[1].n128_u64[1] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[2];
  v2[2] = result;
  return result;
}

__n128 sub_239B198E4(__n128 *a1, __n128 *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __n128 result;

  v2 = a1->n128_u64[1];
  v3 = a1[1].n128_u64[0];
  a2->n128_u64[0] = (unint64_t)&off_250AF46E8;
  a2->n128_u64[1] = v2;
  v4 = a1[1].n128_u64[1];
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = a1[2];
  a2[2] = result;
  return result;
}

void sub_239B19920(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B19978(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B199D0(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v2 = a1[5];
  v3 = (std::__shared_weak_count *)a1[3];
  v12 = a1[2];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v14 = a1[1];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v12, &v14);
  v7 = v13;
  if (v13)
  {
    v8 = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (unsigned int *)a1[4];
  LOBYTE(v14) = 1;
  return sub_2395BFE44(v10, &v14);
}

void sub_239B19A90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B19AD4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF4658;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B19B38(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF4658;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B19BAC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF4658;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B19C04(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF4658;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B19C3C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B19C94(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B19CEC(uint64_t a1)
{
  uint64_t result;

  sub_239467C88(*(_QWORD *)(a1 + 24));
  result = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 224);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

_QWORD *sub_239B19D30(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF4610;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B19D94(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF4610;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B19E08(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF4610;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B19E60(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF4610;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B19E98(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B19EF0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B19F48(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  char v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 8);
  v4 = (std::__shared_weak_count *)v3[16];
  v15 = v3[15];
  v16 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v3 = *(_QWORD **)(a1 + 8);
  }
  v17 = v3[14];
  v7 = *(_QWORD *)(v2 + 200);
  if (!v7)
    sub_2394172E0();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v15, &v17);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(v12 + 160);
  if (v13)
  {
    LOBYTE(v17) = v8;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v13 + 48))(v13, &v17);
    v12 = *(_QWORD *)(a1 + 8);
  }
  return sub_239B1A07C(v2, *(_QWORD *)(v12 + 112));
}

void sub_239B1A038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B1A07C(uint64_t a1, unint64_t a2)
{
  pthread_mutex_t *v4;
  int8x8_t v5;
  _QWORD *v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD **v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *__p;

  v4 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v5 = *(int8x8_t *)(a1 + 312);
  if (v5)
  {
    v6 = (_QWORD *)(a1 + 304);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = a2;
      if (*(_QWORD *)&v5 <= a2)
        v8 = a2 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*v6 + 8 * v8);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v13 == a2)
            {
              if (v10[2] == a2)
                goto LABEL_22;
            }
            else if ((v13 & v11) != v8)
            {
              return sub_2397A16B4(v4);
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              return sub_2397A16B4(v4);
          }
        }
        do
        {
          v12 = v10[1];
          if (v12 == a2)
          {
            if (v10[2] == a2)
            {
LABEL_22:
              sub_239A78378((uint64_t)&__p, v6, v10);
              if (__p)
                operator delete(__p);
              return sub_2397A16B4(v4);
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              return sub_2397A16B4(v4);
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  return sub_2397A16B4(v4);
}

_QWORD *sub_239B1A1AC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF4580;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B1A210(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF4580;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B1A284(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF4580;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B1A2DC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF4580;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B1A314(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B1A36C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B1A3C4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  uint64_t v28;
  int8x8_t v29;
  uint8x8_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD **v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD **v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  float v43;
  float v44;
  _BOOL8 v46;
  unint64_t v47;
  unint64_t v48;
  size_t prime;
  unint64_t v50;
  unint64_t v51;
  uint8x8_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  int8x8_t v72;
  _QWORD *v73;
  uint8x8_t v74;
  unint64_t v75;
  _QWORD **v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t *v93;
  unint64_t v94;
  _QWORD *v95;
  char v96;
  _QWORD *v97;
  uint64_t v98;
  unint64_t *v99;
  unint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t *v109;
  unint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  unint64_t *v114;
  unint64_t v115;
  unint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t *v123;
  unint64_t v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  __int128 v128;
  void *v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  _QWORD v132[3];
  _QWORD *v133;
  void *__p[9];
  char v135;
  uint64_t v136;
  void *v137;
  unint64_t v138;
  std::__shared_weak_count *v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD v145[3];
  _QWORD *v146;
  uint64_t v147;

  v147 = *MEMORY[0x24BDAC8D0];
  v2 = (_QWORD *)a1[1];
  if (!v2[7])
  {
    v10 = v2[13];
    if (v10)
    {
      LOBYTE(__p[0]) = 0;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)v10 + 48))(v10, __p);
    }
    return;
  }
  v4 = a1[3];
  std::mutex::lock((std::mutex *)(v4 + 80));
  v5 = (uint64_t *)(v4 + 8);
  v6 = v2[6];
  v7 = *(_QWORD *)(v4 + 16);
  if (!v7)
    goto LABEL_24;
  v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
  v8.i16[0] = vaddlv_u8(v8);
  v1 = (std::__shared_weak_count *)v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v9 = v2[6];
    if (v6 >= v7)
      v9 = v6 % v7;
  }
  else
  {
    v9 = (v7 - 1) & v6;
  }
  v11 = *(_QWORD **)(*v5 + 8 * v9);
  if (!v11 || (v12 = (_QWORD *)*v11) == 0)
  {
LABEL_24:
    if ((unint64_t)(*(_QWORD *)(v4 + 32) + 1) > *(_QWORD *)(v4 + 48))
    {
      v16 = *(_QWORD *)(v4 + 72);
      if (v16)
      {
        v17 = *(uint64_t **)(v4 + 56);
        v6 = v17[2];
        if ((v7 & (v7 - 1)) != 0)
        {
          v25 = v17[2];
          if (v6 >= v7)
            v25 = v6 % v7;
          v18 = *(_QWORD **)(*v5 + 8 * v25);
          do
          {
            do
              v18 = (_QWORD *)*v18;
            while (v18[1] != v6);
          }
          while (v18[2] != v6);
        }
        else
        {
          v18 = *(_QWORD **)(*v5 + 8 * (v6 & (v7 - 1)));
          do
          {
            do
              v18 = (_QWORD *)*v18;
            while (v18[1] != v6);
          }
          while (v18[2] != v6);
        }
        v7 = v18[3];
        v1 = (std::__shared_weak_count *)v18[4];
        if (v1)
        {
          p_shared_owners = (unint64_t *)&v1->__shared_owners_;
          do
            v27 = __ldxr(p_shared_owners);
          while (__stxr(v27 + 1, p_shared_owners));
          v17 = *(uint64_t **)(v4 + 56);
          v16 = *(_QWORD *)(v4 + 72);
        }
        v28 = *v17;
        *(_QWORD *)(v28 + 8) = v17[1];
        *(_QWORD *)v17[1] = v28;
        *(_QWORD *)(v4 + 72) = v16 - 1;
        operator delete(v17);
        v29 = *(int8x8_t *)(v4 + 16);
        if (v29)
        {
          v30 = (uint8x8_t)vcnt_s8(v29);
          v30.i16[0] = vaddlv_u8(v30);
          if (v30.u32[0] > 1uLL)
          {
            v31 = v6;
            if (v6 >= *(_QWORD *)&v29)
              v31 = v6 % *(_QWORD *)&v29;
          }
          else
          {
            v31 = (*(_QWORD *)&v29 - 1) & v6;
          }
          v32 = *v5;
          v33 = *(_QWORD ***)(*v5 + 8 * v31);
          if (v33)
          {
            v34 = *v33;
            if (*v33)
            {
              v35 = *(_QWORD *)&v29 - 1;
              if (v30.u32[0] < 2uLL)
              {
                while (1)
                {
                  v36 = v34[1];
                  if (v36 == v6)
                  {
                    if (v34[2] == v6)
                      goto LABEL_98;
                  }
                  else if ((v36 & v35) != v31)
                  {
                    goto LABEL_140;
                  }
                  v34 = (_QWORD *)*v34;
                  if (!v34)
                    goto LABEL_140;
                }
              }
              do
              {
                v37 = v34[1];
                if (v37 == v6)
                {
                  if (v34[2] == v6)
                  {
LABEL_98:
                    if (v30.u32[0] > 1uLL)
                    {
                      v50 = v6;
                      if (v6 >= *(_QWORD *)&v29)
                        v50 = v6 % *(_QWORD *)&v29;
                    }
                    else
                    {
                      v50 = v35 & v6;
                    }
                    v54 = *(_QWORD **)(v32 + 8 * v50);
                    do
                    {
                      v55 = v54;
                      v54 = (_QWORD *)*v54;
                    }
                    while (v54 != v34);
                    if (v55 == (_QWORD *)(v4 + 24))
                      goto LABEL_125;
                    v56 = v55[1];
                    if (v30.u32[0] > 1uLL)
                    {
                      if (v56 >= *(_QWORD *)&v29)
                        v56 %= *(_QWORD *)&v29;
                    }
                    else
                    {
                      v56 &= v35;
                    }
                    if (v56 != v50)
                    {
LABEL_125:
                      if (!*v34)
                        goto LABEL_126;
                      v57 = *(_QWORD *)(*v34 + 8);
                      if (v30.u32[0] > 1uLL)
                      {
                        if (v57 >= *(_QWORD *)&v29)
                          v57 %= *(_QWORD *)&v29;
                      }
                      else
                      {
                        v57 &= v35;
                      }
                      if (v57 != v50)
LABEL_126:
                        *(_QWORD *)(v32 + 8 * v50) = 0;
                    }
                    v58 = *v34;
                    v127 = v7;
                    if (*v34)
                    {
                      v59 = *(_QWORD *)(v58 + 8);
                      if (v30.u32[0] > 1uLL)
                      {
                        if (v59 >= *(_QWORD *)&v29)
                          v59 %= *(_QWORD *)&v29;
                      }
                      else
                      {
                        v59 &= v35;
                      }
                      if (v59 != v50)
                      {
                        *(_QWORD *)(*v5 + 8 * v59) = v55;
                        v58 = *v34;
                      }
                    }
                    *v55 = v58;
                    *v34 = 0;
                    --*(_QWORD *)(v4 + 32);
                    v60 = (std::__shared_weak_count *)v34[4];
                    if (v60)
                    {
                      v61 = (unint64_t *)&v60->__shared_owners_;
                      do
                        v62 = __ldaxr(v61);
                      while (__stlxr(v62 - 1, v61));
                      if (!v62)
                      {
                        ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
                        std::__shared_weak_count::__release_weak(v60);
                      }
                    }
                    operator delete(v34);
                    v7 = v127;
                    break;
                  }
                }
                else
                {
                  if (v37 >= *(_QWORD *)&v29)
                    v37 %= *(_QWORD *)&v29;
                  if (v37 != v31)
                    break;
                }
                v34 = (_QWORD *)*v34;
              }
              while (v34);
            }
          }
        }
LABEL_140:
        v63 = operator new(0x18uLL);
        v63[2] = v2[6];
        *v63 = v4 + 56;
        v64 = *(_QWORD **)(v4 + 64);
        v63[1] = v64;
        *v64 = v63;
        v65 = *(_QWORD *)(v4 + 72) + 1;
        *(_QWORD *)(v4 + 64) = v63;
        *(_QWORD *)(v4 + 72) = v65;
        sub_239B1B934(v4 + 8, v2[6], v2[6], v2[7], v2[8]);
        if (v1)
        {
          v66 = (unint64_t *)&v1->__shared_owners_;
          do
            v67 = __ldxr(v66);
          while (__stxr(v67 + 1, v66));
          do
            v68 = __ldaxr(v66);
          while (__stlxr(v68 - 1, v66));
          v69 = 0;
          v22 = 0;
          if (!v68)
            goto LABEL_145;
          goto LABEL_147;
        }
      }
      else
      {
        v7 = v2[7];
        v1 = (std::__shared_weak_count *)v2[8];
        if (v1)
        {
          v23 = (unint64_t *)&v1->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
        }
      }
      v22 = 0;
      goto LABEL_147;
    }
    v19 = operator new(0x18uLL);
    v19[2] = v6;
    *v19 = v4 + 56;
    v20 = *(_QWORD **)(v4 + 64);
    v19[1] = v20;
    *v20 = v19;
    v21 = *(_QWORD *)(v4 + 72) + 1;
    *(_QWORD *)(v4 + 64) = v19;
    *(_QWORD *)(v4 + 72) = v21;
    sub_239B1B934(v4 + 8, v2[6], v2[6], v2[7], v2[8]);
    goto LABEL_32;
  }
  v13 = v7 - 1;
  if (v8.u32[0] < 2uLL)
  {
    while (1)
    {
      v14 = v12[1];
      if (v14 == v6)
      {
        if (v12[2] == v6)
          goto LABEL_67;
      }
      else if ((v14 & v13) != v9)
      {
        goto LABEL_24;
      }
      v12 = (_QWORD *)*v12;
      if (!v12)
        goto LABEL_24;
    }
  }
  while (1)
  {
    v15 = v12[1];
    if (v15 == v6)
      break;
    if (v15 >= v7)
      v15 %= v7;
    if (v15 != v9)
      goto LABEL_24;
LABEL_19:
    v12 = (_QWORD *)*v12;
    if (!v12)
      goto LABEL_24;
  }
  if (v12[2] != v6)
    goto LABEL_19;
LABEL_67:
  if (v8.u32[0] > 1uLL)
  {
    v38 = v2[6];
    if (v6 >= v7)
      v38 = v6 % v7;
  }
  else
  {
    v38 = v13 & v6;
  }
  v39 = *(_QWORD ***)(*v5 + 8 * v38);
  if (v39)
  {
    v40 = *v39;
    if (*v39)
    {
      if (v8.u32[0] < 2uLL)
      {
        while (1)
        {
          v41 = v40[1];
          if (v41 == v6)
          {
            if (v40[2] == v6)
              goto LABEL_266;
          }
          else if ((v41 & v13) != v38)
          {
            goto LABEL_86;
          }
          v40 = (_QWORD *)*v40;
          if (!v40)
            goto LABEL_86;
        }
      }
      do
      {
        v42 = v40[1];
        if (v42 == v6)
        {
          if (v40[2] == v6)
            goto LABEL_266;
        }
        else
        {
          if (v42 >= v7)
            v42 %= v7;
          if (v42 != v38)
            break;
        }
        v40 = (_QWORD *)*v40;
      }
      while (v40);
    }
  }
LABEL_86:
  v40 = operator new(0x28uLL);
  *v40 = 0;
  v40[1] = v6;
  v40[3] = 0;
  v40[4] = 0;
  v40[2] = v6;
  v43 = (float)(unint64_t)(*(_QWORD *)(v4 + 32) + 1);
  v44 = *(float *)(v4 + 40);
  if ((float)(v44 * (float)v7) < v43)
  {
    v46 = v7 < 3 || (unint64_t)v1 > 1;
    v47 = v46 | (2 * v7);
    v48 = vcvtps_u32_f32(v43 / v44);
    if (v47 <= v48)
      prime = v48;
    else
      prime = v47;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(v4 + 16);
    }
    if (prime > v7)
      goto LABEL_103;
    if (prime < v7)
    {
      v51 = vcvtps_u32_f32((float)*(unint64_t *)(v4 + 32) / *(float *)(v4 + 40));
      if (v7 < 3 || (v52 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v52.i16[0] = vaddlv_u8(v52), v52.u32[0] > 1uLL))
      {
        v51 = std::__next_prime(v51);
      }
      else
      {
        v53 = 1 << -(char)__clz(v51 - 1);
        if (v51 >= 2)
          v51 = v53;
      }
      if (prime <= v51)
        prime = v51;
      if (prime < v7)
LABEL_103:
        sub_239A501C8(v4 + 8, prime);
    }
    v7 = *(_QWORD *)(v4 + 16);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v38 = v6 % v7;
      else
        v38 = v6;
    }
    else
    {
      v38 = (v7 - 1) & v6;
    }
  }
  v118 = *v5;
  v119 = *(_QWORD **)(*v5 + 8 * v38);
  if (v119)
  {
    *v40 = *v119;
    goto LABEL_264;
  }
  *v40 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v4 + 24) = v40;
  *(_QWORD *)(v118 + 8 * v38) = v4 + 24;
  if (*v40)
  {
    v120 = *(_QWORD *)(*v40 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v120 >= v7)
        v120 %= v7;
    }
    else
    {
      v120 &= v7 - 1;
    }
    v119 = (_QWORD *)(*v5 + 8 * v120);
LABEL_264:
    *v119 = v40;
  }
  ++*(_QWORD *)(v4 + 32);
LABEL_266:
  v122 = v2[7];
  v121 = v2[8];
  if (v121)
  {
    v123 = (unint64_t *)(v121 + 8);
    do
      v124 = __ldxr(v123);
    while (__stxr(v124 + 1, v123));
  }
  v1 = (std::__shared_weak_count *)v40[4];
  v40[3] = v122;
  v40[4] = v121;
  if (!v1)
  {
LABEL_32:
    v6 = 0;
    v22 = 1;
    goto LABEL_147;
  }
  v125 = (unint64_t *)&v1->__shared_owners_;
  do
    v126 = __ldaxr(v125);
  while (__stlxr(v126 - 1, v125));
  v6 = 0;
  v69 = 1;
  v22 = 1;
  if (!v126)
  {
LABEL_145:
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
    v22 = v69;
  }
LABEL_147:
  std::mutex::unlock((std::mutex *)(v4 + 80));
  v70 = a1[1];
  if (*(_BYTE *)(v70 + 72))
  {
    v71 = *(_QWORD *)(v70 + 48);
    if (sub_2397A1B98((pthread_mutex_t *)(v4 + 344)))
    {
      sub_2397A16B4((pthread_mutex_t *)(v4 + 344));
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v72 = *(int8x8_t *)(v4 + 312);
    if (v72)
    {
      v73 = (_QWORD *)(v4 + 304);
      v74 = (uint8x8_t)vcnt_s8(v72);
      v74.i16[0] = vaddlv_u8(v74);
      if (v74.u32[0] > 1uLL)
      {
        v75 = v71;
        if (*(_QWORD *)&v72 <= v71)
          v75 = v71 % *(_QWORD *)&v72;
      }
      else
      {
        v75 = (*(_QWORD *)&v72 - 1) & v71;
      }
      v76 = *(_QWORD ***)(*v73 + 8 * v75);
      if (v76)
      {
        v77 = *v76;
        if (*v76)
        {
          if (v74.u32[0] < 2uLL)
          {
            v78 = *(_QWORD *)&v72 - 1;
            while (1)
            {
              v80 = v77[1];
              if (v80 == v71)
              {
                if (v77[2] == v71)
                  goto LABEL_170;
              }
              else if ((v80 & v78) != v75)
              {
                goto LABEL_172;
              }
              v77 = (_QWORD *)*v77;
              if (!v77)
                goto LABEL_172;
            }
          }
          do
          {
            v79 = v77[1];
            if (v79 == v71)
            {
              if (v77[2] == v71)
              {
LABEL_170:
                sub_239A78378((uint64_t)__p, v73, v77);
                if (__p[0])
                  operator delete(__p[0]);
                break;
              }
            }
            else
            {
              if (v79 >= *(_QWORD *)&v72)
                v79 %= *(_QWORD *)&v72;
              if (v79 != v75)
                break;
            }
            v77 = (_QWORD *)*v77;
          }
          while (v77);
        }
      }
    }
  }
LABEL_172:
  if (!v22)
  {
    v81 = a1[1];
    if (!*(_QWORD *)(v4 + 200) || *(_QWORD *)(v81 + 48) == v6 && *(_BYTE *)(v81 + 72))
      goto LABEL_177;
    v86 = (std::__shared_weak_count *)a1[2];
    if (v86)
    {
      v87 = (unint64_t *)&v86->__shared_owners_;
      do
        v88 = __ldxr(v87);
      while (__stxr(v88 + 1, v87));
    }
    if (v1)
    {
      v89 = (unint64_t *)&v1->__shared_owners_;
      do
        v90 = __ldxr(v89);
      while (__stxr(v90 + 1, v89));
    }
    if (v86)
    {
      v91 = (unint64_t *)&v86->__shared_owners_;
      do
        v92 = __ldxr(v91);
      while (__stxr(v92 + 1, v91));
    }
    if (v1)
    {
      v93 = (unint64_t *)&v1->__shared_owners_;
      do
        v94 = __ldxr(v93);
      while (__stxr(v94 + 1, v93));
    }
    v146 = 0;
    v95 = operator new(0x40uLL);
    *v95 = &off_250AF45C8;
    v95[1] = v81;
    v95[2] = v86;
    v95[3] = v6;
    v95[4] = v7;
    v95[5] = v1;
    *((_BYTE *)v95 + 48) = 1;
    v95[7] = v4;
    v146 = v95;
    v96 = sub_239A82B00(v4, v6, v145);
    v97 = v146;
    if (v146 == v145)
    {
      v98 = 4;
      v97 = v145;
    }
    else
    {
      if (!v146)
        goto LABEL_205;
      v98 = 5;
    }
    (*(void (**)(void))(*v97 + 8 * v98))();
LABEL_205:
    if ((v96 & 1) != 0)
    {
LABEL_237:
      if (v1)
      {
        v114 = (unint64_t *)&v1->__shared_owners_;
        do
          v115 = __ldaxr(v114);
        while (__stlxr(v115 - 1, v114));
        if (!v115)
        {
          ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
          std::__shared_weak_count::__release_weak(v1);
        }
      }
      if (v86)
      {
        v116 = (unint64_t *)&v86->__shared_owners_;
        do
          v117 = __ldaxr(v116);
        while (__stlxr(v117 - 1, v116));
        if (!v117)
        {
          ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
          std::__shared_weak_count::__release_weak(v86);
        }
      }
      goto LABEL_179;
    }
    v129 = (void *)v6;
    v130 = v7;
    v131 = v1;
    if (v1)
    {
      v99 = (unint64_t *)&v1->__shared_owners_;
      do
        v100 = __ldxr(v99);
      while (__stxr(v100 + 1, v99));
    }
    v101 = v132;
    v102 = a1[1];
    v103 = *(_QWORD *)(v102 + 104);
    if (v103)
    {
      if (v103 == v102 + 80)
      {
        v133 = v132;
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v103 + 24))(v103, v132);
LABEL_214:
        LODWORD(__p[0]) = 2;
        __p[7] = 0;
        __p[8] = 0;
        __p[5] = 0;
        v135 = 0;
        v136 = 0;
        v137 = v129;
        v138 = v130;
        v139 = v131;
        if (v131)
        {
          v104 = &v131->__shared_owners_;
          do
            v105 = __ldxr((unint64_t *)v104);
          while (__stxr(v105 + 1, (unint64_t *)v104));
        }
        v106 = (uint64_t)v133;
        if (v133)
        {
          if (v133 == v132)
          {
            v141 = &v140;
            (*(void (**)(_QWORD *))(v132[0] + 24))(v132);
LABEL_222:
            v143 = 0;
            v144 = 0;
            __p[1] = v129;
            __p[6] = v129;
            v142 = 0;
            v137 = v129;
            v107 = operator new(0x120uLL);
            v107[1] = 0;
            v107[2] = 0;
            *v107 = &off_250AF4548;
            *(_QWORD *)&v128 = sub_239B16764((uint64_t)(v107 + 3), (uint64_t)__p);
            *((_QWORD *)&v128 + 1) = v107;
            sub_239A82E8C(__p);
            if (v133 == v132)
            {
              v108 = 4;
            }
            else
            {
              if (!v133)
                goto LABEL_227;
              v108 = 5;
              v101 = v133;
            }
            (*(void (**)(_QWORD *))(*v101 + 8 * v108))(v101);
LABEL_227:
            if (v131)
            {
              v109 = &v131->__shared_owners_;
              do
                v110 = __ldaxr((unint64_t *)v109);
              while (__stlxr(v110 - 1, (unint64_t *)v109));
              if (!v110)
              {
                ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
                std::__shared_weak_count::__release_weak(v131);
              }
            }
            sub_239B16980(*(unsigned int **)(v4 + 288), &v128);
            v111 = (std::__shared_weak_count *)*((_QWORD *)&v128 + 1);
            if (*((_QWORD *)&v128 + 1))
            {
              v112 = (unint64_t *)(*((_QWORD *)&v128 + 1) + 8);
              do
                v113 = __ldaxr(v112);
              while (__stlxr(v113 - 1, v112));
              if (!v113)
              {
                ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
                std::__shared_weak_count::__release_weak(v111);
              }
            }
            goto LABEL_237;
          }
          v106 = (*(uint64_t (**)(void))(*v133 + 16))();
        }
        v141 = (uint64_t *)v106;
        goto LABEL_222;
      }
      v103 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v103 + 16))(v103);
    }
    v133 = (_QWORD *)v103;
    goto LABEL_214;
  }
  v81 = a1[1];
LABEL_177:
  v82 = *(_QWORD *)(v81 + 104);
  if (v82)
  {
    LOBYTE(__p[0]) = 1;
    (*(void (**)(uint64_t, void **))(*(_QWORD *)v82 + 48))(v82, __p);
  }
LABEL_179:
  if (v1)
    v83 = v22;
  else
    v83 = 1;
  if ((v83 & 1) == 0)
  {
    v84 = (unint64_t *)&v1->__shared_owners_;
    do
      v85 = __ldaxr(v84);
    while (__stlxr(v85 - 1, v84));
    if (!v85)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B1B0C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  std::mutex *v36;
  _QWORD *v37;
  std::__shared_weak_count *v39;
  unint64_t *p_shared_owners;
  unint64_t v41;

  v39 = (std::__shared_weak_count *)v37[4];
  if (v39)
  {
    p_shared_owners = (unint64_t *)&v39->__shared_owners_;
    do
      v41 = __ldaxr(p_shared_owners);
    while (__stlxr(v41 - 1, p_shared_owners));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  operator delete(v37);
  std::mutex::unlock(v36);
  _Unwind_Resume(a1);
}

uint64_t sub_239B1B464(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AF45C8;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_239B1B508(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AF45C8;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B1B5BC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  result = operator new(0x40uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF45C8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *((_BYTE *)result + 24) = 0;
  *((_BYTE *)result + 48) = 0;
  if (*(_BYTE *)(a1 + 48))
  {
    v7 = *(_QWORD *)(a1 + 32);
    result[3] = *(_QWORD *)(a1 + 24);
    result[4] = v7;
    v8 = *(_QWORD *)(a1 + 40);
    result[5] = v8;
    if (v8)
    {
      v9 = (unint64_t *)(v8 + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    *((_BYTE *)result + 48) = 1;
  }
  result[7] = *(_QWORD *)(a1 + 56);
  return result;
}

uint64_t sub_239B1B654(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *(_QWORD *)a2 = &off_250AF45C8;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  if (*(_BYTE *)(result + 48))
  {
    v6 = *(_QWORD *)(result + 32);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(result + 24);
    *(_QWORD *)(a2 + 32) = v6;
    v7 = *(_QWORD *)(result + 40);
    *(_QWORD *)(a2 + 40) = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 8);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    *(_BYTE *)(a2 + 48) = 1;
  }
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(result + 56);
  return result;
}

void sub_239B1B6CC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (!*(_BYTE *)(a1 + 48))
    goto LABEL_6;
  v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v2)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  else
  {
LABEL_6:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_239B1B774(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (*((_BYTE *)__p + 48))
  {
    v2 = (std::__shared_weak_count *)__p[5];
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B1B80C(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  char v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;

  v2 = a1[7];
  v3 = (std::__shared_weak_count *)a1[5];
  v13 = a1[4];
  v14 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v15 = a1[3];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v13, &v15);
  v8 = v14;
  if (v14)
  {
    v9 = (unint64_t *)&v14->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = *(_QWORD *)(a1[1] + 104);
  if (v11)
  {
    LOBYTE(v15) = v7;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v11 + 48))(v11, &v15);
  }
  return sub_239B1A07C(v2, a1[3]);
}

void sub_239B1B8F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B1B934(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v11;
  uint8x8_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t *v19;
  unint64_t v20;
  float v21;
  float v22;
  _BOOL8 v23;
  unint64_t v24;
  unint64_t v25;
  size_t prime;
  int8x8_t v27;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;

  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v5 = a2;
      if (v11 <= a2)
        v5 = a2 % v11;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
    v13 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
    if (v13)
    {
      v14 = (_QWORD *)*v13;
      if (v14)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == a2)
            {
              if (v14[2] == a2)
                return;
            }
            else if ((v16 & (v11 - 1)) != v5)
            {
              goto LABEL_22;
            }
            v14 = (_QWORD *)*v14;
            if (!v14)
              goto LABEL_22;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == a2)
          {
            if (v14[2] == a2)
              return;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v5)
              break;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_22:
  v17 = (_QWORD *)(a1 + 16);
  v18 = operator new(0x28uLL);
  *v18 = 0;
  v18[1] = a2;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  if (a5)
  {
    v19 = (unint64_t *)(a5 + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v22 = *(float *)(a1 + 32);
  if (!v11 || (float)(v22 * (float)v11) < v21)
  {
    v23 = 1;
    if (v11 >= 3)
      v23 = (v11 & (v11 - 1)) != 0;
    v24 = v23 | (2 * v11);
    v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25)
      prime = v25;
    else
      prime = v24;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v27 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v27)
      goto LABEL_37;
    if (prime < *(_QWORD *)&v27)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v27 < 3uLL || (v29 = (uint8x8_t)vcnt_s8(v27), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (prime <= v28)
        prime = v28;
      if (prime < *(_QWORD *)&v27)
LABEL_37:
        sub_239A501C8(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v11 <= a2)
        v5 = a2 % v11;
      else
        v5 = a2;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
  }
  v31 = *(_QWORD *)a1;
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v32)
  {
    *v18 = *v32;
LABEL_61:
    *v32 = v18;
    goto LABEL_62;
  }
  *v18 = *v17;
  *v17 = v18;
  *(_QWORD *)(v31 + 8 * v5) = v17;
  if (*v18)
  {
    v33 = *(_QWORD *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v33 >= v11)
        v33 %= v11;
    }
    else
    {
      v33 &= v11 - 1;
    }
    v32 = (_QWORD *)(*(_QWORD *)a1 + 8 * v33);
    goto LABEL_61;
  }
LABEL_62:
  ++*(_QWORD *)(a1 + 24);
}

void sub_239B1BC38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B1BC4C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF44B8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B1BCB0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF44B8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B1BD24(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF44B8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B1BD7C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF44B8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B1BDB4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B1BE0C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B1BE64(_QWORD *a1)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  char v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  uint64_t *v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v2 = a1 + 1;
  v3 = a1[1];
  v4 = a1[3];
  ++*(_QWORD *)(v4 + 208);
  std::mutex::lock((std::mutex *)(v4 + 80));
  v5 = *(int8x8_t *)(v4 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v3 + 8);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = *(_QWORD *)(v3 + 8);
      if (v6 >= *(_QWORD *)&v5)
        v8 = v6 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & v6;
    }
    v9 = *(_QWORD **)(*(_QWORD *)(v4 + 8) + 8 * v8);
    if (v9)
    {
      v10 = (_QWORD *)*v9;
      if (v10)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v6 == v13)
            {
              if (v10[2] == v6)
                goto LABEL_47;
            }
            else if ((v13 & v11) != v8)
            {
              goto LABEL_21;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_21;
          }
        }
        do
        {
          v12 = v10[1];
          if (v6 == v12)
          {
            if (v10[2] == v6)
            {
LABEL_47:
              v28 = v10[3];
              v15 = (std::__shared_weak_count *)v10[4];
              if (v15)
              {
                p_shared_owners = (unint64_t *)&v15->__shared_owners_;
                do
                  v30 = __ldxr(p_shared_owners);
                while (__stxr(v30 + 1, p_shared_owners));
              }
              std::mutex::unlock((std::mutex *)(v4 + 80));
              ++*(_QWORD *)(v4 + 216);
              v31 = *(_QWORD *)v2;
              v32 = *(_QWORD *)(*(_QWORD *)v2 + 40);
              if (v32)
              {
                v40 = v28;
                v41 = v15;
                if (v15)
                {
                  v33 = (unint64_t *)&v15->__shared_owners_;
                  do
                    v34 = __ldxr(v33);
                  while (__stxr(v34 + 1, v33));
                  v32 = *(_QWORD *)(v31 + 40);
                  v39 = 1;
                  if (!v32)
                    sub_2394172E0();
                }
                else
                {
                  v39 = 1;
                }
                (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v32 + 48))(v32, &v40, &v39);
                v35 = v41;
                if (v41)
                {
                  v36 = (unint64_t *)&v41->__shared_owners_;
                  do
                    v37 = __ldaxr(v36);
                  while (__stlxr(v37 - 1, v36));
                  if (!v37)
                  {
                    ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
                    std::__shared_weak_count::__release_weak(v35);
                  }
                }
              }
              if (v15)
              {
                v38 = (unint64_t *)&v15->__shared_owners_;
                do
                  v22 = __ldaxr(v38);
                while (__stlxr(v22 - 1, v38));
LABEL_44:
                if (!v22)
                {
                  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                  std::__shared_weak_count::__release_weak(v15);
                }
              }
              return;
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_21:
  std::mutex::unlock((std::mutex *)(v4 + 80));
  v14 = *(_QWORD *)v2;
  if (*(_QWORD *)(v4 + 168))
  {
    v15 = (std::__shared_weak_count *)a1[2];
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      v18 = *(_QWORD *)(*(_QWORD *)v2 + 8);
      do
        v19 = __ldxr(v16);
      while (__stxr(v19 + 1, v16));
    }
    else
    {
      v18 = *(_QWORD *)(v14 + 8);
    }
    v23 = (uint64_t *)operator new(0x20uLL);
    *v23 = (uint64_t)&off_250AF4500;
    v23[1] = v14;
    v23[2] = (uint64_t)v15;
    v23[3] = v4;
    v42 = v23;
    v24 = sub_239A82B00(v4, v18, &v40);
    v25 = v42;
    if (v42 == &v40)
    {
      v26 = 4;
      v25 = &v40;
    }
    else
    {
      if (!v42)
        goto LABEL_39;
      v26 = 5;
    }
    (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_39:
    if ((v24 & 1) == 0)
    {
      sub_239B16980(*(unsigned int **)(v4 + 288), v2);
      --*(_QWORD *)(v4 + 208);
    }
    if (v15)
    {
      v27 = (unint64_t *)&v15->__shared_owners_;
      do
        v22 = __ldaxr(v27);
      while (__stlxr(v22 - 1, v27));
      goto LABEL_44;
    }
    return;
  }
  v20 = *(_QWORD *)(v14 + 40);
  if (v20)
  {
    v40 = 0;
    v41 = 0;
    v39 = 1;
    (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v20 + 48))(v20, &v40, &v39);
    v15 = v41;
    if (v41)
    {
      v21 = (unint64_t *)&v41->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      goto LABEL_44;
    }
  }
}

void sub_239B1C1EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  if (v13)
  {
    v17 = (unint64_t *)&v13->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B1C324(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF4500;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B1C388(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF4500;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B1C3FC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF4500;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B1C454(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF4500;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B1C48C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B1C4E4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B1C53C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  uint64_t v32[2];
  std::__shared_weak_count *v33;
  char v34;
  _BYTE v35[24];
  _BYTE *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 24);
  v37 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  v3 = *(_QWORD *)(v2 + 168);
  if (!v3)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v3 + 48))(&v30, v3, &v37);
  v4 = *(_QWORD *)(a1 + 8);
  if (v30)
  {
    v5 = *(_QWORD *)(v4 + 40);
    if (v5)
    {
      v37 = v30;
      v38 = v31;
      if (v31)
      {
        p_shared_owners = (unint64_t *)&v31->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        v5 = *(_QWORD *)(v4 + 40);
        LOBYTE(v32[0]) = 1;
        if (!v5)
          sub_2394172E0();
      }
      else
      {
        LOBYTE(v32[0]) = 1;
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v5 + 48))(v5, &v37, v32);
      v12 = v38;
      if (v38)
      {
        v13 = (unint64_t *)&v38->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
    }
    v32[0] = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
    v32[1] = v30;
    v33 = v31;
    if (v31)
    {
      v15 = (unint64_t *)&v31->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    v34 = 1;
    v17 = v35;
    v36 = 0;
    sub_239B1C974((uint64_t)&v37, v32);
    v18 = operator new(0x120uLL);
    v18[1] = 0;
    v18[2] = 0;
    *v18 = &off_250AF4548;
    *(_QWORD *)&v29 = sub_239B16764((uint64_t)(v18 + 3), (uint64_t)&v37);
    *((_QWORD *)&v29 + 1) = v18;
    sub_239A82E8C(&v37);
    if (v36 == v35)
    {
      v19 = 4;
    }
    else
    {
      if (!v36)
        goto LABEL_30;
      v19 = 5;
      v17 = v36;
    }
    (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
LABEL_30:
    v20 = v33;
    if (v33)
    {
      v21 = (unint64_t *)&v33->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    sub_239B16980(*(unsigned int **)(v2 + 288), &v29);
    v23 = (std::__shared_weak_count *)*((_QWORD *)&v29 + 1);
    if (*((_QWORD *)&v29 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    goto LABEL_40;
  }
  v8 = *(_QWORD *)(v4 + 40);
  if (v8)
  {
    v37 = 0;
    v38 = 0;
    LOBYTE(v32[0]) = 1;
    (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v8 + 48))(v8, &v37, v32);
    v9 = v38;
    if (v38)
    {
      v10 = (unint64_t *)&v38->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  sub_239B1A07C(v2, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8));
LABEL_40:
  v26 = v31;
  if (v31)
  {
    v27 = (unint64_t *)&v31->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
}

void sub_239B1C838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,std::__shared_weak_count *a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;

  if (a22)
  {
    p_shared_owners = (unint64_t *)&a22->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a22->__on_zero_shared)(a22);
      std::__shared_weak_count::__release_weak(a22);
    }
  }
  if (a12)
  {
    v25 = (unint64_t *)&a12->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B1C974(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = 1;
  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v4;
  v6 = a2[2];
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 24);
  v9 = a2[7];
  if (v9)
  {
    if ((uint64_t *)v9 == a2 + 4)
    {
      *(_QWORD *)(a1 + 104) = a1 + 80;
      (*(void (**)(uint64_t))(*(_QWORD *)a2[7] + 24))(a2[7]);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  *(_QWORD *)(a1 + 104) = v9;
LABEL_9:
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  v10 = *a2;
  *(_QWORD *)(a1 + 8) = *a2;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 112) = v10;
  return a1;
}

void sub_239B1CA3C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = *(std::__shared_weak_count **)(v1 + 64);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = *(_QWORD **)(v1 + 40);
  if (v6 == (_QWORD *)(v1 + 16))
  {
    v7 = 4;
    v6 = (_QWORD *)(v1 + 16);
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  _Unwind_Resume(exception_object);
}

void sub_239B1CAB0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF4458;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B1CAC0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF4458;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B1CAF0(uint64_t a1)
{
  pthread_mutex_t *v2;
  int v3;

  v2 = (pthread_mutex_t *)(a1 + 200);
  sub_2397A1694((pthread_mutex_t *)(a1 + 200));
  v3 = *(unsigned __int8 *)(a1 + 80);
  sub_2397A16B4(v2);
  if (!v3)
    sub_239B16548(a1 + 24);
  sub_2397A1694(v2);
  sub_2397A16B4(v2);
  pthread_cond_destroy((pthread_cond_t *)(a1 + 104));
  pthread_cond_destroy((pthread_cond_t *)(a1 + 152));
  sub_2397A163C(v2);
  return sub_239A7BCF8(a1 + 32);
}

void sub_239B1CB78()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B1CB8C()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF43D0;
  return result;
}

void sub_239B1CBB0(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF43D0;
}

uint64_t sub_239B1CBC8(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return 1;
}

void sub_239B1CC24()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B1CC38(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF4388;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B1CC70(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF4388;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B1CC90(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  std::ios_base *v22;
  char v23;
  std::string::size_type size;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  std::__fs::filesystem::path v29;
  const void *v30[3];
  void *v31[3];
  uint64_t v32[2];
  _QWORD v33[11];
  char v34;
  uint64_t v35;
  void *v36[2];
  unsigned __int8 v37;
  char v38;
  std::string v39;
  _QWORD v40[2];
  _BYTE v41[408];
  _QWORD v42[21];

  v42[19] = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD **)(a1 + 8);
  v5 = (int8x8_t)v4[1];
  if (v5)
  {
    v6 = *a2;
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = *a2;
      if (*(_QWORD *)&v5 <= v6)
        v8 = v6 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & v6;
    }
    v9 = *(_QWORD **)(*v4 + 8 * v8);
    if (v9)
    {
      v9 = (_QWORD *)*v9;
      if (v9)
      {
        if (v7.u32[0] < 2uLL)
        {
          v10 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v12 = v9[1];
            if (v12 == v6)
            {
              if (v9[2] == v6)
                goto LABEL_22;
            }
            else if ((v12 & v10) != v8)
            {
              goto LABEL_21;
            }
            v9 = (_QWORD *)*v9;
            if (!v9)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v9[1];
          if (v11 == v6)
          {
            if (v9[2] == v6)
              break;
          }
          else
          {
            if (v11 >= *(_QWORD *)&v5)
              v11 %= *(_QWORD *)&v5;
            if (v11 != v8)
              goto LABEL_21;
          }
          v9 = (_QWORD *)*v9;
        }
        while (v9);
      }
    }
  }
  else
  {
LABEL_21:
    v9 = 0;
  }
LABEL_22:
  sub_2396F295C(v9 + 3, *(_QWORD *)(a1 + 16), (uint64_t)&v29);
  std::__fs::filesystem::__status(&v29, 0);
  if (LOBYTE(v40[0]) == 255 || LOBYTE(v40[0]) == 0)
  {
    *a3 = 0;
    a3[1] = 0;
    goto LABEL_28;
  }
  v14 = (std::__shared_weak_count *)operator new(0x38uLL);
  v14->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  v14->__shared_weak_owners_ = 0;
  v14->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5A00;
  v14[1].__vftable = 0;
  v16 = (uint64_t)&v14[1];
  v14[1].__shared_owners_ = 0;
  v14[1].__shared_weak_owners_ = 0;
  LOBYTE(v14[2].__vftable) = 0;
  v17 = MEMORY[0x24BEDB838];
  v18 = MEMORY[0x24BEDB838] + 64;
  v19 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v20 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v21 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v42[0] = MEMORY[0x24BEDB838] + 64;
  v40[0] = v20;
  *(_QWORD *)((char *)v40 + *(_QWORD *)(v20 - 24)) = v21;
  v40[1] = 0;
  v22 = (std::ios_base *)((char *)v40 + *(_QWORD *)(v40[0] - 24));
  std::ios_base::init(v22, v41);
  v22[1].__vftable = 0;
  v22[1].__fmtflags_ = -1;
  v40[0] = v17 + 24;
  v42[0] = v18;
  MEMORY[0x23B83DC80](v41);
  std::ifstream::open();
  if ((v41[*(_QWORD *)(v40[0] - 24) + 16] & 5) == 0)
  {
    HIBYTE(v30[2]) = 18;
    strcpy((char *)v30, "CorePhotogrammetry");
    sub_2395AC84C(v30, v31);
    sub_239A7D600(&v39, *(_QWORD **)&v41[*(_QWORD *)(v40[0] - 24) + 24]);
    size = HIBYTE(v39.__r_.__value_.__r.__words[2]);
    if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = v39.__r_.__value_.__l.__size_;
    if (size)
    {
      sub_2395AC2E8((const void **)&v39.__r_.__value_.__l.__data_, (uint64_t)v31, (uint64_t)v36);
      if (v38)
      {
        sub_2394988CC((uint64_t)v32);
        if ((v37 & 0x80u) == 0)
          v25 = v36;
        else
          v25 = (void **)v36[0];
        if ((v37 & 0x80u) == 0)
          v26 = v37;
        else
          v26 = (uint64_t)v36[1];
        sub_239458500(v33, (uint64_t)v25, v26);
        v23 = sub_239593C28(v32, v16, -1.0);
        v32[0] = *MEMORY[0x24BEDB7F0];
        v27 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        *(uint64_t *)((char *)v32 + *(_QWORD *)(v32[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v33[0] = v27;
        v33[1] = MEMORY[0x24BEDB848] + 16;
        if (v34 < 0)
          operator delete((void *)v33[9]);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](&v35);
        if (v38 && (char)v37 < 0)
          operator delete(v36[0]);
      }
      else
      {
        v23 = 0;
      }
      if ((*((_BYTE *)&v39.__r_.__value_.__s + 23) & 0x80) == 0)
        goto LABEL_53;
    }
    else
    {
      v23 = 0;
      if ((*((_BYTE *)&v39.__r_.__value_.__s + 23) & 0x80) == 0)
      {
LABEL_53:
        if (v31[0])
        {
          v31[1] = v31[0];
          operator delete(v31[0]);
        }
        if (SHIBYTE(v30[2]) < 0)
          operator delete((void *)v30[0]);
        if (!std::filebuf::close())
          std::ios_base::clear((std::ios_base *)((char *)v40 + *(_QWORD *)(v40[0] - 24)), *(_DWORD *)&v41[*(_QWORD *)(v40[0] - 24) + 16] | 4);
        goto LABEL_59;
      }
    }
    operator delete(v39.__r_.__value_.__l.__data_);
    goto LABEL_53;
  }
  v23 = 0;
LABEL_59:
  v40[0] = *v19;
  *(_QWORD *)((char *)v40 + *(_QWORD *)(v40[0] - 24)) = v19[3];
  MEMORY[0x23B83DC8C](v41);
  std::istream::~istream();
  MEMORY[0x23B83E250](v42);
  if ((v23 & 1) != 0)
  {
    *a3 = v16;
    a3[1] = (uint64_t)v14;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    do
      v28 = __ldaxr(p_shared_owners);
    while (__stlxr(v28 - 1, p_shared_owners));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
LABEL_28:
  if (SHIBYTE(v29.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v29.__pn_.__r_.__value_.__l.__data_);
}

void sub_239B1D124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *__p,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  char a66;
  void *a67;
  char a72;
  uint64_t a73;
  std::__shared_weak_count *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t *v76;
  uint64_t *v77;
  void *v79;
  unint64_t v80;

  if (a66 && a65 < 0)
    operator delete(__p);
  if (a72 < 0)
  {
    operator delete(a67);
    v79 = a22;
    if (a22)
    {
LABEL_10:
      operator delete(v79);
      if ((a21 & 0x80000000) == 0)
      {
LABEL_12:
        a73 = *v77;
        *(uint64_t *)((char *)&a73 + *(_QWORD *)(a73 - 24)) = v77[3];
        MEMORY[0x23B83DC8C](v75);
        std::istream::~istream();
        MEMORY[0x23B83E250](v74);
        do
          v80 = __ldaxr(v76);
        while (__stlxr(v80 - 1, v76));
        if (!v80)
        {
          ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
          std::__shared_weak_count::__release_weak(v73);
        }
        if (a15 < 0)
        {
          operator delete(a10);
          _Unwind_Resume(a1);
        }
        _Unwind_Resume(a1);
      }
LABEL_11:
      operator delete(a16);
      goto LABEL_12;
    }
  }
  else
  {
    v79 = a22;
    if (a22)
      goto LABEL_10;
  }
  if ((a21 & 0x80000000) == 0)
    goto LABEL_12;
  goto LABEL_11;
}

void sub_239B1D2C0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5A00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B1D2D0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5A00;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B1D300(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_239B1D31C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF96A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B1D32C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF96A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B1D35C(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  void *v5;

  v2 = *(_QWORD **)(a1 + 40);
  if (v2)
  {
    do
    {
      v4 = (_QWORD *)*v2;
      v5 = (void *)v2[3];
      if (v5)
      {
        v2[4] = v5;
        operator delete(v5);
      }
      operator delete(v2);
      v2 = v4;
    }
    while (v4);
  }
  v3 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v3)
    operator delete(v3);
}

void sub_239B1D3D4()
{
  JUMPOUT(0x23B83E31CLL);
}

_WORD *sub_239B1D3E8(uint64_t a1)
{
  _WORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_250AF4340;
  result[4] = *(_WORD *)(a1 + 8);
  return result;
}

uint64_t sub_239B1D420(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_250AF4340;
  *(_WORD *)(a2 + 8) = *(_WORD *)(result + 8);
  return result;
}

uint64_t sub_239B1D440()
{
  return kdebug_trace();
}

void sub_239B1D470(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  _BYTE *v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  void **v23;
  uint64_t v24;
  void **v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  __int128 *v32;
  void *v33;
  char *v34;
  unint64_t *v35;
  void *v36;
  unint64_t *v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  std::string *v53;
  __int128 v54;
  void **v55;
  std::string *v56;
  std::string *v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  __int128 v61;
  unint64_t v62;
  _QWORD *v63;
  void *v64;
  _QWORD *v65;
  uint64_t v66;
  void *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  std::string v72;
  char *v73;
  std::__shared_weak_count *v74;
  _BYTE *v75;
  std::__shared_weak_count *v76;
  void *v77[2];
  __int128 v78;
  int v79;
  _QWORD v80[3];
  _QWORD *v81;
  void *v82[2];
  std::string::size_type v83;
  void **v84;
  _BYTE v85[200];
  uint64_t v86;
  unsigned int *v87;
  _QWORD v88[3];
  _QWORD *v89;
  void *v90[2];
  std::__shared_weak_count *v91;
  void **v92;
  _QWORD v93[3];
  _QWORD *v94;
  void *__p;
  int v96[2];
  _BYTE *v97;
  std::__shared_weak_count *v98;
  uint64_t v99;

  v99 = *MEMORY[0x24BDAC8D0];
  v4 = *a2;
  v3 = a2[1];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 2032) = v4;
  v7 = *(std::__shared_weak_count **)(a1 + 2040);
  *(_QWORD *)(a1 + 2040) = v3;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v11 = *a2;
  v10 = a2[1];
  if (v10)
  {
    v12 = (unint64_t *)(v10 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_QWORD *)(a1 + 2136) = v11;
  v14 = *(std::__shared_weak_count **)(a1 + 2144);
  *(_QWORD *)(a1 + 2144) = v10;
  v15 = a1;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    v15 = a1;
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v15 = a1;
    }
  }
  if (!*(_BYTE *)(v15 + 4) && *(_DWORD *)v15 < 2u)
    return;
  kdebug_trace();
  v88[0] = &off_250AF4898;
  v89 = v88;
  *(_OWORD *)v77 = 0u;
  v78 = 0u;
  v79 = 1065353216;
  v18 = *(_BYTE **)(a1 + 2312);
  v19 = *(std::__shared_weak_count **)(a1 + 2320);
  v75 = v18;
  v76 = v19;
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    *(_QWORD *)v96 = 0;
    __p = 0;
    v97 = v18;
    v98 = v19;
    do
      v22 = __ldxr(v20);
    while (__stxr(v22 + 1, v20));
  }
  else
  {
    *(_QWORD *)v96 = 0;
    __p = 0;
    v97 = v18;
    v98 = 0;
  }
  *(_QWORD *)v96 = (int)std::thread::hardware_concurrency();
  v90[0] = &off_250AF48E0;
  v92 = v90;
  v82[0] = &off_250AF4928;
  v82[1] = (void *)(a1 + 296);
  v83 = a1 + 8;
  v84 = v82;
  sub_239B152CC((uint64_t)v85, (uint64_t *)&__p, v90, v82);
  v23 = v84;
  if (v84 == v82)
  {
    v24 = 4;
    v23 = v82;
  }
  else
  {
    if (!v84)
      goto LABEL_31;
    v24 = 5;
  }
  (*((void (**)(void))*v23 + v24))();
LABEL_31:
  v25 = v92;
  if (v92 == v90)
  {
    v26 = 4;
    v25 = v90;
  }
  else
  {
    if (!v92)
      goto LABEL_36;
    v26 = 5;
  }
  (*((void (**)(void))*v25 + v26))();
LABEL_36:
  v27 = v98;
  if (v98)
  {
    v28 = (unint64_t *)&v98->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  if (v76)
  {
    v30 = &v76->__shared_owners_;
    do
      v31 = __ldaxr((unint64_t *)v30);
    while (__stlxr(v31 - 1, (unint64_t *)v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
      std::__shared_weak_count::__release_weak(v76);
    }
  }
  v32 = *(__int128 **)(*a2 + 16);
  if (v32)
  {
    while (1)
    {
      v34 = (char *)operator new(0x38uLL);
      sub_239B1DDEC((uint64_t)v34, (__int128 **)v32 + 3);
      v35 = (unint64_t *)(v32 + 1);
      v73 = v34 + 24;
      v74 = (std::__shared_weak_count *)v34;
      v36 = (void *)*((_QWORD *)v32 + 2);
      v80[0] = &off_250AF4970;
      v81 = v80;
      if (!v87)
      {
        sub_239A444D4((uint64_t)"unknown file", 337, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      v90[0] = v36;
      v90[1] = v34 + 24;
      v37 = (unint64_t *)(v34 + 8);
      v91 = (std::__shared_weak_count *)v34;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      LOBYTE(v92) = 0;
      v94 = v93;
      sub_239B1DF34((uint64_t)v80, v93);
      sub_239B1C974((uint64_t)&__p, (uint64_t *)v90);
      v39 = operator new(0x120uLL);
      v39[2] = 0;
      *v39 = &off_250AF4548;
      v39[1] = 0;
      v82[0] = (void *)sub_239B16764((uint64_t)(v39 + 3), (uint64_t)&__p);
      v82[1] = v39;
      sub_239A82E8C(&__p);
      v40 = v94;
      if (v94 == v93)
        break;
      if (v94)
      {
        v41 = 5;
LABEL_58:
        (*(void (**)(void))(*v40 + 8 * v41))();
      }
      v42 = v91;
      if (v91)
      {
        v43 = (unint64_t *)&v91->__shared_owners_;
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
        }
      }
      sub_239B16980(v87, v82);
      v45 = (std::__shared_weak_count *)v82[1];
      if (v82[1])
      {
        v46 = (unint64_t *)((char *)v82[1] + 8);
        do
          v47 = __ldaxr(v46);
        while (__stlxr(v47 - 1, v46));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
      v48 = v81;
      if (v81 == v80)
      {
        v48 = v80;
        v49 = 4;
        goto LABEL_73;
      }
      if (v81)
      {
        v49 = 5;
LABEL_73:
        (*(void (**)(void))(*v48 + 8 * v49))();
      }
      v50 = v74;
      if (v74)
      {
        v51 = (unint64_t *)&v74->__shared_owners_;
        do
          v52 = __ldaxr(v51);
        while (__stlxr(v52 - 1, v51));
        if (!v52)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
        }
      }
      std::to_string(&v72, *v35);
      v53 = std::string::append(&v72, ".bin");
      v54 = *(_OWORD *)&v53->__r_.__value_.__l.__data_;
      v83 = v53->__r_.__value_.__r.__words[2];
      *(_OWORD *)v82 = v54;
      v53->__r_.__value_.__l.__size_ = 0;
      v53->__r_.__value_.__r.__words[2] = 0;
      v53->__r_.__value_.__r.__words[0] = 0;
      sub_2395ACAA8((uint64_t)v82, (char *)v90);
      sub_2396F2748(&__p, (uint64_t *)(a1 + 296), (uint64_t)v90);
      if (SHIBYTE(v91) < 0)
      {
        operator delete(v90[0]);
        if ((SHIBYTE(v83) & 0x80000000) == 0)
        {
LABEL_81:
          if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_92;
          goto LABEL_82;
        }
      }
      else if ((SHIBYTE(v83) & 0x80000000) == 0)
      {
        goto LABEL_81;
      }
      operator delete(v82[0]);
      if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
LABEL_92:
        operator delete(v72.__r_.__value_.__l.__data_);
LABEL_82:
      v55 = (void **)(sub_239A9A10C((uint64_t)v77, *v35, (_QWORD *)v32 + 2) + 3);
      if (v55 != &__p)
        sub_239A70694((uint64_t)v55, (std::string *)__p, *(std::string **)v96, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)v96 - (_QWORD)__p) >> 3));
      v56 = (std::string *)__p;
      if (__p)
      {
        v57 = *(std::string **)v96;
        v33 = __p;
        if (*(void **)v96 != __p)
        {
          do
          {
            if (SHIBYTE(v57[-1].__r_.__value_.__r.__words[2]) < 0)
              operator delete(v57[-1].__r_.__value_.__l.__data_);
            --v57;
          }
          while (v57 != v56);
          v33 = __p;
        }
        *(_QWORD *)v96 = v56;
        operator delete(v33);
      }
      v32 = *(__int128 **)v32;
      if (!v32)
        goto LABEL_93;
    }
    v40 = v93;
    v41 = 4;
    goto LABEL_58;
  }
LABEL_93:
  if (v86)
  {
    LOBYTE(v90[0]) = 0;
    __p = sub_239B15B28;
    *(_QWORD *)v96 = 0;
    v97 = v85;
    sub_239B15E44((uint64_t)&__p, (uint64_t)v90);
  }
  v58 = a1;
  if (*(_BYTE *)(a1 + 1608))
  {
    sub_239A71290(a1 + 1568, (uint64_t *)v77);
  }
  else
  {
    v59 = v77[0];
    v60 = (unint64_t)v77[1];
    v77[0] = 0;
    v77[1] = 0;
    *(_QWORD *)(a1 + 1568) = v59;
    *(_QWORD *)(a1 + 1576) = v60;
    v61 = v78;
    *(_OWORD *)(a1 + 1584) = v78;
    *(_DWORD *)(a1 + 1600) = v79;
    if (*((_QWORD *)&v61 + 1))
    {
      v62 = *(_QWORD *)(v61 + 8);
      if ((v60 & (v60 - 1)) != 0)
      {
        if (v62 >= v60)
          v62 %= v60;
      }
      else
      {
        v62 &= v60 - 1;
      }
      v59[v62] = a1 + 1584;
      v78 = 0uLL;
      v58 = a1;
    }
    *(_BYTE *)(v58 + 1608) = 1;
  }
  sub_239B16008((uint64_t)v85);
  v63 = (_QWORD *)v78;
  if ((_QWORD)v78)
  {
    do
    {
      v68 = (_QWORD *)*v63;
      v69 = v63[3];
      if (v69)
      {
        v70 = v63[4];
        v67 = (void *)v63[3];
        if (v70 != v69)
        {
          do
          {
            if (*(char *)(v70 - 1) < 0)
              operator delete(*(void **)(v70 - 24));
            v70 -= 24;
          }
          while (v70 != v69);
          v67 = (void *)v63[3];
        }
        v63[4] = v69;
        operator delete(v67);
      }
      operator delete(v63);
      v63 = v68;
    }
    while (v68);
  }
  v64 = v77[0];
  v77[0] = 0;
  if (v64)
    operator delete(v64);
  if (!v89)
    sub_2394172E0();
  (*(void (**)(_QWORD *))(*v89 + 48))(v89);
  v65 = v89;
  if (v89 == v88)
  {
    v66 = 4;
    v65 = v88;
  }
  else
  {
    if (!v89)
      return;
    v66 = 5;
  }
  (*(void (**)(void))(*v65 + 8 * v66))();
}

void sub_239B1DC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  sub_239B16008((uint64_t)&a31);
  sub_239A8E020((uint64_t)&a17);
  sub_239416834(&STACK[0x248]);
  _Unwind_Resume(a1);
}

uint64_t sub_239B1DDEC(uint64_t a1, __int128 **a2)
{
  __int128 *v4;
  __int128 *v5;
  int64_t v6;
  unint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;

  *(_OWORD *)(a1 + 8) = 0u;
  *(_QWORD *)a1 = &off_250AF5A00;
  *(_QWORD *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  v4 = *a2;
  v5 = a2[1];
  v6 = (char *)v5 - (char *)*a2;
  if (v5 != *a2)
  {
    v7 = 0xCCCCCCCCCCCCCCCDLL * (v6 >> 3);
    if (v7 >= 0x666666666666667)
      sub_2394189F8();
    v8 = (char *)operator new(v6);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = &v8[40 * v7];
    do
    {
      v9 = *v4;
      *((_DWORD *)v8 + 4) = *((_DWORD *)v4 + 4);
      *(_OWORD *)v8 = v9;
      *(_QWORD *)(v8 + 20) = *(_QWORD *)((char *)v4 + 20);
      v10 = *(_QWORD *)((char *)v4 + 28);
      *((_DWORD *)v8 + 9) = *((_DWORD *)v4 + 9);
      *(_QWORD *)(v8 + 28) = v10;
      v8 += 40;
      v4 = (__int128 *)((char *)v4 + 40);
    }
    while (v4 != v5);
    *(_QWORD *)(a1 + 32) = v8;
  }
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 24);
  return a1;
}

void sub_239B1DED4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    v1[1].__shared_owners_ = (uint64_t)v4;
    operator delete(v4);
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_239B1DEFC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B1DF10()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF4970;
  return result;
}

void sub_239B1DF34(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF4970;
}

void sub_239B1DF54()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B1DF68(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF4928;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B1DFA0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF4928;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_239B1DFC0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  std::__shared_weak_count *v4;
  uint64_t *v5;
  uint64_t *v6;
  std::string *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  std::ios_base *v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  std::ios_base *v21;
  uint64_t v22;
  std::string *v23;
  uint64_t v24;
  void **v25;
  void **v26;
  void *v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  void *v31;
  char v32;
  void *v33;
  void **v34;
  const void *v35[4];
  void *v36[3];
  void *v37;
  char v38;
  std::string v39;
  char v40;
  void *v41[2];
  std::string::size_type v42;
  __int128 v43;
  __int128 v44;
  int v45;
  uint64_t v46[20];
  void *__p;
  _BYTE v48[408];
  _QWORD v49[22];

  v49[19] = *MEMORY[0x24BDAC8D0];
  v5 = *(uint64_t **)a2;
  v4 = *(std::__shared_weak_count **)(a2 + 8);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  v6 = *(uint64_t **)(a1 + 8);
  std::to_string(&v39, *a3);
  v7 = std::string::append(&v39, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v42 = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)v41 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v41, (char *)&__p);
  sub_2396F2748(&v33, v6, (uint64_t)&__p);
  if ((v48[15] & 0x80000000) == 0)
  {
    if ((SHIBYTE(v42) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_7:
    operator delete(v41[0]);
    if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_4;
    goto LABEL_8;
  }
  operator delete(__p);
  if (SHIBYTE(v42) < 0)
    goto LABEL_7;
LABEL_3:
  if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_4;
LABEL_8:
  operator delete(v39.__r_.__value_.__l.__data_);
LABEL_4:
  sub_2396F295C((uint64_t *)&v33, *(_QWORD *)(a1 + 16), (uint64_t)&v31);
  v9 = MEMORY[0x24BEDB840];
  v10 = MEMORY[0x24BEDB840] + 64;
  v11 = MEMORY[0x24BEDB7E8];
  v12 = *(void **)(MEMORY[0x24BEDB7E8] + 8);
  v13 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v49[0] = MEMORY[0x24BEDB840] + 64;
  __p = v12;
  *(_QWORD *)&v48[*((_QWORD *)v12 - 3) - 8] = v13;
  v14 = (std::ios_base *)&v48[*((_QWORD *)__p - 3) - 8];
  std::ios_base::init(v14, v48);
  v14[1].__vftable = 0;
  v14[1].__fmtflags_ = -1;
  __p = (void *)(v9 + 24);
  v49[0] = v10;
  MEMORY[0x23B83DC80](v48);
  std::ofstream::open();
  if ((v48[*((_QWORD *)__p - 3) + 24] & 5) != 0)
  {
    v15 = 0;
  }
  else
  {
    HIBYTE(v35[2]) = 18;
    strcpy((char *)v35, "CorePhotogrammetry");
    sub_2395AC84C(v35, v36);
    v16 = MEMORY[0x24BEDB870];
    v17 = MEMORY[0x24BEDB870] + 64;
    v18 = MEMORY[0x24BEDB800];
    v19 = *(void **)(MEMORY[0x24BEDB800] + 8);
    v20 = *(void **)(MEMORY[0x24BEDB800] + 16);
    v46[0] = MEMORY[0x24BEDB870] + 64;
    v41[0] = v19;
    *(void **)((char *)v41 + *((_QWORD *)v19 - 3)) = v20;
    v21 = (std::ios_base *)((char *)v41 + *((_QWORD *)v41[0] - 3));
    std::ios_base::init(v21, &v41[1]);
    v21[1].__vftable = 0;
    v21[1].__fmtflags_ = -1;
    v41[0] = (void *)(v16 + 24);
    v46[0] = v17;
    std::streambuf::basic_streambuf();
    v22 = MEMORY[0x24BEDB848];
    v41[1] = (void *)(MEMORY[0x24BEDB848] + 16);
    v43 = 0u;
    v44 = 0u;
    v45 = 16;
    if ((sub_23958E63C(v5, v41, 1) & 1) != 0)
    {
      std::stringbuf::str();
      sub_2395ABE70((const void **)&v37, (uint64_t)v36, (uint64_t)&v39);
      if (v38 < 0)
        operator delete(v37);
      v15 = v40 != 0;
      if (v40)
      {
        v23 = (v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? &v39
            : (std::string *)v39.__r_.__value_.__r.__words[0];
        v24 = (v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? HIBYTE(v39.__r_.__value_.__r.__words[2])
            : v39.__r_.__value_.__l.__size_;
        sub_239458500(&__p, (uint64_t)v23, v24);
        if (v40)
        {
          if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v39.__r_.__value_.__l.__data_);
        }
      }
    }
    else
    {
      v15 = 0;
    }
    v41[0] = *(void **)v18;
    *(void **)((char *)v41 + *((_QWORD *)v41[0] - 3)) = *(void **)(v18 + 24);
    v41[1] = (void *)(v22 + 16);
    if (SBYTE7(v44) < 0)
      operator delete((void *)v43);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x23B83E250](v46);
    if (v36[0])
    {
      v36[1] = v36[0];
      operator delete(v36[0]);
    }
    if (SHIBYTE(v35[2]) < 0)
      operator delete((void *)v35[0]);
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)&v48[*((_QWORD *)__p - 3) - 8], *(_DWORD *)&v48[*((_QWORD *)__p - 3) + 24] | 4);
  }
  __p = *(void **)v11;
  *(_QWORD *)&v48[*((_QWORD *)__p - 3) - 8] = *(_QWORD *)(v11 + 24);
  MEMORY[0x23B83DC8C](v48);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v49);
  if (v32 < 0)
    operator delete(v31);
  v25 = (void **)v33;
  if (v33)
  {
    v26 = v34;
    v27 = v33;
    if (v34 != v33)
    {
      do
      {
        if (*((char *)v26 - 1) < 0)
          operator delete(*(v26 - 3));
        v26 -= 3;
      }
      while (v26 != v25);
      v27 = v33;
    }
    v34 = v25;
    operator delete(v27);
  }
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v29 = __ldaxr(p_shared_owners);
    while (__stlxr(v29 - 1, p_shared_owners));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v15;
}

void sub_239B1E448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void **a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39,void *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a72;
  std::__shared_weak_count *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  void **v79;
  void **v80;
  unint64_t *p_shared_owners;
  unint64_t v82;

  if (a39 && a38 < 0)
    operator delete(__p);
  a40 = *(void **)v77;
  *(void **)((char *)&a40 + *((_QWORD *)a40 - 3)) = *(void **)(v77 + 24);
  a41 = v75 + 16;
  if (a54 < 0)
    operator delete(a49);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x23B83E250](a10);
  if (a27)
    operator delete(a27);
  if (a25 < 0)
    operator delete(a20);
  a72 = *v76;
  *(uint64_t *)((char *)&a72 + *(_QWORD *)(a72 - 24)) = v76[3];
  MEMORY[0x23B83DC8C](v74);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v73);
  if (a16 < 0)
    operator delete(a11);
  if (a17)
  {
    v79 = (void **)a18;
    v80 = a17;
    if ((void **)a18 != a17)
    {
      do
      {
        if (*((char *)v79 - 1) < 0)
          operator delete(*(v79 - 3));
        v79 -= 3;
      }
      while (v79 != a17);
      v80 = a17;
    }
    operator delete(v80);
  }
  if (v72)
  {
    p_shared_owners = (unint64_t *)&v72->__shared_owners_;
    do
      v82 = __ldaxr(p_shared_owners);
    while (__stlxr(v82 - 1, p_shared_owners));
    if (!v82)
    {
      ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
      std::__shared_weak_count::__release_weak(v72);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239B1E634()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B1E648()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF48E0;
  return result;
}

void sub_239B1E66C(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF48E0;
}

void sub_239B1E684(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_239B1E690()
{
  JUMPOUT(0x23B83E31CLL);
}

_WORD *sub_239B1E6A4(uint64_t a1)
{
  _WORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_250AF4898;
  result[4] = *(_WORD *)(a1 + 8);
  return result;
}

uint64_t sub_239B1E6DC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_250AF4898;
  *(_WORD *)(a2 + 8) = *(_WORD *)(result + 8);
  return result;
}

uint64_t sub_239B1E6FC()
{
  return kdebug_trace();
}

uint64_t sub_239B1E72C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  char *v6;
  BOOL v7;
  std::__fs::filesystem::path::__string_view v8;
  __int128 *p_dst;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::basic_string_view<_CharT, _Traits>::size_type v17;
  std::basic_string_view<_CharT, _Traits>::size_type v18;
  char *v19;
  std::__fs::filesystem::path::__string_view v20;
  __int128 *v21;
  std::basic_string_view<_CharT, _Traits>::size_type v22;
  std::basic_string_view<_CharT, _Traits>::size_type v23;
  std::__shared_weak_count *v24;
  char *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  void *__p[2];
  unint64_t v35;
  char *v36;
  std::__shared_weak_count *v37;
  std::__fs::filesystem::path v38;
  __int128 __dst;
  unint64_t v40;

  v4 = *(_QWORD *)(a1 + 2000);
  if (v4)
  {
LABEL_12:
    v10 = *(_QWORD *)(a1 + 2008);
    if (!v10)
      goto LABEL_15;
LABEL_13:
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1 + 4) || !*(_BYTE *)(a1 + 1688))
  {
    v4 = 0;
    goto LABEL_12;
  }
  sub_2396F295C((uint64_t *)(a1 + 1664), a1 + 8, (uint64_t)&v38);
  std::__fs::filesystem::__status(&v38, 0);
  v5 = 1;
  if (!(_BYTE)__dst || __dst == 255)
    goto LABEL_52;
  kdebug_trace();
  v6 = (char *)operator new(0x3C0uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_250B01B38;
  bzero(v6 + 24, 0x3A8uLL);
  *((_DWORD *)v6 + 22) = 1065353216;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_DWORD *)v6 + 32) = 1065353216;
  *(_OWORD *)(v6 + 152) = 0u;
  *(_OWORD *)(v6 + 168) = 0u;
  *(_OWORD *)(v6 + 184) = 0u;
  *((_QWORD *)v6 + 25) = 0;
  *((_DWORD *)v6 + 52) = 1065353216;
  *(_OWORD *)(v6 + 216) = 0u;
  *(_OWORD *)(v6 + 232) = 0u;
  *((_DWORD *)v6 + 62) = 1065353216;
  *((_OWORD *)v6 + 16) = 0u;
  *((_OWORD *)v6 + 17) = 0u;
  *((_OWORD *)v6 + 18) = 0u;
  *((_OWORD *)v6 + 19) = 0u;
  *((_QWORD *)v6 + 40) = 0;
  *((_QWORD *)v6 + 41) = 0x3FF0000000000000;
  *((_QWORD *)v6 + 46) = 0;
  *((_OWORD *)v6 + 21) = 0u;
  *((_OWORD *)v6 + 22) = 0u;
  *((_DWORD *)v6 + 118) = -1;
  *((_OWORD *)v6 + 30) = 0u;
  *((_OWORD *)v6 + 31) = 0u;
  *((_DWORD *)v6 + 128) = 1065353216;
  *(_OWORD *)(v6 + 520) = 0u;
  *(_OWORD *)(v6 + 536) = 0u;
  *((_DWORD *)v6 + 138) = 1065353216;
  *((_OWORD *)v6 + 35) = 0u;
  *((_OWORD *)v6 + 36) = 0u;
  *((_OWORD *)v6 + 37) = 0u;
  *((_OWORD *)v6 + 38) = 0u;
  *((_OWORD *)v6 + 39) = 0u;
  *((_OWORD *)v6 + 40) = 0u;
  *((_OWORD *)v6 + 41) = 0u;
  *((_OWORD *)v6 + 42) = 0u;
  *((_OWORD *)v6 + 43) = 0u;
  *((_OWORD *)v6 + 44) = 0u;
  *((_OWORD *)v6 + 45) = 0u;
  *((_OWORD *)v6 + 46) = 0u;
  *((_OWORD *)v6 + 47) = 0u;
  *((_OWORD *)v6 + 48) = 0u;
  *((_OWORD *)v6 + 49) = 0u;
  *((_OWORD *)v6 + 50) = 0u;
  *((_OWORD *)v6 + 51) = 0u;
  *((_OWORD *)v6 + 52) = 0u;
  *((_DWORD *)v6 + 212) = 1065353216;
  *((_QWORD *)v6 + 107) = 0;
  *((_QWORD *)v6 + 109) = 0;
  *((_QWORD *)v6 + 108) = 0;
  v6[880] = 0;
  v36 = v6 + 24;
  v37 = (std::__shared_weak_count *)v6;
  v7 = sub_239A9D108((uint64_t)(v6 + 24));
  kdebug_trace();
  if (v7)
  {
    v8 = std::__fs::filesystem::path::__parent_path(&v38);
    if (v8.__size_ > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    if (v8.__size_ >= 0x17)
    {
      v17 = (v8.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8.__size_ | 7) != 0x17)
        v17 = v8.__size_ | 7;
      v18 = v17 + 1;
      p_dst = (__int128 *)operator new(v17 + 1);
      *((_QWORD *)&__dst + 1) = v8.__size_;
      v40 = v18 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v40) = v8.__size_;
      p_dst = &__dst;
      if (!v8.__size_)
      {
LABEL_26:
        *((_BYTE *)p_dst + v8.__size_) = 0;
        *(_OWORD *)__p = __dst;
        v35 = v40;
        sub_2396B8C08((uint64_t)(v6 + 480), (uint64_t)__p);
        if (SHIBYTE(v35) < 0)
          operator delete(__p[0]);
        v19 = v36;
        v20 = std::__fs::filesystem::path::__parent_path(&v38);
        if (v20.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v20.__size_ >= 0x17)
        {
          v22 = (v20.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v20.__size_ | 7) != 0x17)
            v22 = v20.__size_ | 7;
          v23 = v22 + 1;
          v21 = (__int128 *)operator new(v22 + 1);
          *((_QWORD *)&__dst + 1) = v20.__size_;
          v40 = v23 | 0x8000000000000000;
          *(_QWORD *)&__dst = v21;
        }
        else
        {
          HIBYTE(v40) = v20.__size_;
          v21 = &__dst;
          if (!v20.__size_)
            goto LABEL_36;
        }
        memmove(v21, v20.__data_, v20.__size_);
LABEL_36:
        *((_BYTE *)v21 + v20.__size_) = 0;
        *(_OWORD *)__p = __dst;
        v35 = v40;
        sub_2396B8C08((uint64_t)(v19 + 496), (uint64_t)__p);
        if (SHIBYTE(v35) < 0)
          operator delete(__p[0]);
        v25 = v36;
        v24 = v37;
        if (v37)
        {
          p_shared_owners = (unint64_t *)&v37->__shared_owners_;
          do
            v27 = __ldxr(p_shared_owners);
          while (__stxr(v27 + 1, p_shared_owners));
        }
        *(_QWORD *)(a1 + 2000) = v25;
        v28 = *(std::__shared_weak_count **)(a1 + 2008);
        *(_QWORD *)(a1 + 2008) = v24;
        if (v28)
        {
          v29 = (unint64_t *)&v28->__shared_owners_;
          do
            v30 = __ldaxr(v29);
          while (__stlxr(v30 - 1, v29));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        v5 = 0;
        goto LABEL_47;
      }
    }
    memmove(p_dst, v8.__data_, v8.__size_);
    goto LABEL_26;
  }
  v5 = 1;
LABEL_47:
  v31 = v37;
  if (v37)
  {
    v32 = (unint64_t *)&v37->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
LABEL_52:
  if (SHIBYTE(v38.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v38.__pn_.__r_.__value_.__l.__data_);
    if (v5)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 2000);
  v10 = *(_QWORD *)(a1 + 2008);
  if (v10)
    goto LABEL_13;
LABEL_15:
  v13 = (std::__shared_weak_count *)a2[1];
  *a2 = v4;
  a2[1] = v10;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  return 1;
}

void sub_239B1EB64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0)
    operator delete(__p);
  sub_239A4D7C0((uint64_t)&a16);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(a1);
}

uint64_t sub_239B1EBC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  void **v13;
  char *v14;
  void **v15;
  void *v16;
  void **v17;
  void *v18;
  void **v20;
  void **v21;
  std::__fs::filesystem::path __p;
  void *v23[2];
  void *v24;
  int v25;
  void *v26[2];
  void *v27;
  int v28;
  void *v29;
  char v30;

  v5 = *a2;
  v4 = a2[1];
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  *(_QWORD *)(a1 + 2000) = v5;
  v8 = *(std::__shared_weak_count **)(a1 + 2008);
  *(_QWORD *)(a1 + 2008) = v4;
  if (!v8)
    goto LABEL_40;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  if (*(_DWORD *)a1 < 2u)
    return 1;
LABEL_12:
  sub_2396F295C((uint64_t *)(a1 + 704), a1 + 8, (uint64_t)&v29);
  v12 = *a2;
  v13 = (void **)(*a2 + 456);
  sub_2395F6750((uint64_t)v26, (uint64_t)v13);
  sub_2395F6750((uint64_t)v23, v12 + 496);
  sub_2396F295C((uint64_t *)(a1 + 512), a1 + 8, (uint64_t)&__p);
  sub_2396B8CE0((uint64_t)v13, &__p);
  sub_2396B8CE0(v12 + 496, &__p);
  kdebug_trace();
  v11 = sub_239A9D788(*a2);
  kdebug_trace();
  if (v13 != v26)
  {
    *(_DWORD *)(v12 + 488) = v28;
    sub_239A99678(v13, (const std::string *)v27);
  }
  if ((void **)(v12 + 496) != v23)
  {
    *(_DWORD *)(v12 + 528) = v25;
    sub_239A99678((_QWORD *)(v12 + 496), (const std::string *)v24);
  }
  if (v11)
  {
    v14 = (char *)(a1 + 1664);
    if (!*(_BYTE *)(a1 + 1688))
    {
      *(_QWORD *)v14 = 0;
      *(_QWORD *)(a1 + 1672) = 0;
      *(_QWORD *)(a1 + 1680) = 0;
      sub_239490944(v14, *(_QWORD *)(a1 + 704), *(_QWORD *)(a1 + 712), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 712) - *(_QWORD *)(a1 + 704)) >> 3));
      *(_BYTE *)(a1 + 1688) = 1;
      if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
    sub_239A70694((uint64_t)v14, *(std::string **)(a1 + 704), *(std::string **)(a1 + 712), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 712) - *(_QWORD *)(a1 + 704)) >> 3));
  }
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_20:
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
LABEL_21:
  v15 = (void **)v24;
  if (v24)
  {
    do
    {
      v20 = (void **)*v15;
      if (*((char *)v15 + 47) < 0)
        operator delete(v15[3]);
      operator delete(v15);
      v15 = v20;
    }
    while (v20);
  }
  v16 = v23[0];
  v23[0] = 0;
  if (v16)
    operator delete(v16);
  v17 = (void **)v27;
  if (v27)
  {
    do
    {
      v21 = (void **)*v17;
      if (*((char *)v17 + 47) < 0)
        operator delete(v17[3]);
      operator delete(v17);
      v17 = v21;
    }
    while (v21);
  }
  v18 = v26[0];
  v26[0] = 0;
  if (v18)
    operator delete(v18);
  if (v30 < 0)
    operator delete(v29);
  return v11;
}

void sub_239B1EE78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;

  sub_23959F2D4((uint64_t)&a15);
  sub_23959F2D4((uint64_t)&a20);
  if (*(char *)(v20 - 49) < 0)
    operator delete(*(void **)(v20 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_239B1EED0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  char *v6;
  BOOL v7;
  std::__fs::filesystem::path::__string_view v8;
  __int128 *p_dst;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::basic_string_view<_CharT, _Traits>::size_type v17;
  std::basic_string_view<_CharT, _Traits>::size_type v18;
  char *v19;
  std::__fs::filesystem::path::__string_view v20;
  __int128 *v21;
  std::basic_string_view<_CharT, _Traits>::size_type v22;
  std::basic_string_view<_CharT, _Traits>::size_type v23;
  std::__shared_weak_count *v24;
  char *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  void *__p[2];
  unint64_t v35;
  char *v36;
  std::__shared_weak_count *v37;
  std::__fs::filesystem::path v38;
  __int128 __dst;
  unint64_t v40;

  v4 = *(_QWORD *)(a1 + 2016);
  if (v4)
  {
LABEL_12:
    v10 = *(_QWORD *)(a1 + 2024);
    if (!v10)
      goto LABEL_15;
LABEL_13:
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1 + 4) || !*(_BYTE *)(a1 + 1720))
  {
    v4 = 0;
    goto LABEL_12;
  }
  sub_2396F295C((uint64_t *)(a1 + 1696), a1 + 8, (uint64_t)&v38);
  std::__fs::filesystem::__status(&v38, 0);
  v5 = 1;
  if (!(_BYTE)__dst || __dst == 255)
    goto LABEL_52;
  kdebug_trace();
  v6 = (char *)operator new(0x3C0uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_250B01B38;
  bzero(v6 + 24, 0x3A8uLL);
  *((_DWORD *)v6 + 22) = 1065353216;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_DWORD *)v6 + 32) = 1065353216;
  *(_OWORD *)(v6 + 152) = 0u;
  *(_OWORD *)(v6 + 168) = 0u;
  *(_OWORD *)(v6 + 184) = 0u;
  *((_QWORD *)v6 + 25) = 0;
  *((_DWORD *)v6 + 52) = 1065353216;
  *(_OWORD *)(v6 + 216) = 0u;
  *(_OWORD *)(v6 + 232) = 0u;
  *((_DWORD *)v6 + 62) = 1065353216;
  *((_OWORD *)v6 + 16) = 0u;
  *((_OWORD *)v6 + 17) = 0u;
  *((_OWORD *)v6 + 18) = 0u;
  *((_OWORD *)v6 + 19) = 0u;
  *((_QWORD *)v6 + 40) = 0;
  *((_QWORD *)v6 + 41) = 0x3FF0000000000000;
  *((_QWORD *)v6 + 46) = 0;
  *((_OWORD *)v6 + 21) = 0u;
  *((_OWORD *)v6 + 22) = 0u;
  *((_DWORD *)v6 + 118) = -1;
  *((_OWORD *)v6 + 30) = 0u;
  *((_OWORD *)v6 + 31) = 0u;
  *((_DWORD *)v6 + 128) = 1065353216;
  *(_OWORD *)(v6 + 520) = 0u;
  *(_OWORD *)(v6 + 536) = 0u;
  *((_DWORD *)v6 + 138) = 1065353216;
  *((_OWORD *)v6 + 35) = 0u;
  *((_OWORD *)v6 + 36) = 0u;
  *((_OWORD *)v6 + 37) = 0u;
  *((_OWORD *)v6 + 38) = 0u;
  *((_OWORD *)v6 + 39) = 0u;
  *((_OWORD *)v6 + 40) = 0u;
  *((_OWORD *)v6 + 41) = 0u;
  *((_OWORD *)v6 + 42) = 0u;
  *((_OWORD *)v6 + 43) = 0u;
  *((_OWORD *)v6 + 44) = 0u;
  *((_OWORD *)v6 + 45) = 0u;
  *((_OWORD *)v6 + 46) = 0u;
  *((_OWORD *)v6 + 47) = 0u;
  *((_OWORD *)v6 + 48) = 0u;
  *((_OWORD *)v6 + 49) = 0u;
  *((_OWORD *)v6 + 50) = 0u;
  *((_OWORD *)v6 + 51) = 0u;
  *((_OWORD *)v6 + 52) = 0u;
  *((_DWORD *)v6 + 212) = 1065353216;
  *((_QWORD *)v6 + 107) = 0;
  *((_QWORD *)v6 + 109) = 0;
  *((_QWORD *)v6 + 108) = 0;
  v6[880] = 0;
  v36 = v6 + 24;
  v37 = (std::__shared_weak_count *)v6;
  v7 = sub_239A9D108((uint64_t)(v6 + 24));
  kdebug_trace();
  if (v7)
  {
    v8 = std::__fs::filesystem::path::__parent_path(&v38);
    if (v8.__size_ > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    if (v8.__size_ >= 0x17)
    {
      v17 = (v8.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8.__size_ | 7) != 0x17)
        v17 = v8.__size_ | 7;
      v18 = v17 + 1;
      p_dst = (__int128 *)operator new(v17 + 1);
      *((_QWORD *)&__dst + 1) = v8.__size_;
      v40 = v18 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v40) = v8.__size_;
      p_dst = &__dst;
      if (!v8.__size_)
      {
LABEL_26:
        *((_BYTE *)p_dst + v8.__size_) = 0;
        *(_OWORD *)__p = __dst;
        v35 = v40;
        sub_2396B8C08((uint64_t)(v6 + 480), (uint64_t)__p);
        if (SHIBYTE(v35) < 0)
          operator delete(__p[0]);
        v19 = v36;
        v20 = std::__fs::filesystem::path::__parent_path(&v38);
        if (v20.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v20.__size_ >= 0x17)
        {
          v22 = (v20.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v20.__size_ | 7) != 0x17)
            v22 = v20.__size_ | 7;
          v23 = v22 + 1;
          v21 = (__int128 *)operator new(v22 + 1);
          *((_QWORD *)&__dst + 1) = v20.__size_;
          v40 = v23 | 0x8000000000000000;
          *(_QWORD *)&__dst = v21;
        }
        else
        {
          HIBYTE(v40) = v20.__size_;
          v21 = &__dst;
          if (!v20.__size_)
            goto LABEL_36;
        }
        memmove(v21, v20.__data_, v20.__size_);
LABEL_36:
        *((_BYTE *)v21 + v20.__size_) = 0;
        *(_OWORD *)__p = __dst;
        v35 = v40;
        sub_2396B8C08((uint64_t)(v19 + 496), (uint64_t)__p);
        if (SHIBYTE(v35) < 0)
          operator delete(__p[0]);
        v25 = v36;
        v24 = v37;
        if (v37)
        {
          p_shared_owners = (unint64_t *)&v37->__shared_owners_;
          do
            v27 = __ldxr(p_shared_owners);
          while (__stxr(v27 + 1, p_shared_owners));
        }
        *(_QWORD *)(a1 + 2016) = v25;
        v28 = *(std::__shared_weak_count **)(a1 + 2024);
        *(_QWORD *)(a1 + 2024) = v24;
        if (v28)
        {
          v29 = (unint64_t *)&v28->__shared_owners_;
          do
            v30 = __ldaxr(v29);
          while (__stlxr(v30 - 1, v29));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        v5 = 0;
        goto LABEL_47;
      }
    }
    memmove(p_dst, v8.__data_, v8.__size_);
    goto LABEL_26;
  }
  v5 = 1;
LABEL_47:
  v31 = v37;
  if (v37)
  {
    v32 = (unint64_t *)&v37->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
LABEL_52:
  if (SHIBYTE(v38.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v38.__pn_.__r_.__value_.__l.__data_);
    if (v5)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 2016);
  v10 = *(_QWORD *)(a1 + 2024);
  if (v10)
    goto LABEL_13;
LABEL_15:
  v13 = (std::__shared_weak_count *)a2[1];
  *a2 = v4;
  a2[1] = v10;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  return 1;
}

void sub_239B1F308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0)
    operator delete(__p);
  sub_239A4D7C0((uint64_t)&a16);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(a1);
}

uint64_t sub_239B1F364(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  void **v20;
  char *v21;
  void **v22;
  void *v23;
  void **v24;
  void *v25;
  void **v27;
  void **v28;
  std::__fs::filesystem::path __p;
  void *v30[2];
  void *v31;
  int v32;
  void *v33[2];
  void *v34;
  int v35;
  void *v36;
  char v37;

  v5 = *a2;
  v4 = a2[1];
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  *(_QWORD *)(a1 + 2016) = v5;
  v8 = *(std::__shared_weak_count **)(a1 + 2024);
  *(_QWORD *)(a1 + 2024) = v4;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v12 = *a2;
  v11 = a2[1];
  if (v11)
  {
    v13 = (unint64_t *)(v11 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  *(_QWORD *)(a1 + 2152) = v12;
  v15 = *(std::__shared_weak_count **)(a1 + 2160);
  *(_QWORD *)(a1 + 2160) = v11;
  if (!v15)
    goto LABEL_48;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_20;
  }
  else
  {
LABEL_48:
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_20;
  }
  if (*(_DWORD *)a1 < 2u)
    return 1;
LABEL_20:
  sub_2396F295C((uint64_t *)(a1 + 728), a1 + 8, (uint64_t)&v36);
  v19 = *a2;
  v20 = (void **)(*a2 + 456);
  sub_2395F6750((uint64_t)v33, (uint64_t)v20);
  sub_2395F6750((uint64_t)v30, v19 + 496);
  sub_2396F295C((uint64_t *)(a1 + 512), a1 + 8, (uint64_t)&__p);
  sub_2396B8CE0((uint64_t)v20, &__p);
  sub_2396B8CE0(v19 + 496, &__p);
  kdebug_trace();
  v18 = sub_239A9D788(*a2);
  kdebug_trace();
  if (v20 != v33)
  {
    *(_DWORD *)(v19 + 488) = v35;
    sub_239A99678(v20, (const std::string *)v34);
  }
  if ((void **)(v19 + 496) != v30)
  {
    *(_DWORD *)(v19 + 528) = v32;
    sub_239A99678((_QWORD *)(v19 + 496), (const std::string *)v31);
  }
  if (v18)
  {
    v21 = (char *)(a1 + 1696);
    if (!*(_BYTE *)(a1 + 1720))
    {
      *(_QWORD *)v21 = 0;
      *(_QWORD *)(a1 + 1704) = 0;
      *(_QWORD *)(a1 + 1712) = 0;
      sub_239490944(v21, *(_QWORD *)(a1 + 728), *(_QWORD *)(a1 + 736), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 736) - *(_QWORD *)(a1 + 728)) >> 3));
      *(_BYTE *)(a1 + 1720) = 1;
      if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_29;
      goto LABEL_28;
    }
    sub_239A70694((uint64_t)v21, *(std::string **)(a1 + 728), *(std::string **)(a1 + 736), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 736) - *(_QWORD *)(a1 + 728)) >> 3));
  }
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_28:
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
LABEL_29:
  v22 = (void **)v31;
  if (v31)
  {
    do
    {
      v27 = (void **)*v22;
      if (*((char *)v22 + 47) < 0)
        operator delete(v22[3]);
      operator delete(v22);
      v22 = v27;
    }
    while (v27);
  }
  v23 = v30[0];
  v30[0] = 0;
  if (v23)
    operator delete(v23);
  v24 = (void **)v34;
  if (v34)
  {
    do
    {
      v28 = (void **)*v24;
      if (*((char *)v24 + 47) < 0)
        operator delete(v24[3]);
      operator delete(v24);
      v24 = v28;
    }
    while (v28);
  }
  v25 = v33[0];
  v33[0] = 0;
  if (v25)
    operator delete(v25);
  if (v37 < 0)
    operator delete(v36);
  return v18;
}

void sub_239B1F678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;

  sub_23959F2D4((uint64_t)&a15);
  sub_23959F2D4((uint64_t)&a20);
  if (*(char *)(v20 - 49) < 0)
    operator delete(*(void **)(v20 - 72));
  _Unwind_Resume(a1);
}

void sub_239B1F6D0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 __p;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[3];
  _QWORD *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(a1 + 4))
  {
    v5 = *(_QWORD *)(a1 + 1824);
    v6 = *(_QWORD *)(a1 + 1832);
    if (v6)
    {
      v7 = (unint64_t *)(v6 + 8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 1, v7));
    }
    v9 = (std::__shared_weak_count *)a2[1];
    *a2 = v5;
    a2[1] = v6;
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    return;
  }
  if (!*(_BYTE *)(a1 + 1656))
    return;
  v4 = a1 + 1616;
  v26 = a1 + 1616;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(&v27, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
    v4 = v26;
  }
  else
  {
    v27 = *(_OWORD *)(a1 + 8);
    v28 = *(_QWORD *)(a1 + 24);
  }
  v22 = v4;
  if (SHIBYTE(v28) < 0)
  {
    sub_23941A7F8(&__p, (void *)v27, *((unint64_t *)&v27 + 1));
  }
  else
  {
    __p = v27;
    v24 = v28;
  }
  v30 = 0;
  v12 = operator new(0x28uLL);
  *v12 = off_250AF49B8;
  v12[1] = v22;
  *((_OWORD *)v12 + 1) = __p;
  v12[4] = v24;
  __p = 0uLL;
  v24 = 0;
  v30 = v12;
  sub_239A7277C(&v25, v29, (uint64_t *)(a1 + 2312));
  v13 = v25;
  v25 = 0uLL;
  v14 = (std::__shared_weak_count *)a2[1];
  *(_OWORD *)a2 = v13;
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = (std::__shared_weak_count *)*((_QWORD *)&v25 + 1);
  if (*((_QWORD *)&v25 + 1))
  {
    v18 = (unint64_t *)(*((_QWORD *)&v25 + 1) + 8);
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = v30;
  if (v30 == v29)
  {
    v21 = 4;
    v20 = v29;
    goto LABEL_31;
  }
  if (v30)
  {
    v21 = 5;
LABEL_31:
    (*(void (**)(void))(*v20 + 8 * v21))();
  }
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v28) & 0x80000000) == 0)
      return;
LABEL_36:
    operator delete((void *)v27);
    return;
  }
  operator delete((void *)__p);
  if (SHIBYTE(v28) < 0)
    goto LABEL_36;
}

void sub_239B1F958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B1F9F4(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF49B8;
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_239B1FA30(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF49B8;
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B1FA7C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;

  v2 = operator new(0x28uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *v2 = off_250AF49B8;
  v2[1] = v3;
  v4 = v2 + 2;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    *(_OWORD *)v4 = *(_OWORD *)(a1 + 16);
    v2[4] = *(_QWORD *)(a1 + 32);
  }
  return v2;
}

void sub_239B1FAE0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_239B1FAF4(char *result, _QWORD *a2)
{
  uint64_t v2;
  _BYTE *v3;
  __int128 v4;

  v2 = *((_QWORD *)result + 1);
  *a2 = off_250AF49B8;
  a2[1] = v2;
  v3 = a2 + 2;
  if (result[39] < 0)
    return (char *)sub_23941A7F8(v3, *((void **)result + 2), *((_QWORD *)result + 3));
  v4 = *((_OWORD *)result + 1);
  a2[4] = *((_QWORD *)result + 4);
  *(_OWORD *)v3 = v4;
  return result;
}

void sub_239B1FB34(uint64_t a1)
{
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
}

void sub_239B1FB48(void **__p)
{
  if (*((char *)__p + 39) < 0)
    operator delete(__p[2]);
  operator delete(__p);
}

unint64_t sub_239B1FB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE *v3;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t result;
  int8x8_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  uint64_t **v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  uint64_t v29;

  v3 = (_BYTE *)a2;
  v6 = *(_QWORD **)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v8 = v7;
  }
  result = sub_239428940((uint64_t)&v28, (uint64_t *)a2, v8);
  v10 = (int8x8_t)v6[1];
  if (!*(_QWORD *)&v10)
    goto LABEL_52;
  v11 = result;
  v12 = (uint8x8_t)vcnt_s8(v10);
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] > 1uLL)
  {
    v13 = result;
    if (result >= *(_QWORD *)&v10)
      v13 = result % *(_QWORD *)&v10;
  }
  else
  {
    v13 = (*(_QWORD *)&v10 - 1) & result;
  }
  v14 = *(uint64_t ***)(*v6 + 8 * v13);
  if (!v14 || (v15 = *v14) == 0)
  {
LABEL_52:
    v27 = 0;
    *(_BYTE *)a3 = 0;
    goto LABEL_53;
  }
  v16 = v3[23];
  if (v16 >= 0)
    v17 = v3[23];
  else
    v17 = *((_QWORD *)v3 + 1);
  if (v16 < 0)
    v3 = *(_BYTE **)v3;
  if (v12.u32[0] < 2uLL)
  {
    v18 = *(_QWORD *)&v10 - 1;
    while (1)
    {
      v23 = v15[1];
      if (v11 == v23)
      {
        v24 = *((unsigned __int8 *)v15 + 39);
        if ((v24 & 0x80u) == 0)
          v25 = *((unsigned __int8 *)v15 + 39);
        else
          v25 = v15[3];
        if (v25 == v17)
        {
          if ((v24 & 0x80) != 0)
          {
            result = memcmp((const void *)v15[2], v3, v15[3]);
            if (!(_DWORD)result)
              goto LABEL_51;
          }
          else
          {
            if (!*((_BYTE *)v15 + 39))
              goto LABEL_51;
            v26 = 0;
            while (*((unsigned __int8 *)v15 + v26 + 16) == v3[v26])
            {
              if (v24 == ++v26)
                goto LABEL_50;
            }
          }
        }
      }
      else if ((v23 & v18) != v13)
      {
        goto LABEL_52;
      }
      v15 = (uint64_t *)*v15;
      if (!v15)
        goto LABEL_52;
    }
  }
  while (1)
  {
    v19 = v15[1];
    if (v11 != v19)
    {
      if (v19 >= *(_QWORD *)&v10)
        v19 %= *(_QWORD *)&v10;
      if (v19 != v13)
        goto LABEL_52;
      goto LABEL_19;
    }
    v20 = *((unsigned __int8 *)v15 + 39);
    if ((v20 & 0x80u) == 0)
      v21 = *((unsigned __int8 *)v15 + 39);
    else
      v21 = v15[3];
    if (v21 != v17)
      goto LABEL_19;
    if ((v20 & 0x80) != 0)
      break;
    if (!*((_BYTE *)v15 + 39))
      goto LABEL_51;
    v22 = 0;
    while (*((unsigned __int8 *)v15 + v22 + 16) == v3[v22])
    {
      if (v20 == ++v22)
      {
LABEL_50:
        if (!v15)
          goto LABEL_52;
        goto LABEL_51;
      }
    }
LABEL_19:
    v15 = (uint64_t *)*v15;
    if (!v15)
      goto LABEL_52;
  }
  result = memcmp((const void *)v15[2], v3, v15[3]);
  if ((_DWORD)result)
    goto LABEL_19;
LABEL_51:
  result = (unint64_t)sub_2396F295C(v15 + 5, a1 + 16, (uint64_t)&v28);
  *(_OWORD *)a3 = v28;
  *(_QWORD *)(a3 + 16) = v29;
  v27 = 1;
LABEL_53:
  *(_BYTE *)(a3 + 24) = v27;
  return result;
}

uint64_t sub_239B1FDAC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  int v8;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v19;
  unint64_t v20;
  unsigned __int8 v21;
  std::__fs::filesystem::path v22;

  v4 = *(_QWORD *)(a1 + 2048);
  if (v4)
  {
LABEL_15:
    v12 = *(_QWORD *)(a1 + 2056);
    if (!v12)
      goto LABEL_18;
LABEL_16:
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    goto LABEL_18;
  }
  if (!*(_BYTE *)(a1 + 4) || !*(_BYTE *)(a1 + 1752))
  {
    v4 = 0;
    goto LABEL_15;
  }
  sub_2396F295C((uint64_t *)(a1 + 1728), a1 + 8, (uint64_t)&v22);
  std::__fs::filesystem::__status(&v22, 0);
  LODWORD(v5) = 1;
  if (v21 && v21 != 255)
  {
    kdebug_trace();
    v6 = (std::__shared_weak_count *)operator new(0xA8uLL);
    v6->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF6AC0;
    v6[1].std::__shared_count = 0u;
    LOBYTE(v6[4].__vftable) = 0;
    LOBYTE(v6[4].__shared_owners_) = 0;
    LOBYTE(v6[5].__shared_owners_) = 0;
    LOBYTE(v6[5].__shared_weak_owners_) = 0;
    LOBYTE(v6[6].__shared_weak_owners_) = 0;
    *(_OWORD *)&v6[1].__shared_weak_owners_ = 0u;
    *(_OWORD *)&v6[2].__shared_owners_ = 0u;
    LOBYTE(v6[3].__vftable) = 0;
    v8 = sub_239613780((uint64_t)&v22, (uint64_t)&v6[1], 3);
    kdebug_trace();
    if (v8)
    {
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
      *(_QWORD *)(a1 + 2048) = v6 + 1;
      v5 = *(std::__shared_weak_count **)(a1 + 2056);
      *(_QWORD *)(a1 + 2056) = v6;
      if (v5)
      {
        v10 = (unint64_t *)&v5->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        LODWORD(v5) = 0;
      }
    }
    else
    {
      LODWORD(v5) = 1;
    }
    if (v6)
    {
      v19 = (unint64_t *)&v6->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
  if (SHIBYTE(v22.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v22.__pn_.__r_.__value_.__l.__data_);
    if ((_DWORD)v5)
      return 0;
  }
  else if ((_DWORD)v5)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 2048);
  v12 = *(_QWORD *)(a1 + 2056);
  if (v12)
    goto LABEL_16;
LABEL_18:
  v15 = (std::__shared_weak_count *)a2[1];
  *a2 = v4;
  a2[1] = v12;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  return 1;
}

void sub_239B1FFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_239A4D7C0((uint64_t)&a10);
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239B20030(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF6AC0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B20040(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF6AC0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B20070(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  if (*(_BYTE *)(a1 + 160))
  {
    v2 = *(void **)(a1 + 136);
    if (v2)
    {
      *(_QWORD *)(a1 + 144) = v2;
      operator delete(v2);
    }
  }
  if (*(_BYTE *)(a1 + 128))
  {
    v3 = *(void **)(a1 + 104);
    if (v3)
    {
      *(_QWORD *)(a1 + 112) = v3;
      operator delete(v3);
    }
  }
  if (*(_BYTE *)(a1 + 96))
  {
    v4 = *(void **)(a1 + 72);
    if (v4)
    {
      *(_QWORD *)(a1 + 80) = v4;
      operator delete(v4);
    }
  }
  v5 = *(void **)(a1 + 48);
  if (v5)
  {
    *(_QWORD *)(a1 + 56) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 24);
  if (v6)
  {
    *(_QWORD *)(a1 + 32) = v6;
    operator delete(v6);
  }
}

uint64_t sub_239B20100(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  void *__p[2];
  char v15;

  v5 = *a2;
  v4 = a2[1];
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  *(_QWORD *)(a1 + 2048) = v5;
  v8 = *(std::__shared_weak_count **)(a1 + 2056);
  *(_QWORD *)(a1 + 2056) = v4;
  if (!v8)
    goto LABEL_22;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (*(_BYTE *)(a1 + 4))
    {
LABEL_12:
      sub_2396F295C((uint64_t *)(a1 + 800), a1 + 8, (uint64_t)__p);
      kdebug_trace();
      v11 = sub_239614DB0(*a2, (uint64_t)__p, 3);
      kdebug_trace();
      if ((v11 & 1) != 0)
      {
        v12 = (char *)(a1 + 1728);
        if (!*(_BYTE *)(a1 + 1752))
        {
          *(_QWORD *)v12 = 0;
          *(_QWORD *)(a1 + 1736) = 0;
          *(_QWORD *)(a1 + 1744) = 0;
          sub_239490944(v12, *(_QWORD *)(a1 + 800), *(_QWORD *)(a1 + 808), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 808) - *(_QWORD *)(a1 + 800)) >> 3));
          *(_BYTE *)(a1 + 1752) = 1;
          if ((v15 & 0x80000000) == 0)
            return v11;
          goto LABEL_16;
        }
        sub_239A70694((uint64_t)v12, *(std::string **)(a1 + 800), *(std::string **)(a1 + 808), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 808) - *(_QWORD *)(a1 + 800)) >> 3));
      }
      if ((v15 & 0x80000000) == 0)
        return v11;
LABEL_16:
      operator delete(__p[0]);
      return v11;
    }
  }
  else
  {
LABEL_22:
    if (*(_BYTE *)(a1 + 4))
      goto LABEL_12;
  }
  if (*(_DWORD *)a1 >= 2u)
    goto LABEL_12;
  return 1;
}

void sub_239B20294(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B202B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  void *__p[2];
  char v6;

  if (*(_DWORD *)a1 < 2u)
    return 1;
  sub_2396F295C((uint64_t *)(a1 + 776), a1 + 8, (uint64_t)__p);
  kdebug_trace();
  v3 = sub_239614DB0(*a2, (uint64_t)__p, 3);
  kdebug_trace();
  if (v6 < 0)
    operator delete(__p[0]);
  return v3;
}

void sub_239B20360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239B20380(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 2056);
  *(_QWORD *)(a1 + 2048) = 0;
  *(_QWORD *)(a1 + 2056) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B203E0(uint64_t a1, uint64_t a2)
{
  void **v4;
  void **v5;
  void *v6;
  void *v7[2];
  char v8;
  void *__p;
  void **v10;

  if (*(_BYTE *)(a2 + 4) || *(_DWORD *)a2)
  {
    sub_2396F295C((uint64_t *)(a2 + 848), a2 + 8, a1);
  }
  else
  {
    v8 = 8;
    strcpy((char *)v7, "mesh.obj");
    sub_2396F2748(&__p, (uint64_t *)(a2 + 32), (uint64_t)v7);
    sub_2396F295C((uint64_t *)&__p, a2 + 8, a1);
    v4 = (void **)__p;
    if (__p)
    {
      v5 = v10;
      v6 = __p;
      if (v10 != __p)
      {
        do
        {
          if (*((char *)v5 - 1) < 0)
            operator delete(*(v5 - 3));
          v5 -= 3;
        }
        while (v5 != v4);
        v6 = __p;
      }
      v10 = v4;
      operator delete(v6);
    }
    if (v8 < 0)
      operator delete(v7[0]);
  }
}

void sub_239B204CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15)
{
  sub_23941A260(&a15);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239B204F0(char *__dst, uint64_t a2)
{
  std::string *v4;
  _BYTE *v5;
  int v6;
  std::string *v7;
  int v8;
  std::string __p;
  unsigned __int8 v10;

  v4 = (std::string *)(a2 + 2064);
  if (!*(_BYTE *)(a2 + 2088))
  {
    if (!*(_BYTE *)(a2 + 4) || !*(_BYTE *)(a2 + 1784))
    {
      *__dst = 0;
      __dst[24] = 0;
      return;
    }
    sub_2396F295C((uint64_t *)(a2 + 1760), a2 + 8, (uint64_t)&__p);
    std::__fs::filesystem::__status((const std::__fs::filesystem::path *)&__p, 0);
    v6 = v10;
    if (v10 != 255 && v10)
    {
      if (*(_BYTE *)(a2 + 2088))
      {
        std::string::operator=(v4, &__p);
      }
      else
      {
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          sub_23941A7F8(v4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        else
          *v4 = __p;
        *(_BYTE *)(a2 + 2088) = 1;
      }
      v7 = (std::string *)(a2 + 2216);
      if (*(_BYTE *)(a2 + 2240))
      {
        std::string::operator=(v7, &__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
LABEL_23:
          operator delete(__p.__r_.__value_.__l.__data_);
      }
      else
      {
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_23941A7F8(v7, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        }
        else
        {
          *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(_QWORD *)(a2 + 2232) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
        }
        *(_BYTE *)(a2 + 2240) = 1;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_23;
      }
    }
    else
    {
      *__dst = 0;
      __dst[24] = 0;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_23;
    }
    if (!v6)
      return;
    if (v6 == 255)
      return;
    v8 = *(unsigned __int8 *)(a2 + 2088);
    *__dst = 0;
    __dst[24] = 0;
    v5 = __dst + 24;
    if (!v8)
      return;
    goto LABEL_3;
  }
  *__dst = 0;
  __dst[24] = 0;
  v5 = __dst + 24;
LABEL_3:
  if (*(char *)(a2 + 2087) < 0)
  {
    sub_23941A7F8(__dst, *(void **)(a2 + 2064), *(_QWORD *)(a2 + 2072));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    *((_QWORD *)__dst + 2) = *((_QWORD *)&v4->__r_.__value_.__l + 2);
  }
  *v5 = 1;
}

void sub_239B20694(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239B206CC(uint64_t a1, std::string *__str)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  char *v8;

  v4 = (std::string *)(a1 + 2064);
  if (*(_BYTE *)(a1 + 2088))
  {
    std::string::operator=(v4, __str);
  }
  else
  {
    if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_23941A7F8(v4, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
      v4->__r_.__value_.__r.__words[2] = __str->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v5;
    }
    *(_BYTE *)(a1 + 2088) = 1;
  }
  v6 = (std::string *)(a1 + 2216);
  if (*(_BYTE *)(a1 + 2240))
  {
    std::string::operator=(v6, __str);
    if (!*(_BYTE *)(a1 + 4))
      goto LABEL_14;
  }
  else
  {
    if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_23941A7F8(v6, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
      *(_QWORD *)(a1 + 2232) = *((_QWORD *)&__str->__r_.__value_.__l + 2);
      *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
    }
    *(_BYTE *)(a1 + 2240) = 1;
    if (!*(_BYTE *)(a1 + 4))
    {
LABEL_14:
      if (!*(_DWORD *)a1)
        return;
    }
  }
  v8 = (char *)(a1 + 1760);
  if (*(_BYTE *)(a1 + 1784))
  {
    sub_239A70694((uint64_t)v8, *(std::string **)(a1 + 848), *(std::string **)(a1 + 856), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 848)) >> 3));
  }
  else
  {
    *(_QWORD *)v8 = 0;
    *(_QWORD *)(a1 + 1768) = 0;
    *(_QWORD *)(a1 + 1776) = 0;
    sub_239490944(v8, *(_QWORD *)(a1 + 848), *(_QWORD *)(a1 + 856), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 856) - *(_QWORD *)(a1 + 848)) >> 3));
    *(_BYTE *)(a1 + 1784) = 1;
  }
}

BOOL sub_239B207F0(uint64_t a1, uint64_t a2)
{
  pthread_mutex_t *v4;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  int8x8_t v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  uint64_t **v12;
  uint64_t *v13;
  void *v14;
  void **v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *__p[2];
  uint64_t v28;
  char v29;

  v4 = (pthread_mutex_t *)(a1 + 40);
  sub_2397A1694((pthread_mutex_t *)(a1 + 40));
  if (*(char *)(a2 + 23) < 0)
  {
    sub_23941A7F8(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v28 = *(_QWORD *)(a2 + 16);
  }
  if (v28 >= 0)
    v5 = (uint64_t *)__p;
  else
    v5 = (uint64_t *)__p[0];
  if (v28 >= 0)
    v6 = HIBYTE(v28);
  else
    v6 = (unint64_t)__p[1];
  v7 = sub_239428940((uint64_t)&v29, v5, v6);
  v8 = *(int8x8_t *)(a1 + 8);
  if (!*(_QWORD *)&v8)
    goto LABEL_59;
  v9 = v7;
  v10 = (uint8x8_t)vcnt_s8(v8);
  v10.i16[0] = vaddlv_u8(v10);
  if (v10.u32[0] > 1uLL)
  {
    v11 = v7;
    if (v7 >= *(_QWORD *)&v8)
      v11 = v7 % *(_QWORD *)&v8;
  }
  else
  {
    v11 = (*(_QWORD *)&v8 - 1) & v7;
  }
  v12 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v11);
  if (!v12 || (v13 = *v12) == 0)
  {
LABEL_59:
    v17 = 0;
    if ((SHIBYTE(v28) & 0x80000000) == 0)
      goto LABEL_58;
    goto LABEL_60;
  }
  if (v28 >= 0)
    v14 = (void *)HIBYTE(v28);
  else
    v14 = __p[1];
  if (v28 >= 0)
    v15 = __p;
  else
    v15 = (void **)__p[0];
  if (v10.u32[0] < 2uLL)
  {
    v16 = *(_QWORD *)&v8 - 1;
    while (1)
    {
      v22 = v13[1];
      if (v9 == v22)
      {
        v23 = *((unsigned __int8 *)v13 + 39);
        if ((v23 & 0x80u) == 0)
          v24 = (void *)*((unsigned __int8 *)v13 + 39);
        else
          v24 = (void *)v13[3];
        if (v24 == v14)
        {
          if ((v23 & 0x80) != 0)
          {
            if (!memcmp((const void *)v13[2], v15, v13[3]))
              goto LABEL_56;
          }
          else
          {
            if (!*((_BYTE *)v13 + 39))
              goto LABEL_56;
            v25 = 0;
            while (*((unsigned __int8 *)v13 + v25 + 16) == *((unsigned __int8 *)v15 + v25))
            {
              if (v23 == ++v25)
                goto LABEL_56;
            }
          }
        }
      }
      else if ((v22 & v16) != v11)
      {
        goto LABEL_59;
      }
      v17 = 0;
      v13 = (uint64_t *)*v13;
      if (!v13)
        goto LABEL_57;
    }
  }
  while (1)
  {
    v18 = v13[1];
    if (v9 != v18)
    {
      if (v18 >= *(_QWORD *)&v8)
        v18 %= *(_QWORD *)&v8;
      if (v18 != v11)
        goto LABEL_59;
      goto LABEL_26;
    }
    v19 = *((unsigned __int8 *)v13 + 39);
    v20 = (v19 & 0x80u) == 0 ? (void *)*((unsigned __int8 *)v13 + 39) : (void *)v13[3];
    if (v20 == v14)
      break;
LABEL_26:
    v17 = 0;
    v13 = (uint64_t *)*v13;
    if (!v13)
      goto LABEL_57;
  }
  if ((v19 & 0x80) == 0)
  {
    if (!*((_BYTE *)v13 + 39))
      goto LABEL_56;
    v21 = 0;
    while (*((unsigned __int8 *)v13 + v21 + 16) == *((unsigned __int8 *)v15 + v21))
    {
      if (v19 == ++v21)
        goto LABEL_56;
    }
    goto LABEL_26;
  }
  if (memcmp((const void *)v13[2], v15, v13[3]))
    goto LABEL_26;
LABEL_56:
  v17 = v13;
LABEL_57:
  if (SHIBYTE(v28) < 0)
LABEL_60:
    operator delete(__p[0]);
LABEL_58:
  sub_2397A16B4(v4);
  return v17 != 0;
}

void sub_239B20A54(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B20A74(uint64_t a1, uint64_t a2)
{
  pthread_mutex_t *v4;
  void *__p[2];
  uint64_t v7;

  v4 = (pthread_mutex_t *)(a1 + 40);
  sub_2397A1694((pthread_mutex_t *)(a1 + 40));
  if (*(char *)(a2 + 23) < 0)
  {
    sub_23941A7F8(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v7 = *(_QWORD *)(a2 + 16);
  }
  sub_2395138D4(a1, (uint64_t)__p, (uint64_t)__p);
  if (SHIBYTE(v7) < 0)
    operator delete(__p[0]);
  return sub_2397A16B4(v4);
}

void sub_239B20B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  pthread_mutex_t *v14;

  sub_2397A16B4(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_239B20B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::ios_base *v8;
  BOOL v9;
  std::string::size_type size;
  __int128 *v11;
  uint64_t v12;
  int8x16_t *v13;
  size_t v14;
  size_t v15;
  void **p_dst;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void **v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void **v32;
  std::ios_base *v33;
  std::string::size_type v34;
  char v35;
  _BOOL4 v36;
  void **v37;
  uint64_t v38;
  int8x16_t *v39;
  size_t v40;
  std::string::size_type v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  const char *v46;
  size_t v47;
  size_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  int8x16_t *v53;
  size_t v54;
  const void *v55;
  const void **v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  const char *v60;
  size_t v61;
  size_t v62;
  __int128 *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int8x16_t *v67;
  size_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  void **v76;
  void *v77;
  uint64_t v78;
  _BOOL4 v79;
  _BOOL4 v80;
  void **v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *__p;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  void *v90;
  char v91;
  void *v92;
  char *v93;
  uint64_t v94;
  void *v95[9];
  uint64_t v96[3];
  uint64_t v97[96];
  const void *v98[3];
  void *v99[3];
  void **__dst;
  size_t v101;
  int64_t v102;
  char v103;
  std::string v104;
  void *v105[2];
  unint64_t v106;
  const void *v107[4];
  void *v108;
  size_t v109;
  unint64_t v110;
  std::string v111;
  uint64_t v112;
  __int128 v113;
  _BYTE v114[12];
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE v122[56];
  void *v123;
  char v124;
  char v125;
  _BYTE v126[296];
  uint64_t v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  void *v152[2];
  uint64_t v153;
  uint64_t v154;
  __int16 v155;
  char v156;
  int64x2_t *v157[6];
  void *v158;
  uint64_t v159;
  _BYTE v160[32];
  uint64_t v161;
  int v162;
  int v163;
  uint64_t v164;
  __int128 v165;
  __int16 v166;
  char v167[16];
  __int128 v168;
  unint64_t v169;
  __int128 v170;
  __int16 v171;
  uint64_t v172;
  char v173[8];
  __int128 v174;
  __int16 v175;
  uint64_t v176;

  v176 = *MEMORY[0x24BDAC8D0];
  sub_239BB18C8((uint64_t *)v95);
  v92 = 0;
  v93 = 0;
  v94 = 0;
  v85 = a1;
  sub_2396F295C(v97, a1, (uint64_t)&v90);
  v4 = MEMORY[0x24BEDB838];
  v5 = MEMORY[0x24BEDB838] + 64;
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v7 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v127 = MEMORY[0x24BEDB838] + 64;
  v118 = v6;
  *(uint64_t *)((char *)&v118 + *(_QWORD *)(v6 - 24)) = v7;
  v119 = 0;
  v8 = (std::ios_base *)((char *)&v118 + *(_QWORD *)(v118 - 24));
  std::ios_base::init(v8, &v120);
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  v118 = v4 + 24;
  v127 = v5;
  MEMORY[0x23B83DC80](&v120);
  std::ifstream::open();
  if ((v122[*(_QWORD *)(v118 - 24)] & 5) != 0)
  {
    v9 = 0;
    goto LABEL_46;
  }
  HIBYTE(v107[2]) = 18;
  strcpy((char *)v107, "CorePhotogrammetry");
  sub_2395AC84C(v107, &v108);
  sub_239A7D600(&v111, *(_QWORD **)&v122[*(_QWORD *)(v118 - 24) + 8]);
  size = HIBYTE(v111.__r_.__value_.__r.__words[2]);
  if ((v111.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v111.__r_.__value_.__l.__size_;
  if (!size)
  {
    v9 = 0;
    if ((*((_BYTE *)&v111.__r_.__value_.__s + 23) & 0x80) != 0)
      goto LABEL_39;
    goto LABEL_40;
  }
  sub_2395AC2E8((const void **)&v111.__r_.__value_.__l.__data_, (uint64_t)&v108, (uint64_t)&v113);
  v9 = v114[8] != 0;
  if (v114[8])
  {
    sub_2394988CC((uint64_t)v152);
    if (v114[7] >= 0)
      v11 = &v113;
    else
      v11 = (__int128 *)v113;
    if (v114[7] >= 0)
      v12 = v114[7];
    else
      v12 = *((_QWORD *)&v113 + 1);
    sub_239458500(&v153, (uint64_t)v11, v12);
    sub_2396157EC((uint64_t)&__p, 1);
    v168 = xmmword_239F10759;
    LOWORD(v169) = 21;
    v13 = sub_239A91B18((int8x16_t *)&v168);
    v14 = strlen(v13->i8);
    if (v14 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v15 = v14;
    v83 = a2;
    if (v14 >= 0x17)
    {
      v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v14 | 7) != 0x17)
        v17 = v14 | 7;
      v18 = v17 + 1;
      p_dst = (void **)operator new(v17 + 1);
      v102 = v18 | 0x8000000000000000;
      __dst = p_dst;
      v101 = v15;
    }
    else
    {
      HIBYTE(v102) = v14;
      p_dst = (void **)&__dst;
      if (!v14)
        goto LABEL_23;
    }
    memmove(p_dst, v13, v15);
LABEL_23:
    *((_BYTE *)p_dst + v15) = 0;
    v19 = (_QWORD *)operator new();
    *v19 = &off_250ADF7B0;
    v19[1] = &v92;
    sub_23961580C((uint64_t)&__p, (uint64_t)&__dst, (uint64_t)v19);
    if (SHIBYTE(v102) < 0)
      operator delete(__dst);
    sub_23959479C((uint64_t)&__p, (uint64_t *)v152);
    v20 = (_QWORD *)*((_QWORD *)&v87 + 1);
    if (*((_QWORD *)&v87 + 1))
    {
      do
      {
        v21 = v20[5];
        if (v21)
          (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
        v20 = (_QWORD *)*v20;
      }
      while (v20);
      v22 = (void **)*((_QWORD *)&v87 + 1);
      if (*((_QWORD *)&v87 + 1))
      {
        do
        {
          v32 = (void **)*v22;
          if (*((char *)v22 + 39) < 0)
            operator delete(v22[2]);
          operator delete(v22);
          v22 = v32;
        }
        while (v32);
      }
    }
    v23 = __p;
    __p = 0;
    if (v23)
      operator delete(v23);
    v152[0] = *(void **)MEMORY[0x24BEDB7F0];
    v24 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    *(void **)((char *)v152 + *((_QWORD *)v152[0] - 3)) = *(void **)(MEMORY[0x24BEDB7F0] + 64);
    v153 = v24;
    v154 = MEMORY[0x24BEDB848] + 16;
    if (SHIBYTE(v159) < 0)
      operator delete(v158);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x23B83E250](v160);
    a2 = v83;
    if (v114[8] && (v114[7] & 0x80000000) != 0)
      operator delete((void *)v113);
  }
  if ((*((_BYTE *)&v111.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_39:
    operator delete(v111.__r_.__value_.__l.__data_);
LABEL_40:
  if (v108)
  {
    v109 = (size_t)v108;
    operator delete(v108);
  }
  if (SHIBYTE(v107[2]) < 0)
    operator delete((void *)v107[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)&v118 + *(_QWORD *)(v118 - 24)), *(_DWORD *)&v122[*(_QWORD *)(v118 - 24)] | 4);
LABEL_46:
  v25 = *MEMORY[0x24BEDB7E0];
  v118 = v25;
  v26 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 24);
  *(uint64_t *)((char *)&v118 + *(_QWORD *)(v25 - 24)) = v26;
  MEMORY[0x23B83DC8C](&v120);
  std::istream::~istream();
  MEMORY[0x23B83E250](&v127);
  if (!v9)
  {
LABEL_56:
    v30 = 1;
    goto LABEL_57;
  }
  if (v93 - (_BYTE *)v92 != 12 || *(_DWORD *)v92 != 2 || *((_DWORD *)v92 + 1) != 57 || *((_DWORD *)v92 + 2))
  {
    sub_2394988CC((uint64_t)&v118);
    v27 = (char *)v92;
    v28 = v93;
    if (v92 != v93)
    {
      do
      {
        std::ostream::operator<<();
        sub_239458500(&v120, (uint64_t)".", 1);
        v27 += 4;
      }
      while (v27 != v28);
    }
    v118 = *MEMORY[0x24BEDB7F0];
    v29 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    *(uint64_t *)((char *)&v118 + *(_QWORD *)(v118 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
    v120 = v29;
    v121 = MEMORY[0x24BEDB848] + 16;
    if (v125 < 0)
      operator delete(v123);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x23B83E250](v126);
    goto LABEL_56;
  }
  LODWORD(__p) = 0;
  v87 = 0u;
  v88 = 0u;
  v89 = 0u;
  v127 = v4 + 64;
  v118 = v6;
  *(uint64_t *)((char *)&v118 + *(_QWORD *)(v6 - 24)) = v7;
  v119 = 0;
  v33 = (std::ios_base *)((char *)&v118 + *(_QWORD *)(v118 - 24));
  std::ios_base::init(v33, &v120);
  v33[1].__vftable = 0;
  v33[1].__fmtflags_ = -1;
  v118 = v4 + 24;
  v127 = v4 + 64;
  MEMORY[0x23B83DC80](&v120);
  std::ifstream::open();
  if ((v122[*(_QWORD *)(v118 - 24)] & 5) != 0)
  {
    v118 = v25;
    *(uint64_t *)((char *)&v118 + *(_QWORD *)(v25 - 24)) = v26;
    MEMORY[0x23B83DC8C](&v120);
    std::istream::~istream();
    MEMORY[0x23B83E250](&v127);
    goto LABEL_160;
  }
  HIBYTE(v98[2]) = 18;
  strcpy((char *)v98, "CorePhotogrammetry");
  sub_2395AC84C(v98, v99);
  sub_239A7D600(&v104, *(_QWORD **)&v122[*(_QWORD *)(v118 - 24) + 8]);
  v34 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
  v35 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
  if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v34 = v104.__r_.__value_.__l.__size_;
  if (!v34)
  {
    v36 = 0;
    goto LABEL_139;
  }
  sub_2395AC2E8((const void **)&v104.__r_.__value_.__l.__data_, (uint64_t)v99, (uint64_t)&__dst);
  v36 = v103 != 0;
  if (v103)
  {
    sub_2394988CC((uint64_t)v152);
    if (v102 >= 0)
      v37 = (void **)&__dst;
    else
      v37 = __dst;
    if (v102 >= 0)
      v38 = HIBYTE(v102);
    else
      v38 = v101;
    sub_239458500(&v153, (uint64_t)v37, v38);
    sub_2396157EC((uint64_t)&v113, 1);
    v112 = 0;
    v174 = xmmword_239F1076B;
    v175 = 13;
    v39 = sub_239A91B18((int8x16_t *)&v174);
    v40 = strlen(v39->i8);
    if (v40 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v41 = v40;
    v84 = a2;
    if (v40 >= 0x17)
    {
      v43 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v40 | 7) != 0x17)
        v43 = v40 | 7;
      v44 = v43 + 1;
      v42 = operator new(v43 + 1);
      v111.__r_.__value_.__r.__words[2] = v44 | 0x8000000000000000;
      v111.__r_.__value_.__r.__words[0] = (std::string::size_type)v42;
      v111.__r_.__value_.__l.__size_ = v41;
    }
    else
    {
      *((_BYTE *)&v111.__r_.__value_.__s + 23) = v40;
      v42 = &v111;
      if (!v40)
      {
LABEL_86:
        v42[v41] = 0;
        v45 = (_QWORD *)operator new();
        *v45 = &off_250AF5348;
        v45[1] = &v89;
        sub_23961580C((uint64_t)&v113, (uint64_t)&v111, (uint64_t)v45);
        v172 = 0x65596A637E6F7606;
        strcpy(v173, "ishr");
        v46 = sub_239510ECC((uint64_t)&v172);
        v47 = strlen(v46);
        if (v47 > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        v48 = v47;
        if (v47 >= 0x17)
        {
          v50 = (v47 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v47 | 7) != 0x17)
            v50 = v47 | 7;
          v51 = v50 + 1;
          v49 = operator new(v50 + 1);
          v110 = v51 | 0x8000000000000000;
          v108 = v49;
          v109 = v48;
        }
        else
        {
          HIBYTE(v110) = v47;
          v49 = &v108;
          if (!v47)
          {
LABEL_94:
            *((_BYTE *)v49 + v48) = 0;
            v52 = (_QWORD *)operator new();
            *v52 = &off_250ADFF20;
            v52[1] = &v87;
            sub_23961580C((uint64_t)&v113, (uint64_t)&v108, (uint64_t)v52);
            v170 = xmmword_239F1077D;
            v171 = 45;
            v53 = sub_239A91B18((int8x16_t *)&v170);
            v54 = strlen(v53->i8);
            if (v54 > 0x7FFFFFFFFFFFFFF7)
              sub_23941A5AC();
            v55 = (const void *)v54;
            if (v54 >= 0x17)
            {
              v57 = (v54 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v54 | 7) != 0x17)
                v57 = v54 | 7;
              v58 = v57 + 1;
              v56 = (const void **)operator new(v57 + 1);
              v107[2] = (const void *)(v58 | 0x8000000000000000);
              v107[0] = v56;
              v107[1] = v55;
            }
            else
            {
              HIBYTE(v107[2]) = v54;
              v56 = v107;
              if (!v54)
              {
LABEL_102:
                *((_BYTE *)v55 + (_QWORD)v56) = 0;
                v59 = (_QWORD *)operator new();
                *v59 = &off_250AF5378;
                v59[1] = (char *)&v87 + 8;
                sub_23961580C((uint64_t)&v113, (uint64_t)v107, (uint64_t)v59);
                strcpy(v167, "\niboiazecd~");
                v60 = sub_23958E4C8((uint64_t)v167);
                v61 = strlen(v60);
                if (v61 > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                v62 = v61;
                if (v61 >= 0x17)
                {
                  v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v61 | 7) != 0x17)
                    v64 = v61 | 7;
                  v65 = v64 + 1;
                  v63 = (__int128 *)operator new(v64 + 1);
                  *((_QWORD *)&v168 + 1) = v62;
                  v169 = v65 | 0x8000000000000000;
                  *(_QWORD *)&v168 = v63;
                }
                else
                {
                  HIBYTE(v169) = v61;
                  v63 = &v168;
                  if (!v61)
                  {
LABEL_110:
                    *((_BYTE *)v63 + v62) = 0;
                    v66 = (_QWORD *)operator new();
                    *v66 = &off_250ADF420;
                    v66[1] = (char *)&v112 + 4;
                    sub_23961580C((uint64_t)&v113, (uint64_t)&v168, (uint64_t)v66);
                    v165 = xmmword_239F1078F;
                    v166 = 52;
                    v67 = sub_239A91B18((int8x16_t *)&v165);
                    v68 = strlen(v67->i8);
                    if (v68 > 0x7FFFFFFFFFFFFFF7)
                      sub_23941A5AC();
                    v69 = (void *)v68;
                    if (v68 >= 0x17)
                    {
                      v71 = (v68 & 0xFFFFFFFFFFFFFFF8) + 8;
                      if ((v68 | 7) != 0x17)
                        v71 = v68 | 7;
                      v72 = v71 + 1;
                      v70 = operator new(v71 + 1);
                      v106 = v72 | 0x8000000000000000;
                      v105[0] = v70;
                      v105[1] = v69;
                    }
                    else
                    {
                      HIBYTE(v106) = v68;
                      v70 = v105;
                      if (!v68)
                      {
LABEL_118:
                        *((_BYTE *)v69 + (_QWORD)v70) = 0;
                        v73 = (_QWORD *)operator new();
                        *v73 = &off_250ADF420;
                        v73[1] = &v112;
                        sub_23961580C((uint64_t)&v113, (uint64_t)v105, (uint64_t)v73);
                        a2 = v84;
                        if (SHIBYTE(v106) < 0)
                        {
                          operator delete(v105[0]);
                          if ((SHIBYTE(v169) & 0x80000000) == 0)
                          {
LABEL_120:
                            if ((SHIBYTE(v107[2]) & 0x80000000) == 0)
                              goto LABEL_121;
                            goto LABEL_169;
                          }
                        }
                        else if ((SHIBYTE(v169) & 0x80000000) == 0)
                        {
                          goto LABEL_120;
                        }
                        operator delete((void *)v168);
                        if ((SHIBYTE(v107[2]) & 0x80000000) == 0)
                        {
LABEL_121:
                          if ((SHIBYTE(v110) & 0x80000000) == 0)
                            goto LABEL_122;
                          goto LABEL_170;
                        }
LABEL_169:
                        operator delete((void *)v107[0]);
                        if ((SHIBYTE(v110) & 0x80000000) == 0)
                        {
LABEL_122:
                          if ((SHIBYTE(v111.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                          {
LABEL_123:
                            if (sub_23959479C((uint64_t)&v113, (uint64_t *)v152))
                            {
                              LODWORD(__p) = HIDWORD(v112);
                              HIDWORD(v89) = v112;
                            }
                            v74 = *(_QWORD **)v114;
                            if (*(_QWORD *)v114)
                            {
                              do
                              {
                                v75 = v74[5];
                                if (v75)
                                  (*(void (**)(uint64_t))(*(_QWORD *)v75 + 8))(v75);
                                v74 = (_QWORD *)*v74;
                              }
                              while (v74);
                              v76 = *(void ***)v114;
                              if (*(_QWORD *)v114)
                              {
                                do
                                {
                                  v81 = (void **)*v76;
                                  if (*((char *)v76 + 39) < 0)
                                    operator delete(v76[2]);
                                  operator delete(v76);
                                  v76 = v81;
                                }
                                while (v81);
                              }
                            }
                            v77 = (void *)v113;
                            *(_QWORD *)&v113 = 0;
                            if (v77)
                              operator delete(v77);
                            v152[0] = *(void **)MEMORY[0x24BEDB7F0];
                            v78 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
                            *(void **)((char *)v152 + *((_QWORD *)v152[0] - 3)) = *(void **)(MEMORY[0x24BEDB7F0] + 64);
                            v153 = v78;
                            v154 = MEMORY[0x24BEDB848] + 16;
                            if (SHIBYTE(v159) < 0)
                              operator delete(v158);
                            std::streambuf::~streambuf();
                            std::iostream::~basic_iostream();
                            MEMORY[0x23B83E250](v160);
                            if (v103 && SHIBYTE(v102) < 0)
                              operator delete(__dst);
                            goto LABEL_138;
                          }
LABEL_171:
                          operator delete(v111.__r_.__value_.__l.__data_);
                          goto LABEL_123;
                        }
LABEL_170:
                        operator delete(v108);
                        if ((SHIBYTE(v111.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                          goto LABEL_123;
                        goto LABEL_171;
                      }
                    }
                    memmove(v70, v67, (size_t)v69);
                    goto LABEL_118;
                  }
                }
                memmove(v63, v60, v62);
                goto LABEL_110;
              }
            }
            memmove(v56, v53, (size_t)v55);
            goto LABEL_102;
          }
        }
        memmove(v49, v46, v48);
        goto LABEL_94;
      }
    }
    memmove(v42, v39, v41);
    goto LABEL_86;
  }
LABEL_138:
  v35 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
LABEL_139:
  if (v35 < 0)
    operator delete(v104.__r_.__value_.__l.__data_);
  if (v99[0])
  {
    v99[1] = v99[0];
    operator delete(v99[0]);
  }
  if (SHIBYTE(v98[2]) < 0)
    operator delete((void *)v98[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)&v118 + *(_QWORD *)(v118 - 24)), *(_DWORD *)&v122[*(_QWORD *)(v118 - 24)] | 4);
  v118 = v25;
  *(uint64_t *)((char *)&v118 + *(_QWORD *)(v25 - 24)) = v26;
  MEMORY[0x23B83DC8C](&v120);
  std::istream::~istream();
  MEMORY[0x23B83E250](&v127);
  if (!v36)
  {
LABEL_160:
    v30 = 2;
    v82 = (void *)*((_QWORD *)&v87 + 1);
    if (!*((_QWORD *)&v87 + 1))
      goto LABEL_57;
    goto LABEL_161;
  }
  LOBYTE(v118) = 0;
  LOBYTE(v121) = 0;
  v122[0] = 0;
  v122[24] = 0;
  v122[32] = 0;
  LOBYTE(v123) = 0;
  v124 = 0;
  v126[8] = 0;
  v126[16] = 0;
  v126[56] = 0;
  v126[64] = 0;
  v126[88] = 0;
  v126[96] = 0;
  v126[136] = 0;
  v126[144] = 0;
  v126[168] = 0;
  v126[176] = 0;
  v126[216] = 0;
  v126[224] = 0;
  v126[264] = 0;
  v126[272] = 0;
  LOBYTE(v127) = 0;
  v128 = 0;
  v129 = 0;
  v130 = 0;
  v131 = 0;
  v132 = 0;
  v133 = 0;
  v134 = 0;
  v135 = 0;
  v136 = 0;
  v137 = 0;
  v138 = 0;
  v139 = 0;
  v140 = 0;
  v141 = 0;
  v142 = 0;
  v143 = 0;
  v144 = 0;
  v145 = 0;
  v146 = 0;
  v147 = 0;
  v148 = 0;
  v149 = 0;
  v150 = 0;
  v151 = 0;
  sub_2396F295C(v96, v85, (uint64_t)&__dst);
  if (sub_239B21F78((uint64_t)&v118))
  {
    v79 = sub_239BB3AE8((uint64_t)&v118, v85);
    if ((_BYTE)v121)
      v80 = v79;
    else
      v80 = 0;
    v30 = 2;
    if (v80)
    {
      v152[1] = 0;
      v152[0] = 0;
      LOBYTE(v154) = 0;
      v153 = 0;
      HIDWORD(v154) = 2;
      v155 = 1;
      v156 = 1;
      sub_239A688A8(v157);
      v157[3] = (int64x2_t *)(int)std::thread::hardware_concurrency();
      v157[4] = (int64x2_t *)0x6300000000;
      v159 = 0;
      memset(&v160[8], 0, 24);
      v161 = 0x200000001;
      v162 = 65798;
      v163 = 0;
      v164 = 10;
      LOBYTE(v113) = v154;
      *(_QWORD *)((char *)&v113 + 4) = 0x6300000000;
      BYTE12(v113) = v156;
      *(_DWORD *)v114 = HIDWORD(v154);
      v115 = 0;
      *(_QWORD *)&v114[4] = 0;
      v116 = 0x200000001;
      v117 = 65798;
      sub_239B23DC4((uint64_t)v152);
      sub_2396F295C(&v118, v85, (uint64_t)v152);
      if (sub_239B23E64((uint64_t)&v113))
      {
        sub_239B24990(&v111, (__int128 *)&__p, v85, &v113, (uint64_t)&v118);
        sub_239B24AF0(a2, (__int128 *)&v111);
        sub_239A4D7C0((uint64_t)&v111);
        v30 = 0;
      }
      if (SHIBYTE(v153) < 0)
        operator delete(v152[0]);
    }
  }
  else
  {
    v30 = 2;
  }
  if (SHIBYTE(v102) < 0)
    operator delete(__dst);
  sub_239A73240((uint64_t)&v118);
  v82 = (void *)*((_QWORD *)&v87 + 1);
  if (*((_QWORD *)&v87 + 1))
  {
LABEL_161:
    *(_QWORD *)&v88 = v82;
    operator delete(v82);
  }
LABEL_57:
  if (v91 < 0)
    operator delete(v90);
  if (v92)
  {
    v93 = (char *)v92;
    operator delete(v92);
  }
  sub_239A73AEC(v95);
  return v30;
}

void sub_239B21B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, _Unwind_Exception *exception_object, uint64_t a19, uint64_t a20,...)
{
  _Unwind_Exception *v21;
  va_list va;

  va_start(va, a20);
  if (SLOBYTE(STACK[0x87F]) < 0)
  {
    operator delete((void *)STACK[0x868]);
    if ((SLOBYTE(STACK[0x427]) & 0x80000000) == 0)
    {
LABEL_7:
      sub_239A73240((uint64_t)&STACK[0x4E8]);
      if (a7)
      {
        operator delete(a7);
        if (a17 < 0)
        {
LABEL_9:
          operator delete(a12);
          v21 = exception_object;
          if (!exception_object)
          {
LABEL_14:
            sub_239A73AEC((void **)va);
            _Unwind_Resume(a1);
          }
LABEL_13:
          operator delete(v21);
          goto LABEL_14;
        }
      }
      else if (a17 < 0)
      {
        goto LABEL_9;
      }
      v21 = exception_object;
      if (!exception_object)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  else if ((SLOBYTE(STACK[0x427]) & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete((void *)STACK[0x410]);
  goto LABEL_7;
}

BOOL sub_239B21F78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  _BOOL8 v8;
  std::string::size_type size;
  void **v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  size_t v14;
  void *v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int16x8_t v20;
  const char *v21;
  const char *v22;
  size_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int8x16_t v29;
  double v30;
  int32x4_t v31;
  const char *v32;
  const char *v33;
  size_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int16x8_t v40;
  const char *v41;
  const char *v42;
  size_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  const char *v49;
  size_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int8x16_t v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  const char *v67;
  size_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  int32x4_t v74;
  double v75;
  int32x4_t v76;
  unsigned __int8 *v77;
  size_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  int8x8_t *v84;
  size_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  const char *v91;
  size_t v92;
  void *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  const char *v98;
  size_t v99;
  void *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  const char *v105;
  size_t v106;
  void *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  int8x16_t v112;
  double v113;
  int32x4_t v114;
  const char *v115;
  const char *v116;
  size_t v117;
  void *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  int8x16_t v123;
  double v124;
  int32x4_t v125;
  const char *v126;
  const char *v127;
  size_t v128;
  void *v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  int8x16_t v134;
  double v135;
  int32x4_t v136;
  const char *v137;
  const char *v138;
  size_t v139;
  void *v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  const char *v145;
  size_t v146;
  void *v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  int8x16_t v152;
  double v153;
  int32x4_t v154;
  const char *v155;
  const char *v156;
  size_t v157;
  void *v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  int8x16_t v163;
  double v164;
  int32x4_t v165;
  const char *v166;
  const char *v167;
  size_t v168;
  void *v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  int8x16_t v174;
  double v175;
  int32x4_t v176;
  const char *v177;
  const char *v178;
  size_t v179;
  void *v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  double v185;
  int32x4_t v186;
  const char *v187;
  const char *v188;
  size_t v189;
  void *v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  int8x16_t v195;
  double v196;
  int32x4_t v197;
  const char *v198;
  const char *v199;
  size_t v200;
  void *v201;
  void *v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  const char *v206;
  size_t v207;
  void *v208;
  void *v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  const char *v213;
  const char *v214;
  size_t v215;
  void *v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  _QWORD *v221;
  uint64_t v222;
  void **v223;
  void *v224;
  uint64_t v225;
  void **v227;
  const void *v228[4];
  void *v229[3];
  uint64_t v230[2];
  _QWORD v231[11];
  char v232;
  uint64_t v233;
  void *v234[2];
  unsigned __int8 v235;
  char v236;
  std::string v237;
  void *v238[2];
  unint64_t v239;
  int v240;
  __int16 v241;
  void *v242[2];
  unint64_t v243;
  void *v244[2];
  unint64_t v245;
  void *v246[2];
  unint64_t v247;
  void *v248[2];
  unint64_t v249;
  void *v250[2];
  unint64_t v251;
  void *v252[2];
  unint64_t v253;
  void *v254[2];
  unint64_t v255;
  void *v256[2];
  unint64_t v257;
  void *v258[2];
  unint64_t v259;
  void *v260[2];
  unint64_t v261;
  int v262;
  __int16 v263;
  char v264;
  void *v265[2];
  unint64_t v266;
  void *v267[2];
  unint64_t v268;
  void *v269[2];
  unint64_t v270;
  void *v271[2];
  unint64_t v272;
  void *v273[2];
  unint64_t v274;
  void *v275[2];
  unint64_t v276;
  void *v277[2];
  unint64_t v278;
  void *v279[2];
  unint64_t v280;
  void *v281[2];
  unint64_t v282;
  void *v283[2];
  unint64_t v284;
  void *v285[2];
  unint64_t v286;
  void *__dst[2];
  unint64_t v288;
  void *__p[2];
  void *v290;
  _QWORD v291[2];
  _BYTE v292[408];
  uint64_t v293[19];
  uint64_t v294;
  int v295;
  char v296[4];
  _OWORD v297[2];
  _OWORD v298[2];
  char v299;
  _OWORD v300[2];
  char v301[32];
  __int128 v302;
  int v303;
  uint64_t v304;
  int v305;
  char v306;
  char v307[32];
  char v308[32];
  _OWORD v309[2];
  uint64_t v310;
  __int16 v311;
  char v312;
  char v313[16];
  int8x8_t v314[2];
  unsigned __int8 v315[32];
  uint64_t v316;
  int v317;
  _OWORD v318[2];
  uint64_t v319;
  int v320;
  char v321;
  uint64_t v322;
  int v323;
  __int16 v324;
  char v325[32];
  uint64_t v326;
  char v327[8];
  __int128 v328;
  char v329;
  uint64_t v330;

  v330 = *MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEDB838];
  v3 = MEMORY[0x24BEDB838] + 64;
  v4 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v293[0] = MEMORY[0x24BEDB838] + 64;
  v291[0] = v5;
  *(_QWORD *)((char *)v291 + *(_QWORD *)(v5 - 24)) = v6;
  v291[1] = 0;
  v7 = (std::ios_base *)((char *)v291 + *(_QWORD *)(v291[0] - 24));
  std::ios_base::init(v7, v292);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  v291[0] = v2 + 24;
  v293[0] = v3;
  MEMORY[0x23B83DC80](v292);
  std::ifstream::open();
  if ((v292[*(_QWORD *)(v291[0] - 24) + 16] & 5) != 0)
  {
    v8 = 0;
    goto LABEL_243;
  }
  HIBYTE(v228[2]) = 18;
  strcpy((char *)v228, "CorePhotogrammetry");
  sub_2395AC84C(v228, v229);
  sub_239A7D600(&v237, *(_QWORD **)&v292[*(_QWORD *)(v291[0] - 24) + 24]);
  size = HIBYTE(v237.__r_.__value_.__r.__words[2]);
  if ((v237.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v237.__r_.__value_.__l.__size_;
  if (!size)
  {
    v8 = 0;
    if ((*((_BYTE *)&v237.__r_.__value_.__s + 23) & 0x80) != 0)
      goto LABEL_236;
    goto LABEL_237;
  }
  sub_2395AC2E8((const void **)&v237.__r_.__value_.__l.__data_, (uint64_t)v229, (uint64_t)v234);
  v8 = v236 != 0;
  if (v236)
  {
    sub_2394988CC((uint64_t)v230);
    if ((v235 & 0x80u) == 0)
      v10 = v234;
    else
      v10 = (void **)v234[0];
    if ((v235 & 0x80u) == 0)
      v11 = v235;
    else
      v11 = (uint64_t)v234[1];
    sub_239458500(v231, (uint64_t)v10, v11);
    sub_2396157EC((uint64_t)__p, 1);
    v328 = xmmword_239F107A1;
    v329 = 0;
    sub_2396EFA24((uint64_t)&v328);
    v13 = v12;
    v14 = strlen(v12);
    if (v14 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v15 = (void *)v14;
    if (v14 >= 0x17)
    {
      v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v14 | 7) != 0x17)
        v17 = v14 | 7;
      v18 = v17 + 1;
      v16 = (void **)operator new(v17 + 1);
      v288 = v18 | 0x8000000000000000;
      __dst[0] = v16;
      __dst[1] = v15;
    }
    else
    {
      HIBYTE(v288) = v14;
      v16 = __dst;
      if (!v14)
      {
LABEL_23:
        *((_BYTE *)v15 + (_QWORD)v16) = 0;
        v19 = (_QWORD *)operator new();
        *v19 = &off_250AF53A8;
        v19[1] = a1;
        sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v19);
        v326 = 0x7E796F7F7B6F780ALL;
        strcpy(v327, "Ucdle");
        sub_23971A32C((uint64_t)&v326, v20);
        v22 = v21;
        v23 = strlen(v21);
        if (v23 > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        v24 = (void *)v23;
        if (v23 >= 0x17)
        {
          v26 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v23 | 7) != 0x17)
            v26 = v23 | 7;
          v27 = v26 + 1;
          v25 = operator new(v26 + 1);
          v286 = v27 | 0x8000000000000000;
          v285[0] = v25;
          v285[1] = v24;
        }
        else
        {
          HIBYTE(v286) = v23;
          v25 = v285;
          if (!v23)
          {
LABEL_31:
            *((_BYTE *)v24 + (_QWORD)v25) = 0;
            v28 = (_QWORD *)operator new();
            *v28 = &off_250AF53A8;
            v28[1] = a1 + 32;
            sub_23961580C((uint64_t)__p, (uint64_t)v285, (uint64_t)v28);
            strcpy(v325, "5ZVW@[QYPjXPATQTAT");
            sub_23958E450((uint64_t)v325, *(int32x4_t *)"5ZVW@[QYPjXPATQTAT", v29, v30, v31);
            v33 = v32;
            v34 = strlen(v32);
            if (v34 > 0x7FFFFFFFFFFFFFF7)
              sub_23941A5AC();
            v35 = (void *)v34;
            if (v34 >= 0x17)
            {
              v37 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v34 | 7) != 0x17)
                v37 = v34 | 7;
              v38 = v37 + 1;
              v36 = operator new(v37 + 1);
              v284 = v38 | 0x8000000000000000;
              v283[0] = v36;
              v283[1] = v35;
            }
            else
            {
              HIBYTE(v284) = v34;
              v36 = v283;
              if (!v34)
              {
LABEL_39:
                *((_BYTE *)v35 + (_QWORD)v36) = 0;
                v39 = (_QWORD *)operator new();
                *v39 = &off_250AF53A8;
                v39[1] = a1 + 64;
                sub_23961580C((uint64_t)__p, (uint64_t)v283, (uint64_t)v39);
                v322 = 0x2341F1E1B05026BLL;
                v324 = 24;
                v323 = 235670022;
                sub_23971A32C((uint64_t)&v322, v40);
                v42 = v41;
                v43 = strlen(v41);
                if (v43 > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                v44 = (void *)v43;
                if (v43 >= 0x17)
                {
                  v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v43 | 7) != 0x17)
                    v46 = v43 | 7;
                  v47 = v46 + 1;
                  v45 = operator new(v46 + 1);
                  v282 = v47 | 0x8000000000000000;
                  v281[0] = v45;
                  v281[1] = v44;
                }
                else
                {
                  HIBYTE(v282) = v43;
                  v45 = v281;
                  if (!v43)
                  {
LABEL_47:
                    *((_BYTE *)v44 + (_QWORD)v45) = 0;
                    v48 = (_QWORD *)operator new();
                    *v48 = &off_250AF53D8;
                    v48[1] = a1 + 96;
                    sub_23961580C((uint64_t)__p, (uint64_t)v281, (uint64_t)v48);
                    v319 = 0x93B1011140A0D64;
                    v321 = 0;
                    v320 = 386864901;
                    v49 = sub_239510ECC((uint64_t)&v319);
                    v50 = strlen(v49);
                    if (v50 > 0x7FFFFFFFFFFFFFF7)
                      sub_23941A5AC();
                    v51 = (void *)v50;
                    if (v50 >= 0x17)
                    {
                      v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
                      if ((v50 | 7) != 0x17)
                        v53 = v50 | 7;
                      v54 = v53 + 1;
                      v52 = operator new(v53 + 1);
                      v280 = v54 | 0x8000000000000000;
                      v279[0] = v52;
                      v279[1] = v51;
                    }
                    else
                    {
                      HIBYTE(v280) = v50;
                      v52 = v279;
                      if (!v50)
                      {
LABEL_55:
                        *((_BYTE *)v51 + (_QWORD)v52) = 0;
                        v55 = (_QWORD *)operator new();
                        *v55 = &off_250AF53D8;
                        v55[1] = a1 + 144;
                        sub_23961580C((uint64_t)__p, (uint64_t)v279, (uint64_t)v55);
                        v318[0] = xmmword_239F107C5;
                        *(_QWORD *)((char *)v318 + 13) = 0x73757873647370;
                        sub_2396EFB50((uint64_t)v318, (int32x4_t)xmmword_239F107C5, v56, v57, v58);
                        v60 = v59;
                        v61 = strlen(v59);
                        if (v61 > 0x7FFFFFFFFFFFFFF7)
                          sub_23941A5AC();
                        v62 = (void *)v61;
                        if (v61 >= 0x17)
                        {
                          v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
                          if ((v61 | 7) != 0x17)
                            v64 = v61 | 7;
                          v65 = v64 + 1;
                          v63 = operator new(v64 + 1);
                          v278 = v65 | 0x8000000000000000;
                          v277[0] = v63;
                          v277[1] = v62;
                        }
                        else
                        {
                          HIBYTE(v278) = v61;
                          v63 = v277;
                          if (!v61)
                          {
LABEL_63:
                            *((_BYTE *)v62 + (_QWORD)v63) = 0;
                            v66 = (_QWORD *)operator new();
                            *v66 = &off_250AF53A8;
                            v66[1] = a1 + 192;
                            sub_23961580C((uint64_t)__p, (uint64_t)v277, (uint64_t)v66);
                            v316 = 0x1527100C081D1C78;
                            v317 = 722969;
                            v67 = sub_23958E4C8((uint64_t)&v316);
                            v68 = strlen(v67);
                            if (v68 > 0x7FFFFFFFFFFFFFF7)
                              sub_23941A5AC();
                            v69 = (void *)v68;
                            if (v68 >= 0x17)
                            {
                              v71 = (v68 & 0xFFFFFFFFFFFFFFF8) + 8;
                              if ((v68 | 7) != 0x17)
                                v71 = v68 | 7;
                              v72 = v71 + 1;
                              v70 = operator new(v71 + 1);
                              v276 = v72 | 0x8000000000000000;
                              v275[0] = v70;
                              v275[1] = v69;
                            }
                            else
                            {
                              HIBYTE(v276) = v68;
                              v70 = v275;
                              if (!v68)
                              {
LABEL_71:
                                *((_BYTE *)v69 + (_QWORD)v70) = 0;
                                v73 = (_QWORD *)operator new();
                                *v73 = &off_250AF53D8;
                                v73[1] = a1 + 224;
                                sub_23961580C((uint64_t)__p, (uint64_t)v275, (uint64_t)v73);
                                *(_OWORD *)v315 = xmmword_239F107DA;
                                *(_QWORD *)&v315[14] = 0x1D07000619020ALL;
                                v77 = sub_239A90BEC(v315, (int8x16_t)xmmword_239F107DA, v74, v75, v76);
                                v78 = strlen((const char *)v77);
                                if (v78 > 0x7FFFFFFFFFFFFFF7)
                                  sub_23941A5AC();
                                v79 = (void *)v78;
                                if (v78 >= 0x17)
                                {
                                  v81 = (v78 & 0xFFFFFFFFFFFFFFF8) + 8;
                                  if ((v78 | 7) != 0x17)
                                    v81 = v78 | 7;
                                  v82 = v81 + 1;
                                  v80 = operator new(v81 + 1);
                                  v274 = v82 | 0x8000000000000000;
                                  v273[0] = v80;
                                  v273[1] = v79;
                                }
                                else
                                {
                                  HIBYTE(v274) = v78;
                                  v80 = v273;
                                  if (!v78)
                                  {
LABEL_79:
                                    *((_BYTE *)v79 + (_QWORD)v80) = 0;
                                    v83 = (_QWORD *)operator new();
                                    *v83 = &off_250AF53A8;
                                    v83[1] = a1 + 272;
                                    sub_23961580C((uint64_t)__p, (uint64_t)v273, (uint64_t)v83);
                                    strcpy((char *)v314, "V037\"#$3%");
                                    v84 = sub_23950FF84(v314);
                                    v85 = strlen((const char *)v84);
                                    if (v85 > 0x7FFFFFFFFFFFFFF7)
                                      sub_23941A5AC();
                                    v86 = (void *)v85;
                                    if (v85 >= 0x17)
                                    {
                                      v88 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
                                      if ((v85 | 7) != 0x17)
                                        v88 = v85 | 7;
                                      v89 = v88 + 1;
                                      v87 = operator new(v88 + 1);
                                      v272 = v89 | 0x8000000000000000;
                                      v271[0] = v87;
                                      v271[1] = v86;
                                    }
                                    else
                                    {
                                      HIBYTE(v272) = v85;
                                      v87 = v271;
                                      if (!v85)
                                      {
LABEL_87:
                                        *((_BYTE *)v86 + (_QWORD)v87) = 0;
                                        v90 = (_QWORD *)operator new();
                                        *v90 = &off_250AF53D8;
                                        v90[1] = a1 + 304;
                                        sub_23961580C((uint64_t)__p, (uint64_t)v271, (uint64_t)v90);
                                        strcpy(v313, "K&*?(#.8");
                                        v91 = sub_239513718(v313);
                                        v92 = strlen(v91);
                                        if (v92 > 0x7FFFFFFFFFFFFFF7)
                                          sub_23941A5AC();
                                        v93 = (void *)v92;
                                        if (v92 >= 0x17)
                                        {
                                          v95 = (v92 & 0xFFFFFFFFFFFFFFF8) + 8;
                                          if ((v92 | 7) != 0x17)
                                            v95 = v92 | 7;
                                          v96 = v95 + 1;
                                          v94 = operator new(v95 + 1);
                                          v270 = v96 | 0x8000000000000000;
                                          v269[0] = v94;
                                          v269[1] = v93;
                                        }
                                        else
                                        {
                                          HIBYTE(v270) = v92;
                                          v94 = v269;
                                          if (!v92)
                                          {
LABEL_95:
                                            *((_BYTE *)v93 + (_QWORD)v94) = 0;
                                            v97 = (_QWORD *)operator new();
                                            *v97 = &off_250AF53D8;
                                            v97[1] = a1 + 352;
                                            sub_23961580C((uint64_t)__p, (uint64_t)v269, (uint64_t)v97);
                                            v310 = 0x1F190925171C097ALL;
                                            v312 = 0;
                                            v311 = 7956;
                                            v98 = (const char *)sub_23958E518((uint64_t)&v310);
                                            v99 = strlen(v98);
                                            if (v99 > 0x7FFFFFFFFFFFFFF7)
                                              sub_23941A5AC();
                                            v100 = (void *)v99;
                                            if (v99 >= 0x17)
                                            {
                                              v102 = (v99 & 0xFFFFFFFFFFFFFFF8) + 8;
                                              if ((v99 | 7) != 0x17)
                                                v102 = v99 | 7;
                                              v103 = v102 + 1;
                                              v101 = operator new(v102 + 1);
                                              v268 = v103 | 0x8000000000000000;
                                              v267[0] = v101;
                                              v267[1] = v100;
                                            }
                                            else
                                            {
                                              HIBYTE(v268) = v99;
                                              v101 = v267;
                                              if (!v99)
                                              {
LABEL_103:
                                                *((_BYTE *)v100 + (_QWORD)v101) = 0;
                                                v104 = (_QWORD *)operator new();
                                                *v104 = &off_250AF53A8;
                                                v104[1] = a1 + 400;
                                                sub_23961580C((uint64_t)__p, (uint64_t)v267, (uint64_t)v104);
                                                v264 = 0;
                                                v263 = 4361;
                                                v262 = 285413218;
                                                v105 = sub_239513174((char *)&v262);
                                                v106 = strlen(v105);
                                                if (v106 > 0x7FFFFFFFFFFFFFF7)
                                                  sub_23941A5AC();
                                                v107 = (void *)v106;
                                                if (v106 >= 0x17)
                                                {
                                                  v109 = (v106 & 0xFFFFFFFFFFFFFFF8) + 8;
                                                  if ((v106 | 7) != 0x17)
                                                    v109 = v106 | 7;
                                                  v110 = v109 + 1;
                                                  v108 = operator new(v109 + 1);
                                                  v266 = v110 | 0x8000000000000000;
                                                  v265[0] = v108;
                                                  v265[1] = v107;
                                                }
                                                else
                                                {
                                                  HIBYTE(v266) = v106;
                                                  v108 = v265;
                                                  if (!v106)
                                                  {
LABEL_111:
                                                    *((_BYTE *)v107 + (_QWORD)v108) = 0;
                                                    v111 = (_QWORD *)operator new();
                                                    *v111 = &off_250AF53D8;
                                                    v111[1] = a1 + 432;
                                                    sub_23961580C((uint64_t)__p, (uint64_t)v265, (uint64_t)v111);
                                                    v309[0] = xmmword_239F107F0;
                                                    *(_QWORD *)((char *)v309 + 15) = 0xA010A0C1C3002;
                                                    sub_2396EFBE0((uint64_t)v309, (int32x4_t)xmmword_239F107F0, v112, v113, v114);
                                                    v116 = v115;
                                                    v117 = strlen(v115);
                                                    if (v117 > 0x7FFFFFFFFFFFFFF7)
                                                      sub_23941A5AC();
                                                    v118 = (void *)v117;
                                                    if (v117 >= 0x17)
                                                    {
                                                      v120 = (v117 & 0xFFFFFFFFFFFFFFF8) + 8;
                                                      if ((v117 | 7) != 0x17)
                                                        v120 = v117 | 7;
                                                      v121 = v120 + 1;
                                                      v119 = operator new(v120 + 1);
                                                      v261 = v121 | 0x8000000000000000;
                                                      v260[0] = v119;
                                                      v260[1] = v118;
                                                    }
                                                    else
                                                    {
                                                      HIBYTE(v261) = v117;
                                                      v119 = v260;
                                                      if (!v117)
                                                      {
LABEL_119:
                                                        *((_BYTE *)v118 + (_QWORD)v119) = 0;
                                                        v122 = (_QWORD *)operator new();
                                                        *v122 = &off_250AF53A8;
                                                        v122[1] = a1 + 480;
                                                        sub_23961580C((uint64_t)__p, (uint64_t)v260, (uint64_t)v122);
                                                        strcpy(v308, "'RICNTSHUSBCxNJF@BT");
                                                        sub_23958E55C((uint64_t)v308, *(int32x4_t *)"'RICNTSHUSBCxNJF@BT", v123, v124, v125);
                                                        v127 = v126;
                                                        v128 = strlen(v126);
                                                        if (v128 > 0x7FFFFFFFFFFFFFF7)
                                                          sub_23941A5AC();
                                                        v129 = (void *)v128;
                                                        if (v128 >= 0x17)
                                                        {
                                                          v131 = (v128 & 0xFFFFFFFFFFFFFFF8) + 8;
                                                          if ((v128 | 7) != 0x17)
                                                            v131 = v128 | 7;
                                                          v132 = v131 + 1;
                                                          v130 = operator new(v131 + 1);
                                                          v259 = v132 | 0x8000000000000000;
                                                          v258[0] = v130;
                                                          v258[1] = v129;
                                                        }
                                                        else
                                                        {
                                                          HIBYTE(v259) = v128;
                                                          v130 = v258;
                                                          if (!v128)
                                                          {
LABEL_127:
                                                            *((_BYTE *)v129 + (_QWORD)v130) = 0;
                                                            v133 = (_QWORD *)operator new();
                                                            *v133 = &off_250AF53D8;
                                                            v133[1] = a1 + 512;
                                                            sub_23961580C((uint64_t)__p, (uint64_t)v258, (uint64_t)v133);
                                                            strcpy(v307, "X-6<1+,7*,=<\a59+3+");
                                                            sub_23958E450((uint64_t)v307, *(int32x4_t *)"X-6<1+,7*,=<\a59+3+", v134, v135, v136);
                                                            v138 = v137;
                                                            v139 = strlen(v137);
                                                            if (v139 > 0x7FFFFFFFFFFFFFF7)
                                                              sub_23941A5AC();
                                                            v140 = (void *)v139;
                                                            if (v139 >= 0x17)
                                                            {
                                                              v142 = (v139 & 0xFFFFFFFFFFFFFFF8) + 8;
                                                              if ((v139 | 7) != 0x17)
                                                                v142 = v139 | 7;
                                                              v143 = v142 + 1;
                                                              v141 = operator new(v142 + 1);
                                                              v257 = v143 | 0x8000000000000000;
                                                              v256[0] = v141;
                                                              v256[1] = v140;
                                                            }
                                                            else
                                                            {
                                                              HIBYTE(v257) = v139;
                                                              v141 = v256;
                                                              if (!v139)
                                                              {
LABEL_135:
                                                                *((_BYTE *)v140 + (_QWORD)v141) = 0;
                                                                v144 = (_QWORD *)operator new();
                                                                *v144 = &off_250AF53D8;
                                                                v144[1] = a1 + 560;
                                                                sub_23961580C((uint64_t)__p, (uint64_t)v256, (uint64_t)v144);
                                                                v304 = 0x704C677D7A7C6313;
                                                                v306 = 0;
                                                                v305 = 2003205247;
                                                                v145 = sub_239510ECC((uint64_t)&v304);
                                                                v146 = strlen(v145);
                                                                if (v146 > 0x7FFFFFFFFFFFFFF7)
                                                                  sub_23941A5AC();
                                                                v147 = (void *)v146;
                                                                if (v146 >= 0x17)
                                                                {
                                                                  v149 = (v146 & 0xFFFFFFFFFFFFFFF8) + 8;
                                                                  if ((v146 | 7) != 0x17)
                                                                    v149 = v146 | 7;
                                                                  v150 = v149 + 1;
                                                                  v148 = operator new(v149 + 1);
                                                                  v255 = v150 | 0x8000000000000000;
                                                                  v254[0] = v148;
                                                                  v254[1] = v147;
                                                                }
                                                                else
                                                                {
                                                                  HIBYTE(v255) = v146;
                                                                  v148 = v254;
                                                                  if (!v146)
                                                                  {
LABEL_143:
                                                                    *((_BYTE *)v147 + (_QWORD)v148) = 0;
                                                                    v151 = (_QWORD *)operator new();
                                                                    *v151 = &off_250AF53A8;
                                                                    v151[1] = a1 + 608;
                                                                    sub_23961580C((uint64_t)__p, (uint64_t)v254, (uint64_t)v151);
                                                                    v302 = xmmword_239F1082E;
                                                                    v303 = 7241573;
                                                                    sub_23958E55C((uint64_t)&v302, (int32x4_t)xmmword_239F1082E, v152, v153, v154);
                                                                    v156 = v155;
                                                                    v157 = strlen(v155);
                                                                    if (v157 > 0x7FFFFFFFFFFFFFF7)
                                                                      sub_23941A5AC();
                                                                    v158 = (void *)v157;
                                                                    if (v157 >= 0x17)
                                                                    {
                                                                      v160 = (v157 & 0xFFFFFFFFFFFFFFF8) + 8;
                                                                      if ((v157 | 7) != 0x17)
                                                                        v160 = v157 | 7;
                                                                      v161 = v160 + 1;
                                                                      v159 = operator new(v160 + 1);
                                                                      v253 = v161 | 0x8000000000000000;
                                                                      v252[0] = v159;
                                                                      v252[1] = v158;
                                                                    }
                                                                    else
                                                                    {
                                                                      HIBYTE(v253) = v157;
                                                                      v159 = v252;
                                                                      if (!v157)
                                                                      {
LABEL_151:
                                                                        *((_BYTE *)v158 + (_QWORD)v159) = 0;
                                                                        v162 = (_QWORD *)operator new();
                                                                        *v162 = &off_250AF53A8;
                                                                        v162[1] = a1 + 640;
                                                                        sub_23961580C((uint64_t)__p, (uint64_t)v252, (uint64_t)v162);
                                                                        strcpy(v301, "-IH]YEr]BDCYrNABXI^");
                                                                        sub_23958E55C((uint64_t)v301, *(int32x4_t *)"-IH]YEr]BDCYrNABXI^", v163, v164, v165);
                                                                        v167 = v166;
                                                                        v168 = strlen(v166);
                                                                        if (v168 > 0x7FFFFFFFFFFFFFF7)
                                                                          sub_23941A5AC();
                                                                        v169 = (void *)v168;
                                                                        if (v168 >= 0x17)
                                                                        {
                                                                          v171 = (v168 & 0xFFFFFFFFFFFFFFF8) + 8;
                                                                          if ((v168 | 7) != 0x17)
                                                                            v171 = v168 | 7;
                                                                          v172 = v171 + 1;
                                                                          v170 = operator new(v171 + 1);
                                                                          v251 = v172 | 0x8000000000000000;
                                                                          v250[0] = v170;
                                                                          v250[1] = v169;
                                                                        }
                                                                        else
                                                                        {
                                                                          HIBYTE(v251) = v168;
                                                                          v170 = v250;
                                                                          if (!v168)
                                                                          {
LABEL_159:
                                                                            *((_BYTE *)v169 + (_QWORD)v170) = 0;
                                                                            v173 = (_QWORD *)operator new();
                                                                            *v173 = &off_250AF53D8;
                                                                            v173[1] = a1 + 672;
                                                                            sub_23961580C((uint64_t)__p, (uint64_t)v250, (uint64_t)v173);
                                                                            v300[0] = xmmword_239F10856;
                                                                            *(_OWORD *)((char *)v300 + 14) = *(__int128 *)((char *)&xmmword_239F10856 + 14);
                                                                            sub_2396F0EE8((uint64_t)v300, *(int32x4_t *)((char *)&xmmword_239F10856+ 14), v174, v175, v176);
                                                                            v178 = v177;
                                                                            v179 = strlen(v177);
                                                                            if (v179 > 0x7FFFFFFFFFFFFFF7)
                                                                              sub_23941A5AC();
                                                                            v180 = (void *)v179;
                                                                            if (v179 >= 0x17)
                                                                            {
                                                                              v182 = (v179 & 0xFFFFFFFFFFFFFFF8) + 8;
                                                                              if ((v179 | 7) != 0x17)
                                                                                v182 = v179 | 7;
                                                                              v183 = v182 + 1;
                                                                              v181 = operator new(v182 + 1);
                                                                              v248[1] = v180;
                                                                              v249 = v183 | 0x8000000000000000;
                                                                              v248[0] = v181;
                                                                            }
                                                                            else
                                                                            {
                                                                              HIBYTE(v249) = v179;
                                                                              v181 = v248;
                                                                              if (!v179)
                                                                              {
LABEL_167:
                                                                                *((_BYTE *)v180 + (_QWORD)v181) = 0;
                                                                                v184 = (_QWORD *)operator new();
                                                                                *v184 = &off_250AF5408;
                                                                                v184[1] = a1 + 720;
                                                                                sub_23961580C((uint64_t)__p, (uint64_t)v248, (uint64_t)v184);
                                                                                v298[0] = xmmword_239F10874;
                                                                                v298[1] = xmmword_239F10884;
                                                                                v299 = 0;
                                                                                sub_2396EFE38((uint64_t)v298, (int32x4_t)xmmword_239F10874, xmmword_239F10884, v185, v186);
                                                                                v188 = v187;
                                                                                v189 = strlen(v187);
                                                                                if (v189 > 0x7FFFFFFFFFFFFFF7)
                                                                                  sub_23941A5AC();
                                                                                v190 = (void *)v189;
                                                                                if (v189 >= 0x17)
                                                                                {
                                                                                  v192 = (v189 & 0xFFFFFFFFFFFFFFF8)
                                                                                       + 8;
                                                                                  if ((v189 | 7) != 0x17)
                                                                                    v192 = v189 | 7;
                                                                                  v193 = v192 + 1;
                                                                                  v191 = operator new(v192 + 1);
                                                                                  v246[1] = v190;
                                                                                  v247 = v193 | 0x8000000000000000;
                                                                                  v246[0] = v191;
                                                                                }
                                                                                else
                                                                                {
                                                                                  HIBYTE(v247) = v189;
                                                                                  v191 = v246;
                                                                                  if (!v189)
                                                                                  {
LABEL_175:
                                                                                    *((_BYTE *)v190 + (_QWORD)v191) = 0;
                                                                                    v194 = (_QWORD *)operator new();
                                                                                    *v194 = &off_250AF53A8;
                                                                                    v194[1] = a1 + 768;
                                                                                    sub_23961580C((uint64_t)__p, (uint64_t)v246, (uint64_t)v194);
                                                                                    v297[0] = xmmword_239F10895;
                                                                                    *(_OWORD *)((char *)v297 + 15) = *(__int128 *)((char *)&xmmword_239F10895 + 15);
                                                                                    sub_2396EFF58((uint64_t)v297, *(int32x4_t *)((char *)&xmmword_239F10895 + 15), v195, v196, v197);
                                                                                    v199 = v198;
                                                                                    v200 = strlen(v198);
                                                                                    if (v200 > 0x7FFFFFFFFFFFFFF7)
                                                                                      sub_23941A5AC();
                                                                                    v201 = (void *)v200;
                                                                                    if (v200 >= 0x17)
                                                                                    {
                                                                                      v203 = (v200 & 0xFFFFFFFFFFFFFFF8)
                                                                                           + 8;
                                                                                      if ((v200 | 7) != 0x17)
                                                                                        v203 = v200 | 7;
                                                                                      v204 = v203 + 1;
                                                                                      v202 = operator new(v203 + 1);
                                                                                      v244[1] = v201;
                                                                                      v245 = v204 | 0x8000000000000000;
                                                                                      v244[0] = v202;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      HIBYTE(v245) = v200;
                                                                                      v202 = v244;
                                                                                      if (!v200)
                                                                                      {
LABEL_183:
                                                                                        *((_BYTE *)v201 + (_QWORD)v202) = 0;
                                                                                        v205 = (_QWORD *)operator new();
                                                                                        *v205 = &off_250AF53A8;
                                                                                        v205[1] = a1 + 800;
                                                                                        sub_23961580C((uint64_t)__p, (uint64_t)v244, (uint64_t)v205);
                                                                                        v241 = 123;
                                                                                        v240 = 1618378259;
                                                                                        v206 = sub_239A90C78((char *)&v240);
                                                                                        v207 = strlen(v206);
                                                                                        if (v207 > 0x7FFFFFFFFFFFFFF7)
                                                                                          sub_23941A5AC();
                                                                                        v208 = (void *)v207;
                                                                                        if (v207 >= 0x17)
                                                                                        {
                                                                                          v210 = (v207 & 0xFFFFFFFFFFFFFFF8)
                                                                                               + 8;
                                                                                          if ((v207 | 7) != 0x17)
                                                                                            v210 = v207 | 7;
                                                                                          v211 = v210 + 1;
                                                                                          v209 = operator new(v210 + 1);
                                                                                          v242[1] = v208;
                                                                                          v243 = v211 | 0x8000000000000000;
                                                                                          v242[0] = v209;
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          HIBYTE(v243) = v207;
                                                                                          v209 = v242;
                                                                                          if (!v207)
                                                                                          {
LABEL_191:
                                                                                            *((_BYTE *)v208
                                                                                            + (_QWORD)v209) = 0;
                                                                                            v212 = (_QWORD *)operator new();
                                                                                            *v212 = &off_250AF53A8;
                                                                                            v212[1] = a1 + 832;
                                                                                            sub_23961580C((uint64_t)__p, (uint64_t)v242, (uint64_t)v212);
                                                                                            v294 = 0x382F28292538295DLL;
                                                                                            strcpy(v296, ".5");
                                                                                            v295 = 942670393;
                                                                                            sub_23958E5E0((uint64_t)&v294);
                                                                                            v214 = v213;
                                                                                            v215 = strlen(v213);
                                                                                            if (v215 > 0x7FFFFFFFFFFFFFF7)
                                                                                              sub_23941A5AC();
                                                                                            v216 = (void *)v215;
                                                                                            if (v215 >= 0x17)
                                                                                            {
                                                                                              v218 = (v215 & 0xFFFFFFFFFFFFFFF8) + 8;
                                                                                              if ((v215 | 7) != 0x17)
                                                                                                v218 = v215 | 7;
                                                                                              v219 = v218 + 1;
                                                                                              v217 = operator new(v218 + 1);
                                                                                              v238[1] = v216;
                                                                                              v239 = v219 | 0x8000000000000000;
                                                                                              v238[0] = v217;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              HIBYTE(v239) = v215;
                                                                                              v217 = v238;
                                                                                              if (!v215)
                                                                                              {
LABEL_199:
                                                                                                *((_BYTE *)v216
                                                                                                + (_QWORD)v217) = 0;
                                                                                                v220 = (_QWORD *)operator new();
                                                                                                *v220 = &off_250AF53A8;
                                                                                                v220[1] = a1 + 864;
                                                                                                sub_23961580C((uint64_t)__p, (uint64_t)v238, (uint64_t)v220);
                                                                                                if (SHIBYTE(v239) < 0)
                                                                                                {
                                                                                                  operator delete(v238[0]);
                                                                                                  if ((SHIBYTE(v243) & 0x80000000) == 0)
                                                                                                  {
LABEL_201:
                                                                                                    if ((SHIBYTE(v245) & 0x80000000) == 0)
                                                                                                      goto LABEL_202;
                                                                                                    goto LABEL_249;
                                                                                                  }
                                                                                                }
                                                                                                else if ((SHIBYTE(v243) & 0x80000000) == 0)
                                                                                                {
                                                                                                  goto LABEL_201;
                                                                                                }
                                                                                                operator delete(v242[0]);
                                                                                                if ((SHIBYTE(v245) & 0x80000000) == 0)
                                                                                                {
LABEL_202:
                                                                                                  if ((SHIBYTE(v247) & 0x80000000) == 0)
                                                                                                    goto LABEL_203;
                                                                                                  goto LABEL_250;
                                                                                                }
LABEL_249:
                                                                                                operator delete(v244[0]);
                                                                                                if ((SHIBYTE(v247) & 0x80000000) == 0)
                                                                                                {
LABEL_203:
                                                                                                  if ((SHIBYTE(v249) & 0x80000000) == 0)
                                                                                                    goto LABEL_204;
                                                                                                  goto LABEL_251;
                                                                                                }
LABEL_250:
                                                                                                operator delete(v246[0]);
                                                                                                if ((SHIBYTE(v249) & 0x80000000) == 0)
                                                                                                {
LABEL_204:
                                                                                                  if ((SHIBYTE(v251) & 0x80000000) == 0)
                                                                                                    goto LABEL_205;
                                                                                                  goto LABEL_252;
                                                                                                }
LABEL_251:
                                                                                                operator delete(v248[0]);
                                                                                                if ((SHIBYTE(v251) & 0x80000000) == 0)
                                                                                                {
LABEL_205:
                                                                                                  if ((SHIBYTE(v253) & 0x80000000) == 0)
                                                                                                    goto LABEL_206;
                                                                                                  goto LABEL_253;
                                                                                                }
LABEL_252:
                                                                                                operator delete(v250[0]);
                                                                                                if ((SHIBYTE(v253) & 0x80000000) == 0)
                                                                                                {
LABEL_206:
                                                                                                  if ((SHIBYTE(v255) & 0x80000000) == 0)
                                                                                                    goto LABEL_207;
                                                                                                  goto LABEL_254;
                                                                                                }
LABEL_253:
                                                                                                operator delete(v252[0]);
                                                                                                if ((SHIBYTE(v255) & 0x80000000) == 0)
                                                                                                {
LABEL_207:
                                                                                                  if ((SHIBYTE(v257) & 0x80000000) == 0)
                                                                                                    goto LABEL_208;
                                                                                                  goto LABEL_255;
                                                                                                }
LABEL_254:
                                                                                                operator delete(v254[0]);
                                                                                                if ((SHIBYTE(v257) & 0x80000000) == 0)
                                                                                                {
LABEL_208:
                                                                                                  if ((SHIBYTE(v259) & 0x80000000) == 0)
                                                                                                    goto LABEL_209;
                                                                                                  goto LABEL_256;
                                                                                                }
LABEL_255:
                                                                                                operator delete(v256[0]);
                                                                                                if ((SHIBYTE(v259) & 0x80000000) == 0)
                                                                                                {
LABEL_209:
                                                                                                  if ((SHIBYTE(v261) & 0x80000000) == 0)
                                                                                                    goto LABEL_210;
                                                                                                  goto LABEL_257;
                                                                                                }
LABEL_256:
                                                                                                operator delete(v258[0]);
                                                                                                if ((SHIBYTE(v261) & 0x80000000) == 0)
                                                                                                {
LABEL_210:
                                                                                                  if ((SHIBYTE(v266) & 0x80000000) == 0)
                                                                                                    goto LABEL_211;
                                                                                                  goto LABEL_258;
                                                                                                }
LABEL_257:
                                                                                                operator delete(v260[0]);
                                                                                                if ((SHIBYTE(v266) & 0x80000000) == 0)
                                                                                                {
LABEL_211:
                                                                                                  if ((SHIBYTE(v268) & 0x80000000) == 0)
                                                                                                    goto LABEL_212;
                                                                                                  goto LABEL_259;
                                                                                                }
LABEL_258:
                                                                                                operator delete(v265[0]);
                                                                                                if ((SHIBYTE(v268) & 0x80000000) == 0)
                                                                                                {
LABEL_212:
                                                                                                  if ((SHIBYTE(v270) & 0x80000000) == 0)
                                                                                                    goto LABEL_213;
                                                                                                  goto LABEL_260;
                                                                                                }
LABEL_259:
                                                                                                operator delete(v267[0]);
                                                                                                if ((SHIBYTE(v270) & 0x80000000) == 0)
                                                                                                {
LABEL_213:
                                                                                                  if ((SHIBYTE(v272) & 0x80000000) == 0)
                                                                                                    goto LABEL_214;
                                                                                                  goto LABEL_261;
                                                                                                }
LABEL_260:
                                                                                                operator delete(v269[0]);
                                                                                                if ((SHIBYTE(v272) & 0x80000000) == 0)
                                                                                                {
LABEL_214:
                                                                                                  if ((SHIBYTE(v274) & 0x80000000) == 0)
                                                                                                    goto LABEL_215;
                                                                                                  goto LABEL_262;
                                                                                                }
LABEL_261:
                                                                                                operator delete(v271[0]);
                                                                                                if ((SHIBYTE(v274) & 0x80000000) == 0)
                                                                                                {
LABEL_215:
                                                                                                  if ((SHIBYTE(v276) & 0x80000000) == 0)
                                                                                                    goto LABEL_216;
                                                                                                  goto LABEL_263;
                                                                                                }
LABEL_262:
                                                                                                operator delete(v273[0]);
                                                                                                if ((SHIBYTE(v276) & 0x80000000) == 0)
                                                                                                {
LABEL_216:
                                                                                                  if ((SHIBYTE(v278) & 0x80000000) == 0)
                                                                                                    goto LABEL_217;
                                                                                                  goto LABEL_264;
                                                                                                }
LABEL_263:
                                                                                                operator delete(v275[0]);
                                                                                                if ((SHIBYTE(v278) & 0x80000000) == 0)
                                                                                                {
LABEL_217:
                                                                                                  if ((SHIBYTE(v280) & 0x80000000) == 0)
                                                                                                    goto LABEL_218;
                                                                                                  goto LABEL_265;
                                                                                                }
LABEL_264:
                                                                                                operator delete(v277[0]);
                                                                                                if ((SHIBYTE(v280) & 0x80000000) == 0)
                                                                                                {
LABEL_218:
                                                                                                  if ((SHIBYTE(v282) & 0x80000000) == 0)
                                                                                                    goto LABEL_219;
                                                                                                  goto LABEL_266;
                                                                                                }
LABEL_265:
                                                                                                operator delete(v279[0]);
                                                                                                if ((SHIBYTE(v282) & 0x80000000) == 0)
                                                                                                {
LABEL_219:
                                                                                                  if ((SHIBYTE(v284) & 0x80000000) == 0)
                                                                                                    goto LABEL_220;
                                                                                                  goto LABEL_267;
                                                                                                }
LABEL_266:
                                                                                                operator delete(v281[0]);
                                                                                                if ((SHIBYTE(v284) & 0x80000000) == 0)
                                                                                                {
LABEL_220:
                                                                                                  if ((SHIBYTE(v286) & 0x80000000) == 0)
                                                                                                    goto LABEL_221;
                                                                                                  goto LABEL_268;
                                                                                                }
LABEL_267:
                                                                                                operator delete(v283[0]);
                                                                                                if ((SHIBYTE(v286) & 0x80000000) == 0)
                                                                                                {
LABEL_221:
                                                                                                  if ((SHIBYTE(v288) & 0x80000000) == 0)
                                                                                                  {
LABEL_222:
                                                                                                    sub_23959479C((uint64_t)__p, v230);
                                                                                                    v221 = v290;
                                                                                                    if (v290)
                                                                                                    {
                                                                                                      do
                                                                                                      {
                                                                                                        v222 = v221[5];
                                                                                                        if (v222)
                                                                                                          (*(void (**)(uint64_t))(*(_QWORD *)v222 + 8))(v222);
                                                                                                        v221 = (_QWORD *)*v221;
                                                                                                      }
                                                                                                      while (v221);
                                                                                                      v223 = (void **)v290;
                                                                                                      if (v290)
                                                                                                      {
                                                                                                        do
                                                                                                        {
                                                                                                          v227 = (void **)*v223;
                                                                                                          if (*((char *)v223 + 39) < 0)
                                                                                                            operator delete(v223[2]);
                                                                                                          operator delete(v223);
                                                                                                          v223 = v227;
                                                                                                        }
                                                                                                        while (v227);
                                                                                                      }
                                                                                                    }
                                                                                                    v224 = __p[0];
                                                                                                    __p[0] = 0;
                                                                                                    if (v224)
                                                                                                      operator delete(v224);
                                                                                                    v230[0] = *MEMORY[0x24BEDB7F0];
                                                                                                    v225 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
                                                                                                    *(uint64_t *)((char *)v230 + *(_QWORD *)(v230[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
                                                                                                    v231[0] = v225;
                                                                                                    v231[1] = MEMORY[0x24BEDB848] + 16;
                                                                                                    if (v232 < 0)
                                                                                                      operator delete((void *)v231[9]);
                                                                                                    std::streambuf::~streambuf();
                                                                                                    std::iostream::~basic_iostream();
                                                                                                    MEMORY[0x23B83E250](&v233);
                                                                                                    if (v236 && (char)v235 < 0)
                                                                                                      operator delete(v234[0]);
                                                                                                    goto LABEL_235;
                                                                                                  }
LABEL_269:
                                                                                                  operator delete(__dst[0]);
                                                                                                  goto LABEL_222;
                                                                                                }
LABEL_268:
                                                                                                operator delete(v285[0]);
                                                                                                if ((SHIBYTE(v288) & 0x80000000) == 0)
                                                                                                  goto LABEL_222;
                                                                                                goto LABEL_269;
                                                                                              }
                                                                                            }
                                                                                            memmove(v217, v214, (size_t)v216);
                                                                                            goto LABEL_199;
                                                                                          }
                                                                                        }
                                                                                        memmove(v209, v206, (size_t)v208);
                                                                                        goto LABEL_191;
                                                                                      }
                                                                                    }
                                                                                    memmove(v202, v199, (size_t)v201);
                                                                                    goto LABEL_183;
                                                                                  }
                                                                                }
                                                                                memmove(v191, v188, (size_t)v190);
                                                                                goto LABEL_175;
                                                                              }
                                                                            }
                                                                            memmove(v181, v178, (size_t)v180);
                                                                            goto LABEL_167;
                                                                          }
                                                                        }
                                                                        memmove(v170, v167, (size_t)v169);
                                                                        goto LABEL_159;
                                                                      }
                                                                    }
                                                                    memmove(v159, v156, (size_t)v158);
                                                                    goto LABEL_151;
                                                                  }
                                                                }
                                                                memmove(v148, v145, (size_t)v147);
                                                                goto LABEL_143;
                                                              }
                                                            }
                                                            memmove(v141, v138, (size_t)v140);
                                                            goto LABEL_135;
                                                          }
                                                        }
                                                        memmove(v130, v127, (size_t)v129);
                                                        goto LABEL_127;
                                                      }
                                                    }
                                                    memmove(v119, v116, (size_t)v118);
                                                    goto LABEL_119;
                                                  }
                                                }
                                                memmove(v108, v105, (size_t)v107);
                                                goto LABEL_111;
                                              }
                                            }
                                            memmove(v101, v98, (size_t)v100);
                                            goto LABEL_103;
                                          }
                                        }
                                        memmove(v94, v91, (size_t)v93);
                                        goto LABEL_95;
                                      }
                                    }
                                    memmove(v87, v84, (size_t)v86);
                                    goto LABEL_87;
                                  }
                                }
                                memmove(v80, v77, (size_t)v79);
                                goto LABEL_79;
                              }
                            }
                            memmove(v70, v67, (size_t)v69);
                            goto LABEL_71;
                          }
                        }
                        memmove(v63, v60, (size_t)v62);
                        goto LABEL_63;
                      }
                    }
                    memmove(v52, v49, (size_t)v51);
                    goto LABEL_55;
                  }
                }
                memmove(v45, v42, (size_t)v44);
                goto LABEL_47;
              }
            }
            memmove(v36, v33, (size_t)v35);
            goto LABEL_39;
          }
        }
        memmove(v25, v22, (size_t)v24);
        goto LABEL_31;
      }
    }
    memmove(v16, v13, (size_t)v15);
    goto LABEL_23;
  }
LABEL_235:
  if ((*((_BYTE *)&v237.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_236:
    operator delete(v237.__r_.__value_.__l.__data_);
LABEL_237:
  if (v229[0])
  {
    v229[1] = v229[0];
    operator delete(v229[0]);
  }
  if (SHIBYTE(v228[2]) < 0)
    operator delete((void *)v228[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v291 + *(_QWORD *)(v291[0] - 24)), *(_DWORD *)&v292[*(_QWORD *)(v291[0] - 24) + 16] | 4);
LABEL_243:
  v291[0] = *v4;
  *(_QWORD *)((char *)v291 + *(_QWORD *)(v291[0] - 24)) = v4[3];
  MEMORY[0x23B83DC8C](v292);
  std::istream::~istream();
  MEMORY[0x23B83E250](v293);
  return v8;
}

void sub_239B238F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *__p,uint64_t a55,int a56,__int16 a57,char a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  void *v67;

  sub_2395905C0((uint64_t)&STACK[0x3C0]);
  sub_239498ABC((uint64_t)&a19);
  if (a60)
  {
    if (a59 < 0)
      operator delete(__p);
  }
  if (a66 < 0)
  {
    operator delete(a61);
    v67 = a16;
    if (a16)
      goto LABEL_6;
  }
  else
  {
    v67 = a16;
    if (a16)
    {
LABEL_6:
      operator delete(v67);
      if ((a14 & 0x80000000) == 0)
        goto LABEL_11;
LABEL_10:
      operator delete(a9);
LABEL_11:
      sub_23955CB90(&STACK[0x3F0]);
      _Unwind_Resume(a1);
    }
  }
  if ((a14 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

void sub_239B23D68()
{
  JUMPOUT(0x239B23AB4);
}

void sub_239B23D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    JUMPOUT(0x239B23AECLL);
  JUMPOUT(0x239B23B08);
}

void sub_239B23D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if ((a14 & 0x80000000) == 0)
    JUMPOUT(0x239B23B18);
  JUMPOUT(0x239B23B10);
}

void sub_239B23D90()
{
  JUMPOUT(0x239B23B18);
}

void sub_239B23D9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B23DC4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;

  v2 = (_QWORD *)(a1 + 80);
  v3 = (_QWORD *)(a1 + 112);
  v4 = *(_QWORD **)(a1 + 136);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = *(_QWORD **)(a1 + 104);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = *(void **)(a1 + 40);
  if (v8)
  {
    *(_QWORD *)(a1 + 48) = v8;
    operator delete(v8);
  }
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

BOOL sub_239B23E64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  _BOOL8 v8;
  std::string::size_type size;
  void **v10;
  uint64_t v11;
  int8x16_t v12;
  double v13;
  int32x4_t v14;
  const char *v15;
  const char *v16;
  size_t v17;
  void *v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int8x16_t v23;
  double v24;
  int32x4_t v25;
  const char *v26;
  const char *v27;
  size_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int8x16_t v34;
  double v35;
  int32x4_t v36;
  const char *v37;
  const char *v38;
  size_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int8x16_t v45;
  double v46;
  int32x4_t v47;
  const char *v48;
  const char *v49;
  size_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  const char *v56;
  const char *v57;
  size_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  const char *v64;
  size_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  void **v73;
  void *v74;
  uint64_t v75;
  void **v77;
  const void *v78[3];
  void *v79[3];
  uint64_t v80[2];
  _QWORD v81[11];
  char v82;
  uint64_t v83;
  void *v84[2];
  unsigned __int8 v85;
  char v86;
  std::string v87;
  void *v88[2];
  unint64_t v89;
  void *v90[2];
  unint64_t v91;
  void *v92[2];
  unint64_t v93;
  void *v94[2];
  unint64_t v95;
  void *v96[2];
  unint64_t v97;
  void *__dst[2];
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *__p[2];
  void *v103;
  _QWORD v104[2];
  _BYTE v105[408];
  uint64_t v106[19];
  char v107[16];
  __int128 v108;
  char v109;
  _OWORD v110[2];
  _OWORD v111[2];
  _OWORD v112[2];
  _BYTE v113[21];
  uint64_t v114;

  v114 = *MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEDB838];
  v3 = MEMORY[0x24BEDB838] + 64;
  v4 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v106[0] = MEMORY[0x24BEDB838] + 64;
  v104[0] = v5;
  *(_QWORD *)((char *)v104 + *(_QWORD *)(v5 - 24)) = v6;
  v104[1] = 0;
  v7 = (std::ios_base *)((char *)v104 + *(_QWORD *)(v104[0] - 24));
  std::ios_base::init(v7, v105);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  v104[0] = v2 + 24;
  v106[0] = v3;
  MEMORY[0x23B83DC80](v105);
  std::ifstream::open();
  if ((v105[*(_QWORD *)(v104[0] - 24) + 16] & 5) != 0)
  {
    v8 = 0;
    goto LABEL_90;
  }
  HIBYTE(v78[2]) = 18;
  strcpy((char *)v78, "CorePhotogrammetry");
  sub_2395AC84C(v78, v79);
  sub_239A7D600(&v87, *(_QWORD **)&v105[*(_QWORD *)(v104[0] - 24) + 24]);
  size = HIBYTE(v87.__r_.__value_.__r.__words[2]);
  if ((v87.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v87.__r_.__value_.__l.__size_;
  if (!size)
  {
    v8 = 0;
    if ((*((_BYTE *)&v87.__r_.__value_.__s + 23) & 0x80) != 0)
      goto LABEL_83;
    goto LABEL_84;
  }
  sub_2395AC2E8((const void **)&v87.__r_.__value_.__l.__data_, (uint64_t)v79, (uint64_t)v84);
  v8 = v86 != 0;
  if (v86)
  {
    sub_2394988CC((uint64_t)v80);
    if ((v85 & 0x80u) == 0)
      v10 = v84;
    else
      v10 = (void **)v84[0];
    if ((v85 & 0x80u) == 0)
      v11 = v85;
    else
      v11 = (uint64_t)v84[1];
    sub_239458500(v81, (uint64_t)v10, v11);
    sub_2396157EC((uint64_t)__p, 1);
    v101 = a1 + 4;
    v100 = a1 + 8;
    *(_OWORD *)v113 = xmmword_239F108B4;
    strcpy(&v113[13], "fmbaofg");
    sub_2396EFB50((uint64_t)v113, (int32x4_t)xmmword_239F108B4, v12, v13, v14);
    v16 = v15;
    v17 = strlen(v15);
    if (v17 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v18 = (void *)v17;
    if (v17 >= 0x17)
    {
      v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v17 | 7) != 0x17)
        v20 = v17 | 7;
      v21 = v20 + 1;
      v19 = (void **)operator new(v20 + 1);
      v99 = v21 | 0x8000000000000000;
      __dst[0] = v19;
      __dst[1] = v18;
    }
    else
    {
      HIBYTE(v99) = v17;
      v19 = __dst;
      if (!v17)
      {
LABEL_23:
        *((_BYTE *)v18 + (_QWORD)v19) = 0;
        v22 = (_QWORD *)operator new();
        *v22 = &off_250AE0220;
        v22[1] = a1;
        sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v22);
        v112[0] = xmmword_239F108C9;
        *(_OWORD *)((char *)v112 + 14) = *(__int128 *)((char *)&xmmword_239F108C9 + 14);
        sub_2396F0EE8((uint64_t)v112, *(int32x4_t *)((char *)&xmmword_239F108C9 + 14), v23, v24, v25);
        v27 = v26;
        v28 = strlen(v26);
        if (v28 > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        v29 = (void *)v28;
        if (v28 >= 0x17)
        {
          v31 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v28 | 7) != 0x17)
            v31 = v28 | 7;
          v32 = v31 + 1;
          v30 = operator new(v31 + 1);
          v96[1] = v29;
          v97 = v32 | 0x8000000000000000;
          v96[0] = v30;
        }
        else
        {
          HIBYTE(v97) = v28;
          v30 = v96;
          if (!v28)
          {
LABEL_31:
            *((_BYTE *)v29 + (_QWORD)v30) = 0;
            v33 = (_QWORD *)operator new();
            *v33 = &off_250AF5438;
            v33[1] = &v101;
            sub_23961580C((uint64_t)__p, (uint64_t)v96, (uint64_t)v33);
            v111[0] = xmmword_239F108E7;
            *(_QWORD *)((char *)v111 + 13) = 0x8140A241F1A1ELL;
            sub_2396EFB50((uint64_t)v111, (int32x4_t)xmmword_239F108E7, v34, v35, v36);
            v38 = v37;
            v39 = strlen(v37);
            if (v39 > 0x7FFFFFFFFFFFFFF7)
              sub_23941A5AC();
            v40 = (void *)v39;
            if (v39 >= 0x17)
            {
              v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v39 | 7) != 0x17)
                v42 = v39 | 7;
              v43 = v42 + 1;
              v41 = operator new(v42 + 1);
              v94[1] = v40;
              v95 = v43 | 0x8000000000000000;
              v94[0] = v41;
            }
            else
            {
              HIBYTE(v95) = v39;
              v41 = v94;
              if (!v39)
              {
LABEL_39:
                *((_BYTE *)v40 + (_QWORD)v41) = 0;
                v44 = (_QWORD *)operator new();
                *v44 = &off_250AF5468;
                v44[1] = &v100;
                sub_23961580C((uint64_t)__p, (uint64_t)v94, (uint64_t)v44);
                v110[0] = xmmword_239F108FC;
                *(_DWORD *)((char *)v110 + 15) = 2567721;
                sub_23958E450((uint64_t)v110, (int32x4_t)xmmword_239F108FC, v45, v46, v47);
                v49 = v48;
                v50 = strlen(v48);
                if (v50 > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                v51 = (void *)v50;
                if (v50 >= 0x17)
                {
                  v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v50 | 7) != 0x17)
                    v53 = v50 | 7;
                  v54 = v53 + 1;
                  v52 = operator new(v53 + 1);
                  v92[1] = v51;
                  v93 = v54 | 0x8000000000000000;
                  v92[0] = v52;
                }
                else
                {
                  HIBYTE(v93) = v50;
                  v52 = v92;
                  if (!v50)
                  {
LABEL_47:
                    *((_BYTE *)v51 + (_QWORD)v52) = 0;
                    v55 = (_QWORD *)operator new();
                    *v55 = &off_250AE0220;
                    v55[1] = a1 + 12;
                    sub_23961580C((uint64_t)__p, (uint64_t)v92, (uint64_t)v55);
                    v108 = xmmword_239F10929;
                    v109 = 0;
                    sub_2396EFA24((uint64_t)&v108);
                    v57 = v56;
                    v58 = strlen(v56);
                    if (v58 > 0x7FFFFFFFFFFFFFF7)
                      sub_23941A5AC();
                    v59 = (void *)v58;
                    if (v58 >= 0x17)
                    {
                      v61 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
                      if ((v58 | 7) != 0x17)
                        v61 = v58 | 7;
                      v62 = v61 + 1;
                      v60 = operator new(v61 + 1);
                      v90[1] = v59;
                      v91 = v62 | 0x8000000000000000;
                      v90[0] = v60;
                    }
                    else
                    {
                      HIBYTE(v91) = v58;
                      v60 = v90;
                      if (!v58)
                      {
LABEL_55:
                        *((_BYTE *)v59 + (_QWORD)v60) = 0;
                        v63 = (_QWORD *)operator new();
                        *v63 = &off_250AF5498;
                        v63[1] = a1 + 16;
                        sub_23961580C((uint64_t)__p, (uint64_t)v90, (uint64_t)v63);
                        strcpy(v107, "'TAJxHWSNHIT");
                        v64 = sub_239510ECC((uint64_t)v107);
                        v65 = strlen(v64);
                        if (v65 > 0x7FFFFFFFFFFFFFF7)
                          sub_23941A5AC();
                        v66 = (void *)v65;
                        if (v65 >= 0x17)
                        {
                          v68 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
                          if ((v65 | 7) != 0x17)
                            v68 = v65 | 7;
                          v69 = v68 + 1;
                          v67 = operator new(v68 + 1);
                          v88[1] = v66;
                          v89 = v69 | 0x8000000000000000;
                          v88[0] = v67;
                        }
                        else
                        {
                          HIBYTE(v89) = v65;
                          v67 = v88;
                          if (!v65)
                          {
LABEL_63:
                            *((_BYTE *)v66 + (_QWORD)v67) = 0;
                            v70 = (_QWORD *)operator new();
                            *v70 = &off_250AF5528;
                            v70[1] = a1 + 20;
                            sub_23961580C((uint64_t)__p, (uint64_t)v88, (uint64_t)v70);
                            if (SHIBYTE(v89) < 0)
                            {
                              operator delete(v88[0]);
                              if ((SHIBYTE(v91) & 0x80000000) == 0)
                              {
LABEL_65:
                                if ((SHIBYTE(v93) & 0x80000000) == 0)
                                  goto LABEL_66;
                                goto LABEL_96;
                              }
                            }
                            else if ((SHIBYTE(v91) & 0x80000000) == 0)
                            {
                              goto LABEL_65;
                            }
                            operator delete(v90[0]);
                            if ((SHIBYTE(v93) & 0x80000000) == 0)
                            {
LABEL_66:
                              if ((SHIBYTE(v95) & 0x80000000) == 0)
                                goto LABEL_67;
                              goto LABEL_97;
                            }
LABEL_96:
                            operator delete(v92[0]);
                            if ((SHIBYTE(v95) & 0x80000000) == 0)
                            {
LABEL_67:
                              if ((SHIBYTE(v97) & 0x80000000) == 0)
                                goto LABEL_68;
                              goto LABEL_98;
                            }
LABEL_97:
                            operator delete(v94[0]);
                            if ((SHIBYTE(v97) & 0x80000000) == 0)
                            {
LABEL_68:
                              if ((SHIBYTE(v99) & 0x80000000) == 0)
                              {
LABEL_69:
                                sub_23959479C((uint64_t)__p, v80);
                                v71 = v103;
                                if (v103)
                                {
                                  do
                                  {
                                    v72 = v71[5];
                                    if (v72)
                                      (*(void (**)(uint64_t))(*(_QWORD *)v72 + 8))(v72);
                                    v71 = (_QWORD *)*v71;
                                  }
                                  while (v71);
                                  v73 = (void **)v103;
                                  if (v103)
                                  {
                                    do
                                    {
                                      v77 = (void **)*v73;
                                      if (*((char *)v73 + 39) < 0)
                                        operator delete(v73[2]);
                                      operator delete(v73);
                                      v73 = v77;
                                    }
                                    while (v77);
                                  }
                                }
                                v74 = __p[0];
                                __p[0] = 0;
                                if (v74)
                                  operator delete(v74);
                                v80[0] = *MEMORY[0x24BEDB7F0];
                                v75 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
                                *(uint64_t *)((char *)v80 + *(_QWORD *)(v80[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0]
                                                                                                 + 64);
                                v81[0] = v75;
                                v81[1] = MEMORY[0x24BEDB848] + 16;
                                if (v82 < 0)
                                  operator delete((void *)v81[9]);
                                std::streambuf::~streambuf();
                                std::iostream::~basic_iostream();
                                MEMORY[0x23B83E250](&v83);
                                if (v86 && (char)v85 < 0)
                                  operator delete(v84[0]);
                                goto LABEL_82;
                              }
LABEL_99:
                              operator delete(__dst[0]);
                              goto LABEL_69;
                            }
LABEL_98:
                            operator delete(v96[0]);
                            if ((SHIBYTE(v99) & 0x80000000) == 0)
                              goto LABEL_69;
                            goto LABEL_99;
                          }
                        }
                        memmove(v67, v64, (size_t)v66);
                        goto LABEL_63;
                      }
                    }
                    memmove(v60, v57, (size_t)v59);
                    goto LABEL_55;
                  }
                }
                memmove(v52, v49, (size_t)v51);
                goto LABEL_47;
              }
            }
            memmove(v41, v38, (size_t)v40);
            goto LABEL_39;
          }
        }
        memmove(v30, v27, (size_t)v29);
        goto LABEL_31;
      }
    }
    memmove(v19, v16, (size_t)v18);
    goto LABEL_23;
  }
LABEL_82:
  if ((*((_BYTE *)&v87.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_83:
    operator delete(v87.__r_.__value_.__l.__data_);
LABEL_84:
  if (v79[0])
  {
    v79[1] = v79[0];
    operator delete(v79[0]);
  }
  if (SHIBYTE(v78[2]) < 0)
    operator delete((void *)v78[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v104 + *(_QWORD *)(v104[0] - 24)), *(_DWORD *)&v105[*(_QWORD *)(v104[0] - 24) + 16] | 4);
LABEL_90:
  v104[0] = *v4;
  *(_QWORD *)((char *)v104 + *(_QWORD *)(v104[0] - 24)) = v4[3];
  MEMORY[0x23B83DC8C](v105);
  std::istream::~istream();
  MEMORY[0x23B83E250](v106);
  return v8;
}

void sub_239B247A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58,char a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  void *v66;

  sub_2395905C0((uint64_t)&STACK[0x220]);
  sub_239498ABC((uint64_t)&a18);
  if (a59)
  {
    if (a58 < 0)
      operator delete(__p);
  }
  if (a65 < 0)
  {
    operator delete(a60);
    v66 = a15;
    if (a15)
      goto LABEL_6;
  }
  else
  {
    v66 = a15;
    if (a15)
    {
LABEL_6:
      operator delete(v66);
      if ((a14 & 0x80000000) == 0)
        goto LABEL_11;
LABEL_10:
      operator delete(a9);
LABEL_11:
      sub_23955CB90(&STACK[0x250]);
      _Unwind_Resume(a1);
    }
  }
  if ((a14 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

void sub_239B24968(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B24990(_QWORD *a1, __int128 *a2, uint64_t a3, _OWORD *a4, uint64_t a5)
{
  char *v10;
  __int128 v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t result;

  v10 = (char *)operator new(0x418uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_250AF57F8;
  v11 = *a2;
  *((_QWORD *)v10 + 5) = 0;
  *(_OWORD *)(v10 + 24) = v11;
  *((_QWORD *)v10 + 6) = 0;
  *((_QWORD *)v10 + 7) = 0;
  v13 = (_BYTE *)*((_QWORD *)a2 + 2);
  v12 = (_BYTE *)*((_QWORD *)a2 + 3);
  v14 = v12 - v13;
  if (v12 != v13)
  {
    if (v14 < 0)
      sub_2394189F8();
    v15 = (char *)operator new(v12 - v13);
    *((_QWORD *)v10 + 5) = v15;
    v16 = &v15[8 * (v14 >> 3)];
    *((_QWORD *)v10 + 7) = v16;
    memcpy(v15, v13, v14);
    *((_QWORD *)v10 + 6) = v16;
  }
  *((_OWORD *)v10 + 4) = *(__int128 *)((char *)a2 + 40);
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v10 + 80, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *((_OWORD *)v10 + 5) = *(_OWORD *)a3;
    *((_QWORD *)v10 + 12) = *(_QWORD *)(a3 + 16);
  }
  v17 = a4[1];
  *(_OWORD *)(v10 + 104) = *a4;
  *(_OWORD *)(v10 + 120) = v17;
  *(_OWORD *)(v10 + 136) = a4[2];
  result = sub_239A8C7C0((uint64_t)(v10 + 152), a5);
  *a1 = v10 + 24;
  a1[1] = v10;
  return result;
}

void sub_239B24AAC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void **v2;
  std::__shared_weak_count_vtbl *v4;
  void *v5;

  v4 = (std::__shared_weak_count_vtbl *)*v2;
  if (*v2)
  {
    v1[2].__vftable = v4;
    operator delete(v4);
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

uint64_t sub_239B24AF0(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v3 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void sub_239B24B54(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF57F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B24B64(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF57F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B24B94(uint64_t a1)
{
  void *v2;

  sub_239A73240(a1 + 152);
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    v2 = *(void **)(a1 + 40);
    if (!v2)
      return;
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 80));
  v2 = *(void **)(a1 + 40);
  if (v2)
  {
LABEL_3:
    *(_QWORD *)(a1 + 48) = v2;
    operator delete(v2);
  }
}

void sub_239B24BF0(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B24C14(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239A92638(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B24C50(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  const char *v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  const char *v13;
  const char *v14;
  size_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int8x16_t v21;
  double v22;
  int32x4_t v23;
  const char *v24;
  const char *v25;
  size_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  const char *v32;
  const char *v33;
  size_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  const char *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int8x8_t *v48;
  size_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  int16x8_t v55;
  const char *v56;
  const char *v57;
  size_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  const char *v64;
  size_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  const char *v71;
  size_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  const char *v78;
  const char *v79;
  size_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  void **v88;
  void *v89;
  void **v91;
  void *v92[2];
  unint64_t v93;
  void *v94[2];
  unint64_t v95;
  void *v96[2];
  unint64_t v97;
  void *v98[2];
  unint64_t v99;
  void *v100[2];
  unint64_t v101;
  void *v102[2];
  unint64_t v103;
  void *v104[2];
  unint64_t v105;
  void *v106[2];
  unint64_t v107;
  void *v108[2];
  unint64_t v109;
  void *__dst[2];
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *__p[2];
  void *v120;
  __int128 v121;
  char v122[16];
  uint64_t v123;
  int v124;
  char v125[16];
  uint64_t v126;
  __int16 v127;
  char v128[16];
  char v129[32];
  _OWORD v130[2];
  __int128 v131;
  __int128 v132;
  char v133;
  uint64_t v134;

  v134 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v117 = v4 + 4;
  v118 = v4;
  v115 = v4 + 12;
  v116 = v4 + 8;
  v113 = v4 + 20;
  v114 = v4 + 16;
  v112 = v4 + 24;
  v132 = xmmword_239F1093A;
  v133 = 0;
  sub_2396EFA24((uint64_t)&v132);
  v6 = v5;
  v7 = strlen(v5);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    __dst[1] = v8;
    v111 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_8;
  }
  HIBYTE(v111) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250AF56A8;
  v12[1] = &v118;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  v131 = xmmword_239F0C0B0;
  sub_23950F8E4((uint64_t)&v131);
  v14 = v13;
  v15 = strlen(v13);
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v16 = (void *)v15;
  if (v15 >= 0x17)
  {
    v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v18 = v15 | 7;
    v19 = v18 + 1;
    v17 = operator new(v18 + 1);
    v108[1] = v16;
    v109 = v19 | 0x8000000000000000;
    v108[0] = v17;
    goto LABEL_16;
  }
  HIBYTE(v109) = v15;
  v17 = v108;
  if (v15)
LABEL_16:
    memmove(v17, v14, (size_t)v16);
  *((_BYTE *)v16 + (_QWORD)v17) = 0;
  v20 = (_QWORD *)operator new();
  *v20 = &off_250AF56D8;
  v20[1] = &v117;
  sub_23961580C((uint64_t)__p, (uint64_t)v108, (uint64_t)v20);
  v130[0] = xmmword_239F1094B;
  *(_QWORD *)((char *)v130 + 13) = 0x7479647B647964;
  sub_2396EFB50((uint64_t)v130, (int32x4_t)xmmword_239F1094B, v21, v22, v23);
  v25 = v24;
  v26 = strlen(v24);
  if (v26 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v27 = (void *)v26;
  if (v26 >= 0x17)
  {
    v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v29 = v26 | 7;
    v30 = v29 + 1;
    v28 = operator new(v29 + 1);
    v106[1] = v27;
    v107 = v30 | 0x8000000000000000;
    v106[0] = v28;
    goto LABEL_24;
  }
  HIBYTE(v107) = v26;
  v28 = v106;
  if (v26)
LABEL_24:
    memmove(v28, v25, (size_t)v27);
  *((_BYTE *)v27 + (_QWORD)v28) = 0;
  v31 = (_QWORD *)operator new();
  *v31 = &off_250AF5708;
  v31[1] = &v116;
  sub_23961580C((uint64_t)__p, (uint64_t)v106, (uint64_t)v31);
  strcpy(v129, "\"QCORNG}MPFGPKLE");
  sub_2396EFA24((uint64_t)v129);
  v33 = v32;
  v34 = strlen(v32);
  if (v34 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v35 = (void *)v34;
  if (v34 >= 0x17)
  {
    v37 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v34 | 7) != 0x17)
      v37 = v34 | 7;
    v38 = v37 + 1;
    v36 = operator new(v37 + 1);
    v104[1] = v35;
    v105 = v38 | 0x8000000000000000;
    v104[0] = v36;
    goto LABEL_32;
  }
  HIBYTE(v105) = v34;
  v36 = v104;
  if (v34)
LABEL_32:
    memmove(v36, v33, (size_t)v35);
  *((_BYTE *)v35 + (_QWORD)v36) = 0;
  v39 = (_QWORD *)operator new();
  *v39 = &off_250AF5738;
  v39[1] = &v115;
  sub_23961580C((uint64_t)__p, (uint64_t)v104, (uint64_t)v39);
  strcpy(v128, "%UJR@WzV@QQLKB");
  sub_23958E5E0((uint64_t)v128);
  v41 = v40;
  v42 = strlen(v40);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v102[1] = v43;
    v103 = v46 | 0x8000000000000000;
    v102[0] = v44;
    goto LABEL_40;
  }
  HIBYTE(v103) = v42;
  v44 = v102;
  if (v42)
LABEL_40:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250AF5768;
  v47[1] = &v114;
  sub_23961580C((uint64_t)__p, (uint64_t)v102, (uint64_t)v47);
  v126 = 0x676E63487A716417;
  v127 = 114;
  v48 = sub_23950FF84((int8x8_t *)&v126);
  v49 = strlen((const char *)v48);
  if (v49 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v50 = (void *)v49;
  if (v49 >= 0x17)
  {
    v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v49 | 7) != 0x17)
      v52 = v49 | 7;
    v53 = v52 + 1;
    v51 = operator new(v52 + 1);
    v100[1] = v50;
    v101 = v53 | 0x8000000000000000;
    v100[0] = v51;
    goto LABEL_48;
  }
  HIBYTE(v101) = v49;
  v51 = v100;
  if (v49)
LABEL_48:
    memmove(v51, v48, (size_t)v50);
  *((_BYTE *)v50 + (_QWORD)v51) = 0;
  v54 = (_QWORD *)operator new();
  *v54 = &off_250AF5798;
  v54[1] = &v113;
  sub_23961580C((uint64_t)__p, (uint64_t)v100, (uint64_t)v54);
  strcpy(v125, ">S_J]V[LaJGN[");
  sub_23971A32C((uint64_t)v125, v55);
  v57 = v56;
  v58 = strlen(v56);
  if (v58 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v59 = (void *)v58;
  if (v58 >= 0x17)
  {
    v61 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v58 | 7) != 0x17)
      v61 = v58 | 7;
    v62 = v61 + 1;
    v60 = operator new(v61 + 1);
    v98[1] = v59;
    v99 = v62 | 0x8000000000000000;
    v98[0] = v60;
    goto LABEL_56;
  }
  HIBYTE(v99) = v58;
  v60 = v98;
  if (v58)
LABEL_56:
    memmove(v60, v57, (size_t)v59);
  *((_BYTE *)v59 + (_QWORD)v60) = 0;
  v63 = (_QWORD *)operator new();
  *v63 = &off_250AF57C8;
  v63[1] = &v112;
  sub_23961580C((uint64_t)__p, (uint64_t)v98, (uint64_t)v63);
  v123 = 0x1E05072812040277;
  v124 = 263448;
  v64 = sub_23958E4C8((uint64_t)&v123);
  v65 = strlen(v64);
  if (v65 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v66 = (void *)v65;
  if (v65 >= 0x17)
  {
    v68 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v65 | 7) != 0x17)
      v68 = v65 | 7;
    v69 = v68 + 1;
    v67 = operator new(v68 + 1);
    v96[1] = v66;
    v97 = v69 | 0x8000000000000000;
    v96[0] = v67;
    goto LABEL_64;
  }
  HIBYTE(v97) = v65;
  v67 = v96;
  if (v65)
LABEL_64:
    memmove(v67, v64, (size_t)v66);
  *((_BYTE *)v66 + (_QWORD)v67) = 0;
  v70 = (_QWORD *)operator new();
  *v70 = &off_250AE0220;
  v70[1] = v4 + 25;
  sub_23961580C((uint64_t)__p, (uint64_t)v96, (uint64_t)v70);
  strcpy(v122, "$QWA{IEWOW");
  v71 = (const char *)sub_23958E518((uint64_t)v122);
  v72 = strlen(v71);
  if (v72 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v73 = (void *)v72;
  if (v72 >= 0x17)
  {
    v75 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v72 | 7) != 0x17)
      v75 = v72 | 7;
    v76 = v75 + 1;
    v74 = operator new(v75 + 1);
    v94[1] = v73;
    v95 = v76 | 0x8000000000000000;
    v94[0] = v74;
    goto LABEL_72;
  }
  HIBYTE(v95) = v72;
  v74 = v94;
  if (v72)
LABEL_72:
    memmove(v74, v71, (size_t)v73);
  *((_BYTE *)v73 + (_QWORD)v74) = 0;
  v77 = (_QWORD *)operator new();
  *v77 = &off_250AE0220;
  v77[1] = v4 + 26;
  sub_23961580C((uint64_t)__p, (uint64_t)v94, (uint64_t)v77);
  v121 = xmmword_239F0C0C0;
  sub_23950F8E4((uint64_t)&v121);
  v79 = v78;
  v80 = strlen(v78);
  if (v80 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v81 = (void *)v80;
  if (v80 >= 0x17)
  {
    v83 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17)
      v83 = v80 | 7;
    v84 = v83 + 1;
    v82 = operator new(v83 + 1);
    v92[1] = v81;
    v93 = v84 | 0x8000000000000000;
    v92[0] = v82;
    goto LABEL_80;
  }
  HIBYTE(v93) = v80;
  v82 = v92;
  if (v80)
LABEL_80:
    memmove(v82, v79, (size_t)v81);
  *((_BYTE *)v81 + (_QWORD)v82) = 0;
  v85 = (_QWORD *)operator new();
  *v85 = &off_250AE0220;
  v85[1] = v4 + 27;
  sub_23961580C((uint64_t)__p, (uint64_t)v92, (uint64_t)v85);
  if (SHIBYTE(v93) < 0)
  {
    operator delete(v92[0]);
    if ((SHIBYTE(v95) & 0x80000000) == 0)
    {
LABEL_83:
      if ((SHIBYTE(v97) & 0x80000000) == 0)
        goto LABEL_84;
      goto LABEL_105;
    }
  }
  else if ((SHIBYTE(v95) & 0x80000000) == 0)
  {
    goto LABEL_83;
  }
  operator delete(v94[0]);
  if ((SHIBYTE(v97) & 0x80000000) == 0)
  {
LABEL_84:
    if ((SHIBYTE(v99) & 0x80000000) == 0)
      goto LABEL_85;
    goto LABEL_106;
  }
LABEL_105:
  operator delete(v96[0]);
  if ((SHIBYTE(v99) & 0x80000000) == 0)
  {
LABEL_85:
    if ((SHIBYTE(v101) & 0x80000000) == 0)
      goto LABEL_86;
    goto LABEL_107;
  }
LABEL_106:
  operator delete(v98[0]);
  if ((SHIBYTE(v101) & 0x80000000) == 0)
  {
LABEL_86:
    if ((SHIBYTE(v103) & 0x80000000) == 0)
      goto LABEL_87;
    goto LABEL_108;
  }
LABEL_107:
  operator delete(v100[0]);
  if ((SHIBYTE(v103) & 0x80000000) == 0)
  {
LABEL_87:
    if ((SHIBYTE(v105) & 0x80000000) == 0)
      goto LABEL_88;
    goto LABEL_109;
  }
LABEL_108:
  operator delete(v102[0]);
  if ((SHIBYTE(v105) & 0x80000000) == 0)
  {
LABEL_88:
    if ((SHIBYTE(v107) & 0x80000000) == 0)
      goto LABEL_89;
    goto LABEL_110;
  }
LABEL_109:
  operator delete(v104[0]);
  if ((SHIBYTE(v107) & 0x80000000) == 0)
  {
LABEL_89:
    if ((SHIBYTE(v109) & 0x80000000) == 0)
      goto LABEL_90;
LABEL_111:
    operator delete(v108[0]);
    if ((SHIBYTE(v111) & 0x80000000) == 0)
      goto LABEL_91;
    goto LABEL_112;
  }
LABEL_110:
  operator delete(v106[0]);
  if (SHIBYTE(v109) < 0)
    goto LABEL_111;
LABEL_90:
  if ((SHIBYTE(v111) & 0x80000000) == 0)
    goto LABEL_91;
LABEL_112:
  operator delete(__dst[0]);
LABEL_91:
  sub_23959479C((uint64_t)__p, a2);
  v86 = v120;
  if (v120)
  {
    do
    {
      v87 = v86[5];
      if (v87)
        (*(void (**)(uint64_t))(*(_QWORD *)v87 + 8))(v87);
      v86 = (_QWORD *)*v86;
    }
    while (v86);
    v88 = (void **)v120;
    if (v120)
    {
      do
      {
        v91 = (void **)*v88;
        if (*((char *)v88 + 39) < 0)
          operator delete(v88[2]);
        operator delete(v88);
        v88 = v91;
      }
      while (v91);
    }
  }
  v89 = __p[0];
  __p[0] = 0;
  if (v89)
    operator delete(v89);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B256D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,_QWORD *__p)
{
  _QWORD *v50;
  uint64_t v51;
  void **v52;
  void **v53;

  v50 = __p;
  if (__p)
  {
    do
    {
      v51 = v50[5];
      if (v51)
        (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
      v50 = (_QWORD *)*v50;
    }
    while (v50);
    v52 = (void **)__p;
    do
    {
      v53 = (void **)*v52;
      if (*((char *)v52 + 39) < 0)
        operator delete(v52[2]);
      operator delete(v52);
      v52 = v53;
    }
    while (v53);
  }
  if (!a47)
    _Unwind_Resume(a1);
  operator delete(a47);
  _Unwind_Resume(a1);
}

void sub_239B2590C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a33 < 0)
    JUMPOUT(0x239B25794);
  JUMPOUT(0x239B25804);
}

void sub_239B25920(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B25944(uint64_t a1, _QWORD *a2, int a3)
{
  char v5;

  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
  }
  else
  {
    v5 = ***(_BYTE ***)(a1 + 8);
    sub_239458500(a2, (uint64_t)&v5, 1);
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B259C8(uint64_t a1, _QWORD *a2, int a3)
{
  _BYTE **v4;
  char v6;

  v4 = *(_BYTE ***)(a1 + 8);
  v6 = 0;
  sub_239598A58(&v6, a2, a3);
  **v4 = v6;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B25A28(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B25A4C(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B25AF4(uint64_t a1, _QWORD *a2, int a3)
{
  _DWORD **v4;
  int v6;

  v4 = *(_DWORD ***)(a1 + 8);
  v6 = 0;
  sub_239596F74((uint64_t)&v6, (uint64_t)a2, a3);
  **v4 = v6;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B25B54(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B25B78(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B25C20(uint64_t a1, _QWORD *a2, int a3)
{
  _DWORD **v4;
  int v6;

  v4 = *(_DWORD ***)(a1 + 8);
  v6 = 0;
  sub_2395A2AC8((uint64_t)&v6, (uint64_t)a2, a3);
  **v4 = v6;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B25C80(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B25CA4(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B25D4C(uint64_t a1, _QWORD *a2, int a3)
{
  _DWORD **v4;
  int v6;

  v4 = *(_DWORD ***)(a1 + 8);
  v6 = 0;
  sub_2395A2AC8((uint64_t)&v6, (uint64_t)a2, a3);
  **v4 = v6;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B25DAC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B25DD0(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B25E78(uint64_t a1, _QWORD *a2, int a3)
{
  _DWORD **v4;
  int v6;

  v4 = *(_DWORD ***)(a1 + 8);
  v6 = 0;
  sub_2395A2AC8((uint64_t)&v6, (uint64_t)a2, a3);
  **v4 = v6;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B25ED8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B25EFC(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B25FA4(uint64_t a1, _QWORD *a2, int a3)
{
  _DWORD **v4;
  int v6;

  v4 = *(_DWORD ***)(a1 + 8);
  v6 = 0;
  sub_2395A2AC8((uint64_t)&v6, (uint64_t)a2, a3);
  **v4 = v6;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B26004(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B26028(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B260D0(uint64_t a1, _QWORD *a2, int a3)
{
  _DWORD **v4;
  int v6;

  v4 = *(_DWORD ***)(a1 + 8);
  v6 = 0;
  sub_2395A2AC8((uint64_t)&v6, (uint64_t)a2, a3);
  **v4 = v6;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B26130(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B26154(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239A939F8(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B26190(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void **v18;
  void *v19;
  void **v21;
  void *__p[2];
  unint64_t v23;
  uint64_t v24;
  void *v25[2];
  void *v26;
  unsigned __int8 v27[40];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)v25, a3);
  v24 = v4;
  *(_OWORD *)v27 = xmmword_239F1090F;
  *(_OWORD *)&v27[10] = *(__int128 *)((char *)&xmmword_239F1090F + 10);
  sub_239A93C04(v27, *(int32x4_t *)((char *)&xmmword_239F1090F + 10), v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = operator new(v13 + 1);
    __p[1] = v11;
    v23 = v14 | 0x8000000000000000;
    __p[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v23) = v10;
  v12 = __p;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AF54F8;
  v15[1] = &v24;
  sub_23961580C((uint64_t)v25, (uint64_t)__p, (uint64_t)v15);
  if (SHIBYTE(v23) < 0)
    operator delete(__p[0]);
  sub_23959479C((uint64_t)v25, a2);
  v16 = v26;
  if (v26)
  {
    do
    {
      v17 = v16[5];
      if (v17)
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
      v16 = (_QWORD *)*v16;
    }
    while (v16);
    v18 = (void **)v26;
    if (v26)
    {
      do
      {
        v21 = (void **)*v18;
        if (*((char *)v18 + 39) < 0)
          operator delete(v18[2]);
        operator delete(v18);
        v18 = v21;
      }
      while (v21);
    }
  }
  v19 = v25[0];
  v25[0] = 0;
  if (v19)
    operator delete(v19);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B26380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, _QWORD *__p)
{
  _QWORD *v19;
  uint64_t v20;
  void **v21;
  void **v22;

  v19 = __p;
  if (__p)
  {
    do
    {
      v20 = v19[5];
      if (v20)
        (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
      v19 = (_QWORD *)*v19;
    }
    while (v19);
    v21 = (void **)__p;
    do
    {
      v22 = (void **)*v21;
      if (*((char *)v21 + 39) < 0)
        operator delete(v21[2]);
      operator delete(v21);
      v21 = v22;
    }
    while (v22);
  }
  if (!a16)
    _Unwind_Resume(exception_object);
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_239B2642C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B26450(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B264F8(uint64_t a1, _QWORD *a2, int a3)
{
  _DWORD **v4;
  int v6;

  v4 = *(_DWORD ***)(a1 + 8);
  v6 = 0;
  sub_239596F74((uint64_t)&v6, (uint64_t)a2, a3);
  **v4 = v6;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B26558(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B2657C(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B26624(uint64_t a1, _QWORD *a2, int a3)
{
  _DWORD **v4;
  int v6;

  v4 = *(_DWORD ***)(a1 + 8);
  v6 = 0;
  sub_2395A2AC8((uint64_t)&v6, (uint64_t)a2, a3);
  **v4 = v6;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B26684(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B266A8(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B26750(uint64_t a1, _QWORD *a2, int a3)
{
  _DWORD **v4;
  int v6;

  v4 = *(_DWORD ***)(a1 + 8);
  v6 = 0;
  sub_2395A2AC8((uint64_t)&v6, (uint64_t)a2, a3);
  **v4 = v6;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B267B0(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B267D4(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  if (!*(_BYTE *)(*(_QWORD *)(a1 + 8) + 40))
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v5 = *(_QWORD *)(a1 + 8);
  sub_239A90D5C((uint64_t)&v5, (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B26850(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  uint64_t j;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  __int128 v15;
  int v16;
  uint64_t *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  int v24;
  int i;
  _QWORD *exception;
  __int128 v27;
  __int128 v28;
  int v29;
  uint64_t v30[2];
  char v31;
  char v32;

  v5 = *(_QWORD *)(a1 + 8);
  v27 = 0u;
  v28 = 0u;
  v29 = 1065353216;
  v30[0] = (uint64_t)&v27;
  if (a3 && (v6 = std::istream::peek(), (v6 & 0xFFFFFFFE) != 0xDE))
  {
    std::istream::get();
    if (v6 == 221)
    {
      v24 = sub_2396162D4((uint64_t)a2, 221);
      if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      {
        exception = __cxa_allocate_exception(8uLL);
        *exception = MEMORY[0x24BEDB8F0] + 16;
        __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
      }
      for (i = v24; i; --i)
        sub_239B2742C(v30, a2, 1);
    }
    else
    {
      sub_2396163F8(a2, v6);
    }
  }
  else
  {
    sub_239B2742C(v30, a2, a3);
  }
  if (*(_BYTE *)(v5 + 40))
  {
    if (&v27 != (__int128 *)v5)
    {
      *(_DWORD *)(v5 + 32) = v29;
      v7 = (char *)v28;
      v8 = *(_QWORD *)(v5 + 8);
      if (!v8)
        goto LABEL_14;
      for (j = 0; j != v8; ++j)
        *(_QWORD *)(*(_QWORD *)v5 + 8 * j) = 0;
      v10 = *(char **)(v5 + 16);
      *(_QWORD *)(v5 + 16) = 0;
      *(_QWORD *)(v5 + 24) = 0;
      if (v10)
      {
        while (v7)
        {
          std::string::operator=((std::string *)(v10 + 16), (const std::string *)(v7 + 16));
          if (v10 != v7)
            sub_239A70694((uint64_t)(v10 + 40), *((std::string **)v7 + 5), *((std::string **)v7 + 6), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)v7 + 6) - *((_QWORD *)v7 + 5)) >> 3));
          v11 = *(char **)v10;
          sub_239B26C54(v5, (uint64_t)v10);
          v7 = *(char **)v7;
          v10 = v11;
          if (!v11)
            goto LABEL_14;
        }
        do
        {
          v19 = *(char **)v10;
          v20 = *((_QWORD *)v10 + 5);
          if (v20)
          {
            v21 = *((_QWORD *)v10 + 6);
            v22 = (void *)*((_QWORD *)v10 + 5);
            if (v21 != v20)
            {
              do
              {
                if (*(char *)(v21 - 1) < 0)
                  operator delete(*(void **)(v21 - 24));
                v21 -= 24;
              }
              while (v21 != v20);
              v22 = (void *)*((_QWORD *)v10 + 5);
            }
            *((_QWORD *)v10 + 6) = v20;
            operator delete(v22);
          }
          if (v10[39] < 0)
            operator delete(*((void **)v10 + 2));
          operator delete(v10);
          v10 = v19;
        }
        while (v19);
      }
      else
      {
LABEL_14:
        while (v7)
        {
          v12 = (char *)operator new(0x40uLL);
          v13 = (uint64_t)v12;
          v30[0] = (uint64_t)v12;
          v30[1] = v5 + 16;
          v31 = 0;
          v14 = (uint64_t *)(v12 + 16);
          *(_QWORD *)v12 = 0;
          *((_QWORD *)v12 + 1) = 0;
          if (v7[39] < 0)
          {
            sub_23941A7F8(v12 + 16, *((void **)v7 + 2), *((_QWORD *)v7 + 3));
          }
          else
          {
            v15 = *((_OWORD *)v7 + 1);
            *((_QWORD *)v12 + 4) = *((_QWORD *)v7 + 4);
            *(_OWORD *)v14 = v15;
          }
          *(_QWORD *)(v13 + 40) = 0;
          *(_QWORD *)(v13 + 48) = 0;
          *(_QWORD *)(v13 + 56) = 0;
          sub_239490944((char *)(v13 + 40), *((_QWORD *)v7 + 5), *((_QWORD *)v7 + 6), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)v7 + 6) - *((_QWORD *)v7 + 5)) >> 3));
          v31 = 1;
          v16 = *(char *)(v13 + 39);
          if (v16 >= 0)
            v17 = v14;
          else
            v17 = *(uint64_t **)(v13 + 16);
          if (v16 >= 0)
            v18 = *(unsigned __int8 *)(v13 + 39);
          else
            v18 = *(_QWORD *)(v13 + 24);
          *(_QWORD *)(v13 + 8) = sub_239428940((uint64_t)&v32, v17, v18);
          sub_239B26C54(v5, v13);
          v7 = *(char **)v7;
        }
      }
    }
  }
  else
  {
    sub_239A8D5F8(v5, (uint64_t)&v27);
    *(_BYTE *)(v5 + 40) = 1;
  }
  sub_239A726C4((uint64_t)&v27);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B26B78()
{
  __break(1u);
}

void sub_239B26BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  void **v7;
  va_list va;

  va_start(va, a6);
  if (*(char *)(v6 + 39) < 0)
    operator delete(*v7);
  sub_239A70970((uint64_t *)va);
  JUMPOUT(0x239B26C40);
}

void sub_239B26BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  void **v10;
  void **v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v13 = *(_QWORD *)(v9 + 40);
  if (v13)
  {
    v14 = *(_QWORD *)(v9 + 48);
    v15 = *(void **)(v9 + 40);
    if (v14 != v13)
    {
      do
      {
        if (*(char *)(v14 - 1) < 0)
          operator delete(*(void **)(v14 - 24));
        v14 -= 24;
      }
      while (v14 != v13);
      v15 = *v11;
    }
    *(_QWORD *)(v9 + 48) = v13;
    operator delete(v15);
  }
  if (*(char *)(v9 + 39) < 0)
    operator delete(*v10);
  operator delete((void *)v9);
  sub_239A726C4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239B26C38()
{
  __cxa_end_catch();
  JUMPOUT(0x239B26C40);
}

void sub_239B26C54(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unsigned __int8 *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  float v11;
  float v12;
  _BOOL8 v13;
  unint64_t v14;
  unint64_t v15;
  size_t v16;
  size_t prime;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t **v21;
  size_t v22;
  uint8x8_t v23;
  unint64_t v24;
  unint64_t v25;
  uint8x8_t v26;
  uint64_t v27;
  uint64_t *v28;
  size_t v29;
  uint64_t *v30;
  size_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  int v36;
  unsigned __int8 *v37;
  unsigned __int8 *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  const void *v42;
  uint64_t *v43;
  const void *v44;
  const void *v45;
  const void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint8x8_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  char v56;
  uint64_t v57;
  int v58;
  _BOOL4 v59;
  char v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  const void **v65;
  uint64_t v66;
  unsigned __int8 *v67;
  int v68;
  int v69;
  int v70;
  int v71;
  BOOL v72;
  char v73;
  BOOL v74;
  int v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  _BOOL4 v79;
  int v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  const void **v85;
  uint64_t v86;
  unsigned __int8 *v87;
  int v88;
  int v89;
  int v90;
  int v91;
  char v92;
  int v93;
  unsigned __int8 *v94;
  unint64_t v95;
  _QWORD *v96;
  size_t v97;
  unint64_t v98;
  char v99;

  v2 = (_QWORD *)a2;
  v4 = (unsigned __int8 *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 39);
  v6 = *(_QWORD *)(a2 + 24);
  if ((v5 & 0x80u) == 0)
    v7 = (uint64_t *)(a2 + 16);
  else
    v7 = *(uint64_t **)(a2 + 16);
  if ((v5 & 0x80u) == 0)
    v8 = v5;
  else
    v8 = v6;
  v9 = sub_239428940((uint64_t)&v99, v7, v8);
  v2[1] = v9;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v12 = *(float *)(a1 + 32);
  v98 = v9;
  v96 = v2;
  if (!v10 || (float)(v12 * (float)v10) < v11)
  {
    v94 = v4;
    v13 = 1;
    if (v10 >= 3)
      v13 = (v10 & (v10 - 1)) != 0;
    v14 = v13 | (2 * v10);
    v15 = vcvtps_u32_f32(v11 / v12);
    if (v14 <= v15)
      v16 = v15;
    else
      v16 = v14;
    if (v16 == 1)
    {
      v16 = 2;
    }
    else if ((v16 & (v16 - 1)) != 0)
    {
      prime = std::__next_prime(v16);
      v9 = v98;
      v16 = prime;
      v10 = *(_QWORD *)(a1 + 8);
    }
    if (v16 > v10)
      goto LABEL_19;
    if (v16 >= v10)
      goto LABEL_101;
    v25 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v10 < 3 || (v26 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
    {
      v25 = std::__next_prime(v25);
      v9 = v98;
    }
    else
    {
      v27 = 1 << -(char)__clz(v25 - 1);
      if (v25 >= 2)
        v25 = v27;
    }
    if (v16 <= v25)
      v16 = v25;
    if (v16 >= v10)
    {
      v10 = *(_QWORD *)(a1 + 8);
LABEL_101:
      v4 = v94;
    }
    else
    {
      if (v16)
      {
LABEL_19:
        if (v16 >> 61)
          sub_239418A80();
        v18 = operator new(8 * v16);
        v19 = *(void **)a1;
        *(_QWORD *)a1 = v18;
        if (v19)
          operator delete(v19);
        v20 = 0;
        *(_QWORD *)(a1 + 8) = v16;
        do
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v20++) = 0;
        while (v16 != v20);
        v21 = *(uint64_t ***)(a1 + 16);
        v9 = v98;
        if (!v21)
          goto LABEL_90;
        v22 = (size_t)v21[1];
        v23 = (uint8x8_t)vcnt_s8((int8x8_t)v16);
        v23.i16[0] = vaddlv_u8(v23);
        v24 = v23.u32[0];
        if (v23.u32[0] > 1uLL)
        {
          if (v22 >= v16)
            v22 %= v16;
        }
        else
        {
          v22 &= v16 - 1;
        }
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v22) = a1 + 16;
        v28 = *v21;
        if (!*v21)
        {
LABEL_90:
          v10 = v16;
          goto LABEL_101;
        }
        v95 = v23.u32[0];
        while (1)
        {
          v29 = v28[1];
          if (v24 > 1)
          {
            if (v29 >= v16)
              v29 %= v16;
          }
          else
          {
            v29 &= v16 - 1;
          }
          if (v29 == v22)
          {
            v21 = (uint64_t **)v28;
          }
          else
          {
            if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v29))
            {
              v30 = (uint64_t *)*v28;
              v97 = v22;
              if (*v28)
              {
                v31 = v28[3];
                if (*((char *)v28 + 39) >= 0)
                  v32 = *((unsigned __int8 *)v28 + 39);
                else
                  v32 = v28[3];
                if ((*((_BYTE *)v28 + 39) & 0x80) == 0)
                {
                  if (*((_BYTE *)v28 + 39))
                  {
                    v33 = (uint64_t *)*v28;
                    v34 = v28;
LABEL_52:
                    v30 = v33;
                    v35 = *((unsigned __int8 *)v33 + 39);
                    v36 = (char)v35;
                    if ((v35 & 0x80u) != 0)
                      v35 = v30[3];
                    if (v32 == v35)
                    {
                      if (v36 >= 0)
                        v37 = (unsigned __int8 *)(v30 + 2);
                      else
                        v37 = (unsigned __int8 *)v30[2];
                      v38 = (unsigned __int8 *)(v28 + 2);
                      v39 = *((unsigned __int8 *)v28 + 39);
                      while (*v38 == *v37)
                      {
                        ++v38;
                        ++v37;
                        if (!--v39)
                        {
                          v33 = (uint64_t *)*v30;
                          v34 = v30;
                          v30 = 0;
                          if (v33)
                            goto LABEL_52;
                          goto LABEL_78;
                        }
                      }
                    }
                  }
                  else
                  {
                    v49 = *((unsigned __int8 *)v30 + 39);
                    if ((v49 & 0x80u) != 0)
                      v49 = v30[3];
                    v34 = v28;
                    if (v49 == *((unsigned __int8 *)v28 + 39))
                    {
                      do
                      {
                        v34 = v30;
                        v30 = (uint64_t *)*v30;
                        if (!v30)
                          break;
                        v50 = *((unsigned __int8 *)v30 + 39);
                        if ((v50 & 0x80u) != 0)
                          v50 = v30[3];
                      }
                      while (v32 == v50);
                    }
                  }
                  goto LABEL_78;
                }
                v40 = *((char *)v30 + 39) < 0;
                v41 = *((unsigned __int8 *)v30 + 39);
                if ((v41 & 0x80u) != 0)
                  v41 = v30[3];
                if (v32 == v41)
                {
                  v42 = (const void *)v28[2];
                  v34 = v28;
                  while (1)
                  {
                    v43 = v30;
                    v46 = (const void *)v30[2];
                    v44 = v30 + 2;
                    v45 = v46;
                    if (v40)
                      v47 = v45;
                    else
                      v47 = v44;
                    if (memcmp(v42, v47, v31))
                    {
                      v30 = v43;
                      goto LABEL_89;
                    }
                    v30 = (uint64_t *)*v43;
                    if (!*v43)
                      break;
                    v40 = *((char *)v30 + 39) < 0;
                    v48 = *((unsigned __int8 *)v30 + 39);
                    if ((v48 & 0x80u) != 0)
                      v48 = v30[3];
                    v34 = v43;
                    v9 = v98;
                    if (v32 != v48)
                      goto LABEL_78;
                  }
                  v34 = v43;
LABEL_89:
                  v9 = v98;
                  goto LABEL_78;
                }
              }
              v34 = v28;
LABEL_78:
              *v21 = v30;
              *v34 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v29);
              **(_QWORD **)(*(_QWORD *)a1 + 8 * v29) = v28;
              v22 = v97;
              v24 = v95;
              goto LABEL_38;
            }
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v29) = v21;
            v21 = (uint64_t **)v28;
            v22 = v29;
          }
LABEL_38:
          v28 = *v21;
          if (!*v21)
          {
            v10 = v16;
            v2 = v96;
            goto LABEL_101;
          }
        }
      }
      v51 = *(void **)a1;
      *(_QWORD *)a1 = 0;
      v4 = v94;
      if (v51)
      {
        operator delete(v51);
        v9 = v98;
      }
      v10 = 0;
      *(_QWORD *)(a1 + 8) = 0;
    }
  }
  v52 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
  v52.i16[0] = vaddlv_u8(v52);
  v53 = v52.u32[0];
  if (v52.u32[0] > 1uLL)
  {
    v54 = v9;
    if (v10 <= v9)
      v54 = v9 % v10;
  }
  else
  {
    v54 = (v10 - 1) & v9;
  }
  v55 = *(uint64_t **)(*(_QWORD *)a1 + 8 * v54);
  if (v55)
  {
    v56 = *((_BYTE *)v2 + 39);
    if (v56 >= 0)
      v57 = *((unsigned __int8 *)v2 + 39);
    else
      v57 = v2[3];
    if (v56 < 0)
      v4 = (unsigned __int8 *)v2[2];
    if (v52.u32[0] >= 2uLL)
    {
      v78 = 0;
      do
      {
        v61 = v55;
        v55 = (uint64_t *)*v55;
        if (!v55)
          break;
        v81 = v55[1];
        v82 = v81;
        if (v81 >= v10)
          v82 = v81 % v10;
        if (v82 != v54)
          break;
        if (v81 == v9
          && ((v83 = *((unsigned __int8 *)v55 + 39), (v83 & 0x80u) == 0)
            ? (v84 = *((unsigned __int8 *)v55 + 39))
            : (v84 = v55[3]),
              v84 == v57))
        {
          v85 = (const void **)(v55 + 2);
          if ((v83 & 0x80) != 0)
          {
            v93 = memcmp(*v85, v4, v55[3]);
            v9 = v98;
            v79 = v93 == 0;
          }
          else if (*((_BYTE *)v55 + 39))
          {
            v86 = v83 - 1;
            v87 = v4;
            do
            {
              v89 = *(unsigned __int8 *)v85;
              v85 = (const void **)((char *)v85 + 1);
              v88 = v89;
              v91 = *v87++;
              v90 = v91;
              v72 = v86-- != 0;
              v92 = v72;
              v74 = v88 == v90;
              v79 = v88 == v90;
            }
            while (v74 && (v92 & 1) != 0);
          }
          else
          {
            v79 = 1;
          }
        }
        else
        {
          v79 = 0;
        }
        v80 = v78 & !v79;
        v78 |= v79;
      }
      while (v80 != 1);
    }
    else
    {
      v58 = 0;
      do
      {
        v61 = v55;
        v55 = (uint64_t *)*v55;
        if (!v55)
          break;
        v62 = v55[1];
        if ((v62 & (v10 - 1)) != v54)
          break;
        if (v62 == v9
          && ((v63 = *((unsigned __int8 *)v55 + 39), (v63 & 0x80u) == 0)
            ? (v64 = *((unsigned __int8 *)v55 + 39))
            : (v64 = v55[3]),
              v64 == v57))
        {
          v65 = (const void **)(v55 + 2);
          if ((v63 & 0x80) != 0)
          {
            v75 = memcmp(*v65, v4, v55[3]);
            v9 = v98;
            v59 = v75 == 0;
          }
          else if (*((_BYTE *)v55 + 39))
          {
            v66 = v63 - 1;
            v67 = v4;
            do
            {
              v69 = *(unsigned __int8 *)v65;
              v65 = (const void **)((char *)v65 + 1);
              v68 = v69;
              v71 = *v67++;
              v70 = v71;
              v72 = v66-- != 0;
              v73 = v72;
              v74 = v68 == v70;
              v59 = v68 == v70;
            }
            while (v74 && (v73 & 1) != 0);
          }
          else
          {
            v59 = 1;
          }
        }
        else
        {
          v59 = 0;
        }
        v60 = v58 & !v59;
        v58 |= v59;
      }
      while ((v60 & 1) == 0);
    }
  }
  else
  {
    v61 = 0;
  }
  v76 = v96[1];
  if (v53 > 1)
  {
    if (v76 >= v10)
      v76 %= v10;
  }
  else
  {
    v76 &= v10 - 1;
  }
  if (!v61)
  {
    *v96 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v96;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v76) = a1 + 16;
    if (!*v96)
      goto LABEL_178;
    v77 = *(_QWORD *)(*v96 + 8);
    if (v53 > 1)
    {
      if (v77 >= v10)
        v77 %= v10;
    }
    else
    {
      v77 &= v10 - 1;
    }
LABEL_177:
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v77) = v96;
    goto LABEL_178;
  }
  *v96 = *v61;
  *v61 = v96;
  if (*v96)
  {
    v77 = *(_QWORD *)(*v96 + 8);
    if (v53 > 1)
    {
      if (v77 >= v10)
        v77 %= v10;
    }
    else
    {
      v77 &= v10 - 1;
    }
    if (v77 != v76)
      goto LABEL_177;
  }
LABEL_178:
  ++*(_QWORD *)(a1 + 24);
}

void sub_239B27394(char *__p)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  do
  {
    v2 = *(char **)__p;
    v3 = *((_QWORD *)__p + 5);
    if (v3)
    {
      v4 = *((_QWORD *)__p + 6);
      v5 = (void *)*((_QWORD *)__p + 5);
      if (v4 != v3)
      {
        do
        {
          if (*(char *)(v4 - 1) < 0)
            operator delete(*(void **)(v4 - 24));
          v4 -= 24;
        }
        while (v4 != v3);
        v5 = (void *)*((_QWORD *)__p + 5);
      }
      *((_QWORD *)__p + 6) = v3;
      operator delete(v5);
    }
    if (__p[39] < 0)
      operator delete(*((void **)__p + 2));
    operator delete(__p);
    __p = v2;
  }
  while (v2);
}

void sub_239B2742C(uint64_t *a1, uint64_t *a2, int a3)
{
  int v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  void **v14;
  int v15;
  std::string *v16;
  std::string *v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  BOOL v27;
  uint64_t *v28;
  char i;
  unsigned int v30;
  int v31;
  int v32;
  uint64_t v33;
  void **v34;
  int j;
  unsigned int v36;
  int v37;
  uint64_t *v38;
  std::string *v39;
  std::string *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *__p;
  std::string *v50;
  uint64_t v51[2];
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char v55;
  _BYTE v56[152];
  std::string __str;
  std::string v58;
  __int128 *v59[2];

  if (a3)
  {
    v4 = std::istream::get();
    v5 = sub_2396162D4((uint64_t)a2, v4);
    if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      v6 = 1;
    else
      v6 = v5 == 0;
    if (!v6)
    {
      v7 = 0;
      v43 = v5;
      v8 = *MEMORY[0x24BEDB7F0];
      v9 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v45 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v10 = MEMORY[0x24BEDB848] + 16;
      do
      {
        memset(&v58, 0, sizeof(v58));
        v11 = std::istream::get();
        v12 = sub_2396162D4((uint64_t)a2, v11);
        if (v12)
        {
          std::string::resize(&v58, v12, 0);
          std::istream::read();
        }
        else if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
        {
          *v58.__r_.__value_.__l.__data_ = 0;
          v58.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v58.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v58.__r_.__value_.__s + 23) = 0;
        }
        memset(&__str, 0, sizeof(__str));
        sub_239593804((uint64_t)v51, (uint64_t)&v58, 24);
        sub_23955CC24(v51, (uint64_t)&__str);
        sub_2396F2654(&__p);
        sub_239B27B90(&__p, a2, 1);
        v13 = *a1;
        v59[0] = (__int128 *)&__str;
        v14 = (void **)(sub_239A70268(v13, (uint64_t)&__str, v59) + 5);
        if (v14 != &__p)
          sub_239A70694((uint64_t)v14, (std::string *)__p, v50, 0xAAAAAAAAAAAAAAABLL * (((char *)v50 - (_BYTE *)__p) >> 3));
        v15 = *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32);
        v16 = (std::string *)__p;
        if (__p)
        {
          v17 = v50;
          v18 = __p;
          if (v50 != __p)
          {
            do
            {
              if (SHIBYTE(v17[-1].__r_.__value_.__r.__words[2]) < 0)
                operator delete(v17[-1].__r_.__value_.__l.__data_);
              --v17;
            }
            while (v17 != v16);
            v18 = __p;
          }
          v50 = v16;
          operator delete(v18);
        }
        v51[0] = v8;
        *(uint64_t *)((char *)v51 + *(_QWORD *)(v8 - 24)) = v45;
        v52 = v9;
        v53 = v10;
        if (v55 < 0)
          operator delete(v54);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v56);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(__str.__r_.__value_.__l.__data_);
          if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
          {
LABEL_29:
            operator delete(v58.__r_.__value_.__l.__data_);
            if (v15)
              return;
            goto LABEL_30;
          }
        }
        else if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
        {
          goto LABEL_29;
        }
        if (v15)
          return;
LABEL_30:
        ++v7;
      }
      while (v7 != v43);
    }
  }
  else
  {
    v19 = a2 + 4;
    v20 = MEMORY[0x24BDAC740];
    while (1)
    {
      v21 = std::istream::peek();
      v22 = v21 <= 0x7F ? *(_DWORD *)(v20 + 4 * v21 + 60) & 0x4000 : __maskrune(v21, 0x4000uLL);
      v23 = *(_QWORD *)(*a2 - 24);
      if (!v22)
        break;
      if (!*(_DWORD *)((char *)v19 + v23))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v23 + 32) & 2) == 0)
    {
      memset(&v58, 0, sizeof(v58));
      memset(&__str, 0, sizeof(__str));
      if (std::istream::get() == 123)
      {
        while (1)
        {
          v24 = std::istream::peek();
          v25 = v24 <= 0x7F ? *(_DWORD *)(v20 + 4 * v24 + 60) & 0x4000 : __maskrune(v24, 0x4000uLL);
          v26 = *(_QWORD *)(*a2 - 24);
          if (!v25)
            break;
          if (!*(_DWORD *)((char *)v19 + v26))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v26 + 32) & 2) == 0)
        {
          v27 = std::istream::peek() == 125;
          v28 = &v52;
          v46 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          v47 = *MEMORY[0x24BEDB7F0];
          v44 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          v42 = MEMORY[0x24BEDB848] + 16;
          while ((*((_BYTE *)v19 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && !v27)
          {
            if (!sub_239595A48((uint64_t)&__str, a2))
              goto LABEL_97;
            std::string::operator=(&v58, &__str);
            for (i = std::istream::peek();
                  i != 58 && !*(_DWORD *)((char *)v19 + *(_QWORD *)(*a2 - 24));
                  i = std::istream::peek())
            {
              std::istream::get();
            }
            if (*(_DWORD *)((char *)v19 + *(_QWORD *)(*a2 - 24)))
              goto LABEL_97;
LABEL_58:
            std::istream::get();
            while (1)
            {
              v30 = std::istream::peek();
              v31 = v30 <= 0x7F ? *(_DWORD *)(v20 + 4 * v30 + 60) & 0x4000 : __maskrune(v30, 0x4000uLL);
              v32 = *(_DWORD *)((char *)v19 + *(_QWORD *)(*a2 - 24));
              if (!v31)
                break;
              if (!v32)
                goto LABEL_58;
            }
            if ((v32 & 2) == 0)
            {
              sub_2394988CC((uint64_t)v51);
              if (sub_239596128(a2))
              {
                sub_2396F2654(&__p);
                sub_239B27B90(&__p, v51, 0);
                v33 = *a1;
                v59[0] = (__int128 *)&v58;
                v34 = (void **)(sub_239A70268(v33, (uint64_t)&v58, v59) + 5);
                if (v34 != &__p)
                  sub_239A70694((uint64_t)v34, (std::string *)__p, v50, 0xAAAAAAAAAAAAAAABLL * (((char *)v50 - (_BYTE *)__p) >> 3));
                for (j = std::istream::peek(); ; j = std::istream::peek())
                {
                  v36 = j << 24;
                  if (j << 24 == 738197504)
                    goto LABEL_80;
                  if (v36 == 2097152000)
                  {
                    v27 = 1;
LABEL_82:
                    v38 = v28;
                    v37 = 0;
                    v39 = (std::string *)__p;
                    if (!__p)
                      goto LABEL_90;
                    goto LABEL_83;
                  }
                  if (v36 <= 0x7F000000)
                  {
                    if ((*(_DWORD *)(v20 + 4 * (char)j + 60) & 0x4000) == 0)
                      break;
                  }
                  else if (!__maskrune((char)j, 0x4000uLL))
                  {
                    break;
                  }
                  if ((*((_BYTE *)v19 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                    break;
                  std::istream::get();
                }
                if (v36 == 738197504)
                {
LABEL_80:
                  std::istream::get();
                  v27 = 0;
                  goto LABEL_82;
                }
                v38 = v28;
                v27 = 0;
                v37 = 1;
                v39 = (std::string *)__p;
                if (!__p)
                  goto LABEL_90;
LABEL_83:
                v40 = v50;
                v41 = v39;
                if (v50 != v39)
                {
                  do
                  {
                    if (SHIBYTE(v40[-1].__r_.__value_.__r.__words[2]) < 0)
                      operator delete(v40[-1].__r_.__value_.__l.__data_);
                    --v40;
                  }
                  while (v40 != v39);
                  v41 = __p;
                }
                v50 = v39;
                operator delete(v41);
LABEL_90:
                v28 = v38;
              }
              else
              {
                v27 = 0;
                v37 = 1;
              }
              v51[0] = v47;
              *(uint64_t *)((char *)v51 + *(_QWORD *)(v47 - 24)) = v46;
              v52 = v44;
              v53 = v42;
              if (v55 < 0)
                operator delete(v54);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x23B83E250](v56);
              if (!v37)
                continue;
            }
            goto LABEL_97;
          }
          if (sub_2395959B4(a2))
            std::istream::get();
        }
      }
LABEL_97:
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__str.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v58.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return;
      }
      else if ((SHIBYTE(v58.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        return;
      }
      operator delete(v58.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239B27AFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;

  if (*(char *)(v20 - 121) < 0)
  {
    operator delete(*(void **)(v20 - 144));
    if ((*(char *)(v20 - 97) & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v20 - 97) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v20 - 120));
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239B27B90(void **a1, uint64_t *a2, int a3)
{
  int v5;
  unsigned int v6;
  void **v7;
  void **v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  void **v13;
  void **v14;
  void *v15;
  __n128 __p;
  uint64_t v18;
  void *v19;
  char v20;
  void *v21;
  void **v22;
  std::string v23;
  __n128 v24;
  void *v25;

  memset(&v23, 0, sizeof(v23));
  if (a3)
  {
    v5 = std::istream::get();
    v6 = sub_2396162D4((uint64_t)a2, v5);
    if (v6)
    {
      std::string::resize(&v23, v6, 0);
      std::istream::read();
    }
    else if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    {
      *v23.__r_.__value_.__l.__data_ = 0;
      v23.__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      v23.__r_.__value_.__s.__data_[0] = 0;
      *((_BYTE *)&v23.__r_.__value_.__s + 23) = 0;
    }
  }
  else
  {
    sub_239595A48((uint64_t)&v23, a2);
  }
  v20 = 1;
  LOWORD(v19) = 47;
  sub_239601608((const char *)&v19, (uint64_t)&v24);
  sub_2395F7A80((uint64_t)&v23, (uint64_t)&v24, 0, (uint64_t)&v21);
  if (SHIBYTE(v25) < 0)
  {
    operator delete((void *)v24.n128_u64[0]);
    if ((v20 & 0x80000000) == 0)
      goto LABEL_7;
  }
  else if ((v20 & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete(v19);
LABEL_7:
  v18 = 0;
  __p = 0uLL;
  sub_239490944((char *)&__p, (uint64_t)v21, (uint64_t)v22, 0xAAAAAAAAAAAAAAABLL * (((char *)v22 - (_BYTE *)v21) >> 3));
  sub_2396F2660(&v24, &__p);
  v7 = (void **)*a1;
  if (*a1)
  {
    v8 = (void **)a1[1];
    v9 = *a1;
    if (v8 != v7)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = *a1;
    }
    a1[1] = v7;
    operator delete(v9);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  *(__n128 *)a1 = v24;
  a1[2] = v25;
  v25 = 0;
  v24 = 0uLL;
  v10 = __p.n128_u64[0];
  if (__p.n128_u64[0])
  {
    v11 = __p.n128_u64[1];
    v12 = (void *)__p.n128_u64[0];
    if (__p.n128_u64[1] != __p.n128_u64[0])
    {
      do
      {
        if (*(char *)(v11 - 1) < 0)
          operator delete(*(void **)(v11 - 24));
        v11 -= 24;
      }
      while (v11 != v10);
      v12 = (void *)__p.n128_u64[0];
    }
    __p.n128_u64[1] = v10;
    operator delete(v12);
  }
  v13 = (void **)v21;
  if (v21)
  {
    v14 = v22;
    v15 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v14 - 1) < 0)
          operator delete(*(v14 - 3));
        v14 -= 3;
      }
      while (v14 != v13);
      v15 = v21;
    }
    v22 = v13;
    operator delete(v15);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v23.__r_.__value_.__l.__data_);
  return a2;
}

void sub_239B27DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  sub_23941B08C(&a18);
  if ((a26 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239B27E78(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B27E9C(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  if (!*(_BYTE *)(*(_QWORD *)(a1 + 8) + 40))
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v5 = *(_QWORD *)(a1 + 8);
  sub_239A91438((uint64_t)&v5, (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B27F18(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  void *v8;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int i;
  _QWORD *exception;
  void *__p[2];
  __int128 v18;
  int v19;
  void **v20;

  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)__p = 0u;
  v18 = 0u;
  v19 = 1065353216;
  v20 = __p;
  if (a3 && (v6 = std::istream::peek(), (v6 & 0xFFFFFFFE) != 0xDE))
  {
    std::istream::get();
    if (v6 == 221)
    {
      v14 = sub_2396162D4((uint64_t)a2, 221);
      if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      {
        exception = __cxa_allocate_exception(8uLL);
        *exception = MEMORY[0x24BEDB8F0] + 16;
        __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
      }
      for (i = v14; i; --i)
        sub_239B28188((uint64_t *)&v20, a2, 1);
    }
    else
    {
      sub_2396163F8(a2, v6);
    }
  }
  else
  {
    sub_239B28188((uint64_t *)&v20, a2, a3);
  }
  if (!*(_BYTE *)(v5 + 40))
  {
    sub_239A8DC0C(v5, (uint64_t)__p);
    *(_BYTE *)(v5 + 40) = 1;
    v7 = (_QWORD *)v18;
    if (!(_QWORD)v18)
      goto LABEL_10;
    goto LABEL_16;
  }
  if (__p != (void **)v5)
  {
    *(_DWORD *)(v5 + 32) = v19;
    sub_239B03B40((_QWORD *)v5, (uint64_t **)v18);
  }
  v7 = (_QWORD *)v18;
  if ((_QWORD)v18)
  {
    do
    {
LABEL_16:
      v11 = (_QWORD *)*v7;
      v12 = v7[3];
      if (v12)
      {
        v13 = v7[4];
        v10 = (void *)v7[3];
        if (v13 != v12)
        {
          do
          {
            if (*(char *)(v13 - 1) < 0)
              operator delete(*(void **)(v13 - 24));
            v13 -= 24;
          }
          while (v13 != v12);
          v10 = (void *)v7[3];
        }
        v7[4] = v12;
        operator delete(v10);
      }
      operator delete(v7);
      v7 = v11;
    }
    while (v11);
  }
LABEL_10:
  v8 = __p[0];
  __p[0] = 0;
  if (v8)
    operator delete(v8);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B28104(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, _QWORD *a11)
{
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v12 = a11;
  if (a11)
  {
    do
    {
      v14 = (_QWORD *)*v12;
      v15 = v12[3];
      if (v15)
      {
        v16 = v12[4];
        v13 = (void *)v12[3];
        if (v16 != v15)
        {
          do
          {
            if (*(char *)(v16 - 1) < 0)
              operator delete(*(void **)(v16 - 24));
            v16 -= 24;
          }
          while (v16 != v15);
          v13 = (void *)v12[3];
        }
        v12[4] = v15;
        operator delete(v13);
      }
      operator delete(v12);
      v12 = v14;
    }
    while (v14);
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239B28188(uint64_t *a1, uint64_t *a2, int a3)
{
  int v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  void **v13;
  int v14;
  std::string *v15;
  std::string *v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  BOOL v26;
  uint64_t *v27;
  char i;
  unsigned int v29;
  int v30;
  int v31;
  void **v32;
  int j;
  unsigned int v34;
  int v35;
  uint64_t *v36;
  std::string *v37;
  std::string *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *__p;
  std::string *v48;
  uint64_t v49[2];
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char v53;
  _BYTE v54[152];
  unint64_t v55;
  std::string v56;

  if (a3)
  {
    v4 = std::istream::get();
    v5 = sub_2396162D4((uint64_t)a2, v4);
    if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      v6 = 1;
    else
      v6 = v5 == 0;
    if (!v6)
    {
      v7 = 0;
      v41 = v5;
      v8 = *MEMORY[0x24BEDB7F0];
      v9 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v43 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v10 = MEMORY[0x24BEDB848] + 16;
      do
      {
        memset(&v56, 0, sizeof(v56));
        v11 = std::istream::get();
        v12 = sub_2396162D4((uint64_t)a2, v11);
        if (v12)
        {
          std::string::resize(&v56, v12, 0);
          std::istream::read();
        }
        else if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
        {
          *v56.__r_.__value_.__l.__data_ = 0;
          v56.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v56.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v56.__r_.__value_.__s + 23) = 0;
        }
        v55 = 0;
        sub_239593804((uint64_t)v49, (uint64_t)&v56, 24);
        MEMORY[0x23B83DD1C](v49, &v55);
        sub_2396F2654(&__p);
        sub_239B27B90(&__p, a2, 1);
        v13 = (void **)(sub_239A9A10C(*a1, v55, &v55) + 3);
        if (v13 != &__p)
          sub_239A70694((uint64_t)v13, (std::string *)__p, v48, 0xAAAAAAAAAAAAAAABLL * (((char *)v48 - (_BYTE *)__p) >> 3));
        v14 = *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32);
        v15 = (std::string *)__p;
        if (__p)
        {
          v16 = v48;
          v17 = __p;
          if (v48 != __p)
          {
            do
            {
              if (SHIBYTE(v16[-1].__r_.__value_.__r.__words[2]) < 0)
                operator delete(v16[-1].__r_.__value_.__l.__data_);
              --v16;
            }
            while (v16 != v15);
            v17 = __p;
          }
          v48 = v15;
          operator delete(v17);
        }
        v49[0] = v8;
        *(uint64_t *)((char *)v49 + *(_QWORD *)(v8 - 24)) = v43;
        v50 = v9;
        v51 = v10;
        if (v53 < 0)
          operator delete(v52);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v54);
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v56.__r_.__value_.__l.__data_);
        if (v14)
          break;
        ++v7;
      }
      while (v7 != v41);
    }
  }
  else
  {
    v18 = a2 + 4;
    v19 = MEMORY[0x24BDAC740];
    while (1)
    {
      v20 = std::istream::peek();
      v21 = v20 <= 0x7F ? *(_DWORD *)(v19 + 4 * v20 + 60) & 0x4000 : __maskrune(v20, 0x4000uLL);
      v22 = *(_QWORD *)(*a2 - 24);
      if (!v21)
        break;
      if (!*(_DWORD *)((char *)v18 + v22))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v22 + 32) & 2) == 0)
    {
      v55 = 0;
      memset(&v56, 0, sizeof(v56));
      if (std::istream::get() == 123)
      {
        while (1)
        {
          v23 = std::istream::peek();
          v24 = v23 <= 0x7F ? *(_DWORD *)(v19 + 4 * v23 + 60) & 0x4000 : __maskrune(v23, 0x4000uLL);
          v25 = *(_QWORD *)(*a2 - 24);
          if (!v24)
            break;
          if (!*(_DWORD *)((char *)v18 + v25))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v25 + 32) & 2) == 0)
        {
          v26 = std::istream::peek() == 125;
          v27 = &v50;
          v44 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          v45 = *MEMORY[0x24BEDB7F0];
          v42 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          v40 = MEMORY[0x24BEDB848] + 16;
          while ((*((_BYTE *)v18 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && !v26)
          {
            if (!sub_239595A48((uint64_t)&v56, a2))
              goto LABEL_94;
            sub_2395EDF80((uint64_t)&v55, (uint64_t)&v56);
            for (i = std::istream::peek();
                  i != 58 && !*(_DWORD *)((char *)v18 + *(_QWORD *)(*a2 - 24));
                  i = std::istream::peek())
            {
              std::istream::get();
            }
            if (*(_DWORD *)((char *)v18 + *(_QWORD *)(*a2 - 24)))
              goto LABEL_94;
LABEL_55:
            std::istream::get();
            while (1)
            {
              v29 = std::istream::peek();
              v30 = v29 <= 0x7F ? *(_DWORD *)(v19 + 4 * v29 + 60) & 0x4000 : __maskrune(v29, 0x4000uLL);
              v31 = *(_DWORD *)((char *)v18 + *(_QWORD *)(*a2 - 24));
              if (!v30)
                break;
              if (!v31)
                goto LABEL_55;
            }
            if ((v31 & 2) == 0)
            {
              sub_2394988CC((uint64_t)v49);
              if (sub_239596128(a2))
              {
                sub_2396F2654(&__p);
                sub_239B27B90(&__p, v49, 0);
                v32 = (void **)(sub_239A9A10C(*a1, v55, &v55) + 3);
                if (v32 != &__p)
                  sub_239A70694((uint64_t)v32, (std::string *)__p, v48, 0xAAAAAAAAAAAAAAABLL * (((char *)v48 - (_BYTE *)__p) >> 3));
                for (j = std::istream::peek(); ; j = std::istream::peek())
                {
                  v34 = j << 24;
                  if (j << 24 == 738197504)
                    goto LABEL_77;
                  if (v34 == 2097152000)
                  {
                    v26 = 1;
LABEL_79:
                    v36 = v27;
                    v35 = 0;
                    v37 = (std::string *)__p;
                    if (!__p)
                      goto LABEL_87;
                    goto LABEL_80;
                  }
                  if (v34 <= 0x7F000000)
                  {
                    if ((*(_DWORD *)(v19 + 4 * (char)j + 60) & 0x4000) == 0)
                      break;
                  }
                  else if (!__maskrune((char)j, 0x4000uLL))
                  {
                    break;
                  }
                  if ((*((_BYTE *)v18 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                    break;
                  std::istream::get();
                }
                if (v34 == 738197504)
                {
LABEL_77:
                  std::istream::get();
                  v26 = 0;
                  goto LABEL_79;
                }
                v36 = v27;
                v26 = 0;
                v35 = 1;
                v37 = (std::string *)__p;
                if (!__p)
                  goto LABEL_87;
LABEL_80:
                v38 = v48;
                v39 = v37;
                if (v48 != v37)
                {
                  do
                  {
                    if (SHIBYTE(v38[-1].__r_.__value_.__r.__words[2]) < 0)
                      operator delete(v38[-1].__r_.__value_.__l.__data_);
                    --v38;
                  }
                  while (v38 != v37);
                  v39 = __p;
                }
                v48 = v37;
                operator delete(v39);
LABEL_87:
                v27 = v36;
              }
              else
              {
                v26 = 0;
                v35 = 1;
              }
              v49[0] = v45;
              *(uint64_t *)((char *)v49 + *(_QWORD *)(v45 - 24)) = v44;
              v50 = v42;
              v51 = v40;
              if (v53 < 0)
                operator delete(v52);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x23B83E250](v54);
              if (!v35)
                continue;
            }
            goto LABEL_94;
          }
          if (sub_2395959B4(a2))
            std::istream::get();
        }
      }
LABEL_94:
      if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v56.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239B28800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char a21)
{
  uint64_t v21;

  if (*(char *)(v21 - 89) < 0)
    operator delete(*(void **)(v21 - 112));
  _Unwind_Resume(exception_object);
}

void sub_239B2886C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B28890(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v3;
  void *__p[2];
  char v8;

  v3 = *(_QWORD *)(a1 + 8);
  if (!*(_BYTE *)(v3 + 24))
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_2396F2838((uint64_t *)v3, (uint64_t)__p);
  sub_2395955F0((uint64_t)__p, (uint64_t)a2, a3);
  if (v8 < 0)
    operator delete(__p[0]);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239B2892C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_239B28948(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v5;
  std::string *v6;
  std::string *v7;
  void *v8;
  void *__p;
  std::string *v11;

  v5 = *(_QWORD *)(a1 + 8);
  sub_2396F2654(&__p);
  sub_239B27B90(&__p, a2, a3);
  if (!*(_BYTE *)(v5 + 24))
  {
    *(_QWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = 0;
    *(_QWORD *)(v5 + 16) = 0;
    sub_239490944((char *)v5, (uint64_t)__p, (uint64_t)v11, 0xAAAAAAAAAAAAAAABLL * (((char *)v11 - (_BYTE *)__p) >> 3));
    *(_BYTE *)(v5 + 24) = 1;
    v6 = (std::string *)__p;
    if (!__p)
      return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
    goto LABEL_7;
  }
  if (&__p != (void **)v5)
    sub_239A70694(v5, (std::string *)__p, v11, 0xAAAAAAAAAAAAAAABLL * (((char *)v11 - (_BYTE *)__p) >> 3));
  v6 = (std::string *)__p;
  if (__p)
  {
LABEL_7:
    v7 = v11;
    v8 = v6;
    if (v11 != v6)
    {
      do
      {
        if (SHIBYTE(v7[-1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v7[-1].__r_.__value_.__l.__data_);
        --v7;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v11 = v6;
    operator delete(v8);
  }
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B28A68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, void **a11)
{
  void **v12;
  void **v13;

  if (__p)
  {
    v12 = a11;
    v13 = __p;
    if (a11 != __p)
    {
      do
      {
        if (*((char *)v12 - 1) < 0)
          operator delete(*(v12 - 3));
        v12 -= 3;
      }
      while (v12 != __p);
      v13 = __p;
    }
    operator delete(v13);
  }
  _Unwind_Resume(exception_object);
}

void sub_239B28AC0(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239B28AE4(uint64_t a1, _QWORD *a2, int a3)
{
  sub_2395E3808(*(_QWORD *)(a1 + 8), (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239B28B20(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5[2];

  v5[0] = *(_QWORD *)(a1 + 8);
  v5[1] = 0;
  sub_2395E38A8(v5, a2, a3);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239B28B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  task_name_t *v7;
  kern_return_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int8x8_t v14;
  uint8x8_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t **v18;
  uint64_t *v19;
  uint64_t v20;
  void **v21;
  int8x8_t v22;
  uint8x8_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  kern_return_t v32;
  unint64_t v33;
  int v34;
  uint64_t **v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void **v40;
  int8x8_t v41;
  uint64_t **v42;
  uint64_t *v43;
  uint8x8_t v44;
  uint64_t v45;
  uint64_t v46;
  void **v47;
  int8x8_t v48;
  uint8x8_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t **v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void **v57;
  int8x8_t v58;
  uint8x8_t v59;
  uint64_t v60;
  uint64_t **v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void **v66;
  uint64_t v67;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[4];
  uint64_t v70;
  uint64_t v71;

  v4 = MEMORY[0x23B83DBFC](a2 + 512, "CorePhotogrammetry");
  *(_QWORD *)(a2 + 536) = 0x3900000002;
  *(_DWORD *)(a2 + 544) = 0;
  switch(*(_DWORD *)(a1 + 24))
  {
    case 0:
      *(_DWORD *)a2 = 1063675494;
      *(_QWORD *)(a2 + 4) = 0xC350000061A8;
      *(_QWORD *)(a2 + 28) = 0x240800000;
      *(_QWORD *)(a2 + 56) = 0x100000800;
      *(_BYTE *)(a2 + 64) = 1;
      *(_BYTE *)(a2 + 104) = 1;
      *(_BYTE *)(a2 + 144) = 0;
      *(_BYTE *)(a2 + 184) = 1;
      goto LABEL_150;
    case 1:
      *(_DWORD *)a2 = 1063675494;
      *(_QWORD *)(a2 + 4) = 429496729650000;
      *(_QWORD *)(a2 + 28) = 0x240C00000;
      v5 = 0x100001000;
      goto LABEL_13;
    case 2:
      *(_DWORD *)a2 = 1061997773;
      *(_QWORD *)(a2 + 4) = 1073741824100000;
      *(_QWORD *)(a2 + 28) = 0x241000000;
      *(_QWORD *)(a2 + 56) = 0x100002000;
      *(_BYTE *)(a2 + 64) = 1;
      *(_BYTE *)(a2 + 104) = 1;
      *(_BYTE *)(a2 + 144) = 0;
      *(_BYTE *)(a2 + 184) = 1;
      *(_BYTE *)(a2 + 224) = 1;
      *(_BYTE *)(a2 + 264) = 1;
      goto LABEL_152;
    case 3:
      *(_DWORD *)a2 = 0;
      *(_DWORD *)(a2 + 8) = 25000;
      *(_QWORD *)(a2 + 28) = 0x240000000;
      *(_QWORD *)(a2 + 56) = 0x100000400;
      goto LABEL_149;
    case 4:
      *(_DWORD *)a2 = 0;
      v6 = MEMORY[0x23B83EE44](v4);
      task_info_outCnt = 93;
      v7 = (task_name_t *)MEMORY[0x24BDAEC58];
      v8 = task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt);
      v9 = v71 + v6;
      if (v8)
        v9 = 0;
      if (v9 <= 0xEC8E51AFFLL)
      {
        if (v9 <= 0x9502F8FF)
          v26 = 3000000;
        else
          v26 = 5000000;
        if (v9 <= 0xD09DC2FF)
          v27 = v26;
        else
          v27 = 8000000;
        if (v9 <= 0x147D356FFLL)
          v28 = v27;
        else
          v28 = 15000000;
        if (v9 <= 0x1BF08EAFFLL)
          v29 = v28;
        else
          v29 = 25000000;
        if (v9 <= 0x39BDF3AFFLL)
          v30 = v29;
        else
          v30 = 100000000;
        if (v9 <= 0x7558BDAFFLL)
          v10 = v30;
        else
          v10 = 200000000;
      }
      else
      {
        v10 = 400000000;
      }
      *(_DWORD *)(a2 + 8) = v10;
      *(_QWORD *)(a2 + 28) = 0x240000000;
      v31 = MEMORY[0x23B83EE44]();
      task_info_outCnt = 93;
      v32 = task_info(*v7, 0x16u, task_info_out, &task_info_outCnt);
      v33 = v71 + v31;
      if (v32)
        v33 = 0;
      if (v33 <= 0xEC8E51AFFLL)
      {
        if (v33 <= 0x1BF08EAFFLL)
        {
          if (v33 <= 0x147D356FFLL)
            v34 = 4;
          else
            v34 = 8;
        }
        else
        {
          v34 = 16;
        }
      }
      else
      {
        v34 = 32;
      }
      *(_DWORD *)(a2 + 56) = 0x2000;
      *(_DWORD *)(a2 + 60) = v34;
LABEL_149:
      *(_BYTE *)(a2 + 64) = 1;
      *(_BYTE *)(a2 + 104) = 0;
      *(_BYTE *)(a2 + 144) = 0;
      *(_BYTE *)(a2 + 184) = 0;
LABEL_150:
      *(_BYTE *)(a2 + 224) = 0;
      goto LABEL_151;
    case 5:
      *(_DWORD *)a2 = 1063675494;
      v11 = 0xC350000061A8;
      goto LABEL_12;
    case 6:
      *(_DWORD *)a2 = 1063675494;
      v11 = 429496729650000;
LABEL_12:
      *(_QWORD *)(a2 + 4) = v11;
      *(_QWORD *)(a2 + 28) = 0x240800000;
      v5 = 0x100000800;
LABEL_13:
      *(_QWORD *)(a2 + 56) = v5;
      *(_BYTE *)(a2 + 64) = 1;
      *(_BYTE *)(a2 + 104) = 1;
      *(_BYTE *)(a2 + 144) = 0;
      *(_BYTE *)(a2 + 184) = 1;
      *(_BYTE *)(a2 + 224) = 0;
      MEMORY[0x23B83DBFC](a2 + 232, "exr");
LABEL_151:
      *(_BYTE *)(a2 + 264) = 0;
      goto LABEL_152;
    case 7:
      goto LABEL_152;
    case 8:
      if (!*(_BYTE *)(a1 + 88))
      {
        v67 = 132;
LABEL_155:
        sub_239A444D4((uint64_t)"unknown file", v67, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      *(_DWORD *)a2 = 0;
      v12 = *(_QWORD *)(a1 + 32);
      LODWORD(v13) = 128;
      if (v12 < 0x80)
        v13 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(a2 + 4) = v13;
      *(_DWORD *)(a2 + 8) = v12;
      *(_QWORD *)(a2 + 28) = 0x240C00000;
      *(_DWORD *)(a2 + 60) = 1;
      *(_DWORD *)(a2 + 56) = *(_QWORD *)(a1 + 40);
      *(_BYTE *)(a2 + 144) = 0;
      v14 = *(int8x8_t *)(a1 + 56);
      if (!*(_QWORD *)&v14)
        goto LABEL_102;
      v15 = (uint8x8_t)vcnt_s8(v14);
      v15.i16[0] = vaddlv_u8(v15);
      v16 = (v14.i8[0] & 1) == 0;
      v17 = *(_QWORD *)&v14 - 1;
      if (v15.u32[0] >= 2uLL)
        v16 = *(_QWORD *)&v14 != 1;
      v18 = *(uint64_t ***)(*(_QWORD *)(a1 + 48) + 8 * v16);
      if (!v18)
        goto LABEL_102;
      v19 = *v18;
      if (!*v18)
        goto LABEL_102;
      if (v15.u32[0] < 2uLL)
      {
        while (1)
        {
          v20 = v19[1];
          if (v20 == 1)
          {
            if (*((_DWORD *)v19 + 4) == 1)
              goto LABEL_28;
          }
          else if ((v20 & v17) != v16)
          {
            goto LABEL_102;
          }
          v19 = (uint64_t *)*v19;
          if (!v19)
            goto LABEL_102;
        }
      }
      break;
    default:
      v67 = 186;
      goto LABEL_155;
  }
  while (1)
  {
    v25 = v19[1];
    if (v25 == 1)
      break;
    if (v25 >= *(_QWORD *)&v14)
      v25 %= *(_QWORD *)&v14;
    if (v25 != v16)
      goto LABEL_102;
LABEL_34:
    v19 = (uint64_t *)*v19;
    if (!v19)
      goto LABEL_102;
  }
  if (*((_DWORD *)v19 + 4) != 1)
    goto LABEL_34;
LABEL_28:
  *(_BYTE *)(a2 + 64) = *((_DWORD *)v19 + 5) == 1;
  sub_239A50878(task_info_out, *((_DWORD *)v19 + 6));
  v21 = (void **)(a2 + 72);
  if (*(char *)(a2 + 95) < 0)
    operator delete(*v21);
  *(_OWORD *)v21 = *(_OWORD *)task_info_out;
  *(_QWORD *)(a2 + 88) = v70;
  *(_DWORD *)(a2 + 96) = *((_DWORD *)v19 + 7);
  v22 = *(int8x8_t *)(a1 + 56);
  if (!*(_QWORD *)&v22)
    goto LABEL_102;
  v23 = (uint8x8_t)vcnt_s8(v22);
  v23.i16[0] = vaddlv_u8(v23);
  if (v23.u32[0] > 1uLL)
  {
    v24 = 2;
    if (*(_QWORD *)&v22 <= 2uLL)
      v24 = 2u % *(_QWORD *)(a1 + 56);
  }
  else
  {
    v24 = (v22.i8[0] - 1) & 2;
  }
  v35 = *(uint64_t ***)(*(_QWORD *)(a1 + 48) + 8 * v24);
  if (!v35)
    goto LABEL_102;
  v36 = *v35;
  if (!*v35)
    goto LABEL_102;
  if (v23.u32[0] < 2uLL)
  {
    v37 = *(_QWORD *)&v22 - 1;
    while (1)
    {
      v39 = v36[1];
      if (v39 == 2)
      {
        if (*((_DWORD *)v36 + 4) == 2)
          goto LABEL_81;
      }
      else if ((v39 & v37) != v24)
      {
        goto LABEL_102;
      }
      v36 = (uint64_t *)*v36;
      if (!v36)
        goto LABEL_102;
    }
  }
  while (2)
  {
    v38 = v36[1];
    if (v38 != 2)
    {
      if (v38 >= *(_QWORD *)&v22)
        v38 %= *(_QWORD *)&v22;
      if (v38 != v24)
        goto LABEL_102;
      goto LABEL_71;
    }
    if (*((_DWORD *)v36 + 4) != 2)
    {
LABEL_71:
      v36 = (uint64_t *)*v36;
      if (!v36)
        goto LABEL_102;
      continue;
    }
    break;
  }
LABEL_81:
  *(_BYTE *)(a2 + 104) = *((_DWORD *)v36 + 5) == 1;
  sub_239A50878(task_info_out, *((_DWORD *)v36 + 6));
  v40 = (void **)(a2 + 112);
  if (*(char *)(a2 + 135) < 0)
    operator delete(*v40);
  *(_OWORD *)v40 = *(_OWORD *)task_info_out;
  *(_QWORD *)(a2 + 128) = v70;
  *(_DWORD *)(a2 + 136) = *((_DWORD *)v36 + 7);
  v41 = *(int8x8_t *)(a1 + 56);
  if (!*(_QWORD *)&v41)
    goto LABEL_102;
  v42 = **(uint64_t ****)(a1 + 48);
  if (!v42)
    goto LABEL_102;
  v43 = *v42;
  if (!*v42)
    goto LABEL_102;
  v44 = (uint8x8_t)vcnt_s8(v41);
  v44.i16[0] = vaddlv_u8(v44);
  if (v44.u32[0] < 2uLL)
  {
    v45 = *(_QWORD *)&v41 - 1;
    while (1)
    {
      v46 = v43[1];
      if (v46)
      {
        if ((v46 & v45) != 0)
          goto LABEL_102;
      }
      else if (!*((_DWORD *)v43 + 4))
      {
        goto LABEL_92;
      }
      v43 = (uint64_t *)*v43;
      if (!v43)
        goto LABEL_102;
    }
  }
  while (1)
  {
    v51 = v43[1];
    if (!v51)
      break;
    if (v51 < *(_QWORD *)&v41 || v51 % *(_QWORD *)&v41)
      goto LABEL_102;
LABEL_98:
    v43 = (uint64_t *)*v43;
    if (!v43)
      goto LABEL_102;
  }
  if (*((_DWORD *)v43 + 4))
    goto LABEL_98;
LABEL_92:
  *(_BYTE *)(a2 + 184) = *((_DWORD *)v43 + 5) == 1;
  sub_239A50878(task_info_out, *((_DWORD *)v43 + 6));
  v47 = (void **)(a2 + 192);
  if (*(char *)(a2 + 215) < 0)
    operator delete(*v47);
  *(_OWORD *)v47 = *(_OWORD *)task_info_out;
  *(_QWORD *)(a2 + 208) = v70;
  *(_DWORD *)(a2 + 216) = *((_DWORD *)v43 + 7);
  v48 = *(int8x8_t *)(a1 + 56);
  if (!*(_QWORD *)&v48)
    goto LABEL_102;
  v49 = (uint8x8_t)vcnt_s8(v48);
  v49.i16[0] = vaddlv_u8(v49);
  if (v49.u32[0] > 1uLL)
  {
    v50 = 4;
    if (*(_QWORD *)&v48 <= 4uLL)
      v50 = 4u % *(_QWORD *)(a1 + 56);
  }
  else
  {
    v50 = (v48.i8[0] - 1) & 4;
  }
  v52 = *(uint64_t ***)(*(_QWORD *)(a1 + 48) + 8 * v50);
  if (!v52 || (v53 = *v52) == 0)
LABEL_102:
    sub_23941D898("unordered_map::at: key not found");
  if (v49.u32[0] < 2uLL)
  {
    v54 = *(_QWORD *)&v48 - 1;
    while (1)
    {
      v56 = v53[1];
      if (v56 == 4)
      {
        if (*((_DWORD *)v53 + 4) == 4)
          goto LABEL_120;
      }
      else if ((v56 & v54) != v50)
      {
        goto LABEL_102;
      }
      v53 = (uint64_t *)*v53;
      if (!v53)
        goto LABEL_102;
    }
  }
  while (1)
  {
    v55 = v53[1];
    if (v55 == 4)
      break;
    if (v55 >= *(_QWORD *)&v48)
      v55 %= *(_QWORD *)&v48;
    if (v55 != v50)
      goto LABEL_102;
LABEL_110:
    v53 = (uint64_t *)*v53;
    if (!v53)
      goto LABEL_102;
  }
  if (*((_DWORD *)v53 + 4) != 4)
    goto LABEL_110;
LABEL_120:
  *(_BYTE *)(a2 + 224) = *((_DWORD *)v53 + 5) == 1;
  sub_239A50878(task_info_out, *((_DWORD *)v53 + 6));
  v57 = (void **)(a2 + 232);
  if (*(char *)(a2 + 255) < 0)
    operator delete(*v57);
  *(_OWORD *)v57 = *(_OWORD *)task_info_out;
  *(_QWORD *)(a2 + 248) = v70;
  *(_DWORD *)(a2 + 256) = *((_DWORD *)v53 + 7);
  v58 = *(int8x8_t *)(a1 + 56);
  if (!*(_QWORD *)&v58)
    goto LABEL_102;
  v59 = (uint8x8_t)vcnt_s8(v58);
  v59.i16[0] = vaddlv_u8(v59);
  if (v59.u32[0] > 1uLL)
  {
    v60 = 3;
    if (*(_QWORD *)&v58 <= 3uLL)
      v60 = 3u % *(_QWORD *)(a1 + 56);
  }
  else
  {
    v60 = (v58.i8[0] - 1) & 3;
  }
  v61 = *(uint64_t ***)(*(_QWORD *)(a1 + 48) + 8 * v60);
  if (!v61)
    goto LABEL_102;
  v62 = *v61;
  if (!*v61)
    goto LABEL_102;
  if (v59.u32[0] < 2uLL)
  {
    v63 = *(_QWORD *)&v58 - 1;
    while (1)
    {
      v65 = v62[1];
      if (v65 == 3)
      {
        if (*((_DWORD *)v62 + 4) == 3)
          goto LABEL_142;
      }
      else if ((v65 & v63) != v60)
      {
        goto LABEL_102;
      }
      v62 = (uint64_t *)*v62;
      if (!v62)
        goto LABEL_102;
    }
  }
  while (1)
  {
    v64 = v62[1];
    if (v64 == 3)
      break;
    if (v64 >= *(_QWORD *)&v58)
      v64 %= *(_QWORD *)&v58;
    if (v64 != v60)
      goto LABEL_102;
LABEL_132:
    v62 = (uint64_t *)*v62;
    if (!v62)
      goto LABEL_102;
  }
  if (*((_DWORD *)v62 + 4) != 3)
    goto LABEL_132;
LABEL_142:
  *(_BYTE *)(a2 + 264) = *((_DWORD *)v62 + 5) == 1;
  sub_239A50878(task_info_out, *((_DWORD *)v62 + 6));
  v66 = (void **)(a2 + 272);
  if (*(char *)(a2 + 295) < 0)
    operator delete(*v66);
  *(_OWORD *)v66 = *(_OWORD *)task_info_out;
  *(_QWORD *)(a2 + 288) = v70;
  *(_DWORD *)(a2 + 296) = *((_DWORD *)v62 + 7);
LABEL_152:
  *(_BYTE *)(a2 + 552) = *(_BYTE *)(a1 + 144);
}

_QWORD *sub_239B294D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __n128 v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  __int16 v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  __int16 v38;
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  __n128 v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  _QWORD v50[3];
  uint64_t (**v51)();
  __int128 v52;
  _BYTE v53[30];
  uint64_t (**v54)();
  __int128 v55;
  _BYTE v56[30];
  uint64_t v57;
  int v58;
  uint64_t v59;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v50[0] = &off_250AE94F0;
  v50[1] = v4;
  v50[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_239785B2C((uint64_t)v50, (uint64_t)&v54);
  v51 = &off_250ADB1D0;
  v7 = v55;
  v55 = 0uLL;
  v52 = v7;
  *(_OWORD *)v53 = *(_OWORD *)v56;
  *(_OWORD *)&v53[14] = *(_OWORD *)&v56[14];
  v8 = nullsub_4(v56);
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v55 + 1);
  if (*((_QWORD *)&v55 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v55 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v9->__on_zero_shared)(v9, v8);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v54);
  v12 = operator new(0x58uLL);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = &off_250ADC4A8;
  v54 = &off_250ADB210;
  v13 = v52;
  if (*((_QWORD *)&v52 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v52 + 1) + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
    v16 = *(_QWORD *)&v53[16];
    v17 = *(_DWORD *)&v53[24];
    v18 = *(_WORD *)&v53[28];
    do
      v19 = __ldxr(v14);
    while (__stxr(v19 + 1, v14));
  }
  else
  {
    v16 = *(_QWORD *)&v53[16];
    v17 = *(_DWORD *)&v53[24];
    v18 = *(_WORD *)&v53[28];
  }
  v55 = v13;
  *(_QWORD *)v56 = *(_QWORD *)v53;
  *(_DWORD *)&v56[8] = *(_DWORD *)&v53[8];
  *(_QWORD *)&v56[16] = v16;
  *(_DWORD *)&v56[24] = v17;
  *(_WORD *)&v56[28] = v18;
  if (*((_QWORD *)&v13 + 1))
  {
    v20 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v13 + 1) + 16))(*((_QWORD *)&v13 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v13 + 1));
    }
  }
  v12[3] = &off_250ADB778;
  if ((_QWORD)v55)
  {
    v22 = (std::__shared_weak_count *)*((_QWORD *)&v55 + 1);
    if (*((_QWORD *)&v55 + 1))
    {
      v23 = (unint64_t *)(*((_QWORD *)&v55 + 1) + 8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 1, v23));
      do
        v25 = __ldaxr(v23);
      while (__stlxr(v25 - 1, v23));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
      v27 = (std::__shared_weak_count *)*((_QWORD *)&v55 + 1);
      v26 = v55;
      if (*((_QWORD *)&v55 + 1))
      {
        v28 = (unint64_t *)(*((_QWORD *)&v55 + 1) + 8);
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }
    else
    {
      v26 = v55;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v26 + 32))(&v59, v26);
    v31 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v59 + 48))(v59);
    v32 = v59;
    if (v59)
    {
      v33 = (_QWORD *)operator new();
      v34 = v59;
      *v33 = &off_250ADB740;
      v33[1] = 0;
      v33[2] = 0;
      v33[3] = v34;
    }
    else
    {
      v33 = 0;
    }
    v59 = 0;
    v57 = *(_QWORD *)v56;
    v35 = *(_QWORD *)v56;
    v58 = *(_DWORD *)&v56[8];
    v36 = *(_DWORD *)&v56[8];
    v37 = *(_DWORD *)&v56[24];
    v38 = *(_WORD *)&v56[28];
    v12[4] = v32;
    v12[5] = v33;
    v12[6] = 0;
    v12[7] = v35;
    *((_DWORD *)v12 + 16) = v36;
    v12[9] = v31;
    *((_DWORD *)v12 + 20) = v37;
    *((_WORD *)v12 + 42) = v38;
    v39 = nullsub_4(&v57);
    v40 = v59;
    v59 = 0;
    if (v40)
      (*(void (**)(uint64_t, __n128))(*(_QWORD *)v40 + 8))(v40, v39);
  }
  else
  {
    sub_23982895C((uint64_t)&v54);
  }
  v41 = nullsub_4(v56);
  v42 = (std::__shared_weak_count *)*((_QWORD *)&v55 + 1);
  if (*((_QWORD *)&v55 + 1))
  {
    v43 = (unint64_t *)(*((_QWORD *)&v55 + 1) + 8);
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v42->__on_zero_shared)(v42, v41);
      std::__shared_weak_count::__release_weak(v42);
    }
  }
  nullsub_4(&v54);
  *a2 = v12 + 3;
  a2[1] = v12;
  v45 = nullsub_4(v53);
  v46 = (std::__shared_weak_count *)*((_QWORD *)&v52 + 1);
  if (*((_QWORD *)&v52 + 1))
  {
    v47 = (unint64_t *)(*((_QWORD *)&v52 + 1) + 8);
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v46->__on_zero_shared)(v46, v45);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
  nullsub_4(&v51);
  return sub_23979BCF4(v50);
}

void sub_239B298A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  std::__shared_weak_count *v19;
  uint64_t v20;
  void *v22;

  j_nullsub_4_89(v20);
  sub_239416FF8((uint64_t)&a19);
  std::__shared_weak_count::~__shared_weak_count(v19);
  operator delete(v22);
  sub_239416D30((uint64_t)&a12);
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B29910(_QWORD *a1)
{
  *a1 = off_250AF5830;
  sub_23979BCF4(a1 + 1);
  return a1;
}

void sub_239B29940(_QWORD *a1)
{
  *a1 = off_250AF5830;
  sub_23979BCF4(a1 + 1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B29980@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 16);
  v2 = *(_QWORD *)(result + 24);
  *a2 = &off_250AE94F0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B299B8(_QWORD *a1)
{
  sub_239B299DC(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B299DC(_QWORD *a1)
{
  uint64_t v2;
  OpaqueVTPixelTransferSession *v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = &off_250AF5860;
  v2 = a1[2];
  a1[2] = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 8));
    v3 = *(OpaqueVTPixelTransferSession **)v2;
    *(_QWORD *)v2 = 0;
    if (v3)
      sub_239769318(v2, v3);
    MEMORY[0x23B83E31C](v2, 0x1020C40AF0ADC4FLL);
  }
  v4 = a1[1];
  a1[1] = 0;
  if (v4)
  {
    v5 = sub_23956EEB4(v4);
    MEMORY[0x23B83E31C](v5, 0x10F2C40BC6AFE3ALL);
  }
  return a1;
}

void sub_239B29A70(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a2 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
}

void sub_239B29AC8(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a2 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
}

void sub_239B29B20(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF58B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B29B30(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF58B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B29B60(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

unsigned __int8 *sub_239B29B70(unsigned __int8 *a1, double a2, double a3, int16x8_t a4, double a5, int16x8_t a6)
{
  unsigned __int8 v6;
  __int32 v7;
  int16x8_t v8;
  int16x8_t v9;
  int32x4_t v10;
  int8x16_t v11;
  int32x4_t v12;
  int16x8_t v13;
  int32x4_t v14;
  int8x16_t v15;
  int16x8_t v16;
  int8x16_t v17;

  v6 = *a1;
  v7 = a1[10];
  a4.i32[0] = *a1;
  v8 = a4;
  v8.i8[1] = a1[9];
  v9 = a4;
  v9.i8[1] = a1[25];
  a6.i32[0] = a1[26];
  a6.i8[4] = a1[27];
  *(__int16 *)((char *)a6.i16 + 1) = a6.u8[4];
  v10 = (int32x4_t)vzip1q_s16(v9, a6);
  a6.i32[0] = *((_DWORD *)a1 + 7);
  v11 = (int8x16_t)vzip1q_s32(v10, (int32x4_t)a6);
  a6.i64[0] = *(_QWORD *)(a1 + 17);
  a6.i8[8] = *a1;
  a6.i8[15] = a1[32];
  v12 = (int32x4_t)vqtbl1q_s8((int8x16_t)a6, (int8x16_t)xmmword_239EC65D0);
  v13 = (int16x8_t)veorq_s8(vqtbl1q_s8(v11, (int8x16_t)xmmword_239EC65C0), (int8x16_t)v12);
  *(int16x8_t *)(a1 + 17) = v13;
  *(__int16 *)((char *)a4.i16 + 1) = a1[41];
  v13.i32[0] = a1[42];
  v13.i8[4] = a1[43];
  v12.i32[0] = *((_DWORD *)a1 + 3);
  *(__int16 *)((char *)v13.i16 + 1) = v13.u8[4];
  v14 = (int32x4_t)vzip1q_s16(a4, v13);
  v13.i32[0] = *((_DWORD *)a1 + 11);
  v15 = (int8x16_t)vzip1q_s32(v14, (int32x4_t)v13);
  v13.i64[0] = *(_QWORD *)(a1 + 33);
  v13.i8[8] = v6;
  v13.i8[15] = a1[48];
  v16 = (int16x8_t)vqtbl1q_s8((int8x16_t)v13, (int8x16_t)xmmword_239EC65D0);
  v17 = veorq_s8(vqtbl1q_s8(v15, (int8x16_t)xmmword_239EC65C0), (int8x16_t)v16);
  *(int8x16_t *)(a1 + 33) = v17;
  a1[49] ^= v6;
  v17.i64[0] = *(_QWORD *)(a1 + 1);
  a1[50] ^= v6;
  v16.i32[0] = v7;
  v16.i8[4] = a1[11];
  v16.i8[1] = v16.i8[4];
  a1[51] = 0;
  v17.i8[8] = v6;
  v17.i8[15] = a1[16];
  *(int8x16_t *)(a1 + 1) = veorq_s8(vqtbl1q_s8((int8x16_t)vzip1q_s32((int32x4_t)vzip1q_s16(v8, v16), v12), (int8x16_t)xmmword_239EC65C0), vqtbl1q_s8(v17, (int8x16_t)xmmword_239EC65D0));
  return a1 + 1;
}

unsigned __int8 *sub_239B29C90(unsigned __int8 *a1, double a2, double a3, double a4, int16x8_t a5, double a6, int16x8_t a7)
{
  unsigned __int8 v7;
  __int32 v8;
  int16x8_t v9;
  int16x8_t v10;
  int32x4_t v11;
  int8x16_t v12;
  int32x4_t v13;
  int16x8_t v14;
  int32x4_t v15;
  int8x16_t v16;
  int16x8_t v17;
  int8x16_t v18;

  v7 = *a1;
  v8 = a1[10];
  a5.i32[0] = *a1;
  v9 = a5;
  v9.i8[1] = a1[9];
  v10 = a5;
  v10.i8[1] = a1[25];
  a7.i32[0] = a1[26];
  a7.i8[4] = a1[27];
  *(__int16 *)((char *)a7.i16 + 1) = a7.u8[4];
  v11 = (int32x4_t)vzip1q_s16(v10, a7);
  a7.i32[0] = *((_DWORD *)a1 + 7);
  v12 = (int8x16_t)vzip1q_s32(v11, (int32x4_t)a7);
  a7.i64[0] = *(_QWORD *)(a1 + 17);
  a7.i8[8] = *a1;
  a7.i8[15] = a1[32];
  v13 = (int32x4_t)vqtbl1q_s8((int8x16_t)a7, (int8x16_t)xmmword_239EC65D0);
  v14 = (int16x8_t)veorq_s8(vqtbl1q_s8(v12, (int8x16_t)xmmword_239EC65C0), (int8x16_t)v13);
  v13.i32[0] = *((_DWORD *)a1 + 3);
  *(int16x8_t *)(a1 + 17) = v14;
  *(__int16 *)((char *)a5.i16 + 1) = a1[41];
  v14.i32[0] = a1[42];
  v14.i8[4] = a1[43];
  *(__int16 *)((char *)v14.i16 + 1) = v14.u8[4];
  v15 = (int32x4_t)vzip1q_s16(a5, v14);
  v14.i32[0] = *((_DWORD *)a1 + 11);
  v16 = (int8x16_t)vzip1q_s32(v15, (int32x4_t)v14);
  v14.i64[0] = *(_QWORD *)(a1 + 33);
  v14.i8[8] = v7;
  v14.i8[15] = a1[48];
  v17 = (int16x8_t)vqtbl1q_s8((int8x16_t)v14, (int8x16_t)xmmword_239EC65D0);
  v18 = veorq_s8(vqtbl1q_s8(v16, (int8x16_t)xmmword_239EC65C0), (int8x16_t)v17);
  *(int8x16_t *)(a1 + 33) = v18;
  a1[49] ^= v7;
  a1[50] ^= v7;
  a1[51] ^= v7;
  a1[52] ^= v7;
  v18.i64[0] = *(_QWORD *)(a1 + 1);
  a1[53] ^= v7;
  v17.i32[0] = v8;
  v17.i8[4] = a1[11];
  v17.i8[1] = v17.i8[4];
  a1[54] = 0;
  v18.i8[8] = v7;
  v18.i8[15] = a1[16];
  *(int8x16_t *)(a1 + 1) = veorq_s8(vqtbl1q_s8((int8x16_t)vzip1q_s32((int32x4_t)vzip1q_s16(v9, v17), v13), (int8x16_t)xmmword_239EC65C0), vqtbl1q_s8(v18, (int8x16_t)xmmword_239EC65D0));
  return a1 + 1;
}

BOOL sub_239B29DD4(double a1, double a2, int16x8_t a3, double a4, int16x8_t a5)
{
  unsigned __int8 *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 v11;
  char v12;
  void *__dst[2];
  unint64_t v15;
  _OWORD v16[3];
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v16[0] = xmmword_239F109A5;
  v16[1] = *(_OWORD *)dbl_239F109B5;
  v16[2] = xmmword_239F109C5;
  v17 = 4075317;
  v5 = sub_239B29B70((unsigned __int8 *)v16, 2.63878232e-86, dbl_239F109B5[0], a3, a4, a5);
  v6 = strlen((const char *)v5);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v15 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v15) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = sub_2396287F4((uint64_t)__dst, 0, 0);
  if (SHIBYTE(v15) < 0)
    operator delete(__dst[0]);
  v12 = v11;
  if (v11 <= 0x100u)
    v12 = 0;
  return v12 != 0;
}

void sub_239B29F10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_239B29F38(double a1, double a2, double a3, int16x8_t a4, double a5, int16x8_t a6)
{
  unsigned __int8 *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  char v13;
  void *__dst[2];
  unint64_t v16;
  _OWORD v17[2];
  _BYTE v18[23];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v17[0] = xmmword_239F109D9;
  v17[1] = *(_OWORD *)dbl_239F109E9;
  *(_OWORD *)v18 = xmmword_239F109F9;
  strcpy(&v18[15], "w@wag~f");
  v6 = sub_239B29C90((unsigned __int8 *)v17, 1.45008663e267, dbl_239F109E9[0], a3, a4, a5, a6);
  v7 = strlen((const char *)v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    __dst[1] = v8;
    v16 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_8;
  }
  HIBYTE(v16) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = sub_2396287F4((uint64_t)__dst, 0, 0);
  if (SHIBYTE(v16) < 0)
    operator delete(__dst[0]);
  v13 = v12;
  if (v12 <= 0x100u)
    v13 = 0;
  return v13 != 0;
}

void sub_239B2A070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_239B2A098(int a1)
{
  __asm { BR              X10 }
}

BOOL sub_239B2A0C4()
{
  int v0;
  _OWORD *v1;
  _DWORD *v2;
  _DWORD *v3;
  _BOOL8 v4;

  v1 = operator new(0x1CuLL);
  v2 = (_DWORD *)v1 + 7;
  *v1 = xmmword_239F10AB0;
  *(_OWORD *)((char *)v1 + 12) = *(__int128 *)((char *)&xmmword_239F10AB0 + 12);
  v3 = v1;
  while (*v3 != v0)
  {
    if (++v3 == v2)
    {
      v3 = (_DWORD *)v1 + 7;
      break;
    }
  }
  v4 = v3 != v2;
  operator delete(v1);
  return v4;
}

_QWORD *sub_239B2A180(uint64_t a1, int a2)
{
  int v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  int v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  int v21;
  _QWORD *v22;
  uint64_t v23;
  int v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  int v28;
  int v29;
  _QWORD *v30;
  uint64_t v31;
  int v32;
  int v33;
  _QWORD *result;
  uint64_t v35;
  int v36;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  sub_239B2A098(a2);
  v5 = v4;
  v36 = 0;
  v6 = sub_239B2A3B0((float *)a1, 0, &v36);
  v7 = 2;
  if (!v5)
    v7 = 0;
  v6[3] = v7;
  sub_239B2A098(a2);
  v9 = v8;
  v36 = 1;
  v10 = sub_239B2A3B0((float *)a1, 1, &v36);
  v11 = 10;
  if (!v9)
    v11 = 0;
  v10[3] = v11;
  sub_239B2A098(a2);
  v13 = v12;
  v36 = 2;
  v14 = sub_239B2A3B0((float *)a1, 2, &v36);
  v15 = 66;
  if (!v13)
    v15 = 0;
  v14[3] = v15;
  sub_239B2A098(a2);
  v17 = v16;
  v36 = 3;
  v18 = sub_239B2A3B0((float *)a1, 3, &v36);
  v19 = 5;
  if (!v17)
    v19 = 0;
  v18[3] = v19;
  sub_239B2A098(a2);
  v21 = v20;
  v36 = 4;
  v22 = sub_239B2A3B0((float *)a1, 4, &v36);
  v23 = 98;
  if (!v21)
    v23 = 0;
  v22[3] = v23;
  sub_239B2A098(a2);
  v25 = v24;
  v36 = 5;
  v26 = sub_239B2A3B0((float *)a1, 5, &v36);
  v27 = 125;
  if (!v25)
    v27 = 0;
  v26[3] = v27;
  sub_239B2A098(a2);
  v29 = v28;
  v36 = 6;
  v30 = sub_239B2A3B0((float *)a1, 6, &v36);
  v31 = 25;
  if (!v29)
    v31 = 0;
  v30[3] = v31;
  sub_239B2A098(a2);
  v33 = v32;
  v36 = 7;
  result = sub_239B2A3B0((float *)a1, 7, &v36);
  v35 = 39;
  if (!v33)
    v35 = 0;
  result[3] = v35;
  return result;
}

void sub_239B2A37C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239420950(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B2A3B0(float *a1, int a2, _DWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t prime;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  size_t v24;
  size_t v25;
  size_t v26;
  _QWORD *i;
  size_t v28;
  uint64_t v29;
  unint64_t v30;
  uint8x8_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  size_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v40;

  v6 = a2;
  v7 = *((_QWORD *)a1 + 1);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (*((_DWORD *)v10 + 4) == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (*((_DWORD *)v10 + 4) == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v10 = operator new(0x20uLL);
  *v10 = 0;
  v10[1] = v6;
  *((_DWORD *)v10 + 4) = *a3;
  v10[3] = 0;
  v13 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v14 = a1[8];
  if (!v7 || (float)(v14 * (float)v7) < v13)
  {
    v15 = 1;
    if (v7 >= 3)
      v15 = (v7 & (v7 - 1)) != 0;
    v16 = v15 | (2 * v7);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      prime = v17;
    else
      prime = v16;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *((_QWORD *)a1 + 1);
    }
    if (prime <= v7)
    {
      if (prime >= v7)
        goto LABEL_59;
      v30 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v7 < 3 || (v31 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
      {
        v30 = std::__next_prime(v30);
      }
      else
      {
        v32 = 1 << -(char)__clz(v30 - 1);
        if (v30 >= 2)
          v30 = v32;
      }
      if (prime <= v30)
        prime = v30;
      if (prime >= v7)
      {
        v7 = *((_QWORD *)a1 + 1);
LABEL_59:
        if ((v7 & (v7 - 1)) != 0)
        {
          if (v7 <= v6)
            v3 = v6 % v7;
          else
            v3 = v6;
        }
        else
        {
          v3 = (v7 - 1) & v6;
        }
        goto LABEL_72;
      }
      if (!prime)
      {
        v40 = *(_QWORD **)a1;
        *(_QWORD *)a1 = 0;
        if (v40)
          operator delete(v40);
        v7 = 0;
        *((_QWORD *)a1 + 1) = 0;
        goto LABEL_59;
      }
    }
    if (prime >> 61)
      sub_239418A80();
    v19 = operator new(8 * prime);
    v20 = *(_QWORD **)a1;
    *(_QWORD *)a1 = v19;
    if (v20)
      operator delete(v20);
    v21 = 0;
    *((_QWORD *)a1 + 1) = prime;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v21++) = 0;
    while (prime != v21);
    v23 = (uint64_t *)(a1 + 4);
    v22 = (_QWORD *)*((_QWORD *)a1 + 2);
    if (!v22)
    {
LABEL_58:
      v7 = prime;
      goto LABEL_59;
    }
    v24 = v22[1];
    v25 = prime - 1;
    if ((prime & (prime - 1)) == 0)
    {
      v26 = v24 & v25;
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v26) = v23;
      for (i = (_QWORD *)*v22; *v22; i = (_QWORD *)*v22)
      {
        v28 = i[1] & v25;
        if (v28 == v26)
        {
          v22 = i;
        }
        else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v28))
        {
          *v22 = *i;
          v29 = 8 * v28;
          *i = **(_QWORD **)(*(_QWORD *)a1 + v29);
          **(_QWORD **)(*(_QWORD *)a1 + v29) = i;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v28) = v22;
          v22 = i;
          v26 = v28;
        }
      }
      goto LABEL_58;
    }
    if (v24 >= prime)
      v24 %= prime;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v23;
    v33 = (_QWORD *)*v22;
    if (!*v22)
      goto LABEL_58;
    while (1)
    {
      v35 = v33[1];
      if (v35 >= prime)
        v35 %= prime;
      if (v35 != v24)
      {
        if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v35))
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v35) = v22;
          goto LABEL_63;
        }
        *v22 = *v33;
        v34 = 8 * v35;
        *v33 = **(_QWORD **)(*(_QWORD *)a1 + v34);
        **(_QWORD **)(*(_QWORD *)a1 + v34) = v33;
        v33 = v22;
      }
      v35 = v24;
LABEL_63:
      v22 = v33;
      v33 = (_QWORD *)*v33;
      v24 = v35;
      if (!v33)
        goto LABEL_58;
    }
  }
LABEL_72:
  v36 = *(_QWORD **)a1;
  v37 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v37)
  {
    *v10 = *v37;
LABEL_80:
    *v37 = v10;
    goto LABEL_81;
  }
  *v10 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = v10;
  v36[v3] = a1 + 4;
  if (*v10)
  {
    v38 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v38 >= v7)
        v38 %= v7;
    }
    else
    {
      v38 &= v7 - 1;
    }
    v37 = (_QWORD *)(*(_QWORD *)a1 + 8 * v38);
    goto LABEL_80;
  }
LABEL_81:
  ++*((_QWORD *)a1 + 3);
  return v10;
}

void sub_239B2A800(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

double sub_239B2A814(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  unint64_t v11;
  double v12;
  unint64_t v13;
  double v14;
  int8x8_t v15;
  uint8x8_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t **v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint8x8_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t **v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t **v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  _DWORD v51[14];
  _DWORD v52[2];
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  void *v59;
  void *v60;
  void *v61;
  char v62;
  void *__p;
  char v64;
  char v65;

  v6 = (double)a2;
  v7 = (double)a2 * 9.31322575e-10 / 3.5 * 3600.0;
  v8 = *(_DWORD *)(a1 + 24);
  switch(v8)
  {
    case 3:
      v9 = 0.25;
      goto LABEL_6;
    case 5:
      v9 = 0.4;
      goto LABEL_6;
    case 6:
      v9 = 0.2;
      goto LABEL_6;
    case 7:
      v9 = 0.21;
LABEL_6:
      v7 = v7 * v9;
      break;
    default:
      break;
  }
  v10 = 0.0;
  if (!a2)
  {
LABEL_29:
    v15 = (int8x8_t)a3[1];
    if (!*(_QWORD *)&v15)
      goto LABEL_63;
    goto LABEL_30;
  }
  if (v8 != 4)
  {
    if (v8 != 7)
    {
      sub_239586CA4((uint64_t)v51);
      v65 = 0;
      v55 = 0;
      sub_239B28B70(a1, (uint64_t)v51);
      LODWORD(v11) = v51[2];
      v12 = 0.0;
      if (v53)
        v12 = 2.0;
      if (v54)
        v12 = v12 + 2.0;
      if (v56)
        v12 = v12 + 8.0;
      if (v57)
        v12 = v12 + 2.0;
      if (v58)
        v12 = v12 + 2.0;
      v13 = v52[0] * (unint64_t)v52[0] * v52[1];
      v10 = (double)v11 / 10000.0 * 4.0 + 6.0 + v12 * (double)v13 * 0.0000000596046448;
      if (v13 > a2)
      {
        v14 = ceil(sqrt((double)v13 / v6));
        v10 = v10 / (v14 * v14);
      }
      if (v64 < 0)
        operator delete(__p);
      if (v62 < 0)
        operator delete(v61);
      if (v59)
      {
        v60 = v59;
        operator delete(v59);
      }
      sub_239586EB4((uint64_t)v52);
    }
    goto LABEL_29;
  }
  v10 = 6.0;
  v15 = (int8x8_t)a3[1];
  if (!*(_QWORD *)&v15)
    goto LABEL_63;
LABEL_30:
  v16 = (uint8x8_t)vcnt_s8(v15);
  v16.i16[0] = vaddlv_u8(v16);
  if (v16.u32[0] > 1uLL)
  {
    v17 = 6;
    if (*(_QWORD *)&v15 <= 6uLL)
      v17 = 6u % v15.u8[0];
  }
  else
  {
    v17 = (v15.i32[0] - 1) & 6;
  }
  v18 = *a3;
  v19 = *(uint64_t ***)(*a3 + 8 * v17);
  if (!v19)
    goto LABEL_63;
  v20 = *v19;
  if (!*v19)
    goto LABEL_63;
  v21 = *(_QWORD *)&v15 - 1;
  if (v16.u32[0] < 2uLL)
  {
    while (1)
    {
      v22 = v20[1];
      if (v22 == 6)
      {
        if (*((_DWORD *)v20 + 4) == 6)
          goto LABEL_52;
      }
      else if ((v22 & v21) != v17)
      {
        goto LABEL_63;
      }
      v20 = (uint64_t *)*v20;
      if (!v20)
        goto LABEL_63;
    }
  }
  while (1)
  {
    v23 = v20[1];
    if (v23 == 6)
      break;
    if (v23 >= *(_QWORD *)&v15)
      v23 %= *(_QWORD *)&v15;
    if (v23 != v17)
      goto LABEL_63;
LABEL_44:
    v20 = (uint64_t *)*v20;
    if (!v20)
      goto LABEL_63;
  }
  if (*((_DWORD *)v20 + 4) != 6)
    goto LABEL_44;
LABEL_52:
  if (v16.u32[0] >= 2uLL)
  {
    v25 = 6;
    if (*(_QWORD *)&v15 <= 6uLL)
      v25 = 6u % v15.u8[0];
    v24 = *(uint64_t **)(v18 + 8 * v25);
    do
    {
      do
        v24 = (uint64_t *)*v24;
      while (v24[1] != 6);
    }
    while (*((_DWORD *)v24 + 4) != 6);
  }
  else
  {
    v24 = *(uint64_t **)(v18 + 8 * ((v15.i8[0] - 1) & 6));
    do
    {
      do
        v24 = (uint64_t *)*v24;
      while (v24[1] != 6);
    }
    while (*((_DWORD *)v24 + 4) != 6);
  }
  if (v24[3])
    goto LABEL_63;
  if (v16.u32[0] > 1uLL)
  {
    v41 = 7;
    if (*(_QWORD *)&v15 <= 7uLL)
      v41 = 7u % v15.u8[0];
  }
  else
  {
    v41 = (v15.i8[0] - 1) & 7;
  }
  v45 = *(uint64_t ***)(v18 + 8 * v41);
  if (!v45 || (v46 = *v45) == 0)
  {
LABEL_63:
    v26 = (uint64_t *)a3[2];
    if (v26)
    {
      v27 = 0;
      do
      {
        if (*((_DWORD *)v26 + 4) == 7)
          v28 = 0;
        else
          v28 = v26[3];
        v27 += v28;
        v26 = (uint64_t *)*v26;
      }
      while (v26);
      if (v15)
      {
        v29 = v7 <= 0.00000011920929 || v27 == 0;
        if (!v29 && v10 > 0.00000011920929)
        {
          v31 = (uint8x8_t)vcnt_s8(v15);
          v31.i16[0] = vaddlv_u8(v31);
          if (v31.u32[0] > 1uLL)
          {
            v32 = 7;
            if (*(_QWORD *)&v15 <= 7uLL)
              v32 = 7u % v15.u8[0];
          }
          else
          {
            v32 = (v15.i32[0] - 1) & 7;
          }
          v33 = *a3;
          v34 = *(uint64_t ***)(*a3 + 8 * v32);
          if (v34)
          {
            v35 = *v34;
            if (v35)
            {
              if (v31.u32[0] < 2uLL)
              {
                while (1)
                {
                  v37 = v35[1];
                  if (v37 == 7)
                  {
                    if (*((_DWORD *)v35 + 4) == 7)
                      goto LABEL_97;
                  }
                  else if ((v37 & (*(_QWORD *)&v15 - 1)) != v32)
                  {
                    goto LABEL_114;
                  }
                  v35 = (uint64_t *)*v35;
                  if (!v35)
                    goto LABEL_114;
                }
              }
              do
              {
                v36 = v35[1];
                if (v36 == 7)
                {
                  if (*((_DWORD *)v35 + 4) == 7)
                  {
LABEL_97:
                    v38 = (unint64_t)(v10 * (double)v27 / v7);
                    v39 = 10 * v27;
                    if (v38 <= 2)
                      v38 = 2;
                    if (v39 >= v38)
                      v39 = v38;
                    if (v31.u32[0] >= 2uLL)
                    {
                      v42 = 7;
                      if (*(_QWORD *)&v15 <= 7uLL)
                        v42 = 7u % v15.u8[0];
                      v40 = *(uint64_t **)(v33 + 8 * v42);
                      do
                      {
                        do
                          v40 = (uint64_t *)*v40;
                        while (v40[1] != 7);
                      }
                      while (*((_DWORD *)v40 + 4) != 7);
                    }
                    else
                    {
                      v40 = *(uint64_t **)(v33 + 8 * ((v15.i8[0] - 1) & 7));
                      do
                      {
                        do
                          v40 = (uint64_t *)*v40;
                        while (v40[1] != 7);
                      }
                      while (*((_DWORD *)v40 + 4) != 7);
                    }
                    v40[3] = v39;
                    break;
                  }
                }
                else
                {
                  if (v36 >= *(_QWORD *)&v15)
                    v36 %= *(_QWORD *)&v15;
                  if (v36 != v32)
                    break;
                }
                v35 = (uint64_t *)*v35;
              }
              while (v35);
            }
          }
        }
      }
    }
LABEL_114:
    v10 = v7 + v10;
    goto LABEL_115;
  }
  if (v16.u32[0] < 2uLL)
  {
    while (1)
    {
      v47 = v46[1];
      if (v47 == 7)
      {
        if (*((_DWORD *)v46 + 4) == 7)
          goto LABEL_136;
      }
      else if ((v47 & v21) != v41)
      {
        goto LABEL_63;
      }
      v46 = (uint64_t *)*v46;
      if (!v46)
        goto LABEL_63;
    }
  }
  while (1)
  {
    v48 = v46[1];
    if (v48 == 7)
      break;
    if (v48 >= *(_QWORD *)&v15)
      v48 %= *(_QWORD *)&v15;
    if (v48 != v41)
      goto LABEL_63;
LABEL_130:
    v46 = (uint64_t *)*v46;
    if (!v46)
      goto LABEL_63;
  }
  if (*((_DWORD *)v46 + 4) != 7)
    goto LABEL_130;
LABEL_136:
  if (v16.u32[0] >= 2uLL)
  {
    v50 = 7;
    if (*(_QWORD *)&v15 <= 7uLL)
      v50 = 7u % v15.u8[0];
    v49 = *(uint64_t **)(v18 + 8 * v50);
    do
    {
      do
        v49 = (uint64_t *)*v49;
      while (v49[1] != 7);
    }
    while (*((_DWORD *)v49 + 4) != 7);
  }
  else
  {
    v49 = *(uint64_t **)(v18 + 8 * ((v15.i8[0] - 1) & 7));
    do
    {
      do
        v49 = (uint64_t *)*v49;
      while (v49[1] != 7);
    }
    while (*((_DWORD *)v49 + 4) != 7);
  }
  if (!v49[3])
    goto LABEL_63;
LABEL_115:
  v43 = a3 + 2;
  do
    v43 = (_QWORD *)*v43;
  while (v43);
  return v10;
}

void sub_239B2AE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23958441C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239B2AE68(unint64_t *a1, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  unint64_t v4;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t prime;
  void *v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  size_t v28;
  size_t v29;
  size_t v30;
  _QWORD *i;
  size_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint8x8_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  size_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  task_name_t *v49;
  kern_return_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  unint64_t v57;
  _QWORD *v58;
  unint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v65;
  unint64_t *v66;
  void (***v68)(std::string *__return_ptr);
  uint64_t v69;
  unint64_t *v70;
  unint64_t v71;
  _QWORD *v72;
  __n128 v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  __n128 v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  __n128 v81;
  std::__shared_weak_count *size;
  unint64_t *v83;
  unint64_t v84;
  unsigned int v85;
  unsigned int v86;
  unint64_t v87;
  _BOOL4 v89;
  unint64_t *v90;
  unint64_t v91;
  void (***v92)(std::string *__return_ptr);
  uint64_t v93;
  unint64_t *v94;
  unint64_t v95;
  std::__shared_weak_count *v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  __n128 v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  __n128 v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  __n128 v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unsigned int v112;
  unsigned int v113;
  unint64_t v114;
  unsigned int v115;
  uint64_t v116;
  _BOOL4 v118;
  void *v119;
  void (***v120)(std::string *__return_ptr);
  unsigned int v121;
  unsigned int v122;
  unint64_t *v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t *v126;
  unint64_t v127;
  std::__shared_weak_count *v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  __n128 v132;
  std::__shared_weak_count *v133;
  unint64_t *v134;
  unint64_t v135;
  __n128 v136;
  std::__shared_weak_count *v137;
  unint64_t *v138;
  unint64_t v139;
  __n128 v140;
  std::__shared_weak_count *v141;
  unint64_t *v142;
  unint64_t v143;
  unsigned int v144;
  unsigned int v145;
  unint64_t v146;
  unsigned int v147;
  unsigned int v149;
  unsigned int v150;
  void (***v151)(std::__fs::filesystem::path *__return_ptr);
  std::string::size_type v152;
  unint64_t *v153;
  unint64_t v154;
  int v155;
  char v156;
  std::__shared_weak_count *v157;
  unint64_t *v158;
  unint64_t v159;
  std::string *v160;
  void *v161;
  char v162;
  std::string *v163;
  std::string::size_type v164;
  char v165;
  uint64_t v166;
  unint64_t v167;
  _QWORD *v168;
  std::string *v169;
  std::string::size_type v170;
  char v171;
  unint64_t v172;
  std::string *v173;
  std::string::size_type v174;
  char v175;
  void (***v176)(std::string *__return_ptr);
  unint64_t v177;
  unint64_t *v178;
  unint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  __n128 v182;
  uint64_t v183;
  std::__shared_weak_count *v184;
  unint64_t *v185;
  unint64_t v186;
  uint64_t v187;
  int v188;
  int v189;
  BOOL v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  std::__shared_weak_count *v195;
  unint64_t *v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  __int128 v200;
  std::__shared_weak_count *v201;
  unint64_t *v202;
  unint64_t v203;
  std::__shared_weak_count *v204;
  unint64_t *v205;
  unint64_t v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t *v212;
  unint64_t v213;
  __n128 v214;
  std::__shared_weak_count *v215;
  unint64_t *v216;
  unint64_t v217;
  __n128 v218;
  __int128 v219;
  unint64_t *v220;
  unint64_t v221;
  uint64_t v222;
  int v223;
  __int16 v224;
  unint64_t v225;
  unint64_t *v226;
  unint64_t v227;
  std::__shared_weak_count *v228;
  std::__shared_weak_count *v229;
  unint64_t *v230;
  unint64_t v231;
  __n128 v232;
  std::__shared_weak_count *v233;
  unint64_t *v234;
  unint64_t v235;
  __n128 v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  __n128 v240;
  std::__shared_weak_count *v241;
  unint64_t *v242;
  unint64_t v243;
  uint64_t v244;
  size_t v245;
  size_t v246;
  unint64_t *v247;
  unsigned int v248;
  unsigned int v249;
  __n128 v250;
  std::__shared_weak_count *v251;
  unint64_t *v252;
  unint64_t v253;
  uint64_t v254;
  std::__shared_weak_count *v255;
  unint64_t *p_shared_owners;
  unint64_t v257;
  unint64_t v258;
  unint64_t v259;
  std::__shared_weak_count *v260;
  unint64_t *v261;
  unint64_t v262;
  __n128 v263;
  std::__shared_weak_count *v264;
  unint64_t *v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t *v269;
  unint64_t v270;
  uint64_t v271;
  _QWORD *v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  float v276;
  int64x2_t v277;
  int64x2_t v278;
  int64x2_t v279;
  int64x2_t v280;
  float64x2_t v281;
  uint64_t v282;
  uint64_t v283;
  int data;
  int v285;
  int v286;
  float64x2_t v287;
  uint64_t v288;
  double v289;
  double v290;
  float64x2_t v291;
  float64x2_t v295;
  float64x2_t v297;
  float64x2_t v298;
  double v299;
  float64x2_t v300;
  int v301;
  uint64_t v302;
  float64x2_t v303;
  float64x2_t v304;
  float v305;
  float64x2_t v306;
  double v307;
  double v308;
  double v309;
  double v310;
  double v311;
  double v312;
  double v313;
  double v314;
  float64x2_t v316;
  double v317;
  double v318;
  double v319;
  double v320;
  double v321;
  double v327;
  float64x2_t v330;
  double v331;
  double v332;
  double v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  _QWORD *v338;
  uint64_t v339;
  double v340;
  double v341;
  double v342;
  float *v344;
  _DWORD *v345;
  float *v346;
  float v347;
  float *v348;
  uint64_t v349;
  uint64_t v350;
  std::__shared_weak_count *v351;
  unint64_t *v352;
  unint64_t v353;
  uint64_t v354;
  _QWORD *v355;
  uint64_t v356;
  unint64_t *v357;
  unint64_t v358;
  uint64_t v359;
  uint64_t v360;
  unsigned int v361;
  unint64_t v362;
  int v363;
  float32x4_t v364;
  int8x16_t v366;
  uint64_t v367;
  BOOL v368;
  uint64_t v369;
  float *v370;
  uint64_t v371;
  float32x4_t *v372;
  uint64_t v373;
  int8x16_t v374;
  int v375;
  float v376;
  uint64_t v377;
  std::__shared_weak_count *v378;
  unint64_t *v379;
  uint64_t v380;
  _QWORD *v381;
  uint64_t v382;
  unint64_t v383;
  uint64_t v384;
  float *v385;
  unint64_t v386;
  std::__shared_weak_count *v387;
  unint64_t *v388;
  unint64_t v389;
  int v390;
  unint64_t *v391;
  unint64_t v392;
  unint64_t v393;
  std::__shared_weak_count *v394;
  unint64_t *v395;
  unint64_t v396;
  uint64_t v397;
  char **v398;
  unint64_t *v399;
  unint64_t v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  unint64_t *v404;
  unint64_t v405;
  uint64_t v406;
  std::__shared_weak_count *v407;
  unint64_t *v408;
  unint64_t v409;
  _QWORD *v410;
  uint64_t v411;
  double v412;
  double v413;
  int16x8_t v414;
  double v415;
  int16x8_t v416;
  uint64_t v417;
  std::__shared_weak_count *v418;
  unint64_t *v419;
  unint64_t v420;
  uint64_t v421;
  uint64_t v422;
  std::__shared_weak_count *v423;
  unint64_t *v424;
  unint64_t v425;
  std::__shared_weak_count *v426;
  unint64_t *v427;
  unint64_t v428;
  uint64_t v429;
  std::__shared_weak_count *v430;
  unint64_t *v431;
  unint64_t v432;
  uint64_t v433;
  uint64_t v434;
  std::__shared_weak_count *v435;
  unint64_t *v436;
  unint64_t v437;
  _QWORD *v438;
  std::__shared_weak_count *v439;
  unint64_t *v440;
  unint64_t v441;
  unint64_t v442;
  unint64_t v443;
  unint64_t *v444;
  unint64_t v445;
  int v446;
  unint64_t v447;
  unint64_t v448;
  unint64_t *v449;
  unint64_t v450;
  uint64_t v451;
  _QWORD *v452;
  _QWORD *v453;
  _QWORD *v454;
  _QWORD *v455;
  uint64_t *v456;
  _QWORD *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  _QWORD *v461;
  uint64_t v462;
  _QWORD *v463;
  uint64_t v464;
  std::__shared_weak_count *v465;
  unint64_t *v466;
  unint64_t v467;
  std::__shared_weak_count *v468;
  unint64_t *v469;
  unint64_t v470;
  std::__shared_weak_count *v471;
  unint64_t *v472;
  unint64_t v473;
  uint64_t v474;
  unint64_t v475;
  char *v476;
  unint64_t v477;
  unint64_t v478;
  unint64_t *v479;
  _QWORD *v480;
  unint64_t *v481;
  uint64_t v482;
  uint64_t v483;
  unint64_t v484;
  uint64_t v485;
  unint64_t v486;
  _BYTE *v487;
  unint64_t *v488;
  char *v489;
  unint64_t v490;
  uint64_t v491;
  _OWORD *v492;
  unint64_t *v493;
  uint64_t v494;
  __int128 v495;
  unint64_t v496;
  std::__shared_weak_count *v497;
  unint64_t *v498;
  unint64_t v499;
  std::__shared_weak_count *v500;
  unint64_t *v501;
  unint64_t v502;
  std::__shared_weak_count *v503;
  unint64_t *v504;
  unint64_t v505;
  std::__shared_weak_count *v506;
  unint64_t *v507;
  unint64_t v508;
  std::__shared_weak_count *v509;
  unint64_t *v510;
  unint64_t v511;
  std::__shared_weak_count *v512;
  unint64_t *v513;
  unint64_t v514;
  std::__shared_weak_count *v515;
  unint64_t *v516;
  unint64_t v517;
  double v519;
  unsigned int v520;
  unsigned int v521;
  int v522;
  _BYTE v523[12];
  float64x2_t v524;
  float64x2_t v525;
  float64x2_t v526;
  float64x2_t v527;
  double v528;
  float64x2_t v529;
  float64x2_t v530;
  uint64_t v531;
  float64x2_t v532;
  double v533;
  double v534;
  double v535;
  double v536;
  double v537;
  double v538;
  float64x2_t v539;
  int v540;
  void *v541;
  int v542;
  int v543;
  int v544;
  int v545;
  float64x2_t v546;
  int8x16_t v547;
  _QWORD *v548;
  int v549;
  double v550;
  float32x4_t v551;
  __int128 v552;
  unint64_t v553;
  _BYTE v554[32];
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  _BYTE v569[36];
  uint64_t v570;
  char v571;
  uint64_t v572[3];
  std::__shared_weak_count *v573;
  _QWORD v574[3];
  _QWORD *v575;
  std::__shared_weak_count *v576;
  void (***v577)(std::string *__return_ptr);
  std::__shared_weak_count *v578;
  _DWORD v579[2];
  std::__fs::filesystem::path __src;
  uint64_t v581;
  std::__shared_weak_count *v582;
  uint64_t v583;
  std::__shared_weak_count *v584;
  _QWORD *v585;
  std::__shared_weak_count *v586;
  _QWORD *v587;
  std::__shared_weak_count *v588;
  _QWORD *v589;
  uint64_t v590;
  _QWORD *v591;
  std::__shared_weak_count *v592;
  __int128 task_info_outCnt[6];
  void *v594;
  unint64_t *v595;
  _QWORD *v596;
  int64x2_t *v597;
  uint64_t v598;
  void *__p;
  _BYTE v600[15];
  char v601;
  _QWORD *v602;
  std::__shared_weak_count *v603;
  _BYTE v604[24];
  _BYTE *v605;
  _QWORD v606[3];
  _QWORD *v607;
  uint64_t *v608;
  _QWORD v609[3];
  _QWORD *v610;
  _QWORD v611[3];
  _QWORD *v612;
  std::string v613;
  _BYTE v614[30];
  float64x2_t v615;
  float64_t v616;
  int64x2_t v617;
  int64x2_t v618;
  int64x2_t v619;
  int64x2_t v620;
  int64x2_t v621;
  int64x2_t v622;
  int64x2_t v623;
  int64x2_t v624;
  _BYTE v625[64];
  __int128 v626;
  __int128 v627;
  __int128 v628;
  __int128 v629;
  __int128 v630;
  __int128 v631;
  __int128 v632;
  __int128 v633;
  __int128 v634;
  __int128 v635;
  __int128 v636;
  __int128 v637;
  _BYTE task_info_out[32];
  _QWORD v639[4];
  float64x2_t v640;
  uint64_t v641;
  float64x2_t v642;
  uint64_t v643;
  float64x2_t v644;
  double v645;
  float64x2_t v646;
  float64_t v647;
  _QWORD v648[3];
  _QWORD *v649;
  uint64_t v650;

  v650 = *MEMORY[0x24BDAC8D0];
  v9 = *a1;
  v10 = a3[18];
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v4 = *a1;
      if (v9 >= v10)
        v4 = v9 % v10;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
    v12 = *(_QWORD **)(a3[17] + 8 * v4);
    if (v12)
    {
      v13 = (_QWORD *)*v12;
      if (v13)
      {
        if (v11.u32[0] < 2uLL)
        {
          while (1)
          {
            v15 = v13[1];
            if (v15 == v9)
            {
              if (v13[2] == v9)
                goto LABEL_82;
            }
            else if ((v15 & (v10 - 1)) != v4)
            {
              goto LABEL_22;
            }
            v13 = (_QWORD *)*v13;
            if (!v13)
              goto LABEL_22;
          }
        }
        do
        {
          v14 = v13[1];
          if (v14 == v9)
          {
            if (v13[2] == v9)
              goto LABEL_82;
          }
          else
          {
            if (v14 >= v10)
              v14 %= v10;
            if (v14 != v4)
              break;
          }
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
    }
  }
LABEL_22:
  v16 = operator new(0x18uLL);
  *v16 = 0;
  v16[1] = v9;
  v16[2] = v9;
  v17 = (float)(unint64_t)(a3[20] + 1);
  v18 = *((float *)a3 + 42);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    v19 = 1;
    if (v10 >= 3)
      v19 = (v10 & (v10 - 1)) != 0;
    v20 = v19 | (2 * v10);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      prime = v21;
    else
      prime = v20;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v10 = a3[18];
    }
    if (prime <= v10)
    {
      if (prime >= v10)
        goto LABEL_59;
      v35 = vcvtps_u32_f32((float)(unint64_t)a3[20] / *((float *)a3 + 42));
      if (v10 < 3 || (v36 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v36.i16[0] = vaddlv_u8(v36), v36.u32[0] > 1uLL))
      {
        v35 = std::__next_prime(v35);
      }
      else
      {
        v37 = 1 << -(char)__clz(v35 - 1);
        if (v35 >= 2)
          v35 = v37;
      }
      if (prime <= v35)
        prime = v35;
      if (prime >= v10)
      {
        v10 = a3[18];
LABEL_59:
        if ((v10 & (v10 - 1)) != 0)
        {
          if (v9 >= v10)
            v4 = v9 % v10;
          else
            v4 = v9;
        }
        else
        {
          v4 = (v10 - 1) & v9;
        }
        goto LABEL_72;
      }
      if (!prime)
      {
        v119 = (void *)a3[17];
        a3[17] = 0;
        if (v119)
          operator delete(v119);
        v10 = 0;
        a3[18] = 0;
        goto LABEL_59;
      }
    }
    if (prime >> 61)
      sub_239418A80();
    v23 = operator new(8 * prime);
    v24 = (void *)a3[17];
    a3[17] = (uint64_t)v23;
    if (v24)
      operator delete(v24);
    v25 = 0;
    a3[18] = prime;
    do
      *(_QWORD *)(a3[17] + 8 * v25++) = 0;
    while (prime != v25);
    v27 = a3 + 19;
    v26 = (_QWORD *)a3[19];
    if (!v26)
    {
LABEL_58:
      v10 = prime;
      goto LABEL_59;
    }
    v28 = v26[1];
    v29 = prime - 1;
    if ((prime & (prime - 1)) == 0)
    {
      v30 = v28 & v29;
      *(_QWORD *)(a3[17] + 8 * v30) = v27;
      for (i = (_QWORD *)*v26; *v26; i = (_QWORD *)*v26)
      {
        v32 = i[1] & v29;
        if (v32 == v30)
        {
          v26 = i;
        }
        else
        {
          v33 = a3[17];
          if (*(_QWORD *)(v33 + 8 * v32))
          {
            *v26 = *i;
            v34 = 8 * v32;
            *i = **(_QWORD **)(a3[17] + v34);
            **(_QWORD **)(a3[17] + v34) = i;
          }
          else
          {
            *(_QWORD *)(v33 + 8 * v32) = v26;
            v26 = i;
            v30 = v32;
          }
        }
      }
      goto LABEL_58;
    }
    if (v28 >= prime)
      v28 %= prime;
    *(_QWORD *)(a3[17] + 8 * v28) = v27;
    v38 = (_QWORD *)*v26;
    if (!*v26)
      goto LABEL_58;
    while (1)
    {
      v40 = v38[1];
      if (v40 >= prime)
        v40 %= prime;
      if (v40 != v28)
      {
        v41 = a3[17];
        if (!*(_QWORD *)(v41 + 8 * v40))
        {
          *(_QWORD *)(v41 + 8 * v40) = v26;
          goto LABEL_63;
        }
        *v26 = *v38;
        v39 = 8 * v40;
        *v38 = **(_QWORD **)(a3[17] + v39);
        **(_QWORD **)(a3[17] + v39) = v38;
        v38 = v26;
      }
      v40 = v28;
LABEL_63:
      v26 = v38;
      v38 = (_QWORD *)*v38;
      v28 = v40;
      if (!v38)
        goto LABEL_58;
    }
  }
LABEL_72:
  v42 = a3[17];
  v43 = *(_QWORD **)(v42 + 8 * v4);
  if (v43)
  {
    *v16 = *v43;
LABEL_80:
    *v43 = v16;
    goto LABEL_81;
  }
  *v16 = a3[19];
  a3[19] = (uint64_t)v16;
  *(_QWORD *)(v42 + 8 * v4) = a3 + 19;
  if (*v16)
  {
    v44 = *(_QWORD *)(*v16 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v44 >= v10)
        v44 %= v10;
    }
    else
    {
      v44 &= v10 - 1;
    }
    v43 = (_QWORD *)(a3[17] + 8 * v44);
    goto LABEL_80;
  }
LABEL_81:
  ++a3[20];
LABEL_82:
  v46 = a3[14];
  v47 = a3[15];
  v45 = (void **)(a3 + 14);
  v48 = MEMORY[0x23B83EE44]();
  LODWORD(task_info_outCnt[0]) = 93;
  v49 = (task_name_t *)MEMORY[0x24BDAEC58];
  v50 = task_info(*MEMORY[0x24BDAEC58], 0x16u, (task_info_t)task_info_out, (mach_msg_type_number_t *)task_info_outCnt);
  v51 = (v47 - v46) >> 3;
  v52 = *(_QWORD *)&v645 + v48;
  if (v50)
    v52 = 0;
  if (v52 <= 0xEC8E51AFFLL)
  {
    if (v52 <= 0x7558BDAFFLL)
    {
      if (v52 <= 0x39BDF3AFFLL)
      {
        if (v52 <= 0x1BF08EAFFLL)
        {
          if (v52 <= 0x147D356FFLL)
          {
            v166 = 60;
            if (v52 > 0x9502F8FF)
              v166 = 120;
            if (v52 <= 0xD09DC2FF)
              v167 = v166;
            else
              v167 = 200;
            if (v51 > v167)
              return 4294967288;
          }
          else if (v51 > 0x12C)
          {
            return 4294967288;
          }
        }
        else if (v51 > 0x1F4)
        {
          return 4294967288;
        }
      }
      else if (v51 > 0x3E8)
      {
        return 4294967288;
      }
    }
    else if (v51 > 0x5DC)
    {
      return 4294967288;
    }
  }
  else if (v51 > 0x7D0)
  {
    return 4294967288;
  }
  v54 = (_QWORD *)a3[14];
  v55 = (_QWORD *)a3[15];
  if (v54 == v55)
    goto LABEL_103;
  v56 = (_QWORD *)a3[14];
  while (*v56 != *a1)
  {
    if (++v56 == v55)
    {
      v56 = (_QWORD *)a3[15];
      break;
    }
  }
  if (v56 != v55)
    return 4294967263;
  if (v54 == v55)
LABEL_103:
    kdebug_trace();
  v58 = (_QWORD *)a1[3];
  v57 = a1[4];
  v602 = v58;
  v603 = (std::__shared_weak_count *)v57;
  if (v57)
  {
    v59 = (unint64_t *)(v57 + 8);
    do
      v60 = __ldxr(v59);
    while (__stxr(v60 + 1, v59));
  }
  v61 = sub_2395A7198((uint64_t)task_info_outCnt, (uint64_t)v58);
  v592 = 0;
  v591 = 0;
  v590 = 0;
  v589 = 0;
  v588 = 0;
  v587 = 0;
  v586 = 0;
  v585 = 0;
  v584 = 0;
  v583 = 0;
  v582 = 0;
  v581 = 0;
  v62 = MEMORY[0x23B83EE44](v61);
  *(_DWORD *)v625 = 93;
  v63 = task_info(*v49, 0x16u, (task_info_t)task_info_out, (mach_msg_type_number_t *)v625);
  if ((unint64_t)(*(_QWORD *)&v645 + v62) > 0x147D356FFLL && (_DWORD)v63 == 0)
    v65 = 0x4000;
  else
    v65 = 0x2000;
  MEMORY[0x23B83EE44](v63);
  *(_DWORD *)v625 = 93;
  task_info(*v49, 0x16u, (task_info_t)task_info_out, (mach_msg_type_number_t *)v625);
  v66 = (unint64_t *)v594;
  if (v594 != v595)
  {
    while (*v66 <= v65 && *v66 >= 3)
    {
      if (++v66 == v595)
        goto LABEL_120;
    }
    v53 = 4294967289;
    goto LABEL_743;
  }
LABEL_120:
  v68 = (void (***)(std::string *__return_ptr))v58[48];
  if (v68)
  {
    v69 = v58[49];
    *(_QWORD *)v554 = v58[48];
    *(_QWORD *)&v554[8] = v69;
    if (v69)
    {
      v70 = (unint64_t *)(v69 + 8);
      do
        v71 = __ldxr(v70);
      while (__stxr(v71 + 1, v70));
    }
    (**v68)(&v613);
    *(_QWORD *)v625 = &off_250ADB210;
    sub_23955C704((uint64_t)v613.__r_.__value_.__l.__data_, (uint64_t)&v625[8]);
    sub_2397078F8((uint64_t)v625, 1, task_info_out);
    v72 = operator new(0x70uLL);
    v72[1] = 0;
    v72[2] = 0;
    *v72 = &off_250ADBE30;
    v72[3] = &off_250ADB628;
    sub_239423E50((uint64_t)task_info_out, (uint64_t)(v72 + 4));
    v589 = v72 + 3;
    v590 = (uint64_t)v72;
    v73 = nullsub_4(v639);
    v74 = *(std::__shared_weak_count **)&task_info_out[16];
    if (*(_QWORD *)&task_info_out[16])
    {
      v75 = (unint64_t *)(*(_QWORD *)&task_info_out[16] + 8);
      do
        v76 = __ldaxr(v75);
      while (__stlxr(v76 - 1, v75));
      if (!v76)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v74->__on_zero_shared)(v74, v73);
        std::__shared_weak_count::__release_weak(v74);
      }
    }
    j_nullsub_4_89(task_info_out);
    v77 = nullsub_4(&v625[24]);
    v78 = *(std::__shared_weak_count **)&v625[16];
    if (*(_QWORD *)&v625[16])
    {
      v79 = (unint64_t *)(*(_QWORD *)&v625[16] + 8);
      do
        v80 = __ldaxr(v79);
      while (__stlxr(v80 - 1, v79));
      if (!v80)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v78->__on_zero_shared)(v78, v77);
        std::__shared_weak_count::__release_weak(v78);
      }
    }
    v81 = nullsub_4(v625);
    size = (std::__shared_weak_count *)v613.__r_.__value_.__l.__size_;
    if (v613.__r_.__value_.__l.__size_)
    {
      v83 = (unint64_t *)(v613.__r_.__value_.__l.__size_ + 8);
      do
        v84 = __ldaxr(v83);
      while (__stlxr(v84 - 1, v83));
      if (!v84)
      {
        ((void (*)(std::__shared_weak_count *, __n128))size->__on_zero_shared)(size, v81);
        std::__shared_weak_count::__release_weak(size);
      }
    }
    v86 = *((_DWORD *)v589 + 16);
    v85 = *((_DWORD *)v589 + 17);
    if (v86 <= v85)
      v87 = v85;
    else
      v87 = v86;
    if (v85 >= v86)
      v85 = *((_DWORD *)v589 + 16);
    v89 = v65 >= v87 && v85 > 2;
    if (!*(_QWORD *)&v554[8])
      goto LABEL_154;
    v90 = (unint64_t *)(*(_QWORD *)&v554[8] + 8);
    do
      v91 = __ldaxr(v90);
    while (__stlxr(v91 - 1, v90));
    if (!v91)
    {
      (*(void (**)(_QWORD, __n128))(**(_QWORD **)&v554[8] + 16))(*(_QWORD *)&v554[8], v81);
      std::__shared_weak_count::__release_weak(*(std::__shared_weak_count **)&v554[8]);
      if (v89)
        goto LABEL_155;
    }
    else
    {
LABEL_154:
      if (v89)
      {
LABEL_155:
        v58 = v602;
        goto LABEL_156;
      }
    }
    v53 = 4294967283;
    goto LABEL_743;
  }
LABEL_156:
  v92 = (void (***)(std::string *__return_ptr))v58[50];
  if (!v92)
  {
    v116 = 4294967288;
    v120 = (void (***)(std::string *__return_ptr))v58[52];
    if (v120)
      goto LABEL_218;
LABEL_270:
    std::to_string((std::string *)task_info_out, *a1);
    v160 = std::string::append((std::string *)task_info_out, ".jpg");
    v161 = (void *)v160->__r_.__value_.__r.__words[0];
    *(_QWORD *)v625 = v160->__r_.__value_.__l.__size_;
    *(_QWORD *)&v625[7] = *(std::string::size_type *)((char *)&v160->__r_.__value_.__r.__words[1] + 7);
    v162 = HIBYTE(v160->__r_.__value_.__r.__words[2]);
    v160->__r_.__value_.__l.__size_ = 0;
    v160->__r_.__value_.__r.__words[2] = 0;
    v160->__r_.__value_.__r.__words[0] = 0;
    if (v601 < 0)
      operator delete(__p);
    *(_QWORD *)&v600[7] = *(_QWORD *)&v625[7];
    __p = v161;
    *(_QWORD *)v600 = *(_QWORD *)v625;
    v601 = v162;
    if ((task_info_out[23] & 0x80000000) != 0)
      operator delete(*(void **)task_info_out);
    sub_2396F295C((uint64_t *)(a2 + 224), a2 + 8, (uint64_t)task_info_out);
    std::to_string((std::string *)v554, *a1);
    v163 = std::string::append((std::string *)v554, ".png");
    v164 = v163->__r_.__value_.__r.__words[0];
    v613.__r_.__value_.__r.__words[0] = v163->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v613.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v163->__r_.__value_.__r.__words[1] + 7);
    v165 = HIBYTE(v163->__r_.__value_.__r.__words[2]);
    v163->__r_.__value_.__l.__size_ = 0;
    v163->__r_.__value_.__r.__words[2] = 0;
    v163->__r_.__value_.__r.__words[0] = 0;
    *(_QWORD *)&v625[15] = *(std::string::size_type *)((char *)v613.__r_.__value_.__r.__words + 7);
    *(_QWORD *)v625 = v164;
    *(_QWORD *)&v625[8] = v613.__r_.__value_.__r.__words[0];
    v625[23] = v165;
    sub_239498A04((std::__fs::filesystem::path *)v625, (uint64_t)task_info_out, &__src);
    if ((v625[23] & 0x80000000) != 0)
    {
      operator delete(*(void **)v625);
      if ((v554[23] & 0x80000000) == 0)
      {
LABEL_276:
        if ((task_info_out[23] & 0x80000000) == 0)
          goto LABEL_277;
LABEL_290:
        operator delete(*(void **)task_info_out);
LABEL_277:
        *(_QWORD *)task_info_out = *a1;
        if (SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) < 0)
          sub_23941A7F8(&task_info_out[8], __src.__pn_.__r_.__value_.__l.__data_, __src.__pn_.__r_.__value_.__l.__size_);
        else
          *(std::__fs::filesystem::path *)&task_info_out[8] = __src;
        sub_2395F833C((uint64_t)(a3 + 235), (unint64_t *)task_info_out, (uint64_t)task_info_out);
        if ((task_info_out[31] & 0x80000000) != 0)
          operator delete(*(void **)&task_info_out[8]);
        *(_DWORD *)((char *)v579 + 3) = 0;
        v579[0] = 0;
        v168 = v602;
        if (!v602[48] || !*(_BYTE *)(a3[56] + 1664))
        {
          v542 = 0;
          v541 = 0;
          goto LABEL_308;
        }
        sub_2396F295C((uint64_t *)(a2 + 248), a2 + 8, (uint64_t)v625);
        std::to_string(&v613, *a1);
        v169 = std::string::append(&v613, ".jpg");
        v170 = v169->__r_.__value_.__r.__words[0];
        v617.i64[0] = v169->__r_.__value_.__l.__size_;
        *(uint64_t *)((char *)v617.i64 + 7) = *(std::string::size_type *)((char *)&v169->__r_.__value_.__r.__words[1] + 7);
        v171 = HIBYTE(v169->__r_.__value_.__r.__words[2]);
        v169->__r_.__value_.__l.__size_ = 0;
        v169->__r_.__value_.__r.__words[2] = 0;
        v169->__r_.__value_.__r.__words[0] = 0;
        *(_QWORD *)&v554[15] = *(uint64_t *)((char *)v617.i64 + 7);
        *(_QWORD *)v554 = v170;
        *(_QWORD *)&v554[8] = v617.i64[0];
        v554[23] = v171;
        sub_239498A04((std::__fs::filesystem::path *)v554, (uint64_t)v625, (std::__fs::filesystem::path *)task_info_out);
        v541 = *(void **)task_info_out;
        v172 = *(_QWORD *)&task_info_out[8];
        v579[0] = *(_DWORD *)&task_info_out[16];
        *(_DWORD *)((char *)v579 + 3) = *(_DWORD *)&task_info_out[19];
        v542 = task_info_out[23];
        task_info_out[23] = 0;
        task_info_out[0] = 0;
        if ((v554[23] & 0x80000000) != 0)
        {
          operator delete(*(void **)v554);
          if ((SHIBYTE(v613.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_298:
            if ((v625[23] & 0x80000000) == 0)
              goto LABEL_299;
LABEL_304:
            operator delete(*(void **)v625);
LABEL_299:
            *(_QWORD *)task_info_out = *a1;
            if (v542 < 0)
            {
              sub_23941A7F8(&task_info_out[8], v541, v172);
            }
            else
            {
              *(_QWORD *)&task_info_out[8] = v541;
              *(_QWORD *)&task_info_out[16] = v172;
              *(_DWORD *)&task_info_out[24] = v579[0];
              *(_DWORD *)&task_info_out[27] = *(_DWORD *)((char *)v579 + 3);
              task_info_out[31] = v542;
            }
            sub_2395F833C((uint64_t)(a3 + 240), (unint64_t *)task_info_out, (uint64_t)task_info_out);
            if ((task_info_out[31] & 0x80000000) != 0)
              operator delete(*(void **)&task_info_out[8]);
LABEL_308:
            if (!v168[50] && !v168[52])
              goto LABEL_323;
            sub_2396F295C((uint64_t *)(a2 + 272), a2 + 8, (uint64_t)task_info_out);
            std::to_string(&v613, *a1);
            v173 = std::string::append(&v613, ".TIF");
            v174 = v173->__r_.__value_.__r.__words[0];
            v617.i64[0] = v173->__r_.__value_.__l.__size_;
            *(uint64_t *)((char *)v617.i64 + 7) = *(std::string::size_type *)((char *)&v173->__r_.__value_.__r.__words[1]
                                                                           + 7);
            v175 = HIBYTE(v173->__r_.__value_.__r.__words[2]);
            v173->__r_.__value_.__l.__size_ = 0;
            v173->__r_.__value_.__r.__words[2] = 0;
            v173->__r_.__value_.__r.__words[0] = 0;
            *(_QWORD *)&v554[15] = *(uint64_t *)((char *)v617.i64 + 7);
            *(_QWORD *)v554 = v174;
            *(_QWORD *)&v554[8] = v617.i64[0];
            v554[23] = v175;
            sub_239498A04((std::__fs::filesystem::path *)v554, (uint64_t)task_info_out, (std::__fs::filesystem::path *)v625);
            if ((v554[23] & 0x80000000) != 0)
            {
              operator delete(*(void **)v554);
              if ((SHIBYTE(v613.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
LABEL_312:
                if ((task_info_out[23] & 0x80000000) == 0)
                {
LABEL_313:
                  *(_QWORD *)task_info_out = *a1;
                  if ((v625[23] & 0x80000000) != 0)
                  {
                    sub_23941A7F8(&task_info_out[8], *(void **)v625, *(unint64_t *)&v625[8]);
                  }
                  else
                  {
                    *(_OWORD *)&task_info_out[8] = *(_OWORD *)v625;
                    *(_QWORD *)&task_info_out[24] = *(_QWORD *)&v625[16];
                  }
                  sub_2395F833C((uint64_t)(a3 + 245), (unint64_t *)task_info_out, (uint64_t)task_info_out);
                  if ((task_info_out[31] & 0x80000000) != 0)
                    operator delete(*(void **)&task_info_out[8]);
                  if ((v625[23] & 0x80000000) != 0)
                    operator delete(*(void **)v625);
LABEL_323:
                  v176 = (void (***)(std::string *__return_ptr))a1[1];
                  v177 = a1[2];
                  v577 = v176;
                  v578 = (std::__shared_weak_count *)v177;
                  if (v177)
                  {
                    v178 = (unint64_t *)(v177 + 8);
                    do
                      v179 = __ldxr(v178);
                    while (__stxr(v179 + 1, v178));
                  }
                  if (!v176)
                  {
                    sub_239A444D4((uint64_t)"unknown file", 501, (uint64_t)"", (void (*)(void *))sub_239A4463C);
                    sub_239A4475C();
                    abort();
                  }
                  (*v176)[3]((std::string *)task_info_out);
                  v180 = operator new(0x30uLL);
                  v180[1] = 0;
                  v180[2] = 0;
                  *v180 = &off_250AF58B8;
                  v180[3] = &off_250AE94F0;
                  v181 = (uint64_t)(v180 + 3);
                  *((_OWORD *)v180 + 2) = *(_OWORD *)&task_info_out[8];
                  *(_QWORD *)&task_info_out[8] = 0;
                  *(_QWORD *)&task_info_out[16] = 0;
                  v575 = v180 + 3;
                  v576 = (std::__shared_weak_count *)v180;
                  sub_23979BCF4(task_info_out);
                  if (!a3[22])
                    goto LABEL_337;
                  sub_23979D000(v181, task_info_out);
                  sub_23979D0F0((uint64_t)task_info_out, v625);
                  v183 = *(_QWORD *)v625;
                  v184 = *(std::__shared_weak_count **)&v625[8];
                  if (*(_QWORD *)&v625[8])
                  {
                    v185 = (unint64_t *)(*(_QWORD *)&v625[8] + 8);
                    do
                      v186 = __ldaxr(v185);
                    while (__stlxr(v186 - 1, v185));
                    if (!v186)
                    {
                      ((void (*)(std::__shared_weak_count *))v184->__on_zero_shared)(v184);
                      std::__shared_weak_count::__release_weak(v184);
                    }
                  }
                  sub_2399107E4(task_info_out);
                  if (v183
                    && ((v187 = (uint64_t)v575, sub_23979A918((uint64_t)v575) == 875704422)
                     || sub_23979A918(v187) == 875704438))
                  {
                    v543 = 1;
                  }
                  else
                  {
LABEL_337:
                    v543 = 0;
                  }
                  v188 = *((unsigned __int8 *)a3 + 2109);
                  if (*((_BYTE *)a3 + 2109)
                    && (*(_BYTE *)(a2 + 4) || *(_DWORD *)a2)
                    && ((v192 = (uint64_t)v575, sub_23979A918((uint64_t)v575) == 875704422)
                     || sub_23979A918(v192) == 875704438))
                  {
                    v191 = 0;
                    v189 = 1;
                    if (!v543)
                      goto LABEL_353;
                  }
                  else
                  {
                    v189 = 0;
                    if (v188)
                      v190 = 1;
                    else
                      v190 = *(_DWORD *)a2 == 0;
                    v191 = v190;
                    if (!v543)
                      goto LABEL_353;
                  }
                  if (!v191)
                    goto LABEL_431;
LABEL_353:
                  v549 = v189;
                  v193 = (uint64_t)v575;
                  if (sub_23979A918((uint64_t)v575) != 875704422
                    && sub_23979A918(v193) != 875704438)
                  {
                    (**v577)(&v613);
                    sub_239B2E7CC(v625, (uint64_t)v613.__r_.__value_.__l.__data_);
                    sub_2397078F8((uint64_t)v625, 21, task_info_out);
                    sub_239B2E89C(v554, (uint64_t)task_info_out);
                    sub_239B24AF0((uint64_t)&v591, (__int128 *)v554);
                    sub_239416DA0((uint64_t)v554);
                    sub_239422DD0((uint64_t)task_info_out);
                    sub_239416FF8((uint64_t)v625);
                    sub_239A4D7C0((uint64_t)&v613);
LABEL_430:
                    v189 = v549;
LABEL_431:
                    if (v189)
                    {
                      sub_239A9AD10(a2, (void *)*a1, (uint64_t *)&v575);
                    }
                    else if (v191)
                    {
                      if (!v591)
                      {
                        sub_239A444D4((uint64_t)"unknown file", 571, (uint64_t)"", (void (*)(void *))sub_239A4463C);
                        sub_239A4475C();
                        abort();
                      }
                      sub_239A9A4E8(a2, (void *)*a1, (uint64_t *)&v591);
                    }
                    if (v594 == v595)
                    {
                      v244 = (uint64_t)v575;
                      v245 = sub_23979C8D0((uint64_t)v575);
                      v246 = sub_23979CAD8(v244);
                      v247 = (unint64_t *)operator new(0x10uLL);
                      *v247 = v245;
                      v247[1] = v246;
                      if (v594)
                      {
                        v595 = (unint64_t *)v594;
                        operator delete(v594);
                      }
                      v594 = v247;
                      v595 = v247 + 2;
                      v596 = v247 + 2;
                    }
                    if (!a3[22])
                    {
                      v249 = *((_DWORD *)v591 + 28);
                      v248 = *((_DWORD *)v591 + 29);
                      *(_QWORD *)v625 = &off_250ADB778;
                      sub_23946936C((uint64_t)v591, (uint64_t)&v625[8]);
                      sub_239713FB0(v625, 0, task_info_out, COERCE_UNSIGNED_INT64((float)(320.0 / (float)v249)), COERCE_UNSIGNED_INT64((float)(320.0 / (float)v248)));
                      v250 = nullsub_4(&v625[32]);
                      v251 = *(std::__shared_weak_count **)&v625[16];
                      if (*(_QWORD *)&v625[16])
                      {
                        v252 = (unint64_t *)(*(_QWORD *)&v625[16] + 8);
                        do
                          v253 = __ldaxr(v252);
                        while (__stlxr(v253 - 1, v252));
                        if (!v253)
                        {
                          ((void (*)(std::__shared_weak_count *, __n128))v251->__on_zero_shared)(v251, v250);
                          std::__shared_weak_count::__release_weak(v251);
                        }
                      }
                      j_nullsub_4_89(v625);
                      v254 = *a3;
                      v255 = (std::__shared_weak_count *)operator new(0xA0uLL);
                      v255->__shared_owners_ = 0;
                      p_shared_owners = (unint64_t *)&v255->__shared_owners_;
                      v255->__shared_weak_owners_ = 0;
                      v255->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBE68;
                      v255[1].__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBEA0;
                      sub_239469644((uint64_t)task_info_out, (uint64_t)&v255[1].__shared_owners_);
                      v572[2] = (uint64_t)&v255[1];
                      v573 = v255;
                      v257 = *a1;
                      *(_QWORD *)v625 = sub_239A9AA50;
                      *(_QWORD *)&v625[8] = 0;
                      *(_QWORD *)&v625[16] = v254;
                      *(_QWORD *)&v625[24] = v255 + 1;
                      *(_QWORD *)&v625[32] = v255;
                      do
                        v258 = __ldxr(p_shared_owners);
                      while (__stxr(v258 + 1, p_shared_owners));
                      v554[0] = 0;
                      *(_QWORD *)&v625[40] = v257;
                      sub_239B2E920((uint64_t)v625, (uint64_t)v554);
                      do
                        v259 = __ldaxr(p_shared_owners);
                      while (__stlxr(v259 - 1, p_shared_owners));
                      if (!v259)
                      {
                        ((void (*)(std::__shared_weak_count *))v255->__on_zero_shared)(v255);
                        std::__shared_weak_count::__release_weak(v255);
                      }
                      v260 = v573;
                      if (v573)
                      {
                        v261 = (unint64_t *)&v573->__shared_owners_;
                        do
                          v262 = __ldaxr(v261);
                        while (__stlxr(v262 - 1, v261));
                        if (!v262)
                        {
                          ((void (*)(std::__shared_weak_count *))v260->__on_zero_shared)(v260);
                          std::__shared_weak_count::__release_weak(v260);
                        }
                      }
                      v263 = nullsub_4(v639);
                      v264 = *(std::__shared_weak_count **)&task_info_out[16];
                      if (*(_QWORD *)&task_info_out[16])
                      {
                        v265 = (unint64_t *)(*(_QWORD *)&task_info_out[16] + 8);
                        do
                          v266 = __ldaxr(v265);
                        while (__stlxr(v266 - 1, v265));
                        if (!v266)
                        {
                          ((void (*)(std::__shared_weak_count *, __n128))v264->__on_zero_shared)(v264, v263);
                          std::__shared_weak_count::__release_weak(v264);
                        }
                      }
                      j_nullsub_4_89(task_info_out);
                    }
                    v267 = (uint64_t)v589;
                    if (!v589 || !*(_BYTE *)(a3[56] + 1664))
                      goto LABEL_475;
                    sub_2395647D4((uint64_t)v589, task_info_out);
                    v268 = a3[2];
                    v572[0] = v267;
                    v572[1] = v590;
                    if (v590)
                    {
                      v269 = (unint64_t *)(v590 + 8);
                      do
                        v270 = __ldxr(v269);
                      while (__stxr(v270 + 1, v269));
                    }
                    v271 = *a1;
                    v648[0] = &off_250AF58F0;
                    v649 = v648;
                    sub_239B2EBE8(v268, v572, v271, v648);
                    v272 = v649;
                    if (v649 == v648)
                    {
                      v273 = 4;
                      v272 = v648;
                    }
                    else
                    {
                      if (!v649)
                        goto LABEL_473;
                      v273 = 5;
                    }
                    (*(void (**)(void))(*v272 + 8 * v273))();
LABEL_473:
                    sub_239416DA0((uint64_t)v572);
                    v274 = *(_QWORD *)task_info_out;
                    *(_QWORD *)task_info_out = 0;
                    if (v274)
                      (*(void (**)(uint64_t))(*(_QWORD *)v274 + 8))(v274);
LABEL_475:
                    v275 = (_QWORD *)a3[52];
                    if (!v275)
                    {
                      v286 = 0;
                      v276 = 0.0;
                      goto LABEL_539;
                    }
                    v276 = 0.0;
                    if (!*v275 || v598 - (_QWORD)v597 != 128)
                    {
                      v286 = 0;
                      goto LABEL_537;
                    }
                    sub_2395F78C4((uint64_t)task_info_out);
                    LOBYTE(v570) = 0;
                    v571 = 0;
                    v569[0] = 0;
                    v569[24] = 0;
                    sub_2395D38BC((uint64_t)task_info_outCnt, (uint64_t)task_info_out, &v570, 0, (uint64_t)v569);
                    v636 = 0u;
                    v637 = 0u;
                    v634 = 0u;
                    v635 = 0u;
                    v632 = 0u;
                    v633 = 0u;
                    v630 = 0u;
                    v631 = 0u;
                    v628 = 0u;
                    v629 = 0u;
                    v626 = 0u;
                    v627 = 0u;
                    memset(v625, 0, sizeof(v625));
                    v618 = v597[1];
                    v617 = *v597;
                    v620 = v597[3];
                    v619 = v597[2];
                    v622 = v597[5];
                    v621 = v597[4];
                    v624 = v597[7];
                    v623 = v597[6];
                    v277.i64[0] = vdupq_laneq_s64(v621, 1).u64[0];
                    v278 = vzip2q_s64(v617, v619);
                    v277.i64[1] = v623.i64[1];
                    v279 = vzip1q_s64(v618, v620);
                    v280 = vzip2q_s64(v618, v620);
                    *(_QWORD *)&v281.f64[0] = vdupq_laneq_s64(v622, 1).u64[0];
                    *(_QWORD *)&v281.f64[1] = v624.i64[1];
                    v617 = vzip1q_s64(v617, v619);
                    v618 = vzip1q_s64(v621, v623);
                    v619 = v278;
                    v620 = v277;
                    v621 = v279;
                    v622 = vzip1q_s64(v622, v624);
                    v623 = v280;
                    v624 = (int64x2_t)v281;
                    sub_239B2EE50((uint64_t)v554, (uint64_t)&v617, *(double *)v280.i64, *(double *)v278.i64, v281);
                    v626 = v557;
                    v627 = v558;
                    v628 = v559;
                    v629 = v560;
                    *(_OWORD *)v625 = *(_OWORD *)v554;
                    *(_OWORD *)&v625[16] = *(_OWORD *)&v554[16];
                    *(_OWORD *)&v625[32] = v555;
                    *(_OWORD *)&v625[48] = v556;
                    v632 = v563;
                    v633 = v564;
                    v630 = v561;
                    v631 = v562;
                    v636 = v567;
                    v637 = v568;
                    v634 = v565;
                    v635 = v566;
                    if (!sub_2394AEBA4((float64x2_t *)v625, 0.0001))
                    {
                      sub_239A444D4((uint64_t)"unknown file", 616, (uint64_t)"", (void (*)(void *))sub_239A4463C);
                      sub_239A4475C();
                      abort();
                    }
                    sub_239B2EF9C((uint64_t)v554, (float64x2_t *)v625);
                    v282 = *(_QWORD *)v594;
                    v283 = *((_QWORD *)v594 + 1);
                    v553 = *(_QWORD *)v594 | ((unint64_t)v283 << 32);
                    *(_QWORD *)&v523[4] = v585;
                    if (v585)
                    {
                      sub_2396BF99C((uint64_t)task_info_out, (int *)&v553, (uint64_t)v585, (float64x2_t *)v554, (uint64_t)&v613);
                      data = (int)v613.__r_.__value_.__l.__data_;
                      if (LODWORD(v613.__r_.__value_.__l.__data_) >= HIDWORD(v613.__r_.__value_.__r.__words[0])
                        || (v285 = HIDWORD(v613.__r_.__value_.__r.__words[1]),
                            LODWORD(v613.__r_.__value_.__r.__words[1]) > HIDWORD(v613.__r_.__value_.__r.__words[1])))
                      {
                        data = 0;
                        v521 = 0;
                        v522 = *(_DWORD *)v594 - 1;
                        v285 = *((_DWORD *)v594 + 2) - 1;
                      }
                      else
                      {
                        v521 = v613.__r_.__value_.__r.__words[1];
                        v522 = HIDWORD(v613.__r_.__value_.__r.__words[0]);
                      }
                      v520 = v285;
                      *(_DWORD *)v523 = data;
                      LODWORD(v282) = v553;
                      LODWORD(v283) = HIDWORD(v553);
                    }
                    else
                    {
                      v522 = 0;
                      *(_QWORD *)v523 = (v282 - 1);
                      v520 = 0;
                      v521 = v283 - 1;
                    }
                    sub_239B2F2C4((float64x2_t *)&v613, (float64x2_t *)v554);
                    v288 = 0;
                    v289 = (double)v283 + -1.0;
                    v290 = (double)v282 + -1.0;
                    *(_QWORD *)&v291.f64[0] = v613.__r_.__value_.__r.__words[2];
                    _Q2.f64[0] = v616;
                    *(_QWORD *)&v291.f64[0] = *(_OWORD *)&vsubq_f64(v291, _Q2);
                    _D3 = vsubq_f64(*(float64x2_t *)&v613, v615).f64[1];
                    __asm { FMLA            D2, D3, V0.D[1] }
                    v519 = sqrt(vmlad_n_f64(_Q2.f64[0], v291.f64[0], v291.f64[0]));
                    v295 = v640;
                    _D20 = v643;
                    v297 = v642;
                    v298 = v644;
                    v299 = v645;
                    v300.f64[0] = v647;
                    v306 = v646;
                    v301 = LOBYTE(v639[0]);
                    v302 = v639[1];
                    v303 = *(float64x2_t *)task_info_out;
                    v304 = *(float64x2_t *)&task_info_out[16];
                    v305 = 0.0;
                    *(_QWORD *)&v306.f64[1] = vextq_s8((int8x16_t)v306, (int8x16_t)v306, 8uLL).u64[0];
                    v307 = 1.0;
                    v550 = 0.0;
                    v308 = v289;
                    v309 = 0.0;
                    v310 = v290;
                    v311 = 0.0;
                    v312 = v289;
                    v313 = 0.0;
                    v314 = v290;
                    v533 = v289;
                    v532 = v640;
                    v530 = v642;
                    v531 = v643;
                    v528 = v645;
                    v529 = v644;
                    v526 = v306;
                    v527 = v300;
                    v524 = *(float64x2_t *)&task_info_out[16];
                    v525 = *(float64x2_t *)task_info_out;
                    while (1)
                    {
                      v321 = *(double *)&v613.__r_.__value_.__r.__words[v288 + 2];
                      _Q1 = *(float64x2_t *)((char *)&v613.__r_.__value_.__l.__data_ + v288 * 8);
                      __asm { FMLA            D3, D20, V1.D[1] }
                      v287.f64[0] = _D3 + v299 * v321;
                      _Q31 = vdivq_f64(vaddq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v295, _Q1.f64[0]), v297, _Q1, 1), v298, v321), v306), (float64x2_t)vdupq_lane_s64(*(_OWORD *)&vaddq_f64(v287, v300), 0));
                      if (v301 != 2)
                      {
                        if (v301 == 1)
                        {
                          _Q0 = *(float64x2_t *)(v302 + 24);
                          _D5 = _Q0.f64[1];
                          __asm { FMLA            D1, D5, V0.D[1] }
                          v327 = sqrt(_D1);
                          _D6 = _Q31.f64[1];
                          __asm { FMLA            D1, D6, V31.D[1] }
                          v330 = vmulq_n_f64(_Q31, *(double *)v302 * *(double *)&_D1+ v307+ *(double *)(v302 + 8) * (*(double *)&_D1 * *(double *)&_D1)+ *(double *)(v302 + 16) * (*(double *)&_D1 * (*(double *)&_D1 * *(double *)&_D1)));
                          if (v327 <= 2.22507386e-308)
                            _Q31 = v330;
                          else
                            _Q31 = vaddq_f64(vaddq_f64(vmulq_n_f64(vaddq_f64(_Q0, _Q0), vmulq_laneq_f64(_Q31, _Q31, 1).f64[0]), vmulq_f64((float64x2_t)vextq_s8((int8x16_t)_Q0, (int8x16_t)_Q0, 8uLL), vaddq_f64((float64x2_t)vdupq_lane_s64(_D1, 0), vmulq_f64(_Q31, vaddq_f64(_Q31, _Q31))))), v330);
                        }
                        goto LABEL_490;
                      }
                      v331 = vaddvq_f64(vmulq_f64(_Q31, _Q31));
                      v332 = 1.0;
                      if (v331 >= 0.0000000149011612)
                      {
                        v534 = *(double *)v302;
                        v535 = *(double *)(v302 + 8);
                        v536 = *(double *)(v302 + 16);
                        v537 = *(double *)(v302 + 24);
                        v538 = sqrt(v331);
                        v546 = v287;
                        v539 = _Q31;
                        v333 = atan2(v538, 1.0);
                        _Q31 = v539;
                        v287 = v546;
                        v307 = 1.0;
                        v304 = v524;
                        v303 = v525;
                        v306 = v526;
                        v300 = v527;
                        v299 = v528;
                        v298 = v529;
                        v297 = v530;
                        _D20 = v531;
                        v295 = v532;
                        v290 = (double)v282 + -1.0;
                        v289 = v533;
                        if (v333 > 1.57079633)
                          goto LABEL_490;
                        v332 = (v333
                              + v534 * (v333 * (v333 * v333))
                              + v535 * (v333 * v333 * (v333 * (v333 * v333)))
                              + v536 * (v333 * v333 * (v333 * v333 * (v333 * (v333 * v333))))
                              + v537 * (v333 * v333 * (v333 * v333 * (v333 * v333 * (v333 * (v333 * v333))))))
                             / v538;
                      }
                      _Q31 = vmulq_n_f64(_Q31, v332);
LABEL_490:
                      v316 = vaddq_f64(vmulq_f64(_Q31, v303), v304);
                      if (v287.f64[0] + v300.f64[0] > v305)
                        v305 = v287.f64[0] + v300.f64[0];
                      if (v316.f64[0] >= v310)
                        v317 = v310;
                      else
                        v317 = v316.f64[0];
                      v310 = fmax(v317, 0.0);
                      if (v309 >= v316.f64[0])
                        v318 = v309;
                      else
                        v318 = v316.f64[0];
                      if (v318 >= v290)
                        v309 = v290;
                      else
                        v309 = v318;
                      if (v316.f64[1] >= v308)
                        v319 = v308;
                      else
                        v319 = v316.f64[1];
                      v308 = fmax(v319, 0.0);
                      v320 = v550;
                      if (v550 < v316.f64[1])
                        v320 = v316.f64[1];
                      if (v320 >= v289)
                        v320 = v289;
                      v550 = v320;
                      if (v316.f64[0] < v314)
                        v314 = v316.f64[0];
                      if (v313 < v316.f64[0])
                        v313 = v316.f64[0];
                      if (v316.f64[1] < v312)
                        v312 = v316.f64[1];
                      if (v311 < v316.f64[1])
                        v311 = v316.f64[1];
                      v288 += 3;
                      if (v288 == 24)
                      {
                        v335 = v522;
                        v334 = *(_DWORD *)v523;
                        v337 = v520;
                        v336 = v521;
                        if (!*(_QWORD *)&v523[4])
                        {
                          v334 = v310;
                          v335 = v309;
                          v336 = v308;
                          v337 = v320;
                        }
                        v338 = operator new(0x28uLL);
                        v338[1] = 0;
                        v338[2] = 0;
                        *((_DWORD *)v338 + 6) = v334;
                        *v338 = &off_250AF5938;
                        *((_DWORD *)v338 + 7) = v335;
                        *((_DWORD *)v338 + 8) = v336;
                        *((_DWORD *)v338 + 9) = v337;
                        *(_QWORD *)&v552 = v338 + 3;
                        *((_QWORD *)&v552 + 1) = v338;
                        sub_239B24AF0((uint64_t)&v581, &v552);
                        sub_239A4D7C0((uint64_t)&v552);
                        v339 = a3[52];
                        if (*(_DWORD *)(v339 + 112) == 2)
                        {
                          v340 = (v309 - v310 + 1.0) * (v550 - v308 + 1.0);
                          v341 = v340 / (double)(HIDWORD(v553) * v553);
                          v342 = v340 / ((v313 - v314 + 1.0) * (v311 - v312 + 1.0));
                          if (v341 <= 0.9 && v342 >= 0.5)
                          {
                            v286 = 1;
                            goto LABEL_536;
                          }
                          v344 = *(float **)v339;
                          *(_QWORD *)&v552 = *a1;
                          v345 = sub_239B2F458(v344, v552, &v552);
                          v345[6] = v334;
                          v345[7] = v335;
                          v286 = 2;
                        }
                        else
                        {
                          v346 = *(float **)v339;
                          *(_QWORD *)&v552 = *a1;
                          v345 = sub_239B2F458(v346, v552, &v552);
                          v286 = 0;
                          v345[6] = v334;
                          v345[7] = v335;
                        }
                        v345[8] = v336;
                        v345[9] = v337;
LABEL_536:
                        v347 = v519;
                        v276 = v347 * 0.5 + v305;
                        sub_2395D4668((uint64_t)task_info_out);
                        v275 = (_QWORD *)a3[52];
                        if (v275)
                        {
LABEL_537:
                          v348 = (float *)v275[4];
                          if (v348)
                          {
                            *(_QWORD *)task_info_out = *a1;
                            *((_DWORD *)sub_239B2F8B8(v348, *(unint64_t *)task_info_out, task_info_out) + 6) = v286;
                          }
                        }
LABEL_539:
                        v349 = (uint64_t)v587;
                        if (v587)
                        {
                          sub_2395647D4((uint64_t)v587, task_info_out);
                          v350 = a3[8];
                          v351 = v588;
                          if (v588)
                          {
                            v352 = (unint64_t *)&v588->__shared_owners_;
                            do
                              v353 = __ldxr(v352);
                            while (__stxr(v353 + 1, v352));
                          }
                          v354 = *a1;
                          v611[0] = &off_250AF5970;
                          v612 = v611;
                          sub_239B2FD1C(v350, v349, v351, v354, v611);
                          v355 = v612;
                          if (v612 == v611)
                          {
                            v356 = 4;
                            v355 = v611;
LABEL_547:
                            (*(void (**)(void))(*v355 + 8 * v356))();
                          }
                          else if (v612)
                          {
                            v356 = 5;
                            goto LABEL_547;
                          }
                          if (v351)
                          {
                            v357 = (unint64_t *)&v351->__shared_owners_;
                            do
                              v358 = __ldaxr(v357);
                            while (__stlxr(v358 - 1, v357));
                            if (!v358)
                            {
                              ((void (*)(std::__shared_weak_count *))v351->__on_zero_shared)(v351);
                              std::__shared_weak_count::__release_weak(v351);
                            }
                          }
                          v359 = *(_QWORD *)task_info_out;
                          *(_QWORD *)task_info_out = 0;
                          if (v359)
                            (*(void (**)(uint64_t))(*(_QWORD *)v359 + 8))(v359);
                        }
                        v360 = (uint64_t)v585;
                        if (v585)
                        {
                          *(_QWORD *)task_info_out = &off_250ADD920;
                          sub_23982662C((uint64_t)&task_info_out[8], (uint64_t)(v585 + 1));
                          v540 = v286;
                          LOWORD(v641) = *(_WORD *)(v360 + 80);
                          sub_2395795F0((uint64_t)task_info_out, v625);
                          if (HIDWORD(v640.f64[0]))
                          {
                            v361 = 0;
                            v362 = 0;
                            v363 = HIDWORD(v640.f64[1]);
                            v364.i64[0] = 0x3400000034000000;
                            v364.i64[1] = 0x3400000034000000;
                            __asm { FMOV            V5.4S, #1.0 }
                            v366 = (int8x16_t)vdupq_n_s32(0x49742400u);
                            v547 = v366;
                            v551 = _Q5;
                            while (1)
                            {
                              v367 = v639[0];
                              if ((_BYTE)v641)
                                v368 = v639[0] == 0;
                              else
                                v368 = 1;
                              if (!v368)
                              {
                                (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)&task_info_out[8]
                                                                                      + 88))(*(_QWORD *)&task_info_out[8], 1, "unknown location");
                                v367 = v639[0];
                                v364.i64[0] = 0x3400000034000000;
                                v364.i64[1] = 0x3400000034000000;
                                v366 = v547;
                                _Q5 = v551;
                              }
                              v369 = LODWORD(v640.f64[0]);
                              if (!LODWORD(v640.f64[0]))
                                goto LABEL_558;
                              v370 = (float *)(v367 + 4 * (v363 * v362));
                              if (LODWORD(v640.f64[0]) <= 7)
                                break;
                              v371 = LODWORD(v640.f64[0]) & 0xFFFFFFF8;
                              v372 = (float32x4_t *)(v367 + 4 * v361 + 16);
                              v373 = v371;
                              do
                              {
                                v374 = vbslq_s8((int8x16_t)vcgeq_f32(v364, *v372), v366, (int8x16_t)vdivq_f32(_Q5, *v372));
                                v372[-1] = (float32x4_t)vbslq_s8((int8x16_t)vcgeq_f32(v364, v372[-1]), v366, (int8x16_t)vdivq_f32(_Q5, v372[-1]));
                                *v372 = (float32x4_t)v374;
                                v372 += 2;
                                v373 -= 8;
                              }
                              while (v373);
                              if (v371 != v369)
                              {
                                v370 += v369 & 0xFFFFFFF8;
LABEL_571:
                                v375 = v369 - v371;
                                do
                                {
                                  v376 = 1000000.0;
                                  if (*v370 > 0.00000011921)
                                    v376 = 1.0 / *v370;
                                  *v370++ = v376;
                                  --v375;
                                }
                                while (v375);
                              }
LABEL_558:
                              ++v362;
                              v361 += v363;
                              if (v362 >= HIDWORD(v640.f64[0]))
                                goto LABEL_576;
                            }
                            LODWORD(v371) = 0;
                            goto LABEL_571;
                          }
LABEL_576:
                          v377 = a3[8];
                          v378 = (std::__shared_weak_count *)operator new(0x70uLL);
                          v378->__shared_owners_ = 0;
                          v379 = (unint64_t *)&v378->__shared_owners_;
                          v378->__shared_weak_owners_ = 0;
                          v378->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5880;
                          v378[1].__vftable = (std::__shared_weak_count_vtbl *)&off_250ADD920;
                          sub_23982662C((uint64_t)&v378[1].__shared_owners_, (uint64_t)&task_info_out[8]);
                          LOWORD(v378[4].__shared_owners_) = v641;
                          v380 = *a1;
                          v609[0] = &off_250AF59B8;
                          v610 = v609;
                          sub_239B2FD1C(v377, (uint64_t)&v378[1], v378, v380, v609);
                          v381 = v610;
                          if (v610 == v609)
                          {
                            v382 = 4;
                            v381 = v609;
                            v286 = v540;
LABEL_580:
                            (*(void (**)(void))(*v381 + 8 * v382))();
                          }
                          else
                          {
                            v286 = v540;
                            if (v610)
                            {
                              v382 = 5;
                              goto LABEL_580;
                            }
                          }
                          do
                            v383 = __ldaxr(v379);
                          while (__stlxr(v383 - 1, v379));
                          if (!v383)
                          {
                            ((void (*)(std::__shared_weak_count *))v378->__on_zero_shared)(v378);
                            std::__shared_weak_count::__release_weak(v378);
                          }
                          v384 = *(_QWORD *)v625;
                          *(_QWORD *)v625 = 0;
                          if (v384)
                            (*(void (**)(uint64_t))(*(_QWORD *)v384 + 8))(v384);
                          sub_239416DA0((uint64_t)&task_info_out[8]);
                          v182 = nullsub_4(task_info_out);
                        }
                        if (*(_BYTE *)(a3[56] + 1664) && v585 && v276 > 0.0)
                        {
                          v385 = *(float **)(a3[52] + 48);
                          *(_QWORD *)task_info_out = *a1;
                          *((float *)sub_239B2FF70(v385, *(unint64_t *)task_info_out, task_info_out) + 6) = v276;
                        }
                        v386 = a1[3];
                        v387 = (std::__shared_weak_count *)a1[4];
                        if (v387)
                        {
                          v388 = (unint64_t *)&v387->__shared_owners_;
                          do
                            v389 = __ldxr(v388);
                          while (__stxr(v389 + 1, v388));
                          v390 = *(unsigned __int8 *)(v386 + 480);
                          v391 = (unint64_t *)&v387->__shared_owners_;
                          do
                            v392 = __ldaxr(v391);
                          while (__stlxr(v392 - 1, v391));
                          if (!v392)
                          {
                            ((void (*)(std::__shared_weak_count *, __n128))v387->__on_zero_shared)(v387, v182);
                            std::__shared_weak_count::__release_weak(v387);
                          }
                          if (!v390)
                          {
LABEL_612:
                            if (a3[22])
                            {
                              v401 = (char *)operator new(0xA8uLL);
                              *((_QWORD *)v401 + 1) = 0;
                              *((_QWORD *)v401 + 2) = 0;
                              *(_QWORD *)v401 = &off_250AFAC20;
                              *(_OWORD *)(v401 + 56) = 0u;
                              *(_OWORD *)(v401 + 72) = 0u;
                              *(_OWORD *)(v401 + 88) = 0u;
                              *(_OWORD *)(v401 + 104) = 0u;
                              *(_OWORD *)(v401 + 120) = 0u;
                              *(_OWORD *)(v401 + 136) = 0u;
                              *(_OWORD *)(v401 + 152) = 0u;
                              *(_OWORD *)(v401 + 40) = 0u;
                              *(_OWORD *)(v401 + 24) = 0u;
                              *(_QWORD *)v625 = v401 + 24;
                              *(_QWORD *)&v625[8] = v401;
                              *((_DWORD *)v401 + 6) = *a1;
                              if (v543)
                                sub_239B306D0((uint64_t)(v401 + 40), (uint64_t *)&v575);
                              else
                                sub_239B307B8((uint64_t)(v401 + 40), (uint64_t *)&v591);
                              if (*(_BYTE *)(a3[56] + 1664))
                              {
                                v402 = (uint64_t)v589;
                                v403 = v590;
                                if (v590)
                                {
                                  v404 = (unint64_t *)(v590 + 8);
                                  do
                                    v405 = __ldxr(v404);
                                  while (__stxr(v405 + 1, v404));
                                }
                              }
                              else
                              {
                                v402 = 0;
                                v403 = 0;
                              }
                              v406 = *(_QWORD *)v625;
                              v407 = *(std::__shared_weak_count **)(*(_QWORD *)v625 + 48);
                              *(_QWORD *)(*(_QWORD *)v625 + 40) = v402;
                              *(_QWORD *)(v406 + 48) = v403;
                              if (v407)
                              {
                                v408 = (unint64_t *)&v407->__shared_owners_;
                                do
                                  v409 = __ldaxr(v408);
                                while (__stlxr(v409 - 1, v408));
                                if (!v409)
                                {
                                  ((void (*)(std::__shared_weak_count *))v407->__on_zero_shared)(v407);
                                  std::__shared_weak_count::__release_weak(v407);
                                }
                              }
                              v410 = operator new(0x178uLL);
                              v410[1] = 0;
                              v410[2] = 0;
                              *v410 = &off_250AF6F30;
                              v411 = sub_2395A7198((uint64_t)(v410 + 3), (uint64_t)task_info_outCnt);
                              v417 = *(_QWORD *)v625;
                              v418 = *(std::__shared_weak_count **)(*(_QWORD *)v625 + 80);
                              *(_QWORD *)(*(_QWORD *)v625 + 72) = v411;
                              *(_QWORD *)(v417 + 80) = v410;
                              if (v418)
                              {
                                v419 = (unint64_t *)&v418->__shared_owners_;
                                do
                                  v420 = __ldaxr(v419);
                                while (__stlxr(v420 - 1, v419));
                                if (!v420)
                                {
                                  ((void (*)(std::__shared_weak_count *))v418->__on_zero_shared)(v418);
                                  std::__shared_weak_count::__release_weak(v418);
                                }
                              }
                              v421 = *(_QWORD *)v625;
                              v422 = v581;
                              v423 = v582;
                              if (v582)
                              {
                                v424 = (unint64_t *)&v582->__shared_owners_;
                                do
                                  v425 = __ldxr(v424);
                                while (__stxr(v425 + 1, v424));
                              }
                              v426 = *(std::__shared_weak_count **)(v421 + 64);
                              *(_QWORD *)(v421 + 56) = v422;
                              *(_QWORD *)(v421 + 64) = v423;
                              if (v426)
                              {
                                v427 = (unint64_t *)&v426->__shared_owners_;
                                do
                                  v428 = __ldaxr(v427);
                                while (__stlxr(v428 - 1, v427));
                                if (!v428)
                                {
                                  ((void (*)(std::__shared_weak_count *))v426->__on_zero_shared)(v426);
                                  std::__shared_weak_count::__release_weak(v426);
                                }
                              }
                              v429 = *(_QWORD *)v625;
                              *(_DWORD *)(*(_QWORD *)v625 + 4) = v286;
                              v430 = *(std::__shared_weak_count **)(v429 + 96);
                              *(_QWORD *)(v429 + 88) = 0;
                              *(_QWORD *)(v429 + 96) = 0;
                              if (v430)
                              {
                                v431 = (unint64_t *)&v430->__shared_owners_;
                                do
                                  v432 = __ldaxr(v431);
                                while (__stlxr(v432 - 1, v431));
                                if (!v432)
                                {
                                  ((void (*)(std::__shared_weak_count *))v430->__on_zero_shared)(v430);
                                  std::__shared_weak_count::__release_weak(v430);
                                }
                              }
                              v433 = *(_QWORD *)v625;
                              *(float *)(*(_QWORD *)v625 + 120) = v276;
                              if (*(_BYTE *)(a3[56] + 1664))
                              {
                                v434 = (uint64_t)v585;
                                v435 = v586;
                                if (v586)
                                {
                                  v436 = (unint64_t *)&v586->__shared_owners_;
                                  do
                                    v437 = __ldxr(v436);
                                  while (__stxr(v437 + 1, v436));
                                }
                              }
                              else
                              {
                                v434 = 0;
                                v435 = 0;
                              }
                              v438 = a4;
                              v439 = *(std::__shared_weak_count **)(v433 + 136);
                              *(_QWORD *)(v433 + 128) = v434;
                              *(_QWORD *)(v433 + 136) = v435;
                              if (v439)
                              {
                                v440 = (unint64_t *)&v439->__shared_owners_;
                                do
                                  v441 = __ldaxr(v440);
                                while (__stlxr(v441 - 1, v440));
                                if (!v441)
                                {
                                  ((void (*)(std::__shared_weak_count *))v439->__on_zero_shared)(v439);
                                  std::__shared_weak_count::__release_weak(v439);
                                }
                              }
                              if (sub_239B29DD4(v412, v413, v414, v415, v416))
                              {
                                v442 = a1[3];
                                v443 = a1[4];
                                *(_QWORD *)task_info_out = v442;
                                *(_QWORD *)&task_info_out[8] = v443;
                                if (v443)
                                {
                                  v444 = (unint64_t *)(v443 + 8);
                                  do
                                    v445 = __ldxr(v444);
                                  while (__stxr(v445 + 1, v444));
                                }
                                v446 = *(unsigned __int8 *)(v442 + 480);
                                sub_239A4D7C0((uint64_t)task_info_out);
                                if (v446)
                                {
                                  v447 = a1[3];
                                  v448 = a1[4];
                                  *(_QWORD *)v554 = v447;
                                  *(_QWORD *)&v554[8] = v448;
                                  if (v448)
                                  {
                                    v449 = (unint64_t *)(v448 + 8);
                                    do
                                      v450 = __ldxr(v449);
                                    while (__stxr(v450 + 1, v449));
                                  }
                                  if (!*(_BYTE *)(v447 + 480))
                                    sub_2394875CC();
                                  sub_2396B6B9C((uint64_t *)(v447 + 448), *((unsigned __int8 *)a3 + 644), 1, (uint64_t)task_info_out, *((float *)a3 + 158), *((float *)a3 + 157), *((float *)a3 + 159), *((float *)a3 + 160));
                                  sub_239A4D7C0((uint64_t)v554);
                                  sub_239B30898(v554, (__int128 **)task_info_out);
                                  sub_239B24AF0(*(_QWORD *)v625 + 88, (__int128 *)v554);
                                  sub_239A4D7C0((uint64_t)v554);
                                  if (*(_QWORD *)task_info_out)
                                  {
                                    *(_QWORD *)&task_info_out[8] = *(_QWORD *)task_info_out;
                                    operator delete(*(void **)task_info_out);
                                  }
                                }
                              }
                              v451 = v438[3];
                              if (v451)
                              {
                                if ((_QWORD *)v451 != v438)
                                {
                                  v451 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v451 + 16))(v451);
                                  goto LABEL_670;
                                }
                                v607 = v606;
                                (*(void (**)(_QWORD *, _QWORD *))(*v438 + 24))(v438, v606);
                              }
                              else
                              {
LABEL_670:
                                v607 = (_QWORD *)v451;
                              }
                              v608 = a3;
                              *(_QWORD *)&task_info_out[24] = 0;
                              v452 = operator new(0x30uLL);
                              v453 = v452;
                              *v452 = &off_250AF5A38;
                              v454 = v452 + 1;
                              if (v607)
                              {
                                if (v607 != v606)
                                {
                                  v455 = &v607;
                                  v452[4] = v607;
                                  goto LABEL_676;
                                }
                                v452[4] = v454;
                                (*(void (**)(_QWORD *))(v606[0] + 24))(v606);
                                v456 = v608;
                              }
                              else
                              {
                                v455 = v452 + 4;
LABEL_676:
                                *v455 = 0;
                                v456 = a3;
                              }
                              v453[5] = v456;
                              *(_QWORD *)&task_info_out[24] = v453;
                              v457 = v607;
                              if (v607 == v606)
                              {
                                v458 = 4;
                                v457 = v606;
LABEL_682:
                                (*(void (**)(void))(*v457 + 8 * v458))();
                                v453 = *(_QWORD **)&task_info_out[24];
                                v459 = a3[22];
                                if (!*(_QWORD *)&task_info_out[24])
                                {
                                  v460 = 0;
                                  goto LABEL_688;
                                }
                                if (*(_BYTE **)&task_info_out[24] != task_info_out)
                                  goto LABEL_687;
                                v605 = v604;
                                (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)task_info_out + 24))(task_info_out, v604);
                              }
                              else
                              {
                                if (v607)
                                {
                                  v458 = 5;
                                  goto LABEL_682;
                                }
                                v459 = a3[22];
LABEL_687:
                                v460 = (*(uint64_t (**)(_QWORD *, _QWORD *))(*v453 + 16))(v453, v454);
LABEL_688:
                                v605 = (_BYTE *)v460;
                              }
                              (*(void (**)(uint64_t, _BYTE *, _BYTE *))(*(_QWORD *)v459 + 16))(v459, v625, v604);
                              v461 = v605;
                              if (v605 == v604)
                              {
                                v462 = 4;
                                v461 = v604;
LABEL_693:
                                (*(void (**)(void))(*v461 + 8 * v462))();
                              }
                              else if (v605)
                              {
                                v462 = 5;
                                goto LABEL_693;
                              }
                              v463 = *(_QWORD **)&task_info_out[24];
                              if (*(_BYTE **)&task_info_out[24] == task_info_out)
                              {
                                v464 = 4;
                                v463 = task_info_out;
LABEL_698:
                                (*(void (**)(void))(*v463 + 8 * v464))();
                              }
                              else if (*(_QWORD *)&task_info_out[24])
                              {
                                v464 = 5;
                                goto LABEL_698;
                              }
                              v465 = *(std::__shared_weak_count **)&v625[8];
                              if (*(_QWORD *)&v625[8])
                              {
                                v466 = (unint64_t *)(*(_QWORD *)&v625[8] + 8);
                                do
                                  v467 = __ldaxr(v466);
                                while (__stlxr(v467 - 1, v466));
                                if (!v467)
                                {
                                  ((void (*)(std::__shared_weak_count *))v465->__on_zero_shared)(v465);
                                  std::__shared_weak_count::__release_weak(v465);
                                }
                              }
                            }
                            v468 = v576;
                            if (v576)
                            {
                              v469 = (unint64_t *)&v576->__shared_owners_;
                              do
                                v470 = __ldaxr(v469);
                              while (__stlxr(v470 - 1, v469));
                              if (!v470)
                              {
                                ((void (*)(std::__shared_weak_count *, __n128))v468->__on_zero_shared)(v468, v182);
                                std::__shared_weak_count::__release_weak(v468);
                              }
                            }
                            v471 = v578;
                            if (v578)
                            {
                              v472 = (unint64_t *)&v578->__shared_owners_;
                              do
                                v473 = __ldaxr(v472);
                              while (__stlxr(v473 - 1, v472));
                              if (!v473)
                              {
                                ((void (*)(std::__shared_weak_count *, __n128))v471->__on_zero_shared)(v471, v182);
                                std::__shared_weak_count::__release_weak(v471);
                              }
                            }
                            if (v542 < 0)
                              operator delete(v541);
                            if (SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) < 0)
                              operator delete(__src.__pn_.__r_.__value_.__l.__data_);
                            v474 = a3[10];
                            v475 = *(_QWORD *)(v474 + 184);
                            if (v475 >= *(_QWORD *)(v474 + 192))
                            {
                              v476 = sub_239B309BC((void **)(v474 + 176), (uint64_t)task_info_outCnt);
                            }
                            else
                            {
                              sub_2395A6544(v474 + 192, *(_QWORD *)(v474 + 184), task_info_outCnt);
                              v476 = (char *)(v475 + 352);
                            }
                            *(_QWORD *)(v474 + 184) = v476;
                            v477 = *a1;
                            v479 = (unint64_t *)a3[15];
                            v478 = a3[16];
                            if ((unint64_t)v479 >= v478)
                            {
                              v481 = (unint64_t *)*v45;
                              v482 = (char *)v479 - (_BYTE *)*v45;
                              v483 = v482 >> 3;
                              v484 = (v482 >> 3) + 1;
                              if (v484 >> 61)
                                sub_2394189F8();
                              v485 = v478 - (_QWORD)v481;
                              if (v485 >> 2 > v484)
                                v484 = v485 >> 2;
                              if ((unint64_t)v485 >= 0x7FFFFFFFFFFFFFF8)
                                v486 = 0x1FFFFFFFFFFFFFFFLL;
                              else
                                v486 = v484;
                              if (v486)
                              {
                                if (v486 >> 61)
                                  sub_239418A80();
                                v487 = operator new(8 * v486);
                              }
                              else
                              {
                                v487 = 0;
                              }
                              v488 = (unint64_t *)&v487[8 * v483];
                              v489 = &v487[8 * v486];
                              *v488 = v477;
                              v480 = v488 + 1;
                              if (v479 != v481)
                              {
                                v490 = (char *)v479 - (char *)v481 - 8;
                                if (v490 < 0x58)
                                  goto LABEL_791;
                                if ((unint64_t)((char *)v479 - v487 - v482) < 0x20)
                                  goto LABEL_791;
                                v491 = (v490 >> 3) + 1;
                                v492 = &v487[8 * v483 - 16];
                                v493 = v479 - 2;
                                v494 = v491 & 0x3FFFFFFFFFFFFFFCLL;
                                do
                                {
                                  v495 = *(_OWORD *)v493;
                                  *(v492 - 1) = *((_OWORD *)v493 - 1);
                                  *v492 = v495;
                                  v492 -= 2;
                                  v493 -= 4;
                                  v494 -= 4;
                                }
                                while (v494);
                                v488 -= v491 & 0x3FFFFFFFFFFFFFFCLL;
                                v479 -= v491 & 0x3FFFFFFFFFFFFFFCLL;
                                if (v491 != (v491 & 0x3FFFFFFFFFFFFFFCLL))
                                {
LABEL_791:
                                  do
                                  {
                                    v496 = *--v479;
                                    *--v488 = v496;
                                  }
                                  while (v479 != v481);
                                }
                              }
                              a3[14] = (uint64_t)v488;
                              a3[15] = (uint64_t)v480;
                              a3[16] = (uint64_t)v489;
                              if (v481)
                                operator delete(v481);
                            }
                            else
                            {
                              *v479 = v477;
                              v480 = v479 + 1;
                            }
                            v53 = 0;
                            a3[15] = (uint64_t)v480;
                            goto LABEL_743;
                          }
                        }
                        else if (!*(_BYTE *)(v386 + 480))
                        {
                          goto LABEL_612;
                        }
                        v393 = a1[3];
                        v394 = (std::__shared_weak_count *)a1[4];
                        *(_QWORD *)task_info_out = v393;
                        *(_QWORD *)&task_info_out[8] = v394;
                        if (v394)
                        {
                          v395 = (unint64_t *)&v394->__shared_owners_;
                          do
                            v396 = __ldxr(v395);
                          while (__stxr(v396 + 1, v395));
                        }
                        if (!*(_BYTE *)(v393 + 480))
                          sub_2394875CC();
                        v397 = a3[12];
                        *(_QWORD *)v625 = *a1;
                        v398 = (char **)sub_239B303D4(v397, *(unint64_t *)v625, v625);
                        if (v398 + 3 != (char **)(v393 + 448))
                          sub_239A571B4(v398 + 3, *(__int128 **)(v393 + 448), *(__int128 **)(v393 + 456), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(v393 + 456) - *(_QWORD *)(v393 + 448)) >> 3));
                        *((_BYTE *)v398 + 48) = *(_BYTE *)(v393 + 472);
                        if (v394)
                        {
                          v399 = (unint64_t *)&v394->__shared_owners_;
                          do
                            v400 = __ldaxr(v399);
                          while (__stlxr(v400 - 1, v399));
                          if (!v400)
                          {
                            ((void (*)(std::__shared_weak_count *))v394->__on_zero_shared)(v394);
                            std::__shared_weak_count::__release_weak(v394);
                          }
                        }
                        goto LABEL_612;
                      }
                    }
                  }
                  v545 = v191;
                  sub_23979D0F0((uint64_t)(a3 + 62), task_info_out);
                  v194 = *(_QWORD *)task_info_out;
                  v195 = *(std::__shared_weak_count **)&task_info_out[8];
                  if (*(_QWORD *)&task_info_out[8])
                  {
                    v196 = (unint64_t *)(*(_QWORD *)&task_info_out[8] + 8);
                    do
                      v197 = __ldaxr(v196);
                    while (__stlxr(v197 - 1, v196));
                    if (!v197)
                    {
                      ((void (*)(std::__shared_weak_count *))v195->__on_zero_shared)(v195);
                      std::__shared_weak_count::__release_weak(v195);
                    }
                  }
                  if (v194)
                  {
                    v198 = sub_23979C610((uint64_t)(a3 + 62));
                    v199 = (uint64_t)v575;
                    if (v198 == sub_23979C610((uint64_t)v575))
                    {
LABEL_372:
                      if ((sub_239710484(a3[60], v199, (uint64_t)(a3 + 62)) & 0xFF00000000) != 0)
                      {
                        v204 = v576;
                        if (v576)
                        {
                          v205 = (unint64_t *)&v576->__shared_owners_;
                          do
                            v206 = __ldaxr(v205);
                          while (__stlxr(v206 - 1, v205));
                          if (!v206)
                          {
                            ((void (*)(std::__shared_weak_count *))v204->__on_zero_shared)(v204);
                            std::__shared_weak_count::__release_weak(v204);
                          }
                        }
                        v207 = v578;
                        if (v578)
                        {
                          v208 = (unint64_t *)&v578->__shared_owners_;
                          do
                            v209 = __ldaxr(v208);
                          while (__stlxr(v209 - 1, v208));
                          if (!v209)
                          {
                            ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
                            std::__shared_weak_count::__release_weak(v207);
                          }
                        }
                        if (v542 < 0)
                          operator delete(v541);
                        if (SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) < 0)
                          operator delete(__src.__pn_.__r_.__value_.__l.__data_);
                        v53 = 4294967278;
                        goto LABEL_743;
                      }
                      v211 = a3[63];
                      v210 = a3[64];
                      v574[0] = &off_250AE94F0;
                      v574[1] = v211;
                      v574[2] = v210;
                      if (v210)
                      {
                        v212 = (unint64_t *)(v210 + 8);
                        do
                          v213 = __ldxr(v212);
                        while (__stxr(v213 + 1, v212));
                      }
                      sub_239785B2C((uint64_t)v574, (uint64_t)v625);
                      v613.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250ADB1D0;
                      *(_OWORD *)&v613.__r_.__value_.__r.__words[1] = *(_OWORD *)&v625[8];
                      *(_QWORD *)&v625[8] = 0;
                      *(_QWORD *)&v625[16] = 0;
                      *(_OWORD *)v614 = *(_OWORD *)&v625[24];
                      *(_OWORD *)&v614[14] = *(_OWORD *)&v625[38];
                      v214 = nullsub_4(&v625[24]);
                      v215 = *(std::__shared_weak_count **)&v625[16];
                      if (*(_QWORD *)&v625[16])
                      {
                        v216 = (unint64_t *)(*(_QWORD *)&v625[16] + 8);
                        do
                          v217 = __ldaxr(v216);
                        while (__stlxr(v217 - 1, v216));
                        if (!v217)
                        {
                          ((void (*)(std::__shared_weak_count *, __n128))v215->__on_zero_shared)(v215, v214);
                          std::__shared_weak_count::__release_weak(v215);
                        }
                      }
                      v218 = nullsub_4(v625);
                      *(_QWORD *)v554 = &off_250ADB210;
                      v219 = *(_OWORD *)&v613.__r_.__value_.__r.__words[1];
                      if (v613.__r_.__value_.__r.__words[2])
                      {
                        v220 = (unint64_t *)(v613.__r_.__value_.__r.__words[2] + 8);
                        do
                          v221 = __ldxr(v220);
                        while (__stxr(v221 + 1, v220));
                        v222 = *(_QWORD *)&v614[16];
                        v223 = *(_DWORD *)&v614[24];
                        v224 = *(_WORD *)&v614[28];
                        do
                          v225 = __ldxr(v220);
                        while (__stxr(v225 + 1, v220));
                      }
                      else
                      {
                        v222 = *(_QWORD *)&v614[16];
                        v223 = *(_DWORD *)&v614[24];
                        v224 = *(_WORD *)&v614[28];
                      }
                      *(_OWORD *)&v554[8] = v219;
                      *(_QWORD *)&v554[24] = *(_QWORD *)v614;
                      LODWORD(v555) = *(_DWORD *)&v614[8];
                      *((_QWORD *)&v555 + 1) = v222;
                      LODWORD(v556) = v223;
                      WORD2(v556) = v224;
                      if (*((_QWORD *)&v219 + 1))
                      {
                        v226 = (unint64_t *)(*((_QWORD *)&v219 + 1) + 8);
                        do
                          v227 = __ldaxr(v226);
                        while (__stlxr(v227 - 1, v226));
                        if (!v227)
                        {
                          (*(void (**)(_QWORD, __n128))(**((_QWORD **)&v219 + 1) + 16))(*((_QWORD *)&v219 + 1), v218);
                          std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v219 + 1));
                        }
                      }
                      sub_2397078F8((uint64_t)v554, 21, task_info_out);
                      v228 = (std::__shared_weak_count *)operator new(0xA0uLL);
                      v228->__shared_owners_ = 0;
                      v228->__shared_weak_owners_ = 0;
                      v228->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBE68;
                      v228[1].__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBEA0;
                      sub_239469644((uint64_t)task_info_out, (uint64_t)&v228[1].__shared_owners_);
                      v229 = v592;
                      v591 = &v228[1].__vftable;
                      v592 = v228;
                      if (v229)
                      {
                        v230 = (unint64_t *)&v229->__shared_owners_;
                        do
                          v231 = __ldaxr(v230);
                        while (__stlxr(v231 - 1, v230));
                        if (!v231)
                        {
                          ((void (*)(std::__shared_weak_count *))v229->__on_zero_shared)(v229);
                          std::__shared_weak_count::__release_weak(v229);
                        }
                      }
                      v232 = nullsub_4(v639);
                      v233 = *(std::__shared_weak_count **)&task_info_out[16];
                      if (*(_QWORD *)&task_info_out[16])
                      {
                        v234 = (unint64_t *)(*(_QWORD *)&task_info_out[16] + 8);
                        do
                          v235 = __ldaxr(v234);
                        while (__stlxr(v235 - 1, v234));
                        if (!v235)
                        {
                          ((void (*)(std::__shared_weak_count *, __n128))v233->__on_zero_shared)(v233, v232);
                          std::__shared_weak_count::__release_weak(v233);
                        }
                      }
                      j_nullsub_4_89(task_info_out);
                      v236 = nullsub_4(&v554[24]);
                      v237 = *(std::__shared_weak_count **)&v554[16];
                      if (*(_QWORD *)&v554[16])
                      {
                        v238 = (unint64_t *)(*(_QWORD *)&v554[16] + 8);
                        do
                          v239 = __ldaxr(v238);
                        while (__stlxr(v239 - 1, v238));
                        if (!v239)
                        {
                          ((void (*)(std::__shared_weak_count *, __n128))v237->__on_zero_shared)(v237, v236);
                          std::__shared_weak_count::__release_weak(v237);
                        }
                      }
                      nullsub_4(v554);
                      v240 = nullsub_4(v614);
                      v241 = (std::__shared_weak_count *)v613.__r_.__value_.__r.__words[2];
                      if (v613.__r_.__value_.__r.__words[2])
                      {
                        v242 = (unint64_t *)(v613.__r_.__value_.__r.__words[2] + 8);
                        do
                          v243 = __ldaxr(v242);
                        while (__stlxr(v243 - 1, v242));
                        if (!v243)
                        {
                          ((void (*)(std::__shared_weak_count *, __n128))v241->__on_zero_shared)(v241, v240);
                          std::__shared_weak_count::__release_weak(v241);
                        }
                      }
                      nullsub_4(&v613);
                      sub_23979BCF4(v574);
                      v191 = v545;
                      goto LABEL_430;
                    }
                  }
                  else
                  {
                    v199 = (uint64_t)v575;
                  }
                  *(_QWORD *)v554 = sub_23979C610(v199);
                  *(_QWORD *)v625 = operator new(0xA0uLL);
                  *(_OWORD *)&v625[8] = xmmword_239EC64A0;
                  strcpy(*(char **)v625, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/include/Kit/CoreVideo/PixelBufferRef.h:216");
                  sub_23979BD68((uint64_t)task_info_out, (unsigned int *)v554, 0x20u, (uint64_t)v625, 1u);
                  v200 = *(_OWORD *)&task_info_out[8];
                  *(_QWORD *)&task_info_out[16] = 0;
                  *(_QWORD *)&task_info_out[8] = 0;
                  v201 = (std::__shared_weak_count *)a3[64];
                  *(_OWORD *)(a3 + 63) = v200;
                  if (v201)
                  {
                    v202 = (unint64_t *)&v201->__shared_owners_;
                    do
                      v203 = __ldaxr(v202);
                    while (__stlxr(v203 - 1, v202));
                    if (!v203)
                    {
                      ((void (*)(std::__shared_weak_count *))v201->__on_zero_shared)(v201);
                      std::__shared_weak_count::__release_weak(v201);
                    }
                  }
                  sub_23979BCF4(task_info_out);
                  if ((v625[23] & 0x80000000) != 0)
                    operator delete(*(void **)v625);
                  v199 = (uint64_t)v575;
                  goto LABEL_372;
                }
LABEL_317:
                operator delete(*(void **)task_info_out);
                goto LABEL_313;
              }
            }
            else if ((SHIBYTE(v613.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
              goto LABEL_312;
            }
            operator delete(v613.__r_.__value_.__l.__data_);
            if ((task_info_out[23] & 0x80000000) == 0)
              goto LABEL_313;
            goto LABEL_317;
          }
        }
        else if ((SHIBYTE(v613.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_298;
        }
        operator delete(v613.__r_.__value_.__l.__data_);
        if ((v625[23] & 0x80000000) == 0)
          goto LABEL_299;
        goto LABEL_304;
      }
    }
    else if ((v554[23] & 0x80000000) == 0)
    {
      goto LABEL_276;
    }
    operator delete(*(void **)v554);
    if ((task_info_out[23] & 0x80000000) == 0)
      goto LABEL_277;
    goto LABEL_290;
  }
  v93 = v58[51];
  *(_QWORD *)v554 = v58[50];
  *(_QWORD *)&v554[8] = v93;
  if (v93)
  {
    v94 = (unint64_t *)(v93 + 8);
    do
      v95 = __ldxr(v94);
    while (__stxr(v95 + 1, v94));
  }
  (**v92)(&v613);
  *(_QWORD *)v625 = &off_250ADB210;
  sub_23955C704((uint64_t)v613.__r_.__value_.__l.__data_, (uint64_t)&v625[8]);
  sub_2397078F8((uint64_t)v625, 4, task_info_out);
  v96 = (std::__shared_weak_count *)operator new(0x70uLL);
  v96->__shared_owners_ = 0;
  v96->__shared_weak_owners_ = 0;
  v96->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5880;
  v96[1].__vftable = (std::__shared_weak_count_vtbl *)&off_250ADD920;
  sub_239541EE0((uint64_t)task_info_out, (uint64_t)&v96[1].__shared_owners_);
  v97 = v588;
  v587 = &v96[1].__vftable;
  v588 = v96;
  if (v97)
  {
    v98 = (unint64_t *)&v97->__shared_owners_;
    do
      v99 = __ldaxr(v98);
    while (__stlxr(v99 - 1, v98));
    if (!v99)
    {
      ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
      std::__shared_weak_count::__release_weak(v97);
    }
  }
  v100 = nullsub_4(v639);
  v101 = *(std::__shared_weak_count **)&task_info_out[16];
  if (*(_QWORD *)&task_info_out[16])
  {
    v102 = (unint64_t *)(*(_QWORD *)&task_info_out[16] + 8);
    do
      v103 = __ldaxr(v102);
    while (__stlxr(v103 - 1, v102));
    if (!v103)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v101->__on_zero_shared)(v101, v100);
      std::__shared_weak_count::__release_weak(v101);
    }
  }
  j_nullsub_4_89(task_info_out);
  v104 = nullsub_4(&v625[24]);
  v105 = *(std::__shared_weak_count **)&v625[16];
  if (*(_QWORD *)&v625[16])
  {
    v106 = (unint64_t *)(*(_QWORD *)&v625[16] + 8);
    do
      v107 = __ldaxr(v106);
    while (__stlxr(v107 - 1, v106));
    if (!v107)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v105->__on_zero_shared)(v105, v104);
      std::__shared_weak_count::__release_weak(v105);
    }
  }
  v108 = nullsub_4(v625);
  v109 = (std::__shared_weak_count *)v613.__r_.__value_.__l.__size_;
  if (v613.__r_.__value_.__l.__size_)
  {
    v110 = (unint64_t *)(v613.__r_.__value_.__l.__size_ + 8);
    do
      v111 = __ldaxr(v110);
    while (__stlxr(v111 - 1, v110));
    if (!v111)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v109->__on_zero_shared)(v109, v108);
      std::__shared_weak_count::__release_weak(v109);
    }
  }
  v113 = *((_DWORD *)v587 + 16);
  v112 = *((_DWORD *)v587 + 17);
  if (v113 <= v112)
    v114 = v112;
  else
    v114 = v113;
  if (v112 >= v113)
    v115 = *((_DWORD *)v587 + 16);
  else
    v115 = *((_DWORD *)v587 + 17);
  v116 = 4294967282;
  if (v65 >= v114 && v115 >= 3)
  {
    v121 = *((_DWORD *)v594 + 2);
    v108.n128_u32[0] = *(_DWORD *)v594;
    v108.n128_f64[0] = (double)v108.n128_u64[0] / (double)v113 * (double)v112;
    v122 = v108.n128_f64[0] - v121;
    if (v108.n128_f64[0] <= v121)
      v122 = v121 - v108.n128_f64[0];
    v118 = v122 > 5;
    if (v122 <= 5)
      v116 = 4294967288;
    else
      v116 = 4294967282;
  }
  else
  {
    v118 = 1;
  }
  if (*(_QWORD *)&v554[8])
  {
    v123 = (unint64_t *)(*(_QWORD *)&v554[8] + 8);
    do
      v124 = __ldaxr(v123);
    while (__stlxr(v124 - 1, v123));
    if (!v124)
    {
      (*(void (**)(_QWORD, __n128))(**(_QWORD **)&v554[8] + 16))(*(_QWORD *)&v554[8], v108);
      std::__shared_weak_count::__release_weak(*(std::__shared_weak_count **)&v554[8]);
    }
  }
  if (v118)
  {
    v53 = v116;
    goto LABEL_743;
  }
  v58 = v602;
  v120 = (void (***)(std::string *__return_ptr))v602[52];
  if (!v120)
    goto LABEL_270;
LABEL_218:
  v125 = v58[53];
  *(_QWORD *)v554 = v120;
  *(_QWORD *)&v554[8] = v125;
  if (v125)
  {
    v126 = (unint64_t *)(v125 + 8);
    do
      v127 = __ldxr(v126);
    while (__stxr(v127 + 1, v126));
  }
  (**v120)(&v613);
  *(_QWORD *)v625 = &off_250ADB210;
  sub_23955C704((uint64_t)v613.__r_.__value_.__l.__data_, (uint64_t)&v625[8]);
  sub_2397078F8((uint64_t)v625, 4, task_info_out);
  v128 = (std::__shared_weak_count *)operator new(0x70uLL);
  v128->__shared_owners_ = 0;
  v128->__shared_weak_owners_ = 0;
  v128->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5880;
  v128[1].__vftable = (std::__shared_weak_count_vtbl *)&off_250ADD920;
  sub_239541EE0((uint64_t)task_info_out, (uint64_t)&v128[1].__shared_owners_);
  v129 = v586;
  v585 = &v128[1].__vftable;
  v586 = v128;
  if (v129)
  {
    v130 = (unint64_t *)&v129->__shared_owners_;
    do
      v131 = __ldaxr(v130);
    while (__stlxr(v131 - 1, v130));
    if (!v131)
    {
      ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
      std::__shared_weak_count::__release_weak(v129);
    }
  }
  v132 = nullsub_4(v639);
  v133 = *(std::__shared_weak_count **)&task_info_out[16];
  if (*(_QWORD *)&task_info_out[16])
  {
    v134 = (unint64_t *)(*(_QWORD *)&task_info_out[16] + 8);
    do
      v135 = __ldaxr(v134);
    while (__stlxr(v135 - 1, v134));
    if (!v135)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v133->__on_zero_shared)(v133, v132);
      std::__shared_weak_count::__release_weak(v133);
    }
  }
  j_nullsub_4_89(task_info_out);
  v136 = nullsub_4(&v625[24]);
  v137 = *(std::__shared_weak_count **)&v625[16];
  if (*(_QWORD *)&v625[16])
  {
    v138 = (unint64_t *)(*(_QWORD *)&v625[16] + 8);
    do
      v139 = __ldaxr(v138);
    while (__stlxr(v139 - 1, v138));
    if (!v139)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v137->__on_zero_shared)(v137, v136);
      std::__shared_weak_count::__release_weak(v137);
    }
  }
  v140 = nullsub_4(v625);
  v141 = (std::__shared_weak_count *)v613.__r_.__value_.__l.__size_;
  if (v613.__r_.__value_.__l.__size_)
  {
    v142 = (unint64_t *)(v613.__r_.__value_.__l.__size_ + 8);
    do
      v143 = __ldaxr(v142);
    while (__stlxr(v143 - 1, v142));
    if (!v143)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v141->__on_zero_shared)(v141, v140);
      std::__shared_weak_count::__release_weak(v141);
    }
  }
  v145 = *((_DWORD *)v585 + 16);
  v144 = *((_DWORD *)v585 + 17);
  if (v145 <= v144)
    v146 = v144;
  else
    v146 = v145;
  if (v144 >= v145)
    v147 = *((_DWORD *)v585 + 16);
  else
    v147 = *((_DWORD *)v585 + 17);
  if (v65 < v146 || v147 < 3)
    goto LABEL_263;
  v149 = *((_DWORD *)v594 + 2);
  v140.n128_u32[0] = *(_DWORD *)v594;
  v140.n128_f64[0] = (double)v140.n128_u64[0] / (double)v145 * (double)v144;
  v150 = v140.n128_f64[0] - v149;
  if (v140.n128_f64[0] <= v149)
    v150 = v149 - v140.n128_f64[0];
  if (v150 <= 5)
  {
    v151 = (void (***)(std::__fs::filesystem::path *__return_ptr))v602[54];
    if (!v151)
      goto LABEL_261;
    v152 = v602[55];
    v613.__r_.__value_.__r.__words[0] = v602[54];
    v613.__r_.__value_.__l.__size_ = v152;
    if (v152)
    {
      v153 = (unint64_t *)(v152 + 8);
      do
        v154 = __ldxr(v153);
      while (__stxr(v154 + 1, v153));
    }
    (**v151)(&__src);
    sub_239B2E7CC(v625, (uint64_t)__src.__pn_.__r_.__value_.__l.__data_);
    sub_2397078F8((uint64_t)v625, 4, task_info_out);
    v548 = a4;
    sub_239B2E818(&v617, (uint64_t)task_info_out);
    sub_239B24AF0((uint64_t)&v583, (__int128 *)v617.i8);
    sub_239416DA0((uint64_t)&v617);
    sub_239422DD0((uint64_t)task_info_out);
    sub_239416FF8((uint64_t)v625);
    sub_239A4D7C0((uint64_t)&__src);
    v155 = *(_DWORD *)(v583 + 64);
    v544 = *(_DWORD *)(v583 + 68);
    sub_239A4D7C0((uint64_t)&v613);
    v156 = 0;
    v53 = 4294967267;
    if (v155 != v145)
    {
      a4 = v548;
      v157 = *(std::__shared_weak_count **)&v554[8];
      if (!*(_QWORD *)&v554[8])
        goto LABEL_269;
      goto LABEL_265;
    }
    a4 = v548;
    if (v544 == v144)
    {
LABEL_261:
      v156 = 1;
      v53 = v116;
      v157 = *(std::__shared_weak_count **)&v554[8];
      if (!*(_QWORD *)&v554[8])
        goto LABEL_269;
      goto LABEL_265;
    }
  }
  else
  {
LABEL_263:
    v156 = 0;
    v53 = 4294967268;
  }
  v157 = *(std::__shared_weak_count **)&v554[8];
  if (!*(_QWORD *)&v554[8])
    goto LABEL_269;
LABEL_265:
  v158 = (unint64_t *)&v157->__shared_owners_;
  do
    v159 = __ldaxr(v158);
  while (__stlxr(v159 - 1, v158));
  if (!v159)
  {
    ((void (*)(std::__shared_weak_count *))v157->__on_zero_shared)(v157);
    std::__shared_weak_count::__release_weak(v157);
  }
LABEL_269:
  if ((v156 & 1) != 0)
    goto LABEL_270;
LABEL_743:
  v497 = v582;
  if (v582)
  {
    v498 = (unint64_t *)&v582->__shared_owners_;
    do
      v499 = __ldaxr(v498);
    while (__stlxr(v499 - 1, v498));
    if (!v499)
    {
      ((void (*)(std::__shared_weak_count *))v497->__on_zero_shared)(v497);
      std::__shared_weak_count::__release_weak(v497);
    }
  }
  v500 = v584;
  if (v584)
  {
    v501 = (unint64_t *)&v584->__shared_owners_;
    do
      v502 = __ldaxr(v501);
    while (__stlxr(v502 - 1, v501));
    if (!v502)
    {
      ((void (*)(std::__shared_weak_count *))v500->__on_zero_shared)(v500);
      std::__shared_weak_count::__release_weak(v500);
    }
  }
  v503 = v586;
  if (v586)
  {
    v504 = (unint64_t *)&v586->__shared_owners_;
    do
      v505 = __ldaxr(v504);
    while (__stlxr(v505 - 1, v504));
    if (!v505)
    {
      ((void (*)(std::__shared_weak_count *))v503->__on_zero_shared)(v503);
      std::__shared_weak_count::__release_weak(v503);
    }
  }
  v506 = v588;
  if (v588)
  {
    v507 = (unint64_t *)&v588->__shared_owners_;
    do
      v508 = __ldaxr(v507);
    while (__stlxr(v508 - 1, v507));
    if (!v508)
    {
      ((void (*)(std::__shared_weak_count *))v506->__on_zero_shared)(v506);
      std::__shared_weak_count::__release_weak(v506);
    }
  }
  v509 = (std::__shared_weak_count *)v590;
  if (v590)
  {
    v510 = (unint64_t *)(v590 + 8);
    do
      v511 = __ldaxr(v510);
    while (__stlxr(v511 - 1, v510));
    if (!v511)
    {
      ((void (*)(std::__shared_weak_count *))v509->__on_zero_shared)(v509);
      std::__shared_weak_count::__release_weak(v509);
    }
  }
  v512 = v592;
  if (v592)
  {
    v513 = (unint64_t *)&v592->__shared_owners_;
    do
      v514 = __ldaxr(v513);
    while (__stlxr(v514 - 1, v513));
    if (!v514)
    {
      ((void (*)(std::__shared_weak_count *))v512->__on_zero_shared)(v512);
      std::__shared_weak_count::__release_weak(v512);
    }
  }
  sub_2395A0DF8((uint64_t)task_info_outCnt);
  v515 = v603;
  if (v603)
  {
    v516 = (unint64_t *)&v603->__shared_owners_;
    do
      v517 = __ldaxr(v516);
    while (__stlxr(v517 - 1, v516));
    if (!v517)
    {
      ((void (*)(std::__shared_weak_count *))v515->__on_zero_shared)(v515);
      std::__shared_weak_count::__release_weak(v515);
    }
  }
  return v53;
}

void sub_239B2E09C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *__p,int a44)
{
  sub_2395D4668((uint64_t)&STACK[0x7C0]);
  sub_239A4D7C0((uint64_t)&STACK[0x2E8]);
  sub_239A4D7C0((uint64_t)&STACK[0x2F8]);
  if (a44 < 0)
    operator delete(__p);
  if (SLOBYTE(STACK[0x327]) < 0)
    operator delete((void *)STACK[0x310]);
  sub_239A4D7C0((uint64_t)&STACK[0x328]);
  sub_239416DA0((uint64_t)&STACK[0x338]);
  sub_239416DA0((uint64_t)&STACK[0x348]);
  sub_239416DA0((uint64_t)&STACK[0x358]);
  sub_239416DA0((uint64_t)&STACK[0x368]);
  sub_239416DA0((uint64_t)&STACK[0x378]);
  sub_2395A0DF8((uint64_t)&STACK[0x388]);
  sub_239A4D7C0((uint64_t)&STACK[0x4E8]);
  _Unwind_Resume(a1);
}

void sub_239B2E7AC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B2E7CC(_QWORD *a1, uint64_t a2)
{
  *a1 = &off_250ADB210;
  sub_23955C704(a2, (uint64_t)(a1 + 1));
  return a1;
}

void sub_239B2E804(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239B2E818(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = operator new(0x70uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_250AF5880;
  v4[3] = &off_250ADD920;
  sub_239541EE0(a2, (uint64_t)(v4 + 4));
  *a1 = v4 + 3;
  a1[1] = v4;
}

void sub_239B2E87C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  void *v4;

  nullsub_4(v2);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_239B2E89C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = operator new(0xA0uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_250ADBE68;
  v4[3] = &off_250ADBEA0;
  sub_239469644(a2, (uint64_t)(v4 + 4));
  *a1 = v4 + 3;
  a1[1] = v4;
}

void sub_239B2E900(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  void *v4;

  nullsub_4(v2);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

uint64_t sub_239B2E920(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)());
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t (***v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unsigned int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  pthread_cond_t v28;
  pthread_cond_t v29;
  pthread_mutex_t v30;
  uint64_t (**v31)();
  __int128 v32;
  uint64_t (***v33)();
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  sub_2397A1618(&v30);
  v21 = 0x7FFFFFFF;
  pthread_cond_init(&v28, 0);
  pthread_cond_init(&v29, 0);
  *(_QWORD *)&v4 = &v21;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(uint64_t (**)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)()))a1;
  v7 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v5 >> 1));
  if ((v5 & 1) != 0)
    v6 = *(uint64_t (**)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)()))(*v7 + v6);
  *((_QWORD *)&v4 + 1) = a2;
  v8 = *(std::__shared_weak_count **)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 24);
  v20 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  v11 = *(_QWORD *)(a1 + 40);
  v31 = &off_250AF6760;
  v32 = v4;
  v33 = &v31;
  v12 = v6(v7, &v19, v11, &v31);
  v13 = v33;
  if (v33 == &v31)
  {
    v14 = 4;
    v13 = &v31;
    goto LABEL_10;
  }
  if (v33)
  {
    v14 = 5;
LABEL_10:
    (*v13)[v14]();
  }
  v15 = v20;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      if (!v12)
        return sub_2395C29C4((uint64_t)&v21);
      goto LABEL_16;
    }
  }
  if (v12)
  {
LABEL_16:
    sub_2395BFB54(&v21);
    sub_2395C2A4C((uint64_t)&v21);
  }
  return sub_2395C29C4((uint64_t)&v21);
}

void sub_239B2EAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B2EB6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

uint64_t sub_239B2EB90(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

uint64_t sub_239B2EBE8(uint64_t a1, uint64_t *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v22;
  uint64_t v23[2];
  std::__shared_weak_count *v24;
  char v25;
  _BYTE v26[24];
  _BYTE *v27;
  _QWORD v28[34];

  v28[33] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 337, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v4 = *a2;
  if (*a2)
  {
    v23[0] = a3;
    v23[1] = v4;
    v6 = (std::__shared_weak_count *)a2[1];
    v24 = v6;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
    }
    v25 = 0;
    v9 = v26;
    v10 = a4[3];
    if (v10)
    {
      if ((_QWORD *)v10 == a4)
      {
        v27 = v26;
        (*(void (**)(_QWORD *, _BYTE *))(*a4 + 24))(a4, v26);
LABEL_13:
        sub_239B0E288((uint64_t)v28, v23);
        v13 = operator new(0x120uLL);
        v13[1] = 0;
        v13[2] = 0;
        *v13 = &off_250AF85E0;
        *(_QWORD *)&v22 = sub_239B0CB10((uint64_t)(v13 + 3), (uint64_t)v28);
        *((_QWORD *)&v22 + 1) = v13;
        sub_239A82E8C(v28);
        if (v27 == v26)
        {
          v14 = 4;
        }
        else
        {
          if (!v27)
            goto LABEL_18;
          v14 = 5;
          v9 = v27;
        }
        (*(void (**)(_QWORD *))(*v9 + 8 * v14))(v9);
LABEL_18:
        v15 = v24;
        if (v24)
        {
          v16 = (unint64_t *)&v24->__shared_owners_;
          do
            v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }
        v12 = sub_239B09F38(*(unsigned int **)(a1 + 288), &v22);
        v18 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
        if (*((_QWORD *)&v22 + 1))
        {
          v19 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        return v12;
      }
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
    }
    v27 = (_BYTE *)v10;
    goto LABEL_13;
  }
  LOBYTE(v28[0]) = 0;
  v11 = a4[3];
  if (!v11)
    sub_2394172E0();
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v11 + 48))(v11, v28);
  return 1;
}

void sub_239B2EE04(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_239B2EE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239A4D7C0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239B2EE2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  sub_239A82E8C((uint64_t *)va1);
  sub_239A83110((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239B2EE50(uint64_t a1, uint64_t a2, double a3, double a4, float64x2_t a5)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  float64x2_t v9;
  float64x2_t v10;
  float64x2_t v11;
  float64x2_t v12;
  float64x2_t v13;
  uint64_t v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  __int128 v20;
  float64x2_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v31[8];
  int8x16_t v32;
  __int128 v33;
  int64x2_t v34;
  __int128 v35;
  int64x2_t v36;
  __int128 v37;
  float64x2_t v38;
  float64x2_t v39;

  v6 = *(_OWORD *)(a2 + 16);
  v32 = *(int8x16_t *)a2;
  v33 = v6;
  v7 = *(_OWORD *)(a2 + 48);
  v34 = *(int64x2_t *)(a2 + 32);
  v35 = v7;
  v8 = *(_OWORD *)(a2 + 80);
  v36 = *(int64x2_t *)(a2 + 64);
  v37 = v8;
  v11 = *(float64x2_t *)(a2 + 96);
  v9 = *(float64x2_t *)(a2 + 112);
  v38 = v11;
  v39 = v9;
  *(_QWORD *)&v9.f64[0] = v33;
  *(_QWORD *)&a5.f64[0] = v35;
  *(_QWORD *)&v10.f64[0] = v34.i64[0];
  *(_QWORD *)&v11.f64[0] = v37;
  *(_QWORD *)&v12.f64[0] = v36.i64[0];
  *(_QWORD *)&v13.f64[0] = vdupq_laneq_s64(v34, 1).u64[0];
  *(_QWORD *)&v13.f64[1] = v35;
  v14 = v37;
  *(_QWORD *)&v16.f64[1] = v36.i64[1];
  v15 = vmulq_f64(v13, v16);
  *(_QWORD *)&v16.f64[0] = v32.i64[0];
  *(_QWORD *)&v17.f64[0] = vdupq_laneq_s64(v36, 1).u64[0];
  *(_QWORD *)&v17.f64[1] = v37;
  v18 = vsubq_f64(vmulq_n_f64(v17, *(double *)v34.i64), vmulq_n_f64(v13, *(double *)v36.i64));
  *(_QWORD *)&v17.f64[0] = v33;
  *(_QWORD *)&v17.f64[1] = v32.i64[1];
  v19 = vmulq_f64(v17, v18);
  if (v19.f64[0]
     + vmuld_n_f64(*(double *)v32.i64, vsubq_f64(v15, (float64x2_t)vdupq_laneq_s64((int64x2_t)v15, 1)).f64[0])
     - v19.f64[1] < 0.0)
  {
    *(_QWORD *)&v16.f64[1] = vextq_s8(v32, v32, 8uLL).u64[0];
    *(_QWORD *)&v10.f64[1] = vextq_s8((int8x16_t)v34, (int8x16_t)v34, 8uLL).u64[0];
    *(_QWORD *)&v12.f64[1] = vextq_s8((int8x16_t)v36, (int8x16_t)v36, 8uLL).u64[0];
    v32 = (int8x16_t)vnegq_f64(v16);
    *(_QWORD *)&v33 = *(_OWORD *)&vnegq_f64(v9);
    v34 = (int64x2_t)vnegq_f64(v10);
    *(_QWORD *)&v35 = *(_OWORD *)&vnegq_f64(a5);
    v36 = (int64x2_t)vnegq_f64(v12);
    *(_QWORD *)&v37 = *(_OWORD *)&vnegq_f64(v11);
  }
  sub_239A22BE8(v31);
  v20 = v37;
  *(int64x2_t *)(a1 + 64) = v36;
  *(_OWORD *)(a1 + 80) = v20;
  v21 = v39;
  *(float64x2_t *)(a1 + 96) = v38;
  *(float64x2_t *)(a1 + 112) = v21;
  v22 = v33;
  *(int8x16_t *)a1 = v32;
  *(_OWORD *)(a1 + 16) = v22;
  v23 = v35;
  *(int64x2_t *)(a1 + 32) = v34;
  *(_OWORD *)(a1 + 48) = v23;
  v24 = v31[0];
  v25 = v31[1];
  v26 = v31[3];
  *(_OWORD *)(a1 + 160) = v31[2];
  *(_OWORD *)(a1 + 176) = v26;
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v25;
  v27 = v31[4];
  v28 = v31[5];
  v29 = v31[7];
  *(_OWORD *)(a1 + 224) = v31[6];
  *(_OWORD *)(a1 + 240) = v29;
  *(_OWORD *)(a1 + 192) = v27;
  *(_OWORD *)(a1 + 208) = v28;
  return a1;
}

double sub_239B2EF9C(uint64_t a1, float64x2_t *a2)
{
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  float64x2_t v7;
  float64x2_t v8;
  float64x2_t v9;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  float64x2_t v20;
  float64x2_t v21;
  float64x2_t v22;
  float64x2_t v24;
  float64x2_t v25;
  float64x2_t v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v39;
  float64x2_t v40;
  float64x2_t v41;
  double v42;
  float64x2_t v45;
  double v46;
  float64x2_t v49;
  float64_t v52;
  float64x2_t v53;
  float64x2_t v54;
  float64x2_t v55;
  float64x2_t v56;
  float64x2_t v57;
  float64x2_t v58;
  float64x2_t v59;
  float64x2_t v60;
  float64x2_t v61;
  float64x2_t v62;
  float64x2_t v63;
  float64x2_t v64;
  float64x2_t v65;
  float64x2_t v66;
  float64x2_t v67;
  float64x2_t v68;
  float64x2_t v69;
  float64x2_t v70;
  float64x2_t v71;
  float64x2_t v72;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  double result;
  __int128 v78;
  float64x2_t v79;
  double v80;
  __int128 v81;
  _OWORD v82[2];
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;

  v3 = a2[1];
  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  v7 = a2[5];
  v9 = a2[6];
  v8 = a2[7];
  __asm { FMOV            V7.2D, #-0.5 }
  v15 = vmulq_f64(*a2, _Q7);
  v16 = vmlaq_f64(v15, _Q7, v4);
  v17 = vmulq_f64(v3, _Q7);
  v18 = vmlaq_f64(v17, _Q7, v5);
  v19 = vaddq_f64(v8, vmlaq_f64(v18, _Q7, v7));
  v20 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v19, 1);
  v21 = vdivq_f64(vaddq_f64(v9, vmlaq_f64(v16, _Q7, v6)), v20);
  v22 = vdivq_f64(v19, v20);
  __asm { FMOV            V17.2D, #0.5 }
  v24 = vaddq_f64(v8, vmlaq_f64(v18, _Q17, v7));
  v25 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v24, 1);
  v26 = vdivq_f64(vaddq_f64(v9, vmlaq_f64(v16, _Q17, v6)), v25);
  v27 = vdivq_f64(v24, v25);
  v28 = vmlaq_f64(v15, _Q17, v4);
  v29 = vmlaq_f64(v17, _Q17, v5);
  v30 = vaddq_f64(v8, vmlaq_f64(v29, _Q7, v7));
  v31 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v30, 1);
  v32 = vdivq_f64(vaddq_f64(v9, vmlaq_f64(v28, _Q7, v6)), v31);
  v33 = vdivq_f64(v30, v31);
  v34 = vmulq_f64(*a2, _Q17);
  v35 = vmlaq_f64(v34, _Q7, v4);
  v36 = vmulq_f64(v3, _Q17);
  v37 = vmlaq_f64(v36, _Q7, v5);
  v38 = vaddq_f64(v8, vmlaq_f64(v37, _Q7, v7));
  v39 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v38, 1);
  v40 = vdivq_f64(vaddq_f64(v9, vmlaq_f64(v35, _Q7, v6)), v39);
  v41 = vdivq_f64(v38, v39);
  *(_QWORD *)&v42 = *(_OWORD *)&vsubq_f64(v22, v41);
  _D11 = vsubq_f64(v21, v40).f64[1];
  __asm { FMLA            D10, D11, V9.D[1] }
  v45.f64[0] = sqrt(vmlad_n_f64(_D10, v42, v42));
  *(_QWORD *)&v46 = *(_OWORD *)&vsubq_f64(v22, v33);
  _D12 = vsubq_f64(v21, v32).f64[1];
  __asm { FMLA            D11, D12, V9.D[1] }
  v49 = vsubq_f64(v22, v27);
  _D13 = vsubq_f64(v21, v26).f64[1];
  __asm { FMLA            D12, D13, V11.D[1] }
  v49.f64[0] = sqrt(vmlad_n_f64(_D12, v49.f64[0], v49.f64[0]));
  v45.f64[1] = sqrt(vmlad_n_f64(_D11, v46, v46));
  v52 = v7.f64[0] / v49.f64[0];
  v53 = vaddq_f64(v32, vaddq_f64(v26, vaddq_f64(v21, (float64x2_t)0)));
  v54 = vaddq_f64(v8, vmlaq_f64(v29, _Q17, v7));
  v55 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v54, 1);
  v56 = vaddq_f64(v41, vaddq_f64(vdivq_f64(v54, v55), vaddq_f64(v33, vaddq_f64(v27, vaddq_f64(v22, (float64x2_t)0)))));
  v57 = vaddq_f64(v40, vaddq_f64(vdivq_f64(vaddq_f64(v9, vmlaq_f64(v28, _Q17, v6)), v55), v53));
  v58 = vaddq_f64(v8, vmlaq_f64(v37, _Q17, v7));
  v59 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v58, 1);
  v60 = vmlaq_f64(v34, _Q17, v4);
  v61 = vaddq_f64(v9, vmlaq_f64(v60, _Q7, v6));
  v62 = vmlaq_f64(v36, _Q17, v5);
  v63 = vaddq_f64(v8, vmlaq_f64(v62, _Q7, v7));
  v64 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v63, 1);
  v65 = vaddq_f64(vdivq_f64(v63, v64), vaddq_f64(vdivq_f64(v58, v59), v56));
  v66 = vaddq_f64(vdivq_f64(v61, v64), vaddq_f64(vdivq_f64(vaddq_f64(v9, vmlaq_f64(v35, _Q17, v6)), v59), v57));
  v67 = vaddq_f64(v8, vmlaq_f64(v62, _Q17, v7));
  v68 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v67, 1);
  v69 = vdivq_f64(vaddq_f64(v9, vmlaq_f64(v60, _Q17, v6)), v68);
  v70 = vdivq_f64(v67, v68);
  v71 = vaddq_f64(v69, v66);
  v70.f64[0] = vaddq_f64(v70, v65).f64[0];
  v72 = vmulq_f64(v45, (float64x2_t)vdupq_n_s64(0x3FE5555555555555uLL));
  v69.f64[0] = 0.666666667;
  v69.f64[0] = vmulq_f64(v49, v69).f64[0];
  *((_QWORD *)&v81 + 1) = 0x3FF0000000000000;
  __asm { FMOV            V7.2D, #0.125 }
  *(double *)&v81 = 0.125 * v70.f64[0];
  v79 = vmulq_n_f64(vdivq_f64(*a2, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v45.f64[0], 0)), v72.f64[0]);
  v80 = vmuld_lane_f64(a2[3].f64[0] / v45.f64[1], v72, 1);
  *(float64x2_t *)(a1 + 96) = vmulq_f64(v71, _Q7);
  *(_OWORD *)(a1 + 112) = v81;
  *(float64x2_t *)(a1 + 64) = vmulq_n_f64(vdivq_f64(v6, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v49.f64[0], 0)), v69.f64[0]);
  *(_OWORD *)(a1 + 80) = COERCE_UNSIGNED_INT64(v52 * v69.f64[0]);
  *(float64x2_t *)(a1 + 32) = vmulq_laneq_f64(vdivq_f64(v4, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v45.f64[1], 0)), v72, 1);
  *(_OWORD *)(a1 + 48) = *(unint64_t *)&v80;
  *(float64x2_t *)a1 = v79;
  *(_OWORD *)(a1 + 16) = COERCE_UNSIGNED_INT64(v3.f64[0] / v45.f64[0] * v72.f64[0]);
  sub_239A22BE8(v82);
  v74 = v86;
  *(_OWORD *)(a1 + 192) = v85;
  *(_OWORD *)(a1 + 208) = v74;
  v75 = v88;
  *(_OWORD *)(a1 + 224) = v87;
  *(_OWORD *)(a1 + 240) = v75;
  v76 = v82[1];
  *(_OWORD *)(a1 + 128) = v82[0];
  *(_OWORD *)(a1 + 144) = v76;
  result = *(double *)&v83;
  v78 = v84;
  *(_OWORD *)(a1 + 160) = v83;
  *(_OWORD *)(a1 + 176) = v78;
  return result;
}

float64x2_t sub_239B2F2C4(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t v2;
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  float64x2_t v7;
  float64x2_t v8;
  float64x2_t v9;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  int64x2_t v19;
  float64x2_t v20;
  int64x2_t v22;
  int64x2_t v23;
  float64x2_t v24;
  float64x2_t v25;
  int64x2_t v26;
  int64x2_t v27;
  int64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  int64x2_t v33;
  float64x2_t v34;
  int64x2_t v35;
  int64x2_t v36;
  float64x2_t v37;
  float64x2_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int64x2_t v41;
  float64x2_t v42;
  float64x2_t result;

  v3 = *a2;
  v2 = a2[1];
  v5 = a2[2];
  v4 = a2[3];
  v7 = a2[4];
  v6 = a2[5];
  v9 = a2[6];
  v8 = a2[7];
  __asm { FMOV            V5.2D, #-0.5 }
  v15 = vmulq_f64(*a2, _Q5);
  v16 = vmlaq_f64(v15, _Q5, v5);
  v17 = vmulq_f64(v2, _Q5);
  v18 = vmlaq_f64(v17, _Q5, v4);
  v19 = (int64x2_t)vaddq_f64(v8, vmlaq_f64(v18, _Q5, v6));
  v20 = vdivq_f64(vaddq_f64(v9, vmlaq_f64(v16, _Q5, v7)), (float64x2_t)vdupq_laneq_s64(v19, 1));
  __asm { FMOV            V7.2D, #0.5 }
  v22 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v16, _Q7, v7));
  v23 = (int64x2_t)vaddq_f64(v8, vmlaq_f64(v18, _Q7, v6));
  *a1 = v20;
  a1[1] = vdivq_f64((float64x2_t)vzip1q_s64(v19, v22), (float64x2_t)vzip2q_s64(v19, v23));
  v24 = vmlaq_f64(v15, _Q7, v5);
  v25 = vmlaq_f64(v17, _Q7, v4);
  v26 = (int64x2_t)vaddq_f64(v8, vmlaq_f64(v25, _Q5, v6));
  a1[2] = vdivq_f64((float64x2_t)vextq_s8((int8x16_t)v22, (int8x16_t)v23, 8uLL), (float64x2_t)vdupq_laneq_s64(v23, 1));
  a1[3] = vdivq_f64(vaddq_f64(v9, vmlaq_f64(v24, _Q5, v7)), (float64x2_t)vdupq_laneq_s64(v26, 1));
  v27 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v24, _Q7, v7));
  v28 = (int64x2_t)vaddq_f64(v8, vmlaq_f64(v25, _Q7, v6));
  a1[4] = vdivq_f64((float64x2_t)vzip1q_s64(v26, v27), (float64x2_t)vzip2q_s64(v26, v28));
  a1[5] = vdivq_f64((float64x2_t)vextq_s8((int8x16_t)v27, (int8x16_t)v28, 8uLL), (float64x2_t)vdupq_laneq_s64(v28, 1));
  v29 = vmulq_f64(v3, _Q7);
  v30 = vmlaq_f64(v29, _Q5, v5);
  v31 = vmulq_f64(v2, _Q7);
  v32 = vmlaq_f64(v31, _Q5, v4);
  v33 = (int64x2_t)vaddq_f64(v8, vmlaq_f64(v32, _Q5, v6));
  v34 = vdivq_f64(vaddq_f64(v9, vmlaq_f64(v30, _Q5, v7)), (float64x2_t)vdupq_laneq_s64(v33, 1));
  v35 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v30, _Q7, v7));
  v36 = (int64x2_t)vaddq_f64(v8, vmlaq_f64(v32, _Q7, v6));
  a1[6] = v34;
  a1[7] = vdivq_f64((float64x2_t)vzip1q_s64(v33, v35), (float64x2_t)vzip2q_s64(v33, v36));
  v37 = vmlaq_f64(v29, _Q7, v5);
  v38 = vmlaq_f64(v31, _Q7, v4);
  v39 = (int64x2_t)vaddq_f64(v8, vmlaq_f64(v38, _Q5, v6));
  a1[8] = vdivq_f64((float64x2_t)vextq_s8((int8x16_t)v35, (int8x16_t)v36, 8uLL), (float64x2_t)vdupq_laneq_s64(v36, 1));
  a1[9] = vdivq_f64(vaddq_f64(v9, vmlaq_f64(v37, _Q5, v7)), (float64x2_t)vdupq_laneq_s64(v39, 1));
  v40 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v37, _Q7, v7));
  v41 = (int64x2_t)vaddq_f64(v8, vmlaq_f64(v38, _Q7, v6));
  v42 = vdivq_f64((float64x2_t)vzip1q_s64(v39, v40), (float64x2_t)vzip2q_s64(v39, v41));
  result = vdivq_f64((float64x2_t)vextq_s8((int8x16_t)v40, (int8x16_t)v41, 8uLL), (float64x2_t)vdupq_laneq_s64(v41, 1));
  a1[10] = v42;
  a1[11] = result;
  return result;
}

_QWORD *sub_239B2F458(float *a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t prime;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  size_t v24;
  size_t v25;
  size_t v26;
  _QWORD *i;
  size_t v28;
  uint64_t v29;
  unint64_t v30;
  uint8x8_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  size_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v40;

  v5 = a2;
  v7 = *((_QWORD *)a1 + 1);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (v10[2] == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (v10[2] == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v10 = operator new(0x28uLL);
  *v10 = 0;
  v10[1] = v5;
  v10[2] = *a3;
  v13 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v14 = a1[8];
  if (v7 && (float)(v14 * (float)v7) >= v13)
  {
    v5 = v3;
    goto LABEL_72;
  }
  v15 = 1;
  if (v7 >= 3)
    v15 = (v7 & (v7 - 1)) != 0;
  v16 = v15 | (2 * v7);
  v17 = vcvtps_u32_f32(v13 / v14);
  if (v16 <= v17)
    prime = v17;
  else
    prime = v16;
  if (prime == 1)
  {
    prime = 2;
  }
  else if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(prime);
    v7 = *((_QWORD *)a1 + 1);
  }
  if (prime > v7)
  {
LABEL_35:
    if (prime >> 61)
      sub_239418A80();
    v19 = operator new(8 * prime);
    v20 = *(_QWORD **)a1;
    *(_QWORD *)a1 = v19;
    if (v20)
      operator delete(v20);
    v21 = 0;
    *((_QWORD *)a1 + 1) = prime;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v21++) = 0;
    while (prime != v21);
    v23 = (uint64_t *)(a1 + 4);
    v22 = (_QWORD *)*((_QWORD *)a1 + 2);
    if (!v22)
      goto LABEL_59;
    v24 = v22[1];
    v25 = prime - 1;
    if ((prime & (prime - 1)) == 0)
    {
      v26 = v24 & v25;
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v26) = v23;
      for (i = (_QWORD *)*v22; *v22; i = (_QWORD *)*v22)
      {
        v28 = i[1] & v25;
        if (v28 == v26)
        {
          v22 = i;
        }
        else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v28))
        {
          *v22 = *i;
          v29 = 8 * v28;
          *i = **(_QWORD **)(*(_QWORD *)a1 + v29);
          **(_QWORD **)(*(_QWORD *)a1 + v29) = i;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v28) = v22;
          v22 = i;
          v26 = v28;
        }
      }
LABEL_59:
      v7 = prime;
      goto LABEL_60;
    }
    if (v24 >= prime)
      v24 %= prime;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v23;
    v33 = (_QWORD *)*v22;
    if (!*v22)
      goto LABEL_59;
    while (1)
    {
      v35 = v33[1];
      if (v35 >= prime)
        v35 %= prime;
      if (v35 != v24)
      {
        if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v35))
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v35) = v22;
          goto LABEL_64;
        }
        *v22 = *v33;
        v34 = 8 * v35;
        *v33 = **(_QWORD **)(*(_QWORD *)a1 + v34);
        **(_QWORD **)(*(_QWORD *)a1 + v34) = v33;
        v33 = v22;
      }
      v35 = v24;
LABEL_64:
      v22 = v33;
      v33 = (_QWORD *)*v33;
      v24 = v35;
      if (!v33)
        goto LABEL_59;
    }
  }
  if (prime >= v7)
    goto LABEL_60;
  v30 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
  if (v7 < 3 || (v31 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
  {
    v30 = std::__next_prime(v30);
  }
  else
  {
    v32 = 1 << -(char)__clz(v30 - 1);
    if (v30 >= 2)
      v30 = v32;
  }
  if (prime <= v30)
    prime = v30;
  if (prime < v7)
  {
    if (!prime)
    {
      v40 = *(_QWORD **)a1;
      *(_QWORD *)a1 = 0;
      if (v40)
        operator delete(v40);
      v7 = 0;
      *((_QWORD *)a1 + 1) = 0;
      goto LABEL_60;
    }
    goto LABEL_35;
  }
  v7 = *((_QWORD *)a1 + 1);
LABEL_60:
  if ((v7 & (v7 - 1)) != 0)
  {
    if (v7 <= v5)
      v5 %= v7;
  }
  else
  {
    v5 &= v7 - 1;
  }
LABEL_72:
  v36 = *(_QWORD **)a1;
  v37 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v37)
  {
    *v10 = *v37;
LABEL_80:
    *v37 = v10;
    goto LABEL_81;
  }
  *v10 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = v10;
  v36[v5] = a1 + 4;
  if (*v10)
  {
    v38 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v38 >= v7)
        v38 %= v7;
    }
    else
    {
      v38 &= v7 - 1;
    }
    v37 = (_QWORD *)(*(_QWORD *)a1 + 8 * v38);
    goto LABEL_80;
  }
LABEL_81:
  ++*((_QWORD *)a1 + 3);
  return v10;
}

void sub_239B2F8A4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B2F8B8(float *a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t prime;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  size_t v24;
  size_t v25;
  size_t v26;
  _QWORD *i;
  size_t v28;
  uint64_t v29;
  unint64_t v30;
  uint8x8_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  size_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v40;

  v5 = a2;
  v7 = *((_QWORD *)a1 + 1);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (v10[2] == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (v10[2] == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v10 = operator new(0x20uLL);
  *v10 = 0;
  v10[1] = v5;
  v10[2] = *a3;
  *((_DWORD *)v10 + 6) = 0;
  v13 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v14 = a1[8];
  if (v7 && (float)(v14 * (float)v7) >= v13)
  {
    v5 = v3;
    goto LABEL_72;
  }
  v15 = 1;
  if (v7 >= 3)
    v15 = (v7 & (v7 - 1)) != 0;
  v16 = v15 | (2 * v7);
  v17 = vcvtps_u32_f32(v13 / v14);
  if (v16 <= v17)
    prime = v17;
  else
    prime = v16;
  if (prime == 1)
  {
    prime = 2;
  }
  else if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(prime);
    v7 = *((_QWORD *)a1 + 1);
  }
  if (prime > v7)
  {
LABEL_35:
    if (prime >> 61)
      sub_239418A80();
    v19 = operator new(8 * prime);
    v20 = *(_QWORD **)a1;
    *(_QWORD *)a1 = v19;
    if (v20)
      operator delete(v20);
    v21 = 0;
    *((_QWORD *)a1 + 1) = prime;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v21++) = 0;
    while (prime != v21);
    v23 = (uint64_t *)(a1 + 4);
    v22 = (_QWORD *)*((_QWORD *)a1 + 2);
    if (!v22)
      goto LABEL_59;
    v24 = v22[1];
    v25 = prime - 1;
    if ((prime & (prime - 1)) == 0)
    {
      v26 = v24 & v25;
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v26) = v23;
      for (i = (_QWORD *)*v22; *v22; i = (_QWORD *)*v22)
      {
        v28 = i[1] & v25;
        if (v28 == v26)
        {
          v22 = i;
        }
        else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v28))
        {
          *v22 = *i;
          v29 = 8 * v28;
          *i = **(_QWORD **)(*(_QWORD *)a1 + v29);
          **(_QWORD **)(*(_QWORD *)a1 + v29) = i;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v28) = v22;
          v22 = i;
          v26 = v28;
        }
      }
LABEL_59:
      v7 = prime;
      goto LABEL_60;
    }
    if (v24 >= prime)
      v24 %= prime;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v23;
    v33 = (_QWORD *)*v22;
    if (!*v22)
      goto LABEL_59;
    while (1)
    {
      v35 = v33[1];
      if (v35 >= prime)
        v35 %= prime;
      if (v35 != v24)
      {
        if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v35))
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v35) = v22;
          goto LABEL_64;
        }
        *v22 = *v33;
        v34 = 8 * v35;
        *v33 = **(_QWORD **)(*(_QWORD *)a1 + v34);
        **(_QWORD **)(*(_QWORD *)a1 + v34) = v33;
        v33 = v22;
      }
      v35 = v24;
LABEL_64:
      v22 = v33;
      v33 = (_QWORD *)*v33;
      v24 = v35;
      if (!v33)
        goto LABEL_59;
    }
  }
  if (prime >= v7)
    goto LABEL_60;
  v30 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
  if (v7 < 3 || (v31 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
  {
    v30 = std::__next_prime(v30);
  }
  else
  {
    v32 = 1 << -(char)__clz(v30 - 1);
    if (v30 >= 2)
      v30 = v32;
  }
  if (prime <= v30)
    prime = v30;
  if (prime < v7)
  {
    if (!prime)
    {
      v40 = *(_QWORD **)a1;
      *(_QWORD *)a1 = 0;
      if (v40)
        operator delete(v40);
      v7 = 0;
      *((_QWORD *)a1 + 1) = 0;
      goto LABEL_60;
    }
    goto LABEL_35;
  }
  v7 = *((_QWORD *)a1 + 1);
LABEL_60:
  if ((v7 & (v7 - 1)) != 0)
  {
    if (v7 <= v5)
      v5 %= v7;
  }
  else
  {
    v5 &= v7 - 1;
  }
LABEL_72:
  v36 = *(_QWORD **)a1;
  v37 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v37)
  {
    *v10 = *v37;
LABEL_80:
    *v37 = v10;
    goto LABEL_81;
  }
  *v10 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = v10;
  v36[v5] = a1 + 4;
  if (*v10)
  {
    v38 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v38 >= v7)
        v38 %= v7;
    }
    else
    {
      v38 &= v7 - 1;
    }
    v37 = (_QWORD *)(*(_QWORD *)a1 + 8 * v38);
    goto LABEL_80;
  }
LABEL_81:
  ++*((_QWORD *)a1 + 3);
  return v10;
}

void sub_239B2FD08(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239B2FD1C(uint64_t a1, uint64_t a2, std::__shared_weak_count *a3, uint64_t a4, _QWORD *a5)
{
  unint64_t *p_shared_owners;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20[2];
  std::__shared_weak_count *v21;
  char v22;
  _BYTE v23[24];
  _BYTE *v24;
  _QWORD v25[34];

  v25[33] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 337, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (a2)
  {
    v20[0] = a4;
    v20[1] = a2;
    v21 = a3;
    if (a3)
    {
      p_shared_owners = (unint64_t *)&a3->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
    }
    v22 = 0;
    v8 = v23;
    v9 = a5[3];
    if (v9)
    {
      if ((_QWORD *)v9 == a5)
      {
        v24 = v23;
        (*(void (**)(_QWORD *, _BYTE *))(*a5 + 24))(a5, v23);
LABEL_13:
        sub_239AA43A0((uint64_t)v25, v20);
        v11 = operator new(0x120uLL);
        v11[1] = 0;
        v11[2] = 0;
        *v11 = &off_250AF93E8;
        *(_QWORD *)&v19 = sub_239AA2C28((uint64_t)(v11 + 3), (uint64_t)v25);
        *((_QWORD *)&v19 + 1) = v11;
        sub_239A82E8C(v25);
        if (v24 == v23)
        {
          v12 = 4;
        }
        else
        {
          if (!v24)
            goto LABEL_18;
          v12 = 5;
          v8 = v24;
        }
        (*(void (**)(_QWORD *))(*v8 + 8 * v12))(v8);
LABEL_18:
        v13 = v21;
        if (v21)
        {
          v14 = (unint64_t *)&v21->__shared_owners_;
          do
            v15 = __ldaxr(v14);
          while (__stlxr(v15 - 1, v14));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
            std::__shared_weak_count::__release_weak(v13);
          }
        }
        sub_239AA0050(*(unsigned int **)(a1 + 288), &v19);
        v16 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
        if (*((_QWORD *)&v19 + 1))
        {
          v17 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
          do
            v18 = __ldaxr(v17);
          while (__stlxr(v18 - 1, v17));
          if (!v18)
          {
            ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
            std::__shared_weak_count::__release_weak(v16);
          }
        }
        return;
      }
      v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    }
    v24 = (_BYTE *)v9;
    goto LABEL_13;
  }
  LOBYTE(v25[0]) = 0;
  v10 = a5[3];
  if (!v10)
    sub_2394172E0();
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v10 + 48))(v10, v25);
}

void sub_239B2FF24(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_239B2FF38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239A4D7C0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239B2FF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  sub_239A82E8C((uint64_t *)va1);
  sub_239A83110((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B2FF70(float *a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t prime;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  size_t v24;
  size_t v25;
  size_t v26;
  _QWORD *i;
  size_t v28;
  uint64_t v29;
  unint64_t v30;
  uint8x8_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  size_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v40;

  v5 = a2;
  v7 = *((_QWORD *)a1 + 1);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (v10[2] == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (v10[2] == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v10 = operator new(0x20uLL);
  *v10 = 0;
  v10[1] = v5;
  v10[2] = *a3;
  *((_DWORD *)v10 + 6) = 0;
  v13 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v14 = a1[8];
  if (v7 && (float)(v14 * (float)v7) >= v13)
  {
    v5 = v3;
    goto LABEL_72;
  }
  v15 = 1;
  if (v7 >= 3)
    v15 = (v7 & (v7 - 1)) != 0;
  v16 = v15 | (2 * v7);
  v17 = vcvtps_u32_f32(v13 / v14);
  if (v16 <= v17)
    prime = v17;
  else
    prime = v16;
  if (prime == 1)
  {
    prime = 2;
  }
  else if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(prime);
    v7 = *((_QWORD *)a1 + 1);
  }
  if (prime > v7)
  {
LABEL_35:
    if (prime >> 61)
      sub_239418A80();
    v19 = operator new(8 * prime);
    v20 = *(_QWORD **)a1;
    *(_QWORD *)a1 = v19;
    if (v20)
      operator delete(v20);
    v21 = 0;
    *((_QWORD *)a1 + 1) = prime;
    do
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v21++) = 0;
    while (prime != v21);
    v23 = (uint64_t *)(a1 + 4);
    v22 = (_QWORD *)*((_QWORD *)a1 + 2);
    if (!v22)
      goto LABEL_59;
    v24 = v22[1];
    v25 = prime - 1;
    if ((prime & (prime - 1)) == 0)
    {
      v26 = v24 & v25;
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v26) = v23;
      for (i = (_QWORD *)*v22; *v22; i = (_QWORD *)*v22)
      {
        v28 = i[1] & v25;
        if (v28 == v26)
        {
          v22 = i;
        }
        else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v28))
        {
          *v22 = *i;
          v29 = 8 * v28;
          *i = **(_QWORD **)(*(_QWORD *)a1 + v29);
          **(_QWORD **)(*(_QWORD *)a1 + v29) = i;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v28) = v22;
          v22 = i;
          v26 = v28;
        }
      }
LABEL_59:
      v7 = prime;
      goto LABEL_60;
    }
    if (v24 >= prime)
      v24 %= prime;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v23;
    v33 = (_QWORD *)*v22;
    if (!*v22)
      goto LABEL_59;
    while (1)
    {
      v35 = v33[1];
      if (v35 >= prime)
        v35 %= prime;
      if (v35 != v24)
      {
        if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v35))
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v35) = v22;
          goto LABEL_64;
        }
        *v22 = *v33;
        v34 = 8 * v35;
        *v33 = **(_QWORD **)(*(_QWORD *)a1 + v34);
        **(_QWORD **)(*(_QWORD *)a1 + v34) = v33;
        v33 = v22;
      }
      v35 = v24;
LABEL_64:
      v22 = v33;
      v33 = (_QWORD *)*v33;
      v24 = v35;
      if (!v33)
        goto LABEL_59;
    }
  }
  if (prime >= v7)
    goto LABEL_60;
  v30 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
  if (v7 < 3 || (v31 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
  {
    v30 = std::__next_prime(v30);
  }
  else
  {
    v32 = 1 << -(char)__clz(v30 - 1);
    if (v30 >= 2)
      v30 = v32;
  }
  if (prime <= v30)
    prime = v30;
  if (prime < v7)
  {
    if (!prime)
    {
      v40 = *(_QWORD **)a1;
      *(_QWORD *)a1 = 0;
      if (v40)
        operator delete(v40);
      v7 = 0;
      *((_QWORD *)a1 + 1) = 0;
      goto LABEL_60;
    }
    goto LABEL_35;
  }
  v7 = *((_QWORD *)a1 + 1);
LABEL_60:
  if ((v7 & (v7 - 1)) != 0)
  {
    if (v7 <= v5)
      v5 %= v7;
  }
  else
  {
    v5 &= v7 - 1;
  }
LABEL_72:
  v36 = *(_QWORD **)a1;
  v37 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v37)
  {
    *v10 = *v37;
LABEL_80:
    *v37 = v10;
    goto LABEL_81;
  }
  *v10 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = v10;
  v36[v5] = a1 + 4;
  if (*v10)
  {
    v38 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v38 >= v7)
        v38 %= v7;
    }
    else
    {
      v38 &= v7 - 1;
    }
    v37 = (_QWORD *)(*(_QWORD *)a1 + 8 * v38);
    goto LABEL_80;
  }
LABEL_81:
  ++*((_QWORD *)a1 + 3);
  return v10;
}

void sub_239B303C0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B303D4(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t prime;
  unint64_t v20;
  uint8x8_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  v5 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (v10[2] == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (v10[2] == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v13 = (_QWORD *)(a1 + 16);
  v10 = operator new(0x38uLL);
  *v10 = 0;
  v10[1] = v5;
  v10[2] = *a3;
  v10[3] = 0;
  v10[4] = 0;
  v10[5] = 0;
  *((_BYTE *)v10 + 48) = 0;
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (v7 && (float)(v15 * (float)v7) >= v14)
  {
    v5 = v3;
  }
  else
  {
    v16 = 1;
    if (v7 >= 3)
      v16 = (v7 & (v7 - 1)) != 0;
    v17 = v16 | (2 * v7);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      prime = v18;
    else
      prime = v17;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_35;
    if (prime < v7)
    {
      v20 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v21 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v21.i16[0] = vaddlv_u8(v21), v21.u32[0] > 1uLL))
      {
        v20 = std::__next_prime(v20);
      }
      else
      {
        v22 = 1 << -(char)__clz(v20 - 1);
        if (v20 >= 2)
          v20 = v22;
      }
      if (prime <= v20)
        prime = v20;
      if (prime < v7)
LABEL_35:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v5)
        v5 %= v7;
    }
    else
    {
      v5 &= v7 - 1;
    }
  }
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v24)
  {
    *v10 = *v24;
LABEL_58:
    *v24 = v10;
    goto LABEL_59;
  }
  *v10 = *v13;
  *v13 = v10;
  *(_QWORD *)(v23 + 8 * v5) = v13;
  if (*v10)
  {
    v25 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v25 >= v7)
        v25 %= v7;
    }
    else
    {
      v25 &= v7 - 1;
    }
    v24 = (_QWORD *)(*(_QWORD *)a1 + 8 * v25);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239B306BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239474998((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239B306D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  char v16;

  v4 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v4 != -1)
  {
    if ((_DWORD)v4 == 1)
    {
      v6 = *a2;
      v5 = a2[1];
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      v9 = *(std::__shared_weak_count **)(a1 + 8);
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v5;
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      return a1;
    }
    ((void (*)(char *, uint64_t))off_250B014C8[v4])(&v16, a1);
  }
  *(_DWORD *)(a1 + 16) = -1;
  v12 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  *(_DWORD *)(a1 + 16) = 1;
  return a1;
}

uint64_t sub_239B307B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  char v16;

  v4 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v4 != -1)
  {
    if (!(_DWORD)v4)
    {
      v6 = *a2;
      v5 = a2[1];
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      v9 = *(std::__shared_weak_count **)(a1 + 8);
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v5;
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      return a1;
    }
    ((void (*)(char *, uint64_t))off_250B014C8[v4])(&v16, a1);
  }
  *(_DWORD *)(a1 + 16) = -1;
  v12 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  *(_DWORD *)(a1 + 16) = 0;
  return a1;
}

int64_t sub_239B30898(_QWORD *a1, __int128 **a2)
{
  char *v4;
  __int128 *v5;
  __int128 *v6;
  int64_t result;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;

  v4 = (char *)operator new(0x38uLL);
  *(_OWORD *)(v4 + 8) = 0u;
  *(_QWORD *)v4 = &off_250AF5A00;
  *((_QWORD *)v4 + 3) = 0;
  *((_OWORD *)v4 + 2) = 0u;
  v5 = *a2;
  v6 = a2[1];
  result = (char *)v6 - (char *)*a2;
  if (v6 != *a2)
  {
    v8 = 0xCCCCCCCCCCCCCCCDLL * (result >> 3);
    if (v8 >= 0x666666666666667)
      sub_2394189F8();
    result = (int64_t)operator new(result);
    *((_QWORD *)v4 + 3) = result;
    *((_QWORD *)v4 + 4) = result;
    *((_QWORD *)v4 + 5) = result + 40 * v8;
    do
    {
      v9 = *v5;
      *(_DWORD *)(result + 16) = *((_DWORD *)v5 + 4);
      *(_OWORD *)result = v9;
      *(_QWORD *)(result + 20) = *(_QWORD *)((char *)v5 + 20);
      v10 = *(_QWORD *)((char *)v5 + 28);
      *(_DWORD *)(result + 36) = *((_DWORD *)v5 + 9);
      *(_QWORD *)(result + 28) = v10;
      result += 40;
      v5 = (__int128 *)((char *)v5 + 40);
    }
    while (v5 != v6);
    *((_QWORD *)v4 + 4) = result;
  }
  v4[48] = *((_BYTE *)a2 + 24);
  *a1 = v4 + 24;
  a1[1] = v4;
  return result;
}

void sub_239B30994(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void **v2;
  void *v4;
  void *v5;

  v4 = *v2;
  if (*v2)
  {
    v1[1].__shared_owners_ = (uint64_t)v4;
    operator delete(v4);
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

char *sub_239B309BC(void **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = 0x2E8BA2E8BA2E8BA3 * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 5);
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0xBA2E8BA2E8BA2ELL)
    sub_2394189F8();
  if (0x5D1745D1745D1746 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 5) > v4)
    v4 = 0x5D1745D1745D1746 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 5);
  if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 5)) >= 0x5D1745D1745D17)
    v6 = 0xBA2E8BA2E8BA2ELL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xBA2E8BA2E8BA2ELL)
      sub_239418A80();
    v7 = (char *)operator new(352 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[352 * v3];
  *((_QWORD *)v8 + 2) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a2;
  v9 = &v7[352 * v6];
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v8[24] = *(_BYTE *)(a2 + 24);
  *((_OWORD *)v8 + 2) = *(_OWORD *)(a2 + 32);
  *((_QWORD *)v8 + 6) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + 56);
  *((_QWORD *)v8 + 9) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  *((_OWORD *)v8 + 5) = *(_OWORD *)(a2 + 80);
  *((_QWORD *)v8 + 12) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0;
  *(_OWORD *)(v8 + 104) = *(_OWORD *)(a2 + 104);
  *((_QWORD *)v8 + 15) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  *(_QWORD *)(a2 + 120) = 0;
  v8[128] = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(a2 + 136);
  *((_QWORD *)v8 + 19) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = 0;
  *((_OWORD *)v8 + 10) = *(_OWORD *)(a2 + 160);
  *((_QWORD *)v8 + 22) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0;
  *(_QWORD *)(a2 + 168) = 0;
  *(_QWORD *)(a2 + 176) = 0;
  *((_QWORD *)v8 + 25) = 0;
  *(_OWORD *)(v8 + 184) = *(_OWORD *)(a2 + 184);
  *((_QWORD *)v8 + 25) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a2 + 184) = 0;
  *(_QWORD *)(a2 + 192) = 0;
  *((_QWORD *)v8 + 28) = 0;
  *((_OWORD *)v8 + 13) = *(_OWORD *)(a2 + 208);
  *((_QWORD *)v8 + 28) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a2 + 200) = 0;
  *(_QWORD *)(a2 + 208) = 0;
  *(_QWORD *)(a2 + 216) = 0;
  *(_QWORD *)(a2 + 224) = 0;
  *((_QWORD *)v8 + 31) = 0;
  *(_OWORD *)(v8 + 232) = *(_OWORD *)(a2 + 232);
  *((_QWORD *)v8 + 31) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a2 + 232) = 0;
  *(_QWORD *)(a2 + 240) = 0;
  *((_QWORD *)v8 + 34) = 0;
  *((_OWORD *)v8 + 16) = *(_OWORD *)(a2 + 256);
  *((_QWORD *)v8 + 34) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a2 + 248) = 0;
  *(_QWORD *)(a2 + 256) = 0;
  *(_QWORD *)(a2 + 264) = 0;
  *(_QWORD *)(a2 + 272) = 0;
  *((_QWORD *)v8 + 35) = *(_QWORD *)(a2 + 280);
  v10 = *(_OWORD *)(a2 + 288);
  *((_QWORD *)v8 + 38) = *(_QWORD *)(a2 + 304);
  *((_OWORD *)v8 + 18) = v10;
  *(_QWORD *)(a2 + 288) = 0;
  *(_QWORD *)(a2 + 296) = 0;
  *(_OWORD *)(v8 + 312) = *(_OWORD *)(a2 + 312);
  *(_QWORD *)(a2 + 304) = 0;
  *(_QWORD *)(a2 + 312) = 0;
  v11 = *(_QWORD *)(a2 + 328);
  v12 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a2 + 320) = 0;
  *(_QWORD *)(a2 + 328) = 0;
  *((_DWORD *)v8 + 86) = *(_DWORD *)(a2 + 344);
  *((_QWORD *)v8 + 41) = v11;
  *((_QWORD *)v8 + 42) = v12;
  v13 = v8 + 352;
  v14 = (char *)*a1;
  v15 = (char *)a1[1];
  if (v15 == *a1)
  {
    *a1 = v8;
    a1[1] = v13;
    a1[2] = v9;
    if (!v15)
      return v13;
    goto LABEL_17;
  }
  v16 = 0;
  do
  {
    v17 = &v8[v16];
    v18 = (uint64_t)&v8[v16 - 352];
    v19 = &v15[v16];
    v20 = (uint64_t)&v15[v16 - 352];
    v21 = *(_OWORD *)v20;
    *(_QWORD *)(v18 + 16) = *(_QWORD *)&v15[v16 - 336];
    *(_OWORD *)v18 = v21;
    *(_QWORD *)(v20 + 8) = 0;
    *(_QWORD *)(v20 + 16) = 0;
    *(_QWORD *)v20 = 0;
    v22 = &v8[v16 - 320];
    v23 = (uint64_t)&v15[v16 - 320];
    v8[v16 - 328] = v15[v16 - 328];
    *((_QWORD *)v22 + 1) = 0;
    *((_QWORD *)v22 + 2) = 0;
    *(_QWORD *)v22 = 0;
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_QWORD *)&v8[v16 - 304] = *(_QWORD *)&v15[v16 - 304];
    *(_QWORD *)&v15[v16 - 312] = 0;
    *(_QWORD *)v23 = 0;
    *(_QWORD *)(v23 + 16) = 0;
    v24 = &v8[v16 - 296];
    v25 = (uint64_t)&v15[v16 - 296];
    *(_QWORD *)&v8[v16 - 288] = 0;
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 2) = 0;
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_QWORD *)&v8[v16 - 280] = *(_QWORD *)&v15[v16 - 280];
    *(_QWORD *)&v15[v16 - 288] = 0;
    *(_QWORD *)v25 = 0;
    v26 = &v8[v16 - 272];
    *(_QWORD *)(v25 + 16) = 0;
    v27 = &v15[v16 - 272];
    *(_QWORD *)&v8[v16 - 264] = 0;
    *(_QWORD *)v26 = 0;
    *((_QWORD *)v17 - 32) = 0;
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_QWORD *)v17 - 32) = *(_QWORD *)&v15[v16 - 256];
    *(_QWORD *)&v15[v16 - 264] = 0;
    *(_QWORD *)v27 = 0;
    *((_QWORD *)v19 - 32) = 0;
    *((_QWORD *)v17 - 31) = 0;
    *((_QWORD *)v17 - 30) = 0;
    *((_QWORD *)v17 - 29) = 0;
    *(_OWORD *)(v17 - 248) = *(_OWORD *)&v15[v16 - 248];
    *((_QWORD *)v17 - 29) = *(_QWORD *)&v15[v16 - 232];
    *((_QWORD *)v19 - 30) = 0;
    *((_QWORD *)v19 - 29) = 0;
    LOBYTE(v26) = v15[v16 - 224];
    *((_QWORD *)v19 - 31) = 0;
    *((_QWORD *)v17 - 26) = 0;
    *((_QWORD *)v17 - 25) = 0;
    *((_QWORD *)v17 - 27) = 0;
    *(_OWORD *)(v17 - 216) = *(_OWORD *)&v15[v16 - 216];
    *(v17 - 224) = (char)v26;
    *((_QWORD *)v17 - 25) = *(_QWORD *)&v15[v16 - 200];
    *((_QWORD *)v19 - 27) = 0;
    *((_QWORD *)v19 - 26) = 0;
    *((_QWORD *)v19 - 25) = 0;
    *((_QWORD *)v17 - 23) = 0;
    *((_QWORD *)v17 - 22) = 0;
    *((_QWORD *)v17 - 24) = 0;
    *((_OWORD *)v17 - 12) = *(_OWORD *)&v15[v16 - 192];
    *((_QWORD *)v17 - 22) = *(_QWORD *)&v15[v16 - 176];
    *((_QWORD *)v19 - 24) = 0;
    *((_QWORD *)v19 - 23) = 0;
    *((_QWORD *)v19 - 22) = 0;
    *((_QWORD *)v17 - 21) = 0;
    *((_QWORD *)v17 - 20) = 0;
    *((_QWORD *)v17 - 19) = 0;
    *(_OWORD *)(v17 - 168) = *(_OWORD *)&v15[v16 - 168];
    *((_QWORD *)v17 - 19) = *(_QWORD *)&v15[v16 - 152];
    *((_QWORD *)v19 - 21) = 0;
    *((_QWORD *)v19 - 20) = 0;
    *((_QWORD *)v19 - 19) = 0;
    *((_QWORD *)v17 - 18) = 0;
    *((_QWORD *)v17 - 17) = 0;
    *((_QWORD *)v17 - 16) = 0;
    *((_OWORD *)v17 - 9) = *(_OWORD *)&v15[v16 - 144];
    *((_QWORD *)v17 - 16) = *(_QWORD *)&v15[v16 - 128];
    *((_QWORD *)v19 - 18) = 0;
    *((_QWORD *)v19 - 17) = 0;
    *((_QWORD *)v19 - 16) = 0;
    *((_QWORD *)v17 - 15) = 0;
    *((_QWORD *)v17 - 14) = 0;
    *((_QWORD *)v17 - 13) = 0;
    *(_OWORD *)(v17 - 120) = *(_OWORD *)&v15[v16 - 120];
    *((_QWORD *)v17 - 13) = *(_QWORD *)&v15[v16 - 104];
    *((_QWORD *)v19 - 15) = 0;
    *((_QWORD *)v19 - 14) = 0;
    *((_QWORD *)v19 - 13) = 0;
    *((_QWORD *)v17 - 12) = 0;
    *((_QWORD *)v17 - 11) = 0;
    *((_QWORD *)v17 - 10) = 0;
    *((_OWORD *)v17 - 6) = *(_OWORD *)&v15[v16 - 96];
    *((_QWORD *)v17 - 10) = *(_QWORD *)&v15[v16 - 80];
    *((_QWORD *)v19 - 12) = 0;
    *((_QWORD *)v19 - 11) = 0;
    *((_QWORD *)v19 - 10) = 0;
    *((_QWORD *)v17 - 9) = *(_QWORD *)&v15[v16 - 72];
    v28 = *(_OWORD *)&v15[v16 - 64];
    *((_QWORD *)v17 - 6) = *(_QWORD *)&v15[v16 - 48];
    *((_OWORD *)v17 - 4) = v28;
    *((_QWORD *)v19 - 7) = 0;
    *((_QWORD *)v19 - 6) = 0;
    v29 = *(_OWORD *)&v15[v16 - 40];
    v30 = *(_QWORD *)&v15[v16 - 24];
    *((_QWORD *)v19 - 8) = 0;
    *((_QWORD *)v17 - 3) = v30;
    *(_OWORD *)(v17 - 40) = v29;
    *((_QWORD *)v19 - 4) = 0;
    *((_QWORD *)v19 - 3) = 0;
    *((_QWORD *)v19 - 5) = 0;
    v31 = *(_QWORD *)&v15[v16 - 16];
    *((_DWORD *)v17 - 2) = *(_DWORD *)&v15[v16 - 8];
    *((_QWORD *)v17 - 2) = v31;
    v16 -= 352;
  }
  while (&v15[v16] != v14);
  v15 = (char *)*a1;
  v32 = (uint64_t)a1[1];
  *a1 = &v8[v16];
  a1[1] = v13;
  for (a1[2] = v9; (char *)v32 != v15; v32 = sub_2395A0DF8(v32 - 352))
    ;
  if (v15)
LABEL_17:
    operator delete(v15);
  return v13;
}

_QWORD *sub_239B30E68(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF5A38;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B30EC4(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF5A38;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B30F30(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF5A38;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239B30FAC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B30FC0(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF5A38;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239B31038(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B3106C(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

void sub_239B310BC(uint64_t a1, uint64_t *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;

  v3 = (std::__shared_weak_count *)a2[1];
  v11 = *a2;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = *(_QWORD *)(a1 + 32);
  if (v6)
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v11);
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 448) + 1696);
  if (v7)
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v11);
  v8 = v12;
  if (v12)
  {
    v9 = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239B31170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B311B4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF6F30;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B311C4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF6F30;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B311F4(uint64_t a1)
{
  return sub_2395A0DF8(a1 + 24);
}

void sub_239B31200(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFAC20;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B31210(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFAC20;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B31240(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = *(std::__shared_weak_count **)(a1 + 160);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 136);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = *(std::__shared_weak_count **)(a1 + 120);
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = *(std::__shared_weak_count **)(a1 + 104);
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = *(std::__shared_weak_count **)(a1 + 88);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 72);
  if (v17)
  {
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = *(unsigned int *)(a1 + 56);
  if ((_DWORD)v20 != -1)
    ((void (*)(char *, uint64_t))off_250B014C8[v20])(&v21, a1 + 40);
  *(_DWORD *)(a1 + 56) = -1;
}

void sub_239B313EC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B31400()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF59B8;
  return result;
}

void sub_239B31424(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF59B8;
}

void sub_239B31444()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B31458()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF5970;
  return result;
}

void sub_239B3147C(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF5970;
}

void sub_239B31498(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5938;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B314A8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5938;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B314E4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B314F8()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF58F0;
  return result;
}

void sub_239B3151C(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF58F0;
}

void sub_239B3153C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B31550(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF6760;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B31588(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6760;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B315A8(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

uint64_t sub_239B315DC(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, int a7)
{
  __int128 v13;
  const void *v14;
  int64_t v15;
  char *v16;
  char *v17;
  const void *v18;
  int64_t v19;
  char *v20;
  char *v21;
  const void *v22;
  int64_t v23;
  char *v24;
  char *v25;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (*((char *)a2 + 23) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 24), *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v13 = *a2;
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 2);
    *(_OWORD *)(a1 + 24) = v13;
  }
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  v14 = *(const void **)a3;
  v15 = *(_QWORD *)(a3 + 8) - *(_QWORD *)a3;
  if (v15)
  {
    if (v15 < 0)
      sub_2394189F8();
    v16 = (char *)operator new(v15);
    *(_QWORD *)(a1 + 48) = v16;
    *(_QWORD *)(a1 + 56) = v16;
    v17 = &v16[8 * (v15 >> 3)];
    *(_QWORD *)(a1 + 64) = v17;
    memcpy(v16, v14, v15);
    *(_QWORD *)(a1 + 56) = v17;
  }
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  v18 = *(const void **)a4;
  v19 = *(_QWORD *)(a4 + 8) - *(_QWORD *)a4;
  if (v19)
  {
    if (v19 < 0)
      sub_2394189F8();
    v20 = (char *)operator new(v19);
    *(_QWORD *)(a1 + 72) = v20;
    *(_QWORD *)(a1 + 80) = v20;
    v21 = &v20[8 * (v19 >> 3)];
    *(_QWORD *)(a1 + 88) = v21;
    memcpy(v20, v18, v19);
    *(_QWORD *)(a1 + 80) = v21;
  }
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  v22 = *(const void **)a5;
  v23 = *(_QWORD *)(a5 + 8) - *(_QWORD *)a5;
  if (v23)
  {
    if (v23 < 0)
      sub_2394189F8();
    v24 = (char *)operator new(v23);
    *(_QWORD *)(a1 + 96) = v24;
    *(_QWORD *)(a1 + 104) = v24;
    v25 = &v24[8 * (v23 >> 3)];
    *(_QWORD *)(a1 + 112) = v25;
    memcpy(v24, v22, v23);
    *(_QWORD *)(a1 + 104) = v25;
  }
  *(_OWORD *)(a1 + 120) = *a6;
  *(_DWORD *)(a1 + 136) = a7;
  return a1;
}

void sub_239B31764(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B31818(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v4 = *(unsigned __int8 *)(a1 + 160);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (v4)
  {
    if (a1 != a2)
      sub_23945D3D0((_QWORD *)(a1 + 16), *(char **)(a2 + 16), *(char **)(a2 + 24), (uint64_t)(*(_QWORD *)(a2 + 24) - *(_QWORD *)(a2 + 16)) >> 3);
    v5 = *(_OWORD *)(a2 + 40);
    v6 = *(_OWORD *)(a2 + 56);
    v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = v7;
    *(_OWORD *)(a1 + 56) = v6;
    *(_OWORD *)(a1 + 40) = v5;
    v8 = *(_OWORD *)(a2 + 104);
    v9 = *(_OWORD *)(a2 + 120);
    v10 = *(_OWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = v10;
    *(_OWORD *)(a1 + 120) = v9;
    *(_OWORD *)(a1 + 104) = v8;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    v12 = *(_BYTE **)(a2 + 16);
    v11 = *(_BYTE **)(a2 + 24);
    v13 = v11 - v12;
    if (v11 != v12)
    {
      if (v13 < 0)
        sub_2394189F8();
      v14 = (char *)operator new(v11 - v12);
      *(_QWORD *)(a1 + 16) = v14;
      *(_QWORD *)(a1 + 24) = v14;
      v15 = &v14[8 * (v13 >> 3)];
      *(_QWORD *)(a1 + 32) = v15;
      memcpy(v14, v12, v13);
      *(_QWORD *)(a1 + 24) = v15;
    }
    v16 = *(_OWORD *)(a2 + 40);
    v17 = *(_OWORD *)(a2 + 56);
    v18 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = v18;
    *(_OWORD *)(a1 + 56) = v17;
    *(_OWORD *)(a1 + 40) = v16;
    v19 = *(_OWORD *)(a2 + 104);
    v20 = *(_OWORD *)(a2 + 120);
    v21 = *(_OWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = v21;
    *(_OWORD *)(a1 + 120) = v20;
    *(_OWORD *)(a1 + 104) = v19;
    *(_BYTE *)(a1 + 160) = 1;
  }
  return a1;
}

void sub_239B31954(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 24) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_239B31970(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6)
{
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  void *__p;
  void *v19;
  char v20;
  _QWORD v21[3];
  _QWORD *v22;
  _QWORD v23[3];
  _QWORD *v24;
  _QWORD v25[3];
  _QWORD *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  sub_239B31B8C((uint64_t)&v17, a6);
  v26 = 0;
  v24 = 0;
  v22 = 0;
  sub_239E75CF8(a1, a2, a3, a4, a5, &v17, v25, v23, v21);
  v11 = v22;
  if (v22 == v21)
  {
    v12 = 4;
    v11 = v21;
  }
  else
  {
    if (!v22)
      goto LABEL_6;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_6:
  v13 = v24;
  if (v24 == v23)
  {
    v14 = 4;
    v13 = v23;
  }
  else
  {
    if (!v24)
      goto LABEL_11;
    v14 = 5;
  }
  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_11:
  v15 = v26;
  if (v26 == v25)
  {
    v16 = 4;
    v15 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_16;
    v16 = 5;
  }
  (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_16:
  if (v20)
  {
    if (__p)
    {
      v19 = __p;
      operator delete(__p);
    }
  }
}

void sub_239B31AD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  v34 = *(_QWORD **)(v32 - 144);
  if (v34 == v31)
  {
    v35 = 4;
    v34 = (_QWORD *)(v32 - 168);
  }
  else
  {
    if (!v34)
      goto LABEL_6;
    v35 = 5;
  }
  (*(void (**)(void))(*v34 + 8 * v35))();
LABEL_6:
  v36 = *(_QWORD **)(v32 - 112);
  if (v36 == (_QWORD *)(v32 - 136))
  {
    v37 = 4;
    v36 = (_QWORD *)(v32 - 136);
  }
  else
  {
    if (!v36)
      goto LABEL_11;
    v37 = 5;
  }
  (*(void (**)(void))(*v36 + 8 * v37))();
LABEL_11:
  v38 = *(_QWORD **)(v32 - 80);
  if (v38 == (_QWORD *)(v32 - 104))
  {
    v39 = 4;
    v38 = (_QWORD *)(v32 - 104);
  }
  else
  {
    if (!v38)
      goto LABEL_16;
    v39 = 5;
  }
  (*(void (**)(void))(*v38 + 8 * v39))();
LABEL_16:
  if (a31)
  {
    if (__p)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B31B8C(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  _BYTE *v5;
  _BYTE *v6;
  int64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 160) = 0;
  if (*((_BYTE *)a2 + 160))
  {
    v4 = *a2;
    *(_QWORD *)(a1 + 16) = 0;
    *(_OWORD *)a1 = v4;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    v6 = (_BYTE *)*((_QWORD *)a2 + 2);
    v5 = (_BYTE *)*((_QWORD *)a2 + 3);
    v7 = v5 - v6;
    if (v5 != v6)
    {
      if (v7 < 0)
        sub_2394189F8();
      v8 = (char *)operator new(v5 - v6);
      *(_QWORD *)(a1 + 16) = v8;
      *(_QWORD *)(a1 + 24) = v8;
      v9 = &v8[8 * (v7 >> 3)];
      *(_QWORD *)(a1 + 32) = v9;
      memcpy(v8, v6, v7);
      *(_QWORD *)(a1 + 24) = v9;
    }
    v10 = *(__int128 *)((char *)a2 + 40);
    v11 = *(__int128 *)((char *)a2 + 56);
    v12 = *(__int128 *)((char *)a2 + 72);
    *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
    *(_OWORD *)(a1 + 72) = v12;
    *(_OWORD *)(a1 + 56) = v11;
    *(_OWORD *)(a1 + 40) = v10;
    v13 = *(__int128 *)((char *)a2 + 104);
    v14 = *(__int128 *)((char *)a2 + 120);
    v15 = *(__int128 *)((char *)a2 + 136);
    *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
    *(_OWORD *)(a1 + 136) = v15;
    *(_OWORD *)(a1 + 120) = v14;
    *(_OWORD *)(a1 + 104) = v13;
    *(_BYTE *)(a1 + 160) = 1;
  }
  return a1;
}

void sub_239B31C70(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;
  void *v5;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 24) = v4;
    operator delete(v4);
  }
  if (*(_BYTE *)(v1 + 160))
  {
    v5 = *v2;
    if (*v2)
    {
      *(_QWORD *)(v1 + 24) = v5;
      operator delete(v5);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B31CA4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF99A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B31CB4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF99A0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B31CE4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_239B31CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  std::string *v14;
  std::string *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  double v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  std::string *data;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  std::string::__raw *v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  float v60;
  unsigned int v61;
  __int128 v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  int64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  int64_t v69;
  char *v70;
  char v71;
  uint64_t v72;
  kern_return_t v73;
  unint64_t v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  std::string::size_type v85;
  std::string::size_type v86;
  unint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t *v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t *v99;
  unint64_t v100;
  uint64_t v101;
  void **v102;
  __int128 v103;
  unint64_t *v104;
  unint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *p_shared_owners;
  unint64_t v108;
  __int128 v109;
  unint64_t *v110;
  unint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  __int128 v115;
  unint64_t *v116;
  unint64_t v117;
  std::__shared_weak_count *v118;
  unint64_t *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t *v123;
  unint64_t v124;
  std::__shared_weak_count *v125;
  unint64_t *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  unint64_t v130;
  char v131;
  int v132;
  const void *v133;
  unint64_t *v134;
  unint64_t *v135;
  unint64_t v136;
  int v137;
  uint64_t *v138;
  uint64_t v139;
  unint64_t *v140;
  unint64_t v141;
  char v142;
  unint64_t *v143;
  unint64_t v144;
  std::__shared_weak_count *v145;
  unint64_t *v146;
  unint64_t v147;
  const void *v148;
  const void *v149;
  unint64_t *v150;
  unint64_t v151;
  std::__shared_weak_count *v152;
  unint64_t *v153;
  unint64_t v154;
  unsigned int v155;
  char v156;
  char v157;
  _BOOL4 v158;
  std::string *v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  __int128 v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  __int128 v167;
  std::__shared_weak_count *v168;
  unint64_t *v169;
  unint64_t v170;
  __int128 v171;
  std::__shared_weak_count *v172;
  unint64_t *v173;
  unint64_t v174;
  __int128 v175;
  std::__shared_weak_count *v176;
  unint64_t *v177;
  unint64_t v178;
  __int128 v179;
  std::__shared_weak_count *v180;
  unint64_t *v181;
  unint64_t v182;
  __int128 v183;
  std::__shared_weak_count *v184;
  unint64_t *v185;
  unint64_t v186;
  void **v187;
  __int128 v188;
  std::__shared_weak_count *v189;
  unint64_t *v190;
  unint64_t v191;
  __int128 v192;
  std::__shared_weak_count *v193;
  unint64_t *v194;
  unint64_t v195;
  __int128 v196;
  std::__shared_weak_count *v197;
  unint64_t *v198;
  unint64_t v199;
  __int128 v200;
  std::__shared_weak_count *v201;
  unint64_t *v202;
  unint64_t v203;
  void **v204;
  __int128 v205;
  unint64_t *v206;
  unint64_t v207;
  std::__shared_weak_count *v208;
  unint64_t *v209;
  unint64_t v210;
  __int128 v211;
  unint64_t *v212;
  unint64_t v213;
  std::__shared_weak_count *v214;
  unint64_t *v215;
  unint64_t v216;
  __int128 v217;
  unint64_t *v218;
  unint64_t v219;
  std::__shared_weak_count *v220;
  unint64_t *v221;
  unint64_t v222;
  __int128 v223;
  unint64_t *v224;
  unint64_t v225;
  std::__shared_weak_count *v226;
  unint64_t *v227;
  unint64_t v228;
  __int128 v229;
  unint64_t *v230;
  unint64_t v231;
  std::__shared_weak_count *v232;
  unint64_t *v233;
  unint64_t v234;
  char v235;
  char v236;
  __int128 v237;
  unint64_t *v238;
  unint64_t v239;
  std::__shared_weak_count *v240;
  unint64_t *v241;
  unint64_t v242;
  __int128 v243;
  unint64_t *v244;
  unint64_t v245;
  std::__shared_weak_count *v246;
  unint64_t *v247;
  unint64_t v248;
  __int128 v249;
  unint64_t *v250;
  unint64_t v251;
  std::__shared_weak_count *v252;
  unint64_t *v253;
  unint64_t v254;
  __int128 v255;
  unint64_t *v256;
  unint64_t v257;
  std::__shared_weak_count *v258;
  unint64_t *v259;
  unint64_t v260;
  __int128 v261;
  unint64_t *v262;
  unint64_t v263;
  std::__shared_weak_count *v264;
  unint64_t *v265;
  unint64_t v266;
  char v267;
  char v268;
  std::__shared_weak_count *v269;
  unint64_t *v270;
  unint64_t v271;
  CFUUIDRef v272;
  std::__shared_weak_count *size;
  unint64_t *v274;
  unint64_t v275;
  char v276;
  char v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  _BOOL4 v285;
  BOOL v286;
  int v287;
  __int128 v288;
  unint64_t *v289;
  unint64_t v290;
  std::__shared_weak_count *v291;
  unint64_t *v292;
  unint64_t v293;
  uint64_t v294;
  unint64_t *v295;
  unint64_t v296;
  std::__shared_weak_count *v297;
  unint64_t *v298;
  unint64_t v299;
  int v300;
  std::__shared_weak_count *v301;
  unint64_t *v302;
  unint64_t v303;
  _QWORD *v304;
  _QWORD *v305;
  void *v306;
  uint64_t v307;
  uint64_t v308;
  std::string::size_type v309;
  std::string::size_type v310;
  std::ios_base *v311;
  _BOOL4 v312;
  uint64_t v313;
  uint64_t v314;
  std::string::size_type v315;
  std::string::size_type v316;
  std::ios_base *v317;
  const char *v318;
  size_t v319;
  size_t v320;
  _BYTE *v321;
  std::__shared_weak_count *v322;
  unint64_t *v323;
  unint64_t v324;
  uint64_t v325;
  uint64_t v326;
  _QWORD *v327;
  const char *v328;
  size_t v329;
  std::string::size_type v330;
  _BYTE *p_dst;
  uint64_t v332;
  uint64_t v333;
  _QWORD *v334;
  int32x4_t v335;
  double v336;
  int32x4_t v337;
  const char *v338;
  const char *v339;
  size_t v340;
  size_t v341;
  _BYTE *v342;
  uint64_t v343;
  uint64_t v344;
  _QWORD *v345;
  unsigned __int8 *v346;
  size_t v347;
  size_t v348;
  _BYTE *v349;
  uint64_t v350;
  uint64_t v351;
  _QWORD *v352;
  const char *v353;
  const char *v354;
  size_t v355;
  size_t v356;
  _BYTE *v357;
  uint64_t v358;
  uint64_t v359;
  _QWORD *v360;
  _QWORD *v361;
  uint64_t v362;
  void **v363;
  void *v364;
  std::string::size_type *v365;
  std::__fs::filesystem::path *v366;
  uint64_t v367;
  char *v368;
  void **v369;
  void **v370;
  uint64_t v371;
  uint64_t i;
  double v373;
  void **v374;
  _DWORD *v375;
  int v376;
  std::string *v377;
  _QWORD *v378;
  _QWORD *v379;
  _QWORD *v380;
  uint64_t v381;
  std::string::__raw *v382;
  uint64_t v383;
  double v384;
  float v385;
  _QWORD *v386;
  uint64_t v387;
  std::__shared_weak_count *v388;
  unint64_t *v389;
  unint64_t v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char **v396;
  std::__shared_weak_count *v397;
  unint64_t *v398;
  unint64_t v399;
  uint64_t v400;
  pthread_mutex_t *v401;
  std::__shared_count *v402;
  std::__shared_weak_count *v403;
  std::__shared_weak_count *v404;
  std::__shared_count v405;
  std::__shared_count v406;
  std::__shared_count v407;
  std::__shared_count v408;
  std::__shared_count v409;
  std::__shared_count v410;
  std::__shared_count v411;
  std::__shared_count v412;
  std::__shared_count v413;
  std::__shared_count v414;
  std::__shared_count v415;
  std::__shared_count v416;
  uint64_t *v417;
  uint64_t v418;
  char v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  std::__shared_count v423;
  __int128 v424;
  std::__shared_count v425;
  std::__shared_count v426;
  __int128 v427;
  int v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  __int128 *v432;
  __int128 v433;
  __int128 v434;
  uint64_t v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  __int128 *v439;
  uint64_t v440;
  __int128 *v441;
  uint64_t v442;
  uint64_t v443;
  __int128 *v444;
  _OWORD *v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  unint64_t v449;
  uint64_t v450;
  unint64_t v451;
  uint64_t v452;
  uint64_t v453;
  unint64_t v454;
  __int128 v455;
  __int128 v456;
  unint64_t v457;
  uint64_t v458;
  __int128 v459;
  uint64_t v460;
  unint64_t v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  uint64_t v468;
  __int128 v469;
  unint64_t *v470;
  unint64_t v471;
  unint64_t *v472;
  unint64_t v473;
  std::__shared_weak_count *v474;
  unint64_t *v475;
  unint64_t v476;
  char v477;
  std::__shared_weak_count *v478;
  unint64_t *v479;
  unint64_t v480;
  std::__shared_weak_count *v481;
  unint64_t *v482;
  unint64_t v483;
  uint64_t v484;
  uint64_t *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  std::string::size_type *v491;
  std::string::size_type v492;
  std::string::size_type v493;
  std::ios_base *v494;
  BOOL v495;
  uint64_t v496;
  uint64_t v497;
  std::string::size_type v498;
  std::string::size_type v499;
  std::ios_base *v500;
  uint64_t v501;
  std::string::size_type *v502;
  _BYTE *v503;
  uint64_t v504;
  char *v505;
  _QWORD *v506;
  char v507;
  BOOL v508;
  char v509;
  std::__fs::filesystem::path *v510;
  uint64_t v511;
  _QWORD *v512;
  uint64_t v513;
  const std::__fs::filesystem::path *v514;
  uint64_t v515;
  std::__fs::filesystem::path::__string_view v516;
  std::__fs::filesystem::path *v517;
  std::basic_string_view<_CharT, _Traits>::size_type v518;
  std::basic_string_view<_CharT, _Traits>::size_type v519;
  void *v520;
  int v521;
  std::string *v522;
  std::string::size_type v523;
  char v524;
  uint64_t v525;
  _QWORD *v526;
  char v527;
  uint64_t v528;
  uint64_t *v529;
  uint64_t v530;
  unint64_t v531;
  uint64_t v532;
  uint64_t *v533;
  unint64_t v534;
  unint64_t v535;
  uint8x8_t v536;
  _QWORD **v537;
  _QWORD *v538;
  unint64_t v539;
  uint64_t v540;
  _QWORD *v541;
  float v542;
  float v543;
  _BOOL8 v544;
  unint64_t v545;
  unint64_t v546;
  size_t prime;
  void *v548;
  void *v549;
  uint64_t v550;
  _QWORD *v551;
  size_t v552;
  size_t v553;
  size_t v554;
  _QWORD *v555;
  size_t v556;
  uint64_t v557;
  unint64_t v558;
  uint8x8_t v559;
  uint64_t v560;
  _QWORD *v561;
  uint64_t v562;
  size_t v563;
  void *v564;
  uint64_t v565;
  _QWORD *v566;
  unint64_t v567;
  char **v568;
  uint64_t *v569;
  unint64_t *v570;
  unint64_t v571;
  unint64_t *v572;
  unint64_t v573;
  unint64_t *v574;
  unint64_t v575;
  char *v576;
  __int128 v577;
  __int128 v578;
  uint64_t v579;
  _QWORD *v580;
  uint64_t v581;
  _QWORD *v582;
  uint64_t v583;
  void **v584;
  uint64_t v585;
  std::string *v586;
  uint64_t v587;
  _QWORD *v588;
  _QWORD *v589;
  void *v590;
  void *v591;
  char *v592;
  std::string::__raw *v593;
  uint64_t v594;
  _QWORD *v596;
  uint64_t *v597;
  uint64_t v598;
  _QWORD *v599;
  uint64_t v600;
  unint64_t *v601;
  unint64_t v602;
  unint64_t *v603;
  unint64_t v604;
  unint64_t *v605;
  unint64_t v606;
  char *v607;
  __int128 v608;
  __int128 v609;
  uint64_t v610;
  _QWORD *v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  unint64_t *v615;
  unint64_t v616;
  unint64_t *v617;
  unint64_t v618;
  unint64_t *v619;
  unint64_t v620;
  char *v621;
  __int128 v622;
  __int128 v623;
  _QWORD *v624;
  uint64_t v625;
  _BYTE *v626;
  uint64_t *v627;
  int v628;
  int v629;
  int v630;
  _QWORD *v631;
  uint64_t v632;
  _QWORD *v633;
  uint64_t v634;
  char v635;
  uint64_t v636;
  std::string::size_type v637;
  uint64_t v638;
  uint64_t v639;
  unint64_t *v640;
  unint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t *v645;
  _DWORD *v646;
  _DWORD *v647;
  int v648;
  uint64_t v649;
  char v650;
  unint64_t v651;
  float v652;
  int v653;
  uint64_t v654;
  uint64_t v655;
  int v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  unint64_t *v660;
  unint64_t v661;
  unint64_t *v662;
  unint64_t v663;
  unint64_t *v664;
  unint64_t v665;
  char *v666;
  __int128 v667;
  __int128 v668;
  _QWORD *v669;
  uint64_t v670;
  _QWORD *v671;
  uint64_t v672;
  int v673;
  uint64_t v674;
  std::__fs::filesystem::path *j;
  uint64_t v676;
  std::string::size_type v677;
  uint64_t v678;
  uint64_t v679;
  unint64_t *v680;
  unint64_t v681;
  uint64_t v682;
  std::string::size_type v683;
  std::string::size_type v684;
  char v685;
  unsigned int v686;
  unsigned int v687;
  int v688;
  char v689;
  uint64_t v690;
  uint64_t v691;
  int v692;
  char v693;
  int v694;
  uint64_t *v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  unint64_t *v700;
  unint64_t v701;
  unint64_t *v702;
  unint64_t v703;
  unint64_t *v704;
  unint64_t v705;
  char *v706;
  __int128 v707;
  __int128 v708;
  uint64_t v709;
  _QWORD *v710;
  uint64_t v711;
  int v712;
  _QWORD *v713;
  uint64_t v714;
  int v715;
  uint64_t v716;
  uint64_t *v717;
  int v718;
  uint64_t v719;
  int v720;
  char v721;
  uint64_t v722;
  uint64_t v723;
  unint64_t *v724;
  unint64_t v725;
  unint64_t *v726;
  unint64_t v727;
  unint64_t *v728;
  unint64_t v729;
  char *v730;
  __int128 v731;
  __int128 v732;
  _QWORD *v733;
  uint64_t v734;
  int v735;
  uint64_t v736;
  uint64_t *v737;
  int v738;
  uint64_t v739;
  uint64_t v740;
  unint64_t *v741;
  unint64_t v742;
  unint64_t *v743;
  unint64_t v744;
  unint64_t *v745;
  unint64_t v746;
  char *v747;
  __int128 v748;
  __int128 v749;
  _QWORD *v750;
  uint64_t v751;
  int v752;
  _QWORD *v753;
  uint64_t v754;
  _QWORD *v755;
  uint64_t v756;
  uint64_t *v757;
  uint64_t v758;
  std::__fs::filesystem::path *v759;
  std::string::size_type v760;
  std::string *v761;
  std::string::size_type v762;
  char v763;
  unint64_t *v764;
  unint64_t v765;
  unint64_t *v766;
  unint64_t v767;
  unint64_t *v768;
  unint64_t v769;
  char *v770;
  __int128 v771;
  __int128 v772;
  uint64_t v773;
  _QWORD *v774;
  uint64_t v775;
  _QWORD *v776;
  uint64_t v777;
  std::__fs::filesystem::path *k;
  std::string::size_type v779;
  uint64_t v780;
  uint64_t v781;
  std::string *v782;
  unsigned int v783;
  unsigned int v784;
  int v785;
  char **v786;
  int v787;
  std::string::value_type v788;
  int v789;
  uint64_t v790;
  int v791;
  int v792;
  int v793;
  uint64_t *v794;
  int v795;
  unsigned int v796;
  unsigned int v797;
  _QWORD *v798;
  uint64_t v799;
  int v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  __int128 v806;
  uint64_t v807;
  __int128 v808;
  __int128 v809;
  std::__fs::filesystem::path task_info_outCnt;
  __int128 v811;
  __int128 v812;
  _BYTE v813[120];
  void *v814[2];
  _BYTE v815[24];
  __int128 v816;
  __int128 v817;
  __int128 v818;
  __int128 v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  char v823;
  int v824;
  uint64_t v825;
  uint64_t v826;
  int32x2_t v827;
  uint64_t v828;
  int v829;
  uint64_t v830;
  __int128 v831;
  uint64_t v832;
  char v833;
  uint64_t v834;
  __int128 v835;
  __int128 v836;
  char v837;
  uint64_t v838;
  char v839;
  char v840;
  __int128 v841;
  __int128 v842;
  __int128 v843;
  __int128 v844;
  __int128 v845;
  __int128 v846;
  void *v847[2];
  _OWORD v848[4];
  __int128 v849;
  uint64_t v850;
  __int128 v851;
  __int128 v852;
  __int128 v853;
  uint64_t v854;
  __int128 v855;
  __int128 v856;
  std::__fs::filesystem::path __to;
  char v858;
  std::string v859;
  __int128 v860;
  __int128 v861;
  __int128 v862;
  uint64_t v863;
  __int128 v864;
  __int128 v865;
  uint64_t v866;
  uint64_t v867;
  _QWORD v868[2];
  std::__fs::filesystem::path v869;
  __int128 v870;
  __int128 v871;
  std::__fs::filesystem::path v872;
  __int128 v873;
  __int128 v874;
  uint64_t v875;
  uint64_t v876;
  std::__fs::filesystem::path v877;
  __int128 v878;
  __int128 v879;
  _DWORD v880[2];
  const void *v881[5];
  void *v882;
  unint64_t v883;
  void *v884;
  __int128 v885[3];
  uint64_t v886;
  void *v887;
  void *v888;
  void *v889;
  char v890;
  void *v891;
  char v892;
  char v893;
  _BYTE v894[21];
  __int128 v895;
  uint64_t v896;
  void *v897;
  void *v898;
  char *v899;
  __int128 v900;
  __int128 v901;
  __int16 v902;
  __int128 v903[3];
  uint64_t v904;
  __int128 v905;
  __int128 v906;
  void *v907;
  char *v908;
  char *v909;
  __int128 v910;
  uint64_t v911;
  __int128 v912;
  __int128 v913;
  uint64_t v914;
  _OWORD v915[2];
  __int128 v916;
  int v917;
  void *v918;
  char v919;
  void *v920;
  void *v921;
  int v922;
  int v923;
  void *v924;
  char v925;
  std::string pn;
  char v927;
  _BYTE v928[36];
  int v929;
  std::string v930;
  _BYTE v931[24];
  _BYTE *v932;
  _BYTE v933[24];
  _BYTE *v934;
  _QWORD v935[8];
  _BYTE v936[24];
  _BYTE *v937;
  _BYTE v938[24];
  _BYTE *v939;
  _QWORD v940[8];
  _BYTE v941[24];
  _BYTE *v942;
  _BYTE v943[24];
  _BYTE *v944;
  _QWORD v945[8];
  _BYTE __str[40];
  __int128 v947;
  char v948;
  char v949;
  char v950;
  char v951;
  char v952;
  char v953;
  _BYTE v954[15];
  _BYTE v955[24];
  _BYTE *v956;
  _BYTE v957[24];
  _BYTE *v958;
  _QWORD v959[8];
  std::string __dst;
  __int128 v961;
  __int128 v962;
  std::__fs::filesystem::path __replacement;
  std::__fs::filesystem::path *p_replacement;
  _BYTE v965[24];
  _BYTE *v966;
  _BYTE v967[24];
  _BYTE *v968;
  _QWORD v969[8];
  _BYTE v970[24];
  _BYTE *v971;
  _BYTE v972[24];
  _BYTE *v973;
  _QWORD v974[8];
  _BYTE v975[24];
  _BYTE *v976;
  _BYTE v977[24];
  _BYTE *v978;
  _QWORD v979[8];
  _BYTE v980[24];
  _BYTE *v981;
  _BYTE v982[24];
  _BYTE *v983;
  void *v984[8];
  void *v985[2];
  char v986;
  void **v987;
  _QWORD v988[3];
  std::string::__raw *v989;
  __int128 v990;
  _BYTE v991[24];
  _BYTE *v992;
  std::__fs::filesystem::path v993;
  __int128 v994;
  __int128 v995;
  __int128 v996;
  __int128 v997;
  std::string v998;
  unsigned __int8 v999;
  std::string v1000;
  unsigned __int8 v1001;
  std::string v1002;
  std::string *v1003;
  __int128 v1004;
  std::__fs::filesystem::path __src[2];
  __int128 v1006;
  __int128 v1007;
  int v1008[4];
  __int128 v1009;
  __int128 v1010;
  __int128 v1011;
  __int128 v1012;
  __int128 v1013;
  __int128 v1014;
  __int128 v1015;
  __int128 v1016;
  __int128 v1017;
  __int128 v1018;
  __int128 v1019;
  __int128 v1020;
  __int128 v1021;
  _OWORD v1022[3];
  __int128 v1023;
  __int128 v1024;
  __int128 v1025;
  __int128 v1026;
  __int128 v1027;
  __int128 v1028;
  _QWORD v1029[6];
  int v1030;
  uint64_t v1031;
  __int128 v1032;
  __int128 v1033;
  uint64_t v1034;
  uint64_t v1035;
  __int128 v1036;
  int v1037;
  char v1038;
  char v1039;
  char v1040;
  _QWORD v1041[2];
  _QWORD v1042[3];
  std::string::__raw *v1043;
  __int128 v1044;
  _BYTE v1045[24];
  _BYTE *v1046;
  _BYTE v1047[568];
  _QWORD v1048[3];
  std::string *v1049;
  __int128 v1050;
  uint64_t v1051;

  v10 = MEMORY[0x24BDAC7A8](a1);
  v799 = v13;
  v15 = v14;
  v800 = v16;
  v17 = v12;
  v18 = v11;
  v20 = v19;
  v804 = v10;
  v1051 = *MEMORY[0x24BDAC8D0];
  v929 = 0;
  v798 = v21;
  if (!*(_BYTE *)(v11 + 4))
  {
    v27 = *(_QWORD *)(v12 + 80);
    v28 = *(_QWORD *)(v27 + 176);
    v29 = *(_QWORD *)(v27 + 184);
    if (v28 == v29)
      goto LABEL_17;
    v22 = 0;
    do
    {
      v30 = *(_QWORD **)(v28 + 104);
      if (*(_QWORD *)(v28 + 112) - (_QWORD)v30 == 16)
        v22 += v30[1] * *v30;
      v28 += 352;
    }
    while (v28 != v29);
LABEL_14:
    if (v22)
    {
      if (!*(_BYTE *)(v11 + 4))
        goto LABEL_32;
      goto LABEL_18;
    }
LABEL_17:
    v22 = 0;
    if (!*(_BYTE *)(v11 + 4))
      goto LABEL_32;
    goto LABEL_18;
  }
  if (!*(_BYTE *)(v11 + 2304))
  {
    v780 = 391;
LABEL_1674:
    sub_239A444D4((uint64_t)"unknown file", v780, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v22 = *(_QWORD *)(v11 + 2256);
  if (!v22)
  {
    v23 = *(_QWORD *)(v12 + 80);
    v24 = *(_QWORD *)(v23 + 176);
    v25 = *(_QWORD *)(v23 + 184);
    if (v24 == v25)
      goto LABEL_17;
    v22 = 0;
    do
    {
      v26 = *(_QWORD **)(v24 + 104);
      if (*(_QWORD *)(v24 + 112) - (_QWORD)v26 == 16)
        v22 += v26[1] * *v26;
      v24 += 352;
    }
    while (v24 != v25);
    goto LABEL_14;
  }
LABEL_18:
  if (!*(_BYTE *)(v11 + 2304))
  {
    v780 = 397;
    goto LABEL_1674;
  }
  *(_QWORD *)(v11 + 2256) = v22;
  if (*(_QWORD *)(v11 + 2264) == *(_QWORD *)(v11 + 2272))
  {
    v31 = *(_QWORD **)(v12 + 152);
    memset(__src, 0, 24);
    if (v31)
    {
      v32 = -1;
      v33 = v31;
      do
      {
        v34 = v32;
        v33 = (_QWORD *)*v33;
        ++v32;
      }
      while (v33);
      if (v32 >= 0x1FFFFFFFFFFFFFFFLL)
        sub_2394189F8();
      v35 = v34 + 2;
      v36 = (char *)operator new(8 * (v34 + 2));
      __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v36;
      __src[0].__pn_.__r_.__value_.__r.__words[2] = (std::string::size_type)&v36[8 * v35];
      v37 = v36;
      do
      {
        *(_QWORD *)v37 = v31[2];
        v37 += 8;
        v31 = (_QWORD *)*v31;
      }
      while (v31);
      __src[0].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)v37;
    }
    else
    {
      v37 = 0;
      v36 = 0;
    }
    if ((std::__fs::filesystem::path *)(v18 + 2264) != __src)
    {
      sub_23945D3D0((_QWORD *)(v18 + 2264), v36, v37, (v37 - v36) >> 3);
      v36 = (char *)__src[0].__pn_.__r_.__value_.__r.__words[0];
    }
    if (v36)
    {
      __src[0].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)v36;
      operator delete(v36);
    }
  }
LABEL_32:
  v802 = v20;
  if (v20)
  {
    if (v22)
    {
      sub_239B2A180((uint64_t)__src, 1);
      v38 = sub_239B2A814(v804, v22, (uint64_t *)__src);
      v39 = (_QWORD *)__src[0].__pn_.__r_.__value_.__r.__words[2];
      if (__src[0].__pn_.__r_.__value_.__r.__words[2])
      {
        do
        {
          v40 = (_QWORD *)*v39;
          operator delete(v39);
          v39 = v40;
        }
        while (v40);
      }
      v41 = (void *)__src[0].__pn_.__r_.__value_.__r.__words[0];
      __src[0].__pn_.__r_.__value_.__r.__words[0] = 0;
      if (v41)
        operator delete(v41);
    }
    else
    {
      v38 = 0.0;
    }
  }
  else if (v800)
  {
    v38 = 10.0;
  }
  else
  {
    v38 = 0.0;
  }
  sub_2396FF028((uint64_t)v928, v38);
  data = (std::string *)v15[1].__r_.__value_.__l.__data_;
  if (!data)
  {
    v1049 = 0;
    *(_QWORD *)&v1050 = v928;
    *((_QWORD *)&v1050 + 1) = &v929;
LABEL_50:
    v1043 = (std::string::__raw *)data;
    goto LABEL_51;
  }
  if (data == v15)
  {
    v1049 = (std::string *)v1048;
    (*(void (**)(std::string *, _QWORD *))(v15->__r_.__value_.__r.__words[0] + 24))(v15, v1048);
    data = v1049;
  }
  else
  {
    data = (std::string *)(*(uint64_t (**)(std::string *))(data->__r_.__value_.__r.__words[0] + 16))(data);
    v1049 = data;
  }
  *(_QWORD *)&v1050 = v928;
  *((_QWORD *)&v1050 + 1) = &v929;
  if (!data)
    goto LABEL_50;
  if (data != (std::string *)v1048)
  {
    data = (std::string *)(*(uint64_t (**)(std::string *))(data->__r_.__value_.__r.__words[0] + 16))(data);
    goto LABEL_50;
  }
  v1043 = (std::string::__raw *)v1042;
  (*(void (**)(_QWORD *, _QWORD *))(v1048[0] + 24))(v1048, v1042);
LABEL_51:
  v1044 = v1050;
  v1046 = 0;
  v43 = operator new(0x38uLL);
  v44 = v43;
  *v43 = &off_250AF5A80;
  if (v1043)
  {
    if (v1043 == (std::string::__raw *)v1042)
    {
      v43[4] = v43 + 1;
      (*(void (**)(_QWORD *))(v1042[0] + 24))(v1042);
    }
    else
    {
      v43[4] = v1043;
      v1043 = 0;
    }
  }
  else
  {
    v43[4] = 0;
  }
  *(_OWORD *)(v44 + 5) = v1044;
  v1046 = v44;
  __src[0].__pn_.__r_.__value_.__r.__words[0] = 0x3F80000000000000;
  sub_2396FCC68(v1047, 5, v1045, __src, 1.0);
  v45 = v1046;
  if (v1046 == v1045)
  {
    v46 = 4;
    v45 = v1045;
  }
  else
  {
    if (!v1046)
      goto LABEL_61;
    v46 = 5;
  }
  (*(void (**)(void))(*v45 + 8 * v46))();
LABEL_61:
  v47 = v1043;
  if (v1043 == (std::string::__raw *)v1042)
  {
    v48 = 4;
    v47 = (std::string::__raw *)v1042;
  }
  else
  {
    if (!v1043)
      goto LABEL_66;
    v48 = 5;
  }
  (*(void (**)(void))(v47->__words[0] + 8 * v48))();
LABEL_66:
  pn.__r_.__value_.__s.__data_[0] = 0;
  v927 = 0;
  if (!v802)
    goto LABEL_73;
  sub_239A8E150(__src, v18, v804);
  v49 = sub_2396DAB08(__src);
  v50 = v49;
  if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    if ((v50 & 1) != 0)
      goto LABEL_69;
LABEL_71:
    v51 = 4;
    goto LABEL_1210;
  }
  if ((v49 & 1) == 0)
    goto LABEL_71;
LABEL_69:
  sub_239A8E150(__src, v18, v804);
  pn = __src[0].__pn_;
  v927 = 1;
LABEL_73:
  *((_BYTE *)&__src[0].__pn_.__r_.__value_.__s + 23) = 0;
  __src[0].__pn_.__r_.__value_.__s.__data_[0] = 0;
  sub_2396FCDAC((uint64_t)v1047, (__int128 *)__src, 1);
  if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    if (!*(_QWORD *)(v17 + 416))
      goto LABEL_82;
  }
  else if (!*(_QWORD *)(v17 + 416))
  {
LABEL_82:
    if (v802)
      v52 = 2 * (*(_DWORD *)(v804 + 24) == 7);
    else
      v52 = 0;
    goto LABEL_86;
  }
  if (!*(_QWORD *)(v17 + 432))
    goto LABEL_82;
  if (v802)
  {
    if (*(_DWORD *)(v804 + 24) == 7)
      v52 = 3;
    else
      v52 = 1;
  }
  else
  {
    v52 = 1;
  }
LABEL_86:
  v53 = *(_QWORD *)(v17 + 112);
  v54 = *(_QWORD *)(v17 + 1944);
  if (v54)
  {
    v55 = *(_QWORD *)(v17 + 120);
    sub_239B2A098(v52);
    if (v56)
    {
      if (*(_BYTE *)(*(_QWORD *)(v17 + 448) + 1664))
      {
        v57 = *(_QWORD *)(v799 + 24);
        if (v57)
        {
          LODWORD(__src[0].__pn_.__r_.__value_.__l.__data_) = -4;
          (*(void (**)(uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)v57 + 48))(v57, __src);
        }
      }
    }
    sub_239B2A098(v52);
    if (v58)
      v52 = 0;
    else
      v52 = 2;
    *(_BYTE *)(*(_QWORD *)(v17 + 448) + 1664) = 0;
    if (v54 < (v55 - v53) >> 3)
    {
      v59 = *(_QWORD *)(v799 + 24);
      if (v59)
      {
        LODWORD(__src[0].__pn_.__r_.__value_.__l.__data_) = -3;
        (*(void (**)(uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)v59 + 48))(v59, __src);
      }
    }
  }
  v786 = (char **)(v17 + 112);
  v60 = *(float *)(v17 + 520);
  v61 = *(_DWORD *)(v17 + 524);
  v788 = *(_BYTE *)(v17 + 528);
  *(_QWORD *)((char *)v1041 + 7) = *(_QWORD *)(v17 + 536);
  v1041[0] = *(_QWORD *)(v17 + 529);
  sub_239A61F40((uint64_t)&v916, (__int128 *)(v17 + 544));
  v62 = *(_OWORD *)(v17 + 1024);
  v903[0] = *(_OWORD *)(v17 + 1008);
  v903[1] = v62;
  v903[2] = *(_OWORD *)(v17 + 1040);
  v63 = *(_QWORD *)(v17 + 1056);
  v905 = *(_OWORD *)(v17 + 1064);
  v906 = *(_OWORD *)(v17 + 1080);
  v904 = v63;
  v907 = 0;
  v909 = 0;
  v908 = 0;
  v64 = *(_BYTE **)(v17 + 1096);
  v65 = *(_BYTE **)(v17 + 1104);
  v66 = v65 - v64;
  if (v65 != v64)
  {
    if (v66 < 0)
      sub_2394189F8();
    v907 = operator new(v65 - v64);
    v909 = (char *)v907 + 8 * (v66 >> 3);
    memcpy(v907, v64, v66);
    v908 = v909;
  }
  if (*(char *)(v17 + 1143) < 0)
  {
    sub_23941A7F8(&v910, *(void **)(v17 + 1120), *(_QWORD *)(v17 + 1128));
  }
  else
  {
    v910 = *(_OWORD *)(v17 + 1120);
    v911 = *(_QWORD *)(v17 + 1136);
  }
  v914 = *(_QWORD *)(v17 + 1176);
  v912 = *(_OWORD *)(v17 + 1144);
  v913 = *(_OWORD *)(v17 + 1160);
  v915[0] = *(_OWORD *)(v17 + 1184);
  *(_QWORD *)((char *)v915 + 13) = *(_QWORD *)(v17 + 1197);
  *(_OWORD *)v894 = *(_OWORD *)(v17 + 1208);
  *(_QWORD *)&v894[13] = *(_QWORD *)(v17 + 1221);
  if (*(char *)(v17 + 1255) < 0)
  {
    sub_23941A7F8(&v895, *(void **)(v17 + 1232), *(_QWORD *)(v17 + 1240));
  }
  else
  {
    v895 = *(_OWORD *)(v17 + 1232);
    v896 = *(_QWORD *)(v17 + 1248);
  }
  v898 = 0;
  v897 = 0;
  v899 = 0;
  v67 = *(_BYTE **)(v17 + 1256);
  v68 = *(_BYTE **)(v17 + 1264);
  v69 = v68 - v67;
  if (v68 != v67)
  {
    if (v69 < 0)
      sub_2394189F8();
    v897 = operator new(v68 - v67);
    v898 = v897;
    v70 = (char *)v897 + 8 * (v69 >> 3);
    v899 = v70;
    memcpy(v897, v67, v69);
    v898 = v70;
  }
  v900 = *(_OWORD *)(v17 + 1280);
  v901 = *(_OWORD *)(v17 + 1296);
  v902 = *(_WORD *)(v17 + 1312);
  sub_239973BF0((uint64_t)v885, (__int128 *)(v17 + 1320));
  v893 = *(_BYTE *)(v17 + 1872);
  if (v802)
  {
    v71 = *(_BYTE *)(*(_QWORD *)(v17 + 448) + 1664);
    sub_239B28B70(v804, (uint64_t)v885);
    switch(*(_DWORD *)(v804 + 24))
    {
      case 0:
      case 1:
      case 2:
      case 4:
      case 8:
        v922 = 32000000;
        LODWORD(v916) = 5;
        LODWORD(v915[0]) = 32000000;
        HIDWORD(v905) = 1045220557;
        *(_QWORD *)&v905 = 0x300000015;
        *((_QWORD *)&v906 + 1) = 400000000;
        v894[2] = 1;
        v894[9] = 1;
        DWORD1(v901) = 0x2000;
        v72 = MEMORY[0x23B83EE44]();
        LODWORD(task_info_outCnt.__pn_.__r_.__value_.__l.__data_) = 93;
        v73 = task_info(*MEMORY[0x24BDAEC58], 0x16u, (task_info_t)__src, (mach_msg_type_number_t *)&task_info_outCnt);
        v74 = v1012 + v72;
        if (v73)
          v74 = 0;
        if (v74 <= 0xEC8E51AFFLL)
        {
          if (v74 <= 0x1BF08EAFFLL)
          {
            if (v74 <= 0x147D356FFLL)
              v75 = 4;
            else
              v75 = 8;
          }
          else
          {
            v75 = 16;
          }
        }
        else
        {
          v75 = 32;
        }
        DWORD2(v901) = v75;
        v60 = 1.0;
        goto LABEL_125;
      case 3:
        v922 = 100000;
        LODWORD(v916) = 5;
        LODWORD(v915[0]) = 100000;
        HIDWORD(v905) = 1045220557;
        *(_QWORD *)&v905 = 0x300000000;
        v894[2] = 0;
        v894[9] = 0;
        *(_QWORD *)((char *)&v901 + 4) = 0x100000400;
        v60 = 0.5;
        goto LABEL_125;
      case 5:
        LODWORD(v916) = 2;
        v917 = 1089470464;
        v922 = 400000;
        v923 = 100000;
        HIDWORD(v905) = 1061997773;
        *(_QWORD *)&v905 = 0x20000000ALL;
        LODWORD(v915[0]) = 500000;
        HIDWORD(v912) = 1056964608;
        *((_QWORD *)&v906 + 1) = 2500000;
        *(_QWORD *)&v912 = 1920;
        *((_QWORD *)&v915[0] + 1) = 2500000;
        v894[2] = 1;
        *(_QWORD *)((char *)&v901 + 4) = 0x100001000;
        v60 = 1.0;
        goto LABEL_124;
      case 6:
        v922 = 400000;
        LODWORD(v916) = 2;
        v917 = 1089470464;
        HIDWORD(v905) = 1061997773;
        *(_QWORD *)&v905 = 0x20000000ALL;
        LODWORD(v915[0]) = 400000;
        HIDWORD(v912) = 1056964608;
        *((_QWORD *)&v906 + 1) = 2500000;
        *(_QWORD *)&v912 = 1920;
        *((_QWORD *)&v915[0] + 1) = 2500000;
        v894[2] = 1;
        *(_QWORD *)((char *)&v901 + 4) = 0x100000800;
        v60 = 0.5;
LABEL_124:
        v788 = 1;
        v894[9] = 1;
LABEL_125:
        v894[1] = v71 ^ 1;
        break;
      case 7:
        break;
      default:
        sub_239A444D4((uint64_t)"unknown file", 303, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
    }
  }
  sub_239B2A098(v52);
  v795 = v76;
  sub_239B2A098(v52);
  v793 = v77;
  sub_239B2A098(v52);
  v792 = v78;
  sub_239B2A098(v52);
  v791 = v79;
  sub_239B2A098(v52);
  LODWORD(v790) = v80;
  sub_239B2A098(v52);
  HIDWORD(v790) = v81;
  sub_239B2A098(v52);
  v789 = v82;
  sub_239B2A098(v52);
  v84 = v83;
  sub_239B2A180((uint64_t)&v882, v52);
  v785 = v84;
  if (!v802)
  {
    v101 = 4;
    if (!*(_BYTE *)(v18 + 4))
      goto LABEL_733;
    goto LABEL_534;
  }
  v85 = *(_QWORD *)(v18 + 2104);
  task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = *(_QWORD *)(v18 + 2096);
  task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = v85;
  v86 = *(_QWORD *)(v18 + 2112);
  task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] = v86;
  if (v86)
  {
    v87 = (unint64_t *)(v86 + 8);
    do
      v88 = __ldxr(v87);
    while (__stxr(v88 + 1, v87));
  }
  v89 = *(_QWORD *)(v18 + 2128);
  *(_QWORD *)&v811 = *(_QWORD *)(v18 + 2120);
  *((_QWORD *)&v811 + 1) = v89;
  if (v89)
  {
    v90 = (unint64_t *)(v89 + 8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 1, v90));
  }
  v92 = *(_QWORD *)(v18 + 2144);
  *(_QWORD *)&v812 = *(_QWORD *)(v18 + 2136);
  *((_QWORD *)&v812 + 1) = v92;
  if (v92)
  {
    v93 = (unint64_t *)(v92 + 8);
    do
      v94 = __ldxr(v93);
    while (__stxr(v94 + 1, v93));
  }
  v95 = *(_QWORD *)(v18 + 2160);
  *(_QWORD *)v813 = *(_QWORD *)(v18 + 2152);
  *(_QWORD *)&v813[8] = v95;
  if (v95)
  {
    v96 = (unint64_t *)(v95 + 8);
    do
      v97 = __ldxr(v96);
    while (__stxr(v97 + 1, v96));
  }
  v98 = *(_QWORD *)(v18 + 2176);
  *(_QWORD *)&v813[16] = *(_QWORD *)(v18 + 2168);
  *(_QWORD *)&v813[24] = v98;
  if (v98)
  {
    v99 = (unint64_t *)(v98 + 8);
    do
      v100 = __ldxr(v99);
    while (__stxr(v100 + 1, v99));
  }
  v813[32] = 0;
  v813[56] = 0;
  if (*(_BYTE *)(v18 + 2208))
  {
    if (*(char *)(v18 + 2207) < 0)
    {
      sub_23941A7F8(&v813[32], *(void **)(v18 + 2184), *(_QWORD *)(v18 + 2192));
    }
    else
    {
      *(_OWORD *)&v813[32] = *(_OWORD *)(v18 + 2184);
      *(_QWORD *)&v813[48] = *(_QWORD *)(v18 + 2200);
    }
    v813[56] = 1;
  }
  v102 = (void **)(v18 + 2216);
  v813[64] = 0;
  v813[88] = 0;
  if (*(_BYTE *)(v18 + 2240))
  {
    if (*(char *)(v18 + 2239) < 0)
    {
      sub_23941A7F8(&v813[64], *(void **)(v18 + 2216), *(_QWORD *)(v18 + 2224));
    }
    else
    {
      *(_OWORD *)&v813[64] = *(_OWORD *)v102;
      *(_QWORD *)&v813[80] = *(_QWORD *)(v18 + 2232);
    }
    v813[88] = 1;
  }
  v999 = 0;
  v1000.__r_.__value_.__s.__data_[0] = 0;
  v1001 = 0;
  v994 = 0u;
  v995 = 0u;
  v996 = 0u;
  v997 = 0u;
  v998.__r_.__value_.__s.__data_[0] = 0;
  *(_OWORD *)&v993.__pn_.__r_.__value_.__r.__words[1] = 0u;
  LODWORD(v993.__pn_.__r_.__value_.__l.__data_) = *(_DWORD *)(v804 + 24);
  v993.__pn_.__r_.__value_.__s.__data_[4] = 1;
  v103 = *(_OWORD *)&task_info_outCnt.__pn_.__r_.__value_.__r.__words[1];
  if (task_info_outCnt.__pn_.__r_.__value_.__r.__words[2])
  {
    v104 = (unint64_t *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] + 8);
    do
      v105 = __ldxr(v104);
    while (__stxr(v105 + 1, v104));
    v106 = (std::__shared_weak_count *)v993.__pn_.__r_.__value_.__r.__words[2];
    *(_OWORD *)&v993.__pn_.__r_.__value_.__r.__words[1] = v103;
    if (v106)
    {
      p_shared_owners = (unint64_t *)&v106->__shared_owners_;
      do
        v108 = __ldaxr(p_shared_owners);
      while (__stlxr(v108 - 1, p_shared_owners));
      if (!v108)
      {
        ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
        std::__shared_weak_count::__release_weak(v106);
      }
    }
  }
  else
  {
    *(_OWORD *)&v993.__pn_.__r_.__value_.__r.__words[1] = task_info_outCnt.__pn_.__r_.__value_.__l.__size_;
  }
  v109 = v811;
  if (*((_QWORD *)&v811 + 1))
  {
    v110 = (unint64_t *)(*((_QWORD *)&v811 + 1) + 8);
    do
      v111 = __ldxr(v110);
    while (__stxr(v111 + 1, v110));
  }
  v112 = (std::__shared_weak_count *)*((_QWORD *)&v994 + 1);
  v994 = v109;
  if (v112)
  {
    v113 = (unint64_t *)&v112->__shared_owners_;
    do
      v114 = __ldaxr(v113);
    while (__stlxr(v114 - 1, v113));
    if (!v114)
    {
      ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
      std::__shared_weak_count::__release_weak(v112);
    }
  }
  v115 = v812;
  if (*((_QWORD *)&v812 + 1))
  {
    v116 = (unint64_t *)(*((_QWORD *)&v812 + 1) + 8);
    do
      v117 = __ldxr(v116);
    while (__stxr(v117 + 1, v116));
  }
  v118 = (std::__shared_weak_count *)*((_QWORD *)&v995 + 1);
  v995 = v115;
  if (v118)
  {
    v119 = (unint64_t *)&v118->__shared_owners_;
    do
      v120 = __ldaxr(v119);
    while (__stlxr(v120 - 1, v119));
    if (!v120)
    {
      ((void (*)(std::__shared_weak_count *))v118->__on_zero_shared)(v118);
      std::__shared_weak_count::__release_weak(v118);
    }
  }
  v122 = *(_QWORD *)v813;
  v121 = *(_QWORD *)&v813[8];
  if (*(_QWORD *)&v813[8])
  {
    v123 = (unint64_t *)(*(_QWORD *)&v813[8] + 8);
    do
      v124 = __ldxr(v123);
    while (__stxr(v124 + 1, v123));
  }
  v125 = (std::__shared_weak_count *)*((_QWORD *)&v996 + 1);
  *(_QWORD *)&v996 = v122;
  *((_QWORD *)&v996 + 1) = v121;
  if (v125)
  {
    v126 = (unint64_t *)&v125->__shared_owners_;
    do
      v127 = __ldaxr(v126);
    while (__stlxr(v127 - 1, v126));
    if (!v127)
    {
      ((void (*)(std::__shared_weak_count *))v125->__on_zero_shared)(v125);
      std::__shared_weak_count::__release_weak(v125);
    }
  }
  v881[1] = 0;
  v881[0] = 0;
  __str[0] = 0;
  __str[24] = 0;
  __dst.__r_.__value_.__s.__data_[0] = 0;
  LOBYTE(v961) = 0;
  if (!*(_BYTE *)(v804 + 136))
  {
    v782 = (std::string *)(v18 + 2184);
    v133 = *(const void **)&v813[16];
    v134 = *(unint64_t **)&v813[24];
    if (*(_QWORD *)&v813[24])
    {
      v135 = (unint64_t *)(*(_QWORD *)&v813[24] + 8);
      do
        v136 = __ldxr(v135);
      while (__stxr(v136 + 1, v135));
      v137 = __str[24];
    }
    else
    {
      v137 = 0;
    }
    v881[0] = v133;
    v881[1] = v134;
    if (v137 == v813[56])
    {
      if (v137)
        std::string::operator=((std::string *)__str, (const std::string *)&v813[32]);
    }
    else
    {
      if (v137)
      {
        if ((__str[23] & 0x80000000) != 0)
          operator delete(*(void **)__str);
        v142 = 0;
      }
      else
      {
        if ((v813[55] & 0x80000000) != 0)
        {
          sub_23941A7F8(__str, *(void **)&v813[32], *(unint64_t *)&v813[40]);
        }
        else
        {
          *(_OWORD *)__str = *(_OWORD *)&v813[32];
          *(_QWORD *)&__str[16] = *(_QWORD *)&v813[48];
        }
        v142 = 1;
      }
      __str[24] = v142;
    }
    if (v961 == v813[88])
    {
      if ((_BYTE)v961)
        std::string::operator=(&__dst, (const std::string *)&v813[64]);
      goto LABEL_233;
    }
    if (!(_BYTE)v961)
    {
      if ((v813[87] & 0x80000000) != 0)
        sub_23941A7F8(&__dst, *(void **)&v813[64], *(unint64_t *)&v813[72]);
      else
        __dst = *(std::string *)&v813[64];
      LOBYTE(v961) = 1;
      if (v133)
        goto LABEL_234;
      goto LABEL_260;
    }
LABEL_252:
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
    LOBYTE(v961) = 0;
    if (v133)
      goto LABEL_234;
    goto LABEL_260;
  }
  v128 = *(_QWORD *)(v804 + 96);
  v129 = *(uint64_t **)(v128 + 88);
  if (!v129)
    goto LABEL_194;
  v130 = 0;
  do
  {
    if (*((_BYTE *)v129 + 256) == 2)
      ++v130;
    v129 = (uint64_t *)*v129;
  }
  while (v129);
  if (v130 < 3)
  {
LABEL_194:
    v131 = 0;
    v101 = 5;
    v132 = 1;
    goto LABEL_520;
  }
  if (!sub_2396F6B1C(*(_QWORD *)(v804 + 96)))
  {
    v131 = 0;
    v101 = 6;
    v132 = 1;
    goto LABEL_520;
  }
  v138 = *(uint64_t **)(v128 + 48);
  if (!v138)
    goto LABEL_226;
  v139 = 0;
  do
  {
    if (*((_BYTE *)v138 + 51) == 2)
      ++v139;
    v138 = (uint64_t *)*v138;
  }
  while (v138);
  if (!v139)
  {
LABEL_226:
    v131 = 0;
    v101 = 7;
    v132 = 1;
    goto LABEL_520;
  }
  v782 = (std::string *)(v18 + 2184);
  v133 = *(const void **)(v804 + 96);
  v134 = *(unint64_t **)(v804 + 104);
  if (v134)
  {
    v140 = v134 + 1;
    do
      v141 = __ldxr(v140);
    while (__stxr(v141 + 1, v140));
  }
  v881[0] = v133;
  v881[1] = v134;
  if (__str[24])
  {
    if ((__str[23] & 0x80000000) != 0)
      operator delete(*(void **)__str);
    __str[24] = 0;
  }
  if ((_BYTE)v961)
    goto LABEL_252;
LABEL_233:
  if (v133)
  {
LABEL_234:
    LODWORD(__src[0].__pn_.__r_.__value_.__l.__data_) = 2;
    sub_239B2A3B0((float *)&v882, 2, __src)[3] = 0;
    LODWORD(v1002.__r_.__value_.__l.__data_) = 1;
    sub_239B2A3B0((float *)&v882, 1, &v1002)[3] = 0;
    LODWORD(v985[0]) = 0;
    sub_239B2A3B0((float *)&v882, 0, v985)[3] = 0;
    if (v134)
    {
      v143 = v134 + 1;
      do
        v144 = __ldxr(v143);
      while (__stxr(v144 + 1, v143));
    }
    v145 = (std::__shared_weak_count *)*((_QWORD *)&v997 + 1);
    *(_QWORD *)&v997 = v133;
    *((_QWORD *)&v997 + 1) = v134;
    if (v145)
    {
      v146 = (unint64_t *)&v145->__shared_owners_;
      do
        v147 = __ldaxr(v146);
      while (__stlxr(v147 - 1, v146));
      if (!v147)
      {
        ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
        std::__shared_weak_count::__release_weak(v145);
      }
    }
    v148 = v881[0];
    v149 = v881[1];
    if (v881[1])
    {
      v150 = (unint64_t *)((char *)v881[1] + 8);
      do
        v151 = __ldxr(v150);
      while (__stxr(v151 + 1, v150));
    }
    v152 = *(std::__shared_weak_count **)(a10 + 264);
    *(_QWORD *)(a10 + 256) = v148;
    *(_QWORD *)(a10 + 264) = v149;
    if (v152)
    {
      v153 = (unint64_t *)&v152->__shared_owners_;
      do
        v154 = __ldaxr(v153);
      while (__stlxr(v154 - 1, v153));
      if (!v154)
      {
        ((void (*)(std::__shared_weak_count *))v152->__on_zero_shared)(v152);
        std::__shared_weak_count::__release_weak(v152);
      }
    }
    v132 = 0;
    v792 = 0;
    v793 = 0;
    v795 = 0;
    goto LABEL_261;
  }
LABEL_260:
  v132 = 1;
LABEL_261:
  *((_BYTE *)&__src[0].__pn_.__r_.__value_.__s + 23) = 0;
  __src[0].__pn_.__r_.__value_.__s.__data_[0] = 0;
  sub_2396FCDAC((uint64_t)v1047, (__int128 *)__src, 1);
  if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
  v155 = *(_DWORD *)(v804 + 24);
  if (!task_info_outCnt.__pn_.__r_.__value_.__s.__data_[4])
    goto LABEL_311;
  if (LODWORD(task_info_outCnt.__pn_.__r_.__value_.__l.__data_) != v155)
  {
    if (LODWORD(task_info_outCnt.__pn_.__r_.__value_.__l.__data_) > 8
      || ((1 << task_info_outCnt.__pn_.__r_.__value_.__s.__data_[0]) & 0x117) == 0)
    {
      goto LABEL_311;
    }
    if (v155 > 8)
    {
LABEL_313:
      BYTE8(v1011) = 0;
      BYTE8(v1017) = 0;
      v1013 = 0u;
      v1014 = 0u;
      v1015 = 0u;
      LOBYTE(v1016) = 0;
      memset(__src, 0, sizeof(__src));
      v1006 = 0u;
      v1007 = 0u;
      *(_OWORD *)v1008 = 0u;
      v1012 = 0u;
      v1009 = 0u;
      LOBYTE(v1010) = 0;
      v160 = *(std::__shared_weak_count **)(v18 + 1864);
      *(_OWORD *)(v18 + 1856) = 0u;
      if (v160)
      {
        v161 = (unint64_t *)&v160->__shared_owners_;
        do
          v162 = __ldaxr(v161);
        while (__stlxr(v162 - 1, v161));
        if (!v162)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
      }
      v163 = *(_OWORD *)&__src[0].__pn_.__r_.__value_.__r.__words[2];
      __src[1].__pn_.__r_.__value_.__r.__words[0] = 0;
      __src[0].__pn_.__r_.__value_.__r.__words[2] = 0;
      v164 = *(std::__shared_weak_count **)(v18 + 1880);
      *(_OWORD *)(v18 + 1872) = v163;
      if (v164)
      {
        v165 = (unint64_t *)&v164->__shared_owners_;
        do
          v166 = __ldaxr(v165);
        while (__stlxr(v166 - 1, v165));
        if (!v166)
        {
          ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
          std::__shared_weak_count::__release_weak(v164);
        }
      }
      v167 = *(_OWORD *)&__src[1].__pn_.__r_.__value_.__r.__words[1];
      *(_OWORD *)&__src[1].__pn_.__r_.__value_.__r.__words[1] = 0uLL;
      v168 = *(std::__shared_weak_count **)(v18 + 1896);
      *(_OWORD *)(v18 + 1888) = v167;
      if (v168)
      {
        v169 = (unint64_t *)&v168->__shared_owners_;
        do
          v170 = __ldaxr(v169);
        while (__stlxr(v170 - 1, v169));
        if (!v170)
        {
          ((void (*)(std::__shared_weak_count *))v168->__on_zero_shared)(v168);
          std::__shared_weak_count::__release_weak(v168);
        }
      }
      v171 = v1006;
      v1006 = 0uLL;
      v172 = *(std::__shared_weak_count **)(v18 + 1912);
      *(_OWORD *)(v18 + 1904) = v171;
      if (v172)
      {
        v173 = (unint64_t *)&v172->__shared_owners_;
        do
          v174 = __ldaxr(v173);
        while (__stlxr(v174 - 1, v173));
        if (!v174)
        {
          ((void (*)(std::__shared_weak_count *))v172->__on_zero_shared)(v172);
          std::__shared_weak_count::__release_weak(v172);
        }
      }
      v175 = v1007;
      v1007 = 0uLL;
      v176 = *(std::__shared_weak_count **)(v18 + 1928);
      *(_OWORD *)(v18 + 1920) = v175;
      if (v176)
      {
        v177 = (unint64_t *)&v176->__shared_owners_;
        do
          v178 = __ldaxr(v177);
        while (__stlxr(v178 - 1, v177));
        if (!v178)
        {
          ((void (*)(std::__shared_weak_count *))v176->__on_zero_shared)(v176);
          std::__shared_weak_count::__release_weak(v176);
        }
      }
      v179 = *(_OWORD *)v1008;
      memset(v1008, 0, sizeof(v1008));
      v180 = *(std::__shared_weak_count **)(v18 + 1944);
      *(_OWORD *)(v18 + 1936) = v179;
      if (v180)
      {
        v181 = (unint64_t *)&v180->__shared_owners_;
        do
          v182 = __ldaxr(v181);
        while (__stlxr(v182 - 1, v181));
        if (!v182)
        {
          ((void (*)(std::__shared_weak_count *))v180->__on_zero_shared)(v180);
          std::__shared_weak_count::__release_weak(v180);
        }
      }
      v183 = v1009;
      v1009 = 0uLL;
      v184 = *(std::__shared_weak_count **)(v18 + 1960);
      *(_OWORD *)(v18 + 1952) = v183;
      if (v184)
      {
        v185 = (unint64_t *)&v184->__shared_owners_;
        do
          v186 = __ldaxr(v185);
        while (__stlxr(v186 - 1, v185));
        if (!v186)
        {
          ((void (*)(std::__shared_weak_count *))v184->__on_zero_shared)(v184);
          std::__shared_weak_count::__release_weak(v184);
        }
      }
      v187 = (void **)(v18 + 1968);
      if (*(unsigned __int8 *)(v18 + 1992) == BYTE8(v1011))
      {
        if (*(_BYTE *)(v18 + 1992))
        {
          if (*(char *)(v18 + 1991) < 0)
            operator delete(*v187);
          *(_OWORD *)v187 = v1010;
          *(_QWORD *)(v18 + 1984) = v1011;
          BYTE7(v1011) = 0;
          LOBYTE(v1010) = 0;
        }
      }
      else if (*(_BYTE *)(v18 + 1992))
      {
        if (*(char *)(v18 + 1991) < 0)
          operator delete(*v187);
        *(_BYTE *)(v18 + 1992) = 0;
      }
      else
      {
        *(_OWORD *)v187 = v1010;
        *(_QWORD *)(v18 + 1984) = v1011;
        *(_QWORD *)&v1011 = 0;
        v1010 = 0uLL;
        *(_BYTE *)(v18 + 1992) = 1;
      }
      v188 = v1012;
      v1012 = 0uLL;
      v189 = *(std::__shared_weak_count **)(v18 + 2008);
      *(_OWORD *)(v18 + 2000) = v188;
      if (v189)
      {
        v190 = (unint64_t *)&v189->__shared_owners_;
        do
          v191 = __ldaxr(v190);
        while (__stlxr(v191 - 1, v190));
        if (!v191)
        {
          ((void (*)(std::__shared_weak_count *))v189->__on_zero_shared)(v189);
          std::__shared_weak_count::__release_weak(v189);
        }
      }
      v192 = v1013;
      v1013 = 0uLL;
      v193 = *(std::__shared_weak_count **)(v18 + 2024);
      *(_OWORD *)(v18 + 2016) = v192;
      if (v193)
      {
        v194 = (unint64_t *)&v193->__shared_owners_;
        do
          v195 = __ldaxr(v194);
        while (__stlxr(v195 - 1, v194));
        if (!v195)
        {
          ((void (*)(std::__shared_weak_count *))v193->__on_zero_shared)(v193);
          std::__shared_weak_count::__release_weak(v193);
        }
      }
      v196 = v1014;
      v1014 = 0uLL;
      v197 = *(std::__shared_weak_count **)(v18 + 2040);
      *(_OWORD *)(v18 + 2032) = v196;
      if (v197)
      {
        v198 = (unint64_t *)&v197->__shared_owners_;
        do
          v199 = __ldaxr(v198);
        while (__stlxr(v199 - 1, v198));
        if (!v199)
        {
          ((void (*)(std::__shared_weak_count *))v197->__on_zero_shared)(v197);
          std::__shared_weak_count::__release_weak(v197);
        }
      }
      v200 = v1015;
      v1015 = 0uLL;
      v201 = *(std::__shared_weak_count **)(v18 + 2056);
      *(_OWORD *)(v18 + 2048) = v200;
      if (v201)
      {
        v202 = (unint64_t *)&v201->__shared_owners_;
        do
          v203 = __ldaxr(v202);
        while (__stlxr(v203 - 1, v202));
        if (!v203)
        {
          ((void (*)(std::__shared_weak_count *))v201->__on_zero_shared)(v201);
          std::__shared_weak_count::__release_weak(v201);
        }
      }
      v204 = (void **)(v18 + 2064);
      if (*(unsigned __int8 *)(v18 + 2088) == BYTE8(v1017))
      {
        if (*(_BYTE *)(v18 + 2088))
        {
          if (*(char *)(v18 + 2087) < 0)
            operator delete(*v204);
          *(_OWORD *)v204 = v1016;
          *(_QWORD *)(v18 + 2080) = v1017;
          BYTE7(v1017) = 0;
          LOBYTE(v1016) = 0;
        }
      }
      else if (*(_BYTE *)(v18 + 2088))
      {
        if (*(char *)(v18 + 2087) < 0)
          operator delete(*v204);
        *(_BYTE *)(v18 + 2088) = 0;
      }
      else
      {
        *(_OWORD *)v204 = v1016;
        *(_QWORD *)(v18 + 2080) = v1017;
        *(_QWORD *)&v1017 = 0;
        v1016 = 0uLL;
        *(_BYTE *)(v18 + 2088) = 1;
      }
      sub_239A72F40((uint64_t)__src);
      *(_DWORD *)(v18 + 2096) = v993.__pn_.__r_.__value_.__l.__data_;
      *(_BYTE *)(v18 + 2100) = v993.__pn_.__r_.__value_.__s.__data_[4];
      v205 = *(_OWORD *)&v993.__pn_.__r_.__value_.__r.__words[1];
      if (v993.__pn_.__r_.__value_.__r.__words[2])
      {
        v206 = (unint64_t *)(v993.__pn_.__r_.__value_.__r.__words[2] + 8);
        do
          v207 = __ldxr(v206);
        while (__stxr(v207 + 1, v206));
      }
      *(_QWORD *)(v18 + 2104) = v205;
      v208 = *(std::__shared_weak_count **)(v18 + 2112);
      *(_QWORD *)(v18 + 2112) = *((_QWORD *)&v205 + 1);
      if (v208)
      {
        v209 = (unint64_t *)&v208->__shared_owners_;
        do
          v210 = __ldaxr(v209);
        while (__stlxr(v210 - 1, v209));
        if (!v210)
        {
          ((void (*)(std::__shared_weak_count *))v208->__on_zero_shared)(v208);
          std::__shared_weak_count::__release_weak(v208);
        }
      }
      v211 = v994;
      if (*((_QWORD *)&v994 + 1))
      {
        v212 = (unint64_t *)(*((_QWORD *)&v994 + 1) + 8);
        do
          v213 = __ldxr(v212);
        while (__stxr(v213 + 1, v212));
      }
      *(_QWORD *)(v18 + 2120) = v211;
      v214 = *(std::__shared_weak_count **)(v18 + 2128);
      *(_QWORD *)(v18 + 2128) = *((_QWORD *)&v211 + 1);
      if (v214)
      {
        v215 = (unint64_t *)&v214->__shared_owners_;
        do
          v216 = __ldaxr(v215);
        while (__stlxr(v216 - 1, v215));
        if (!v216)
        {
          ((void (*)(std::__shared_weak_count *))v214->__on_zero_shared)(v214);
          std::__shared_weak_count::__release_weak(v214);
        }
      }
      v217 = v995;
      if (*((_QWORD *)&v995 + 1))
      {
        v218 = (unint64_t *)(*((_QWORD *)&v995 + 1) + 8);
        do
          v219 = __ldxr(v218);
        while (__stxr(v219 + 1, v218));
      }
      *(_QWORD *)(v18 + 2136) = v217;
      v220 = *(std::__shared_weak_count **)(v18 + 2144);
      *(_QWORD *)(v18 + 2144) = *((_QWORD *)&v217 + 1);
      if (v220)
      {
        v221 = (unint64_t *)&v220->__shared_owners_;
        do
          v222 = __ldaxr(v221);
        while (__stlxr(v222 - 1, v221));
        if (!v222)
        {
          ((void (*)(std::__shared_weak_count *))v220->__on_zero_shared)(v220);
          std::__shared_weak_count::__release_weak(v220);
        }
      }
      v223 = v996;
      if (*((_QWORD *)&v996 + 1))
      {
        v224 = (unint64_t *)(*((_QWORD *)&v996 + 1) + 8);
        do
          v225 = __ldxr(v224);
        while (__stxr(v225 + 1, v224));
      }
      *(_QWORD *)(v18 + 2152) = v223;
      v226 = *(std::__shared_weak_count **)(v18 + 2160);
      *(_QWORD *)(v18 + 2160) = *((_QWORD *)&v223 + 1);
      if (v226)
      {
        v227 = (unint64_t *)&v226->__shared_owners_;
        do
          v228 = __ldaxr(v227);
        while (__stlxr(v228 - 1, v227));
        if (!v228)
        {
          ((void (*)(std::__shared_weak_count *))v226->__on_zero_shared)(v226);
          std::__shared_weak_count::__release_weak(v226);
        }
      }
      v229 = v997;
      if (*((_QWORD *)&v997 + 1))
      {
        v230 = (unint64_t *)(*((_QWORD *)&v997 + 1) + 8);
        do
          v231 = __ldxr(v230);
        while (__stxr(v231 + 1, v230));
      }
      *(_QWORD *)(v18 + 2168) = v229;
      v232 = *(std::__shared_weak_count **)(v18 + 2176);
      *(_QWORD *)(v18 + 2176) = *((_QWORD *)&v229 + 1);
      if (v232)
      {
        v233 = (unint64_t *)&v232->__shared_owners_;
        do
          v234 = __ldaxr(v233);
        while (__stlxr(v234 - 1, v233));
        if (!v234)
        {
          ((void (*)(std::__shared_weak_count *))v232->__on_zero_shared)(v232);
          std::__shared_weak_count::__release_weak(v232);
        }
      }
      if (*(unsigned __int8 *)(v18 + 2208) == v999)
      {
        if (*(_BYTE *)(v18 + 2208))
          std::string::operator=(v782, &v998);
      }
      else
      {
        if (*(_BYTE *)(v18 + 2208))
        {
          if (*(char *)(v18 + 2207) < 0)
            operator delete(v782->__r_.__value_.__l.__data_);
          v235 = 0;
        }
        else
        {
          if (SHIBYTE(v998.__r_.__value_.__r.__words[2]) < 0)
            sub_23941A7F8(v782, v998.__r_.__value_.__l.__data_, v998.__r_.__value_.__l.__size_);
          else
            *v782 = v998;
          v235 = 1;
        }
        *(_BYTE *)(v18 + 2208) = v235;
      }
      if (*(unsigned __int8 *)(v18 + 2240) == v1001)
      {
        if (*(_BYTE *)(v18 + 2240))
          std::string::operator=((std::string *)(v18 + 2216), &v1000);
      }
      else
      {
        if (*(_BYTE *)(v18 + 2240))
        {
          if (*(char *)(v18 + 2239) < 0)
            operator delete(*v102);
          v236 = 0;
        }
        else
        {
          if (SHIBYTE(v1000.__r_.__value_.__r.__words[2]) < 0)
          {
            sub_23941A7F8((_BYTE *)(v18 + 2216), v1000.__r_.__value_.__l.__data_, v1000.__r_.__value_.__l.__size_);
          }
          else
          {
            *(_OWORD *)v102 = *(_OWORD *)&v1000.__r_.__value_.__l.__data_;
            *(_QWORD *)(v18 + 2232) = *((_QWORD *)&v1000.__r_.__value_.__l + 2);
          }
          v236 = 1;
        }
        *(_BYTE *)(v18 + 2240) = v236;
      }
      v237 = v995;
      if (*((_QWORD *)&v995 + 1))
      {
        v238 = (unint64_t *)(*((_QWORD *)&v995 + 1) + 8);
        do
          v239 = __ldxr(v238);
        while (__stxr(v239 + 1, v238));
      }
      *(_QWORD *)(v18 + 2032) = v237;
      v240 = *(std::__shared_weak_count **)(v18 + 2040);
      *(_QWORD *)(v18 + 2040) = *((_QWORD *)&v237 + 1);
      if (v240)
      {
        v241 = (unint64_t *)&v240->__shared_owners_;
        do
          v242 = __ldaxr(v241);
        while (__stlxr(v242 - 1, v241));
        if (!v242)
        {
          ((void (*)(std::__shared_weak_count *))v240->__on_zero_shared)(v240);
          std::__shared_weak_count::__release_weak(v240);
        }
      }
      v243 = v996;
      if (*((_QWORD *)&v996 + 1))
      {
        v244 = (unint64_t *)(*((_QWORD *)&v996 + 1) + 8);
        do
          v245 = __ldxr(v244);
        while (__stxr(v245 + 1, v244));
      }
      *(_QWORD *)(v18 + 2016) = v243;
      v246 = *(std::__shared_weak_count **)(v18 + 2024);
      *(_QWORD *)(v18 + 2024) = *((_QWORD *)&v243 + 1);
      if (v246)
      {
        v247 = (unint64_t *)&v246->__shared_owners_;
        do
          v248 = __ldaxr(v247);
        while (__stlxr(v248 - 1, v247));
        if (!v248)
        {
          ((void (*)(std::__shared_weak_count *))v246->__on_zero_shared)(v246);
          std::__shared_weak_count::__release_weak(v246);
        }
      }
      v249 = v997;
      if (*((_QWORD *)&v997 + 1))
      {
        v250 = (unint64_t *)(*((_QWORD *)&v997 + 1) + 8);
        do
          v251 = __ldxr(v250);
        while (__stxr(v251 + 1, v250));
      }
      *(_QWORD *)(v18 + 1856) = v249;
      v252 = *(std::__shared_weak_count **)(v18 + 1864);
      *(_QWORD *)(v18 + 1864) = *((_QWORD *)&v249 + 1);
      if (v252)
      {
        v253 = (unint64_t *)&v252->__shared_owners_;
        do
          v254 = __ldaxr(v253);
        while (__stlxr(v254 - 1, v253));
        if (!v254)
        {
          ((void (*)(std::__shared_weak_count *))v252->__on_zero_shared)(v252);
          std::__shared_weak_count::__release_weak(v252);
        }
      }
      v255 = *(_OWORD *)&v993.__pn_.__r_.__value_.__r.__words[1];
      if (v993.__pn_.__r_.__value_.__r.__words[2])
      {
        v256 = (unint64_t *)(v993.__pn_.__r_.__value_.__r.__words[2] + 8);
        do
          v257 = __ldxr(v256);
        while (__stxr(v257 + 1, v256));
      }
      *(_QWORD *)(v18 + 1872) = v255;
      v258 = *(std::__shared_weak_count **)(v18 + 1880);
      *(_QWORD *)(v18 + 1880) = *((_QWORD *)&v255 + 1);
      if (v258)
      {
        v259 = (unint64_t *)&v258->__shared_owners_;
        do
          v260 = __ldaxr(v259);
        while (__stlxr(v260 - 1, v259));
        if (!v260)
        {
          ((void (*)(std::__shared_weak_count *))v258->__on_zero_shared)(v258);
          std::__shared_weak_count::__release_weak(v258);
        }
      }
      v261 = v994;
      if (*((_QWORD *)&v994 + 1))
      {
        v262 = (unint64_t *)(*((_QWORD *)&v994 + 1) + 8);
        do
          v263 = __ldxr(v262);
        while (__stxr(v263 + 1, v262));
      }
      *(_QWORD *)(v18 + 1888) = v261;
      v264 = *(std::__shared_weak_count **)(v18 + 1896);
      *(_QWORD *)(v18 + 1896) = *((_QWORD *)&v261 + 1);
      if (v264)
      {
        v265 = (unint64_t *)&v264->__shared_owners_;
        do
          v266 = __ldaxr(v265);
        while (__stlxr(v266 - 1, v265));
        if (!v266)
        {
          ((void (*)(std::__shared_weak_count *))v264->__on_zero_shared)(v264);
          std::__shared_weak_count::__release_weak(v264);
        }
      }
      if (*(unsigned __int8 *)(v18 + 1992) == v999)
      {
        if (*(_BYTE *)(v18 + 1992))
          std::string::operator=((std::string *)(v18 + 1968), &v998);
      }
      else
      {
        if (*(_BYTE *)(v18 + 1992))
        {
          if (*(char *)(v18 + 1991) < 0)
            operator delete(*v187);
          v267 = 0;
        }
        else
        {
          if (SHIBYTE(v998.__r_.__value_.__r.__words[2]) < 0)
          {
            sub_23941A7F8((_BYTE *)(v18 + 1968), v998.__r_.__value_.__l.__data_, v998.__r_.__value_.__l.__size_);
          }
          else
          {
            *(_OWORD *)v187 = *(_OWORD *)&v998.__r_.__value_.__l.__data_;
            *(_QWORD *)(v18 + 1984) = *((_QWORD *)&v998.__r_.__value_.__l + 2);
          }
          v267 = 1;
        }
        *(_BYTE *)(v18 + 1992) = v267;
      }
      if (*(unsigned __int8 *)(v18 + 2088) == v1001)
      {
        if (*(_BYTE *)(v18 + 2088))
          std::string::operator=((std::string *)(v18 + 2064), &v1000);
      }
      else
      {
        if (*(_BYTE *)(v18 + 2088))
        {
          if (*(char *)(v18 + 2087) < 0)
            operator delete(*v204);
          v268 = 0;
        }
        else
        {
          if (SHIBYTE(v1000.__r_.__value_.__r.__words[2]) < 0)
          {
            sub_23941A7F8((_BYTE *)(v18 + 2064), v1000.__r_.__value_.__l.__data_, v1000.__r_.__value_.__l.__size_);
          }
          else
          {
            *(_OWORD *)v204 = *(_OWORD *)&v1000.__r_.__value_.__l.__data_;
            *(_QWORD *)(v18 + 2080) = *((_QWORD *)&v1000.__r_.__value_.__l + 2);
          }
          v268 = 1;
        }
        *(_BYTE *)(v18 + 2088) = v268;
      }
      *((_BYTE *)&__src[0].__pn_.__r_.__value_.__s + 23) = 0;
      __src[0].__pn_.__r_.__value_.__s.__data_[0] = 0;
      sub_2396FCDAC((uint64_t)v1047, (__int128 *)__src, 1);
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
      v101 = 4;
      v131 = 1;
      goto LABEL_520;
    }
    if (((0x117u >> v155) & 1) == 0)
      goto LABEL_311;
  }
  if (!(_BYTE)v961 || !__str[24])
  {
LABEL_311:
    if (v155 == 4)
    {
      LODWORD(__src[0].__pn_.__r_.__value_.__l.__data_) = 7;
      sub_239B2A3B0((float *)&v882, 7, __src)[3] = 5;
    }
    goto LABEL_313;
  }
  LODWORD(__src[0].__pn_.__r_.__value_.__l.__data_) = 6;
  sub_239B2A3B0((float *)&v882, 6, __src)[3] = 0;
  LODWORD(v1002.__r_.__value_.__l.__data_) = 5;
  sub_239B2A3B0((float *)&v882, 5, &v1002)[3] = 0;
  LODWORD(v985[0]) = 4;
  sub_239B2A3B0((float *)&v882, 4, v985)[3] = 0;
  LODWORD(__replacement.__pn_.__r_.__value_.__l.__data_) = 3;
  sub_239B2A3B0((float *)&v882, 3, &__replacement)[3] = 0;
  if (v999 == __str[24])
  {
    if (v999)
      std::string::operator=(&v998, (const std::string *)__str);
  }
  else
  {
    if (v999)
    {
      if (SHIBYTE(v998.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v998.__r_.__value_.__l.__data_);
      v156 = 0;
    }
    else
    {
      if ((__str[23] & 0x80000000) != 0)
        sub_23941A7F8(&v998, *(void **)__str, *(unint64_t *)&__str[8]);
      else
        v998 = *(std::string *)__str;
      v156 = 1;
    }
    v999 = v156;
  }
  if (v1001 == v961)
  {
    if (v1001)
      std::string::operator=(&v1000, &__dst);
  }
  else
  {
    if (v1001)
    {
      if (SHIBYTE(v1000.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v1000.__r_.__value_.__l.__data_);
      v157 = 0;
    }
    else
    {
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        sub_23941A7F8(&v1000, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      else
        v1000 = __dst;
      v157 = 1;
    }
    v1001 = v157;
  }
  if (!v927)
    sub_2394875CC();
  memset(&v1002, 0, sizeof(v1002));
  sub_23948900C(&v1002, (std::string *)"point_cloud.ply", (std::string *)"");
  sub_239498A04((std::__fs::filesystem::path *)&v1002, (uint64_t)&pn, __src);
  if (SHIBYTE(v1002.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v1002.__r_.__value_.__l.__data_);
  v158 = sub_2396FC5A0(__str, (const char *)__src);
  if (v158)
  {
    v159 = (std::string *)(a10 + 32);
    if (*(_BYTE *)(a10 + 56))
    {
      std::string::operator=(v159, &__src[0].__pn_);
    }
    else
    {
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_23941A7F8(v159, __src[0].__pn_.__r_.__value_.__l.__data_, __src[0].__pn_.__r_.__value_.__l.__size_);
      }
      else
      {
        *(_OWORD *)&v159->__r_.__value_.__l.__data_ = *(_OWORD *)&__src[0].__pn_.__r_.__value_.__l.__data_;
        *(_QWORD *)(a10 + 48) = *((_QWORD *)&__src[0].__pn_.__r_.__value_.__l + 2);
      }
      *(_BYTE *)(a10 + 56) = 1;
    }
    if (!(_BYTE)v961)
      sub_2394875CC();
    sub_239B206CC(v18, &__dst);
  }
  if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
  v132 = 0;
  if (v158)
  {
    v789 = 0;
    v790 = 0;
    v791 = 0;
    v155 = *(_DWORD *)(v804 + 24);
    goto LABEL_311;
  }
  v789 = 0;
  v790 = 0;
  v791 = 0;
  v131 = 0;
  v101 = 4;
LABEL_520:
  if ((_BYTE)v961 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (__str[24] && (__str[23] & 0x80000000) != 0)
    operator delete(*(void **)__str);
  v269 = (std::__shared_weak_count *)v881[1];
  if (v881[1])
  {
    v270 = (unint64_t *)((char *)v881[1] + 8);
    do
      v271 = __ldaxr(v270);
    while (__stlxr(v271 - 1, v270));
    if (!v271)
    {
      ((void (*)(std::__shared_weak_count *))v269->__on_zero_shared)(v269);
      std::__shared_weak_count::__release_weak(v269);
    }
  }
  sub_239A72DB4((uint64_t)&v993);
  sub_239A72DB4((uint64_t)&task_info_outCnt);
  if ((v131 & 1) == 0)
    goto LABEL_634;
  if (!*(_BYTE *)(v18 + 4))
    goto LABEL_733;
  if (!v132)
  {
    v284 = 1;
    goto LABEL_630;
  }
LABEL_534:
  v272 = CFUUIDCreate(0);
  sub_2396293E8((int)__src, v272);
  sub_2396293EC((unint64_t *)__src, (uint64_t)&task_info_outCnt);
  size = (std::__shared_weak_count *)__src[0].__pn_.__r_.__value_.__l.__size_;
  if (__src[0].__pn_.__r_.__value_.__l.__size_)
  {
    v274 = (unint64_t *)(__src[0].__pn_.__r_.__value_.__l.__size_ + 8);
    do
      v275 = __ldaxr(v274);
    while (__stlxr(v275 - 1, v274));
    if (!v275)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  LODWORD(v811) = 2;
  BYTE8(v811) = 0;
  v813[32] = 0;
  v813[40] = 0;
  v813[80] = 0;
  v813[88] = 0;
  v276 = sub_239A94074(v18, (uint64_t)&task_info_outCnt);
  if (v802)
    v277 = v276;
  else
    v277 = 0;
  if ((v277 & 1) != 0)
  {
    v278 = *(_DWORD *)(v804 + 24);
    v279 = (0x117u >> v278) & 1;
    if (v278 > 8)
      v279 = 0;
    if (((1 << v811) & 0x117) != 0)
      v280 = v279;
    else
      v280 = 0;
    if (v811 > 8)
      v280 = 0;
    if ((_DWORD)v811 == v278)
      v281 = 1;
    else
      v281 = v280;
  }
  else
  {
    v281 = 0;
  }
  if (!*(_BYTE *)(v18 + 4))
  {
    v781 = 390;
    goto LABEL_1682;
  }
  if (!*(_BYTE *)(v18 + 2304))
  {
    v781 = 391;
LABEL_1682:
    sub_239A444D4((uint64_t)"unknown file", v781, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v282 = *(_DWORD *)(v18 + 2248);
  if (v282 > 29999)
  {
    if (v282 != 30000)
    {
      if (v282 == 50000)
      {
        v283 = v281 ^ 1;
        v789 &= v281 ^ 1;
      }
      else
      {
        if (v282 != 40000)
        {
LABEL_610:
          *((_BYTE *)&__src[0].__pn_.__r_.__value_.__s + 23) = 0;
          __src[0].__pn_.__r_.__value_.__s.__data_[0] = 0;
          sub_2396FCDAC((uint64_t)v1047, (__int128 *)__src, 1);
          if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
          v300 = 1;
          goto LABEL_613;
        }
        v283 = v281 ^ 1;
      }
      HIDWORD(v790) &= v283;
    }
    if (v281)
    {
      if (!v927)
        sub_2394875CC();
      memset(__src, 0, 24);
      sub_23948900C(&__src[0].__pn_, (std::string *)"point_cloud.ply", (std::string *)"");
      sub_239498A04(__src, (uint64_t)&pn, &v993);
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
      sub_239B149D4((char *)__src, v18);
      std::__fs::filesystem::__status(&v993, 0);
      if (__str[0] && __str[0] != 255)
        std::__fs::filesystem::__remove(&v993, 0);
      if (__src[1].__pn_.__r_.__value_.__s.__data_[0])
      {
        v285 = sub_2396FC5A0((const char *)__src, (const char *)&v993);
        v286 = v285;
        if (v285)
          sub_239A4D8DC((std::string *)(a10 + 32), &v993.__pn_);
        else
          v101 = 3;
        if (__src[1].__pn_.__r_.__value_.__s.__data_[0] && SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
      }
      else
      {
        v286 = 0;
        v101 = 3;
      }
      if (SHIBYTE(v993.__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v993.__pn_.__r_.__value_.__l.__data_);
      LODWORD(v790) = 0;
      if (!v286)
      {
        v300 = 0;
        if (!v813[80])
          goto LABEL_622;
        goto LABEL_614;
      }
    }
    goto LABEL_586;
  }
  if (v282 == 5000)
  {
LABEL_609:
    v795 = 0;
    goto LABEL_610;
  }
  if (v282 != 10000)
  {
    if (v282 != 20000)
      goto LABEL_610;
LABEL_586:
    v791 &= ~v281;
  }
  *(_OWORD *)&v993.__pn_.__r_.__value_.__l.__data_ = 0uLL;
  v287 = sub_239B05E54(v18, &v993);
  if ((v287 & 1) != 0)
  {
    v288 = *(_OWORD *)&v993.__pn_.__r_.__value_.__l.__data_;
    if (v993.__pn_.__r_.__value_.__l.__size_)
    {
      v289 = (unint64_t *)(v993.__pn_.__r_.__value_.__l.__size_ + 8);
      do
        v290 = __ldxr(v289);
      while (__stxr(v290 + 1, v289));
    }
    v291 = *(std::__shared_weak_count **)(a10 + 264);
    *(_OWORD *)(a10 + 256) = v288;
    if (v291)
    {
      v292 = (unint64_t *)&v291->__shared_owners_;
      do
        v293 = __ldaxr(v292);
      while (__stlxr(v293 - 1, v292));
      if (!v293)
      {
        ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
        std::__shared_weak_count::__release_weak(v291);
      }
    }
    v294 = *(_QWORD *)(a9 + 24);
    if (v294)
    {
      *(_OWORD *)&__src[0].__pn_.__r_.__value_.__l.__data_ = *(_OWORD *)&v993.__pn_.__r_.__value_.__l.__data_;
      if (v993.__pn_.__r_.__value_.__l.__size_)
      {
        v295 = (unint64_t *)(v993.__pn_.__r_.__value_.__l.__size_ + 8);
        do
          v296 = __ldxr(v295);
        while (__stxr(v296 + 1, v295));
        v294 = *(_QWORD *)(a9 + 24);
        __src[0].__pn_.__r_.__value_.__s.__data_[16] = 0;
        v1040 = 0;
        if (!v294)
          sub_2394172E0();
      }
      else
      {
        __src[0].__pn_.__r_.__value_.__s.__data_[16] = 0;
        v1040 = 0;
      }
      (*(void (**)(uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)v294 + 48))(v294, __src);
      if (v1040)
        sub_239A615DC((uint64_t)&__src[0].__pn_.__r_.__value_.__r.__words[2]);
      v322 = (std::__shared_weak_count *)__src[0].__pn_.__r_.__value_.__l.__size_;
      if (__src[0].__pn_.__r_.__value_.__l.__size_)
      {
        v323 = (unint64_t *)(__src[0].__pn_.__r_.__value_.__l.__size_ + 8);
        do
          v324 = __ldaxr(v323);
        while (__stlxr(v324 - 1, v323));
        if (!v324)
        {
          ((void (*)(std::__shared_weak_count *))v322->__on_zero_shared)(v322);
          std::__shared_weak_count::__release_weak(v322);
        }
      }
    }
  }
  else
  {
    v101 = 3;
  }
  v297 = (std::__shared_weak_count *)v993.__pn_.__r_.__value_.__l.__size_;
  if (v993.__pn_.__r_.__value_.__l.__size_)
  {
    v298 = (unint64_t *)(v993.__pn_.__r_.__value_.__l.__size_ + 8);
    do
      v299 = __ldaxr(v298);
    while (__stlxr(v299 - 1, v298));
    if (!v299)
    {
      ((void (*)(std::__shared_weak_count *))v297->__on_zero_shared)(v297);
      std::__shared_weak_count::__release_weak(v297);
    }
  }
  v792 = 0;
  v793 = 0;
  v300 = 0;
  if (v287)
    goto LABEL_609;
LABEL_613:
  if (!v813[80])
    goto LABEL_622;
LABEL_614:
  if ((v813[79] & 0x80000000) != 0)
    operator delete(*(void **)&v813[56]);
  v301 = *(std::__shared_weak_count **)&v813[48];
  if (*(_QWORD *)&v813[48])
  {
    v302 = (unint64_t *)(*(_QWORD *)&v813[48] + 8);
    do
      v303 = __ldaxr(v302);
    while (__stlxr(v303 - 1, v302));
    if (!v303)
    {
      ((void (*)(std::__shared_weak_count *))v301->__on_zero_shared)(v301);
      std::__shared_weak_count::__release_weak(v301);
    }
  }
LABEL_622:
  if (v813[32])
  {
    v304 = *(_QWORD **)&v813[8];
    if (*(_QWORD *)&v813[8])
    {
      do
      {
        v305 = (_QWORD *)*v304;
        operator delete(v304);
        v304 = v305;
      }
      while (v305);
    }
    v306 = (void *)*((_QWORD *)&v812 + 1);
    *((_QWORD *)&v812 + 1) = 0;
    if (v306)
      operator delete(v306);
  }
  if ((SHIBYTE(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (v300)
      goto LABEL_629;
LABEL_634:
    v51 = v101;
    goto LABEL_1190;
  }
  operator delete(task_info_outCnt.__pn_.__r_.__value_.__l.__data_);
  if (!v300)
    goto LABEL_634;
LABEL_629:
  v284 = *(unsigned __int8 *)(v18 + 4);
  if (!v802)
    goto LABEL_733;
LABEL_630:
  if (!v284)
    goto LABEL_733;
  sub_2396F295C((uint64_t *)(v18 + 80), v18 + 8, (uint64_t)v985);
  kdebug_trace();
  v307 = MEMORY[0x24BEDB840];
  v308 = MEMORY[0x24BEDB840] + 64;
  v309 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v310 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  *(_QWORD *)&v1027 = MEMORY[0x24BEDB840] + 64;
  __src[0].__pn_.__r_.__value_.__r.__words[0] = v309;
  *(std::string::size_type *)((char *)__src[0].__pn_.__r_.__value_.__r.__words + *(_QWORD *)(v309 - 24)) = v310;
  v311 = (std::ios_base *)((char *)__src + *(_QWORD *)(__src[0].__pn_.__r_.__value_.__r.__words[0] - 24));
  std::ios_base::init(v311, &__src[0].__pn_.__r_.__value_.__r.__words[1]);
  v311[1].__vftable = 0;
  v311[1].__fmtflags_ = -1;
  __src[0].__pn_.__r_.__value_.__r.__words[0] = v307 + 24;
  *(_QWORD *)&v1027 = v308;
  MEMORY[0x23B83DC80](&__src[0].__pn_.__r_.__value_.__r.__words[1]);
  std::ofstream::open();
  if ((__src[1].__pn_.__r_.__value_.__s.__data_[*(_QWORD *)(__src[0].__pn_.__r_.__value_.__r.__words[0] - 24) + 8] & 5) == 0)
  {
    HIBYTE(v881[2]) = 18;
    strcpy((char *)v881, "CorePhotogrammetry");
    sub_2395AC84C(v881, &v1002);
    v313 = MEMORY[0x24BEDB870];
    v314 = MEMORY[0x24BEDB870] + 64;
    v315 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
    v316 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
    *(_QWORD *)&v813[56] = MEMORY[0x24BEDB870] + 64;
    task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = v315;
    *(std::string::size_type *)((char *)task_info_outCnt.__pn_.__r_.__value_.__r.__words + *(_QWORD *)(v315 - 24)) = v316;
    v317 = (std::ios_base *)((char *)&task_info_outCnt
                           + *(_QWORD *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] - 24));
    std::ios_base::init(v317, &task_info_outCnt.__pn_.__r_.__value_.__r.__words[1]);
    v317[1].__vftable = 0;
    v317[1].__fmtflags_ = -1;
    task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = v313 + 24;
    *(_QWORD *)&v813[56] = v314;
    std::streambuf::basic_streambuf();
    v783 = v101;
    task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = MEMORY[0x24BEDB848] + 16;
    memset(&v813[16], 0, 32);
    *(_DWORD *)&v813[48] = 16;
    sub_2396157EC((uint64_t)&v993, 1);
    LODWORD(__to.__pn_.__r_.__value_.__l.__data_) = *(_DWORD *)(v804 + 24);
    LODWORD(v930.__r_.__value_.__l.__data_) = 1056116;
    v318 = sub_239A94B5C((char *)&v930);
    v319 = strlen(v318);
    if (v319 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v320 = v319;
    if (v319 >= 0x17)
    {
      v325 = (v319 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v319 | 7) != 0x17)
        v325 = v319 | 7;
      v326 = v325 + 1;
      v321 = operator new(v325 + 1);
      *(_QWORD *)&__str[16] = v326 | 0x8000000000000000;
      *(_QWORD *)__str = v321;
      *(_QWORD *)&__str[8] = v320;
    }
    else
    {
      __str[23] = v319;
      v321 = __str;
      if (!v319)
      {
LABEL_651:
        v321[v320] = 0;
        v327 = (_QWORD *)operator new();
        *v327 = &off_250ADF3C0;
        v327[1] = v804;
        sub_23961580C((uint64_t)&v993, (uint64_t)__str, (uint64_t)v327);
        __replacement.__pn_.__r_.__value_.__r.__words[0] = 0x20252D3829284CLL;
        v328 = sub_23958E3FC((char *)&__replacement);
        v329 = strlen(v328);
        if (v329 > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        v330 = v329;
        if (v329 >= 0x17)
        {
          v332 = (v329 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v329 | 7) != 0x17)
            v332 = v329 | 7;
          v333 = v332 + 1;
          p_dst = operator new(v332 + 1);
          __dst.__r_.__value_.__r.__words[2] = v333 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          __dst.__r_.__value_.__l.__size_ = v330;
        }
        else
        {
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v329;
          p_dst = &__dst;
          if (!v329)
          {
LABEL_659:
            p_dst[v330] = 0;
            v334 = (_QWORD *)operator new();
            *v334 = &off_250ADF420;
            v334[1] = &__to;
            sub_23961580C((uint64_t)&v993, (uint64_t)&__dst, (uint64_t)v334);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__dst.__r_.__value_.__l.__data_);
            if ((__str[23] & 0x80000000) != 0)
              operator delete(*(void **)__str);
            if (!*(_BYTE *)(v804 + 136))
            {
LABEL_674:
              if (!*(_BYTE *)(v804 + 88))
                goto LABEL_686;
              *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = xmmword_239F0D08F;
              *(std::string::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 6) = 0x6C7170766B6F70;
              v346 = sub_239A90BEC((unsigned __int8 *)&__dst, (int8x16_t)xmmword_239F0D08F, v335, v336, v337);
              v347 = strlen((const char *)v346);
              if (v347 > 0x7FFFFFFFFFFFFFF7)
                sub_23941A5AC();
              v348 = v347;
              if (v347 >= 0x17)
              {
                v350 = (v347 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v347 | 7) != 0x17)
                  v350 = v347 | 7;
                v351 = v350 + 1;
                v349 = operator new(v350 + 1);
                *(_QWORD *)&__str[16] = v351 | 0x8000000000000000;
                *(_QWORD *)__str = v349;
                *(_QWORD *)&__str[8] = v348;
              }
              else
              {
                __str[23] = v347;
                v349 = __str;
                if (!v347)
                  goto LABEL_683;
              }
              memmove(v349, v346, v348);
LABEL_683:
              v349[v348] = 0;
              if (!*(_BYTE *)(v804 + 88))
                sub_2394875CC();
              v352 = (_QWORD *)operator new();
              *v352 = &off_250AF3180;
              v352[1] = v804 + 32;
              sub_23961580C((uint64_t)&v993, (uint64_t)__str, (uint64_t)v352);
              if ((__str[23] & 0x80000000) != 0)
                operator delete(*(void **)__str);
LABEL_686:
              *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = xmmword_239F0D0A5;
              *(_DWORD *)((char *)&__dst.__r_.__value_.__r.__words[1] + 7) = 8020343;
              sub_23958E450((uint64_t)&__dst, (int32x4_t)xmmword_239F0D0A5, (int8x16_t)v335, v336, v337);
              v354 = v353;
              v355 = strlen(v353);
              if (v355 > 0x7FFFFFFFFFFFFFF7)
                sub_23941A5AC();
              v356 = v355;
              if (v355 >= 0x17)
              {
                v358 = (v355 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v355 | 7) != 0x17)
                  v358 = v355 | 7;
                v359 = v358 + 1;
                v357 = operator new(v358 + 1);
                *(_QWORD *)&__str[16] = v359 | 0x8000000000000000;
                *(_QWORD *)__str = v357;
                *(_QWORD *)&__str[8] = v356;
              }
              else
              {
                __str[23] = v355;
                v357 = __str;
                if (!v355)
                  goto LABEL_694;
              }
              memmove(v357, v354, v356);
LABEL_694:
              v357[v356] = 0;
              v360 = (_QWORD *)operator new();
              *v360 = &off_250AFFEA8;
              v360[1] = v804 + 144;
              sub_23961580C((uint64_t)&v993, (uint64_t)__str, (uint64_t)v360);
              v101 = v783;
              if ((__str[23] & 0x80000000) != 0)
                operator delete(*(void **)__str);
              sub_2395902F0((uint64_t)&v993, &task_info_outCnt);
              v361 = (_QWORD *)v993.__pn_.__r_.__value_.__r.__words[2];
              if (v993.__pn_.__r_.__value_.__r.__words[2])
              {
                do
                {
                  v362 = v361[5];
                  if (v362)
                    (*(void (**)(uint64_t))(*(_QWORD *)v362 + 8))(v362);
                  v361 = (_QWORD *)*v361;
                }
                while (v361);
                v363 = (void **)v993.__pn_.__r_.__value_.__r.__words[2];
                if (v993.__pn_.__r_.__value_.__r.__words[2])
                {
                  do
                  {
                    v369 = (void **)*v363;
                    if (*((char *)v363 + 39) < 0)
                      operator delete(v363[2]);
                    operator delete(v363);
                    v363 = v369;
                  }
                  while (v369);
                }
              }
              v364 = (void *)v993.__pn_.__r_.__value_.__r.__words[0];
              v993.__pn_.__r_.__value_.__r.__words[0] = 0;
              if (v364)
                operator delete(v364);
              std::stringbuf::str();
              v365 = (std::string::size_type *)MEMORY[0x24BEDB800];
              sub_2395ABE70((const void **)__str, (uint64_t)&v1002, (uint64_t)&v993);
              if ((__str[23] & 0x80000000) != 0)
                operator delete(*(void **)__str);
              v312 = (_BYTE)v994 != 0;
              if ((_BYTE)v994)
              {
                v366 = (v993.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                     ? &v993
                     : (std::__fs::filesystem::path *)v993.__pn_.__r_.__value_.__r.__words[0];
                v367 = (v993.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                     ? HIBYTE(v993.__pn_.__r_.__value_.__r.__words[2])
                     : v993.__pn_.__r_.__value_.__l.__size_;
                sub_239458500(__src, (uint64_t)v366, v367);
                if ((_BYTE)v994)
                {
                  if (SHIBYTE(v993.__pn_.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v993.__pn_.__r_.__value_.__l.__data_);
                }
              }
              task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = *v365;
              *(std::string::size_type *)((char *)task_info_outCnt.__pn_.__r_.__value_.__r.__words
                                        + *(_QWORD *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] - 24)) = v365[3];
              task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = MEMORY[0x24BEDB848] + 16;
              if ((v813[39] & 0x80000000) != 0)
                operator delete(*(void **)&v813[16]);
              std::streambuf::~streambuf();
              std::ostream::~ostream();
              MEMORY[0x23B83E250](&v813[56]);
              if (v1002.__r_.__value_.__r.__words[0])
              {
                v1002.__r_.__value_.__l.__size_ = v1002.__r_.__value_.__r.__words[0];
                operator delete(v1002.__r_.__value_.__l.__data_);
              }
              if (SHIBYTE(v881[2]) < 0)
                operator delete((void *)v881[0]);
              if (!std::filebuf::close())
                std::ios_base::clear((std::ios_base *)((char *)__src + *(_QWORD *)(__src[0].__pn_.__r_.__value_.__r.__words[0] - 24)), *(_DWORD *)((char *)&__src[1].__pn_.__r_.__value_.__r.__words[1]+ *(_QWORD *)(__src[0].__pn_.__r_.__value_.__r.__words[0] - 24)) | 4);
              goto LABEL_724;
            }
            *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = xmmword_239F0D078;
            *(std::string::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 7) = 0x31202C1E2C2732;
            sub_2396EFBE0((uint64_t)&__dst, (int32x4_t)xmmword_239F0D078, (int8x16_t)v335, v336, v337);
            v339 = v338;
            v340 = strlen(v338);
            if (v340 > 0x7FFFFFFFFFFFFFF7)
              sub_23941A5AC();
            v341 = v340;
            if (v340 >= 0x17)
            {
              v343 = (v340 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v340 | 7) != 0x17)
                v343 = v340 | 7;
              v344 = v343 + 1;
              v342 = operator new(v343 + 1);
              *(_QWORD *)&__str[16] = v344 | 0x8000000000000000;
              *(_QWORD *)__str = v342;
              *(_QWORD *)&__str[8] = v341;
            }
            else
            {
              __str[23] = v340;
              v342 = __str;
              if (!v340)
              {
LABEL_672:
                v342[v341] = 0;
                v345 = (_QWORD *)operator new();
                *v345 = &off_250AF3150;
                v345[1] = v804 + 96;
                sub_23961580C((uint64_t)&v993, (uint64_t)__str, (uint64_t)v345);
                if ((__str[23] & 0x80000000) != 0)
                  operator delete(*(void **)__str);
                goto LABEL_674;
              }
            }
            memmove(v342, v339, v341);
            goto LABEL_672;
          }
        }
        memmove(p_dst, v328, v330);
        goto LABEL_659;
      }
    }
    memmove(v321, v318, v320);
    goto LABEL_651;
  }
  v312 = 0;
LABEL_724:
  __src[0].__pn_.__r_.__value_.__r.__words[0] = *MEMORY[0x24BEDB7E8];
  *(std::string::size_type *)((char *)__src[0].__pn_.__r_.__value_.__r.__words
                            + *(_QWORD *)(__src[0].__pn_.__r_.__value_.__r.__words[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 24);
  MEMORY[0x23B83DC8C](&__src[0].__pn_.__r_.__value_.__r.__words[1]);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](&v1027);
  kdebug_trace();
  if (v312)
  {
    v368 = (char *)(v18 + 928);
    if (*(_BYTE *)(v18 + 952))
    {
      sub_239A70694((uint64_t)v368, *(std::string **)(v18 + 80), *(std::string **)(v18 + 88), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v18 + 88) - *(_QWORD *)(v18 + 80)) >> 3));
    }
    else
    {
      *(_QWORD *)v368 = 0;
      *(_QWORD *)(v18 + 936) = 0;
      *(_QWORD *)(v18 + 944) = 0;
      sub_239490944(v368, *(_QWORD *)(v18 + 80), *(_QWORD *)(v18 + 88), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v18 + 88) - *(_QWORD *)(v18 + 80)) >> 3));
      *(_BYTE *)(v18 + 952) = 1;
    }
  }
  if ((v986 & 0x80000000) == 0)
  {
    if (v312)
      goto LABEL_733;
LABEL_822:
    v51 = 4;
    goto LABEL_1190;
  }
  operator delete(v985[0]);
  if (!v312)
    goto LABEL_822;
LABEL_733:
  sub_2397A1694((pthread_mutex_t *)(v17 + 2040));
  if (*(_QWORD *)(v17 + 2024))
  {
    v370 = *(void ***)(v17 + 2016);
    if (v370)
    {
      do
      {
        v374 = (void **)*v370;
        if (*((char *)v370 + 39) < 0)
          operator delete(v370[2]);
        operator delete(v370);
        v370 = v374;
      }
      while (v374);
    }
    *(_QWORD *)(v17 + 2016) = 0;
    v371 = *(_QWORD *)(v17 + 2008);
    if (v371)
    {
      for (i = 0; i != v371; ++i)
        *(_QWORD *)(*(_QWORD *)(v17 + 2000) + 8 * i) = 0;
    }
    *(_QWORD *)(v17 + 2024) = 0;
  }
  sub_2397A16B4((pthread_mutex_t *)(v17 + 2040));
  if (v802)
    v373 = sub_239B2A814(v804, v22, (uint64_t *)&v882);
  else
    v373 = 1.0;
  *((_BYTE *)&__src[0].__pn_.__r_.__value_.__s + 23) = 0;
  __src[0].__pn_.__r_.__value_.__s.__data_[0] = 0;
  sub_2396FCC6C((uint64_t)v1047, (uint64_t)__src);
  if ((SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    v375 = v884;
    if (v884)
      goto LABEL_747;
LABEL_751:
    v376 = 0;
    goto LABEL_752;
  }
  operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
  v375 = v884;
  if (!v884)
    goto LABEL_751;
LABEL_747:
  v376 = 0;
  do
  {
    v376 += v375[6];
    v375 = *(_DWORD **)v375;
  }
  while (v375);
LABEL_752:
  sub_2396FF028((uint64_t)v881, v373);
  v377 = (std::string *)v15[1].__r_.__value_.__l.__data_;
  if (!v377)
  {
    v1003 = 0;
    *(_QWORD *)&v1004 = v881;
    *((_QWORD *)&v1004 + 1) = &v929;
LABEL_760:
    v989 = (std::string::__raw *)v377;
    goto LABEL_761;
  }
  if (v377 == v15)
  {
    v1003 = &v1002;
    (*(void (**)(std::string *, std::string *))(v15->__r_.__value_.__r.__words[0] + 24))(v15, &v1002);
    v377 = v1003;
  }
  else
  {
    v377 = (std::string *)(*(uint64_t (**)(std::string *))(v377->__r_.__value_.__r.__words[0] + 16))(v377);
    v1003 = v377;
  }
  *(_QWORD *)&v1004 = v881;
  *((_QWORD *)&v1004 + 1) = &v929;
  if (!v377)
    goto LABEL_760;
  if (v377 != &v1002)
  {
    v377 = (std::string *)(*(uint64_t (**)(std::string *))(v377->__r_.__value_.__r.__words[0] + 16))(v377);
    goto LABEL_760;
  }
  v989 = (std::string::__raw *)v988;
  (*(void (**)(std::string *, _QWORD *))(v1002.__r_.__value_.__r.__words[0] + 24))(&v1002, v988);
LABEL_761:
  v990 = v1004;
  v992 = 0;
  v378 = operator new(0x38uLL);
  v379 = v378;
  *v378 = &off_250AF5AC8;
  if (v989)
  {
    if (v989 == (std::string::__raw *)v988)
    {
      v378[4] = v378 + 1;
      (*(void (**)(_QWORD *))(v988[0] + 24))(v988);
    }
    else
    {
      v378[4] = v989;
      v989 = 0;
    }
  }
  else
  {
    v378[4] = 0;
  }
  *(_OWORD *)(v379 + 5) = v990;
  v992 = v379;
  __src[0].__pn_.__r_.__value_.__r.__words[0] = 0x42C800003F800000;
  sub_2396FCC68(&v993, v376, v991, __src, 1.0);
  v380 = v992;
  if (v992 == v991)
  {
    v381 = 4;
    v380 = v991;
  }
  else
  {
    if (!v992)
      goto LABEL_771;
    v381 = 5;
  }
  (*(void (**)(void))(*v380 + 8 * v381))();
LABEL_771:
  v382 = v989;
  if (v989 == (std::string::__raw *)v988)
  {
    v383 = 4;
    v382 = (std::string::__raw *)v988;
  }
  else
  {
    if (!v989)
      goto LABEL_776;
    v383 = 5;
  }
  (*(void (**)(void))(v382->__words[0] + 8 * v383))();
LABEL_776:
  v384 = 100.0 / v373;
  if (100.0 / v373 > 0.6)
    v384 = 0.6;
  if (v384 < 0.1)
    v384 = 0.1;
  v385 = v384;
  sub_2396FCA58((uint64_t)&v993, v385);
  v386 = (_QWORD *)v798[3];
  if (!v386)
  {
    v987 = 0;
    goto LABEL_1678;
  }
  if (v386 == v798)
  {
    v987 = v985;
    (*(void (**)(_QWORD *, void **))(*v798 + 24))(v798, v985);
    v387 = (uint64_t)v987;
    if (!v987)
      goto LABEL_1678;
  }
  else
  {
    v387 = (*(uint64_t (**)(_QWORD *))(*v386 + 16))(v386);
    v987 = (void **)v387;
    if (!v387)
LABEL_1678:
      sub_2394172E0();
  }
  v51 = 1;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v387 + 48))(v387) & 1) != 0)
    goto LABEL_1180;
  v805 = *(_QWORD *)(v17 + 176);
  v929 = 1;
  if (!v795)
  {
    v417 = **(uint64_t ***)v882;
    if ((v883 & (v883 - 1)) != 0)
    {
      while (v417[1] || *((_DWORD *)v417 + 4))
        v417 = (uint64_t *)*v417;
    }
    else
    {
      while (v417[1] || *((_DWORD *)v417 + 4))
        v417 = (uint64_t *)*v417;
    }
    v418 = v417[3];
    if ((int)v418 >= 1)
    {
      *((_BYTE *)&__src[0].__pn_.__r_.__value_.__s + 23) = 0;
      __src[0].__pn_.__r_.__value_.__s.__data_[0] = 0;
      sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, v418);
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    }
    v51 = v101;
    goto LABEL_1001;
  }
  sub_239B3B7B8(&task_info_outCnt);
  if (**(int **)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 56) <= 3)
  {
    if (*(_BYTE *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 72))
    {
      __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&task_info_outCnt;
      __src[0].__pn_.__r_.__value_.__r.__words[1] = std::chrono::steady_clock::now().__d_.__rep_;
      __src[0].__pn_.__r_.__value_.__r.__words[2] = std::chrono::system_clock::now().__d_.__rep_;
      LODWORD(__src[1].__pn_.__r_.__value_.__l.__data_) = 3;
      __src[1].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)"unknown file";
      LODWORD(__src[1].__pn_.__r_.__value_.__r.__words[2]) = 1535;
      *(_QWORD *)&v1007 = 0;
      *(_QWORD *)&v1006 = "unknown function";
      *((_QWORD *)&v1006 + 1) = 0;
      sub_239B3B888((uint64_t)__src, "Preprocessing - step 1");
      sub_239A47720((uint64_t)__src);
      sub_239A47720((uint64_t)__src);
      v388 = (std::__shared_weak_count *)v1007;
      if ((_QWORD)v1007)
      {
        v389 = (unint64_t *)(v1007 + 8);
        do
          v390 = __ldaxr(v389);
        while (__stlxr(v390 - 1, v389));
        if (!v390)
        {
          ((void (*)(std::__shared_weak_count *))v388->__on_zero_shared)(v388);
          std::__shared_weak_count::__release_weak(v388);
        }
      }
    }
  }
  if (v805)
  {
    if (*(_BYTE *)(v17 + 2108))
    {
      v784 = v101;
      v391 = (char *)operator new(0x1AA0uLL);
      *((_QWORD *)v391 + 1) = 0;
      *((_QWORD *)v391 + 2) = 0;
      *(_QWORD *)v391 = &off_250AF5B10;
      bzero(v391 + 24, 0x1A88uLL);
      *((_DWORD *)v391 + 20) = 1065353216;
      *(_OWORD *)(v391 + 88) = 0u;
      *(_OWORD *)(v391 + 104) = 0u;
      *(_OWORD *)(v391 + 120) = 0u;
      *(_OWORD *)(v391 + 136) = 0u;
      *(_OWORD *)(v391 + 152) = 0u;
      *((_QWORD *)v391 + 21) = 0;
      *((_DWORD *)v391 + 44) = 1065353216;
      *(_OWORD *)(v391 + 184) = 0u;
      *(_OWORD *)(v391 + 200) = 0u;
      *((_DWORD *)v391 + 54) = 1065353216;
      *((_OWORD *)v391 + 15) = 0u;
      *((_OWORD *)v391 + 16) = 0u;
      *((_OWORD *)v391 + 17) = 0u;
      *((_QWORD *)v391 + 36) = 0;
      *((_DWORD *)v391 + 74) = 1065353216;
      *((_OWORD *)v391 + 19) = 0u;
      *((_OWORD *)v391 + 20) = 0u;
      *((_DWORD *)v391 + 84) = 1065353216;
      *(_OWORD *)(v391 + 344) = 0u;
      *(_OWORD *)(v391 + 360) = 0u;
      *(_OWORD *)(v391 + 376) = 0u;
      *(_OWORD *)(v391 + 392) = 0u;
      *((_QWORD *)v391 + 51) = 0;
      *((_QWORD *)v391 + 52) = 0x3FF0000000000000;
      *(_OWORD *)(v391 + 424) = 0u;
      *(_OWORD *)(v391 + 440) = 0u;
      *((_QWORD *)v391 + 57) = 0;
      *((_DWORD *)v391 + 140) = -1;
      *(_OWORD *)(v391 + 600) = 0u;
      *(_OWORD *)(v391 + 616) = 0u;
      *(_OWORD *)(v391 + 568) = 0u;
      *(_OWORD *)(v391 + 584) = 0u;
      *((_DWORD *)v391 + 158) = 1065353216;
      *((_OWORD *)v391 + 40) = 0u;
      *((_OWORD *)v391 + 41) = 0u;
      *((_DWORD *)v391 + 168) = 1065353216;
      *((_QWORD *)v391 + 93) = 0;
      *(_OWORD *)(v391 + 712) = 0u;
      *(_OWORD *)(v391 + 728) = 0u;
      *(_OWORD *)(v391 + 696) = 0u;
      *((_DWORD *)v391 + 188) = 1065353216;
      *(_OWORD *)(v391 + 760) = 0u;
      *(_OWORD *)(v391 + 776) = 0u;
      *((_DWORD *)v391 + 198) = 1065353216;
      *((_QWORD *)v391 + 108) = 0;
      *((_OWORD *)v391 + 52) = 0u;
      *((_OWORD *)v391 + 53) = 0u;
      *((_OWORD *)v391 + 50) = 0u;
      *((_OWORD *)v391 + 51) = 0u;
      *((_QWORD *)v391 + 109) = 0x3FF0000000000000;
      *((_QWORD *)v391 + 114) = 0;
      *((_OWORD *)v391 + 55) = 0u;
      *((_OWORD *)v391 + 56) = 0u;
      *((_DWORD *)v391 + 254) = -1;
      *(_QWORD *)__str = v391 + 24;
      *(_QWORD *)&__str[8] = v391;
      v392 = *(_QWORD *)(v17 + 176);
      (*(void (**)(_QWORD))(**(_QWORD **)(v392 + 24) + 24))(*(_QWORD *)(v392 + 24));
      (*(void (**)(_QWORD))(**(_QWORD **)(v392 + 32) + 24))(*(_QWORD *)(v392 + 32));
      v393 = *(_QWORD *)(v392 + 32);
      if ((char *)(v393 + 472) != v391 + 24)
        sub_23942156C((_QWORD *)v391 + 3, *(char **)(v393 + 472), *(char **)(v393 + 480), (uint64_t)(*(_QWORD *)(v393 + 480) - *(_QWORD *)(v393 + 472)) >> 2);
      v394 = *(_QWORD *)(*(_QWORD *)(v392 + 24) + 792);
      if (v391 + 48 != (char *)v394)
      {
        *((_DWORD *)v391 + 20) = *(_DWORD *)(v394 + 32);
        sub_239435F04((_QWORD *)v391 + 6, *(uint64_t **)(v394 + 16), 0);
        sub_239B602E4((uint64_t)(v391 + 88), *(_QWORD *)(v394 + 40), *(char **)(v394 + 48), (uint64_t)(*(_QWORD *)(v394 + 48) - *(_QWORD *)(v394 + 40)) >> 3);
      }
      sub_239B3BA28((uint64_t *)&task_info_outCnt, *(pthread_mutex_t **)(v392 + 8));
      if (task_info_outCnt.__pn_.__r_.__value_.__r.__words[0])
      {
        sub_239B3BACC((char **)v391 + 71, (char **)task_info_outCnt.__pn_.__r_.__value_.__l.__data_);
        v395 = *(_QWORD *)(v392 + 32);
        v396 = *(char ***)(v395 + 440);
        v397 = *(std::__shared_weak_count **)(v395 + 448);
        if (v397)
        {
          v398 = (unint64_t *)&v397->__shared_owners_;
          do
            v399 = __ldxr(v398);
          while (__stxr(v399 + 1, v398));
        }
        if (v396)
        {
          sub_239B3BACC((char **)v391 + 14, v396);
          v400 = *(_QWORD *)(v392 + 8);
          v401 = (pthread_mutex_t *)(v400 + 384);
          sub_2397A1694((pthread_mutex_t *)(v400 + 384));
          v402 = *(std::__shared_count **)(v400 + 1040);
          if (v402)
          {
            v403 = (std::__shared_weak_count *)operator new(0x118uLL);
            v403->__shared_owners_ = 0;
            v403->__shared_weak_owners_ = 0;
            v403->__vftable = (std::__shared_weak_count_vtbl *)&off_250B01578;
            v404 = v403 + 1;
            v405 = *v402;
            v406 = v402[1];
            v407 = v402[2];
            v403[3].std::__shared_count = v402[3];
            *(std::__shared_count *)((char *)v403 + 56) = v407;
            *(std::__shared_count *)((char *)v403 + 40) = v406;
            v403[1].std::__shared_count = v405;
            v408 = v402[4];
            v409 = v402[5];
            v410 = v402[6];
            *(std::__shared_count *)((char *)v403 + 136) = v402[7];
            v403[5].std::__shared_count = v410;
            *(std::__shared_count *)((char *)v403 + 104) = v409;
            *(std::__shared_count *)((char *)v403 + 88) = v408;
            v411 = v402[14];
            v412 = v402[15];
            v413 = v402[13];
            v403[9].std::__shared_count = v402[12];
            v403[11].std::__shared_count = v412;
            *(std::__shared_count *)((char *)v403 + 248) = v411;
            *(std::__shared_count *)((char *)v403 + 232) = v413;
            v414 = v402[8];
            v415 = v402[9];
            v416 = v402[10];
            *(std::__shared_count *)((char *)v403 + 200) = v402[11];
            *(std::__shared_count *)((char *)v403 + 184) = v416;
            v403[7].std::__shared_count = v415;
            *(std::__shared_count *)((char *)v403 + 152) = v414;
          }
          else
          {
            v403 = 0;
            v404 = 0;
          }
          sub_2397A16B4(v401);
          if (v404)
          {
            v420 = *(_OWORD *)&v404[3].__shared_owners_;
            *((_OWORD *)v391 + 68) = *(_OWORD *)&v404[2].__shared_weak_owners_;
            *((_OWORD *)v391 + 69) = v420;
            v421 = *(_OWORD *)&v404[4].__shared_weak_owners_;
            *((_OWORD *)v391 + 70) = v404[4].std::__shared_count;
            *((_OWORD *)v391 + 71) = v421;
            v422 = *(_OWORD *)&v404->__shared_weak_owners_;
            *((_OWORD *)v391 + 64) = v404->std::__shared_count;
            *((_OWORD *)v391 + 65) = v422;
            v423 = v404[2].std::__shared_count;
            *((_OWORD *)v391 + 66) = *(_OWORD *)&v404[1].__shared_owners_;
            *((std::__shared_count *)v391 + 67) = v423;
            v424 = *(_OWORD *)&v404[8].__shared_weak_owners_;
            *((_OWORD *)v391 + 76) = v404[8].std::__shared_count;
            *((_OWORD *)v391 + 77) = v424;
            v425 = v404[10].std::__shared_count;
            *((_OWORD *)v391 + 78) = *(_OWORD *)&v404[9].__shared_owners_;
            *((std::__shared_count *)v391 + 79) = v425;
            v426 = v404[6].std::__shared_count;
            *((_OWORD *)v391 + 72) = *(_OWORD *)&v404[5].__shared_owners_;
            *((std::__shared_count *)v391 + 73) = v426;
            v427 = *(_OWORD *)&v404[7].__shared_owners_;
            *((_OWORD *)v391 + 74) = *(_OWORD *)&v404[6].__shared_weak_owners_;
            v428 = v391[1280];
            *((_OWORD *)v391 + 75) = v427;
            if (!v428)
              v391[1280] = 1;
          }
          v429 = *(_QWORD *)(*(_QWORD *)(v392 + 24) + 432);
          if (v429)
          {
            v430 = (uint64_t)(v391 + 3080);
            if (v391[3544])
            {
              sub_239AEA35C(v430, v429);
            }
            else
            {
              sub_239A5E664(v430, v429);
              v391[3544] = 1;
            }
          }
          v431 = *(_QWORD *)(*(_QWORD *)(v392 + 24) + 440);
          if (!v431)
            goto LABEL_850;
          v432 = (__int128 *)(v391 + 3552);
          if (v391[3744])
          {
            v433 = *(_OWORD *)v431;
            v434 = *(_OWORD *)(v431 + 16);
            *((_DWORD *)v391 + 896) = *(_DWORD *)(v431 + 32);
            *v432 = v433;
            *((_OWORD *)v391 + 223) = v434;
            if (v432 != (__int128 *)v431)
              sub_239421078((_QWORD *)v391 + 449, *(_QWORD **)(v431 + 40), (_QWORD *)(v431 + 48));
            *((_QWORD *)v391 + 452) = *(_QWORD *)(v431 + 64);
            *(_OWORD *)(v391 + 3624) = *(_OWORD *)(v431 + 72);
            v435 = *(_QWORD *)(v431 + 88);
            *((_DWORD *)v391 + 912) = *(_DWORD *)(v431 + 96);
            *((_QWORD *)v391 + 455) = v435;
            if (v432 != (__int128 *)v431)
              sub_23942156C((_QWORD *)v391 + 457, *(char **)(v431 + 104), *(char **)(v431 + 112), (uint64_t)(*(_QWORD *)(v431 + 112) - *(_QWORD *)(v431 + 104)) >> 2);
            v391[3680] = *(_BYTE *)(v431 + 128);
            v436 = *(_OWORD *)(v431 + 136);
            v437 = *(_OWORD *)(v431 + 152);
            v438 = *(_OWORD *)(v431 + 168);
            *((_QWORD *)v391 + 467) = *(_QWORD *)(v431 + 184);
            *(_OWORD *)(v391 + 3720) = v438;
            *(_OWORD *)(v391 + 3704) = v437;
            *(_OWORD *)(v391 + 3688) = v436;
          }
          else
          {
            sub_239AE4BA8((uint64_t)(v391 + 3552), (__int128 *)v431);
            v391[3744] = 1;
          }
          v439 = *(__int128 **)(*(_QWORD *)(v392 + 24) + 448);
          if (!v439)
            goto LABEL_850;
          v440 = (uint64_t)(v391 + 3752);
          if (v391[4464])
          {
            sub_239AD2508(v440, v439);
          }
          else
          {
            sub_239A5EC2C(v440, v439);
            v391[4464] = 1;
          }
          v441 = *(__int128 **)(*(_QWORD *)(v392 + 32) + 416);
          if (v441)
          {
            v442 = (uint64_t)(v391 + 4472);
            if (v391[6216])
            {
              sub_239AB5E40(v442, v441);
            }
            else
            {
              sub_239A5F6A8(v442, v441);
              v391[6216] = 1;
            }
            v443 = *(_QWORD *)(v392 + 8);
            sub_2397A1694((pthread_mutex_t *)(v443 + 448));
            v444 = *(__int128 **)(v443 + 1008);
            if (!v444)
            {
              sub_239A444D4((uint64_t)"unknown file", 128, (uint64_t)"", (void (*)(void *))sub_239A4463C);
              sub_239A4475C();
              abort();
            }
            sub_239A5FE90((uint64_t)__src, v444);
            sub_2397A16B4((pthread_mutex_t *)(v443 + 448));
            v445 = v391 + 6224;
            if (v391[6808])
            {
              sub_239B3DC70((uint64_t)v445, (__int128 *)__src);
            }
            else
            {
              v446 = *(_OWORD *)&__src[0].__pn_.__r_.__value_.__r.__words[2];
              *v445 = *(_OWORD *)&__src[0].__pn_.__r_.__value_.__l.__data_;
              *((_OWORD *)v391 + 390) = v446;
              *(_OWORD *)(v391 + 6253) = *(_OWORD *)((char *)__src[1].__pn_.__r_.__value_.__r.__words + 5);
              v447 = v1006;
              v1006 = 0uLL;
              *((_OWORD *)v391 + 392) = v447;
              v448 = v1007;
              *((_OWORD *)v391 + 393) = v1007;
              *((_DWORD *)v391 + 1576) = v1008[0];
              if (*((_QWORD *)&v448 + 1))
              {
                v449 = *(_QWORD *)(v448 + 8);
                if ((*((_QWORD *)&v447 + 1) & (*((_QWORD *)&v447 + 1) - 1)) != 0)
                {
                  if (v449 >= *((_QWORD *)&v447 + 1))
                    v449 %= *((_QWORD *)&v447 + 1);
                }
                else
                {
                  v449 &= *((_QWORD *)&v447 + 1) - 1;
                }
                *(_QWORD *)(v447 + 8 * v449) = v391 + 6288;
                v1007 = 0uLL;
              }
              v450 = *(_QWORD *)&v1008[2];
              v451 = v1009;
              *(_QWORD *)&v1009 = 0;
              *(_QWORD *)&v1008[2] = 0;
              *((_QWORD *)v391 + 789) = v450;
              *((_QWORD *)v391 + 790) = v451;
              v452 = *((_QWORD *)&v1009 + 1);
              v453 = v1010;
              *((_QWORD *)v391 + 791) = *((_QWORD *)&v1009 + 1);
              *((_QWORD *)v391 + 792) = v453;
              *((_DWORD *)v391 + 1586) = DWORD2(v1010);
              if (v453)
              {
                v454 = *(_QWORD *)(v452 + 8);
                if ((v451 & (v451 - 1)) != 0)
                {
                  if (v454 >= v451)
                    v454 %= v451;
                }
                else
                {
                  v454 &= v451 - 1;
                }
                *(_QWORD *)(v450 + 8 * v454) = v391 + 6328;
                *((_QWORD *)&v1009 + 1) = 0;
                *(_QWORD *)&v1010 = 0;
              }
              v455 = v1011;
              v1011 = 0uLL;
              *((_OWORD *)v391 + 397) = v455;
              v456 = v1012;
              *((_OWORD *)v391 + 398) = v1012;
              *((_DWORD *)v391 + 1596) = v1013;
              if (*((_QWORD *)&v456 + 1))
              {
                v457 = *(_QWORD *)(v456 + 8);
                if ((*((_QWORD *)&v455 + 1) & (*((_QWORD *)&v455 + 1) - 1)) != 0)
                {
                  if (v457 >= *((_QWORD *)&v455 + 1))
                    v457 %= *((_QWORD *)&v455 + 1);
                }
                else
                {
                  v457 &= *((_QWORD *)&v455 + 1) - 1;
                }
                *(_QWORD *)(v455 + 8 * v457) = v391 + 6368;
                v1012 = 0uLL;
              }
              *((_QWORD *)v391 + 799) = *((_QWORD *)&v1013 + 1);
              *((_OWORD *)v391 + 400) = v1014;
              v458 = *((_QWORD *)&v1015 + 1);
              *((_QWORD *)v391 + 802) = v1015;
              v1014 = 0uLL;
              v459 = v1016;
              *(_QWORD *)&v1016 = 0;
              v1015 = 0uLL;
              *((_QWORD *)v391 + 803) = v458;
              *((_OWORD *)v391 + 402) = v459;
              v460 = v1017;
              *((_QWORD *)v391 + 806) = v1017;
              *((_DWORD *)v391 + 1614) = DWORD2(v1017);
              if (v460)
              {
                v461 = *(_QWORD *)(*((_QWORD *)&v459 + 1) + 8);
                if (((unint64_t)v459 & ((_QWORD)v459 - 1)) != 0)
                {
                  if (*((_QWORD *)&v459 + 1) >= (unint64_t)v459)
                    v461 = *((_QWORD *)&v459 + 1) % (unint64_t)v459;
                }
                else
                {
                  v461 = (v459 - 1) & *((_QWORD *)&v459 + 1);
                }
                *(_QWORD *)(v458 + 8 * v461) = v391 + 6440;
                *((_QWORD *)&v1016 + 1) = 0;
                *(_QWORD *)&v1017 = 0;
              }
              v462 = v1019;
              *((_OWORD *)v391 + 404) = v1018;
              *((_OWORD *)v391 + 405) = v462;
              *((_DWORD *)v391 + 1624) = v1020;
              *((_QWORD *)v391 + 813) = *((_QWORD *)&v1020 + 1);
              *((_OWORD *)v391 + 407) = v1021;
              *((_QWORD *)&v1020 + 1) = 0;
              *(_QWORD *)&v1021 = 0;
              v391[6528] = v1022[0];
              v463 = *(_OWORD *)((char *)v1022 + 8);
              v464 = *(_OWORD *)((char *)&v1022[1] + 8);
              *((_DWORD *)v391 + 1642) = DWORD2(v1022[2]);
              *(_OWORD *)(v391 + 6552) = v464;
              *(_OWORD *)(v391 + 6536) = v463;
              *((_OWORD *)v391 + 411) = v1023;
              *((_QWORD *)v391 + 824) = v1024;
              *((_QWORD *)&v1021 + 1) = 0;
              v1023 = 0uLL;
              *(_QWORD *)&v1024 = 0;
              v391[6600] = BYTE8(v1024);
              v465 = v1025;
              v466 = v1026;
              *((_DWORD *)v391 + 1660) = v1027;
              *((_OWORD *)v391 + 414) = v466;
              *((_OWORD *)v391 + 413) = v465;
              *((_QWORD *)v391 + 831) = *((_QWORD *)&v1027 + 1);
              *((_OWORD *)v391 + 416) = v1028;
              *((_QWORD *)&v1027 + 1) = 0;
              *(_QWORD *)&v1028 = 0;
              v391[6672] = v1029[0];
              v467 = *(_OWORD *)&v1029[1];
              *(_OWORD *)(v391 + 6696) = *(_OWORD *)&v1029[3];
              *(_OWORD *)(v391 + 6680) = v467;
              v468 = v1029[5];
              *((_DWORD *)v391 + 1680) = v1030;
              *((_QWORD *)v391 + 839) = v468;
              *((_QWORD *)v391 + 841) = v1031;
              v469 = v1033;
              *((_OWORD *)v391 + 421) = v1032;
              *((_QWORD *)&v1028 + 1) = 0;
              v1031 = 0;
              v1032 = 0uLL;
              *((_OWORD *)v391 + 422) = v469;
              *((_QWORD *)v391 + 846) = v1034;
              v1033 = 0uLL;
              v1034 = 0;
              *((_QWORD *)v391 + 847) = v1035;
              *((_OWORD *)v391 + 424) = v1036;
              v1035 = 0;
              v1036 = 0uLL;
              *((_DWORD *)v391 + 1700) = v1037;
              v391[6808] = 1;
            }
            sub_239A614AC(__src);
            v419 = 1;
          }
          else
          {
LABEL_850:
            v419 = 0;
          }
          if (v403)
          {
            v470 = (unint64_t *)&v403->__shared_owners_;
            do
              v471 = __ldaxr(v470);
            while (__stlxr(v471 - 1, v470));
            if (!v471)
            {
              ((void (*)(std::__shared_weak_count *))v403->__on_zero_shared)(v403);
              std::__shared_weak_count::__release_weak(v403);
            }
          }
        }
        else
        {
          v419 = 0;
        }
        if (v397)
        {
          v472 = (unint64_t *)&v397->__shared_owners_;
          do
            v473 = __ldaxr(v472);
          while (__stlxr(v473 - 1, v472));
          if (!v473)
          {
            ((void (*)(std::__shared_weak_count *))v397->__on_zero_shared)(v397);
            std::__shared_weak_count::__release_weak(v397);
          }
        }
      }
      else
      {
        v419 = 0;
      }
      v474 = (std::__shared_weak_count *)task_info_outCnt.__pn_.__r_.__value_.__l.__size_;
      if (task_info_outCnt.__pn_.__r_.__value_.__l.__size_)
      {
        v475 = (unint64_t *)(task_info_outCnt.__pn_.__r_.__value_.__l.__size_ + 8);
        do
          v476 = __ldaxr(v475);
        while (__stlxr(v476 - 1, v475));
        if (!v476)
        {
          ((void (*)(std::__shared_weak_count *))v474->__on_zero_shared)(v474);
          std::__shared_weak_count::__release_weak(v474);
        }
      }
      if ((v419 & 1) != 0)
      {
        if (sub_239AFAFC8(v18, __str))
        {
          sub_239B3B9A8(*(_QWORD *)(v17 + 32));
          sub_239B3B9E8(*(_QWORD *)(v17 + 48));
          v477 = 1;
          v51 = v784;
        }
        else
        {
          v477 = 0;
          v51 = 4;
        }
      }
      else
      {
        v477 = 0;
        v51 = 3;
      }
      v478 = *(std::__shared_weak_count **)&__str[8];
      if (*(_QWORD *)&__str[8])
      {
        v479 = (unint64_t *)(*(_QWORD *)&__str[8] + 8);
        do
          v480 = __ldaxr(v479);
        while (__stlxr(v480 - 1, v479));
        if (!v480)
        {
          ((void (*)(std::__shared_weak_count *))v478->__on_zero_shared)(v478);
          std::__shared_weak_count::__release_weak(v478);
        }
      }
      if ((v477 & 1) == 0)
        goto LABEL_1180;
    }
    else
    {
      (*(void (**)(_QWORD))(**(_QWORD **)(v17 + 176) + 24))(*(_QWORD *)(v17 + 176));
      v51 = v101;
    }
    sub_239B3BA28((uint64_t *)__src, *(pthread_mutex_t **)(*(_QWORD *)(v17 + 176) + 8));
    sub_239B3BACC(*(char ***)(v17 + 192), (char **)__src[0].__pn_.__r_.__value_.__l.__data_);
    v481 = (std::__shared_weak_count *)__src[0].__pn_.__r_.__value_.__l.__size_;
    if (__src[0].__pn_.__r_.__value_.__l.__size_)
    {
      v482 = (unint64_t *)(__src[0].__pn_.__r_.__value_.__l.__size_ + 8);
      do
        v483 = __ldaxr(v482);
      while (__stlxr(v483 - 1, v482));
      if (!v483)
      {
        ((void (*)(std::__shared_weak_count *))v481->__on_zero_shared)(v481);
        std::__shared_weak_count::__release_weak(v481);
      }
    }
  }
  else
  {
    v51 = v101;
  }
  v484 = v17 + 192;
  if (!*(_QWORD *)(v17 + 192))
  {
    sub_239A444D4((uint64_t)"unknown file", 1559, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v485 = **(uint64_t ***)v882;
  if ((v883 & (v883 - 1)) != 0)
  {
    while (v485[1] || *((_DWORD *)v485 + 4))
      v485 = (uint64_t *)*v485;
  }
  else
  {
    while (v485[1] || *((_DWORD *)v485 + 4))
      v485 = (uint64_t *)*v485;
  }
  v486 = v485[3];
  if ((int)v486 >= 1)
  {
    *((_BYTE *)&__src[0].__pn_.__r_.__value_.__s + 23) = 0;
    __src[0].__pn_.__r_.__value_.__s.__data_[0] = 0;
    sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, 1);
    if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
  }
  v487 = *(_QWORD *)(v17 + 80);
  if (*(char *)(v487 + 95) < 0)
  {
    if (*(_QWORD *)(v487 + 80))
      goto LABEL_930;
  }
  else if (*(_BYTE *)(v487 + 95))
  {
    goto LABEL_930;
  }
  sub_23959FCAC(v487, 0);
LABEL_930:
  if (*(_BYTE *)(v18 + 4) || *(_DWORD *)v18)
  {
    sub_2396F295C((uint64_t *)(v18 + 176), v18 + 8, (uint64_t)&v930);
    v796 = v51;
    kdebug_trace();
    v488 = *(_QWORD *)(v17 + 80);
    v489 = MEMORY[0x24BEDB840];
    v490 = MEMORY[0x24BEDB840] + 64;
    v491 = (std::string::size_type *)MEMORY[0x24BEDB7E8];
    v492 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
    v493 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
    *(_QWORD *)&v1027 = MEMORY[0x24BEDB840] + 64;
    __src[0].__pn_.__r_.__value_.__r.__words[0] = v492;
    *(std::string::size_type *)((char *)__src[0].__pn_.__r_.__value_.__r.__words + *(_QWORD *)(v492 - 24)) = v493;
    v494 = (std::ios_base *)((char *)__src + *(_QWORD *)(__src[0].__pn_.__r_.__value_.__r.__words[0] - 24));
    std::ios_base::init(v494, &__src[0].__pn_.__r_.__value_.__r.__words[1]);
    v494[1].__vftable = 0;
    v494[1].__fmtflags_ = -1;
    __src[0].__pn_.__r_.__value_.__r.__words[0] = v489 + 24;
    *(_QWORD *)&v1027 = v490;
    MEMORY[0x23B83DC80](&__src[0].__pn_.__r_.__value_.__r.__words[1]);
    std::ofstream::open();
    if ((__src[1].__pn_.__r_.__value_.__s.__data_[*(_QWORD *)(__src[0].__pn_.__r_.__value_.__r.__words[0] - 24) + 8] & 5) != 0)
    {
      v495 = 0;
    }
    else
    {
      *((_BYTE *)&__to.__pn_.__r_.__value_.__s + 23) = 18;
      strcpy((char *)&__to, "CorePhotogrammetry");
      sub_2395AC84C((const void **)&__to.__pn_.__r_.__value_.__l.__data_, &__replacement);
      v496 = MEMORY[0x24BEDB870];
      v497 = MEMORY[0x24BEDB870] + 64;
      v498 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
      v499 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
      *(_QWORD *)&v813[56] = MEMORY[0x24BEDB870] + 64;
      task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = v498;
      *(std::string::size_type *)((char *)task_info_outCnt.__pn_.__r_.__value_.__r.__words + *(_QWORD *)(v498 - 24)) = v499;
      v500 = (std::ios_base *)((char *)&task_info_outCnt
                             + *(_QWORD *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] - 24));
      std::ios_base::init(v500, &task_info_outCnt.__pn_.__r_.__value_.__r.__words[1]);
      v500[1].__vftable = 0;
      v500[1].__fmtflags_ = -1;
      task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = v496 + 24;
      *(_QWORD *)&v813[56] = v497;
      std::streambuf::basic_streambuf();
      v501 = MEMORY[0x24BEDB848];
      task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = MEMORY[0x24BEDB848] + 16;
      memset(&v813[16], 0, 32);
      *(_DWORD *)&v813[48] = 16;
      sub_2395A03A0(v488, (uint64_t *)&task_info_outCnt, 1, 0);
      v502 = (std::string::size_type *)MEMORY[0x24BEDB800];
      std::stringbuf::str();
      sub_2395ABE70((const void **)&__dst.__r_.__value_.__l.__data_, (uint64_t)&__replacement, (uint64_t)__str);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
      v495 = __str[24] != 0;
      if (__str[24])
      {
        v503 = __str[23] >= 0 ? __str : *(_BYTE **)__str;
        v504 = __str[23] >= 0 ? __str[23] : *(_QWORD *)&__str[8];
        sub_239458500(__src, (uint64_t)v503, v504);
        if (__str[24])
        {
          if ((__str[23] & 0x80000000) != 0)
            operator delete(*(void **)__str);
        }
      }
      task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = *v502;
      *(std::string::size_type *)((char *)task_info_outCnt.__pn_.__r_.__value_.__r.__words
                                + *(_QWORD *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] - 24)) = v502[3];
      task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = v501 + 16;
      if ((v813[39] & 0x80000000) != 0)
        operator delete(*(void **)&v813[16]);
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x23B83E250](&v813[56]);
      if (__replacement.__pn_.__r_.__value_.__r.__words[0])
      {
        __replacement.__pn_.__r_.__value_.__l.__size_ = __replacement.__pn_.__r_.__value_.__r.__words[0];
        operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__to.__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__to.__pn_.__r_.__value_.__l.__data_);
      if (!std::filebuf::close())
        std::ios_base::clear((std::ios_base *)((char *)__src + *(_QWORD *)(__src[0].__pn_.__r_.__value_.__r.__words[0] - 24)), *(_DWORD *)((char *)&__src[1].__pn_.__r_.__value_.__r.__words[1]+ *(_QWORD *)(__src[0].__pn_.__r_.__value_.__r.__words[0] - 24)) | 4);
    }
    __src[0].__pn_.__r_.__value_.__r.__words[0] = *v491;
    *(std::string::size_type *)((char *)__src[0].__pn_.__r_.__value_.__r.__words
                              + *(_QWORD *)(__src[0].__pn_.__r_.__value_.__r.__words[0] - 24)) = v491[3];
    MEMORY[0x23B83DC8C](&__src[0].__pn_.__r_.__value_.__r.__words[1]);
    std::ostream::~ostream();
    MEMORY[0x23B83E250](&v1027);
    kdebug_trace();
    v51 = v796;
    if (v495)
    {
      v505 = (char *)(v18 + 960);
      if (*(_BYTE *)(v18 + 984))
      {
        sub_239A70694((uint64_t)v505, *(std::string **)(v18 + 176), *(std::string **)(v18 + 184), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v18 + 184) - *(_QWORD *)(v18 + 176)) >> 3));
      }
      else
      {
        *(_QWORD *)v505 = 0;
        *(_QWORD *)(v18 + 968) = 0;
        *(_QWORD *)(v18 + 976) = 0;
        sub_239490944(v505, *(_QWORD *)(v18 + 176), *(_QWORD *)(v18 + 184), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v18 + 184) - *(_QWORD *)(v18 + 176)) >> 3));
        *(_BYTE *)(v18 + 984) = 1;
      }
    }
    if (SHIBYTE(v930.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v930.__r_.__value_.__l.__data_);
    if (!v495)
    {
      v51 = 4;
      goto LABEL_1180;
    }
  }
  sub_2396F295C((uint64_t *)(v18 + 200), v18 + 8, (uint64_t)__src);
  memset(&task_info_outCnt, 0, sizeof(task_info_outCnt));
  if ((sub_2395D46B8(*(_QWORD *)(v17 + 80), *(_QWORD *)(v17 + 192), (uint64_t)__src, (uint64_t)&task_info_outCnt, v786, 1) & 1) == 0)goto LABEL_995;
  if (*(_QWORD *)(v17 + 1944))
  {
    v506 = (_QWORD *)(*(_QWORD *)v484 + 496);
    if (v506 != (_QWORD *)(v17 + 1920))
    {
      *(_DWORD *)(*(_QWORD *)v484 + 528) = *(_DWORD *)(v17 + 1952);
      sub_239A99678(v506, *(const std::string **)(v17 + 1936));
    }
    if (*(_BYTE *)(v17 + 2108))
      sub_239A99D30(v18, *(const std::__fs::filesystem::path **)(v17 + 1936));
  }
  if (!sub_239A9D4E8(v18, (uint64_t *)(v17 + 192)))
    goto LABEL_987;
  sub_239A9B1CC(v18);
  if (!*(_BYTE *)(v18 + 4) && !*(_DWORD *)v18 || sub_239A9CD20(v18, (const void **)v786))
  {
    sub_239B0F660(v18, (_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 192) + 496);
    sub_239AA5850(v18, (uint64_t *)(v17 + 64), v17 + 1960);
    if (*(_QWORD *)(v17 + 96))
      sub_239B1D470(v18, (_QWORD *)(v17 + 96));
    if (*(_QWORD *)(*(_QWORD *)(v17 + 80) + 208) == *(_QWORD *)(*(_QWORD *)(v17 + 80) + 200))
    {
LABEL_976:
      if (!v805 || !*(_BYTE *)(v18 + 4))
        goto LABEL_1713;
      sub_239B3C510((int64x2_t *)__str, *(_QWORD **)(*(_QWORD *)v484 + 472), *(_QWORD *)(*(_QWORD *)v484 + 480));
      sub_239B03164(v18, (uint64_t *)(v17 + 32), (unint64_t **)__str);
      sub_239B049A8(v18, (uint64_t *)(v17 + 48), (unint64_t **)__str);
      v508 = sub_239A8E230(v18, 5000);
      if (*(_QWORD *)__str)
        operator delete(*(void **)__str);
      if (v508)
      {
LABEL_1713:
        if ((int)v486 >= 2)
        {
          sub_23941A4FC(__str, "");
          sub_2396FCDAC((uint64_t)&v993, (__int128 *)__str, (v486 - 1));
          if ((__str[23] & 0x80000000) != 0)
            operator delete(*(void **)__str);
        }
        v509 = 1;
        if (SHIBYTE(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_996;
        goto LABEL_997;
      }
LABEL_987:
      v509 = 0;
      v51 = 4;
      if ((SHIBYTE(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_997;
      goto LABEL_996;
    }
    sub_239B3C420(__str);
    if (sub_2395D8454((uint64_t *)(*(_QWORD *)(v17 + 80) + 200), *(uint64_t *)__str))
    {
      v507 = sub_239B1F364(v18, (uint64_t *)__str);
      sub_239A4D7C0((uint64_t)__str);
      if ((v507 & 1) == 0)
        goto LABEL_987;
      goto LABEL_976;
    }
    sub_239A4D7C0((uint64_t)__str);
LABEL_995:
    v509 = 0;
    v51 = 3;
    if ((SHIBYTE(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_997;
    goto LABEL_996;
  }
  v509 = 0;
  if (*(_BYTE *)(v17 + 2109))
    v51 = 3;
  else
    v51 = 8;
  if (SHIBYTE(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_996:
    operator delete(task_info_outCnt.__pn_.__r_.__value_.__l.__data_);
LABEL_997:
  if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    if ((v509 & 1) == 0)
      goto LABEL_1180;
  }
  else if ((v509 & 1) == 0)
  {
    goto LABEL_1180;
  }
LABEL_1001:
  kdebug_trace();
  if (((v800 ^ 1) & 1) == 0 && v805)
  {
LABEL_1003:
    v51 = 0;
    goto LABEL_1180;
  }
  v787 = v800 ^ 1;
  if (!v987)
LABEL_1684:
    sub_2394172E0();
  if (((*((uint64_t (**)(void **))*v987 + 6))(v987) & 1) != 0)
  {
LABEL_1179:
    v51 = 1;
    goto LABEL_1180;
  }
  if (!v793)
  {
    v528 = sub_239B3C83C((uint64_t)v882, v883, 1)[3];
    if ((int)v528 >= 1)
    {
      v929 = 1;
      sub_23941A4FC(__src, "");
      sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, v528);
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    }
    goto LABEL_1177;
  }
  sub_239B3B7B8(&task_info_outCnt);
  if (**(int **)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 56) <= 3
    && *(_BYTE *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 72))
  {
    __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&task_info_outCnt;
    __src[0].__pn_.__r_.__value_.__r.__words[1] = std::chrono::steady_clock::now().__d_.__rep_;
    __src[0].__pn_.__r_.__value_.__r.__words[2] = std::chrono::system_clock::now().__d_.__rep_;
    LODWORD(__src[1].__pn_.__r_.__value_.__l.__data_) = 3;
    __src[1].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)"unknown file";
    LODWORD(__src[1].__pn_.__r_.__value_.__r.__words[2]) = 1691;
    *(_QWORD *)&v1007 = 0;
    *(_QWORD *)&v1006 = "unknown function";
    *((_QWORD *)&v1006 + 1) = 0;
    sub_239B3B888((uint64_t)__src, "Preprocessing - step 2");
    sub_239A47720((uint64_t)__src);
    sub_239A478B4((uint64_t)__src);
  }
  v929 = 1;
  v794 = (uint64_t *)(v17 + 192);
  sub_2396B8E4C(*(_QWORD *)(v17 + 192) + 456, __src);
  v510 = (std::__fs::filesystem::path *)operator new(0x30uLL);
  v510->__pn_.__r_.__value_.__l.__size_ = 0;
  v510->__pn_.__r_.__value_.__r.__words[2] = 0;
  v510->__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF9788;
  v510[1] = __src[0];
  memset(__src, 0, 24);
  v511 = *(_QWORD *)(v17 + 416) + 80;
  task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&v510[1];
  task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)v510;
  sub_239B24AF0(v511, (__int128 *)&task_info_outCnt);
  sub_239A4D7C0((uint64_t)&task_info_outCnt);
  if (__src[0].__pn_.__r_.__value_.__r.__words[0])
  {
    __src[0].__pn_.__r_.__value_.__l.__size_ = __src[0].__pn_.__r_.__value_.__r.__words[0];
    operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
  }
  *(_OWORD *)v1029 = 0u;
  v1028 = 0u;
  v1027 = 0u;
  v1026 = 0u;
  v1025 = 0u;
  v1024 = 0u;
  v1023 = 0u;
  memset(v1022, 0, sizeof(v1022));
  v1021 = 0u;
  v1020 = 0u;
  v1019 = 0u;
  v1018 = 0u;
  v1017 = 0u;
  v1016 = 0u;
  v1015 = 0u;
  v1014 = 0u;
  v1013 = 0u;
  v1012 = 0u;
  v1011 = 0u;
  v1010 = 0u;
  v1009 = 0u;
  *(_OWORD *)v1008 = 0u;
  v1007 = 0u;
  v1006 = 0u;
  memset(__src, 0, sizeof(__src));
  sub_239AEA110((uint64_t)__src);
  sub_239B3C5E4(*(_QWORD *)(v17 + 432) + 16, (uint64_t)__src);
  sub_239A61848((uint64_t)__src);
  v512 = operator new(0x20uLL);
  *v512 = &off_250AF5B90;
  v512[1] = v17;
  v512[2] = a10;
  *(_QWORD *)&v961 = v512;
  v513 = *(_QWORD *)(v17 + 192);
  memset(__str, 0, 32);
  *(_DWORD *)&__str[32] = 1065353216;
  v514 = *(const std::__fs::filesystem::path **)(v513 + 472);
  if (v514)
  {
    while (1)
    {
      v515 = v51;
      sub_2396F295C((uint64_t *)(v18 + 248), v18 + 8, (uint64_t)&__replacement);
      v516 = std::__fs::filesystem::path::__stem(v514 + 1);
      if (v516.__size_ > 0x7FFFFFFFFFFFFFF7)
        sub_23941A5AC();
      if (v516.__size_ >= 0x17)
        break;
      *((_BYTE *)&__src[0].__pn_.__r_.__value_.__s + 23) = v516.__size_;
      v517 = __src;
      if (v516.__size_)
        goto LABEL_1023;
LABEL_1024:
      v517->__pn_.__r_.__value_.__s.__data_[v516.__size_] = 0;
      v520 = (void *)__src[0].__pn_.__r_.__value_.__r.__words[0];
      v880[0] = __src[0].__pn_.__r_.__value_.__r.__words[2];
      *(_DWORD *)((char *)v880 + 3) = *(_DWORD *)((char *)&__src[0].__pn_.__r_.__value_.__r.__words[2] + 3);
      v521 = SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]);
      v51 = v515;
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_23941A7F8(&v930, __src[0].__pn_.__r_.__value_.__l.__data_, __src[0].__pn_.__r_.__value_.__l.__size_);
      }
      else
      {
        *(_OWORD *)&v930.__r_.__value_.__l.__data_ = *(_OWORD *)&__src[0].__pn_.__r_.__value_.__l.__data_;
        LODWORD(v930.__r_.__value_.__r.__words[2]) = v880[0];
        *(_DWORD *)((char *)&v930.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v880 + 3);
        *((_BYTE *)&v930.__r_.__value_.__s + 23) = *((_BYTE *)&__src[0].__pn_.__r_.__value_.__s + 23);
      }
      v522 = std::string::append(&v930, ".jpg");
      v523 = v522->__r_.__value_.__r.__words[0];
      *(_QWORD *)v954 = v522->__r_.__value_.__l.__size_;
      *(_QWORD *)&v954[7] = *(std::string::size_type *)((char *)&v522->__r_.__value_.__r.__words[1] + 7);
      v524 = HIBYTE(v522->__r_.__value_.__r.__words[2]);
      v522->__r_.__value_.__l.__size_ = 0;
      v522->__r_.__value_.__r.__words[2] = 0;
      v522->__r_.__value_.__r.__words[0] = 0;
      __to.__pn_.__r_.__value_.__r.__words[0] = v523;
      *(std::string::size_type *)((char *)&__to.__pn_.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)&v954[7];
      __to.__pn_.__r_.__value_.__l.__size_ = *(_QWORD *)v954;
      *((_BYTE *)&__to.__pn_.__r_.__value_.__s + 23) = v524;
      sub_239498A04(&__to, (uint64_t)&__replacement, &task_info_outCnt);
      if (SHIBYTE(__to.__pn_.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__to.__pn_.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v930.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_1029:
          if ((v521 & 0x80000000) == 0)
            goto LABEL_1030;
          goto LABEL_1035;
        }
      }
      else if ((SHIBYTE(v930.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_1029;
      }
      operator delete(v930.__r_.__value_.__l.__data_);
      if ((v521 & 0x80000000) == 0)
      {
LABEL_1030:
        if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_1036;
        goto LABEL_1031;
      }
LABEL_1035:
      operator delete(v520);
      if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_1036:
        operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
LABEL_1031:
      __src[0].__pn_.__r_.__value_.__r.__words[0] = v514->__pn_.__r_.__value_.__r.__words[2];
      if (SHIBYTE(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2]) < 0)
        sub_23941A7F8(&__src[0].__pn_.__r_.__value_.__s.__data_[8], task_info_outCnt.__pn_.__r_.__value_.__l.__data_, task_info_outCnt.__pn_.__r_.__value_.__l.__size_);
      else
        *(std::__fs::filesystem::path *)((char *)__src + 8) = task_info_outCnt;
      sub_2395F833C((uint64_t)__str, (unint64_t *)__src, (uint64_t)__src);
      if (__src[1].__pn_.__r_.__value_.__s.__data_[7] < 0)
      {
        operator delete((void *)__src[0].__pn_.__r_.__value_.__l.__size_);
        if ((SHIBYTE(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_1015;
LABEL_1040:
        operator delete(task_info_outCnt.__pn_.__r_.__value_.__l.__data_);
        v514 = (const std::__fs::filesystem::path *)v514->__pn_.__r_.__value_.__r.__words[0];
        if (!v514)
          goto LABEL_1041;
      }
      else
      {
        if (SHIBYTE(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_1040;
LABEL_1015:
        v514 = (const std::__fs::filesystem::path *)v514->__pn_.__r_.__value_.__r.__words[0];
        if (!v514)
          goto LABEL_1041;
      }
    }
    v518 = (v516.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v516.__size_ | 7) != 0x17)
      v518 = v516.__size_ | 7;
    v519 = v518 + 1;
    v517 = (std::__fs::filesystem::path *)operator new(v518 + 1);
    __src[0].__pn_.__r_.__value_.__r.__words[2] = v519 | 0x8000000000000000;
    __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v517;
    __src[0].__pn_.__r_.__value_.__l.__size_ = v516.__size_;
LABEL_1023:
    memmove(v517, v516.__data_, v516.__size_);
    goto LABEL_1024;
  }
LABEL_1041:
  if (!v805)
  {
    if (!*(_QWORD *)(v17 + 416) || !*(_QWORD *)(v17 + 432))
    {
      sub_239A444D4((uint64_t)"unknown file", 1716, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v529 = sub_239B3C83C((uint64_t)v882, v883, 1);
    sub_2396FD534(&task_info_outCnt, &v993, *((_DWORD *)v529 + 6) - 1);
    v801 = *(_QWORD *)(v17 + 416);
    v530 = *(_QWORD *)(v17 + 112);
    if (*(_QWORD *)(v17 + 120) == v530)
    {
LABEL_1154:
      v569 = *(uint64_t **)(v17 + 432);
      sub_239B3C90C((uint64_t)v982, (uint64_t)v798);
      v877 = task_info_outCnt;
      if (task_info_outCnt.__pn_.__r_.__value_.__r.__words[2])
      {
        v570 = (unint64_t *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] + 8);
        do
          v571 = __ldxr(v570);
        while (__stxr(v571 + 1, v570));
      }
      v878 = v811;
      if (*((_QWORD *)&v811 + 1))
      {
        v572 = (unint64_t *)(*((_QWORD *)&v811 + 1) + 8);
        do
          v573 = __ldxr(v572);
        while (__stxr(v573 + 1, v572));
      }
      v879 = v812;
      if (*((_QWORD *)&v812 + 1))
      {
        v574 = (unint64_t *)(*((_QWORD *)&v812 + 1) + 8);
        do
          v575 = __ldxr(v574);
        while (__stxr(v575 + 1, v574));
      }
      v981 = 0;
      v576 = (char *)operator new(0x40uLL);
      *(_QWORD *)v576 = &off_250ADB9D8;
      *(std::__fs::filesystem::path *)(v576 + 8) = v877;
      *(_OWORD *)&v877.__pn_.__r_.__value_.__r.__words[1] = 0uLL;
      v577 = v878;
      v878 = 0uLL;
      v578 = v879;
      *((_OWORD *)v576 + 2) = v577;
      *((_OWORD *)v576 + 3) = v578;
      v879 = 0uLL;
      v981 = v576;
      sub_2396FD600((uint64_t)v984, (uint64_t)v982, (uint64_t)v980);
      v579 = sub_239B57D98((int8x8_t **)v801, v569, v984);
      sub_23942FE80(v984);
      v580 = v981;
      if (v981 == v980)
      {
        v581 = 4;
        v580 = v980;
      }
      else
      {
        if (!v981)
          goto LABEL_1169;
        v581 = 5;
      }
      (*(void (**)(void))(*v580 + 8 * v581))();
LABEL_1169:
      sub_23942FEFC(&v877);
      v582 = v983;
      if (v983 == v982)
      {
        v583 = 4;
        v582 = v982;
      }
      else
      {
        if (!v983)
          goto LABEL_1174;
        v583 = 5;
      }
      (*(void (**)(void))(*v582 + 8 * v583))();
LABEL_1174:
      if ((_DWORD)v579)
      {
        sub_23942FEFC(&task_info_outCnt);
        v527 = 0;
        v51 = v579;
        goto LABEL_1176;
      }
      if (!*(_BYTE *)(*(_QWORD *)(v17 + 432) + 320))
      {
        v626 = *(_BYTE **)(v17 + 448);
        if (v626[145] && (v627 = *(uint64_t **)(*(_QWORD *)v626 + 88)) != 0)
        {
          v628 = -1;
          while (1)
          {
            v629 = *((_DWORD *)v627 + 55);
            if ((v629 & 0x80000000) == 0)
            {
              v630 = v628 >= v629 ? *((_DWORD *)v627 + 55) : v628;
              v628 = v628 == -1 ? *((_DWORD *)v627 + 55) : v630;
              if (!v628)
                break;
            }
            v627 = (uint64_t *)*v627;
            if (!v627)
            {
              if ((v628 & 0x80000000) == 0)
                break;
              goto LABEL_1381;
            }
          }
        }
        else
        {
LABEL_1381:
          if (*(_QWORD *)(v17 + 120) != *(_QWORD *)(v17 + 112))
          {
            v676 = *(_QWORD *)(v799 + 24);
            if (v676)
            {
              LODWORD(__src[0].__pn_.__r_.__value_.__l.__data_) = -2;
              (*(void (**)(uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)v676 + 48))(v676, __src);
            }
          }
          sub_239B3B7B8(&__replacement);
          if (**(int **)(__replacement.__pn_.__r_.__value_.__r.__words[0] + 56) <= 4
            && *(_BYTE *)(__replacement.__pn_.__r_.__value_.__r.__words[0] + 72))
          {
            __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&__replacement;
            __src[0].__pn_.__r_.__value_.__r.__words[1] = std::chrono::steady_clock::now().__d_.__rep_;
            __src[0].__pn_.__r_.__value_.__r.__words[2] = std::chrono::system_clock::now().__d_.__rep_;
            LODWORD(__src[1].__pn_.__r_.__value_.__l.__data_) = 4;
            __src[1].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)"unknown file";
            LODWORD(__src[1].__pn_.__r_.__value_.__r.__words[2]) = 1756;
            *(_QWORD *)&v1007 = 0;
            *(_QWORD *)&v1006 = "unknown function";
            *((_QWORD *)&v1006 + 1) = 0;
            sub_239B3C970((uint64_t)__src);
            sub_239A47720((uint64_t)__src);
            sub_239A478B4((uint64_t)__src);
          }
          v677 = *(_QWORD *)(v17 + 16);
          __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)sub_239B101B8;
          __src[0].__pn_.__r_.__value_.__l.__size_ = 0;
          __src[0].__pn_.__r_.__value_.__r.__words[2] = v677;
          sub_239B104A0((uint64_t)__src);
          v678 = *(_QWORD *)(v18 + 2312);
          v679 = *(_QWORD *)(v18 + 2320);
          v875 = v678;
          v876 = v679;
          if (v679)
          {
            v680 = (unint64_t *)(v679 + 8);
            do
              v681 = __ldxr(v680);
            while (__stxr(v681 + 1, v680));
            v682 = v876;
          }
          else
          {
            v682 = 0;
          }
          sub_239B3CA84(__src, v678, v682);
          sub_239B3CB1C(&__replacement, (uint64_t *)__src);
          sub_239B24AF0(v17 + 16, (__int128 *)&__replacement);
          sub_239A4D7C0((uint64_t)&__replacement);
          sub_239A74534((uint64_t)__src);
          sub_239416DA0((uint64_t)&v875);
          sub_239B3CCAC(*(_QWORD **)(v17 + 432), *(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24));
          sub_239B3CCAC((_QWORD *)(*(_QWORD *)(v17 + 448) + 32), *(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24));
          memset(__src, 0, 32);
          __src[1].__pn_.__r_.__value_.__l.__size_ = 1065353216;
          sub_239B3CD20((uint64_t)__str, (uint64_t *)__src);
          sub_23959F2D4((uint64_t)__src);
        }
      }
      sub_23942FEFC(&task_info_outCnt);
      if (*(_BYTE *)(v17 + 2108))
        goto LABEL_1044;
      goto LABEL_1043;
    }
    v797 = v51;
    v531 = 0;
    while (1)
    {
      v532 = *(_QWORD *)(*(_QWORD *)(v17 + 80) + 176);
      v533 = *(uint64_t **)(v801 + 16);
      v534 = *(_QWORD *)(v530 + 8 * v531);
      v535 = v533[1];
      if (v535)
      {
        v536 = (uint8x8_t)vcnt_s8((int8x8_t)v535);
        v536.i16[0] = vaddlv_u8(v536);
        if (v536.u32[0] > 1uLL)
        {
          v51 = *(_QWORD *)(v530 + 8 * v531);
          if (v534 >= v535)
            v51 = v534 % v535;
        }
        else
        {
          v51 = (v535 - 1) & v534;
        }
        v537 = *(_QWORD ***)(*v533 + 8 * v51);
        if (v537)
        {
          v538 = *v537;
          if (*v537)
          {
            if (v536.u32[0] < 2uLL)
            {
              while (1)
              {
                v540 = v538[1];
                if (v540 == v534)
                {
                  if (v538[2] == v534)
                    goto LABEL_1151;
                }
                else if ((v540 & (v535 - 1)) != v51)
                {
                  goto LABEL_1084;
                }
                v538 = (_QWORD *)*v538;
                if (!v538)
                  goto LABEL_1084;
              }
            }
            do
            {
              v539 = v538[1];
              if (v539 == v534)
              {
                if (v538[2] == v534)
                  goto LABEL_1151;
              }
              else
              {
                if (v539 >= v535)
                  v539 %= v535;
                if (v539 != v51)
                  break;
              }
              v538 = (_QWORD *)*v538;
            }
            while (v538);
          }
        }
      }
LABEL_1084:
      v538 = operator new(0x30uLL);
      v803 = v532;
      v541 = v533 + 2;
      __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v538;
      __src[0].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)(v533 + 2);
      *v538 = 0;
      v538[1] = v534;
      v538[2] = *(_QWORD *)(v530 + 8 * v531);
      v538[3] = 0;
      v538[4] = 0;
      v538[5] = 0;
      __src[0].__pn_.__r_.__value_.__s.__data_[16] = 1;
      v542 = (float)(unint64_t)(v533[3] + 1);
      v543 = *((float *)v533 + 8);
      if (!v535 || (float)(v543 * (float)v535) < v542)
        break;
LABEL_1141:
      v565 = *v533;
      v566 = *(_QWORD **)(*v533 + 8 * v51);
      if (v566)
      {
        *v538 = *v566;
        v532 = v803;
      }
      else
      {
        *v538 = *v541;
        *v541 = v538;
        *(_QWORD *)(v565 + 8 * v51) = v541;
        v532 = v803;
        if (!*v538)
          goto LABEL_1150;
        v567 = *(_QWORD *)(*v538 + 8);
        if ((v535 & (v535 - 1)) != 0)
        {
          if (v567 >= v535)
            v567 %= v535;
        }
        else
        {
          v567 &= v535 - 1;
        }
        v566 = (_QWORD *)(*v533 + 8 * v567);
      }
      *v566 = v538;
LABEL_1150:
      ++v533[3];
LABEL_1151:
      v568 = (char **)(v532 + 352 * v531 + 104);
      if (v538 + 3 != v568)
        sub_23945D3D0(v538 + 3, *v568, *(char **)(v532 + 352 * v531 + 112), (uint64_t)(*(_QWORD *)(v532 + 352 * v531 + 112) - (_QWORD)*v568) >> 3);
      ++v531;
      v530 = *(_QWORD *)(v17 + 112);
      if (v531 >= (*(_QWORD *)(v17 + 120) - v530) >> 3)
      {
        v801 = *(_QWORD *)(v17 + 416);
        v51 = v797;
        goto LABEL_1154;
      }
    }
    v544 = (v535 & (v535 - 1)) != 0;
    if (v535 < 3)
      v544 = 1;
    v545 = v544 | (2 * v535);
    v546 = vcvtps_u32_f32(v542 / v543);
    if (v545 <= v546)
      prime = v546;
    else
      prime = v545;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v535 = v533[1];
    }
    if (prime <= v535)
    {
      if (prime >= v535)
        goto LABEL_1136;
      v558 = vcvtps_u32_f32((float)(unint64_t)v533[3] / *((float *)v533 + 8));
      if (v535 < 3 || (v559 = (uint8x8_t)vcnt_s8((int8x8_t)v535), v559.i16[0] = vaddlv_u8(v559), v559.u32[0] > 1uLL))
      {
        v558 = std::__next_prime(v558);
      }
      else
      {
        v560 = 1 << -(char)__clz(v558 - 1);
        if (v558 >= 2)
          v558 = v560;
      }
      if (prime <= v558)
        prime = v558;
      if (prime >= v535)
        goto LABEL_1136;
      if (!prime)
      {
        v564 = (void *)*v533;
        *v533 = 0;
        if (v564)
          operator delete(v564);
        v533[1] = 0;
        goto LABEL_1136;
      }
    }
    if (prime >> 61)
      sub_239418A80();
    v548 = operator new(8 * prime);
    v549 = (void *)*v533;
    *v533 = (uint64_t)v548;
    if (v549)
      operator delete(v549);
    v550 = 0;
    v533[1] = prime;
    do
      *(_QWORD *)(*v533 + 8 * v550++) = 0;
    while (prime != v550);
    v551 = (_QWORD *)*v541;
    if (!*v541)
    {
LABEL_1136:
      v535 = v533[1];
      if ((v535 & (v535 - 1)) != 0)
      {
        if (v534 >= v535)
          v51 = v534 % v535;
        else
          v51 = v534;
      }
      else
      {
        v51 = (v535 - 1) & v534;
      }
      goto LABEL_1141;
    }
    v552 = v551[1];
    v553 = prime - 1;
    if ((prime & (prime - 1)) == 0)
    {
      v554 = v552 & v553;
      *(_QWORD *)(*v533 + 8 * v554) = v541;
      while (1)
      {
        v555 = (_QWORD *)*v551;
        if (!*v551)
          break;
        v556 = v555[1] & v553;
        if (v556 == v554)
        {
          v551 = (_QWORD *)*v551;
        }
        else if (*(_QWORD *)(*v533 + 8 * v556))
        {
          *v551 = *v555;
          v557 = 8 * v556;
          *v555 = **(_QWORD **)(*v533 + v557);
          **(_QWORD **)(*v533 + v557) = v555;
        }
        else
        {
          *(_QWORD *)(*v533 + 8 * v556) = v551;
          v551 = v555;
          v554 = v556;
        }
      }
      goto LABEL_1136;
    }
    if (v552 >= prime)
      v552 %= prime;
    *(_QWORD *)(*v533 + 8 * v552) = v541;
    v561 = (_QWORD *)*v551;
    if (!*v551)
      goto LABEL_1136;
    while (1)
    {
      v563 = v561[1];
      if (v563 >= prime)
        v563 %= prime;
      if (v563 != v552)
      {
        if (!*(_QWORD *)(*v533 + 8 * v563))
        {
          *(_QWORD *)(*v533 + 8 * v563) = v551;
          goto LABEL_1122;
        }
        *v551 = *v561;
        v562 = 8 * v563;
        *v561 = **(_QWORD **)(*v533 + v562);
        **(_QWORD **)(*v533 + v562) = v561;
        v561 = v551;
      }
      v563 = v552;
LABEL_1122:
      v551 = v561;
      v561 = (_QWORD *)*v561;
      v552 = v563;
      if (!v561)
        goto LABEL_1136;
    }
  }
  sub_239AEA35C(*(_QWORD *)(v17 + 432) + 16, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v17 + 176) + 24) + 432));
  if (*(_BYTE *)(v17 + 2108))
  {
LABEL_1044:
    kdebug_trace();
    v525 = **(_QWORD **)(v17 + 432);
    if (v525)
      sub_239B3CE24(v525);
    kdebug_trace();
    goto LABEL_1047;
  }
LABEL_1043:
  if (*(_DWORD *)(v17 + 2104) == 1)
    goto LABEL_1044;
LABEL_1047:
  v526 = (_QWORD *)(*v794 + 496);
  if (v526 != (_QWORD *)__str)
  {
    *(_DWORD *)(*v794 + 528) = *(_DWORD *)&__str[32];
    sub_239A99678(v526, *(const std::string **)&__str[16]);
  }
  if (*(_BYTE *)(v17 + 2108) || *(_DWORD *)(v17 + 2104) == 1)
  {
    kdebug_trace();
    if (!sub_239A9D4E8(v18, v794))
    {
      v527 = 0;
      v51 = 4;
      goto LABEL_1176;
    }
    kdebug_trace();
  }
  sub_23941A4FC(__src, "");
  sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, 1);
  if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
  v527 = 1;
LABEL_1176:
  sub_23959F2D4((uint64_t)__str);
  sub_239416834(&__dst);
  if ((v527 & 1) == 0)
    goto LABEL_1180;
LABEL_1177:
  if (!v987)
    goto LABEL_1684;
  if (((*((uint64_t (**)(void **))*v987 + 6))(v987) & 1) != 0)
    goto LABEL_1179;
  if (!v792)
  {
    v613 = sub_239B3C83C((uint64_t)v882, v883, 2)[3];
    if ((int)v613 >= 1)
    {
      v929 = 2;
      sub_23941A4FC(__src, "");
      sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, v613);
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    }
    goto LABEL_1319;
  }
  sub_239B3B7B8(&task_info_outCnt);
  if (**(int **)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 56) <= 3
    && *(_BYTE *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 72))
  {
    __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&task_info_outCnt;
    __src[0].__pn_.__r_.__value_.__r.__words[1] = std::chrono::steady_clock::now().__d_.__rep_;
    __src[0].__pn_.__r_.__value_.__r.__words[2] = std::chrono::system_clock::now().__d_.__rep_;
    LODWORD(__src[1].__pn_.__r_.__value_.__l.__data_) = 3;
    __src[1].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)"unknown file";
    LODWORD(__src[1].__pn_.__r_.__value_.__r.__words[2]) = 1817;
    *(_QWORD *)&v1007 = 0;
    *(_QWORD *)&v1006 = "unknown function";
    *((_QWORD *)&v1006 + 1) = 0;
    sub_239B3CE64((uint64_t)__src, "Reconstructing camera poses");
    sub_239A47720((uint64_t)__src);
    sub_239A478B4((uint64_t)__src);
  }
  v929 = 2;
  kdebug_trace();
  *(_QWORD *)__str = &off_250AF5CB0;
  *(_QWORD *)&__str[24] = __str;
  v1014 = 0u;
  v1013 = 0u;
  v1012 = 0u;
  v1011 = 0u;
  v1010 = 0u;
  v1009 = 0u;
  *(_OWORD *)v1008 = 0u;
  v1007 = 0u;
  v1006 = 0u;
  memset(__src, 0, sizeof(__src));
  sub_239420EF4((uint64_t)__src);
  sub_239B3CF84(*(_QWORD *)(v17 + 464) + 16, (__int128 *)__src);
  sub_239420BFC((uint64_t)__src);
  bzero(__src, 0x2C8uLL);
  sub_239AD233C((uint64_t)__src);
  sub_239B3D078(*(_QWORD *)(v17 + 464) + 208, (__int128 *)__src);
  sub_239A6177C((uint64_t)__src);
  bzero(__src, 0x6D0uLL);
  sub_239AB5C84((uint64_t)__src);
  sub_239B3D494(*(_QWORD *)(v17 + 464) + 920, (__int128 *)__src);
  sub_239A615DC((uint64_t)__src);
  bzero(__src, 0x248uLL);
  sub_239AA7E14((uint64_t)__src);
  sub_239B3DC70(*(_QWORD *)(v17 + 464) + 2664, (__int128 *)__src);
  sub_239A614AC(__src);
  v596 = operator new(0x20uLL);
  *v596 = &off_250AF5CF8;
  v596[1] = v17;
  v596[2] = a10;
  *(_QWORD *)&v961 = v596;
  if (!*(_QWORD *)(v17 + 448) || !*(_QWORD *)(v17 + 464))
  {
    sub_239A444D4((uint64_t)"unknown file", 1856, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v597 = sub_239B3C83C((uint64_t)v882, v883, 2);
  sub_2396FD534(&task_info_outCnt, &v993, *((_DWORD *)v597 + 6) - 1);
  v598 = *(_QWORD *)(v17 + 448);
  *(_QWORD *)(v598 + 64) = *(_QWORD *)(v17 + 1984);
  sub_239B066A4(v18, (_QWORD *)(v598 + 16));
  if (v805)
  {
    v599 = operator new(0x20uLL);
    *v599 = &off_250AF5D40;
    v599[1] = v17;
    v599[2] = a10;
    __src[1].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v599;
    v600 = *(_QWORD *)(v17 + 448);
    sub_239B3C90C((uint64_t)v977, (uint64_t)v798);
    v872 = task_info_outCnt;
    if (task_info_outCnt.__pn_.__r_.__value_.__r.__words[2])
    {
      v601 = (unint64_t *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] + 8);
      do
        v602 = __ldxr(v601);
      while (__stxr(v602 + 1, v601));
    }
    v873 = v811;
    if (*((_QWORD *)&v811 + 1))
    {
      v603 = (unint64_t *)(*((_QWORD *)&v811 + 1) + 8);
      do
        v604 = __ldxr(v603);
      while (__stxr(v604 + 1, v603));
    }
    v874 = v812;
    if (*((_QWORD *)&v812 + 1))
    {
      v605 = (unint64_t *)(*((_QWORD *)&v812 + 1) + 8);
      do
        v606 = __ldxr(v605);
      while (__stxr(v606 + 1, v605));
    }
    v976 = 0;
    v607 = (char *)operator new(0x40uLL);
    *(_QWORD *)v607 = &off_250ADB9D8;
    *(std::__fs::filesystem::path *)(v607 + 8) = v872;
    *(_OWORD *)&v872.__pn_.__r_.__value_.__r.__words[1] = 0uLL;
    v608 = v873;
    v873 = 0uLL;
    v609 = v874;
    *((_OWORD *)v607 + 2) = v608;
    *((_OWORD *)v607 + 3) = v609;
    v874 = 0uLL;
    v976 = v607;
    sub_2396FD600((uint64_t)v979, (uint64_t)v977, (uint64_t)v975);
    v610 = sub_239B5B0EC(v600);
    sub_23942FE80(v979);
    v611 = v976;
    if (v976 == v975)
    {
      v612 = 4;
      v611 = v975;
    }
    else
    {
      if (!v976)
        goto LABEL_1275;
      v612 = 5;
    }
    (*(void (**)(void))(*v611 + 8 * v612))();
LABEL_1275:
    sub_23942FEFC(&v872);
    v631 = v978;
    if (v978 == v977)
    {
      v632 = 4;
      v631 = v977;
    }
    else
    {
      if (!v978)
      {
LABEL_1280:
        sub_239416834(__src);
        goto LABEL_1288;
      }
      v632 = 5;
    }
    (*(void (**)(void))(*v631 + 8 * v632))();
    goto LABEL_1280;
  }
  v614 = *(_QWORD *)(v17 + 448);
  sub_239B3C90C((uint64_t)v972, (uint64_t)v798);
  v869 = task_info_outCnt;
  if (task_info_outCnt.__pn_.__r_.__value_.__r.__words[2])
  {
    v615 = (unint64_t *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] + 8);
    do
      v616 = __ldxr(v615);
    while (__stxr(v616 + 1, v615));
  }
  v870 = v811;
  if (*((_QWORD *)&v811 + 1))
  {
    v617 = (unint64_t *)(*((_QWORD *)&v811 + 1) + 8);
    do
      v618 = __ldxr(v617);
    while (__stxr(v618 + 1, v617));
  }
  v871 = v812;
  if (*((_QWORD *)&v812 + 1))
  {
    v619 = (unint64_t *)(*((_QWORD *)&v812 + 1) + 8);
    do
      v620 = __ldxr(v619);
    while (__stxr(v620 + 1, v619));
  }
  v971 = 0;
  v621 = (char *)operator new(0x40uLL);
  *(_QWORD *)v621 = &off_250ADB9D8;
  *(std::__fs::filesystem::path *)(v621 + 8) = v869;
  *(_OWORD *)&v869.__pn_.__r_.__value_.__r.__words[1] = 0uLL;
  v622 = v870;
  v870 = 0uLL;
  v623 = v871;
  *((_OWORD *)v621 + 2) = v622;
  *((_OWORD *)v621 + 3) = v623;
  v871 = 0uLL;
  v971 = v621;
  sub_2396FD600((uint64_t)v974, (uint64_t)v972, (uint64_t)v970);
  v868[1] = 0;
  v868[0] = 0;
  v610 = sub_239B62AA0(v614);
  sub_239A4D7C0((uint64_t)v868);
  sub_23942FE80(v974);
  v624 = v971;
  if (v971 == v970)
  {
    v625 = 4;
    v624 = v970;
  }
  else
  {
    if (!v971)
      goto LABEL_1283;
    v625 = 5;
  }
  (*(void (**)(void))(*v624 + 8 * v625))();
LABEL_1283:
  sub_23942FEFC(&v869);
  v633 = v973;
  if (v973 == v972)
  {
    v634 = 4;
    v633 = v972;
  }
  else
  {
    if (!v973)
      goto LABEL_1288;
    v634 = 5;
  }
  (*(void (**)(void))(*v633 + 8 * v634))();
LABEL_1288:
  if ((_DWORD)v610)
  {
    sub_23941A4FC(__src, "");
    sub_2396FCC6C((uint64_t)&v993, (uint64_t)__src);
    if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    v635 = 0;
  }
  else
  {
    sub_23941A4FC(__src, "");
    sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, 1);
    if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    if (*(_BYTE *)(*(_QWORD *)(v17 + 448) + 1664))
    {
      v636 = *(_QWORD *)(v17 + 464);
      if (!*(_BYTE *)(v636 + 152) || *(_BYTE *)(v636 + 611))
      {
        memset(__src, 0, 32);
        __src[1].__pn_.__r_.__value_.__l.__size_ = 1065353216;
        sub_239B3CD20(*(_QWORD *)(v17 + 208) + 496, (uint64_t *)__src);
        sub_23959F2D4((uint64_t)__src);
        v637 = *(_QWORD *)(v17 + 16);
        __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)sub_239B101B8;
        __src[0].__pn_.__r_.__value_.__l.__size_ = 0;
        __src[0].__pn_.__r_.__value_.__r.__words[2] = v637;
        sub_239B104A0((uint64_t)__src);
        v638 = *(_QWORD *)(v18 + 2312);
        v639 = *(_QWORD *)(v18 + 2320);
        v866 = v638;
        v867 = v639;
        if (v639)
        {
          v640 = (unint64_t *)(v639 + 8);
          do
            v641 = __ldxr(v640);
          while (__stxr(v641 + 1, v640));
          v642 = v867;
        }
        else
        {
          v642 = 0;
        }
        sub_239B3CA84(__src, v638, v642);
        sub_239B3E054(&__replacement, (uint64_t *)__src);
        sub_239B24AF0(v17 + 16, (__int128 *)&__replacement);
        sub_239A4D7C0((uint64_t)&__replacement);
        sub_239A74534((uint64_t)__src);
        sub_239416DA0((uint64_t)&v866);
        sub_239B3CCAC(*(_QWORD **)(v17 + 432), *(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24));
      }
    }
    if (sub_239B06344(v18, (uint64_t *)(v17 + 208))
      && ((sub_239B0F660(v18, (_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 208) + 496), !*(_BYTE *)(v18 + 4))
       || sub_239A8E230(v18, 10000)))
    {
      if (*(_QWORD *)(a9 + 24))
      {
        sub_239B3E1E4((uint64_t *)__src, **(_QWORD **)(v17 + 464));
        sub_239A5F6A8((uint64_t)&__src[0].__pn_.__r_.__value_.__r.__words[2], (__int128 *)(*(_QWORD *)(v17 + 464) + 920));
        v1040 = 1;
        v643 = *(_QWORD *)(a9 + 24);
        if (!v643)
          sub_2394172E0();
        (*(void (**)(uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)v643 + 48))(v643, __src);
        sub_239B3B750((uint64_t)__src);
      }
      v644 = *(_QWORD *)(v799 + 24);
      v645 = *(uint64_t **)(v17 + 464);
      if (v644)
      {
        v646 = (_DWORD *)v645[194];
        v647 = (_DWORD *)v645[195];
        if (v646 != v647)
        {
          while (*v646 != 4507)
          {
            if (++v646 == v647)
            {
              v646 = (_DWORD *)v645[195];
              break;
            }
          }
        }
        if (v646 != v647)
        {
          LODWORD(__src[0].__pn_.__r_.__value_.__l.__data_) = -5;
          (*(void (**)(uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)v644 + 48))(v644, __src);
          v645 = *(uint64_t **)(v17 + 464);
        }
      }
      sub_239B3E1E4((uint64_t *)__src, *v645);
      sub_239B24AF0(a10 + 256, (__int128 *)__src);
      sub_239A4D7C0((uint64_t)__src);
      v635 = 1;
      v610 = v51;
    }
    else
    {
      v635 = 0;
      v610 = 4;
    }
  }
  sub_23942FEFC(&task_info_outCnt);
  sub_239416834(&__dst);
  sub_239416834(__str);
  v51 = v610;
  if ((v635 & 1) == 0)
    goto LABEL_1180;
LABEL_1319:
  v648 = v787;
  if (v805)
    v648 = 1;
  if (v648 != 1)
    goto LABEL_1003;
  if (!v987)
    goto LABEL_1684;
  if (((*((uint64_t (**)(void **))*v987 + 6))(v987) & 1) != 0)
    goto LABEL_1179;
  if (!v791)
  {
    v654 = sub_239B3C83C((uint64_t)v882, v883, 3)[3];
    if ((int)v654 >= 1)
    {
      v929 = 3;
      sub_23941A4FC(__src, "");
      sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, v654);
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    }
    goto LABEL_1415;
  }
  sub_239B3B7B8(&task_info_outCnt);
  if (**(int **)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 56) <= 3
    && *(_BYTE *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 72))
  {
    __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&task_info_outCnt;
    __src[0].__pn_.__r_.__value_.__r.__words[1] = std::chrono::steady_clock::now().__d_.__rep_;
    __src[0].__pn_.__r_.__value_.__r.__words[2] = std::chrono::system_clock::now().__d_.__rep_;
    LODWORD(__src[1].__pn_.__r_.__value_.__l.__data_) = 3;
    __src[1].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)"unknown file";
    LODWORD(__src[1].__pn_.__r_.__value_.__r.__words[2]) = 2002;
    *(_QWORD *)&v1007 = 0;
    *(_QWORD *)&v1006 = "unknown function";
    *((_QWORD *)&v1006 + 1) = 0;
    sub_239B3E24C((uint64_t)__src, "Reconstructing point cloud - step 1");
    sub_239A47720((uint64_t)__src);
    sub_239A478B4((uint64_t)__src);
  }
  v929 = 3;
  kdebug_trace();
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF5E18;
  *(_QWORD *)&v961 = &__dst;
  v649 = sub_239B3C83C((uint64_t)v882, v883, 3)[3];
  *(_OWORD *)v813 = 0u;
  v812 = 0u;
  v811 = 0u;
  task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = __PAIR64__(v61, LODWORD(v60));
  task_info_outCnt.__pn_.__r_.__value_.__s.__data_[8] = v788;
  *(std::string::size_type *)((char *)&task_info_outCnt.__pn_.__r_.__value_.__r.__words[1] + 1) = v1041[0];
  task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] = *(_QWORD *)((char *)v1041 + 7);
  v650 = sub_239B05E54(v18, &v811);
  sub_239B066A4(v18, &v812);
  if ((v650 & 1) == 0)
  {
    v655 = 3;
    v656 = 1;
    goto LABEL_1414;
  }
  if (!(_QWORD)v811)
  {
    sub_239A444D4((uint64_t)"unknown file", 2026, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v651 = sub_2396F6678(v811, 0);
  sub_239BC99FC((__int128 *)__src);
  if (v651 < __src[0].__pn_.__r_.__value_.__r.__words[2]
    || (v652 = sqrtf((float)__src[0].__pn_.__r_.__value_.__r.__words[2] / (float)v651),
        v652 >= *(float *)&task_info_outCnt.__pn_.__r_.__value_.__l.__data_))
  {
    v653 = 0;
  }
  else
  {
    *(float *)&task_info_outCnt.__pn_.__r_.__value_.__l.__data_ = v652;
    v653 = 1;
  }
  sub_2396FD534(__str, &v993, (int)v649);
  v657 = sub_239B3E36C(v811);
  BYTE8(v1012) = 0;
  memset(__src, 0, sizeof(__src));
  LOBYTE(v1006) = 0;
  __to.__pn_.__r_.__value_.__r.__words[0] = v657;
  v658 = *(_QWORD *)(v17 + 248);
  if (!v658)
    sub_2394172E0();
  (*(void (**)(std::__fs::filesystem::path *__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)v658 + 48))(&__replacement, v658, &__to);
  sub_239B24AF0((uint64_t)&__src[0].__pn_.__r_.__value_.__r.__words[2], (__int128 *)&__replacement);
  sub_239A4D7C0((uint64_t)&__replacement);
  v659 = *(_QWORD *)(v17 + 280);
  if (v659)
  {
    __to.__pn_.__r_.__value_.__r.__words[0] = v657;
    (*(void (**)(std::__fs::filesystem::path *__return_ptr, uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)v659 + 48))(&__replacement, v659, &__to);
    sub_239B24AF0((uint64_t)&__src[1].__pn_.__r_.__value_.__l.__size_, (__int128 *)&__replacement);
    sub_239A4D7C0((uint64_t)&__replacement);
  }
  if (__src[1].__pn_.__r_.__value_.__l.__size_)
    sub_239B07600(v18, v813);
  sub_239B3C90C((uint64_t)v967, (uint64_t)v798);
  v862 = *(_OWORD *)__str;
  v863 = *(_QWORD *)&__str[16];
  if (*(_QWORD *)&__str[16])
  {
    v660 = (unint64_t *)(*(_QWORD *)&__str[16] + 8);
    do
      v661 = __ldxr(v660);
    while (__stxr(v661 + 1, v660));
  }
  v864 = *(_OWORD *)&__str[24];
  if (*(_QWORD *)&__str[32])
  {
    v662 = (unint64_t *)(*(_QWORD *)&__str[32] + 8);
    do
      v663 = __ldxr(v662);
    while (__stxr(v663 + 1, v662));
  }
  v865 = v947;
  if (*((_QWORD *)&v947 + 1))
  {
    v664 = (unint64_t *)(*((_QWORD *)&v947 + 1) + 8);
    do
      v665 = __ldxr(v664);
    while (__stxr(v665 + 1, v664));
  }
  v966 = 0;
  v666 = (char *)operator new(0x40uLL);
  *(_QWORD *)v666 = &off_250ADB9D8;
  *(_OWORD *)(v666 + 8) = v862;
  *((_QWORD *)v666 + 3) = v863;
  v863 = 0;
  *((_QWORD *)&v862 + 1) = 0;
  v667 = v864;
  v864 = 0uLL;
  v668 = v865;
  *((_OWORD *)v666 + 2) = v667;
  *((_OWORD *)v666 + 3) = v668;
  v865 = 0uLL;
  v966 = v666;
  sub_2396FD600((uint64_t)v969, (uint64_t)v967, (uint64_t)v965);
  v655 = sub_239B4EAB8((uint64_t)&task_info_outCnt, (uint64_t *)__src, v969);
  sub_23942FE80(v969);
  v669 = v966;
  if (v966 == v965)
  {
    v670 = 4;
    v669 = v965;
  }
  else
  {
    if (!v966)
      goto LABEL_1357;
    v670 = 5;
  }
  (*(void (**)(void))(*v669 + 8 * v670))();
LABEL_1357:
  sub_23942FEFC(&v862);
  v671 = v968;
  if (v968 == v967)
  {
    v672 = 4;
    v671 = v967;
  }
  else
  {
    if (!v968)
      goto LABEL_1362;
    v672 = 5;
  }
  (*(void (**)(void))(*v671 + 8 * v672))();
LABEL_1362:
  if (BYTE8(v1012))
    v673 = v653;
  else
    v673 = 0;
  if (v673 == 1)
    sub_2394202DC(v1008, 5501);
  sub_239B3E520(a10 + 4008, &v1006);
  if ((_DWORD)v655)
  {
    sub_23941A4FC(&__replacement, "");
    sub_2396FCC6C((uint64_t)&v993, (uint64_t)&__replacement);
    if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
    goto LABEL_1412;
  }
  if (v653)
  {
    v674 = *(_QWORD *)(v799 + 24);
    if (v674)
    {
      LODWORD(__replacement.__pn_.__r_.__value_.__l.__data_) = -1;
      (*(void (**)(uint64_t, std::__fs::filesystem::path *))(*(_QWORD *)v674 + 48))(v674, &__replacement);
    }
  }
  if (*(_BYTE *)(v17 + 2108) || *(_DWORD *)(v17 + 2104) == 1)
  {
    for (j = *(std::__fs::filesystem::path **)(__src[0].__pn_.__r_.__value_.__r.__words[0] + 472);
          j;
          j = (std::__fs::filesystem::path *)j->__pn_.__r_.__value_.__r.__words[0])
    {
      sub_239A4DCBC(&__replacement.__pn_, (std::string *)".jpg");
      std::__fs::filesystem::path::replace_extension(j + 1, &__replacement);
      if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
    }
    sub_2396F295C((uint64_t *)(v18 + 584), v18 + 8, (uint64_t)&__replacement);
    v683 = HIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]);
    if ((__replacement.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v683 = __replacement.__pn_.__r_.__value_.__l.__size_;
    if (v683)
      sub_2396B906C(__src[0].__pn_.__r_.__value_.__r.__words[0] + 456, (uint64_t)&__replacement);
    sub_2396F295C((uint64_t *)(v18 + 608), v18 + 8, (uint64_t)&__to);
    v684 = HIBYTE(__to.__pn_.__r_.__value_.__r.__words[2]);
    v685 = HIBYTE(__to.__pn_.__r_.__value_.__r.__words[2]);
    if ((__to.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v684 = __to.__pn_.__r_.__value_.__l.__size_;
    if (v684)
    {
      sub_2396B906C(__src[0].__pn_.__r_.__value_.__r.__words[0] + 496, (uint64_t)&__to);
      v685 = HIBYTE(__to.__pn_.__r_.__value_.__r.__words[2]);
    }
    if (v685 < 0)
      operator delete(__to.__pn_.__r_.__value_.__l.__data_);
    if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
  }
  if (!sub_239B10B88(v18, (uint64_t *)__src)
    || (sub_239B11F50(v18, &__src[0].__pn_.__r_.__value_.__r.__words[2], __src[0].__pn_.__r_.__value_.__r.__words[0] + 456), sub_239B12FF0(v18, &__src[1].__pn_.__r_.__value_.__l.__size_, __src[0].__pn_.__r_.__value_.__r.__words[0] + 496), *(_BYTE *)(v18 + 4))&& !sub_239A8E230(v18, 20000))
  {
    v655 = 4;
LABEL_1412:
    v656 = 1;
    goto LABEL_1413;
  }
  v656 = 0;
  v655 = v51;
LABEL_1413:
  sub_239B3E678((uint64_t)__src);
  sub_23942FEFC(__str);
LABEL_1414:
  sub_239B3E764(&task_info_outCnt);
  sub_239416834(&__dst);
  v51 = v655;
  if (v656)
    goto LABEL_1180;
LABEL_1415:
  if (!v987)
    goto LABEL_1700;
  if (((*((uint64_t (**)(void **))*v987 + 6))(v987) & 1) != 0)
    goto LABEL_1179;
  if (!(_DWORD)v790)
  {
    v691 = sub_239B3C83C((uint64_t)v882, v883, 4)[3];
    if ((int)v691 >= 1)
    {
      v929 = 3;
      sub_23941A4FC(__src, "");
      sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, v691);
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    }
    goto LABEL_1496;
  }
  sub_239B3B7B8(&task_info_outCnt);
  if (**(int **)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 56) <= 3
    && *(_BYTE *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 72))
  {
    __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&task_info_outCnt;
    __src[0].__pn_.__r_.__value_.__r.__words[1] = std::chrono::steady_clock::now().__d_.__rep_;
    __src[0].__pn_.__r_.__value_.__r.__words[2] = std::chrono::system_clock::now().__d_.__rep_;
    LODWORD(__src[1].__pn_.__r_.__value_.__l.__data_) = 3;
    __src[1].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)"unknown file";
    LODWORD(__src[1].__pn_.__r_.__value_.__r.__words[2]) = 2141;
    *(_QWORD *)&v1007 = 0;
    *(_QWORD *)&v1006 = "unknown function";
    *((_QWORD *)&v1006 + 1) = 0;
    sub_239B3E24C((uint64_t)__src, "Reconstructing point cloud - step 2");
    sub_239A47720((uint64_t)__src);
    sub_239A478B4((uint64_t)__src);
  }
  v929 = 3;
  kdebug_trace();
  __replacement.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF5E60;
  p_replacement = &__replacement;
  sub_239BC99FC((__int128 *)__src);
  v686 = __src[1].__pn_.__r_.__value_.__r.__words[1];
  *(_OWORD *)&task_info_outCnt.__pn_.__r_.__value_.__l.__data_ = xmmword_239F0C0D0;
  task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] = 0x4020000000010101;
  v811 = 0u;
  v812 = 0u;
  *(_OWORD *)v813 = 0u;
  *(_QWORD *)&v813[16] = 8000000;
  v813[24] = 0;
  *(_OWORD *)&v813[28] = xmmword_239F0C0E0;
  v813[44] = 2;
  *(_OWORD *)&v813[56] = xmmword_239F0C0F0;
  v813[72] = 1;
  *(_DWORD *)&v813[76] = 0x40000000;
  *(_OWORD *)&v813[80] = xmmword_239F0C100;
  v815[16] = 0;
  *(_OWORD *)&v813[96] = xmmword_239F0BFA0;
  *(_QWORD *)&v813[112] = 5;
  *(_OWORD *)v814 = xmmword_239F0C110;
  *(_OWORD *)v815 = xmmword_239F0C120;
  LODWORD(v816) = 1045220557;
  *((_QWORD *)&v816 + 1) = 3;
  LODWORD(v817) = 1077936128;
  *((_QWORD *)&v817 + 1) = 3;
  *(_QWORD *)&v818 = 0x3E4CCCCD41A00000;
  BYTE8(v818) = 0;
  HIDWORD(v818) = 1065353216;
  *(_QWORD *)&v819 = 0x41F000003C23D70ALL;
  *((_QWORD *)&v819 + 1) = 0x3F50624DD2F1A9FCLL;
  v820 = 30;
  v821 = 30;
  v822 = 1022739087;
  v823 = 1;
  v824 = 1106247680;
  v825 = 0x412000003C23D70ALL;
  v826 = 200;
  v827 = vdup_n_s32(0x3C23D70Au);
  v828 = 1;
  v829 = 1050253722;
  v830 = 1;
  v831 = xmmword_239F0C130;
  v832 = 0x42C8000000000000;
  v833 = 1;
  v834 = 0x837D1B717;
  v835 = xmmword_239F0C140;
  v836 = xmmword_239F0C150;
  v837 = 1;
  v838 = 2147483650000000;
  v840 = 0;
  v839 = 0;
  *(_QWORD *)&v813[48] = 3;
  *(_WORD *)&v813[25] = 257;
  v845 = 0u;
  v846 = 0u;
  v843 = 0u;
  v844 = 0u;
  v841 = 0u;
  v842 = 0u;
  sub_239B3E838((uint64_t)&task_info_outCnt, &v916);
  v687 = *(_DWORD *)&v813[16];
  if (*(_DWORD *)&v813[16] >= v686)
    v687 = v686;
  *(_DWORD *)&v813[16] = v687;
  v688 = sub_239B106F4(v18, &v841);
  v689 = v688;
  if (v688 && (_QWORD)v841)
    v690 = sub_239B3E36C(v841);
  else
    v690 = 0;
  sub_239B10E98(v18, &v842, v690);
  sub_239B12424(v18, &v843, v690);
  if ((v689 & 1) == 0)
    goto LABEL_1453;
  sub_239B14B80(v18, &v845);
  if ((_QWORD)v845)
  {
    v692 = sub_2396B8204(v845);
    v813[24] = v692;
    if ((v692 | 2) == 0x22)
    {
      v693 = 3;
      v694 = 994352038;
    }
    else
    {
      v693 = 2;
      v694 = 981668463;
    }
    *(_DWORD *)&v813[32] = 1061997773;
    DWORD1(v831) = v694;
    v813[44] = v693;
  }
  sub_239B1F6D0(v18, &v846);
  if ((sub_239B1EED0(v18, &v844) & 1) == 0)
  {
LABEL_1453:
    v709 = 3;
    v712 = 1;
    goto LABEL_1495;
  }
  v695 = sub_239B3C83C((uint64_t)v882, v883, 4);
  sub_2396FD534(&__dst, &v993, *((int *)v695 + 6));
  v1038 = 0;
  memset(__src, 0, sizeof(__src));
  v1006 = 0u;
  v1007 = 0u;
  *(_OWORD *)v1008 = 0u;
  v1009 = 0u;
  LOBYTE(v1010) = 0;
  v696 = *(_QWORD *)(v17 + 312);
  if (!v696)
    sub_2394172E0();
  (*(void (**)(_BYTE *__return_ptr))(*(_QWORD *)v696 + 48))(__str);
  sub_239B24AF0((uint64_t)__src, (__int128 *)__str);
  sub_239A4D7C0((uint64_t)__str);
  v697 = *(_QWORD *)(v17 + 344);
  if (!v697)
    sub_2394172E0();
  (*(void (**)(_BYTE *__return_ptr))(*(_QWORD *)v697 + 48))(__str);
  sub_239B24AF0((uint64_t)&__src[0].__pn_.__r_.__value_.__r.__words[2], (__int128 *)__str);
  sub_239A4D7C0((uint64_t)__str);
  v698 = *(_QWORD *)(v17 + 376);
  if (!v698)
    sub_2394172E0();
  (*(void (**)(_BYTE *__return_ptr))(*(_QWORD *)v698 + 48))(__str);
  sub_239B24AF0((uint64_t)&__src[1].__pn_.__r_.__value_.__l.__size_, (__int128 *)__str);
  sub_239A4D7C0((uint64_t)__str);
  v699 = *(_QWORD *)(v17 + 408);
  if (!v699)
    sub_2394172E0();
  (*(void (**)(_BYTE *__return_ptr))(*(_QWORD *)v699 + 48))(__str);
  sub_239B24AF0((uint64_t)&v1006, (__int128 *)__str);
  sub_239A4D7C0((uint64_t)__str);
  sub_239B3C90C((uint64_t)v957, (uint64_t)v798);
  v859 = __dst;
  if (__dst.__r_.__value_.__r.__words[2])
  {
    v700 = (unint64_t *)(__dst.__r_.__value_.__r.__words[2] + 8);
    do
      v701 = __ldxr(v700);
    while (__stxr(v701 + 1, v700));
  }
  v860 = v961;
  if (*((_QWORD *)&v961 + 1))
  {
    v702 = (unint64_t *)(*((_QWORD *)&v961 + 1) + 8);
    do
      v703 = __ldxr(v702);
    while (__stxr(v703 + 1, v702));
  }
  v861 = v962;
  if (*((_QWORD *)&v962 + 1))
  {
    v704 = (unint64_t *)(*((_QWORD *)&v962 + 1) + 8);
    do
      v705 = __ldxr(v704);
    while (__stxr(v705 + 1, v704));
  }
  v956 = 0;
  v706 = (char *)operator new(0x40uLL);
  *(_QWORD *)v706 = &off_250ADB9D8;
  *(std::string *)(v706 + 8) = v859;
  *(_OWORD *)&v859.__r_.__value_.__r.__words[1] = 0uLL;
  v707 = v860;
  v860 = 0uLL;
  v708 = v861;
  *((_OWORD *)v706 + 2) = v707;
  *((_OWORD *)v706 + 3) = v708;
  v861 = 0uLL;
  v956 = v706;
  sub_2396FD600((uint64_t)v959, (uint64_t)v957, (uint64_t)v955);
  v709 = sub_239B458D0((uint64_t)&task_info_outCnt);
  sub_23942FE80(v959);
  v710 = v956;
  if (v956 == v955)
  {
    v711 = 4;
    v710 = v955;
  }
  else
  {
    if (!v956)
      goto LABEL_1456;
    v711 = 5;
  }
  (*(void (**)(void))(*v710 + 8 * v711))();
LABEL_1456:
  sub_23942FEFC(&v859);
  v713 = v958;
  if (v958 == v957)
  {
    v714 = 4;
    v713 = v957;
  }
  else
  {
    if (!v958)
      goto LABEL_1461;
    v714 = 5;
  }
  (*(void (**)(void))(*v713 + 8 * v714))();
LABEL_1461:
  sub_239B3E8B4(a10 + 4120, (uint64_t)&v1010);
  if ((_DWORD)v709)
  {
    sub_23941A4FC(__str, "");
    sub_2396FCC6C((uint64_t)&v993, (uint64_t)__str);
    if ((__str[23] & 0x80000000) != 0)
      operator delete(*(void **)__str);
    goto LABEL_1493;
  }
  if (!sub_239B13BC0(v18, (uint64_t **)&v1007)
    || (_QWORD)v1009 && !sub_239B1EBC0(v18, (uint64_t *)&v1009))
  {
    goto LABEL_1492;
  }
  if (*(_DWORD *)(v17 + 2104) == 1)
  {
    kdebug_trace();
    sub_239B3E904((uint64_t)__src[0].__pn_.__r_.__value_.__l.__data_);
    sub_239B3EB50(__src[0].__pn_.__r_.__value_.__r.__words[2]);
    sub_239B3E904(__src[1].__pn_.__r_.__value_.__l.__size_);
    sub_239B3E904(v1006);
    kdebug_trace();
  }
  if (*(_QWORD *)v1008)
  {
    if (!v927)
      sub_2394875CC();
    sub_239B3B6FC((std::string *)__str);
    sub_239498A04((std::__fs::filesystem::path *)__str, (uint64_t)&pn, (std::__fs::filesystem::path *)&v930);
    if ((__str[23] & 0x80000000) != 0)
      operator delete(*(void **)__str);
    kdebug_trace();
    sub_239B3ED9C(v954);
    BYTE8(v947) = 0;
    v948 = 0;
    v949 = 0;
    v950 = 0;
    v951 = 0;
    v952 = 0;
    v953 = 0;
    memset(__str, 0, 25);
    sub_2396DFD60(*(uint64_t **)v1008, *(uint64_t *)v954, (uint64_t)__str, 1.0);
    if ((sub_239B14794((std::string *)v18, (uint64_t **)v954) & 1) != 0)
    {
      sub_239B149D4((char *)&__to, v18);
      if (v858)
      {
        if (sub_2396FC5A0((const char *)&__to, (const char *)&v930)
          && sub_239B1424C(v18, (uint64_t **)v1008))
        {
          kdebug_trace();
          sub_239A4D8DC((std::string *)(a10 + 32), &v930);
          v715 = 0;
        }
        else
        {
          v51 = 4;
          v715 = 1;
        }
        if (v858 && SHIBYTE(__to.__pn_.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__to.__pn_.__r_.__value_.__l.__data_);
      }
      else
      {
        v715 = 1;
        v51 = 4;
      }
      v709 = v51;
    }
    else
    {
      v709 = 4;
      v715 = 1;
    }
    sub_2394B6764((uint64_t)__str);
    sub_239A4D7C0((uint64_t)v954);
    if (SHIBYTE(v930.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v930.__r_.__value_.__l.__data_);
    if (v715)
      goto LABEL_1493;
  }
  else
  {
    v709 = v51;
  }
  if (*(_BYTE *)(v18 + 4) && !sub_239A8E230(v18, 30000))
  {
LABEL_1492:
    v709 = 4;
LABEL_1493:
    v712 = 1;
    goto LABEL_1494;
  }
  v712 = 0;
LABEL_1494:
  sub_239B3EE00((uint64_t)__src);
  sub_23942FEFC(&__dst);
LABEL_1495:
  sub_239B3EFDC((uint64_t)&task_info_outCnt);
  sub_239416834(&__replacement);
  v51 = v709;
  if (v712)
    goto LABEL_1180;
LABEL_1496:
  if (!v987)
    goto LABEL_1700;
  if (((*((uint64_t (**)(void **))*v987 + 6))(v987) & 1) != 0)
    goto LABEL_1179;
  if (!HIDWORD(v790))
  {
    v723 = sub_239B3C83C((uint64_t)v882, v883, 5)[3];
    if ((int)v723 >= 1)
    {
      v929 = 4;
      sub_23941A4FC(__src, "");
      sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, v723);
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    }
    goto LABEL_1530;
  }
  v716 = v51;
  sub_239B3B7B8(&task_info_outCnt);
  if (**(int **)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 56) <= 3
    && *(_BYTE *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 72))
  {
    __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&task_info_outCnt;
    __src[0].__pn_.__r_.__value_.__r.__words[1] = std::chrono::steady_clock::now().__d_.__rep_;
    __src[0].__pn_.__r_.__value_.__r.__words[2] = std::chrono::system_clock::now().__d_.__rep_;
    LODWORD(__src[1].__pn_.__r_.__value_.__l.__data_) = 3;
    __src[1].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)"unknown file";
    LODWORD(__src[1].__pn_.__r_.__value_.__r.__words[2]) = 2286;
    *(_QWORD *)&v1007 = 0;
    *(_QWORD *)&v1006 = "unknown function";
    *((_QWORD *)&v1006 + 1) = 0;
    sub_239B3F1AC((uint64_t)__src);
    sub_239A47720((uint64_t)__src);
    sub_239A478B4((uint64_t)__src);
  }
  v929 = 4;
  kdebug_trace();
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF5F38;
  *(_QWORD *)&v961 = &__dst;
  v717 = sub_239B3C83C((uint64_t)v882, v883, 5);
  sub_2396FD534(__str, &v993, *((_DWORD *)v717 + 6) - 1);
  task_info_outCnt.__pn_.__r_.__value_.__s.__data_[0] = 1;
  HIDWORD(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0]) = 1056964608;
  task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = 0x4000000000000000;
  task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] = 0x12C3F800000;
  *(_QWORD *)&v811 = 0x3F8000003F000000;
  DWORD2(v811) = 5;
  BYTE12(v811) = 1;
  *(_QWORD *)&v812 = 0x3E4CCCCD00000000;
  DWORD2(v812) = 16;
  BYTE12(v812) = 0;
  *(_QWORD *)v813 = 0x300000015;
  v813[8] = 1;
  *(_QWORD *)&v813[12] = 0x313E4CCCCDLL;
  memset(&v813[32], 0, 48);
  *(_QWORD *)&v813[24] = 100000000;
  *(_QWORD *)&v813[80] = 10240;
  *(_QWORD *)&v813[88] = 0x3F80000000000000;
  *(_DWORD *)&v813[96] = 4;
  *(_QWORD *)&v813[100] = 0x3A83126F41200000;
  *(_QWORD *)&v813[112] = 256000;
  LODWORD(v814[0]) = 8000000;
  v814[1] = (void *)20000000;
  *(_DWORD *)v815 = 1050253722;
  v815[4] = 1;
  v819 = 0u;
  *(_OWORD *)&v815[8] = 0u;
  v816 = 0u;
  v817 = 0u;
  v818 = 0u;
  sub_239B3F2C0((uint64_t)&task_info_outCnt, v903);
  *(_OWORD *)v1008 = 0u;
  v1007 = 0u;
  v1006 = 0u;
  memset(__src, 0, sizeof(__src));
  sub_239BC99FC((__int128 *)__src);
  v718 = __src[1].__pn_.__r_.__value_.__r.__words[1];
  if (LODWORD(v814[0]) < LODWORD(__src[1].__pn_.__r_.__value_.__r.__words[1]))
    v718 = (int)v814[0];
  LODWORD(v814[0]) = v718;
  v719 = *(_QWORD *)&v813[24];
  if (*((_QWORD *)&v1006 + 1) < *(_QWORD *)&v813[24])
    v719 = *((_QWORD *)&v1006 + 1);
  *(_QWORD *)&v813[24] = v719;
  *(_QWORD *)&v813[80] = *((_QWORD *)&__src[1].__pn_.__r_.__value_.__l + 2);
  v814[1] = (void *)v1007;
  *(_QWORD *)&v813[112] = v1006;
  v720 = sub_239B106F4(v18, &v816);
  v721 = v720;
  if (v720 && (_QWORD)v816)
    v722 = sub_239B3E36C(v816);
  else
    v722 = 0;
  sub_239B10E98(v18, &v817, v722);
  sub_239B12424(v18, &v818, v722);
  if ((v721 & 1) == 0 || !sub_239B13550(v18, &v815[8]) || !sub_239B1E72C(v18, &v819))
  {
    v51 = 3;
    v735 = 1;
    goto LABEL_1529;
  }
  BYTE8(v1027) = 0;
  memset(__src, 0, 33);
  sub_239B3C90C((uint64_t)v943, (uint64_t)v798);
  v853 = *(_OWORD *)__str;
  v854 = *(_QWORD *)&__str[16];
  if (*(_QWORD *)&__str[16])
  {
    v724 = (unint64_t *)(*(_QWORD *)&__str[16] + 8);
    do
      v725 = __ldxr(v724);
    while (__stxr(v725 + 1, v724));
  }
  v855 = *(_OWORD *)&__str[24];
  if (*(_QWORD *)&__str[32])
  {
    v726 = (unint64_t *)(*(_QWORD *)&__str[32] + 8);
    do
      v727 = __ldxr(v726);
    while (__stxr(v727 + 1, v726));
  }
  v856 = v947;
  if (*((_QWORD *)&v947 + 1))
  {
    v728 = (unint64_t *)(*((_QWORD *)&v947 + 1) + 8);
    do
      v729 = __ldxr(v728);
    while (__stxr(v729 + 1, v728));
  }
  v942 = 0;
  v730 = (char *)operator new(0x40uLL);
  *(_QWORD *)v730 = &off_250ADB9D8;
  *(_OWORD *)(v730 + 8) = v853;
  *((_QWORD *)v730 + 3) = v854;
  v854 = 0;
  *((_QWORD *)&v853 + 1) = 0;
  v731 = v855;
  v855 = 0uLL;
  v732 = v856;
  *((_OWORD *)v730 + 2) = v731;
  *((_OWORD *)v730 + 3) = v732;
  v856 = 0uLL;
  v942 = v730;
  sub_2396FD600((uint64_t)v945, (uint64_t)v943, (uint64_t)v941);
  v51 = sub_239B56368((uint64_t)&task_info_outCnt, (char ***)__src, v945);
  sub_23942FE80(v945);
  v733 = v942;
  if (v942 == v941)
  {
    v734 = 4;
    v733 = v941;
  }
  else
  {
    if (!v942)
      goto LABEL_1577;
    v734 = 5;
  }
  (*(void (**)(void))(*v733 + 8 * v734))();
LABEL_1577:
  sub_23942FEFC(&v853);
  v755 = v944;
  if (v944 == v943)
  {
    v756 = 4;
    v755 = v943;
  }
  else
  {
    if (!v944)
      goto LABEL_1582;
    v756 = 5;
  }
  (*(void (**)(void))(*v755 + 8 * v756))();
LABEL_1582:
  sub_239B3F35C(a10 + 4992, (uint64_t)&__src[1].__pn_.__r_.__value_.__l.__size_);
  if ((_DWORD)v51)
  {
    sub_23941A4FC(&__replacement, "");
    sub_2396FCC6C((uint64_t)&v993, (uint64_t)&__replacement);
    if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
  }
  else
  {
    if (sub_239B20100(v18, (uint64_t *)&__src[0].__pn_.__r_.__value_.__r.__words[2])
      && sub_239B202B0(v18, (uint64_t *)__src)
      && (!*(_BYTE *)(v18 + 4) || sub_239A8E230(v18, 40000)))
    {
      sub_23941A4FC(&__replacement, "");
      sub_2396FCDAC((uint64_t)&v993, (__int128 *)&__replacement, 1);
      if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
      v735 = 0;
      v51 = v716;
      goto LABEL_1594;
    }
    v51 = 4;
  }
  v735 = 1;
LABEL_1594:
  sub_239B3F4D8((uint64_t)__src);
LABEL_1529:
  sub_239B3F5B8((uint64_t)&task_info_outCnt);
  sub_23942FEFC(__str);
  sub_239416834(&__dst);
  if (v735)
    goto LABEL_1180;
LABEL_1530:
  sub_239B141EC(v18);
  if (!v987)
    goto LABEL_1700;
  if (((*((uint64_t (**)(void **))*v987 + 6))(v987) & 1) != 0)
    goto LABEL_1179;
  v736 = v51;
  if (!v789)
  {
    v740 = sub_239B3C83C((uint64_t)v882, v883, 6)[3];
    if ((int)v740 >= 1)
    {
      v929 = 5;
      sub_23941A4FC(__src, "");
      sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, v740);
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    }
    goto LABEL_1600;
  }
  sub_239B3B7B8(&task_info_outCnt);
  if (**(int **)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 56) <= 3
    && *(_BYTE *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 72))
  {
    __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&task_info_outCnt;
    __src[0].__pn_.__r_.__value_.__r.__words[1] = std::chrono::steady_clock::now().__d_.__rep_;
    __src[0].__pn_.__r_.__value_.__r.__words[2] = std::chrono::system_clock::now().__d_.__rep_;
    LODWORD(__src[1].__pn_.__r_.__value_.__l.__data_) = 3;
    __src[1].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)"unknown file";
    LODWORD(__src[1].__pn_.__r_.__value_.__r.__words[2]) = 2403;
    *(_QWORD *)&v1007 = 0;
    *(_QWORD *)&v1006 = "unknown function";
    *((_QWORD *)&v1006 + 1) = 0;
    sub_239B3F73C((uint64_t)__src, "Reconstructing textures - step 1");
    sub_239A47720((uint64_t)__src);
    sub_239A478B4((uint64_t)__src);
  }
  v929 = 5;
  kdebug_trace();
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF5F80;
  *(_QWORD *)&v961 = &__dst;
  v737 = sub_239B3C83C((uint64_t)v882, v883, 6);
  sub_2396FD534(__str, &v993, *((_DWORD *)v737 + 6) - 1);
  LOWORD(task_info_outCnt.__pn_.__r_.__value_.__l.__data_) = 0;
  task_info_outCnt.__pn_.__r_.__value_.__s.__data_[2] = 1;
  *(std::string::size_type *)((char *)task_info_outCnt.__pn_.__r_.__value_.__r.__words + 4) = 0x100010100030D40;
  task_info_outCnt.__pn_.__r_.__value_.__s.__data_[12] = 1;
  LODWORD(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2]) = 20;
  task_info_outCnt.__pn_.__r_.__value_.__s.__data_[20] = 1;
  v811 = 0u;
  v812 = 0u;
  memset(v813, 0, 20);
  *(_QWORD *)&v813[24] = 256000;
  *(_QWORD *)&v813[32] = 0x200000000080;
  *(_QWORD *)&v813[40] = 0x4080000000000000;
  *(_WORD *)&v813[48] = 0;
  memset(&v813[56], 0, 64);
  *(_OWORD *)v814 = 0u;
  *(_QWORD *)v815 = 0;
  sub_239522CD0((uint64_t)&task_info_outCnt, (__int128 *)v894);
  sub_239BC99FC((__int128 *)__src);
  *(_QWORD *)&v813[24] = v1006;
  sub_239B203E0((uint64_t)__src, v18);
  if ((v815[7] & 0x80000000) != 0)
    operator delete(v814[0]);
  *(_OWORD *)v814 = *(_OWORD *)&__src[0].__pn_.__r_.__value_.__l.__data_;
  *(_QWORD *)v815 = *((_QWORD *)&__src[0].__pn_.__r_.__value_.__l + 2);
  v738 = sub_239B106F4(v18, &v813[56]);
  if (v738 && *(_QWORD *)&v813[56])
    v739 = sub_239B3E36C(*(uint64_t *)&v813[56]);
  else
    v739 = 0;
  sub_239B10E98(v18, &v813[72], v739);
  sub_239B12424(v18, &v813[88], v739);
  if ((v738 & sub_239B1FDAC(v18, &v813[104]) & 1) == 0)
  {
    v51 = 3;
    v752 = 1;
    goto LABEL_1599;
  }
  __src[0].__pn_.__r_.__value_.__s.__data_[0] = 0;
  BYTE8(v1023) = 0;
  sub_239B3C90C((uint64_t)v938, (uint64_t)v798);
  v849 = *(_OWORD *)__str;
  v850 = *(_QWORD *)&__str[16];
  if (*(_QWORD *)&__str[16])
  {
    v741 = (unint64_t *)(*(_QWORD *)&__str[16] + 8);
    do
      v742 = __ldxr(v741);
    while (__stxr(v742 + 1, v741));
  }
  v851 = *(_OWORD *)&__str[24];
  if (*(_QWORD *)&__str[32])
  {
    v743 = (unint64_t *)(*(_QWORD *)&__str[32] + 8);
    do
      v744 = __ldxr(v743);
    while (__stxr(v744 + 1, v743));
  }
  v852 = v947;
  if (*((_QWORD *)&v947 + 1))
  {
    v745 = (unint64_t *)(*((_QWORD *)&v947 + 1) + 8);
    do
      v746 = __ldxr(v745);
    while (__stxr(v746 + 1, v745));
  }
  v937 = 0;
  v747 = (char *)operator new(0x40uLL);
  *(_QWORD *)v747 = &off_250ADB9D8;
  *(_OWORD *)(v747 + 8) = v849;
  *((_QWORD *)v747 + 3) = v850;
  v850 = 0;
  *((_QWORD *)&v849 + 1) = 0;
  v748 = v851;
  v851 = 0uLL;
  v749 = v852;
  *((_OWORD *)v747 + 2) = v748;
  *((_OWORD *)v747 + 3) = v749;
  v852 = 0uLL;
  v937 = v747;
  sub_2396FD600((uint64_t)v940, (uint64_t)v938, (uint64_t)v936);
  v51 = sub_239B6F420((uint64_t)&task_info_outCnt, (uint64_t)__src, v940);
  sub_23942FE80(v940);
  v750 = v937;
  if (v937 == v936)
  {
    v751 = 4;
    v750 = v936;
  }
  else
  {
    if (!v937)
      goto LABEL_1562;
    v751 = 5;
  }
  (*(void (**)(void))(*v750 + 8 * v751))();
LABEL_1562:
  sub_23942FEFC(&v849);
  v753 = v939;
  if (v939 == v938)
  {
    v754 = 4;
    v753 = v938;
  }
  else
  {
    if (!v939)
      goto LABEL_1567;
    v754 = 5;
  }
  (*(void (**)(void))(*v753 + 8 * v754))();
LABEL_1567:
  sub_239B3F85C(a10 + 5392, (uint64_t)__src);
  if ((_DWORD)v51)
  {
    sub_23941A4FC(&__replacement, "");
    sub_2396FCC6C((uint64_t)&v993, (uint64_t)&__replacement);
    if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
  }
  else
  {
    sub_239B206CC(v18, (std::string *)v814);
    if (!*(_BYTE *)(v18 + 4) || sub_239A8E230(v18, 50000))
    {
      sub_23941A4FC(&__replacement, "");
      sub_2396FCDAC((uint64_t)&v993, (__int128 *)&__replacement, 1);
      if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
      v752 = 0;
      v51 = v736;
      goto LABEL_1597;
    }
    v51 = 4;
  }
  v752 = 1;
LABEL_1597:
  if (BYTE8(v1023))
    sub_239B3F8AC((uint64_t)__src);
LABEL_1599:
  sub_239B3F948((uint64_t)&task_info_outCnt);
  sub_23942FEFC(__str);
  sub_239416834(&__dst);
  if (v752)
    goto LABEL_1180;
LABEL_1600:
  sub_239B20380(v18);
  sub_239B123F0(*(unsigned __int8 *)(v18 + 4), *(_QWORD *)(v18 + 1920));
  sub_239B1351C(*(unsigned __int8 *)(v18 + 4), *(_QWORD *)(v18 + 1936));
  sub_239B075B4(v18);
  sub_239B1016C(v18);
  if (!v987)
    goto LABEL_1700;
  if (((*((uint64_t (**)(void **))*v987 + 6))(v987) & 1) != 0)
    goto LABEL_1179;
  if (!v785)
  {
    v758 = sub_239B3C83C((uint64_t)v882, v883, 7)[3];
    if ((int)v758 >= 1)
    {
      v929 = 6;
      sub_23941A4FC(__src, "");
      sub_2396FCDAC((uint64_t)&v993, (__int128 *)__src, v758);
      if (SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
    }
LABEL_1670:
    if (v987)
    {
      v51 = (*((uint64_t (**)(void **))*v987 + 6))(v987);
      goto LABEL_1180;
    }
LABEL_1700:
    sub_2394172E0();
  }
  sub_239B3B7B8(&task_info_outCnt);
  if (**(int **)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 56) <= 3
    && *(_BYTE *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 72))
  {
    __src[0].__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&task_info_outCnt;
    __src[0].__pn_.__r_.__value_.__r.__words[1] = std::chrono::steady_clock::now().__d_.__rep_;
    __src[0].__pn_.__r_.__value_.__r.__words[2] = std::chrono::system_clock::now().__d_.__rep_;
    LODWORD(__src[1].__pn_.__r_.__value_.__l.__data_) = 3;
    __src[1].__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)"unknown file";
    LODWORD(__src[1].__pn_.__r_.__value_.__r.__words[2]) = 2495;
    *(_QWORD *)&v1007 = 0;
    *(_QWORD *)&v1006 = "unknown function";
    *((_QWORD *)&v1006 + 1) = 0;
    sub_239B3F73C((uint64_t)__src, "Reconstructing textures - step 2");
    sub_239A47720((uint64_t)__src);
    sub_239A478B4((uint64_t)__src);
  }
  v929 = 6;
  kdebug_trace();
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF5FC8;
  *(_QWORD *)&v961 = &__dst;
  v757 = sub_239B3C83C((uint64_t)v882, v883, 7);
  sub_2396FD534(__str, &v993, *((_DWORD *)v757 + 6) - 1);
  sub_239586CA4((uint64_t)&task_info_outCnt);
  BYTE8(v846) = 0;
  v813[88] = 0;
  *(_OWORD *)v847 = 0u;
  memset(v848, 0, 56);
  sub_239B3FA9C((uint64_t)&task_info_outCnt, v885);
  if (!v927)
    sub_2394875CC();
  std::string::operator=((std::string *)((char *)v848 + 8), &pn);
  sub_23941A4FC(__src, "baked_mesh_");
  sub_239926F04((const std::__fs::filesystem::path *)((char *)v848 + 8), (uint64_t)&v930);
  if (SHIBYTE(v930.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&__to, v930.__r_.__value_.__l.__data_, v930.__r_.__value_.__l.__size_);
  else
    __to.__pn_ = v930;
  sub_239423914(&__to, 0, 8uLL, &__replacement);
  if ((__replacement.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v759 = &__replacement;
  else
    v759 = (std::__fs::filesystem::path *)__replacement.__pn_.__r_.__value_.__r.__words[0];
  if ((__replacement.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v760 = HIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]);
  else
    v760 = __replacement.__pn_.__r_.__value_.__l.__size_;
  v761 = std::string::append(&__src[0].__pn_, (const std::string::value_type *)v759, v760);
  v762 = v761->__r_.__value_.__r.__words[0];
  *(_QWORD *)v954 = v761->__r_.__value_.__l.__size_;
  *(_QWORD *)&v954[7] = *(std::string::size_type *)((char *)&v761->__r_.__value_.__r.__words[1] + 7);
  v763 = HIBYTE(v761->__r_.__value_.__r.__words[2]);
  v761->__r_.__value_.__l.__size_ = 0;
  v761->__r_.__value_.__r.__words[2] = 0;
  v761->__r_.__value_.__r.__words[0] = 0;
  if (SBYTE7(v848[3]) < 0)
    operator delete(*(void **)&v848[2]);
  *(_QWORD *)&v848[2] = v762;
  *(_QWORD *)((char *)&v848[2] + 15) = *(_QWORD *)&v954[7];
  *((_QWORD *)&v848[2] + 1) = *(_QWORD *)v954;
  BYTE7(v848[3]) = v763;
  if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__to.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_1623:
      if ((SHIBYTE(v930.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_1624;
LABEL_1642:
      operator delete(v930.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_1625;
      goto LABEL_1643;
    }
  }
  else if ((SHIBYTE(__to.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_1623;
  }
  operator delete(__to.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v930.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_1642;
LABEL_1624:
  if ((SHIBYTE(__src[0].__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_1625;
LABEL_1643:
  operator delete(__src[0].__pn_.__r_.__value_.__l.__data_);
LABEL_1625:
  sub_239B204F0((char *)__src, v18);
  if (!__src[1].__pn_.__r_.__value_.__s.__data_[0])
    sub_2394875CC();
  if (SBYTE7(v848[0]) < 0)
    operator delete(v847[0]);
  *(_OWORD *)v847 = *(_OWORD *)&__src[0].__pn_.__r_.__value_.__l.__data_;
  *(_QWORD *)&v848[0] = *((_QWORD *)&__src[0].__pn_.__r_.__value_.__l + 2);
  v1039 = 0;
  memset(__src, 0, sizeof(__src));
  v1006 = 0u;
  v1007 = 0u;
  *(_OWORD *)v1008 = 0u;
  v1009 = 0u;
  v1010 = 0u;
  v1011 = 0u;
  v1012 = 0u;
  v1013 = 0u;
  v1014 = 0u;
  LOBYTE(v1015) = 0;
  sub_239B3C90C((uint64_t)v933, (uint64_t)v798);
  v806 = *(_OWORD *)__str;
  v807 = *(_QWORD *)&__str[16];
  if (*(_QWORD *)&__str[16])
  {
    v764 = (unint64_t *)(*(_QWORD *)&__str[16] + 8);
    do
      v765 = __ldxr(v764);
    while (__stxr(v765 + 1, v764));
  }
  v808 = *(_OWORD *)&__str[24];
  if (*(_QWORD *)&__str[32])
  {
    v766 = (unint64_t *)(*(_QWORD *)&__str[32] + 8);
    do
      v767 = __ldxr(v766);
    while (__stxr(v767 + 1, v766));
  }
  v809 = v947;
  if (*((_QWORD *)&v947 + 1))
  {
    v768 = (unint64_t *)(*((_QWORD *)&v947 + 1) + 8);
    do
      v769 = __ldxr(v768);
    while (__stxr(v769 + 1, v768));
  }
  v932 = 0;
  v770 = (char *)operator new(0x40uLL);
  *(_QWORD *)v770 = &off_250ADB9D8;
  *(_OWORD *)(v770 + 8) = v806;
  *((_QWORD *)v770 + 3) = v807;
  *((_QWORD *)&v806 + 1) = 0;
  v807 = 0;
  v771 = v808;
  v808 = 0uLL;
  v772 = v809;
  *((_OWORD *)v770 + 2) = v771;
  *((_OWORD *)v770 + 3) = v772;
  v809 = 0uLL;
  v932 = v770;
  sub_2396FD600((uint64_t)v935, (uint64_t)v933, (uint64_t)v931);
  v773 = sub_239B433AC((uint64_t)&task_info_outCnt, (uint64_t)__src, v935);
  sub_23942FE80(v935);
  v774 = v932;
  if (v932 == v931)
  {
    v775 = 4;
    v774 = v931;
  }
  else
  {
    if (!v932)
      goto LABEL_1646;
    v775 = 5;
  }
  (*(void (**)(void))(*v774 + 8 * v775))();
LABEL_1646:
  sub_23942FEFC(&v806);
  v776 = v934;
  if (v934 == v933)
  {
    v777 = 4;
    v776 = v933;
  }
  else
  {
    if (!v934)
      goto LABEL_1651;
    v777 = 5;
  }
  (*(void (**)(void))(*v776 + 8 * v777))();
LABEL_1651:
  sub_239B3FB34(a10 + 5760, (uint64_t)&v1015);
  if ((_DWORD)v773)
  {
    sub_23941A4FC(&__replacement, "");
    sub_2396FCC6C((uint64_t)&v993, (uint64_t)&__replacement);
    if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
    v51 = v773;
  }
  else
  {
    if (*(_DWORD *)(v17 + 2104) == 1)
    {
      sub_2396F295C((uint64_t *)(v18 + 872), v18 + 8, (uint64_t)&__replacement);
      v779 = __src[0].__pn_.__r_.__value_.__l.__size_;
      for (k = (std::__fs::filesystem::path *)__src[0].__pn_.__r_.__value_.__r.__words[0];
            k != (std::__fs::filesystem::path *)v779;
            ++k)
      {
        sub_239A4D818((uint64_t)&v930, k);
        sub_239498A04((std::__fs::filesystem::path *)&v930, (uint64_t)&__replacement, &__to);
        if (SHIBYTE(v930.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v930.__r_.__value_.__l.__data_);
        std::__fs::filesystem::__copy(k, &__to, update_existing, 0);
        if (SHIBYTE(__to.__pn_.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__to.__pn_.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
    }
    sub_239A4DD4C(a10 + 64, (std::string **)__src);
    sub_239A4DD4C(a10 + 96, (std::string **)&v1007 + 1);
    sub_239A4D8DC((std::string *)a10, &__src[1].__pn_);
    sub_239A4D8DC((std::string *)(a10 + 128), (const std::string *)&v1006);
    if (v893)
    {
      sub_239A4DD4C(a10 + 160, (std::string **)&v1009);
      sub_239A4DD4C(a10 + 192, (std::string **)&v1013 + 1);
      sub_239A4D8DC((std::string *)(a10 + 224), (const std::string *)&v1012);
    }
    sub_23941A4FC(&__replacement, "");
    sub_2396FCDAC((uint64_t)&v993, (__int128 *)&__replacement, 1);
    if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
  }
  sub_239B3FBEC((uint64_t)__src);
  sub_239B3FE0C((uint64_t)&task_info_outCnt);
  sub_23942FEFC(__str);
  sub_239416834(&__dst);
  if (!(_DWORD)v773)
    goto LABEL_1670;
LABEL_1180:
  v584 = v987;
  if (v987 == v985)
  {
    v585 = 4;
    v584 = v985;
  }
  else
  {
    if (!v987)
      goto LABEL_1185;
    v585 = 5;
  }
  (*((void (**)(void))*v584 + v585))();
LABEL_1185:
  sub_2396FCD14((uint64_t)&v993);
  v586 = v1003;
  if (v1003 == &v1002)
  {
    v587 = 4;
    v586 = &v1002;
  }
  else
  {
    if (!v1003)
      goto LABEL_1190;
    v587 = 5;
  }
  (*(void (**)(void))(v586->__r_.__value_.__r.__words[0] + 8 * v587))();
LABEL_1190:
  v588 = v884;
  if (v884)
  {
    do
    {
      v589 = (_QWORD *)*v588;
      operator delete(v588);
      v588 = v589;
    }
    while (v589);
  }
  v590 = v882;
  v882 = 0;
  if (v590)
    operator delete(v590);
  if (v892 < 0)
  {
    operator delete(v891);
    if ((v890 & 0x80000000) == 0)
    {
LABEL_1196:
      v591 = v887;
      if (!v887)
        goto LABEL_1198;
      goto LABEL_1197;
    }
  }
  else if ((v890 & 0x80000000) == 0)
  {
    goto LABEL_1196;
  }
  operator delete(v889);
  v591 = v887;
  if (v887)
  {
LABEL_1197:
    v888 = v591;
    operator delete(v591);
  }
LABEL_1198:
  sub_239586EB4((uint64_t)&v886);
  if (v897)
  {
    v898 = v897;
    operator delete(v897);
  }
  if ((SHIBYTE(v896) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v911) & 0x80000000) == 0)
      goto LABEL_1202;
LABEL_1223:
    operator delete((void *)v910);
    v592 = (char *)v907;
    if (!v907)
      goto LABEL_1204;
    goto LABEL_1203;
  }
  operator delete((void *)v895);
  if (SHIBYTE(v911) < 0)
    goto LABEL_1223;
LABEL_1202:
  v592 = (char *)v907;
  if (v907)
  {
LABEL_1203:
    v908 = v592;
    operator delete(v592);
  }
LABEL_1204:
  if (v925 < 0)
    operator delete(v924);
  if (v920)
  {
    v921 = v920;
    operator delete(v920);
  }
  if (v919 < 0)
    operator delete(v918);
LABEL_1210:
  if (v927 && SHIBYTE(pn.__r_.__value_.__r.__words[2]) < 0)
    operator delete(pn.__r_.__value_.__l.__data_);
  sub_2396FCD14((uint64_t)v1047);
  v593 = (std::string::__raw *)v1049;
  if (v1049 == (std::string *)v1048)
  {
    v594 = 4;
    v593 = (std::string::__raw *)v1048;
    goto LABEL_1217;
  }
  if (v1049)
  {
    v594 = 5;
LABEL_1217:
    (*(void (**)(void))(v593->__words[0] + 8 * v594))();
  }
  return v51;
}

void sub_239B3A158(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

std::string *sub_239B3B6FC(std::string *a1)
{
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  sub_23948900C(a1, (std::string *)"point_cloud.ply", (std::string *)"");
  return a1;
}

void sub_239B3B734(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B3B750(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (*(_BYTE *)(a1 + 1760))
    sub_239A615DC(a1 + 16);
  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B3B7B8(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25693D9A0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25693D9A0))
  {
    sub_2399FF268(&v5);
    sub_23941A4FC(__p, "cv3dapi.pg");
    sub_239A03BC8(&v5, (uint64_t)__p, &qword_25693D998);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_25693D9A0);
  }
  *a1 = qword_25693D998;
}

void sub_239B3B854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25693D9A0);
  _Unwind_Resume(a1);
}

uint64_t sub_239B3B888(uint64_t a1, char *__s)
{
  size_t v4;
  uint64_t v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  if (!*(_QWORD *)(a1 + 56))
  {
    v6 = operator new();
    sub_2394988CC(v6);
    v7 = (_QWORD *)operator new();
    *v7 = &unk_250AF1978;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = v6;
    v8 = *(std::__shared_weak_count **)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v7;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  v4 = strlen(__s);
  sub_239458500((_QWORD *)(*(_QWORD *)(a1 + 56) + 16), (uint64_t)__s, v4);
  return a1;
}

void sub_239B3B968(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239B3B984(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

uint64_t sub_239B3B9A8(uint64_t result)
{
  _QWORD v1[3];
  char v2;

  if (*(_QWORD *)(result + 200))
  {
    v2 = 0;
    v1[0] = sub_239B03660;
    v1[1] = 0;
    v1[2] = result;
    return sub_239B0397C((uint64_t)v1, (uint64_t)&v2);
  }
  return result;
}

uint64_t sub_239B3B9E8(uint64_t result)
{
  _QWORD v1[3];
  char v2;

  if (*(_QWORD *)(result + 200))
  {
    v2 = 0;
    v1[0] = sub_239B04EA4;
    v1[1] = 0;
    v1[2] = result;
    return sub_239B051C0((uint64_t)v1, (uint64_t)&v2);
  }
  return result;
}

uint64_t sub_239B3BA28(uint64_t *a1, pthread_mutex_t *a2)
{
  pthread_mutex_t *v4;
  uint64_t *sig;
  _QWORD *v6;

  v4 = a2 + 5;
  sub_2397A1694(a2 + 5);
  sig = (uint64_t *)a2[10].__sig;
  if (sig)
  {
    v6 = operator new(0x1E0uLL);
    v6[1] = 0;
    v6[2] = 0;
    *v6 = &off_250B01540;
    *a1 = sub_239A4E3D8((uint64_t)(v6 + 3), sig);
    a1[1] = (uint64_t)v6;
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
  }
  return sub_2397A16B4(v4);
}

void sub_239B3BA9C(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

char **sub_239B3BACC(char **a1, char **a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  __int16 v15;
  int64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  __int16 v20;
  __int16 v21;
  char *v22;
  __int16 v23;
  uint64_t *v24;
  char *v25;
  char *i;
  uint64_t v27;
  __int128 v28;
  __int16 v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  char *v36;
  char *v37;
  char *j;
  char *v39;
  __int128 v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _OWORD *v50;
  __int128 *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  void *v68;
  char *v69;
  _QWORD *v70;
  _QWORD *v71;
  void *v72;
  char *v73;
  _QWORD *v75;

  if (a1 == a2)
    goto LABEL_91;
  v5 = *a2;
  v4 = a2[1];
  v6 = v4 - *a2;
  v7 = v6 >> 6;
  v8 = (uint64_t)a1[2];
  v9 = *a1;
  if (v6 >> 6 <= (unint64_t)((v8 - (uint64_t)*a1) >> 6))
  {
    v17 = a1[1];
    v18 = (v17 - v9) >> 6;
    if (v18 < v7)
    {
      v19 = &v5[64 * v18];
      if (v17 != v9)
      {
        do
        {
          *(_DWORD *)v9 = *(_DWORD *)v5;
          *(_OWORD *)(v9 + 8) = *(_OWORD *)(v5 + 8);
          *(_OWORD *)(v9 + 24) = *(_OWORD *)(v5 + 24);
          *(_OWORD *)(v9 + 40) = *(_OWORD *)(v5 + 40);
          if (v9 != v5)
          {
            v20 = *((_WORD *)v5 + 28);
            v9[58] = v5[58];
            *((_WORD *)v9 + 28) = v20;
          }
          *(_WORD *)(v9 + 59) = *(_WORD *)(v5 + 59);
          v5 += 64;
          v9 += 64;
        }
        while (v5 != v19);
        v9 = a1[1];
      }
      v22 = v9;
      if (v19 != v4)
      {
        v22 = v9;
        do
        {
          *(_DWORD *)v22 = *(_DWORD *)v19;
          *(_OWORD *)(v22 + 8) = *(_OWORD *)(v19 + 8);
          *(_OWORD *)(v22 + 24) = *(_OWORD *)(v19 + 24);
          *(_OWORD *)(v22 + 40) = *(_OWORD *)(v19 + 40);
          v23 = *((_WORD *)v19 + 28);
          v22[58] = v19[58];
          *((_WORD *)v22 + 28) = v23;
          *(_WORD *)(v22 + 59) = *(_WORD *)(v19 + 59);
          v22 += 64;
          v19 += 64;
        }
        while (v19 != v4);
      }
      v16 = v22 - v9;
      goto LABEL_31;
    }
    v14 = *a1;
    while (v5 != v4)
    {
      *(_DWORD *)v14 = *(_DWORD *)v5;
      *(_OWORD *)(v14 + 8) = *(_OWORD *)(v5 + 8);
      *(_OWORD *)(v14 + 24) = *(_OWORD *)(v5 + 24);
      *(_OWORD *)(v14 + 40) = *(_OWORD *)(v5 + 40);
      if (v14 != v5)
      {
        v21 = *((_WORD *)v5 + 28);
        v14[58] = v5[58];
        *((_WORD *)v14 + 28) = v21;
      }
      *(_WORD *)(v14 + 59) = *(_WORD *)(v5 + 59);
      v14 += 64;
      v5 += 64;
    }
  }
  else
  {
    if (v9)
    {
      a1[1] = v9;
      operator delete(v9);
      v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (v6 < 0)
      goto LABEL_92;
    v10 = v8 >> 5;
    if (v8 >> 5 <= v7)
      v10 = v6 >> 6;
    v11 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFC0;
    v12 = 0x3FFFFFFFFFFFFFFLL;
    if (!v11)
      v12 = v10;
    if (v12 >> 58)
LABEL_92:
      sub_2394189F8();
    v13 = v12 << 6;
    v9 = (char *)operator new(v12 << 6);
    *a1 = v9;
    a1[1] = v9;
    a1[2] = &v9[v13];
    v14 = v9;
    if (v5 != v4)
    {
      v14 = v9;
      do
      {
        *(_DWORD *)v14 = *(_DWORD *)v5;
        *(_OWORD *)(v14 + 8) = *(_OWORD *)(v5 + 8);
        *(_OWORD *)(v14 + 24) = *(_OWORD *)(v5 + 24);
        *(_OWORD *)(v14 + 40) = *(_OWORD *)(v5 + 40);
        v15 = *((_WORD *)v5 + 28);
        v14[58] = v5[58];
        *((_WORD *)v14 + 28) = v15;
        *(_WORD *)(v14 + 59) = *(_WORD *)(v5 + 59);
        v14 += 64;
        v5 += 64;
      }
      while (v5 != v4);
    }
  }
  v16 = v14 - v9;
LABEL_31:
  a1[1] = &v9[v16];
  a1[3] = a2[3];
  *((_DWORD *)a1 + 16) = *((_DWORD *)a2 + 16);
  v24 = (uint64_t *)a2[6];
  v25 = a1[5];
  if (v25)
  {
    for (i = 0; i != v25; ++i)
      *(_QWORD *)&a1[4][8 * (_QWORD)i] = 0;
    v27 = (uint64_t)a1[6];
    a1[6] = 0;
    a1[7] = 0;
    if (v27)
    {
      do
      {
        if (!v24)
        {
          do
          {
            v65 = *(_QWORD *)v27;
            v66 = *(_QWORD **)(v27 + 128);
            if (v66)
            {
              do
              {
                v67 = (_QWORD *)*v66;
                operator delete(v66);
                v66 = v67;
              }
              while (v67);
            }
            v68 = *(void **)(v27 + 112);
            *(_QWORD *)(v27 + 112) = 0;
            if (v68)
              operator delete(v68);
            if (*(_BYTE *)(v27 + 104))
              sub_239916980(v27 + 72);
            operator delete((void *)v27);
            v27 = v65;
          }
          while (v65);
          goto LABEL_53;
        }
        *(_DWORD *)(v27 + 16) = *((_DWORD *)v24 + 4);
        v28 = *(_OWORD *)(v24 + 3);
        *(_QWORD *)(v27 + 40) = v24[5];
        *(_OWORD *)(v27 + 24) = v28;
        if ((uint64_t *)v27 != v24)
        {
          v29 = *((_WORD *)v24 + 24);
          *(_BYTE *)(v27 + 50) = *((_BYTE *)v24 + 50);
          *(_WORD *)(v27 + 48) = v29;
        }
        *(_WORD *)(v27 + 51) = *(_WORD *)((char *)v24 + 51);
        if (*(unsigned __int8 *)(v27 + 104) == *((unsigned __int8 *)v24 + 104))
        {
          if (*(_BYTE *)(v27 + 104))
            sub_2395EAD60(v27 + 56, (unsigned int *)v24 + 14);
          if ((uint64_t *)v27 == v24)
            goto LABEL_48;
        }
        else
        {
          if (*(_BYTE *)(v27 + 104))
          {
            sub_239916980(v27 + 72);
            v30 = 0;
          }
          else
          {
            *(_OWORD *)(v27 + 56) = *(_OWORD *)(v24 + 7);
            sub_23948A5BC((_QWORD *)(v27 + 72), (uint64_t)(v24 + 9));
            v30 = 1;
          }
          *(_BYTE *)(v27 + 104) = v30;
          if ((uint64_t *)v27 == v24)
            goto LABEL_48;
        }
        *(_DWORD *)(v27 + 144) = *((_DWORD *)v24 + 36);
        sub_2395E9A40((_QWORD *)(v27 + 112), (uint64_t *)v24[16], 0);
LABEL_48:
        v31 = *(_QWORD *)v27;
        sub_239A539EC((uint64_t)(a1 + 4), v27);
        v24 = (uint64_t *)*v24;
        v27 = v31;
      }
      while (v31);
    }
  }
  for (; v24; v24 = (uint64_t *)*v24)
  {
    v32 = (char *)operator new(0x98uLL);
    v33 = (uint64_t)v32;
    *(_QWORD *)v32 = 0;
    *((_QWORD *)v32 + 1) = 0;
    *((_DWORD *)v32 + 4) = *((_DWORD *)v24 + 4);
    v34 = *(_OWORD *)(v24 + 3);
    *((_QWORD *)v32 + 5) = v24[5];
    *(_OWORD *)(v32 + 24) = v34;
    v35 = *((_BYTE *)v24 + 50);
    *((_WORD *)v32 + 24) = *((_WORD *)v24 + 24);
    v32[50] = v35;
    *(_WORD *)(v32 + 51) = *(_WORD *)((char *)v24 + 51);
    v32[56] = 0;
    v32[104] = 0;
    if (*((_BYTE *)v24 + 104))
    {
      *(_OWORD *)(v32 + 56) = *(_OWORD *)(v24 + 7);
      sub_23948A5BC((_QWORD *)v32 + 9, (uint64_t)(v24 + 9));
      *(_BYTE *)(v33 + 104) = 1;
    }
    sub_239A50368(v33 + 112, (uint64_t)(v24 + 14));
    *(_QWORD *)(v33 + 8) = *(unsigned int *)(v33 + 16);
    sub_239A539EC((uint64_t)(a1 + 4), v33);
  }
LABEL_53:
  *((_DWORD *)a1 + 26) = *((_DWORD *)a2 + 26);
  v36 = a2[11];
  v37 = a1[10];
  if (!v37)
    goto LABEL_88;
  for (j = 0; j != v37; ++j)
    *(_QWORD *)&a1[9][8 * (_QWORD)j] = 0;
  v39 = a1[11];
  a1[11] = 0;
  a1[12] = 0;
  if (!v39)
  {
LABEL_88:
    while (v36)
    {
      v75 = operator new(0x1D8uLL);
      *v75 = 0;
      v75[1] = 0;
      *((_DWORD *)v75 + 4) = *((_DWORD *)v36 + 4);
      sub_2395F81B8((uint64_t)(v75 + 3), (uint64_t)(v36 + 24));
      sub_239A50368((uint64_t)(v75 + 54), (uint64_t)(v36 + 432));
      v75[1] = *((unsigned int *)v75 + 4);
      sub_239A539EC((uint64_t)(a1 + 9), (uint64_t)v75);
      v36 = *(char **)v36;
    }
    goto LABEL_90;
  }
  while (v36)
  {
    *((_DWORD *)v39 + 4) = *((_DWORD *)v36 + 4);
    v40 = *(_OWORD *)(v36 + 24);
    *(_OWORD *)(v39 + 40) = *(_OWORD *)(v36 + 40);
    *(_OWORD *)(v39 + 24) = v40;
    v39[56] = v36[56];
    if (v39 != v36)
    {
      v41 = *((unsigned int *)v36 + 20);
      sub_23945215C((uint64_t)(v39 + 64), v41);
      if ((_DWORD)v41)
        memcpy(*((void **)v39 + 8), *((const void **)v36 + 8), 8 * v41);
      *((_DWORD *)v39 + 20) = *((_DWORD *)v36 + 20);
      v42 = *(_OWORD *)(v36 + 88);
      v43 = *(_OWORD *)(v36 + 104);
      v44 = *(_OWORD *)(v36 + 120);
      *(_OWORD *)(v39 + 136) = *(_OWORD *)(v36 + 136);
      *(_OWORD *)(v39 + 120) = v44;
      *(_OWORD *)(v39 + 104) = v43;
      *(_OWORD *)(v39 + 88) = v42;
      v45 = *(_OWORD *)(v36 + 152);
      v46 = *(_OWORD *)(v36 + 168);
      v47 = *(_OWORD *)(v36 + 184);
      *(_OWORD *)(v39 + 200) = *(_OWORD *)(v36 + 200);
      *(_OWORD *)(v39 + 184) = v47;
      *(_OWORD *)(v39 + 168) = v46;
      *(_OWORD *)(v39 + 152) = v45;
      *((_QWORD *)v39 + 27) = *((_QWORD *)v36 + 27);
      *((_QWORD *)v39 + 28) = *((_QWORD *)v36 + 28);
    }
    v48 = *(_OWORD *)(v36 + 232);
    *((_QWORD *)v39 + 31) = *((_QWORD *)v36 + 31);
    *(_OWORD *)(v39 + 232) = v48;
    v49 = *((_QWORD *)v36 + 32);
    *((_WORD *)v39 + 132) = *((_WORD *)v36 + 132);
    *((_QWORD *)v39 + 32) = v49;
    std::string::operator=((std::string *)(v39 + 272), (const std::string *)(v36 + 272));
    v50 = v39 + 296;
    v51 = (__int128 *)(v36 + 296);
    if (v39[424] == v36[424])
    {
      if (v39[424])
      {
        v52 = *v51;
        v53 = *(_OWORD *)(v36 + 312);
        v54 = *(_OWORD *)(v36 + 344);
        *(_OWORD *)(v39 + 328) = *(_OWORD *)(v36 + 328);
        *(_OWORD *)(v39 + 344) = v54;
        *v50 = v52;
        *(_OWORD *)(v39 + 312) = v53;
        v55 = *(_OWORD *)(v36 + 360);
        v56 = *(_OWORD *)(v36 + 376);
        v57 = *(_OWORD *)(v36 + 408);
        *(_OWORD *)(v39 + 392) = *(_OWORD *)(v36 + 392);
        *(_OWORD *)(v39 + 408) = v57;
        *(_OWORD *)(v39 + 360) = v55;
        *(_OWORD *)(v39 + 376) = v56;
        if (v39 == v36)
          goto LABEL_70;
        goto LABEL_69;
      }
    }
    else
    {
      if (!v39[424])
      {
        v59 = *v51;
        v60 = *(_OWORD *)(v36 + 312);
        v61 = *(_OWORD *)(v36 + 344);
        *(_OWORD *)(v39 + 328) = *(_OWORD *)(v36 + 328);
        *(_OWORD *)(v39 + 344) = v61;
        *v50 = v59;
        *(_OWORD *)(v39 + 312) = v60;
        v62 = *(_OWORD *)(v36 + 360);
        v63 = *(_OWORD *)(v36 + 376);
        v64 = *(_OWORD *)(v36 + 408);
        *(_OWORD *)(v39 + 392) = *(_OWORD *)(v36 + 392);
        *(_OWORD *)(v39 + 408) = v64;
        *(_OWORD *)(v39 + 360) = v62;
        *(_OWORD *)(v39 + 376) = v63;
        v39[424] = 1;
        if (v39 == v36)
          goto LABEL_70;
LABEL_69:
        *((_DWORD *)v39 + 116) = *((_DWORD *)v36 + 116);
        sub_2395E9A40((_QWORD *)v39 + 54, *((uint64_t **)v36 + 56), 0);
        goto LABEL_70;
      }
      v39[424] = 0;
    }
    if (v39 != v36)
      goto LABEL_69;
LABEL_70:
    v58 = *(char **)v39;
    sub_239A539EC((uint64_t)(a1 + 9), (uint64_t)v39);
    v36 = *(char **)v36;
    v39 = v58;
    if (!v58)
      goto LABEL_88;
  }
  do
  {
    v69 = *(char **)v39;
    v70 = (_QWORD *)*((_QWORD *)v39 + 56);
    if (v70)
    {
      do
      {
        v71 = (_QWORD *)*v70;
        operator delete(v70);
        v70 = v71;
      }
      while (v71);
    }
    v72 = (void *)*((_QWORD *)v39 + 54);
    *((_QWORD *)v39 + 54) = 0;
    if (v72)
      operator delete(v72);
    if (v39[295] < 0)
      operator delete(*((void **)v39 + 34));
    free(*((void **)v39 + 8));
    operator delete(v39);
    v39 = v69;
  }
  while (v69);
LABEL_90:
  v73 = a2[14];
  *((_DWORD *)a1 + 30) = *((_DWORD *)a2 + 30);
  a1[14] = v73;
  sub_2395DC70C(a1 + 16, a2[16], a2[17], (a2[17] - a2[16]) >> 7);
  *((_DWORD *)a1 + 46) = *((_DWORD *)a2 + 46);
  sub_2395E7688(a1 + 19, (uint64_t *)a2[21], 0);
  *((_DWORD *)a1 + 56) = *((_DWORD *)a2 + 56);
  sub_2395E7954(a1 + 24, (uint64_t *)a2[26], 0);
LABEL_91:
  sub_239AA61BC((uint64_t)(a1 + 29), (uint64_t *)a2 + 29);
  *((_DWORD *)a1 + 112) = *((_DWORD *)a2 + 112);
  return a1;
}

void sub_239B3C324(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395E99BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239B3C358(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  if (v1)
  {
    v2 = *(_QWORD **)(v1 + 448);
    if (v2)
    {
      do
      {
        v3 = (_QWORD *)*v2;
        operator delete(v2);
        v2 = v3;
      }
      while (v3);
    }
    v4 = *(void **)(v1 + 432);
    *(_QWORD *)(v1 + 432) = 0;
    if (v4)
      operator delete(v4);
    if (*(char *)(v1 + 295) < 0)
      operator delete(*(void **)(v1 + 272));
    free(*(void **)(v1 + 64));
    JUMPOUT(0x239B3C400);
  }
  _Unwind_Resume(a1);
}

void sub_239B3C3A8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 104))
    JUMPOUT(0x239B3C3B8);
  JUMPOUT(0x239B3C3FCLL);
}

void sub_239B3C3C0()
{
  uint64_t v0;
  void **v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(v0 + 128);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *v1;
  *v1 = 0;
  if (v4)
    operator delete(v4);
  if (*(_BYTE *)(v0 + 104))
    JUMPOUT(0x239B3C3F8);
  JUMPOUT(0x239B3C3FCLL);
}

void sub_239B3C40C()
{
  __cxa_end_catch();
  JUMPOUT(0x239B3C414);
}

double sub_239B3C420(_QWORD *a1)
{
  char *v2;
  double result;

  v2 = (char *)operator new(0x3C0uLL);
  *((_QWORD *)v2 + 1) = 0;
  *((_QWORD *)v2 + 2) = 0;
  *(_QWORD *)v2 = &off_250B01B38;
  bzero(v2 + 24, 0x3A8uLL);
  *((_DWORD *)v2 + 22) = 1065353216;
  result = 0.0;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_DWORD *)v2 + 32) = 1065353216;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 184) = 0u;
  *((_QWORD *)v2 + 25) = 0;
  *((_DWORD *)v2 + 52) = 1065353216;
  *(_OWORD *)(v2 + 216) = 0u;
  *(_OWORD *)(v2 + 232) = 0u;
  *((_DWORD *)v2 + 62) = 1065353216;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + 19) = 0u;
  *((_QWORD *)v2 + 40) = 0;
  *((_QWORD *)v2 + 41) = 0x3FF0000000000000;
  *((_QWORD *)v2 + 46) = 0;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  *((_DWORD *)v2 + 118) = -1;
  *((_OWORD *)v2 + 30) = 0u;
  *((_OWORD *)v2 + 31) = 0u;
  *((_DWORD *)v2 + 128) = 1065353216;
  *(_OWORD *)(v2 + 520) = 0u;
  *(_OWORD *)(v2 + 536) = 0u;
  *((_DWORD *)v2 + 138) = 1065353216;
  *((_OWORD *)v2 + 35) = 0u;
  *((_OWORD *)v2 + 36) = 0u;
  *((_OWORD *)v2 + 37) = 0u;
  *((_OWORD *)v2 + 38) = 0u;
  *((_OWORD *)v2 + 39) = 0u;
  *((_OWORD *)v2 + 40) = 0u;
  *((_OWORD *)v2 + 41) = 0u;
  *((_OWORD *)v2 + 42) = 0u;
  *((_OWORD *)v2 + 43) = 0u;
  *((_OWORD *)v2 + 44) = 0u;
  *((_OWORD *)v2 + 45) = 0u;
  *((_OWORD *)v2 + 46) = 0u;
  *((_OWORD *)v2 + 47) = 0u;
  *((_OWORD *)v2 + 48) = 0u;
  *((_OWORD *)v2 + 49) = 0u;
  *((_OWORD *)v2 + 50) = 0u;
  *((_OWORD *)v2 + 51) = 0u;
  *((_OWORD *)v2 + 52) = 0u;
  *((_DWORD *)v2 + 212) = 1065353216;
  *((_QWORD *)v2 + 107) = 0;
  *((_QWORD *)v2 + 109) = 0;
  *((_QWORD *)v2 + 108) = 0;
  v2[880] = 0;
  *a1 = v2 + 24;
  a1[1] = v2;
  return result;
}

char *sub_239B3C510(int64x2_t *a1, _QWORD *a2, unint64_t a3)
{
  char *result;
  char *v7;
  int64x2_t v8;
  int64x2_t v9;
  char *v10;
  uint64_t v11;
  int64x2_t *v12;

  v9 = 0uLL;
  v10 = 0;
  if (a3)
  {
    if (a3 >> 61)
      sub_2394189F8();
    result = (char *)operator new(8 * a3);
    v7 = &result[8 * a3];
    v9.i64[0] = (uint64_t)result;
    v9.i64[1] = (uint64_t)result;
    v10 = v7;
  }
  else
  {
    v7 = 0;
    result = 0;
  }
  v12 = &v9;
  if (a2)
  {
    do
    {
      v11 = a2[2];
      result = (char *)sub_2394340F0((uint64_t *)&v12, &v11);
      a2 = (_QWORD *)*a2;
    }
    while (a2);
    v8 = v9;
    v7 = v10;
  }
  else
  {
    v8 = vdupq_n_s64((unint64_t)result);
  }
  *a1 = v8;
  a1[1].i64[0] = (uint64_t)v7;
  return result;
}

void sub_239B3C5C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B3C5E4(uint64_t a1, uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void **v12;
  __int128 v13;
  void **v14;
  __int128 v15;
  void **v16;
  __int128 v17;
  void **v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  void *v26;
  __int128 v27;
  __int128 v28;
  void *v29;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = (_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 24);
  if (v4)
  {
    *(_QWORD *)(a1 + 32) = v4;
    operator delete(v4);
    *v5 = 0;
    v5[1] = 0;
    v5[2] = 0;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  v7 = *(_OWORD *)(a2 + 128);
  v6 = *(_OWORD *)(a2 + 144);
  v8 = *(_OWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_OWORD *)(a2 + 48);
  v10 = *(_OWORD *)(a2 + 64);
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v11;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v10;
  v12 = (void **)(a1 + 168);
  if (*(char *)(a1 + 191) < 0)
    operator delete(*v12);
  v13 = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_OWORD *)v12 = v13;
  *(_BYTE *)(a2 + 191) = 0;
  *(_BYTE *)(a2 + 168) = 0;
  v14 = (void **)(a1 + 192);
  if (*(char *)(a1 + 215) < 0)
    operator delete(*v14);
  v15 = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_OWORD *)v14 = v15;
  *(_BYTE *)(a2 + 215) = 0;
  *(_BYTE *)(a2 + 192) = 0;
  v16 = (void **)(a1 + 216);
  if (*(char *)(a1 + 239) < 0)
    operator delete(*v16);
  v17 = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_OWORD *)v16 = v17;
  *(_BYTE *)(a2 + 239) = 0;
  *(_BYTE *)(a2 + 216) = 0;
  v18 = (void **)(a1 + 240);
  if (*(char *)(a1 + 263) < 0)
    operator delete(*v18);
  v19 = *(_OWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_OWORD *)v18 = v19;
  *(_BYTE *)(a2 + 263) = 0;
  *(_BYTE *)(a2 + 240) = 0;
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v20 = a1 + 280;
  sub_239A61EC0(*(_QWORD **)(a1 + 280));
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  v21 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 280) = v21;
  v22 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 288) = v22;
  if (v22)
  {
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(a2 + 272) = a2 + 280;
    *(_QWORD *)(a2 + 280) = 0;
    *(_QWORD *)(a2 + 288) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 272) = v20;
  }
  v23 = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v23;
  v24 = *(_OWORD *)(a2 + 312);
  v25 = *(_OWORD *)(a2 + 328);
  *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 312) = v24;
  *(_OWORD *)(a1 + 328) = v25;
  v26 = *(void **)(a1 + 352);
  if (v26)
  {
    *(_QWORD *)(a1 + 360) = v26;
    operator delete(v26);
    *(_QWORD *)(a1 + 352) = 0;
    *(_QWORD *)(a1 + 360) = 0;
    *(_QWORD *)(a1 + 368) = 0;
  }
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a2 + 360) = 0;
  *(_QWORD *)(a2 + 368) = 0;
  *(_QWORD *)(a2 + 352) = 0;
  *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
  *(_DWORD *)(a1 + 384) = *(_DWORD *)(a2 + 384);
  v27 = *(_OWORD *)(a2 + 392);
  v28 = *(_OWORD *)(a2 + 408);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v27;
  *(_OWORD *)(a1 + 408) = v28;
  v29 = *(void **)(a1 + 432);
  if (v29)
  {
    *(_QWORD *)(a1 + 440) = v29;
    operator delete(v29);
    *(_QWORD *)(a1 + 432) = 0;
    *(_QWORD *)(a1 + 440) = 0;
    *(_QWORD *)(a1 + 448) = 0;
  }
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a2 + 432) = 0;
  *(_QWORD *)(a2 + 440) = 0;
  *(_QWORD *)(a2 + 448) = 0;
  *(_BYTE *)(a1 + 456) = *(_BYTE *)(a2 + 456);
  return a1;
}

uint64_t *sub_239B3C83C(uint64_t a1, unint64_t a2, int a3)
{
  uint8x8_t v3;
  unint64_t v4;
  uint64_t **v5;
  uint64_t *result;
  unint64_t v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v3 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    v4 = a3;
    if (a3 >= a2)
      v4 = a3 % a2;
  }
  else
  {
    v4 = (a2 - 1) & a3;
  }
  v5 = *(uint64_t ***)(a1 + 8 * v4);
  if (!v5)
    return 0;
  result = *v5;
  if (*v5)
  {
    if (v3.u32[0] < 2uLL)
    {
      while (1)
      {
        v8 = result[1];
        if (v8 == a3)
        {
          if (*((_DWORD *)result + 4) == a3)
            return result;
        }
        else if ((v8 & (a2 - 1)) != v4)
        {
          return 0;
        }
        result = (uint64_t *)*result;
        if (!result)
          return result;
      }
    }
    do
    {
      v7 = result[1];
      if (v7 == a3)
      {
        if (*((_DWORD *)result + 4) == a3)
          return result;
      }
      else
      {
        if (v7 >= a2)
          v7 %= a2;
        if (v7 != v4)
          return 0;
      }
      result = (uint64_t *)*result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_239B3C90C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1);
    }
    else
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_239B3C970(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  if (!*(_QWORD *)(a1 + 56))
  {
    v3 = operator new();
    sub_2394988CC(v3);
    v4 = (_QWORD *)operator new();
    *v4 = &unk_250AF1978;
    v4[1] = 0;
    v4[2] = 0;
    v4[3] = v3;
    v5 = *(std::__shared_weak_count **)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v3;
    *(_QWORD *)(a1 + 64) = v4;
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
  sub_239458500((_QWORD *)(*(_QWORD *)(a1 + 56) + 16), (uint64_t)"Automatic masking was enabled, but automatic masks were unable to be produced — all pixels will be used for reconstruction.", 125);
  return a1;
}

void sub_239B3CA44(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239B3CA60(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B3CA84(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  unint64_t v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = a2;
  a1[3] = a3;
  if (!a3)
    goto LABEL_5;
  v4 = (unint64_t *)(a3 + 8);
  do
    v5 = __ldxr(v4);
  while (__stxr(v5 + 1, v4));
  if (!a1[1])
LABEL_5:
    a1[1] = (int)std::thread::hardware_concurrency();
  return a1;
}

void sub_239B3CAD8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B3CB1C(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[3];
  _QWORD *v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v4 = operator new(0x1B0uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_250AF83E8;
  v12 = v11;
  v9[0] = &off_250AF5C20;
  v10 = v9;
  v11[0] = &off_250AF5BD8;
  sub_239B07D6C((uint64_t)(v4 + 3), a2, v11, v9);
  v5 = v10;
  if (v10 == v9)
  {
    v6 = 4;
    v5 = v9;
  }
  else
  {
    if (!v10)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  result = v12;
  if (v12 == v11)
  {
    v8 = 4;
    result = v11;
    goto LABEL_10;
  }
  if (v12)
  {
    v8 = 5;
LABEL_10:
    result = (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
  }
  *a1 = v4 + 3;
  a1[1] = v4;
  return result;
}

void sub_239B3CC38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17)
{
  std::__shared_weak_count *v17;
  char *v18;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;

  v20 = a13;
  if (a13 == v18)
  {
    v21 = 4;
    v20 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v21 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v20 + 8 * v21))();
LABEL_6:
  v22 = a17;
  if (a17 == &a14)
  {
    v23 = 4;
    v22 = &a14;
  }
  else
  {
    if (!a17)
      goto LABEL_11;
    v23 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v22 + 8 * v23))();
LABEL_11:
  std::__shared_weak_count::~__shared_weak_count(v17);
  operator delete(v24);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B3CCAC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (a3)
  {
    v4 = (unint64_t *)(a3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = (std::__shared_weak_count *)a1[1];
  *a1 = a2;
  a1[1] = a3;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

void sub_239B3CD20(uint64_t a1, uint64_t *a2)
{
  void **v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void **v16;

  if (*(_QWORD *)(a1 + 24))
  {
    v4 = *(void ***)(a1 + 16);
    if (v4)
    {
      do
      {
        v16 = (void **)*v4;
        if (*((char *)v4 + 47) < 0)
          operator delete(v4[3]);
        operator delete(v4);
        v4 = v16;
      }
      while (v16);
    }
    *(_QWORD *)(a1 + 16) = 0;
    v5 = *(_QWORD *)(a1 + 8);
    if (v5)
    {
      for (i = 0; i != v5; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
  v7 = *a2;
  *a2 = 0;
  v8 = *(void **)a1;
  *(_QWORD *)a1 = v7;
  if (v8)
    operator delete(v8);
  v11 = a2[2];
  v10 = a2 + 2;
  v9 = v11;
  v12 = *(v10 - 1);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 8) = v12;
  *(v10 - 1) = 0;
  v13 = v10[1];
  *(_QWORD *)(a1 + 24) = v13;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v10 + 4);
  if (v13)
  {
    v14 = *(_QWORD *)(v9 + 8);
    v15 = *(_QWORD *)(a1 + 8);
    if ((v15 & (v15 - 1)) != 0)
    {
      if (v14 >= v15)
        v14 %= v15;
    }
    else
    {
      v14 &= v15 - 1;
    }
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v14) = a1 + 16;
    *v10 = 0;
    v10[1] = 0;
  }
}

uint64_t sub_239B3CE24(uint64_t result)
{
  _QWORD v1[3];
  char v2;

  if (*(_QWORD *)(result + 200))
  {
    v2 = 0;
    v1[0] = sub_239B0FBE8;
    v1[1] = 0;
    v1[2] = result;
    return sub_239B0FF04((uint64_t)v1, (uint64_t)&v2);
  }
  return result;
}

uint64_t sub_239B3CE64(uint64_t a1, char *__s)
{
  size_t v4;
  uint64_t v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  if (!*(_QWORD *)(a1 + 56))
  {
    v6 = operator new();
    sub_2394988CC(v6);
    v7 = (_QWORD *)operator new();
    *v7 = &unk_250AF1978;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = v6;
    v8 = *(std::__shared_weak_count **)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v7;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  v4 = strlen(__s);
  sub_239458500((_QWORD *)(*(_QWORD *)(a1 + 56) + 16), (uint64_t)__s, v4);
  return a1;
}

void sub_239B3CF44(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239B3CF60(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

uint64_t sub_239B3CF84(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = *a2;
  v5 = a2[1];
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = (_QWORD *)(a1 + 40);
  v7 = (_QWORD *)(a1 + 48);
  sub_239421038(a1 + 40, *(_QWORD **)(a1 + 48));
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  v8 = a2 + 3;
  v9 = *((_QWORD *)a2 + 6);
  *v7 = v9;
  v10 = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 56) = v10;
  if (v10)
  {
    *(_QWORD *)(v9 + 16) = v7;
    *((_QWORD *)a2 + 5) = v8;
    *v8 = 0;
    *((_QWORD *)a2 + 7) = 0;
  }
  else
  {
    *v6 = v7;
  }
  v11 = a2[4];
  v12 = a2[5];
  v13 = *(void **)(a1 + 104);
  *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
  *(_OWORD *)(a1 + 80) = v12;
  *(_OWORD *)(a1 + 64) = v11;
  if (v13)
  {
    *(_QWORD *)(a1 + 112) = v13;
    operator delete(v13);
    *(_QWORD *)(a1 + 104) = 0;
    *(_QWORD *)(a1 + 112) = 0;
    *(_QWORD *)(a1 + 120) = 0;
  }
  *(_OWORD *)(a1 + 104) = *(__int128 *)((char *)a2 + 104);
  *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
  *((_QWORD *)a2 + 13) = 0;
  *((_QWORD *)a2 + 14) = 0;
  *((_QWORD *)a2 + 15) = 0;
  *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
  v14 = *(__int128 *)((char *)a2 + 136);
  v15 = *(__int128 *)((char *)a2 + 152);
  v16 = *(__int128 *)((char *)a2 + 168);
  *(_QWORD *)(a1 + 184) = *((_QWORD *)a2 + 23);
  *(_OWORD *)(a1 + 168) = v16;
  *(_OWORD *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  return a1;
}

uint64_t sub_239B3D078(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t i;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  int v36;
  uint64_t v37;
  __int128 v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t j;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  void *v51;
  uint64_t v52;
  void **v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = (_QWORD *)(a1 + 48);
  sub_239A61F08(*(_QWORD **)(a1 + 48));
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  v7 = a2 + 3;
  v8 = *((_QWORD *)a2 + 6);
  *v6 = v8;
  v9 = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 56) = v9;
  if (v9)
  {
    *(_QWORD *)(v8 + 16) = v6;
    *((_QWORD *)a2 + 5) = v7;
    *v7 = 0;
    *((_QWORD *)a2 + 7) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 40) = v6;
  }
  v10 = a1 + 72;
  sub_239A61F08(*(_QWORD **)(a1 + 72));
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  v11 = (_QWORD *)a2 + 9;
  v12 = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 72) = v12;
  v13 = *((_QWORD *)a2 + 10);
  *(_QWORD *)(a1 + 80) = v13;
  if (v13)
  {
    *(_QWORD *)(v12 + 16) = v10;
    *((_QWORD *)a2 + 8) = v11;
    *v11 = 0;
    *((_QWORD *)a2 + 10) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = v10;
  }
  v14 = a1 + 96;
  sub_239A61F08(*(_QWORD **)(a1 + 96));
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  v15 = a2 + 6;
  v16 = *((_QWORD *)a2 + 12);
  *(_QWORD *)(a1 + 96) = v16;
  v17 = *((_QWORD *)a2 + 13);
  *(_QWORD *)(a1 + 104) = v17;
  if (v17)
  {
    *(_QWORD *)(v16 + 16) = v14;
    *((_QWORD *)a2 + 11) = v15;
    *v15 = 0;
    *((_QWORD *)a2 + 13) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 88) = v14;
  }
  v18 = a1 + 120;
  sub_239A61F08(*(_QWORD **)(a1 + 120));
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  v19 = (_QWORD *)a2 + 15;
  v20 = *((_QWORD *)a2 + 15);
  *(_QWORD *)(a1 + 120) = v20;
  v21 = *((_QWORD *)a2 + 16);
  *(_QWORD *)(a1 + 128) = v21;
  if (v21)
  {
    *(_QWORD *)(v20 + 16) = v18;
    *((_QWORD *)a2 + 14) = v19;
    *v19 = 0;
    *((_QWORD *)a2 + 16) = 0;
    if (!*(_QWORD *)(a1 + 160))
      goto LABEL_20;
  }
  else
  {
    *(_QWORD *)(a1 + 112) = v18;
    if (!*(_QWORD *)(a1 + 160))
      goto LABEL_20;
  }
  v22 = *(_QWORD **)(a1 + 152);
  if (v22)
  {
    do
    {
      v23 = (_QWORD *)*v22;
      operator delete(v22);
      v22 = v23;
    }
    while (v23);
  }
  *(_QWORD *)(a1 + 152) = 0;
  v24 = *(_QWORD *)(a1 + 144);
  if (v24)
  {
    for (i = 0; i != v24; ++i)
      *(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * i) = 0;
  }
  *(_QWORD *)(a1 + 160) = 0;
LABEL_20:
  v26 = *((_QWORD *)a2 + 17);
  *((_QWORD *)a2 + 17) = 0;
  v27 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v26;
  if (v27)
    operator delete(v27);
  v28 = *((_QWORD *)a2 + 19);
  v29 = *((_QWORD *)a2 + 18);
  *(_QWORD *)(a1 + 152) = v28;
  *(_QWORD *)(a1 + 144) = v29;
  *((_QWORD *)a2 + 18) = 0;
  v30 = *((_QWORD *)a2 + 20);
  *(_QWORD *)(a1 + 160) = v30;
  *(_DWORD *)(a1 + 168) = *((_DWORD *)a2 + 42);
  if (v30)
  {
    v31 = *(_QWORD *)(v28 + 8);
    v32 = *(_QWORD *)(a1 + 144);
    if ((v32 & (v32 - 1)) != 0)
    {
      if (v31 >= v32)
        v31 %= v32;
    }
    else
    {
      v31 &= v32 - 1;
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * v31) = a1 + 152;
    *((_QWORD *)a2 + 19) = 0;
    *((_QWORD *)a2 + 20) = 0;
  }
  v33 = *(void **)(a1 + 232);
  *(_OWORD *)(a1 + 176) = a2[11];
  v34 = a2[12];
  v35 = a2[13];
  *(_DWORD *)(a1 + 224) = *((_DWORD *)a2 + 56);
  *(_OWORD *)(a1 + 208) = v35;
  *(_OWORD *)(a1 + 192) = v34;
  if (v33)
  {
    *(_QWORD *)(a1 + 240) = v33;
    operator delete(v33);
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 240) = 0;
    *(_QWORD *)(a1 + 248) = 0;
  }
  *(_OWORD *)(a1 + 232) = *(__int128 *)((char *)a2 + 232);
  *(_QWORD *)(a1 + 248) = *((_QWORD *)a2 + 31);
  *((_QWORD *)a2 + 30) = 0;
  *((_QWORD *)a2 + 31) = 0;
  *((_QWORD *)a2 + 29) = 0;
  *(_BYTE *)(a1 + 256) = *((_BYTE *)a2 + 256);
  v36 = *((_DWORD *)a2 + 66);
  *(_BYTE *)(a1 + 268) = *((_BYTE *)a2 + 268);
  *(_DWORD *)(a1 + 264) = v36;
  v37 = *((_QWORD *)a2 + 38);
  v38 = a2[18];
  *(_OWORD *)(a1 + 272) = a2[17];
  *(_OWORD *)(a1 + 288) = v38;
  *(_QWORD *)(a1 + 304) = v37;
  if (*(_QWORD *)(a1 + 336))
  {
    v39 = *(_QWORD **)(a1 + 328);
    if (v39)
    {
      do
      {
        v40 = (_QWORD *)*v39;
        operator delete(v39);
        v39 = v40;
      }
      while (v40);
    }
    *(_QWORD *)(a1 + 328) = 0;
    v41 = *(_QWORD *)(a1 + 320);
    if (v41)
    {
      for (j = 0; j != v41; ++j)
        *(_QWORD *)(*(_QWORD *)(a1 + 312) + 8 * j) = 0;
    }
    *(_QWORD *)(a1 + 336) = 0;
  }
  v43 = *((_QWORD *)a2 + 39);
  *((_QWORD *)a2 + 39) = 0;
  v44 = *(void **)(a1 + 312);
  *(_QWORD *)(a1 + 312) = v43;
  if (v44)
    operator delete(v44);
  v45 = *((_QWORD *)a2 + 41);
  *(_QWORD *)(a1 + 320) = *((_QWORD *)a2 + 40);
  *((_QWORD *)a2 + 40) = 0;
  v46 = *((_QWORD *)a2 + 42);
  *(_QWORD *)(a1 + 336) = v46;
  *(_DWORD *)(a1 + 344) = *((_DWORD *)a2 + 86);
  *(_QWORD *)(a1 + 328) = v45;
  if (v46)
  {
    v47 = *(_QWORD *)(v45 + 8);
    v48 = *(_QWORD *)(a1 + 320);
    if ((v48 & (v48 - 1)) != 0)
    {
      if (v47 >= v48)
        v47 %= v48;
    }
    else
    {
      v47 &= v48 - 1;
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 312) + 8 * v47) = a1 + 328;
    *((_QWORD *)a2 + 41) = 0;
    *((_QWORD *)a2 + 42) = 0;
  }
  v49 = a2[22];
  *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
  *(_OWORD *)(a1 + 352) = v49;
  v50 = *(__int128 *)((char *)a2 + 376);
  *(_OWORD *)(a1 + 388) = *(__int128 *)((char *)a2 + 388);
  *(_OWORD *)(a1 + 376) = v50;
  v51 = *(void **)(a1 + 408);
  if (v51)
  {
    *(_QWORD *)(a1 + 416) = v51;
    operator delete(v51);
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 416) = 0;
    *(_QWORD *)(a1 + 424) = 0;
  }
  v52 = *((_QWORD *)a2 + 52);
  *(_QWORD *)(a1 + 408) = *((_QWORD *)a2 + 51);
  *(_QWORD *)(a1 + 416) = v52;
  *(_QWORD *)(a1 + 424) = *((_QWORD *)a2 + 53);
  *((_QWORD *)a2 + 51) = 0;
  *((_QWORD *)a2 + 52) = 0;
  *((_QWORD *)a2 + 53) = 0;
  v53 = (void **)(a1 + 432);
  if (*(char *)(a1 + 455) < 0)
    operator delete(*v53);
  v54 = a2[27];
  *(_QWORD *)(a1 + 448) = *((_QWORD *)a2 + 56);
  *(_OWORD *)v53 = v54;
  *((_BYTE *)a2 + 455) = 0;
  *((_BYTE *)a2 + 432) = 0;
  v56 = *(__int128 *)((char *)a2 + 616);
  v55 = *(__int128 *)((char *)a2 + 632);
  v57 = *(__int128 *)((char *)a2 + 600);
  *(_OWORD *)(a1 + 584) = *(__int128 *)((char *)a2 + 584);
  *(_OWORD *)(a1 + 600) = v57;
  *(_OWORD *)(a1 + 616) = v56;
  *(_OWORD *)(a1 + 632) = v55;
  v59 = *(__int128 *)((char *)a2 + 552);
  v58 = *(__int128 *)((char *)a2 + 568);
  v60 = *(__int128 *)((char *)a2 + 536);
  *(_OWORD *)(a1 + 520) = *(__int128 *)((char *)a2 + 520);
  *(_OWORD *)(a1 + 536) = v60;
  *(_OWORD *)(a1 + 552) = v59;
  *(_OWORD *)(a1 + 568) = v58;
  v62 = *(__int128 *)((char *)a2 + 488);
  v61 = *(__int128 *)((char *)a2 + 504);
  v63 = *(__int128 *)((char *)a2 + 472);
  *(_OWORD *)(a1 + 456) = *(__int128 *)((char *)a2 + 456);
  *(_OWORD *)(a1 + 472) = v63;
  *(_OWORD *)(a1 + 488) = v62;
  *(_OWORD *)(a1 + 504) = v61;
  v64 = *(__int128 *)((char *)a2 + 648);
  v65 = *(__int128 *)((char *)a2 + 664);
  v66 = *(__int128 *)((char *)a2 + 696);
  *(_OWORD *)(a1 + 680) = *(__int128 *)((char *)a2 + 680);
  *(_OWORD *)(a1 + 696) = v66;
  *(_OWORD *)(a1 + 648) = v64;
  *(_OWORD *)(a1 + 664) = v65;
  return a1;
}

uint64_t sub_239B3D494(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  _QWORD *v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t i;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __int128 v43;
  __int128 v44;
  void *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _QWORD *v60;
  uint64_t v61;
  __int128 **v62;
  __int128 *v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  __int128 **v67;
  __int128 *v68;
  _QWORD *v69;
  __int128 v70;
  void **v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  void *v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  _QWORD *v96;
  uint64_t v97;
  __int128 **v98;
  __int128 *v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  __int128 **v103;
  __int128 *v104;
  _QWORD *v105;
  __int128 v106;

  v4 = *a2;
  v5 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v4;
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  v9 = a2[7];
  v10 = a2[8];
  v11 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v11;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v10;
  v13 = (_QWORD *)(a1 + 176);
  v12 = *(void **)(a1 + 176);
  v14 = a2 + 11;
  if (v12)
  {
    *(_QWORD *)(a1 + 184) = v12;
    operator delete(v12);
    *v13 = 0;
    v13[1] = 0;
    v13[2] = 0;
  }
  *(_OWORD *)(a1 + 176) = a2[11];
  *(_QWORD *)(a1 + 192) = *((_QWORD *)a2 + 24);
  v14[1] = 0;
  v14[2] = 0;
  *v14 = 0;
  v15 = *(__int128 *)((char *)a2 + 232);
  v16 = *(__int128 *)((char *)a2 + 248);
  v17 = *(__int128 *)((char *)a2 + 264);
  *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
  *(_OWORD *)(a1 + 264) = v17;
  *(_OWORD *)(a1 + 248) = v16;
  *(_OWORD *)(a1 + 232) = v15;
  *(_OWORD *)(a1 + 200) = *(__int128 *)((char *)a2 + 200);
  v18 = *(void **)(a1 + 280);
  if (v18)
  {
    *(_QWORD *)(a1 + 288) = v18;
    operator delete(v18);
    *(_QWORD *)(a1 + 280) = 0;
    *(_QWORD *)(a1 + 288) = 0;
    *(_QWORD *)(a1 + 296) = 0;
  }
  v19 = *((_QWORD *)a2 + 36);
  *(_QWORD *)(a1 + 280) = *((_QWORD *)a2 + 35);
  *(_QWORD *)(a1 + 288) = v19;
  *(_QWORD *)(a1 + 296) = *((_QWORD *)a2 + 37);
  *((_QWORD *)a2 + 35) = 0;
  *((_QWORD *)a2 + 36) = 0;
  *((_QWORD *)a2 + 37) = 0;
  v20 = a1 + 312;
  sub_239421038(a1 + 304, *(_QWORD **)(a1 + 312));
  *(_QWORD *)(a1 + 304) = *((_QWORD *)a2 + 38);
  v21 = *((_QWORD *)a2 + 39);
  *(_QWORD *)(a1 + 312) = v21;
  v22 = *((_QWORD *)a2 + 40);
  *(_QWORD *)(a1 + 320) = v22;
  if (v22)
  {
    *(_QWORD *)(v21 + 16) = v20;
    *((_QWORD *)a2 + 38) = (char *)a2 + 312;
    *((_QWORD *)a2 + 39) = 0;
    *((_QWORD *)a2 + 40) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 304) = v20;
  }
  v23 = a1 + 336;
  sub_239421038(a1 + 328, *(_QWORD **)(a1 + 336));
  *(_QWORD *)(a1 + 328) = *((_QWORD *)a2 + 41);
  v24 = *((_QWORD *)a2 + 42);
  *(_QWORD *)(a1 + 336) = v24;
  v25 = *((_QWORD *)a2 + 43);
  *(_QWORD *)(a1 + 344) = v25;
  if (v25)
  {
    *(_QWORD *)(v24 + 16) = v23;
    *((_QWORD *)a2 + 41) = a2 + 21;
    *((_QWORD *)a2 + 42) = 0;
    *((_QWORD *)a2 + 43) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 328) = v23;
  }
  *(_OWORD *)(a1 + 352) = a2[22];
  v26 = *(void **)(a1 + 368);
  if (v26)
  {
    *(_QWORD *)(a1 + 376) = v26;
    operator delete(v26);
    *(_QWORD *)(a1 + 368) = 0;
    *(_QWORD *)(a1 + 376) = 0;
    *(_QWORD *)(a1 + 384) = 0;
  }
  *(_OWORD *)(a1 + 368) = a2[23];
  *(_QWORD *)(a1 + 384) = *((_QWORD *)a2 + 48);
  *((_QWORD *)a2 + 47) = 0;
  *((_QWORD *)a2 + 48) = 0;
  *((_QWORD *)a2 + 46) = 0;
  v27 = *(__int128 *)((char *)a2 + 392);
  *(_OWORD *)(a1 + 408) = *(__int128 *)((char *)a2 + 408);
  v29 = *(__int128 *)((char *)a2 + 440);
  v28 = *(__int128 *)((char *)a2 + 456);
  v30 = *(__int128 *)((char *)a2 + 424);
  *(_QWORD *)(a1 + 472) = *((_QWORD *)a2 + 59);
  *(_OWORD *)(a1 + 440) = v29;
  *(_OWORD *)(a1 + 456) = v28;
  *(_OWORD *)(a1 + 424) = v30;
  *(_OWORD *)(a1 + 392) = v27;
  *(_OWORD *)(a1 + 480) = a2[30];
  v31 = *(void **)(a1 + 496);
  if (v31)
  {
    *(_QWORD *)(a1 + 504) = v31;
    operator delete(v31);
    *(_QWORD *)(a1 + 496) = 0;
    *(_QWORD *)(a1 + 504) = 0;
    *(_QWORD *)(a1 + 512) = 0;
  }
  *(_OWORD *)(a1 + 496) = a2[31];
  *(_QWORD *)(a1 + 512) = *((_QWORD *)a2 + 64);
  *((_QWORD *)a2 + 62) = 0;
  *((_QWORD *)a2 + 63) = 0;
  *((_QWORD *)a2 + 64) = 0;
  v32 = *(void **)(a1 + 520);
  if (v32)
  {
    *(_QWORD *)(a1 + 528) = v32;
    operator delete(v32);
    *(_QWORD *)(a1 + 520) = 0;
    *(_QWORD *)(a1 + 528) = 0;
    *(_QWORD *)(a1 + 536) = 0;
  }
  *(_QWORD *)(a1 + 520) = *((_QWORD *)a2 + 65);
  *(_QWORD *)(a1 + 528) = *((_QWORD *)a2 + 66);
  *(_QWORD *)(a1 + 536) = *((_QWORD *)a2 + 67);
  *((_QWORD *)a2 + 67) = 0;
  *((_QWORD *)a2 + 66) = 0;
  *((_QWORD *)a2 + 65) = 0;
  *(_DWORD *)(a1 + 544) = *((_DWORD *)a2 + 136);
  if (*(_QWORD *)(a1 + 576))
  {
    v33 = *(_QWORD **)(a1 + 568);
    if (v33)
    {
      do
      {
        v34 = (_QWORD *)*v33;
        operator delete(v33);
        v33 = v34;
      }
      while (v34);
    }
    *(_QWORD *)(a1 + 568) = 0;
    v35 = *(_QWORD *)(a1 + 560);
    if (v35)
    {
      for (i = 0; i != v35; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 552) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 576) = 0;
  }
  v37 = *((_QWORD *)a2 + 69);
  *((_QWORD *)a2 + 69) = 0;
  v38 = *(void **)(a1 + 552);
  *(_QWORD *)(a1 + 552) = v37;
  if (v38)
    operator delete(v38);
  *(_QWORD *)(a1 + 560) = *((_QWORD *)a2 + 70);
  *((_QWORD *)a2 + 70) = 0;
  v39 = *((_QWORD *)a2 + 72);
  *(_QWORD *)(a1 + 576) = v39;
  *(_DWORD *)(a1 + 584) = *((_DWORD *)a2 + 146);
  v40 = *((_QWORD *)a2 + 71);
  *(_QWORD *)(a1 + 568) = v40;
  if (v39)
  {
    v41 = *(_QWORD *)(v40 + 8);
    v42 = *(_QWORD *)(a1 + 560);
    if ((v42 & (v42 - 1)) != 0)
    {
      if (v41 >= v42)
        v41 %= v42;
    }
    else
    {
      v41 &= v42 - 1;
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 552) + 8 * v41) = a1 + 568;
    *((_QWORD *)a2 + 71) = 0;
    *((_QWORD *)a2 + 72) = 0;
  }
  v43 = a2[37];
  v44 = a2[38];
  *(_DWORD *)(a1 + 624) = *((_DWORD *)a2 + 156);
  *(_OWORD *)(a1 + 592) = v43;
  *(_OWORD *)(a1 + 608) = v44;
  v45 = *(void **)(a1 + 632);
  if (v45)
  {
    *(_QWORD *)(a1 + 640) = v45;
    operator delete(v45);
    *(_QWORD *)(a1 + 632) = 0;
    *(_QWORD *)(a1 + 640) = 0;
    *(_QWORD *)(a1 + 648) = 0;
  }
  *(_QWORD *)(a1 + 632) = *((_QWORD *)a2 + 79);
  *(_QWORD *)(a1 + 640) = *((_QWORD *)a2 + 80);
  *(_QWORD *)(a1 + 648) = *((_QWORD *)a2 + 81);
  *((_QWORD *)a2 + 80) = 0;
  *((_QWORD *)a2 + 79) = 0;
  *((_QWORD *)a2 + 81) = 0;
  *(_BYTE *)(a1 + 656) = *((_BYTE *)a2 + 656);
  v46 = *(__int128 *)((char *)a2 + 664);
  v47 = *(__int128 *)((char *)a2 + 696);
  *(_OWORD *)(a1 + 680) = *(__int128 *)((char *)a2 + 680);
  *(_OWORD *)(a1 + 696) = v47;
  *(_OWORD *)(a1 + 664) = v46;
  v48 = *(__int128 *)((char *)a2 + 712);
  v49 = *(__int128 *)((char *)a2 + 728);
  v50 = *(__int128 *)((char *)a2 + 760);
  *(_OWORD *)(a1 + 744) = *(__int128 *)((char *)a2 + 744);
  *(_OWORD *)(a1 + 760) = v50;
  *(_OWORD *)(a1 + 712) = v48;
  *(_OWORD *)(a1 + 728) = v49;
  v51 = *(__int128 *)((char *)a2 + 776);
  v52 = *(__int128 *)((char *)a2 + 792);
  v53 = *(__int128 *)((char *)a2 + 824);
  *(_OWORD *)(a1 + 808) = *(__int128 *)((char *)a2 + 808);
  *(_OWORD *)(a1 + 824) = v53;
  *(_OWORD *)(a1 + 776) = v51;
  *(_OWORD *)(a1 + 792) = v52;
  v54 = *(__int128 *)((char *)a2 + 840);
  v55 = *(__int128 *)((char *)a2 + 856);
  v56 = *(__int128 *)((char *)a2 + 888);
  *(_OWORD *)(a1 + 872) = *(__int128 *)((char *)a2 + 872);
  *(_OWORD *)(a1 + 888) = v56;
  *(_OWORD *)(a1 + 840) = v54;
  *(_OWORD *)(a1 + 856) = v55;
  *(_OWORD *)(a1 + 904) = *(__int128 *)((char *)a2 + 904);
  v57 = *(__int128 *)((char *)a2 + 920);
  v58 = *(__int128 *)((char *)a2 + 936);
  v59 = *(__int128 *)((char *)a2 + 952);
  *(_OWORD *)(a1 + 961) = *(__int128 *)((char *)a2 + 961);
  *(_OWORD *)(a1 + 936) = v58;
  *(_OWORD *)(a1 + 952) = v59;
  *(_OWORD *)(a1 + 920) = v57;
  v60 = *(_QWORD **)(a1 + 1008);
  *(_QWORD *)(a1 + 1008) = 0;
  if (v60 == (_QWORD *)(a1 + 984))
  {
    v61 = 4;
    v60 = (_QWORD *)(a1 + 984);
  }
  else
  {
    if (!v60)
      goto LABEL_39;
    v61 = 5;
  }
  (*(void (**)(void))(*v60 + 8 * v61))();
LABEL_39:
  v62 = (__int128 **)(a1 + 1008);
  v63 = (__int128 *)*((_QWORD *)a2 + 126);
  if (!v63)
  {
    v64 = (_QWORD *)(a1 + 1008);
    goto LABEL_43;
  }
  v64 = a2 + 63;
  if (v63 != (__int128 *)((char *)a2 + 984))
  {
    *v62 = v63;
LABEL_43:
    *v64 = 0;
    goto LABEL_45;
  }
  *v62 = (__int128 *)(a1 + 984);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v64 + 24))(*v64, a1 + 984);
LABEL_45:
  v65 = *(_QWORD **)(a1 + 1040);
  *(_QWORD *)(a1 + 1040) = 0;
  if (v65 == (_QWORD *)(a1 + 1016))
  {
    v66 = 4;
    v65 = (_QWORD *)(a1 + 1016);
  }
  else
  {
    if (!v65)
      goto LABEL_50;
    v66 = 5;
  }
  (*(void (**)(void))(*v65 + 8 * v66))();
LABEL_50:
  v67 = (__int128 **)(a1 + 1040);
  v68 = (__int128 *)*((_QWORD *)a2 + 130);
  if (!v68)
  {
    v69 = (_QWORD *)(a1 + 1040);
    goto LABEL_54;
  }
  v69 = a2 + 65;
  if (v68 != (__int128 *)((char *)a2 + 1016))
  {
    *v67 = v68;
LABEL_54:
    *v69 = 0;
    goto LABEL_56;
  }
  *v67 = (__int128 *)(a1 + 1016);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v69 + 24))(*v69, a1 + 1016);
LABEL_56:
  v70 = *(__int128 *)((char *)a2 + 1048);
  *(_OWORD *)(a1 + 1060) = *(__int128 *)((char *)a2 + 1060);
  *(_OWORD *)(a1 + 1048) = v70;
  *(_QWORD *)(a1 + 1080) = *((_QWORD *)a2 + 135);
  *(_DWORD *)(a1 + 1088) = *((_DWORD *)a2 + 272);
  v71 = (void **)(a1 + 1096);
  if (*(char *)(a1 + 1119) < 0)
    operator delete(*v71);
  v72 = *(__int128 *)((char *)a2 + 1096);
  *(_QWORD *)(a1 + 1112) = *((_QWORD *)a2 + 139);
  *(_OWORD *)v71 = v72;
  *((_BYTE *)a2 + 1119) = 0;
  *((_BYTE *)a2 + 1096) = 0;
  v73 = a2[70];
  v74 = a2[71];
  *(_OWORD *)(a1 + 1145) = *(__int128 *)((char *)a2 + 1145);
  *(_OWORD *)(a1 + 1136) = v74;
  *(_OWORD *)(a1 + 1120) = v73;
  v75 = a2[76];
  v76 = a2[77];
  v77 = a2[78];
  *(_OWORD *)(a1 + 1200) = a2[75];
  *(_OWORD *)(a1 + 1248) = v77;
  *(_OWORD *)(a1 + 1232) = v76;
  *(_OWORD *)(a1 + 1216) = v75;
  v78 = a2[80];
  v79 = a2[81];
  v80 = *(__int128 *)((char *)a2 + 1306);
  *(_OWORD *)(a1 + 1264) = a2[79];
  *(_OWORD *)(a1 + 1306) = v80;
  *(_OWORD *)(a1 + 1296) = v79;
  *(_OWORD *)(a1 + 1280) = v78;
  v81 = a2[73];
  *(_OWORD *)(a1 + 1184) = a2[74];
  *(_OWORD *)(a1 + 1168) = v81;
  v82 = *(void **)(a1 + 1328);
  if (v82)
  {
    *(_QWORD *)(a1 + 1336) = v82;
    operator delete(v82);
    *(_QWORD *)(a1 + 1328) = 0;
    *(_QWORD *)(a1 + 1336) = 0;
    *(_QWORD *)(a1 + 1344) = 0;
  }
  *(_OWORD *)(a1 + 1328) = a2[83];
  *(_QWORD *)(a1 + 1344) = *((_QWORD *)a2 + 168);
  *((_QWORD *)a2 + 166) = 0;
  *((_QWORD *)a2 + 167) = 0;
  *((_QWORD *)a2 + 168) = 0;
  v83 = *(__int128 *)((char *)a2 + 1352);
  *(_WORD *)(a1 + 1368) = *((_WORD *)a2 + 684);
  *(_OWORD *)(a1 + 1352) = v83;
  v84 = a2[91];
  v85 = a2[92];
  v86 = a2[93];
  *(_OWORD *)(a1 + 1440) = a2[90];
  *(_OWORD *)(a1 + 1488) = v86;
  *(_OWORD *)(a1 + 1472) = v85;
  *(_OWORD *)(a1 + 1456) = v84;
  v87 = a2[95];
  v88 = a2[96];
  v89 = a2[97];
  *(_OWORD *)(a1 + 1504) = a2[94];
  *(_OWORD *)(a1 + 1552) = v89;
  *(_OWORD *)(a1 + 1536) = v88;
  *(_OWORD *)(a1 + 1520) = v87;
  v90 = a2[86];
  v91 = a2[87];
  v92 = a2[88];
  *(_OWORD *)(a1 + 1424) = a2[89];
  *(_OWORD *)(a1 + 1408) = v92;
  *(_OWORD *)(a1 + 1392) = v91;
  *(_OWORD *)(a1 + 1376) = v90;
  *(_OWORD *)(a1 + 1568) = a2[98];
  v93 = a2[99];
  v94 = a2[100];
  v95 = a2[101];
  *(_OWORD *)(a1 + 1625) = *(__int128 *)((char *)a2 + 1625);
  *(_OWORD *)(a1 + 1616) = v95;
  *(_OWORD *)(a1 + 1600) = v94;
  *(_OWORD *)(a1 + 1584) = v93;
  v96 = *(_QWORD **)(a1 + 1672);
  *(_QWORD *)(a1 + 1672) = 0;
  if (v96 == (_QWORD *)(a1 + 1648))
  {
    v97 = 4;
    v96 = (_QWORD *)(a1 + 1648);
  }
  else
  {
    if (!v96)
      goto LABEL_65;
    v97 = 5;
  }
  (*(void (**)(void))(*v96 + 8 * v97))();
LABEL_65:
  v98 = (__int128 **)(a1 + 1672);
  v99 = (__int128 *)*((_QWORD *)a2 + 209);
  if (!v99)
  {
    v100 = (_QWORD *)(a1 + 1672);
    goto LABEL_69;
  }
  v100 = (_QWORD *)a2 + 209;
  if (v99 != a2 + 103)
  {
    *v98 = v99;
LABEL_69:
    *v100 = 0;
    goto LABEL_71;
  }
  *v98 = (__int128 *)(a1 + 1648);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v100 + 24))(*v100, a1 + 1648);
LABEL_71:
  v101 = *(_QWORD **)(a1 + 1704);
  *(_QWORD *)(a1 + 1704) = 0;
  if (v101 == (_QWORD *)(a1 + 1680))
  {
    v102 = 4;
    v101 = (_QWORD *)(a1 + 1680);
  }
  else
  {
    if (!v101)
      goto LABEL_76;
    v102 = 5;
  }
  (*(void (**)(void))(*v101 + 8 * v102))();
LABEL_76:
  v103 = (__int128 **)(a1 + 1704);
  v104 = (__int128 *)*((_QWORD *)a2 + 213);
  if (v104)
  {
    v105 = (_QWORD *)a2 + 213;
    if (v104 == a2 + 105)
    {
      *v103 = (__int128 *)(a1 + 1680);
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v105 + 24))(*v105, a1 + 1680);
      goto LABEL_82;
    }
    *v103 = v104;
  }
  else
  {
    v105 = (_QWORD *)(a1 + 1704);
  }
  *v105 = 0;
LABEL_82:
  v106 = a2[107];
  *(_OWORD *)(a1 + 1724) = *(__int128 *)((char *)a2 + 1724);
  *(_OWORD *)(a1 + 1712) = v106;
  return a1;
}

uint64_t sub_239B3DC70(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t j;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  void *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  void *v38;
  uint64_t v39;
  __int128 v40;
  int v41;
  void *v42;
  uint64_t v43;
  void *v44;
  void *v45;

  v4 = *a2;
  v5 = a2[1];
  *(_OWORD *)(a1 + 29) = *(__int128 *)((char *)a2 + 29);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  if (*(_QWORD *)(a1 + 72))
  {
    v6 = *(_QWORD **)(a1 + 64);
    if (v6)
    {
      do
      {
        v7 = (_QWORD *)*v6;
        operator delete(v6);
        v6 = v7;
      }
      while (v7);
    }
    *(_QWORD *)(a1 + 64) = 0;
    v8 = *(_QWORD *)(a1 + 56);
    if (v8)
    {
      for (i = 0; i != v8; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 72) = 0;
  }
  v10 = *((_QWORD *)a2 + 6);
  *((_QWORD *)a2 + 6) = 0;
  v11 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v10;
  if (v11)
    operator delete(v11);
  v12 = *((_QWORD *)a2 + 8);
  v13 = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  *((_QWORD *)a2 + 7) = 0;
  v14 = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 72) = v14;
  *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
  if (v14)
  {
    v15 = *(_QWORD *)(v12 + 8);
    v16 = *(_QWORD *)(a1 + 56);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v15 >= v16)
        v15 %= v16;
    }
    else
    {
      v15 &= v16 - 1;
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v15) = a1 + 64;
    *((_QWORD *)a2 + 8) = 0;
    *((_QWORD *)a2 + 9) = 0;
  }
  sub_239B429C4(a1 + 88, (uint64_t *)a2 + 11);
  sub_239B429C4(a1 + 128, (uint64_t *)a2 + 16);
  v17 = *(void **)(a1 + 176);
  *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
  if (v17)
  {
    *(_QWORD *)(a1 + 184) = v17;
    operator delete(v17);
    *(_QWORD *)(a1 + 176) = 0;
    *(_QWORD *)(a1 + 184) = 0;
    *(_QWORD *)(a1 + 192) = 0;
  }
  *(_OWORD *)(a1 + 176) = a2[11];
  *(_QWORD *)(a1 + 192) = *((_QWORD *)a2 + 24);
  *((_QWORD *)a2 + 22) = 0;
  *((_QWORD *)a2 + 23) = 0;
  *((_QWORD *)a2 + 24) = 0;
  if (*(_QWORD *)(a1 + 224))
  {
    v18 = *(_QWORD **)(a1 + 216);
    if (v18)
    {
      do
      {
        v19 = (_QWORD *)*v18;
        operator delete(v18);
        v18 = v19;
      }
      while (v19);
    }
    *(_QWORD *)(a1 + 216) = 0;
    v20 = *(_QWORD *)(a1 + 208);
    if (v20)
    {
      for (j = 0; j != v20; ++j)
        *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8 * j) = 0;
    }
    *(_QWORD *)(a1 + 224) = 0;
  }
  v22 = *((_QWORD *)a2 + 25);
  *((_QWORD *)a2 + 25) = 0;
  v23 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = v22;
  if (v23)
    operator delete(v23);
  v24 = *((_QWORD *)a2 + 27);
  v25 = *((_QWORD *)a2 + 26);
  *(_QWORD *)(a1 + 216) = v24;
  *(_QWORD *)(a1 + 208) = v25;
  *((_QWORD *)a2 + 26) = 0;
  v26 = *((_QWORD *)a2 + 28);
  *(_QWORD *)(a1 + 224) = v26;
  *(_DWORD *)(a1 + 232) = *((_DWORD *)a2 + 58);
  if (v26)
  {
    v27 = *(_QWORD *)(v24 + 8);
    v28 = *(_QWORD *)(a1 + 208);
    if ((v28 & (v28 - 1)) != 0)
    {
      if (v27 >= v28)
        v27 %= v28;
    }
    else
    {
      v27 &= v28 - 1;
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8 * v27) = a1 + 216;
    *((_QWORD *)a2 + 27) = 0;
    *((_QWORD *)a2 + 28) = 0;
  }
  v29 = a2[15];
  v30 = a2[16];
  *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
  *(_OWORD *)(a1 + 240) = v29;
  *(_OWORD *)(a1 + 256) = v30;
  v31 = *(void **)(a1 + 280);
  if (v31)
  {
    *(_QWORD *)(a1 + 288) = v31;
    operator delete(v31);
    *(_QWORD *)(a1 + 280) = 0;
    *(_QWORD *)(a1 + 288) = 0;
    *(_QWORD *)(a1 + 296) = 0;
  }
  v32 = *((_QWORD *)a2 + 36);
  *(_QWORD *)(a1 + 280) = *((_QWORD *)a2 + 35);
  *(_QWORD *)(a1 + 288) = v32;
  *(_QWORD *)(a1 + 296) = *((_QWORD *)a2 + 37);
  *((_QWORD *)a2 + 36) = 0;
  *((_QWORD *)a2 + 37) = 0;
  *((_QWORD *)a2 + 35) = 0;
  *(_BYTE *)(a1 + 304) = *((_BYTE *)a2 + 304);
  v33 = *(__int128 *)((char *)a2 + 312);
  v34 = *(__int128 *)((char *)a2 + 328);
  *(_DWORD *)(a1 + 344) = *((_DWORD *)a2 + 86);
  *(_OWORD *)(a1 + 312) = v33;
  *(_OWORD *)(a1 + 328) = v34;
  v35 = *(void **)(a1 + 352);
  if (v35)
  {
    *(_QWORD *)(a1 + 360) = v35;
    operator delete(v35);
    *(_QWORD *)(a1 + 352) = 0;
    *(_QWORD *)(a1 + 360) = 0;
    *(_QWORD *)(a1 + 368) = 0;
  }
  *(_OWORD *)(a1 + 352) = a2[22];
  *(_QWORD *)(a1 + 368) = *((_QWORD *)a2 + 46);
  *((_QWORD *)a2 + 45) = 0;
  *((_QWORD *)a2 + 46) = 0;
  *((_QWORD *)a2 + 44) = 0;
  *(_BYTE *)(a1 + 376) = *((_BYTE *)a2 + 376);
  v36 = a2[24];
  v37 = a2[25];
  *(_DWORD *)(a1 + 416) = *((_DWORD *)a2 + 104);
  *(_OWORD *)(a1 + 384) = v36;
  *(_OWORD *)(a1 + 400) = v37;
  v38 = *(void **)(a1 + 424);
  if (v38)
  {
    *(_QWORD *)(a1 + 432) = v38;
    operator delete(v38);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 432) = 0;
    *(_QWORD *)(a1 + 440) = 0;
  }
  v39 = *((_QWORD *)a2 + 54);
  *(_QWORD *)(a1 + 424) = *((_QWORD *)a2 + 53);
  *(_QWORD *)(a1 + 432) = v39;
  *(_QWORD *)(a1 + 440) = *((_QWORD *)a2 + 55);
  *((_QWORD *)a2 + 54) = 0;
  *((_QWORD *)a2 + 55) = 0;
  *((_QWORD *)a2 + 53) = 0;
  *(_BYTE *)(a1 + 448) = *((_BYTE *)a2 + 448);
  v40 = *(__int128 *)((char *)a2 + 472);
  *(_OWORD *)(a1 + 456) = *(__int128 *)((char *)a2 + 456);
  *(_OWORD *)(a1 + 472) = v40;
  v41 = *((_DWORD *)a2 + 124);
  *(_QWORD *)(a1 + 488) = *((_QWORD *)a2 + 61);
  *(_DWORD *)(a1 + 496) = v41;
  v42 = *(void **)(a1 + 504);
  if (v42)
  {
    *(_QWORD *)(a1 + 512) = v42;
    operator delete(v42);
    *(_QWORD *)(a1 + 504) = 0;
    *(_QWORD *)(a1 + 512) = 0;
    *(_QWORD *)(a1 + 520) = 0;
  }
  v43 = *((_QWORD *)a2 + 64);
  *(_QWORD *)(a1 + 504) = *((_QWORD *)a2 + 63);
  *(_QWORD *)(a1 + 512) = v43;
  *(_QWORD *)(a1 + 520) = *((_QWORD *)a2 + 65);
  *((_QWORD *)a2 + 63) = 0;
  *((_QWORD *)a2 + 64) = 0;
  *((_QWORD *)a2 + 65) = 0;
  v44 = *(void **)(a1 + 528);
  if (v44)
  {
    *(_QWORD *)(a1 + 536) = v44;
    operator delete(v44);
    *(_QWORD *)(a1 + 528) = 0;
    *(_QWORD *)(a1 + 536) = 0;
    *(_QWORD *)(a1 + 544) = 0;
  }
  *(_OWORD *)(a1 + 528) = a2[33];
  *(_QWORD *)(a1 + 544) = *((_QWORD *)a2 + 68);
  *((_QWORD *)a2 + 66) = 0;
  *((_QWORD *)a2 + 67) = 0;
  *((_QWORD *)a2 + 68) = 0;
  v45 = *(void **)(a1 + 552);
  if (v45)
  {
    *(_QWORD *)(a1 + 560) = v45;
    operator delete(v45);
    *(_QWORD *)(a1 + 552) = 0;
    *(_QWORD *)(a1 + 560) = 0;
    *(_QWORD *)(a1 + 568) = 0;
  }
  *(_QWORD *)(a1 + 552) = *((_QWORD *)a2 + 69);
  *(_QWORD *)(a1 + 560) = *((_QWORD *)a2 + 70);
  *(_QWORD *)(a1 + 568) = *((_QWORD *)a2 + 71);
  *((_QWORD *)a2 + 70) = 0;
  *((_QWORD *)a2 + 69) = 0;
  *((_QWORD *)a2 + 71) = 0;
  *(_DWORD *)(a1 + 576) = *((_DWORD *)a2 + 144);
  return a1;
}

_QWORD *sub_239B3E054(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[3];
  _QWORD *v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v4 = operator new(0x1B0uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_250AF83E8;
  v12 = v11;
  v9[0] = &off_250AF5DD0;
  v10 = v9;
  v11[0] = &off_250AF5D88;
  sub_239B07D6C((uint64_t)(v4 + 3), a2, v11, v9);
  v5 = v10;
  if (v10 == v9)
  {
    v6 = 4;
    v5 = v9;
  }
  else
  {
    if (!v10)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  result = v12;
  if (v12 == v11)
  {
    v8 = 4;
    result = v11;
    goto LABEL_10;
  }
  if (v12)
  {
    v8 = 5;
LABEL_10:
    result = (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
  }
  *a1 = v4 + 3;
  a1[1] = v4;
  return result;
}

void sub_239B3E170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17)
{
  std::__shared_weak_count *v17;
  char *v18;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;

  v20 = a13;
  if (a13 == v18)
  {
    v21 = 4;
    v20 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v21 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v20 + 8 * v21))();
LABEL_6:
  v22 = a17;
  if (a17 == &a14)
  {
    v23 = 4;
    v22 = &a14;
  }
  else
  {
    if (!a17)
      goto LABEL_11;
    v23 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v22 + 8 * v23))();
LABEL_11:
  std::__shared_weak_count::~__shared_weak_count(v17);
  operator delete(v24);
  _Unwind_Resume(a1);
}

uint64_t sub_239B3E1E4(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t result;

  v4 = operator new(0x3C0uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_250B01B38;
  result = sub_239A4D360((uint64_t)(v4 + 3), a2);
  *a1 = result;
  a1[1] = (uint64_t)v4;
  return result;
}

void sub_239B3E234(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_239B3E24C(uint64_t a1, char *__s)
{
  size_t v4;
  uint64_t v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  if (!*(_QWORD *)(a1 + 56))
  {
    v6 = operator new();
    sub_2394988CC(v6);
    v7 = (_QWORD *)operator new();
    *v7 = &unk_250AF1978;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = v6;
    v8 = *(std::__shared_weak_count **)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v7;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  v4 = strlen(__s);
  sub_239458500((_QWORD *)(*(_QWORD *)(a1 + 56) + 16), (uint64_t)__s, v4);
  return a1;
}

void sub_239B3E32C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239B3E348(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

uint64_t sub_239B3E36C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  kern_return_t v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t *v17;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  uint64_t v20;

  v1 = sub_239A4F8F4((uint64_t)v16, a1 + 72);
  v2 = v17;
  if (v17)
  {
    v3 = 0;
    do
    {
      if (v3 <= (*((_DWORD *)v2 + 57) * *((_DWORD *)v2 + 56)))
        v3 = (*((_DWORD *)v2 + 57) * *((_DWORD *)v2 + 56));
      v2 = (uint64_t *)*v2;
    }
    while (v2);
    v4 = 4 * v3;
  }
  else
  {
    v4 = 0;
  }
  v5 = MEMORY[0x23B83EE44](v1);
  task_info_outCnt = 93;
  v6 = task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt);
  v7 = v20 + v5;
  if (v6)
    v7 = 0;
  if (v7 <= 0xEC8E51AFFLL)
  {
    if (v7 <= 0x7558BDAFFLL)
    {
      if (v7 <= 0x39BDF3AFFLL)
      {
        if (v7 <= 0x1BF08EAFFLL)
        {
          if (v7 <= 0x147D356FFLL)
          {
            if (v7 <= 0xD09DC2FF)
            {
              v9 = v7 > 0x9502F8FF;
              v8 = 1431306240;
              if (v9)
                v8 = 0x80000000;
            }
            else
            {
              v8 = 2862612480;
            }
          }
          else
          {
            v8 = 0x100000000;
          }
        }
        else
        {
          v8 = 0x155500000;
        }
      }
      else
      {
        v8 = 0x2AAA00000;
      }
    }
    else
    {
      v8 = 0x400000000;
    }
  }
  else
  {
    v8 = 0x800000000;
  }
  v10 = (unint64_t)((double)v8 * 0.95);
  v11 = v8 >= v10;
  v12 = v8 - v10;
  if (!v11)
    v12 = 0;
  v13 = v12 / v4;
  if (v13 >= 0xA)
    v14 = 10;
  else
    v14 = v13;
  sub_239A4E2B0((uint64_t)v16);
  return v14;
}

void sub_239B3E50C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239A4E2B0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239B3E520(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int64_t v13;
  char *v14;
  char *v15;

  if (*(unsigned __int8 *)(a1 + 104) == *((unsigned __int8 *)a2 + 104))
  {
    if (*(_BYTE *)(a1 + 104))
    {
      v4 = *a2;
      *(_OWORD *)(a1 + 12) = *(__int128 *)((char *)a2 + 12);
      *(_OWORD *)a1 = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_OWORD *)(a1 + 40) = *(__int128 *)((char *)a2 + 40);
      v5 = *((_QWORD *)a2 + 7);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_QWORD *)(a1 + 56) = v5;
      if ((__int128 *)a1 != a2)
        sub_23942156C((_QWORD *)(a1 + 72), *((char **)a2 + 9), *((char **)a2 + 10), (uint64_t)(*((_QWORD *)a2 + 10) - *((_QWORD *)a2 + 9)) >> 2);
      *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    }
  }
  else if (*(_BYTE *)(a1 + 104))
  {
    v6 = *(void **)(a1 + 72);
    if (v6)
    {
      *(_QWORD *)(a1 + 80) = v6;
      operator delete(v6);
    }
    *(_BYTE *)(a1 + 104) = 0;
  }
  else
  {
    v7 = *a2;
    *(_OWORD *)(a1 + 12) = *(__int128 *)((char *)a2 + 12);
    *(_OWORD *)a1 = v7;
    v8 = a2[2];
    v9 = a2[3];
    v10 = *((_DWORD *)a2 + 16);
    *(_QWORD *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 80) = 0;
    *(_QWORD *)(a1 + 88) = 0;
    v12 = (_BYTE *)*((_QWORD *)a2 + 9);
    v11 = (_BYTE *)*((_QWORD *)a2 + 10);
    v13 = v11 - v12;
    if (v11 != v12)
    {
      if (v13 < 0)
        sub_2394189F8();
      v14 = (char *)operator new(v11 - v12);
      *(_QWORD *)(a1 + 72) = v14;
      *(_QWORD *)(a1 + 80) = v14;
      v15 = &v14[4 * (v13 >> 2)];
      *(_QWORD *)(a1 + 88) = v15;
      memcpy(v14, v12, v13);
      *(_QWORD *)(a1 + 80) = v15;
    }
    *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    *(_BYTE *)(a1 + 104) = 1;
  }
}

void sub_239B3E65C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 80) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B3E678(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;

  if (*(_BYTE *)(a1 + 152))
  {
    v2 = *(void **)(a1 + 120);
    if (v2)
    {
      *(_QWORD *)(a1 + 128) = v2;
      operator delete(v2);
    }
  }
  v3 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v3)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    v6 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v6)
      goto LABEL_14;
  }
  else
  {
LABEL_8:
    v6 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v6)
      goto LABEL_14;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_14:
  v9 = *(std::__shared_weak_count **)(a1 + 8);
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  return a1;
}

_QWORD *sub_239B3E764(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = (std::__shared_weak_count *)a1[8];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[6];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[6];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[4];
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return a1;
}

uint64_t sub_239B3E838(uint64_t a1, __int128 *a2)
{
  __int128 v4;

  v4 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v4;
  std::string::operator=((std::string *)(a1 + 24), (const std::string *)a2 + 1);
  if ((__int128 *)a1 != a2)
    sub_23945D3D0((_QWORD *)(a1 + 48), *((char **)a2 + 6), *((char **)a2 + 7), (uint64_t)(*((_QWORD *)a2 + 7) - *((_QWORD *)a2 + 6)) >> 3);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  memcpy((void *)(a1 + 80), a2 + 5, 0x168uLL);
  std::string::operator=((std::string *)(a1 + 440), (const std::string *)((char *)a2 + 440));
  return a1;
}

uint64_t sub_239B3E8B4(uint64_t result, uint64_t a2)
{
  if (*(unsigned __int8 *)(result + 864) == *(unsigned __int8 *)(a2 + 864))
  {
    if (*(_BYTE *)(result + 864))
      return sub_239B42008(result, (uint64_t *)a2);
  }
  else if (*(_BYTE *)(result + 864))
  {
    result = sub_239A613DC(result);
    *(_BYTE *)(result + 864) = 0;
  }
  else
  {
    result = sub_239A6064C(result, (uint64_t *)a2);
    *(_BYTE *)(result + 864) = 1;
  }
  return result;
}

uint64_t sub_239B3E904(uint64_t result)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  pthread_cond_t v13;
  pthread_cond_t v14;
  pthread_mutex_t v15;
  _QWORD v16[3];
  _QWORD *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(result + 200))
    return result;
  v1 = result;
  v5 = 0;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  sub_2397A1618(&v15);
  v6 = 0x7FFFFFFF;
  pthread_cond_init(&v13, 0);
  pthread_cond_init(&v14, 0);
  v16[0] = &off_250AF5EA8;
  v16[1] = &v6;
  v16[2] = &v5;
  v17 = v16;
  v2 = sub_239B4121C(v1, v16);
  v3 = v17;
  if (v17 == v16)
  {
    v4 = 4;
    v3 = v16;
    goto LABEL_6;
  }
  if (v17)
  {
    v4 = 5;
LABEL_6:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  if (v2)
  {
    sub_2395BFB54(&v6);
    sub_2395C2A4C((uint64_t)&v6);
  }
  return sub_2395C29C4((uint64_t)&v6);
}

void sub_239B3EA50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B3EA98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, void **a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void **v17;
  uint64_t v18;
  void *v19;

  v17 = a12;
  v18 = a13;
  if ((unint64_t)(a13 - (_QWORD)a12) >= 0x11)
  {
    do
    {
      operator delete(*v17);
      v18 = a13;
      v17 = a12 + 1;
      a12 = v17;
    }
    while ((unint64_t)(a13 - (_QWORD)v17) > 0x10);
  }
  while (v17 != (void **)v18)
  {
    v19 = *v17++;
    operator delete(v19);
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B3EB50(uint64_t result)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  pthread_cond_t v13;
  pthread_cond_t v14;
  pthread_mutex_t v15;
  _QWORD v16[3];
  _QWORD *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(result + 200))
    return result;
  v1 = result;
  v5 = 0;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  sub_2397A1618(&v15);
  v6 = 0x7FFFFFFF;
  pthread_cond_init(&v13, 0);
  pthread_cond_init(&v14, 0);
  v16[0] = &off_250AF5EF0;
  v16[1] = &v6;
  v16[2] = &v5;
  v17 = v16;
  v2 = sub_239B40430(v1, v16);
  v3 = v17;
  if (v17 == v16)
  {
    v4 = 4;
    v3 = v16;
    goto LABEL_6;
  }
  if (v17)
  {
    v4 = 5;
LABEL_6:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  if (v2)
  {
    sub_2395BFB54(&v6);
    sub_2395C2A4C((uint64_t)&v6);
  }
  return sub_2395C29C4((uint64_t)&v6);
}

void sub_239B3EC9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B3ECE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, void **a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void **v17;
  uint64_t v18;
  void *v19;

  v17 = a12;
  v18 = a13;
  if ((unint64_t)(a13 - (_QWORD)a12) >= 0x11)
  {
    do
    {
      operator delete(*v17);
      v18 = a13;
      v17 = a12 + 1;
      a12 = v17;
    }
    while ((unint64_t)(a13 - (_QWORD)v17) > 0x10);
  }
  while (v17 != (void **)v18)
  {
    v19 = *v17++;
    operator delete(v19);
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_239B3ED9C(_QWORD *a1)
{
  _QWORD *v2;
  char *result;

  v2 = operator new(0xB0uLL);
  v2[1] = 0;
  v2[2] = 0;
  *v2 = &off_250B020F8;
  *((_BYTE *)v2 + 72) = 0;
  *((_BYTE *)v2 + 80) = 0;
  *((_BYTE *)v2 + 104) = 0;
  *((_BYTE *)v2 + 112) = 0;
  *((_BYTE *)v2 + 136) = 0;
  *((_BYTE *)v2 + 144) = 0;
  *((_BYTE *)v2 + 168) = 0;
  v2[4] = 0;
  v2[5] = 0;
  *((_BYTE *)v2 + 48) = 0;
  a1[1] = v2;
  v2[3] = 0;
  result = (char *)(v2 + 3);
  *a1 = result;
  return result;
}

uint64_t sub_239B3EE00(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;

  if (*(_BYTE *)(a1 + 976))
    sub_239A613DC(a1 + 112);
  v2 = *(std::__shared_weak_count **)(a1 + 104);
  if (!v2)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 88);
    if (!v5)
      goto LABEL_13;
  }
  else
  {
LABEL_7:
    v5 = *(std::__shared_weak_count **)(a1 + 88);
    if (!v5)
      goto LABEL_13;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_13:
  v8 = *(std::__shared_weak_count **)(a1 + 72);
  if (!v8)
    goto LABEL_17;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v11 = *(std::__shared_weak_count **)(a1 + 56);
    if (!v11)
      goto LABEL_23;
  }
  else
  {
LABEL_17:
    v11 = *(std::__shared_weak_count **)(a1 + 56);
    if (!v11)
      goto LABEL_23;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
LABEL_23:
  v14 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v14)
    goto LABEL_27;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v17 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v17)
      goto LABEL_33;
  }
  else
  {
LABEL_27:
    v17 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v17)
      goto LABEL_33;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
LABEL_33:
  v20 = *(std::__shared_weak_count **)(a1 + 8);
  if (v20)
  {
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  return a1;
}

uint64_t sub_239B3EFDC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  void *v20;

  v2 = *(std::__shared_weak_count **)(a1 + 552);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 536);
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 536);
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = *(std::__shared_weak_count **)(a1 + 520);
  if (!v8)
    goto LABEL_15;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v11 = *(std::__shared_weak_count **)(a1 + 504);
    if (!v11)
      goto LABEL_21;
  }
  else
  {
LABEL_15:
    v11 = *(std::__shared_weak_count **)(a1 + 504);
    if (!v11)
      goto LABEL_21;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
LABEL_21:
  v14 = *(std::__shared_weak_count **)(a1 + 488);
  if (!v14)
    goto LABEL_25;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v17 = *(std::__shared_weak_count **)(a1 + 472);
    if (!v17)
      goto LABEL_31;
  }
  else
  {
LABEL_25:
    v17 = *(std::__shared_weak_count **)(a1 + 472);
    if (!v17)
      goto LABEL_31;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
LABEL_31:
  if ((*(char *)(a1 + 463) & 0x80000000) == 0)
  {
    v20 = *(void **)(a1 + 48);
    if (!v20)
      goto LABEL_34;
    goto LABEL_33;
  }
  operator delete(*(void **)(a1 + 440));
  v20 = *(void **)(a1 + 48);
  if (v20)
  {
LABEL_33:
    *(_QWORD *)(a1 + 56) = v20;
    operator delete(v20);
  }
LABEL_34:
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  return a1;
}

uint64_t sub_239B3F1AC(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  if (!*(_QWORD *)(a1 + 56))
  {
    v3 = operator new();
    sub_2394988CC(v3);
    v4 = (_QWORD *)operator new();
    *v4 = &unk_250AF1978;
    v4[1] = 0;
    v4[2] = 0;
    v4[3] = v3;
    v5 = *(std::__shared_weak_count **)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v3;
    *(_QWORD *)(a1 + 64) = v4;
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
  sub_239458500((_QWORD *)(*(_QWORD *)(a1 + 56) + 16), (uint64_t)"Reconstructing meshes - step 1", 30);
  return a1;
}

void sub_239B3F280(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239B3F29C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

uint64_t sub_239B3F2C0(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  *(_QWORD *)(a1 + 45) = *(_QWORD *)((char *)a2 + 45);
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)a1 = v4;
  v7 = *(__int128 *)((char *)a2 + 56);
  *(_OWORD *)(a1 + 72) = *(__int128 *)((char *)a2 + 72);
  *(_OWORD *)(a1 + 56) = v7;
  if ((__int128 *)a1 != a2)
    sub_23945D3D0((_QWORD *)(a1 + 88), *((char **)a2 + 11), *((char **)a2 + 12), (uint64_t)(*((_QWORD *)a2 + 12) - *((_QWORD *)a2 + 11)) >> 3);
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(a2 + 7));
  v8 = *((_QWORD *)a2 + 21);
  v9 = *(__int128 *)((char *)a2 + 152);
  *(_OWORD *)(a1 + 136) = *(__int128 *)((char *)a2 + 136);
  *(_OWORD *)(a1 + 152) = v9;
  *(_QWORD *)(a1 + 168) = v8;
  v10 = a2[11];
  *(_QWORD *)(a1 + 189) = *(_QWORD *)((char *)a2 + 189);
  *(_OWORD *)(a1 + 176) = v10;
  return a1;
}

void sub_239B3F35C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  void *v19;

  if (*(unsigned __int8 *)(a1 + 392) == *(unsigned __int8 *)(a2 + 392))
  {
    if (*(_BYTE *)(a1 + 392))
    {
      v4 = *(_OWORD *)a2;
      v5 = *(_OWORD *)(a2 + 16);
      v6 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v6;
      *(_OWORD *)a1 = v4;
      *(_OWORD *)(a1 + 16) = v5;
      v7 = *(_OWORD *)(a2 + 64);
      v8 = *(_OWORD *)(a2 + 80);
      v9 = *(_OWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 80) = v8;
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      v10 = *(_QWORD *)(a2 + 144);
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = v10;
      if (a1 != a2)
      {
        sub_23942156C((_QWORD *)(a1 + 160), *(char **)(a2 + 160), *(char **)(a2 + 168), (uint64_t)(*(_QWORD *)(a2 + 168) - *(_QWORD *)(a2 + 160)) >> 2);
        *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
        v11 = *(_OWORD *)(a2 + 192);
        v12 = *(_OWORD *)(a2 + 208);
        v13 = *(_OWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 237) = *(_QWORD *)(a2 + 237);
        *(_OWORD *)(a1 + 208) = v12;
        *(_OWORD *)(a1 + 224) = v13;
        *(_OWORD *)(a1 + 192) = v11;
        v14 = *(_OWORD *)(a2 + 248);
        *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
        *(_OWORD *)(a1 + 248) = v14;
        sub_23945D3D0((_QWORD *)(a1 + 280), *(char **)(a2 + 280), *(char **)(a2 + 288), (uint64_t)(*(_QWORD *)(a2 + 288) - *(_QWORD *)(a2 + 280)) >> 3);
      }
      std::string::operator=((std::string *)(a1 + 304), (const std::string *)(a2 + 304));
      v15 = *(_QWORD *)(a2 + 360);
      v16 = *(_OWORD *)(a2 + 344);
      *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
      *(_OWORD *)(a1 + 344) = v16;
      *(_QWORD *)(a1 + 360) = v15;
      v17 = *(_OWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 381) = *(_QWORD *)(a2 + 381);
      *(_OWORD *)(a1 + 368) = v17;
    }
  }
  else if (*(_BYTE *)(a1 + 392))
  {
    if (*(char *)(a1 + 327) < 0)
      operator delete(*(void **)(a1 + 304));
    v18 = *(void **)(a1 + 280);
    if (v18)
    {
      *(_QWORD *)(a1 + 288) = v18;
      operator delete(v18);
    }
    v19 = *(void **)(a1 + 160);
    if (v19)
    {
      *(_QWORD *)(a1 + 168) = v19;
      operator delete(v19);
    }
    *(_BYTE *)(a1 + 392) = 0;
  }
  else
  {
    sub_239A60CB0(a1, (__int128 *)a2);
    *(_BYTE *)(a1 + 392) = 1;
  }
}

uint64_t sub_239B3F4D8(uint64_t a1)
{
  void *v2;
  void *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;

  if (!*(_BYTE *)(a1 + 424))
    goto LABEL_7;
  if ((*(char *)(a1 + 359) & 0x80000000) == 0)
  {
    v2 = *(void **)(a1 + 312);
    if (!v2)
      goto LABEL_5;
    goto LABEL_4;
  }
  operator delete(*(void **)(a1 + 336));
  v2 = *(void **)(a1 + 312);
  if (v2)
  {
LABEL_4:
    *(_QWORD *)(a1 + 320) = v2;
    operator delete(v2);
  }
LABEL_5:
  v3 = *(void **)(a1 + 192);
  if (v3)
  {
    *(_QWORD *)(a1 + 200) = v3;
    operator delete(v3);
  }
LABEL_7:
  v4 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v4)
    goto LABEL_11;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    v7 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v7)
      return a1;
  }
  else
  {
LABEL_11:
    v7 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v7)
      return a1;
  }
  v8 = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  return a1;
}

uint64_t sub_239B3F5B8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  void *v17;

  v2 = *(std::__shared_weak_count **)(a1 + 272);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 256);
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 256);
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = *(std::__shared_weak_count **)(a1 + 240);
  if (!v8)
    goto LABEL_15;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v11 = *(std::__shared_weak_count **)(a1 + 224);
    if (!v11)
      goto LABEL_21;
  }
  else
  {
LABEL_15:
    v11 = *(std::__shared_weak_count **)(a1 + 224);
    if (!v11)
      goto LABEL_21;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
LABEL_21:
  v14 = *(std::__shared_weak_count **)(a1 + 208);
  if (!v14)
    goto LABEL_25;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (v16)
  {
LABEL_25:
    if ((*(char *)(a1 + 135) & 0x80000000) == 0)
      goto LABEL_26;
LABEL_30:
    operator delete(*(void **)(a1 + 112));
    v17 = *(void **)(a1 + 88);
    if (!v17)
      return a1;
    goto LABEL_27;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (*(char *)(a1 + 135) < 0)
    goto LABEL_30;
LABEL_26:
  v17 = *(void **)(a1 + 88);
  if (v17)
  {
LABEL_27:
    *(_QWORD *)(a1 + 96) = v17;
    operator delete(v17);
  }
  return a1;
}

uint64_t sub_239B3F73C(uint64_t a1, char *__s)
{
  size_t v4;
  uint64_t v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  if (!*(_QWORD *)(a1 + 56))
  {
    v6 = operator new();
    sub_2394988CC(v6);
    v7 = (_QWORD *)operator new();
    *v7 = &unk_250AF1978;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = v6;
    v8 = *(std::__shared_weak_count **)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v7;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  v4 = strlen(__s);
  sub_239458500((_QWORD *)(*(_QWORD *)(a1 + 56) + 16), (uint64_t)__s, v4);
  return a1;
}

void sub_239B3F81C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239B3F838(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

uint64_t sub_239B3F85C(uint64_t result, uint64_t a2)
{
  if (*(unsigned __int8 *)(result + 360) == *(unsigned __int8 *)(a2 + 360))
  {
    if (*(_BYTE *)(result + 360))
      return sub_239B401B0(result, (__int128 *)a2);
  }
  else if (*(_BYTE *)(result + 360))
  {
    result = sub_239B3F8AC(result);
    *(_BYTE *)(result + 360) = 0;
  }
  else
  {
    result = sub_239A60E98(result, (__int128 *)a2);
    *(_BYTE *)(result + 360) = 1;
  }
  return result;
}

uint64_t sub_239B3F8AC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = *(void **)(a1 + 296);
  if (v2)
  {
    *(_QWORD *)(a1 + 304) = v2;
    operator delete(v2);
  }
  if ((*(char *)(a1 + 295) & 0x80000000) == 0)
  {
    v3 = *(void **)(a1 + 216);
    if (!v3)
      goto LABEL_6;
    goto LABEL_5;
  }
  operator delete(*(void **)(a1 + 272));
  v3 = *(void **)(a1 + 216);
  if (v3)
  {
LABEL_5:
    *(_QWORD *)(a1 + 224) = v3;
    operator delete(v3);
  }
LABEL_6:
  v4 = *(void **)(a1 + 112);
  if (v4)
  {
    *(_QWORD *)(a1 + 120) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 88);
  if (v5)
  {
    *(_QWORD *)(a1 + 96) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 64);
  if (v6)
  {
    *(_QWORD *)(a1 + 72) = v6;
    operator delete(v6);
  }
  v7 = *(void **)(a1 + 40);
  if (v7)
  {
    *(_QWORD *)(a1 + 48) = v7;
    operator delete(v7);
  }
  return a1;
}

uint64_t sub_239B3F948(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  void *v14;

  if (*(char *)(a1 + 199) < 0)
  {
    operator delete(*(void **)(a1 + 176));
    v2 = *(std::__shared_weak_count **)(a1 + 168);
    if (!v2)
      goto LABEL_8;
  }
  else
  {
    v2 = *(std::__shared_weak_count **)(a1 + 168);
    if (!v2)
      goto LABEL_8;
  }
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_8:
    v5 = *(std::__shared_weak_count **)(a1 + 152);
    if (!v5)
      goto LABEL_14;
    goto LABEL_9;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(std::__shared_weak_count **)(a1 + 152);
  if (!v5)
    goto LABEL_14;
LABEL_9:
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_14:
  v8 = *(std::__shared_weak_count **)(a1 + 136);
  if (!v8)
    goto LABEL_18;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v11 = *(std::__shared_weak_count **)(a1 + 120);
    if (!v11)
      goto LABEL_24;
  }
  else
  {
LABEL_18:
    v11 = *(std::__shared_weak_count **)(a1 + 120);
    if (!v11)
      goto LABEL_24;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
LABEL_24:
  v14 = *(void **)(a1 + 48);
  if (v14)
  {
    *(_QWORD *)(a1 + 56) = v14;
    operator delete(v14);
  }
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  return a1;
}

uint64_t sub_239B3FA9C(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)a1 = v4;
  sub_239586B60(a1 + 56, (uint64_t)a2 + 56);
  if ((__int128 *)a1 != a2)
    sub_23945D3D0((_QWORD *)(a1 + 456), *((char **)a2 + 57), *((char **)a2 + 58), (uint64_t)(*((_QWORD *)a2 + 58) - *((_QWORD *)a2 + 57)) >> 3);
  std::string::operator=((std::string *)(a1 + 480), (const std::string *)a2 + 20);
  *(_BYTE *)(a1 + 504) = *((_BYTE *)a2 + 504);
  std::string::operator=((std::string *)(a1 + 512), (const std::string *)(a2 + 32));
  v7 = *((_QWORD *)a2 + 67);
  *(_DWORD *)(a1 + 544) = *((_DWORD *)a2 + 136);
  *(_QWORD *)(a1 + 536) = v7;
  *(_BYTE *)(a1 + 552) = *((_BYTE *)a2 + 552);
  return a1;
}

void sub_239B3FB34(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;

  if (*(unsigned __int8 *)(a1 + 1032) == *(unsigned __int8 *)(a2 + 1032))
  {
    if (*(_BYTE *)(a1 + 1032))
      sub_239B3FF0C(a1, a2);
    return;
  }
  if (!*(_BYTE *)(a1 + 1032))
  {
    sub_239B40018(a1, a2);
    *(_BYTE *)(a1 + 1032) = 1;
    return;
  }
  if ((*(char *)(a1 + 951) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 919) & 0x80000000) == 0)
      goto LABEL_7;
LABEL_15:
    operator delete(*(void **)(a1 + 896));
    v3 = *(void **)(a1 + 872);
    if (!v3)
      goto LABEL_9;
    goto LABEL_8;
  }
  operator delete(*(void **)(a1 + 928));
  if (*(char *)(a1 + 919) < 0)
    goto LABEL_15;
LABEL_7:
  v3 = *(void **)(a1 + 872);
  if (v3)
  {
LABEL_8:
    *(_QWORD *)(a1 + 880) = v3;
    operator delete(v3);
  }
LABEL_9:
  sub_239586EB4(a1 + 472);
  v4 = *(void **)(a1 + 384);
  if (v4)
  {
    *(_QWORD *)(a1 + 392) = v4;
    operator delete(v4);
  }
  *(_BYTE *)(a1 + 1032) = 0;
}

uint64_t sub_239B3FBEC(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void **v7;
  void **v8;
  void **v9;
  void **v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;

  if (!*(_BYTE *)(a1 + 1224))
    goto LABEL_8;
  if (*(char *)(a1 + 1143) < 0)
  {
    operator delete(*(void **)(a1 + 1120));
    if ((*(char *)(a1 + 1111) & 0x80000000) == 0)
    {
LABEL_4:
      v2 = *(void **)(a1 + 1064);
      if (!v2)
        goto LABEL_6;
      goto LABEL_5;
    }
  }
  else if ((*(char *)(a1 + 1111) & 0x80000000) == 0)
  {
    goto LABEL_4;
  }
  operator delete(*(void **)(a1 + 1088));
  v2 = *(void **)(a1 + 1064);
  if (v2)
  {
LABEL_5:
    *(_QWORD *)(a1 + 1072) = v2;
    operator delete(v2);
  }
LABEL_6:
  sub_239586EB4(a1 + 664);
  v3 = *(void **)(a1 + 576);
  if (v3)
  {
    *(_QWORD *)(a1 + 584) = v3;
    operator delete(v3);
  }
LABEL_8:
  v4 = *(_QWORD *)(a1 + 168);
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + 176);
    v6 = *(void **)(a1 + 168);
    if (v5 != v4)
    {
      do
      {
        if (*(char *)(v5 - 1) < 0)
          operator delete(*(void **)(v5 - 24));
        v5 -= 24;
      }
      while (v5 != v4);
      v6 = *(void **)(a1 + 168);
    }
    *(_QWORD *)(a1 + 176) = v4;
    operator delete(v6);
  }
  if (*(char *)(a1 + 167) < 0)
  {
    operator delete(*(void **)(a1 + 144));
    if ((*(char *)(a1 + 143) & 0x80000000) == 0)
    {
LABEL_18:
      v7 = *(void ***)(a1 + 96);
      if (!v7)
        goto LABEL_19;
      goto LABEL_26;
    }
  }
  else if ((*(char *)(a1 + 143) & 0x80000000) == 0)
  {
    goto LABEL_18;
  }
  operator delete(*(void **)(a1 + 120));
  v7 = *(void ***)(a1 + 96);
  if (!v7)
  {
LABEL_19:
    v8 = *(void ***)(a1 + 72);
    if (!v8)
      goto LABEL_20;
    goto LABEL_33;
  }
LABEL_26:
  v10 = *(void ***)(a1 + 104);
  v11 = v7;
  if (v10 != v7)
  {
    do
    {
      if (*((char *)v10 - 1) < 0)
        operator delete(*(v10 - 3));
      v10 -= 3;
    }
    while (v10 != v7);
    v11 = *(void ***)(a1 + 96);
  }
  *(_QWORD *)(a1 + 104) = v7;
  operator delete(v11);
  v8 = *(void ***)(a1 + 72);
  if (!v8)
  {
LABEL_20:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_21;
    goto LABEL_40;
  }
LABEL_33:
  v12 = *(void ***)(a1 + 80);
  v13 = v8;
  if (v12 != v8)
  {
    do
    {
      if (*((char *)v12 - 1) < 0)
        operator delete(*(v12 - 3));
      v12 -= 3;
    }
    while (v12 != v8);
    v13 = *(void ***)(a1 + 72);
  }
  *(_QWORD *)(a1 + 80) = v8;
  operator delete(v13);
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
LABEL_21:
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
      goto LABEL_22;
LABEL_41:
    operator delete(*(void **)(a1 + 24));
    v9 = *(void ***)a1;
    if (!*(_QWORD *)a1)
      return a1;
    goto LABEL_42;
  }
LABEL_40:
  operator delete(*(void **)(a1 + 48));
  if (*(char *)(a1 + 47) < 0)
    goto LABEL_41;
LABEL_22:
  v9 = *(void ***)a1;
  if (!*(_QWORD *)a1)
    return a1;
LABEL_42:
  v14 = *(void ***)(a1 + 8);
  v15 = v9;
  if (v14 != v9)
  {
    do
    {
      if (*((char *)v14 - 1) < 0)
        operator delete(*(v14 - 3));
      v14 -= 3;
    }
    while (v14 != v9);
    v15 = *(void ***)a1;
  }
  *(_QWORD *)(a1 + 8) = v9;
  operator delete(v15);
  return a1;
}

uint64_t sub_239B3FE0C(uint64_t a1)
{
  void *v2;

  if (*(char *)(a1 + 631) < 0)
  {
    operator delete(*(void **)(a1 + 608));
    if ((*(char *)(a1 + 607) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 583) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((*(char *)(a1 + 607) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 584));
  if ((*(char *)(a1 + 583) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 535) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(*(void **)(a1 + 560));
  if ((*(char *)(a1 + 535) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(a1 + 503) & 0x80000000) == 0)
      goto LABEL_6;
LABEL_13:
    operator delete(*(void **)(a1 + 480));
    v2 = *(void **)(a1 + 456);
    if (!v2)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_12:
  operator delete(*(void **)(a1 + 512));
  if (*(char *)(a1 + 503) < 0)
    goto LABEL_13;
LABEL_6:
  v2 = *(void **)(a1 + 456);
  if (v2)
  {
LABEL_7:
    *(_QWORD *)(a1 + 464) = v2;
    operator delete(v2);
  }
LABEL_8:
  sub_239586EB4(a1 + 56);
  return a1;
}

uint64_t sub_239B3FEC0(uint64_t a1)
{
  void *v2;

  if (*(char *)(a1 + 135) < 0)
  {
    operator delete(*(void **)(a1 + 112));
    v2 = *(void **)(a1 + 88);
    if (!v2)
      return a1;
    goto LABEL_3;
  }
  v2 = *(void **)(a1 + 88);
  if (v2)
  {
LABEL_3:
    *(_QWORD *)(a1 + 96) = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_239B3FF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  memcpy((void *)a1, (const void *)a2, 0x158uLL);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  v4 = *(_QWORD *)(a2 + 368);
  *(_DWORD *)(a1 + 376) = *(_DWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = v4;
  if (a1 == a2)
  {
    sub_239586B60(a1 + 472, a1 + 472);
  }
  else
  {
    sub_23942156C((_QWORD *)(a1 + 384), *(char **)(a2 + 384), *(char **)(a2 + 392), (uint64_t)(*(_QWORD *)(a2 + 392) - *(_QWORD *)(a2 + 384)) >> 2);
    *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
    v5 = *(_OWORD *)(a2 + 416);
    v6 = *(_OWORD *)(a2 + 432);
    v7 = *(_OWORD *)(a2 + 448);
    *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
    *(_OWORD *)(a1 + 432) = v6;
    *(_OWORD *)(a1 + 448) = v7;
    *(_OWORD *)(a1 + 416) = v5;
    sub_239586B60(a1 + 472, a2 + 472);
    sub_23945D3D0((_QWORD *)(a1 + 872), *(char **)(a2 + 872), *(char **)(a2 + 880), (uint64_t)(*(_QWORD *)(a2 + 880) - *(_QWORD *)(a2 + 872)) >> 3);
  }
  std::string::operator=((std::string *)(a1 + 896), (const std::string *)(a2 + 896));
  *(_BYTE *)(a1 + 920) = *(_BYTE *)(a2 + 920);
  std::string::operator=((std::string *)(a1 + 928), (const std::string *)(a2 + 928));
  v8 = *(_QWORD *)(a2 + 952);
  *(_DWORD *)(a1 + 960) = *(_DWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 952) = v8;
  *(_BYTE *)(a1 + 968) = *(_BYTE *)(a2 + 968);
  v9 = *(_OWORD *)(a2 + 976);
  v10 = *(_OWORD *)(a2 + 992);
  v11 = *(_OWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 992) = v10;
  *(_OWORD *)(a1 + 1008) = v11;
  *(_OWORD *)(a1 + 976) = v9;
  return a1;
}

uint64_t sub_239B40018(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  _BYTE *v6;
  _BYTE *v7;
  int64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  memcpy((void *)a1, (const void *)a2, 0x158uLL);
  v4 = *(_DWORD *)(a2 + 376);
  v5 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v5;
  *(_DWORD *)(a1 + 376) = v4;
  *(_QWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 400) = 0;
  *(_QWORD *)(a1 + 384) = 0;
  v7 = *(_BYTE **)(a2 + 384);
  v6 = *(_BYTE **)(a2 + 392);
  v8 = v6 - v7;
  if (v6 != v7)
  {
    if (v8 < 0)
      sub_2394189F8();
    v9 = (char *)operator new(v6 - v7);
    *(_QWORD *)(a1 + 384) = v9;
    *(_QWORD *)(a1 + 392) = v9;
    v10 = &v9[4 * (v8 >> 2)];
    *(_QWORD *)(a1 + 400) = v10;
    memcpy(v9, v7, v8);
    *(_QWORD *)(a1 + 392) = v10;
  }
  *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
  sub_239973BF0(a1 + 416, (__int128 *)(a2 + 416));
  *(_BYTE *)(a1 + 968) = *(_BYTE *)(a2 + 968);
  v11 = *(_OWORD *)(a2 + 976);
  v12 = *(_OWORD *)(a2 + 992);
  v13 = *(_OWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 992) = v12;
  *(_OWORD *)(a1 + 1008) = v13;
  *(_OWORD *)(a1 + 976) = v11;
  return a1;
}

void sub_239B400F0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 392) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_239B40114()
{
  JUMPOUT(0x23B83E31CLL);
}

_WORD *sub_239B40128(uint64_t a1)
{
  _WORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_250AF5FC8;
  result[4] = *(_WORD *)(a1 + 8);
  return result;
}

uint64_t sub_239B40160(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_250AF5FC8;
  *(_WORD *)(a2 + 8) = *(_WORD *)(result + 8);
  return result;
}

uint64_t sub_239B40180()
{
  return kdebug_trace();
}

uint64_t sub_239B401B0(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  if ((__int128 *)a1 != a2)
  {
    sub_23942156C((_QWORD *)(a1 + 40), *((char **)a2 + 5), *((char **)a2 + 6), (uint64_t)(*((_QWORD *)a2 + 6) - *((_QWORD *)a2 + 5)) >> 2);
    sub_23942156C((_QWORD *)(a1 + 64), *((char **)a2 + 8), *((char **)a2 + 9), (uint64_t)(*((_QWORD *)a2 + 9) - *((_QWORD *)a2 + 8)) >> 2);
    sub_23942156C((_QWORD *)(a1 + 88), *((char **)a2 + 11), *((char **)a2 + 12), (uint64_t)(*((_QWORD *)a2 + 12) - *((_QWORD *)a2 + 11)) >> 2);
    sub_23942156C((_QWORD *)(a1 + 112), *((char **)a2 + 14), *((char **)a2 + 15), (uint64_t)(*((_QWORD *)a2 + 15) - *((_QWORD *)a2 + 14)) >> 2);
  }
  v6 = *(__int128 *)((char *)a2 + 136);
  v7 = *(__int128 *)((char *)a2 + 152);
  *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
  *(_OWORD *)(a1 + 152) = v7;
  *(_OWORD *)(a1 + 136) = v6;
  *(_QWORD *)(a1 + 176) = *((_QWORD *)a2 + 22);
  *(_OWORD *)(a1 + 184) = *(__int128 *)((char *)a2 + 184);
  v8 = *((_QWORD *)a2 + 25);
  *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
  *(_QWORD *)(a1 + 200) = v8;
  if ((__int128 *)a1 == a2)
  {
    std::string::operator=((std::string *)(a1 + 272), (const std::string *)(a1 + 272));
  }
  else
  {
    sub_23942156C((_QWORD *)(a1 + 216), *((char **)a2 + 27), *((char **)a2 + 28), (uint64_t)(*((_QWORD *)a2 + 28) - *((_QWORD *)a2 + 27)) >> 2);
    *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
    v9 = *(__int128 *)((char *)a2 + 248);
    *(_QWORD *)(a1 + 261) = *(_QWORD *)((char *)a2 + 261);
    *(_OWORD *)(a1 + 248) = v9;
    std::string::operator=((std::string *)(a1 + 272), (const std::string *)(a2 + 17));
    sub_23945D3D0((_QWORD *)(a1 + 296), *((char **)a2 + 37), *((char **)a2 + 38), (uint64_t)(*((_QWORD *)a2 + 38) - *((_QWORD *)a2 + 37)) >> 3);
  }
  v10 = a2[20];
  v11 = a2[21];
  *(_WORD *)(a1 + 352) = *((_WORD *)a2 + 176);
  *(_OWORD *)(a1 + 320) = v10;
  *(_OWORD *)(a1 + 336) = v11;
  return a1;
}

void sub_239B402F4()
{
  JUMPOUT(0x23B83E31CLL);
}

_WORD *sub_239B40308(uint64_t a1)
{
  _WORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_250AF5F80;
  result[4] = *(_WORD *)(a1 + 8);
  return result;
}

uint64_t sub_239B40340(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_250AF5F80;
  *(_WORD *)(a2 + 8) = *(_WORD *)(result + 8);
  return result;
}

uint64_t sub_239B40360()
{
  return kdebug_trace();
}

void sub_239B40394()
{
  JUMPOUT(0x23B83E31CLL);
}

_WORD *sub_239B403A8(uint64_t a1)
{
  _WORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_250AF5F38;
  result[4] = *(_WORD *)(a1 + 8);
  return result;
}

uint64_t sub_239B403E0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_250AF5F38;
  *(_WORD *)(a2 + 8) = *(_WORD *)(result + 8);
  return result;
}

uint64_t sub_239B40400()
{
  return kdebug_trace();
}

uint64_t sub_239B40430(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 654, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 100;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v24 = v3;
    goto LABEL_12;
  }
  v24 = &v23;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA690;
  *(_QWORD *)&v12 = sub_239B407F0((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239B40A0C(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239B40634(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B40640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,_QWORD *a43)
{
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  if (a43 == v46)
  {
    v48 = 4;
  }
  else
  {
    if (!a43)
      goto LABEL_6;
    v48 = 5;
    v46 = a43;
  }
  (*(void (**)(_QWORD *))(*v46 + 8 * v48))(v46);
LABEL_6:
  if (a39 == v45)
  {
    v49 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_11;
    v49 = 5;
    v45 = a39;
  }
  (*(void (**)(_QWORD *))(*v45 + 8 * v49))(v45);
LABEL_11:
  sub_239A8303C(v44);
  sub_239A83110(v43);
  v50 = a20;
  if (a20 == &a17)
  {
    v51 = 4;
    v50 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_16;
    v51 = 5;
  }
  (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_16:
  v52 = a14;
  if (a14 == &a11)
  {
    v53 = 4;
    v52 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v53 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v52 + 8 * v53))();
  _Unwind_Resume(a1);
}

void sub_239B40750()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B40764(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF5EF0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B4079C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF5EF0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B407BC(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

uint64_t sub_239B407F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    v4 = (_QWORD *)(a1 + 40);
    goto LABEL_5;
  }
  if (v5 != a2 + 16)
  {
    *(_QWORD *)(a1 + 40) = v5;
LABEL_5:
    *v4 = 0;
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 40) = a1 + 16;
  (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 24))(*v4);
LABEL_7:
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = (_QWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (!v7)
  {
    v6 = (_QWORD *)(a1 + 104);
    goto LABEL_11;
  }
  if (v7 != a2 + 80)
  {
    *(_QWORD *)(a1 + 104) = v7;
LABEL_11:
    *v6 = 0;
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 104) = a1 + 80;
  (*(void (**)(_QWORD))(*(_QWORD *)*v6 + 24))(*v6);
LABEL_13:
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v8 = (_QWORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 120) = 0;
  if (!v9)
  {
    v8 = (_QWORD *)(a1 + 160);
    goto LABEL_17;
  }
  if (v9 != a2 + 136)
  {
    *(_QWORD *)(a1 + 160) = v9;
LABEL_17:
    *v8 = 0;
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 160) = a1 + 136;
  (*(void (**)(_QWORD))(*(_QWORD *)*v8 + 24))(*v8);
LABEL_19:
  v10 = (_QWORD *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 192);
  if (!v11)
  {
    v10 = (_QWORD *)(a1 + 192);
    goto LABEL_23;
  }
  if (v11 != a2 + 168)
  {
    *(_QWORD *)(a1 + 192) = v11;
LABEL_23:
    *v10 = 0;
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 192) = a1 + 168;
  (*(void (**)(_QWORD))(*(_QWORD *)*v10 + 24))(*v10);
LABEL_25:
  v12 = (_QWORD *)(a2 + 224);
  v13 = *(_QWORD *)(a2 + 224);
  if (!v13)
  {
    v12 = (_QWORD *)(a1 + 224);
    goto LABEL_29;
  }
  if (v13 != a2 + 200)
  {
    *(_QWORD *)(a1 + 224) = v13;
LABEL_29:
    *v12 = 0;
    goto LABEL_31;
  }
  *(_QWORD *)(a1 + 224) = a1 + 200;
  (*(void (**)(_QWORD))(*(_QWORD *)*v12 + 24))(*v12);
LABEL_31:
  v14 = *(_QWORD *)(a2 + 256);
  if (v14)
  {
    v15 = (_QWORD *)(a2 + 256);
    if (v14 == a2 + 232)
    {
      *(_QWORD *)(a1 + 256) = a1 + 232;
      (*(void (**)(_QWORD))(*(_QWORD *)*v15 + 24))(*v15);
      return a1;
    }
    *(_QWORD *)(a1 + 256) = v14;
  }
  else
  {
    v15 = (_QWORD *)(a1 + 256);
  }
  *v15 = 0;
  return a1;
}

uint64_t sub_239B40A0C(unsigned int *a1, _OWORD *a2)
{
  pthread_mutex_t *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  void *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  BOOL v36;
  int64_t v37;
  unint64_t v38;
  char *v39;
  void *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  _OWORD *v54;
  uint64_t v55;
  __int128 v56;
  unint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  _OWORD *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  size_t v103;
  char *v104;
  unint64_t v105;
  char *v106;
  char *v107;
  int64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 *v114;
  _OWORD *v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  void *v119;
  _OWORD *v120;

  v4 = (pthread_mutex_t *)(a1 + 44);
  sub_2397A1694((pthread_mutex_t *)(a1 + 44));
  v5 = *((_QWORD *)a1 + 6);
  if (v5 >= *a1)
  {
    while (!*((_BYTE *)a1 + 56))
    {
      ++*((_QWORD *)a1 + 8);
      pthread_cond_wait((pthread_cond_t *)(a1 + 20), v4);
      --*((_QWORD *)a1 + 8);
      v5 = *((_QWORD *)a1 + 6);
      if (v5 < *a1)
        goto LABEL_4;
    }
    goto LABEL_5;
  }
LABEL_4:
  if (*((_BYTE *)a1 + 56))
  {
LABEL_5:
    v6 = 0;
    goto LABEL_100;
  }
  v7 = (char *)*((_QWORD *)a1 + 3);
  v8 = (char *)*((_QWORD *)a1 + 2);
  v9 = v7 - v8;
  if (v7 == v8)
    v10 = 0;
  else
    v10 = 32 * (v7 - v8) - 1;
  v11 = *((_QWORD *)a1 + 5);
  v12 = v11 + v5;
  if (v10 == v11 + v5)
  {
    if (v11 >= 0x100)
    {
      *((_QWORD *)a1 + 5) = v11 - 256;
      v13 = v8 + 8;
      v14 = *(_QWORD *)v8;
      *((_QWORD *)a1 + 2) = v8 + 8;
      if (*((char **)a1 + 4) != v7)
      {
LABEL_92:
        *(_QWORD *)v7 = v14;
        goto LABEL_93;
      }
      v15 = (char *)*((_QWORD *)a1 + 1);
      if (v13 > v15)
      {
        v16 = (v13 - v15) >> 3;
        if (v16 >= -1)
          v17 = v16 + 1;
        else
          v17 = v16 + 2;
        v18 = v17 >> 1;
        v19 = -v18;
        v20 = &v13[-8 * v18];
        v21 = v7 - v13;
        if (v7 == v13)
        {
          v22 = v7;
        }
        else
        {
          memmove(&v13[-8 * v18], v13, v7 - v13);
          v22 = (char *)*((_QWORD *)a1 + 2);
        }
        v7 = &v20[v21];
        *((_QWORD *)a1 + 2) = &v22[8 * v19];
        *((_QWORD *)a1 + 3) = &v20[v21];
        goto LABEL_92;
      }
      if (v7 == v15)
        v33 = 1;
      else
        v33 = (v7 - v15) >> 2;
      if (!(v33 >> 61))
      {
        v34 = (char *)operator new(8 * v33);
        v35 = &v34[8 * (v33 >> 2)];
        v37 = v7 - v13;
        v36 = v7 == v13;
        v7 = v35;
        if (v36)
          goto LABEL_90;
        v7 = &v35[v37 & 0xFFFFFFFFFFFFFFF8];
        v38 = v37 - 8;
        if (v38 >= 0x38)
        {
          v81 = &v34[8 * (v33 >> 2)];
          v39 = v81;
          if ((unint64_t)(v81 - v13) >= 0x20)
          {
            v82 = (v38 >> 3) + 1;
            v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
            v39 = &v35[v83];
            v84 = (__int128 *)(v8 + 24);
            v85 = v81 + 16;
            v86 = v82 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v87 = *v84;
              *(v85 - 1) = *(v84 - 1);
              *v85 = v87;
              v84 += 2;
              v85 += 2;
              v86 -= 4;
            }
            while (v86);
            if (v82 == (v82 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_90:
              *((_QWORD *)a1 + 1) = v34;
              *((_QWORD *)a1 + 2) = v35;
              *((_QWORD *)a1 + 3) = v7;
              *((_QWORD *)a1 + 4) = &v34[8 * v33];
              if (v15)
              {
                operator delete(v15);
                v7 = (char *)*((_QWORD *)a1 + 3);
              }
              goto LABEL_92;
            }
            v13 += v83;
          }
        }
        else
        {
          v39 = &v34[8 * (v33 >> 2)];
        }
        do
        {
          v88 = *(_QWORD *)v13;
          v13 += 8;
          *(_QWORD *)v39 = v88;
          v39 += 8;
        }
        while (v39 != v7);
        goto LABEL_90;
      }
LABEL_130:
      sub_239418A80();
    }
    v23 = v9 >> 3;
    v24 = (char *)*((_QWORD *)a1 + 4);
    v25 = (char *)*((_QWORD *)a1 + 1);
    v26 = v24 - v25;
    if (v9 >> 3 < (unint64_t)((v24 - v25) >> 3))
    {
      if (v24 != v7)
      {
        *(_QWORD *)v7 = operator new(0x1000uLL);
LABEL_93:
        *((_QWORD *)a1 + 3) += 8;
LABEL_94:
        v8 = (char *)*((_QWORD *)a1 + 2);
        v5 = *((_QWORD *)a1 + 6);
        v12 = v5 + *((_QWORD *)a1 + 5);
        goto LABEL_95;
      }
      v40 = operator new(0x1000uLL);
      v41 = v8;
      if (v25 != v8)
      {
LABEL_105:
        *((_QWORD *)v41 - 1) = v40;
        v94 = (char *)*((_QWORD *)a1 + 2);
        v95 = (char *)*((_QWORD *)a1 + 3);
        *((_QWORD *)a1 + 2) = v94 - 8;
        v96 = *((_QWORD *)v94 - 1);
        *((_QWORD *)a1 + 2) = v94;
        if (v95 != *((char **)a1 + 4))
        {
LABEL_106:
          *(_QWORD *)v95 = v96;
          goto LABEL_93;
        }
        v97 = (char *)*((_QWORD *)a1 + 1);
        if (v94 > v97)
        {
          v98 = (v94 - v97) >> 3;
          if (v98 >= -1)
            v99 = v98 + 1;
          else
            v99 = v98 + 2;
          v100 = v99 >> 1;
          v101 = -v100;
          v102 = &v94[-8 * v100];
          v103 = v95 - v94;
          if (v103)
          {
            memmove(&v94[-8 * v100], v94, v103);
            v94 = (char *)*((_QWORD *)a1 + 2);
          }
          v104 = &v102[v103];
          *((_QWORD *)a1 + 2) = &v94[8 * v101];
          *((_QWORD *)a1 + 3) = v104;
          *(_QWORD *)v104 = v96;
          goto LABEL_93;
        }
        if (v95 == v97)
          v105 = 1;
        else
          v105 = (v95 - v97) >> 2;
        if (v105 >> 61)
          goto LABEL_130;
        v106 = (char *)operator new(8 * v105);
        v107 = &v106[8 * (v105 >> 2)];
        v108 = v95 - v94;
        v36 = v95 == v94;
        v95 = v107;
        if (!v36)
        {
          v95 = &v107[v108 & 0xFFFFFFFFFFFFFFF8];
          v109 = v108 - 8;
          if (v109 < 0x38)
          {
            v110 = &v106[8 * (v105 >> 2)];
            goto LABEL_126;
          }
          v111 = &v106[8 * (v105 >> 2)];
          v110 = v111;
          if ((unint64_t)(v111 - v94) < 0x20)
          {
            do
            {
LABEL_126:
              v118 = *(_QWORD *)v94;
              v94 += 8;
              *(_QWORD *)v110 = v118;
              v110 += 8;
            }
            while (v110 != v95);
            goto LABEL_127;
          }
          v112 = (v109 >> 3) + 1;
          v113 = 8 * (v112 & 0x3FFFFFFFFFFFFFFCLL);
          v110 = &v107[v113];
          v114 = (__int128 *)(v94 + 16);
          v115 = v111 + 16;
          v116 = v112 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v117 = *v114;
            *(v115 - 1) = *(v114 - 1);
            *v115 = v117;
            v114 += 2;
            v115 += 2;
            v116 -= 4;
          }
          while (v116);
          if (v112 != (v112 & 0x3FFFFFFFFFFFFFFCLL))
          {
            v94 += v113;
            goto LABEL_126;
          }
        }
LABEL_127:
        *((_QWORD *)a1 + 1) = v106;
        *((_QWORD *)a1 + 2) = v107;
        *((_QWORD *)a1 + 3) = v95;
        *((_QWORD *)a1 + 4) = &v106[8 * v105];
        if (v97)
        {
          operator delete(v97);
          v95 = (char *)*((_QWORD *)a1 + 3);
        }
        goto LABEL_106;
      }
      if (v7 == v8)
        v42 = 1;
      else
        v42 = v26 >> 2;
      if (v42 >> 61)
        goto LABEL_130;
      v43 = (char *)operator new(8 * v42);
      v44 = (v42 + 3) >> 2;
      v41 = &v43[8 * v44];
      v45 = &v43[8 * v42];
      v46 = v41;
      if (v7 != v8)
      {
        v46 = &v41[(v7 - v25) & 0xFFFFFFFFFFFFFFF8];
        v47 = v7 - v25 - 8;
        v48 = &v43[8 * v44];
        v49 = v8;
        if (v47 > 0x37)
        {
          v50 = &v43[8 * v44];
          v48 = v50;
          v49 = v8;
          if ((unint64_t)(v50 - v25) >= 0x20)
          {
            v51 = (v47 >> 3) + 1;
            v52 = 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
            v48 = &v41[v52];
            v53 = (__int128 *)(v8 + 16);
            v54 = v50 + 16;
            v55 = v51 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v56 = *v53;
              *(v54 - 1) = *(v53 - 1);
              *v54 = v56;
              v53 += 2;
              v54 += 2;
              v55 -= 4;
            }
            while (v55);
            if (v51 == (v51 & 0x3FFFFFFFFFFFFFFCLL))
            {
              *((_QWORD *)a1 + 1) = v43;
              *((_QWORD *)a1 + 2) = v41;
              *((_QWORD *)a1 + 3) = v46;
              *((_QWORD *)a1 + 4) = v45;
LABEL_104:
              operator delete(v8);
              v41 = (char *)*((_QWORD *)a1 + 2);
              goto LABEL_105;
            }
            v49 = &v8[v52];
          }
        }
        do
        {
          v93 = *(_QWORD *)v49;
          v49 += 8;
          *(_QWORD *)v48 = v93;
          v48 += 8;
        }
        while (v48 != v46);
      }
      *((_QWORD *)a1 + 1) = v43;
      *((_QWORD *)a1 + 2) = v41;
      *((_QWORD *)a1 + 3) = v46;
      *((_QWORD *)a1 + 4) = v45;
      if (!v8)
        goto LABEL_105;
      goto LABEL_104;
    }
    if (v24 == v25)
      v27 = 1;
    else
      v27 = v26 >> 2;
    if (v27 >> 61)
      goto LABEL_130;
    v28 = (char *)operator new(8 * v27);
    v120 = a2;
    v29 = operator new(0x1000uLL);
    v30 = &v28[8 * v23];
    v31 = &v28[8 * v27];
    if (v23 == v27)
    {
      v119 = v29;
      if (v9 < 1)
      {
        if (v7 == v8)
          v57 = 1;
        else
          v57 = v9 >> 2;
        if (v57 >> 61)
          sub_239418A80();
        v30 = (char *)operator new(8 * v57);
        v31 = &v30[8 * v57];
        operator delete(v28);
        v8 = (char *)*((_QWORD *)a1 + 2);
        v7 = (char *)*((_QWORD *)a1 + 3);
        v28 = v30;
      }
      else
      {
        v32 = v23 + 2;
        if (v23 >= -1)
          v32 = v23 + 1;
        v30 -= 8 * (v32 >> 1);
      }
      v29 = v119;
    }
    *(_QWORD *)v30 = v29;
    v58 = v30 + 8;
    if (v7 == v8)
    {
      v59 = v30;
      v60 = v30 + 8;
LABEL_57:
      v61 = (void *)*((_QWORD *)a1 + 1);
      *((_QWORD *)a1 + 1) = v28;
      *((_QWORD *)a1 + 2) = v59;
      *((_QWORD *)a1 + 3) = v60;
      *((_QWORD *)a1 + 4) = v31;
      a2 = v120;
      if (v61)
        operator delete(v61);
      goto LABEL_94;
    }
    while (v30 != v28)
    {
      v62 = v30;
      v60 = v58;
LABEL_60:
      v63 = *((_QWORD *)v7 - 1);
      v7 -= 8;
      *((_QWORD *)v62 - 1) = v63;
      v59 = v62 - 8;
      v58 = v60;
      v30 = v59;
      if (v7 == *((char **)a1 + 2))
        goto LABEL_57;
    }
    if (v58 < v31)
    {
      v64 = (v31 - v58) >> 3;
      if (v64 >= -1)
        v65 = v64 + 1;
      else
        v65 = v64 + 2;
      v60 = &v58[8 * (v65 >> 1)];
      v62 = &v30[8 * (v65 >> 1)];
      if (v58 == v30)
      {
        v28 = v58;
      }
      else
      {
        memmove(&v30[8 * (v65 >> 1)], v30, v58 - v30);
        v28 = v30;
      }
      goto LABEL_60;
    }
    if (v31 == v30)
      v66 = 1;
    else
      v66 = (v31 - v30) >> 2;
    if (v66 >> 61)
      sub_239418A80();
    v67 = (char *)operator new(8 * v66);
    v28 = v67;
    v68 = (v66 + 3) >> 2;
    v62 = &v67[8 * v68];
    v60 = v62;
    v69 = v58 - v30;
    if (v58 != v30)
    {
      v60 = &v62[v69 & 0xFFFFFFFFFFFFFFF8];
      v70 = v69 - 8;
      v71 = &v67[8 * v68];
      v72 = v30;
      if (v70 >= 0x38)
      {
        v73 = 8 * v68;
        v71 = &v67[8 * v68];
        v72 = v30;
        if ((unint64_t)(v71 - v30) >= 0x20)
        {
          v74 = (v70 >> 3) + 1;
          v75 = 8 * (v74 & 0x3FFFFFFFFFFFFFFCLL);
          v71 = &v62[v75];
          v76 = (__int128 *)(v30 + 16);
          v77 = &v67[v73 + 16];
          v78 = v74 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v79 = *v76;
            *((_OWORD *)v77 - 1) = *(v76 - 1);
            *(_OWORD *)v77 = v79;
            v76 += 2;
            v77 += 32;
            v78 -= 4;
          }
          while (v78);
          if (v74 == (v74 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_80;
          v72 = &v30[v75];
        }
      }
      do
      {
        v80 = *(_QWORD *)v72;
        v72 += 8;
        *(_QWORD *)v71 = v80;
        v71 += 8;
      }
      while (v71 != v60);
    }
LABEL_80:
    v31 = &v67[8 * v66];
    operator delete(v30);
    goto LABEL_60;
  }
LABEL_95:
  v89 = *a2;
  *(_OWORD *)(*(_QWORD *)&v8[(v12 >> 5) & 0x7FFFFFFFFFFFFF8] + 16 * v12) = *a2;
  if (*((_QWORD *)&v89 + 1))
  {
    v90 = (unint64_t *)(*((_QWORD *)&v89 + 1) + 8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 1, v90));
    v5 = *((_QWORD *)a1 + 6);
  }
  *((_QWORD *)a1 + 6) = v5 + 1;
  pthread_cond_signal((pthread_cond_t *)(a1 + 32));
  v6 = 1;
LABEL_100:
  sub_2397A16B4(v4);
  return v6;
}

void sub_239B41180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  pthread_mutex_t *v9;
  void *v10;

  operator delete(__p);
  operator delete(v10);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

void sub_239B411D0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA690;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B411E0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA690;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B41210(uint64_t a1)
{
  return sub_239A82E8C((_QWORD *)(a1 + 24));
}

uint64_t sub_239B4121C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 654, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 100;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v24 = v3;
    goto LABEL_12;
  }
  v24 = &v23;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA190;
  *(_QWORD *)&v12 = sub_239B415DC((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239B417F8(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239B41420(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B4142C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,_QWORD *a43)
{
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  if (a43 == v46)
  {
    v48 = 4;
  }
  else
  {
    if (!a43)
      goto LABEL_6;
    v48 = 5;
    v46 = a43;
  }
  (*(void (**)(_QWORD *))(*v46 + 8 * v48))(v46);
LABEL_6:
  if (a39 == v45)
  {
    v49 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_11;
    v49 = 5;
    v45 = a39;
  }
  (*(void (**)(_QWORD *))(*v45 + 8 * v49))(v45);
LABEL_11:
  sub_239A8303C(v44);
  sub_239A83110(v43);
  v50 = a20;
  if (a20 == &a17)
  {
    v51 = 4;
    v50 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_16;
    v51 = 5;
  }
  (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_16:
  v52 = a14;
  if (a14 == &a11)
  {
    v53 = 4;
    v52 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v53 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v52 + 8 * v53))();
  _Unwind_Resume(a1);
}

void sub_239B4153C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B41550(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF5EA8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B41588(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF5EA8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B415A8(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

uint64_t sub_239B415DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    v4 = (_QWORD *)(a1 + 40);
    goto LABEL_5;
  }
  if (v5 != a2 + 16)
  {
    *(_QWORD *)(a1 + 40) = v5;
LABEL_5:
    *v4 = 0;
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 40) = a1 + 16;
  (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 24))(*v4);
LABEL_7:
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = (_QWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (!v7)
  {
    v6 = (_QWORD *)(a1 + 104);
    goto LABEL_11;
  }
  if (v7 != a2 + 80)
  {
    *(_QWORD *)(a1 + 104) = v7;
LABEL_11:
    *v6 = 0;
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 104) = a1 + 80;
  (*(void (**)(_QWORD))(*(_QWORD *)*v6 + 24))(*v6);
LABEL_13:
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v8 = (_QWORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 120) = 0;
  if (!v9)
  {
    v8 = (_QWORD *)(a1 + 160);
    goto LABEL_17;
  }
  if (v9 != a2 + 136)
  {
    *(_QWORD *)(a1 + 160) = v9;
LABEL_17:
    *v8 = 0;
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 160) = a1 + 136;
  (*(void (**)(_QWORD))(*(_QWORD *)*v8 + 24))(*v8);
LABEL_19:
  v10 = (_QWORD *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 192);
  if (!v11)
  {
    v10 = (_QWORD *)(a1 + 192);
    goto LABEL_23;
  }
  if (v11 != a2 + 168)
  {
    *(_QWORD *)(a1 + 192) = v11;
LABEL_23:
    *v10 = 0;
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 192) = a1 + 168;
  (*(void (**)(_QWORD))(*(_QWORD *)*v10 + 24))(*v10);
LABEL_25:
  v12 = (_QWORD *)(a2 + 224);
  v13 = *(_QWORD *)(a2 + 224);
  if (!v13)
  {
    v12 = (_QWORD *)(a1 + 224);
    goto LABEL_29;
  }
  if (v13 != a2 + 200)
  {
    *(_QWORD *)(a1 + 224) = v13;
LABEL_29:
    *v12 = 0;
    goto LABEL_31;
  }
  *(_QWORD *)(a1 + 224) = a1 + 200;
  (*(void (**)(_QWORD))(*(_QWORD *)*v12 + 24))(*v12);
LABEL_31:
  v14 = *(_QWORD *)(a2 + 256);
  if (v14)
  {
    v15 = (_QWORD *)(a2 + 256);
    if (v14 == a2 + 232)
    {
      *(_QWORD *)(a1 + 256) = a1 + 232;
      (*(void (**)(_QWORD))(*(_QWORD *)*v15 + 24))(*v15);
      return a1;
    }
    *(_QWORD *)(a1 + 256) = v14;
  }
  else
  {
    v15 = (_QWORD *)(a1 + 256);
  }
  *v15 = 0;
  return a1;
}

uint64_t sub_239B417F8(unsigned int *a1, _OWORD *a2)
{
  pthread_mutex_t *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  void *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  BOOL v36;
  int64_t v37;
  unint64_t v38;
  char *v39;
  void *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  _OWORD *v54;
  uint64_t v55;
  __int128 v56;
  unint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  _OWORD *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  size_t v103;
  char *v104;
  unint64_t v105;
  char *v106;
  char *v107;
  int64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 *v114;
  _OWORD *v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  void *v119;
  _OWORD *v120;

  v4 = (pthread_mutex_t *)(a1 + 44);
  sub_2397A1694((pthread_mutex_t *)(a1 + 44));
  v5 = *((_QWORD *)a1 + 6);
  if (v5 >= *a1)
  {
    while (!*((_BYTE *)a1 + 56))
    {
      ++*((_QWORD *)a1 + 8);
      pthread_cond_wait((pthread_cond_t *)(a1 + 20), v4);
      --*((_QWORD *)a1 + 8);
      v5 = *((_QWORD *)a1 + 6);
      if (v5 < *a1)
        goto LABEL_4;
    }
    goto LABEL_5;
  }
LABEL_4:
  if (*((_BYTE *)a1 + 56))
  {
LABEL_5:
    v6 = 0;
    goto LABEL_100;
  }
  v7 = (char *)*((_QWORD *)a1 + 3);
  v8 = (char *)*((_QWORD *)a1 + 2);
  v9 = v7 - v8;
  if (v7 == v8)
    v10 = 0;
  else
    v10 = 32 * (v7 - v8) - 1;
  v11 = *((_QWORD *)a1 + 5);
  v12 = v11 + v5;
  if (v10 == v11 + v5)
  {
    if (v11 >= 0x100)
    {
      *((_QWORD *)a1 + 5) = v11 - 256;
      v13 = v8 + 8;
      v14 = *(_QWORD *)v8;
      *((_QWORD *)a1 + 2) = v8 + 8;
      if (*((char **)a1 + 4) != v7)
      {
LABEL_92:
        *(_QWORD *)v7 = v14;
        goto LABEL_93;
      }
      v15 = (char *)*((_QWORD *)a1 + 1);
      if (v13 > v15)
      {
        v16 = (v13 - v15) >> 3;
        if (v16 >= -1)
          v17 = v16 + 1;
        else
          v17 = v16 + 2;
        v18 = v17 >> 1;
        v19 = -v18;
        v20 = &v13[-8 * v18];
        v21 = v7 - v13;
        if (v7 == v13)
        {
          v22 = v7;
        }
        else
        {
          memmove(&v13[-8 * v18], v13, v7 - v13);
          v22 = (char *)*((_QWORD *)a1 + 2);
        }
        v7 = &v20[v21];
        *((_QWORD *)a1 + 2) = &v22[8 * v19];
        *((_QWORD *)a1 + 3) = &v20[v21];
        goto LABEL_92;
      }
      if (v7 == v15)
        v33 = 1;
      else
        v33 = (v7 - v15) >> 2;
      if (!(v33 >> 61))
      {
        v34 = (char *)operator new(8 * v33);
        v35 = &v34[8 * (v33 >> 2)];
        v37 = v7 - v13;
        v36 = v7 == v13;
        v7 = v35;
        if (v36)
          goto LABEL_90;
        v7 = &v35[v37 & 0xFFFFFFFFFFFFFFF8];
        v38 = v37 - 8;
        if (v38 >= 0x38)
        {
          v81 = &v34[8 * (v33 >> 2)];
          v39 = v81;
          if ((unint64_t)(v81 - v13) >= 0x20)
          {
            v82 = (v38 >> 3) + 1;
            v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
            v39 = &v35[v83];
            v84 = (__int128 *)(v8 + 24);
            v85 = v81 + 16;
            v86 = v82 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v87 = *v84;
              *(v85 - 1) = *(v84 - 1);
              *v85 = v87;
              v84 += 2;
              v85 += 2;
              v86 -= 4;
            }
            while (v86);
            if (v82 == (v82 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_90:
              *((_QWORD *)a1 + 1) = v34;
              *((_QWORD *)a1 + 2) = v35;
              *((_QWORD *)a1 + 3) = v7;
              *((_QWORD *)a1 + 4) = &v34[8 * v33];
              if (v15)
              {
                operator delete(v15);
                v7 = (char *)*((_QWORD *)a1 + 3);
              }
              goto LABEL_92;
            }
            v13 += v83;
          }
        }
        else
        {
          v39 = &v34[8 * (v33 >> 2)];
        }
        do
        {
          v88 = *(_QWORD *)v13;
          v13 += 8;
          *(_QWORD *)v39 = v88;
          v39 += 8;
        }
        while (v39 != v7);
        goto LABEL_90;
      }
LABEL_130:
      sub_239418A80();
    }
    v23 = v9 >> 3;
    v24 = (char *)*((_QWORD *)a1 + 4);
    v25 = (char *)*((_QWORD *)a1 + 1);
    v26 = v24 - v25;
    if (v9 >> 3 < (unint64_t)((v24 - v25) >> 3))
    {
      if (v24 != v7)
      {
        *(_QWORD *)v7 = operator new(0x1000uLL);
LABEL_93:
        *((_QWORD *)a1 + 3) += 8;
LABEL_94:
        v8 = (char *)*((_QWORD *)a1 + 2);
        v5 = *((_QWORD *)a1 + 6);
        v12 = v5 + *((_QWORD *)a1 + 5);
        goto LABEL_95;
      }
      v40 = operator new(0x1000uLL);
      v41 = v8;
      if (v25 != v8)
      {
LABEL_105:
        *((_QWORD *)v41 - 1) = v40;
        v94 = (char *)*((_QWORD *)a1 + 2);
        v95 = (char *)*((_QWORD *)a1 + 3);
        *((_QWORD *)a1 + 2) = v94 - 8;
        v96 = *((_QWORD *)v94 - 1);
        *((_QWORD *)a1 + 2) = v94;
        if (v95 != *((char **)a1 + 4))
        {
LABEL_106:
          *(_QWORD *)v95 = v96;
          goto LABEL_93;
        }
        v97 = (char *)*((_QWORD *)a1 + 1);
        if (v94 > v97)
        {
          v98 = (v94 - v97) >> 3;
          if (v98 >= -1)
            v99 = v98 + 1;
          else
            v99 = v98 + 2;
          v100 = v99 >> 1;
          v101 = -v100;
          v102 = &v94[-8 * v100];
          v103 = v95 - v94;
          if (v103)
          {
            memmove(&v94[-8 * v100], v94, v103);
            v94 = (char *)*((_QWORD *)a1 + 2);
          }
          v104 = &v102[v103];
          *((_QWORD *)a1 + 2) = &v94[8 * v101];
          *((_QWORD *)a1 + 3) = v104;
          *(_QWORD *)v104 = v96;
          goto LABEL_93;
        }
        if (v95 == v97)
          v105 = 1;
        else
          v105 = (v95 - v97) >> 2;
        if (v105 >> 61)
          goto LABEL_130;
        v106 = (char *)operator new(8 * v105);
        v107 = &v106[8 * (v105 >> 2)];
        v108 = v95 - v94;
        v36 = v95 == v94;
        v95 = v107;
        if (!v36)
        {
          v95 = &v107[v108 & 0xFFFFFFFFFFFFFFF8];
          v109 = v108 - 8;
          if (v109 < 0x38)
          {
            v110 = &v106[8 * (v105 >> 2)];
            goto LABEL_126;
          }
          v111 = &v106[8 * (v105 >> 2)];
          v110 = v111;
          if ((unint64_t)(v111 - v94) < 0x20)
          {
            do
            {
LABEL_126:
              v118 = *(_QWORD *)v94;
              v94 += 8;
              *(_QWORD *)v110 = v118;
              v110 += 8;
            }
            while (v110 != v95);
            goto LABEL_127;
          }
          v112 = (v109 >> 3) + 1;
          v113 = 8 * (v112 & 0x3FFFFFFFFFFFFFFCLL);
          v110 = &v107[v113];
          v114 = (__int128 *)(v94 + 16);
          v115 = v111 + 16;
          v116 = v112 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v117 = *v114;
            *(v115 - 1) = *(v114 - 1);
            *v115 = v117;
            v114 += 2;
            v115 += 2;
            v116 -= 4;
          }
          while (v116);
          if (v112 != (v112 & 0x3FFFFFFFFFFFFFFCLL))
          {
            v94 += v113;
            goto LABEL_126;
          }
        }
LABEL_127:
        *((_QWORD *)a1 + 1) = v106;
        *((_QWORD *)a1 + 2) = v107;
        *((_QWORD *)a1 + 3) = v95;
        *((_QWORD *)a1 + 4) = &v106[8 * v105];
        if (v97)
        {
          operator delete(v97);
          v95 = (char *)*((_QWORD *)a1 + 3);
        }
        goto LABEL_106;
      }
      if (v7 == v8)
        v42 = 1;
      else
        v42 = v26 >> 2;
      if (v42 >> 61)
        goto LABEL_130;
      v43 = (char *)operator new(8 * v42);
      v44 = (v42 + 3) >> 2;
      v41 = &v43[8 * v44];
      v45 = &v43[8 * v42];
      v46 = v41;
      if (v7 != v8)
      {
        v46 = &v41[(v7 - v25) & 0xFFFFFFFFFFFFFFF8];
        v47 = v7 - v25 - 8;
        v48 = &v43[8 * v44];
        v49 = v8;
        if (v47 > 0x37)
        {
          v50 = &v43[8 * v44];
          v48 = v50;
          v49 = v8;
          if ((unint64_t)(v50 - v25) >= 0x20)
          {
            v51 = (v47 >> 3) + 1;
            v52 = 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
            v48 = &v41[v52];
            v53 = (__int128 *)(v8 + 16);
            v54 = v50 + 16;
            v55 = v51 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v56 = *v53;
              *(v54 - 1) = *(v53 - 1);
              *v54 = v56;
              v53 += 2;
              v54 += 2;
              v55 -= 4;
            }
            while (v55);
            if (v51 == (v51 & 0x3FFFFFFFFFFFFFFCLL))
            {
              *((_QWORD *)a1 + 1) = v43;
              *((_QWORD *)a1 + 2) = v41;
              *((_QWORD *)a1 + 3) = v46;
              *((_QWORD *)a1 + 4) = v45;
LABEL_104:
              operator delete(v8);
              v41 = (char *)*((_QWORD *)a1 + 2);
              goto LABEL_105;
            }
            v49 = &v8[v52];
          }
        }
        do
        {
          v93 = *(_QWORD *)v49;
          v49 += 8;
          *(_QWORD *)v48 = v93;
          v48 += 8;
        }
        while (v48 != v46);
      }
      *((_QWORD *)a1 + 1) = v43;
      *((_QWORD *)a1 + 2) = v41;
      *((_QWORD *)a1 + 3) = v46;
      *((_QWORD *)a1 + 4) = v45;
      if (!v8)
        goto LABEL_105;
      goto LABEL_104;
    }
    if (v24 == v25)
      v27 = 1;
    else
      v27 = v26 >> 2;
    if (v27 >> 61)
      goto LABEL_130;
    v28 = (char *)operator new(8 * v27);
    v120 = a2;
    v29 = operator new(0x1000uLL);
    v30 = &v28[8 * v23];
    v31 = &v28[8 * v27];
    if (v23 == v27)
    {
      v119 = v29;
      if (v9 < 1)
      {
        if (v7 == v8)
          v57 = 1;
        else
          v57 = v9 >> 2;
        if (v57 >> 61)
          sub_239418A80();
        v30 = (char *)operator new(8 * v57);
        v31 = &v30[8 * v57];
        operator delete(v28);
        v8 = (char *)*((_QWORD *)a1 + 2);
        v7 = (char *)*((_QWORD *)a1 + 3);
        v28 = v30;
      }
      else
      {
        v32 = v23 + 2;
        if (v23 >= -1)
          v32 = v23 + 1;
        v30 -= 8 * (v32 >> 1);
      }
      v29 = v119;
    }
    *(_QWORD *)v30 = v29;
    v58 = v30 + 8;
    if (v7 == v8)
    {
      v59 = v30;
      v60 = v30 + 8;
LABEL_57:
      v61 = (void *)*((_QWORD *)a1 + 1);
      *((_QWORD *)a1 + 1) = v28;
      *((_QWORD *)a1 + 2) = v59;
      *((_QWORD *)a1 + 3) = v60;
      *((_QWORD *)a1 + 4) = v31;
      a2 = v120;
      if (v61)
        operator delete(v61);
      goto LABEL_94;
    }
    while (v30 != v28)
    {
      v62 = v30;
      v60 = v58;
LABEL_60:
      v63 = *((_QWORD *)v7 - 1);
      v7 -= 8;
      *((_QWORD *)v62 - 1) = v63;
      v59 = v62 - 8;
      v58 = v60;
      v30 = v59;
      if (v7 == *((char **)a1 + 2))
        goto LABEL_57;
    }
    if (v58 < v31)
    {
      v64 = (v31 - v58) >> 3;
      if (v64 >= -1)
        v65 = v64 + 1;
      else
        v65 = v64 + 2;
      v60 = &v58[8 * (v65 >> 1)];
      v62 = &v30[8 * (v65 >> 1)];
      if (v58 == v30)
      {
        v28 = v58;
      }
      else
      {
        memmove(&v30[8 * (v65 >> 1)], v30, v58 - v30);
        v28 = v30;
      }
      goto LABEL_60;
    }
    if (v31 == v30)
      v66 = 1;
    else
      v66 = (v31 - v30) >> 2;
    if (v66 >> 61)
      sub_239418A80();
    v67 = (char *)operator new(8 * v66);
    v28 = v67;
    v68 = (v66 + 3) >> 2;
    v62 = &v67[8 * v68];
    v60 = v62;
    v69 = v58 - v30;
    if (v58 != v30)
    {
      v60 = &v62[v69 & 0xFFFFFFFFFFFFFFF8];
      v70 = v69 - 8;
      v71 = &v67[8 * v68];
      v72 = v30;
      if (v70 >= 0x38)
      {
        v73 = 8 * v68;
        v71 = &v67[8 * v68];
        v72 = v30;
        if ((unint64_t)(v71 - v30) >= 0x20)
        {
          v74 = (v70 >> 3) + 1;
          v75 = 8 * (v74 & 0x3FFFFFFFFFFFFFFCLL);
          v71 = &v62[v75];
          v76 = (__int128 *)(v30 + 16);
          v77 = &v67[v73 + 16];
          v78 = v74 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v79 = *v76;
            *((_OWORD *)v77 - 1) = *(v76 - 1);
            *(_OWORD *)v77 = v79;
            v76 += 2;
            v77 += 32;
            v78 -= 4;
          }
          while (v78);
          if (v74 == (v74 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_80;
          v72 = &v30[v75];
        }
      }
      do
      {
        v80 = *(_QWORD *)v72;
        v72 += 8;
        *(_QWORD *)v71 = v80;
        v71 += 8;
      }
      while (v71 != v60);
    }
LABEL_80:
    v31 = &v67[8 * v66];
    operator delete(v30);
    goto LABEL_60;
  }
LABEL_95:
  v89 = *a2;
  *(_OWORD *)(*(_QWORD *)&v8[(v12 >> 5) & 0x7FFFFFFFFFFFFF8] + 16 * v12) = *a2;
  if (*((_QWORD *)&v89 + 1))
  {
    v90 = (unint64_t *)(*((_QWORD *)&v89 + 1) + 8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 1, v90));
    v5 = *((_QWORD *)a1 + 6);
  }
  *((_QWORD *)a1 + 6) = v5 + 1;
  pthread_cond_signal((pthread_cond_t *)(a1 + 32));
  v6 = 1;
LABEL_100:
  sub_2397A16B4(v4);
  return v6;
}

void sub_239B41F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  pthread_mutex_t *v9;
  void *v10;

  operator delete(__p);
  operator delete(v10);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

void sub_239B41FBC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA190;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B41FCC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA190;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B41FFC(uint64_t a1)
{
  return sub_239A82E8C((_QWORD *)(a1 + 24));
}

uint64_t sub_239B42008(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t i;
  uint64_t *v8;
  __int128 v9;
  uint64_t *v10;
  _OWORD *v11;
  __int128 v12;
  uint64_t *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v4 = *a2;
  *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)a1 = v4;
  if ((uint64_t *)a1 != a2)
  {
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    v5 = (uint64_t *)a2[4];
    v6 = *(_QWORD *)(a1 + 24);
    if (!v6)
      goto LABEL_8;
    for (i = 0; i != v6; ++i)
      *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * i) = 0;
    v8 = *(uint64_t **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 40) = 0;
    if (v8)
    {
      while (v5)
      {
        v8[2] = v5[2];
        v9 = *(_OWORD *)(v5 + 3);
        *((_DWORD *)v8 + 10) = *((_DWORD *)v5 + 10);
        *(_OWORD *)(v8 + 3) = v9;
        v10 = (uint64_t *)*v8;
        sub_239A997F8(a1 + 16, v8);
        v5 = (uint64_t *)*v5;
        v8 = v10;
        if (!v10)
          goto LABEL_8;
      }
      do
      {
        v13 = (uint64_t *)*v8;
        operator delete(v8);
        v8 = v13;
      }
      while (v13);
    }
    else
    {
LABEL_8:
      while (v5)
      {
        v11 = operator new(0x30uLL);
        *(_QWORD *)v11 = 0;
        v12 = *((_OWORD *)v5 + 2);
        v11[1] = *((_OWORD *)v5 + 1);
        v11[2] = v12;
        *((_QWORD *)v11 + 1) = *((_QWORD *)v11 + 2);
        sub_239A997F8(a1 + 16, v11);
        v5 = (uint64_t *)*v5;
      }
    }
    v14 = a2[7];
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_QWORD *)(a1 + 56) = v14;
    v15 = *(_OWORD *)(a2 + 19);
    v16 = *(_OWORD *)(a2 + 21);
    v17 = a2[23];
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    *(_QWORD *)(a1 + 184) = v17;
    *(_OWORD *)(a1 + 168) = v16;
    *(_OWORD *)(a1 + 152) = v15;
    v18 = *(_OWORD *)(a2 + 9);
    v19 = *(_OWORD *)(a2 + 11);
    v20 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 104) = v20;
    *(_OWORD *)(a1 + 88) = v19;
    *(_OWORD *)(a1 + 72) = v18;
    sub_23942156C((_QWORD *)(a1 + 192), (char *)a2[24], (char *)a2[25], (a2[25] - a2[24]) >> 2);
    sub_23945D3D0((_QWORD *)(a1 + 216), (char *)a2[27], (char *)a2[28], (a2[28] - a2[27]) >> 3);
  }
  v21 = a2[30];
  *(_BYTE *)(a1 + 248) = *((_BYTE *)a2 + 248);
  *(_QWORD *)(a1 + 240) = v21;
  *(_QWORD *)(a1 + 256) = a2[32];
  v22 = a2[34];
  *(_QWORD *)(a1 + 264) = a2[33];
  *(_QWORD *)(a1 + 272) = v22;
  v23 = a2[35];
  *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
  *(_QWORD *)(a1 + 280) = v23;
  if ((uint64_t *)a1 == a2)
  {
    std::string::operator=((std::string *)(a1 + 352), (const std::string *)(a1 + 352));
  }
  else
  {
    sub_23942156C((_QWORD *)(a1 + 296), (char *)a2[37], (char *)a2[38], (a2[38] - a2[37]) >> 2);
    *(_BYTE *)(a1 + 320) = *((_BYTE *)a2 + 320);
    v24 = *(_OWORD *)(a2 + 41);
    *(_QWORD *)(a1 + 344) = a2[43];
    *(_OWORD *)(a1 + 328) = v24;
    std::string::operator=((std::string *)(a1 + 352), (const std::string *)(a2 + 44));
    sub_23945D3D0((_QWORD *)(a1 + 376), (char *)a2[47], (char *)a2[48], (a2[48] - a2[47]) >> 3);
  }
  *(_QWORD *)(a1 + 400) = a2[50];
  memcpy((void *)(a1 + 408), a2 + 51, 0x168uLL);
  std::string::operator=((std::string *)(a1 + 768), (const std::string *)a2 + 32);
  *(_QWORD *)(a1 + 792) = a2[99];
  *(_OWORD *)(a1 + 800) = *((_OWORD *)a2 + 50);
  v25 = a2[102];
  *(_DWORD *)(a1 + 824) = *((_DWORD *)a2 + 206);
  *(_QWORD *)(a1 + 816) = v25;
  if ((uint64_t *)a1 != a2)
    sub_23942156C((_QWORD *)(a1 + 832), (char *)a2[104], (char *)a2[105], (a2[105] - a2[104]) >> 2);
  *(_BYTE *)(a1 + 856) = *((_BYTE *)a2 + 856);
  return a1;
}

void sub_239B42298(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_239B422B8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239B422CC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239B422E4()
{
  JUMPOUT(0x23B83E31CLL);
}

_WORD *sub_239B422F8(uint64_t a1)
{
  _WORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_250AF5E60;
  result[4] = *(_WORD *)(a1 + 8);
  return result;
}

uint64_t sub_239B42330(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_250AF5E60;
  *(_WORD *)(a2 + 8) = *(_WORD *)(result + 8);
  return result;
}

uint64_t sub_239B42350()
{
  return kdebug_trace();
}

void sub_239B42384()
{
  JUMPOUT(0x23B83E31CLL);
}

_WORD *sub_239B42398(uint64_t a1)
{
  _WORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_250AF5E18;
  result[4] = *(_WORD *)(a1 + 8);
  return result;
}

uint64_t sub_239B423D0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_250AF5E18;
  *(_WORD *)(a2 + 8) = *(_WORD *)(result + 8);
  return result;
}

uint64_t sub_239B423F0()
{
  return kdebug_trace();
}

void sub_239B42424()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B42438()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF5DD0;
  return result;
}

void sub_239B4245C(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF5DD0;
}

uint64_t sub_239B42474(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return 1;
}

void sub_239B424D0()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B424E4()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF5D88;
  return result;
}

void sub_239B42508(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF5D88;
}

void sub_239B42520(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_239B4252C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B42540(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF5D40;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B42580(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF5D40;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B425A8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(v1 + 432);
  if (v2 && *(_BYTE *)(*(_QWORD *)(v1 + 448) + 1664))
  {
    v3 = *(_QWORD *)(result + 16);
    v4 = v2 + 16;
    v5 = v3 + 272;
    if (*(_BYTE *)(v3 + 736))
    {
      return sub_239AEA35C(v5, v4);
    }
    else
    {
      result = sub_239A5E664(v5, v4);
      *(_BYTE *)(v3 + 736) = 1;
    }
  }
  return result;
}

void sub_239B42608()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B4261C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF5CF8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B4265C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF5CF8;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B42684(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;

  v1 = result;
  v2 = *(_QWORD *)(*(_QWORD *)(result + 8) + 464);
  if (*(_QWORD *)(v2 + 120) != *(_QWORD *)(v2 + 128) || *(double *)(v2 + 96) > 0.000000001)
  {
    v3 = (__int128 *)(v2 + 16);
    v4 = *(_QWORD *)(result + 16);
    result = v4 + 744;
    if (*(_BYTE *)(v4 + 936))
    {
      v5 = *v3;
      v6 = *(_OWORD *)(v2 + 32);
      *(_DWORD *)(v4 + 776) = *(_DWORD *)(v2 + 48);
      *(_OWORD *)result = v5;
      *(_OWORD *)(v4 + 760) = v6;
      if ((__int128 *)result == v3)
      {
        *(_QWORD *)(v4 + 808) = *(_QWORD *)(v2 + 80);
        *(_OWORD *)(v4 + 816) = *(_OWORD *)(v2 + 88);
        v8 = *(_QWORD *)(v2 + 104);
        *(_DWORD *)(v4 + 840) = *(_DWORD *)(v2 + 112);
        *(_QWORD *)(v4 + 832) = v8;
      }
      else
      {
        sub_239421078((_QWORD *)(v4 + 784), *(_QWORD **)(v2 + 56), (_QWORD *)(v2 + 64));
        *(_QWORD *)(v4 + 808) = *(_QWORD *)(v2 + 80);
        *(_OWORD *)(v4 + 816) = *(_OWORD *)(v2 + 88);
        v7 = *(_QWORD *)(v2 + 104);
        *(_DWORD *)(v4 + 840) = *(_DWORD *)(v2 + 112);
        *(_QWORD *)(v4 + 832) = v7;
        result = (uint64_t)sub_23942156C((_QWORD *)(v4 + 848), *(char **)(v2 + 120), *(char **)(v2 + 128), (uint64_t)(*(_QWORD *)(v2 + 128) - *(_QWORD *)(v2 + 120)) >> 2);
      }
      *(_BYTE *)(v4 + 872) = *(_BYTE *)(v2 + 144);
      v9 = *(_OWORD *)(v2 + 152);
      v10 = *(_OWORD *)(v2 + 168);
      v11 = *(_OWORD *)(v2 + 184);
      *(_QWORD *)(v4 + 928) = *(_QWORD *)(v2 + 200);
      *(_OWORD *)(v4 + 896) = v10;
      *(_OWORD *)(v4 + 912) = v11;
      *(_OWORD *)(v4 + 880) = v9;
    }
    else
    {
      result = sub_239B42898(result, v3);
      *(_BYTE *)(v4 + 936) = 1;
    }
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 464);
  if (*(_QWORD *)(v12 + 440) != *(_QWORD *)(v12 + 448) || *(double *)(v12 + 416) > 0.000000001)
  {
    v13 = (__int128 *)(v12 + 208);
    v14 = *(_QWORD *)(v1 + 16);
    v15 = v14 + 944;
    if (*(_BYTE *)(v14 + 1656))
    {
      result = sub_239AD2508(v15, v13);
    }
    else
    {
      result = sub_239A5EC2C(v15, v13);
      *(_BYTE *)(v14 + 1656) = 1;
    }
  }
  v16 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 464);
  if (*(_QWORD *)(v16 + 1552) != *(_QWORD *)(v16 + 1560) || *(double *)(v16 + 1528) > 0.000000001)
  {
    v17 = (__int128 *)(v16 + 920);
    v18 = *(_QWORD *)(v1 + 16);
    v19 = v18 + 1664;
    if (*(_BYTE *)(v18 + 3408))
    {
      result = sub_239AB5E40(v19, v17);
    }
    else
    {
      result = sub_239A5F6A8(v19, v17);
      *(_BYTE *)(v18 + 3408) = 1;
    }
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 464);
  if (*(_QWORD *)(v20 + 2944) != *(_QWORD *)(v20 + 2952) || *(double *)(v20 + 2920) > 0.000000001)
  {
    v21 = (__int128 *)(v20 + 2664);
    v22 = *(_QWORD *)(v1 + 16);
    v23 = v22 + 3416;
    if (*(_BYTE *)(v22 + 4000))
    {
      return sub_239AA8158(v23, v21);
    }
    else
    {
      result = sub_239A5FE90(v23, v21);
      *(_BYTE *)(v22 + 4000) = 1;
    }
  }
  return result;
}

uint64_t sub_239B42898(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  int v8;
  _BYTE *v9;
  _BYTE *v10;
  int64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = *a2;
  v5 = a2[1];
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 40) = a1 + 48;
  *(_QWORD *)(a1 + 56) = 0;
  sub_239A634AC((uint64_t *)(a1 + 40), *((_QWORD **)a2 + 5), (_QWORD *)a2 + 6);
  v6 = a2[4];
  v7 = a2[5];
  v8 = *((_DWORD *)a2 + 24);
  *(_QWORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  v10 = (_BYTE *)*((_QWORD *)a2 + 13);
  v9 = (_BYTE *)*((_QWORD *)a2 + 14);
  v11 = v9 - v10;
  if (v9 != v10)
  {
    if (v11 < 0)
      sub_2394189F8();
    v12 = (char *)operator new(v9 - v10);
    *(_QWORD *)(a1 + 104) = v12;
    *(_QWORD *)(a1 + 112) = v12;
    v13 = &v12[4 * (v11 >> 2)];
    *(_QWORD *)(a1 + 120) = v13;
    memcpy(v12, v10, v11);
    *(_QWORD *)(a1 + 112) = v13;
  }
  *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
  v14 = *(__int128 *)((char *)a2 + 136);
  v15 = *(__int128 *)((char *)a2 + 152);
  v16 = *(__int128 *)((char *)a2 + 168);
  *(_QWORD *)(a1 + 184) = *((_QWORD *)a2 + 23);
  *(_OWORD *)(a1 + 168) = v16;
  *(_OWORD *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  return a1;
}

void sub_239B42994(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD **v2;

  sub_239421038(v1, *v2);
  _Unwind_Resume(a1);
}

void sub_239B429C4(uint64_t a1, uint64_t *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  if (*(_QWORD *)(a1 + 24))
  {
    v4 = *(_QWORD **)(a1 + 16);
    if (v4)
    {
      do
      {
        v5 = (_QWORD *)*v4;
        operator delete(v4);
        v4 = v5;
      }
      while (v5);
    }
    *(_QWORD *)(a1 + 16) = 0;
    v6 = *(_QWORD *)(a1 + 8);
    if (v6)
    {
      for (i = 0; i != v6; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
  v8 = *a2;
  *a2 = 0;
  v9 = *(void **)a1;
  *(_QWORD *)a1 = v8;
  if (v9)
    operator delete(v9);
  v12 = a2[2];
  v11 = a2 + 2;
  v10 = v12;
  v13 = *(v11 - 1);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 8) = v13;
  *(v11 - 1) = 0;
  v14 = v11[1];
  *(_QWORD *)(a1 + 24) = v14;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v11 + 4);
  if (v14)
  {
    v15 = *(_QWORD *)(v10 + 8);
    v16 = *(_QWORD *)(a1 + 8);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v15 >= v16)
        v15 %= v16;
    }
    else
    {
      v15 &= v16 - 1;
    }
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v15) = a1 + 16;
    *v11 = 0;
    v11[1] = 0;
  }
}

void sub_239B42AB4()
{
  JUMPOUT(0x23B83E31CLL);
}

_WORD *sub_239B42AC8(uint64_t a1)
{
  _WORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_250AF5CB0;
  result[4] = *(_WORD *)(a1 + 8);
  return result;
}

uint64_t sub_239B42B00(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_250AF5CB0;
  *(_WORD *)(a2 + 8) = *(_WORD *)(result + 8);
  return result;
}

uint64_t sub_239B42B20()
{
  return kdebug_trace();
}

void sub_239B42B54()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B42B68()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF5C20;
  return result;
}

void sub_239B42B8C(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF5C20;
}

uint64_t sub_239B42BA4(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return 1;
}

void sub_239B42C00()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B42C14()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF5BD8;
  return result;
}

void sub_239B42C38(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF5BD8;
}

void sub_239B42C50(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_239B42C5C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B42C70(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF5B90;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B42CB0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF5B90;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B42CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 432) + 16;
  v3 = v1 + 272;
  if (*(_BYTE *)(v1 + 736))
    return sub_239AEA35C(v3, v2);
  result = sub_239A5E664(v3, v2);
  *(_BYTE *)(v1 + 736) = 1;
  return result;
}

void sub_239B42D20(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9788;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B42D30(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9788;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B42D60(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_239B42D7C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250B01540;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B42D8C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250B01540;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B42DBC(_QWORD *a1)
{
  void *v2;

  sub_239A4E1A4(a1 + 17);
  sub_239A4E2B0((uint64_t)(a1 + 12));
  sub_239A4E348((uint64_t)(a1 + 7));
  v2 = (void *)a1[3];
  if (v2)
  {
    a1[4] = v2;
    operator delete(v2);
  }
}

_QWORD *sub_239B42E0C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF5AC8;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B42E68(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF5AC8;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B42ED4(uint64_t a1)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = &off_250AF5AC8;
  v3 = v2 + 8;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      *((_QWORD *)v2 + 4) = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  *((_QWORD *)v2 + 4) = v4;
LABEL_6:
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a1 + 40);
  return v2;
}

void sub_239B42F50(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B42F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  *(_QWORD *)a2 = &off_250AF5AC8;
  v4 = a2 + 8;
  v5 = *(_QWORD *)(a1 + 32);
  if (v5)
  {
    if (v5 == a1 + 8)
    {
      *(_QWORD *)(a2 + 32) = v4;
      (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      *(_QWORD *)(a2 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v5 + 16))(v5, v4);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
  }
  result = *(__n128 *)(a1 + 40);
  *(__n128 *)(a2 + 40) = result;
  return result;
}

_QWORD *sub_239B42FDC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B43010(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

uint64_t sub_239B43060(uint64_t a1, float *a2, uint64_t a3)
{
  float v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v10;
  int v11;
  float v12;

  v5 = *a2;
  sub_2396FF068(*(_QWORD *)(a1 + 40), *a2);
  v10 = v6;
  v7 = **(_DWORD **)(a1 + 48);
  v12 = v5;
  v11 = v7;
  v8 = *(_QWORD *)(a1 + 32);
  if (!v8)
    sub_2394172E0();
  return (*(uint64_t (**)(uint64_t, float *, uint64_t *, int *, uint64_t))(*(_QWORD *)v8 + 48))(v8, &v12, &v10, &v11, a3);
}

_QWORD *sub_239B430DC(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF5A80;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B43138(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF5A80;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B431A4(uint64_t a1)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = &off_250AF5A80;
  v3 = v2 + 8;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      *((_QWORD *)v2 + 4) = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  *((_QWORD *)v2 + 4) = v4;
LABEL_6:
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a1 + 40);
  return v2;
}

void sub_239B43220(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B43234(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  *(_QWORD *)a2 = &off_250AF5A80;
  v4 = a2 + 8;
  v5 = *(_QWORD *)(a1 + 32);
  if (v5)
  {
    if (v5 == a1 + 8)
    {
      *(_QWORD *)(a2 + 32) = v4;
      (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      *(_QWORD *)(a2 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v5 + 16))(v5, v4);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
  }
  result = *(__n128 *)(a1 + 40);
  *(__n128 *)(a2 + 40) = result;
  return result;
}

_QWORD *sub_239B432AC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B432E0(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

uint64_t sub_239B43330(uint64_t a1, float *a2, uint64_t a3)
{
  float v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v10;
  int v11;
  float v12;

  v5 = *a2;
  sub_2396FF068(*(_QWORD *)(a1 + 40), *a2);
  v10 = v6;
  v7 = **(_DWORD **)(a1 + 48);
  v12 = v5;
  v11 = v7;
  v8 = *(_QWORD *)(a1 + 32);
  if (!v8)
    sub_2394172E0();
  return (*(uint64_t (**)(uint64_t, float *, uint64_t *, int *, uint64_t))(*(_QWORD *)v8 + 48))(v8, &v12, &v10, &v11, a3);
}

uint64_t sub_239B433AC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  int v6;
  size_t v7;
  unint64_t v8;
  const void **v11;
  std::string *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  int v18;
  size_t v19;
  unint64_t v20;
  std::string *v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;
  int v25;
  size_t v26;
  unint64_t v27;
  std::string *v28;
  uint64_t v29;
  uint64_t v30;
  const void *v31;
  int v32;
  size_t v33;
  unint64_t v34;
  std::string *v35;
  uint64_t v36;
  uint64_t v37;
  const void *v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::string *v42;
  uint64_t v43;
  uint64_t v44;
  const void *v45;
  int v46;
  size_t v47;
  unint64_t v48;
  std::string *v49;
  uint64_t v50;
  uint64_t v51;
  const void *v52;
  task_name_t *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  kern_return_t v69;
  unint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  const std::__fs::filesystem::path *v94;
  std::string *v95;
  std::string *v96;
  std::string *v97;
  void *v98;
  std::string *v99;
  std::string *v100;
  void *v101;
  _QWORD *v102;
  uint64_t v103;
  mach_msg_type_number_t *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  void *v108;
  char *v109;
  std::__fs::filesystem::path::__string_view v110;
  std::string *v111;
  std::basic_string_view<_CharT, _Traits>::size_type v112;
  std::basic_string_view<_CharT, _Traits>::size_type v113;
  std::__fs::filesystem::path::__string_view v114;
  std::__fs::filesystem::path::__string_view v115;
  std::string *v116;
  _BOOL4 v117;
  std::basic_string_view<_CharT, _Traits>::size_type v118;
  std::basic_string_view<_CharT, _Traits>::size_type v119;
  std::__fs::filesystem::path::__string_view v120;
  std::string *v121;
  __int128 v122;
  const std::__fs::filesystem::path *v123;
  std::string *v124;
  char *v125;
  std::__fs::filesystem::path::__string_view v126;
  std::string *v127;
  std::basic_string_view<_CharT, _Traits>::size_type v128;
  std::basic_string_view<_CharT, _Traits>::size_type v129;
  std::__fs::filesystem::path::__string_view v130;
  std::__fs::filesystem::path::__string_view v131;
  std::string *v132;
  _BOOL4 v133;
  std::basic_string_view<_CharT, _Traits>::size_type v134;
  std::basic_string_view<_CharT, _Traits>::size_type v135;
  std::__fs::filesystem::path::__string_view v136;
  _OWORD *size;
  __int128 v138;
  std::string::size_type v139;
  std::string::size_type v140;
  void *v141;
  std::string *v142;
  std::string *v143;
  std::string *v144;
  std::__fs::filesystem::path v145;
  std::__fs::filesystem::path v146;
  std::__fs::filesystem::path v147;
  std::__fs::filesystem::path v148;
  mach_msg_type_number_t v149[2];
  std::string *v150;
  unint64_t v151;
  std::__fs::filesystem::path v152;
  void *v153[2];
  uint64_t v154;
  std::__fs::filesystem::path v155;
  void *v156[2];
  uint64_t v157;
  void *v158;
  std::string *v159;
  uint64_t v160;
  void *v161;
  std::string *v162;
  uint64_t v163;
  void *__p[2];
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  int v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  _BYTE v174[28];
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  _BYTE v182[28];
  uint64_t v183;
  unint64_t v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  int v189;
  void *v190;
  void *v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  _BYTE v195[400];
  void *v196;
  void *v197;
  void *v198;
  char v199;
  void *v200;
  char v201;
  char v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  uint64_t v206;
  std::string v207;
  std::string __str;
  std::__fs::filesystem::path v209;
  std::__fs::filesystem::path v210;
  std::__fs::filesystem::path v211;
  std::__fs::filesystem::path __src;
  std::string __dst[6];
  unint64_t v214;
  uint64_t v215[3];
  uint64_t *v216;
  _BYTE v217[24];
  _BYTE *v218;
  uint64_t v219[3];
  uint64_t *v220;
  _BYTE v221[24];
  _BYTE *v222;
  _QWORD v223[3];
  _QWORD *v224;
  _BYTE v225[24];
  _BYTE *v226;
  _QWORD v227[3];
  _QWORD *v228;
  _QWORD v229[3];
  _QWORD *v230;
  _BYTE v231[24];
  _BYTE *v232;
  _BYTE v233[24];
  _BYTE *v234;
  mach_msg_type_number_t task_info_outCnt[6];
  mach_msg_type_number_t *v236;
  _QWORD v237[3];
  _QWORD *v238;
  _BYTE v239[24];
  _BYTE *v240;
  uint64_t v241;

  v241 = *MEMORY[0x24BDAC8D0];
  v3 = *(unsigned __int8 *)(a1 + 583);
  if ((v3 & 0x80u) != 0)
    v3 = *(_QWORD *)(a1 + 568);
  if (!v3)
    return 3;
  v5 = *(unsigned __int8 *)(a1 + 607);
  if ((v5 & 0x80u) != 0)
    v5 = *(_QWORD *)(a1 + 592);
  if (!v5)
    return 3;
  v6 = *(char *)(a1 + 631);
  v7 = v6 >= 0 ? *(unsigned __int8 *)(a1 + 631) : *(_QWORD *)(a1 + 616);
  if (!v7)
    return 3;
  v8 = v7 + 4;
  if (v7 + 4 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (const void **)(a1 + 608);
  if (v8 > 0x16)
  {
    v15 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v15 = v8 | 7;
    v16 = v15 + 1;
    v12 = (std::string *)operator new(v15 + 1);
    __dst[0].__r_.__value_.__r.__words[2] = v16 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v12;
    __dst[0].__r_.__value_.__l.__size_ = v7 + 4;
  }
  else
  {
    memset(__dst, 0, 24);
    v12 = __dst;
    *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v7 + 4;
  }
  if (v6 >= 0)
    v17 = (const void *)(a1 + 608);
  else
    v17 = *v11;
  memmove(v12, v17, v7);
  strcpy((char *)v12 + v7, ".obj");
  *(_OWORD *)__p = *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_;
  *(_QWORD *)&v165 = *((_QWORD *)&__dst[0].__r_.__value_.__l + 2);
  sub_239498A04((std::__fs::filesystem::path *)__p, a1 + 584, &__src);
  if (SBYTE7(v165) < 0)
    operator delete(__p[0]);
  v18 = *(char *)(a1 + 631);
  if (v18 >= 0)
    v19 = *(unsigned __int8 *)(a1 + 631);
  else
    v19 = *(_QWORD *)(a1 + 616);
  v20 = v19 + 5;
  if (v19 + 5 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v20 >= 0x17)
  {
    v22 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v22 = v20 | 7;
    v23 = v22 + 1;
    v21 = (std::string *)operator new(v22 + 1);
    __dst[0].__r_.__value_.__r.__words[2] = v23 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v21;
    __dst[0].__r_.__value_.__l.__size_ = v19 + 5;
  }
  else
  {
    memset(__dst, 0, 24);
    v21 = __dst;
    *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v19 + 5;
    if (!v19)
      goto LABEL_38;
  }
  if (v18 >= 0)
    v24 = (const void *)(a1 + 608);
  else
    v24 = *v11;
  memmove(v21, v24, v19);
LABEL_38:
  strcpy((char *)v21 + v19, ".usda");
  *(_OWORD *)__p = *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_;
  *(_QWORD *)&v165 = *((_QWORD *)&__dst[0].__r_.__value_.__l + 2);
  sub_239498A04((std::__fs::filesystem::path *)__p, a1 + 584, &v211);
  if (SBYTE7(v165) < 0)
    operator delete(__p[0]);
  v25 = *(char *)(a1 + 631);
  if (v25 >= 0)
    v26 = *(unsigned __int8 *)(a1 + 631);
  else
    v26 = *(_QWORD *)(a1 + 616);
  v27 = v26 + 5;
  if (v26 + 5 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v27 >= 0x17)
  {
    v29 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v29 = v27 | 7;
    v30 = v29 + 1;
    v28 = (std::string *)operator new(v29 + 1);
    __dst[0].__r_.__value_.__r.__words[2] = v30 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v28;
    __dst[0].__r_.__value_.__l.__size_ = v26 + 5;
  }
  else
  {
    memset(__dst, 0, 24);
    v28 = __dst;
    *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v26 + 5;
    if (!v26)
      goto LABEL_54;
  }
  if (v25 >= 0)
    v31 = (const void *)(a1 + 608);
  else
    v31 = *v11;
  memmove(v28, v31, v26);
LABEL_54:
  strcpy((char *)v28 + v26, ".usdz");
  *(_OWORD *)__p = *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_;
  *(_QWORD *)&v165 = *((_QWORD *)&__dst[0].__r_.__value_.__l + 2);
  sub_239498A04((std::__fs::filesystem::path *)__p, a1 + 584, &v210);
  if (SBYTE7(v165) < 0)
    operator delete(__p[0]);
  v32 = *(char *)(a1 + 631);
  if (v32 >= 0)
    v33 = *(unsigned __int8 *)(a1 + 631);
  else
    v33 = *(_QWORD *)(a1 + 616);
  v34 = v33 + 9;
  if (v33 + 9 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v34 >= 0x17)
  {
    v36 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v34 | 7) != 0x17)
      v36 = v34 | 7;
    v37 = v36 + 1;
    v35 = (std::string *)operator new(v36 + 1);
    __dst[0].__r_.__value_.__r.__words[2] = v37 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v35;
    __dst[0].__r_.__value_.__l.__size_ = v33 + 9;
  }
  else
  {
    memset(__dst, 0, 24);
    v35 = __dst;
    *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v33 + 9;
    if (!v33)
      goto LABEL_70;
  }
  if (v32 >= 0)
    v38 = (const void *)(a1 + 608);
  else
    v38 = *v11;
  memmove(v35, v38, v33);
LABEL_70:
  strcpy((char *)v35 + v33, "_quad.obj");
  *(_OWORD *)__p = *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_;
  *(_QWORD *)&v165 = *((_QWORD *)&__dst[0].__r_.__value_.__l + 2);
  sub_239498A04((std::__fs::filesystem::path *)__p, a1 + 584, &v209);
  if (SBYTE7(v165) < 0)
    operator delete(__p[0]);
  v39 = *(char *)(a1 + 631);
  if (v39 >= 0)
    v40 = *(unsigned __int8 *)(a1 + 631);
  else
    v40 = *(_QWORD *)(a1 + 616);
  v41 = v40 + 10;
  if (v40 + 10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v41 >= 0x17)
  {
    v43 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v43 = v41 | 7;
    v44 = v43 + 1;
    v42 = (std::string *)operator new(v43 + 1);
    __dst[0].__r_.__value_.__r.__words[2] = v44 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v42;
    __dst[0].__r_.__value_.__l.__size_ = v40 + 10;
  }
  else
  {
    memset(__dst, 0, 24);
    v42 = __dst;
    *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v40 + 10;
    if (!v40)
      goto LABEL_86;
  }
  if (v39 >= 0)
    v45 = (const void *)(a1 + 608);
  else
    v45 = *v11;
  memmove(v42, v45, v40);
LABEL_86:
  strcpy((char *)v42 + v40, "_quad.usda");
  *(_QWORD *)&v165 = *((_QWORD *)&__dst[0].__r_.__value_.__l + 2);
  *(_OWORD *)__p = *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_;
  sub_239498A04((std::__fs::filesystem::path *)__p, a1 + 584, (std::__fs::filesystem::path *)&__str);
  if (SBYTE7(v165) < 0)
    operator delete(__p[0]);
  v46 = *(char *)(a1 + 631);
  if (v46 >= 0)
    v47 = *(unsigned __int8 *)(a1 + 631);
  else
    v47 = *(_QWORD *)(a1 + 616);
  v48 = v47 + 10;
  if (v47 + 10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v48 >= 0x17)
  {
    v50 = (v48 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v48 | 7) != 0x17)
      v50 = v48 | 7;
    v51 = v50 + 1;
    v49 = (std::string *)operator new(v50 + 1);
    __dst[0].__r_.__value_.__r.__words[2] = v51 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v49;
    __dst[0].__r_.__value_.__l.__size_ = v47 + 10;
  }
  else
  {
    memset(__dst, 0, 24);
    v49 = __dst;
    *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v47 + 10;
    if (!v47)
      goto LABEL_102;
  }
  if (v46 >= 0)
    v52 = (const void *)(a1 + 608);
  else
    v52 = *v11;
  memmove(v49, v52, v47);
LABEL_102:
  strcpy((char *)v49 + v47, "_quad.usdz");
  *(_QWORD *)&v165 = *((_QWORD *)&__dst[0].__r_.__value_.__l + 2);
  *(_OWORD *)__p = *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_;
  sub_239498A04((std::__fs::filesystem::path *)__p, a1 + 584, (std::__fs::filesystem::path *)&v207);
  if (SBYTE7(v165) < 0)
    operator delete(__p[0]);
  v169 = 0;
  v167 = 0u;
  v168 = 0u;
  v165 = 0u;
  v166 = 0u;
  *(_OWORD *)__p = 0u;
  v170 = 0u;
  v171 = 0u;
  v172 = 0u;
  v173 = 0u;
  memset(v174, 0, sizeof(v174));
  v177 = 0;
  v175 = 0;
  v176 = 0;
  v178 = 0;
  memset(v182, 0, sizeof(v182));
  v179 = 0u;
  v180 = 0u;
  v181 = 0u;
  v183 = 0x7FEFFFFFFFFFFFFFLL;
  v184 = 0xFFEFFFFFFFFFFFFFLL;
  v192 = 0;
  v190 = 0;
  v191 = 0;
  v185 = 0u;
  v186 = 0u;
  v187 = 0u;
  v188 = 0u;
  v189 = 0;
  v193 = 1;
  *(std::chrono::system_clock::time_point *)&v187 = std::chrono::system_clock::now();
  task_info_outCnt[0] = 93;
  v53 = (task_name_t *)MEMORY[0x24BDAEC58];
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, (task_info_t)__dst, task_info_outCnt))
    *((float *)&v188 + 3) = (float)((float)v214 * 0.00097656) * 0.00097656;
  v193 = 1;
  sub_239586CA4((uint64_t)&v194);
  v202 = 0;
  v195[88] = 0;
  v203 = 0u;
  v204 = 0u;
  v205 = 0u;
  v206 = 0;
  *(std::chrono::system_clock::time_point *)&v187 = std::chrono::system_clock::now();
  task_info_outCnt[0] = 93;
  if (!task_info(*v53, 0x16u, (task_info_t)__dst, task_info_outCnt))
    *((float *)&v188 + 3) = (float)((float)v214 * 0.00097656) * 0.00097656;
  v193 = 1;
  v54 = operator new(0x20uLL);
  *v54 = &off_250AF6010;
  v54[1] = __p;
  v54[2] = a2;
  v240 = v54;
  sub_2396FDAA8(a3, (uint64_t)v233);
  v55 = a3[3];
  if (!v55)
    goto LABEL_111;
  if ((_QWORD *)v55 != a3)
  {
    v55 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v55 + 16))(v55);
LABEL_111:
    v228 = (_QWORD *)v55;
    goto LABEL_113;
  }
  v228 = v227;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v227);
LABEL_113:
  v56 = v229;
  v57 = a3[7];
  if (!v57)
  {
LABEL_116:
    v230 = (_QWORD *)v57;
    goto LABEL_118;
  }
  if ((_QWORD *)v57 != a3 + 4)
  {
    v57 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 16))(v57);
    goto LABEL_116;
  }
  v230 = v229;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v57 + 24))(v57, v229);
LABEL_118:
  v232 = 0;
  v58 = operator new(0x48uLL);
  v59 = v58;
  *v58 = &off_250AF6058;
  if (v228)
  {
    if (v228 == v227)
    {
      v58[4] = v58 + 1;
      (*(void (**)(_QWORD *))(v227[0] + 24))(v227);
    }
    else
    {
      v58[4] = v228;
      v228 = 0;
    }
  }
  else
  {
    v58[4] = 0;
  }
  if (v230)
  {
    if (v230 == v229)
    {
      v59[8] = v59 + 5;
      (*(void (**)(_QWORD *))(v229[0] + 24))(v229);
    }
    else
    {
      v59[8] = v230;
      v230 = 0;
    }
  }
  else
  {
    v59[8] = 0;
  }
  v232 = v59;
  sub_2396FD600((uint64_t)task_info_outCnt, (uint64_t)v233, (uint64_t)v231);
  v60 = v232;
  if (v232 == v231)
  {
    v61 = 4;
    v60 = v231;
  }
  else
  {
    if (!v232)
      goto LABEL_133;
    v61 = 5;
  }
  (*(void (**)(void))(*v60 + 8 * v61))();
LABEL_133:
  if (v230 == v229)
  {
    v62 = 4;
  }
  else
  {
    if (!v230)
      goto LABEL_138;
    v62 = 5;
    v56 = v230;
  }
  (*(void (**)(_QWORD *))(*v56 + 8 * v62))(v56);
LABEL_138:
  v63 = v228;
  if (v228 == v227)
  {
    v64 = 4;
    v63 = v227;
  }
  else
  {
    if (!v228)
      goto LABEL_143;
    v64 = 5;
  }
  (*(void (**)(void))(*v63 + 8 * v64))();
LABEL_143:
  v65 = v234;
  if (v234 == v233)
  {
    v66 = 4;
    v65 = v233;
  }
  else
  {
    if (!v234)
      goto LABEL_148;
    v66 = 5;
  }
  (*(void (**)(void))(*v65 + 8 * v66))();
LABEL_148:
  v161 = 0;
  v162 = 0;
  v163 = 0;
  v158 = 0;
  v159 = 0;
  v160 = 0;
  v67 = *(unsigned int *)(a1 + 60);
  v68 = MEMORY[0x23B83EE44]();
  v149[0] = 93;
  v69 = task_info(*v53, 0x16u, (task_info_t)__dst, v149);
  v70 = v214 + v68;
  if (v69)
    v70 = 0;
  if (v70 <= 0xEC8E51AFFLL)
  {
    if (v70 <= 0x1BF08EAFFLL)
    {
      v71 = 8;
      if (v70 <= 0x147D356FFLL)
        v71 = 4;
    }
    else
    {
      v71 = 16;
    }
  }
  else
  {
    v71 = 32;
  }
  v72 = (_OWORD *)(a1 + 560);
  v73 = *(char *)(a1 + 583);
  if (v71 != v67)
  {
    if (v73 < 0)
    {
      sub_23941A7F8(v153, *(void **)(a1 + 560), *(_QWORD *)(a1 + 568));
    }
    else
    {
      *(_OWORD *)v153 = *v72;
      v154 = *(_QWORD *)(a1 + 576);
    }
    if (SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) < 0)
      sub_23941A7F8(&v152, __src.__pn_.__r_.__value_.__l.__data_, __src.__pn_.__r_.__value_.__l.__size_);
    else
      v152 = __src;
    v75 = (uint64_t)v236;
    if (v236)
    {
      if (v236 == task_info_outCnt)
      {
        v220 = v219;
        (*(void (**)(mach_msg_type_number_t *, uint64_t *))(*(_QWORD *)task_info_outCnt + 24))(task_info_outCnt, v219);
LABEL_183:
        v78 = v221;
        v79 = (uint64_t)v238;
        if (v238)
        {
          if (v238 == v237)
          {
            v222 = v221;
            (*(void (**)(void))(*v238 + 24))();
LABEL_205:
            v84 = sub_239584488((uint64_t)v153, (uint64_t)&v152, 0, 0, (__int128 *)a1, v219, (uint64_t)__p, 1u, (uint64_t)&v161, 1);
            if (v222 == v221)
            {
              v85 = 4;
            }
            else
            {
              if (!v222)
                goto LABEL_210;
              v85 = 5;
              v78 = v222;
            }
            (*(void (**)(_QWORD *))(*v78 + 8 * v85))(v78);
LABEL_210:
            v86 = v220;
            if (v220 == v219)
            {
              v87 = 4;
              v86 = v219;
            }
            else
            {
              if (!v220)
                goto LABEL_215;
              v87 = 5;
            }
            (*(void (**)(void))(*v86 + 8 * v87))();
LABEL_215:
            if (SHIBYTE(v152.__pn_.__r_.__value_.__r.__words[2]) < 0)
            {
              operator delete(v152.__pn_.__r_.__value_.__l.__data_);
              if ((SHIBYTE(v154) & 0x80000000) == 0)
              {
LABEL_217:
                if ((v84 & 1) == 0)
                  goto LABEL_249;
LABEL_221:
                if (!*(_BYTE *)(a1 + 552))
                  goto LABEL_243;
                v88 = (uint64_t)v236;
                if (v236)
                {
                  if (v236 == task_info_outCnt)
                  {
                    v216 = v215;
                    (*(void (**)(mach_msg_type_number_t *, uint64_t *))(*(_QWORD *)task_info_outCnt + 24))(task_info_outCnt, v215);
LABEL_227:
                    v89 = v217;
                    v90 = (uint64_t)v238;
                    if (v238)
                    {
                      if (v238 == v237)
                      {
                        v218 = v217;
                        (*(void (**)(_QWORD *, _BYTE *))(v237[0] + 24))(v237, v217);
LABEL_232:
                        v80 = sub_239588A0C((uint64_t)&__src, &v209, a1, v215, (uint64_t)__p, 1, (uint64_t)&v158, 1);
                        if (v218 == v217)
                        {
                          v91 = 4;
                        }
                        else
                        {
                          if (!v218)
                          {
LABEL_237:
                            v92 = v216;
                            if (v216 == v215)
                            {
                              v93 = 4;
                              v92 = v215;
                            }
                            else
                            {
                              if (!v216)
                                goto LABEL_242;
                              v93 = 5;
                            }
                            (*(void (**)(void))(*v92 + 8 * v93))();
LABEL_242:
                            if ((v80 & 1) != 0)
                              goto LABEL_243;
LABEL_249:
                            v13 = 2;
                            goto LABEL_250;
                          }
                          v91 = 5;
                          v89 = v218;
                        }
                        (*(void (**)(_QWORD *))(*v89 + 8 * v91))(v89);
                        goto LABEL_237;
                      }
                      v90 = (*(uint64_t (**)(void))(*v238 + 16))();
                    }
                    v218 = (_BYTE *)v90;
                    goto LABEL_232;
                  }
                  v88 = (*(uint64_t (**)(void))(*(_QWORD *)v236 + 16))();
                }
                v216 = (uint64_t *)v88;
                goto LABEL_227;
              }
            }
            else if ((SHIBYTE(v154) & 0x80000000) == 0)
            {
              goto LABEL_217;
            }
            operator delete(v153[0]);
            if ((v84 & 1) == 0)
              goto LABEL_249;
            goto LABEL_221;
          }
          v79 = (*(uint64_t (**)(void))(*v238 + 16))();
        }
        v222 = (_BYTE *)v79;
        goto LABEL_205;
      }
      v75 = (*(uint64_t (**)(void))(*(_QWORD *)v236 + 16))();
    }
    v220 = (uint64_t *)v75;
    goto LABEL_183;
  }
  if (v73 < 0)
  {
    sub_23941A7F8(v156, *(void **)(a1 + 560), *(_QWORD *)(a1 + 568));
  }
  else
  {
    *(_OWORD *)v156 = *v72;
    v157 = *(_QWORD *)(a1 + 576);
  }
  if (SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&v155, __src.__pn_.__r_.__value_.__l.__data_, __src.__pn_.__r_.__value_.__l.__size_);
  else
    v155 = __src;
  v74 = (uint64_t)v236;
  if (!v236)
    goto LABEL_171;
  if (v236 != task_info_outCnt)
  {
    v74 = (*(uint64_t (**)(void))(*(_QWORD *)v236 + 16))();
LABEL_171:
    v224 = (_QWORD *)v74;
    goto LABEL_178;
  }
  v224 = v223;
  (*(void (**)(mach_msg_type_number_t *, _QWORD *))(*(_QWORD *)task_info_outCnt + 24))(task_info_outCnt, v223);
LABEL_178:
  v76 = v225;
  v77 = (uint64_t)v238;
  if (!v238)
  {
LABEL_181:
    v226 = (_BYTE *)v77;
    goto LABEL_188;
  }
  if (v238 != v237)
  {
    v77 = (*(uint64_t (**)(void))(*v238 + 16))();
    goto LABEL_181;
  }
  v226 = v225;
  (*(void (**)(_QWORD *, _BYTE *))(v237[0] + 24))(v237, v225);
LABEL_188:
  v80 = sub_239584C6C((uint64_t)v156, (uint64_t)&v155, (__int128 *)a1, v223, (uint64_t)__p, 1u, (uint64_t)&v161, 1);
  if (v226 == v225)
  {
    v81 = 4;
  }
  else
  {
    if (!v226)
      goto LABEL_193;
    v81 = 5;
    v76 = v226;
  }
  (*(void (**)(_QWORD *))(*v76 + 8 * v81))(v76);
LABEL_193:
  v82 = v224;
  if (v224 == v223)
  {
    v83 = 4;
    v82 = v223;
  }
  else
  {
    if (!v224)
      goto LABEL_198;
    v83 = 5;
  }
  (*(void (**)(void))(*v82 + 8 * v83))();
LABEL_198:
  if (SHIBYTE(v155.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v155.__pn_.__r_.__value_.__l.__data_);
    if (SHIBYTE(v157) < 0)
      goto LABEL_202;
    goto LABEL_242;
  }
  if ((SHIBYTE(v157) & 0x80000000) == 0)
    goto LABEL_242;
LABEL_202:
  operator delete(v156[0]);
  if ((v80 & 1) == 0)
    goto LABEL_249;
LABEL_243:
  std::__fs::filesystem::__status(&v211, 0);
  v13 = 3;
  if (!__dst[0].__r_.__value_.__s.__data_[0]
    || __dst[0].__r_.__value_.__s.__data_[0] == 255
    || (std::__fs::filesystem::__status(&v210, 0), !__dst[0].__r_.__value_.__s.__data_[0])
    || __dst[0].__r_.__value_.__s.__data_[0] == 255)
  {
LABEL_250:
    v96 = (std::string *)v158;
    if (!v158)
      goto LABEL_258;
    goto LABEL_251;
  }
  *(_QWORD *)v149 = 0;
  v150 = 0;
  v151 = 0;
  v150 = (std::string *)sub_23958837C((char **)v149, (uint64_t)&v211);
  v94 = (const std::__fs::filesystem::path *)v161;
  v95 = v162;
  if (v161 != v162)
  {
    while (1)
    {
      v110 = std::__fs::filesystem::path::__extension(v94);
      if (v110.__size_ > 0x7FFFFFFFFFFFFFF7)
        sub_23941A5AC();
      if (v110.__size_ >= 0x17)
        break;
      *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v110.__size_;
      v111 = __dst;
      if (v110.__size_)
        goto LABEL_314;
LABEL_315:
      v111->__r_.__value_.__s.__data_[v110.__size_] = 0;
      v148 = (std::__fs::filesystem::path)__dst[0];
      memset(&v147, 0, sizeof(v147));
      sub_23948900C(&v147.__pn_, (std::string *)".obj", (std::string *)"");
      if ((v147.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v114.__data_ = (const std::string_view::value_type *)&v147;
      else
        v114.__data_ = (const std::string_view::value_type *)v147.__pn_.__r_.__value_.__r.__words[0];
      if ((v147.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v114.__size_ = HIBYTE(v147.__pn_.__r_.__value_.__r.__words[2]);
      else
        v114.__size_ = v147.__pn_.__r_.__value_.__l.__size_;
      if (!std::__fs::filesystem::path::__compare(&v148, v114))
      {
        v117 = 0;
        if (SHIBYTE(v147.__pn_.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_327;
        goto LABEL_343;
      }
      v115 = std::__fs::filesystem::path::__extension(v94);
      if (v115.__size_ > 0x7FFFFFFFFFFFFFF7)
        sub_23941A5AC();
      if (v115.__size_ >= 0x17)
      {
        v118 = (v115.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v115.__size_ | 7) != 0x17)
          v118 = v115.__size_ | 7;
        v119 = v118 + 1;
        v116 = (std::string *)operator new(v118 + 1);
        __dst[0].__r_.__value_.__r.__words[2] = v119 | 0x8000000000000000;
        __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v116;
        __dst[0].__r_.__value_.__l.__size_ = v115.__size_;
LABEL_333:
        memmove(v116, v115.__data_, v115.__size_);
        goto LABEL_334;
      }
      *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v115.__size_;
      v116 = __dst;
      if (v115.__size_)
        goto LABEL_333;
LABEL_334:
      v116->__r_.__value_.__s.__data_[v115.__size_] = 0;
      v146 = (std::__fs::filesystem::path)__dst[0];
      memset(__dst, 0, 24);
      sub_23948900C(__dst, (std::string *)".mtl", (std::string *)"");
      if ((__dst[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v120.__data_ = (const std::string_view::value_type *)__dst;
      else
        v120.__data_ = (const std::string_view::value_type *)__dst[0].__r_.__value_.__r.__words[0];
      if ((__dst[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v120.__size_ = HIBYTE(__dst[0].__r_.__value_.__r.__words[2]);
      else
        v120.__size_ = __dst[0].__r_.__value_.__l.__size_;
      v117 = std::__fs::filesystem::path::__compare(&v146, v120) != 0;
      if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__dst[0].__r_.__value_.__l.__data_);
        if ((SHIBYTE(v146.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_342:
          if (SHIBYTE(v147.__pn_.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_327;
          goto LABEL_343;
        }
      }
      else if ((SHIBYTE(v146.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_342;
      }
      operator delete(v146.__pn_.__r_.__value_.__l.__data_);
      if (SHIBYTE(v147.__pn_.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_327:
        operator delete(v147.__pn_.__r_.__value_.__l.__data_);
        if (SHIBYTE(v148.__pn_.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_328;
        goto LABEL_344;
      }
LABEL_343:
      if (SHIBYTE(v148.__pn_.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_328:
        operator delete(v148.__pn_.__r_.__value_.__l.__data_);
        if (v117)
          goto LABEL_345;
        goto LABEL_306;
      }
LABEL_344:
      if (v117)
      {
LABEL_345:
        v121 = v150;
        if ((unint64_t)v150 >= v151)
        {
          v109 = sub_23958837C((char **)v149, (uint64_t)v94);
        }
        else
        {
          if (SHIBYTE(v94->__pn_.__r_.__value_.__r.__words[2]) < 0)
          {
            sub_23941A7F8(v150, v94->__pn_.__r_.__value_.__l.__data_, v94->__pn_.__r_.__value_.__l.__size_);
          }
          else
          {
            v122 = *(_OWORD *)&v94->__pn_.__r_.__value_.__l.__data_;
            v150->__r_.__value_.__r.__words[2] = v94->__pn_.__r_.__value_.__r.__words[2];
            *(_OWORD *)&v121->__r_.__value_.__l.__data_ = v122;
          }
          v109 = (char *)&v121[1];
        }
        v150 = (std::string *)v109;
      }
LABEL_306:
      if (++v94 == (const std::__fs::filesystem::path *)v95)
        goto LABEL_353;
    }
    v112 = (v110.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v110.__size_ | 7) != 0x17)
      v112 = v110.__size_ | 7;
    v113 = v112 + 1;
    v111 = (std::string *)operator new(v112 + 1);
    __dst[0].__r_.__value_.__r.__words[2] = v113 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v111;
    __dst[0].__r_.__value_.__l.__size_ = v110.__size_;
LABEL_314:
    memmove(v111, v110.__data_, v110.__size_);
    goto LABEL_315;
  }
LABEL_353:
  std::string::operator=((std::string *)(a2 + 24), &v211.__pn_);
  std::string::operator=((std::string *)(a2 + 48), &v210.__pn_);
  if (&v161 != (void **)a2)
    sub_239587ED8(a2, (std::string *)v161, v162, 0xAAAAAAAAAAAAAAABLL * (((char *)v162 - (_BYTE *)v161) >> 3));
  if ((mach_msg_type_number_t *)(a2 + 72) != v149)
    sub_239587ED8(a2 + 72, *(std::string **)v149, v150, 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v150 - *(_QWORD *)v149) >> 3));
  if (*(_BYTE *)(a1 + 552))
  {
    memset(&v148, 0, sizeof(v148));
    v148.__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)sub_23958837C(&v148.__pn_.__r_.__value_.__l.__data_, (uint64_t)&__str);
    v123 = (const std::__fs::filesystem::path *)v158;
    v124 = v159;
    if (v158 != v159)
    {
      while (1)
      {
        v126 = std::__fs::filesystem::path::__extension(v123);
        if (v126.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v126.__size_ >= 0x17)
          break;
        *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v126.__size_;
        v127 = __dst;
        if (v126.__size_)
          goto LABEL_370;
LABEL_371:
        v127->__r_.__value_.__s.__data_[v126.__size_] = 0;
        v147 = (std::__fs::filesystem::path)__dst[0];
        memset(&v146, 0, sizeof(v146));
        sub_23948900C(&v146.__pn_, (std::string *)".obj", (std::string *)"");
        if ((v146.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v130.__data_ = (const std::string_view::value_type *)&v146;
        else
          v130.__data_ = (const std::string_view::value_type *)v146.__pn_.__r_.__value_.__r.__words[0];
        if ((v146.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v130.__size_ = HIBYTE(v146.__pn_.__r_.__value_.__r.__words[2]);
        else
          v130.__size_ = v146.__pn_.__r_.__value_.__l.__size_;
        if (!std::__fs::filesystem::path::__compare(&v147, v130))
        {
          v133 = 0;
          if (SHIBYTE(v146.__pn_.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_383;
          goto LABEL_399;
        }
        v131 = std::__fs::filesystem::path::__extension(v123);
        if (v131.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v131.__size_ >= 0x17)
        {
          v134 = (v131.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v131.__size_ | 7) != 0x17)
            v134 = v131.__size_ | 7;
          v135 = v134 + 1;
          v132 = (std::string *)operator new(v134 + 1);
          __dst[0].__r_.__value_.__r.__words[2] = v135 | 0x8000000000000000;
          __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v132;
          __dst[0].__r_.__value_.__l.__size_ = v131.__size_;
LABEL_389:
          memmove(v132, v131.__data_, v131.__size_);
          goto LABEL_390;
        }
        *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v131.__size_;
        v132 = __dst;
        if (v131.__size_)
          goto LABEL_389;
LABEL_390:
        v132->__r_.__value_.__s.__data_[v131.__size_] = 0;
        v145 = (std::__fs::filesystem::path)__dst[0];
        memset(__dst, 0, 24);
        sub_23948900C(__dst, (std::string *)".mtl", (std::string *)"");
        if ((__dst[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v136.__data_ = (const std::string_view::value_type *)__dst;
        else
          v136.__data_ = (const std::string_view::value_type *)__dst[0].__r_.__value_.__r.__words[0];
        if ((__dst[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v136.__size_ = HIBYTE(__dst[0].__r_.__value_.__r.__words[2]);
        else
          v136.__size_ = __dst[0].__r_.__value_.__l.__size_;
        v133 = std::__fs::filesystem::path::__compare(&v145, v136) != 0;
        if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(__dst[0].__r_.__value_.__l.__data_);
          if ((SHIBYTE(v145.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_398:
            if (SHIBYTE(v146.__pn_.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_383;
            goto LABEL_399;
          }
        }
        else if ((SHIBYTE(v145.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_398;
        }
        operator delete(v145.__pn_.__r_.__value_.__l.__data_);
        if (SHIBYTE(v146.__pn_.__r_.__value_.__r.__words[2]) < 0)
        {
LABEL_383:
          operator delete(v146.__pn_.__r_.__value_.__l.__data_);
          if (SHIBYTE(v147.__pn_.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_384;
          goto LABEL_400;
        }
LABEL_399:
        if (SHIBYTE(v147.__pn_.__r_.__value_.__r.__words[2]) < 0)
        {
LABEL_384:
          operator delete(v147.__pn_.__r_.__value_.__l.__data_);
          if (v133)
            goto LABEL_401;
          goto LABEL_362;
        }
LABEL_400:
        if (v133)
        {
LABEL_401:
          size = (_OWORD *)v148.__pn_.__r_.__value_.__l.__size_;
          if (v148.__pn_.__r_.__value_.__l.__size_ >= v148.__pn_.__r_.__value_.__r.__words[2])
          {
            v125 = sub_23958837C(&v148.__pn_.__r_.__value_.__l.__data_, (uint64_t)v123);
          }
          else
          {
            if (SHIBYTE(v123->__pn_.__r_.__value_.__r.__words[2]) < 0)
            {
              sub_23941A7F8((_BYTE *)v148.__pn_.__r_.__value_.__l.__size_, v123->__pn_.__r_.__value_.__l.__data_, v123->__pn_.__r_.__value_.__l.__size_);
            }
            else
            {
              v138 = *(_OWORD *)&v123->__pn_.__r_.__value_.__l.__data_;
              *(_QWORD *)(v148.__pn_.__r_.__value_.__l.__size_ + 16) = *((_QWORD *)&v123->__pn_.__r_.__value_.__l + 2);
              *size = v138;
            }
            v125 = (char *)size + 24;
          }
          v148.__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)v125;
        }
LABEL_362:
        if (++v123 == (const std::__fs::filesystem::path *)v124)
          goto LABEL_409;
      }
      v128 = (v126.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v126.__size_ | 7) != 0x17)
        v128 = v126.__size_ | 7;
      v129 = v128 + 1;
      v127 = (std::string *)operator new(v128 + 1);
      __dst[0].__r_.__value_.__r.__words[2] = v129 | 0x8000000000000000;
      __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v127;
      __dst[0].__r_.__value_.__l.__size_ = v126.__size_;
LABEL_370:
      memmove(v127, v126.__data_, v126.__size_);
      goto LABEL_371;
    }
LABEL_409:
    std::string::operator=((std::string *)(a2 + 120), &__str);
    std::string::operator=((std::string *)(a2 + 144), &v207);
    if ((void **)(a2 + 96) != &v158)
      sub_239587ED8(a2 + 96, (std::string *)v158, v159, 0xAAAAAAAAAAAAAAABLL * (((char *)v159 - (_BYTE *)v158) >> 3));
    if ((std::__fs::filesystem::path *)(a2 + 168) != &v148)
      sub_239587ED8(a2 + 168, (std::string *)v148.__pn_.__r_.__value_.__l.__data_, (std::string *)v148.__pn_.__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL* ((uint64_t)(v148.__pn_.__r_.__value_.__l.__size_ - v148.__pn_.__r_.__value_.__r.__words[0]) >> 3));
    v139 = v148.__pn_.__r_.__value_.__r.__words[0];
    if (v148.__pn_.__r_.__value_.__r.__words[0])
    {
      v140 = v148.__pn_.__r_.__value_.__l.__size_;
      v141 = (void *)v148.__pn_.__r_.__value_.__r.__words[0];
      if (v148.__pn_.__r_.__value_.__l.__size_ != v148.__pn_.__r_.__value_.__r.__words[0])
      {
        do
        {
          if (*(char *)(v140 - 1) < 0)
            operator delete(*(void **)(v140 - 24));
          v140 -= 24;
        }
        while (v140 != v139);
        v141 = (void *)v148.__pn_.__r_.__value_.__r.__words[0];
      }
      v148.__pn_.__r_.__value_.__l.__size_ = v139;
      operator delete(v141);
    }
  }
  v142 = *(std::string **)v149;
  if (*(_QWORD *)v149)
  {
    v143 = v150;
    v144 = *(std::string **)v149;
    if (v150 != *(std::string **)v149)
    {
      do
      {
        if (SHIBYTE(v143[-1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v143[-1].__r_.__value_.__l.__data_);
        --v143;
      }
      while (v143 != v142);
      v144 = *(std::string **)v149;
    }
    v150 = v142;
    operator delete(v144);
  }
  v13 = 0;
  v96 = (std::string *)v158;
  if (v158)
  {
LABEL_251:
    v97 = v159;
    v98 = v96;
    if (v159 != v96)
    {
      do
      {
        if (SHIBYTE(v97[-1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v97[-1].__r_.__value_.__l.__data_);
        --v97;
      }
      while (v97 != v96);
      v98 = v158;
    }
    v159 = v96;
    operator delete(v98);
  }
LABEL_258:
  v99 = (std::string *)v161;
  if (v161)
  {
    v100 = v162;
    v101 = v161;
    if (v162 != v161)
    {
      do
      {
        if (SHIBYTE(v100[-1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v100[-1].__r_.__value_.__l.__data_);
        --v100;
      }
      while (v100 != v99);
      v101 = v161;
    }
    v162 = v99;
    operator delete(v101);
  }
  v102 = v238;
  if (v238 == v237)
  {
    v103 = 4;
    v102 = v237;
  }
  else
  {
    if (!v238)
      goto LABEL_271;
    v103 = 5;
  }
  (*(void (**)(void))(*v102 + 8 * v103))();
LABEL_271:
  v104 = v236;
  if (v236 == task_info_outCnt)
  {
    v105 = 4;
    v104 = task_info_outCnt;
  }
  else
  {
    if (!v236)
      goto LABEL_276;
    v105 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v104 + 8 * v105))();
LABEL_276:
  if (!v240)
    sub_2394172E0();
  (*(void (**)(_BYTE *))(*(_QWORD *)v240 + 48))(v240);
  v106 = v240;
  if (v240 == v239)
  {
    v107 = 4;
    v106 = v239;
  }
  else
  {
    if (!v240)
      goto LABEL_282;
    v107 = 5;
  }
  (*(void (**)(void))(*v106 + 8 * v107))();
LABEL_282:
  if (v201 < 0)
  {
    operator delete(v200);
    if ((v199 & 0x80000000) == 0)
    {
LABEL_284:
      v108 = v196;
      if (!v196)
        goto LABEL_286;
      goto LABEL_285;
    }
  }
  else if ((v199 & 0x80000000) == 0)
  {
    goto LABEL_284;
  }
  operator delete(v198);
  v108 = v196;
  if (v196)
  {
LABEL_285:
    v197 = v108;
    operator delete(v108);
  }
LABEL_286:
  sub_239586EB4((uint64_t)v195);
  if (v190)
  {
    v191 = v190;
    operator delete(v190);
  }
  if (SHIBYTE(v207.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v207.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_290:
      if ((SHIBYTE(v209.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_291;
      goto LABEL_300;
    }
  }
  else if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_290;
  }
  operator delete(__str.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v209.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_291:
    if ((SHIBYTE(v210.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_292;
    goto LABEL_301;
  }
LABEL_300:
  operator delete(v209.__pn_.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v210.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_292:
    if ((SHIBYTE(v211.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_293;
    goto LABEL_302;
  }
LABEL_301:
  operator delete(v210.__pn_.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v211.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_293:
    if (SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_303;
    return v13;
  }
LABEL_302:
  operator delete(v211.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(__src.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_303:
    operator delete(__src.__pn_.__r_.__value_.__l.__data_);
  return v13;
}

void sub_239B44C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;

  sub_23941A260(&a23);
  sub_23941A260(&a26);
  sub_23941A260(&a45);
  sub_23941A260(&a48);
  sub_23942FE80((_QWORD *)(v51 - 200));
  sub_239416834((_QWORD *)(v51 - 136));
  sub_239B4515C((uint64_t)&a51);
  if (SLOBYTE(STACK[0x577]) < 0)
    operator delete((void *)STACK[0x560]);
  if (SLOBYTE(STACK[0x58F]) < 0)
    operator delete((void *)STACK[0x578]);
  if (SLOBYTE(STACK[0x5A7]) < 0)
    operator delete((void *)STACK[0x590]);
  if (SLOBYTE(STACK[0x5BF]) < 0)
    operator delete((void *)STACK[0x5A8]);
  if (SLOBYTE(STACK[0x5D7]) < 0)
    operator delete((void *)STACK[0x5C0]);
  if (SLOBYTE(STACK[0x5EF]) < 0)
  {
    operator delete((void *)STACK[0x5D8]);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B4515C(uint64_t a1)
{
  void *v2;
  void *v3;

  if (*(char *)(a1 + 951) < 0)
  {
    operator delete(*(void **)(a1 + 928));
    if ((*(char *)(a1 + 919) & 0x80000000) == 0)
    {
LABEL_3:
      v2 = *(void **)(a1 + 872);
      if (!v2)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((*(char *)(a1 + 919) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 896));
  v2 = *(void **)(a1 + 872);
  if (v2)
  {
LABEL_4:
    *(_QWORD *)(a1 + 880) = v2;
    operator delete(v2);
  }
LABEL_5:
  sub_239586EB4(a1 + 472);
  v3 = *(void **)(a1 + 384);
  if (v3)
  {
    *(_QWORD *)(a1 + 392) = v3;
    operator delete(v3);
  }
  return a1;
}

_QWORD *sub_239B451D8(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF6058;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_239B45264(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF6058;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B45300(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AF6058;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
  {
    if (v5 == a1 + 40)
    {
      v2[8] = v2 + 5;
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
      return v2;
    }
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  }
  v2[8] = v5;
  return v2;
}

void sub_239B453BC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
LABEL_6:
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B45408(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AF6058;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_239B454D8(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B45514(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = (_QWORD *)a1[4];
  if (result == v2)
  {
    v7 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239B45598(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

void sub_239B45618(uint64_t a1, float *a2)
{
  float v2;
  void *__p;
  char v4;

  v2 = *a2;
  v4 = 0;
  LOBYTE(__p) = 0;
  sub_2396FD7C8(a1 + 8, (uint64_t)&__p, v2);
  if (v4 < 0)
    operator delete(__p);
}

void sub_239B45660(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239B45680()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B45694(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF6010;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B456D4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6010;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

__n128 sub_239B456FC(uint64_t a1)
{
  uint64_t v2;
  std::chrono::system_clock::time_point v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __n128 result;
  int v8;
  __int128 v9;
  _BYTE *v10;
  _BYTE *v11;
  int64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  rusage v17;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v20;

  v2 = *(_QWORD *)(a1 + 8);
  v3.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)(v2 + 352) = v3;
  *(double *)(v2 + 360) = (double)(v3.__d_.__rep_ - *(_QWORD *)(v2 + 344)) / 1000000.0;
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(v2 + 376) = (float)((float)v20 * 0.00097656) * 0.00097656;
  *(_BYTE *)(v2 + 408) = 0;
  getrusage(0, &v17);
  *(float *)(v2 + 368) = (float)((float)v17.ru_maxrss * 0.00097656) * 0.00097656;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = (void *)(v5 + 192);
  if (*(_BYTE *)(v5 + 1224))
  {
    sub_239B3FF0C((uint64_t)v6, *(_QWORD *)(a1 + 8));
  }
  else
  {
    memcpy(v6, *(const void **)(a1 + 8), 0x158uLL);
    v8 = *(_DWORD *)(v4 + 376);
    v9 = *(_OWORD *)(v4 + 360);
    *(_OWORD *)(v5 + 536) = *(_OWORD *)(v4 + 344);
    *(_OWORD *)(v5 + 552) = v9;
    *(_DWORD *)(v5 + 568) = v8;
    *(_QWORD *)(v5 + 584) = 0;
    *(_QWORD *)(v5 + 592) = 0;
    *(_QWORD *)(v5 + 576) = 0;
    v11 = *(_BYTE **)(v4 + 384);
    v10 = *(_BYTE **)(v4 + 392);
    v12 = v10 - v11;
    if (v10 != v11)
    {
      if (v12 < 0)
        sub_2394189F8();
      v13 = (char *)operator new(v10 - v11);
      *(_QWORD *)(v5 + 576) = v13;
      *(_QWORD *)(v5 + 584) = v13;
      v14 = &v13[4 * (v12 >> 2)];
      *(_QWORD *)(v5 + 592) = v14;
      memcpy(v13, v11, v12);
      *(_QWORD *)(v5 + 584) = v14;
    }
    *(_BYTE *)(v5 + 600) = *(_BYTE *)(v4 + 408);
    sub_239973BF0(v5 + 608, (__int128 *)(v4 + 416));
    *(_BYTE *)(v5 + 1160) = *(_BYTE *)(v4 + 968);
    result = *(__n128 *)(v4 + 976);
    v15 = *(_OWORD *)(v4 + 992);
    v16 = *(_OWORD *)(v4 + 1008);
    *(_QWORD *)(v5 + 1216) = *(_QWORD *)(v4 + 1024);
    *(_OWORD *)(v5 + 1200) = v16;
    *(_OWORD *)(v5 + 1184) = v15;
    *(__n128 *)(v5 + 1168) = result;
    *(_BYTE *)(v5 + 1224) = 1;
  }
  return result;
}

void sub_239B458B0(_Unwind_Exception *exception_object)
{
  void **v1;
  uint64_t v2;
  void *v4;

  v4 = *v1;
  if (*v1)
  {
    *(_QWORD *)(v2 + 584) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B458D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int sig;
  int v19;
  uint64_t v20;
  mach_msg_type_number_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  _QWORD *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *p_shared_owners;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  BOOL v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  pthread_rwlock_t *p_task_info_out;
  uint64_t v90;
  std::__shared_weak_count *v91;
  _QWORD *v92;
  void *shared_owners;
  std::__shared_weak_count_vtbl *v94;
  char *v95;
  __int128 v96;
  __int128 v97;
  _QWORD *v98;
  uint64_t v99;
  pthread_rwlock_t *v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  char v121;
  float64x2_t v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  float64x2_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  float v142;
  int v143;
  _QWORD *v144;
  uint64_t v145;
  mach_msg_type_number_t *v146;
  uint64_t v147;
  std::__shared_weak_count *v148;
  uint64_t v149;
  unint64_t *v150;
  unint64_t v151;
  std::__shared_weak_count *v152;
  unint64_t *v153;
  unint64_t v154;
  std::__shared_weak_count *v155;
  char *v156;
  __int128 v157;
  __int128 v158;
  _QWORD *v159;
  uint64_t v160;
  std::__shared_weak_count *v161;
  unint64_t *v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  std::__shared_weak_count *v167;
  unint64_t *v168;
  unint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t *v174;
  unint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  int v194;
  _QWORD *v195;
  uint64_t v196;
  mach_msg_type_number_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t *v201;
  unint64_t v202;
  uint64_t v203;
  std::__shared_weak_count *v204;
  _QWORD *v205;
  unint64_t *v206;
  unint64_t v207;
  uint64_t v208;
  char *v209;
  __int128 v210;
  __int128 v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  __int128 v216;
  __int128 v217;
  _QWORD *v218;
  uint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  int v222;
  int *v223;
  int *v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t *v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t *v235;
  unint64_t v236;
  char v237;
  _QWORD *v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t v241;
  _QWORD *v242;
  uint64_t v243;
  std::__shared_weak_count *v244;
  unint64_t *v245;
  unint64_t v246;
  unint64_t *v247;
  unint64_t v248;
  _QWORD *v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  std::__shared_weak_count *v253;
  unint64_t *v254;
  unint64_t v255;
  std::__shared_weak_count *v256;
  unint64_t *v257;
  unint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  __int128 v268;
  uint64_t v269;
  __int128 v270;
  __int128 v271;
  int v272[2];
  __int128 v273;
  uint64_t v274;
  const char *v275;
  int v276;
  const char *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  __int128 v281;
  uint64_t v282;
  __int128 v283;
  __int128 v284;
  uint64_t v285;
  uint64_t v286;
  __int128 v287;
  std::__shared_weak_count *v288;
  __int128 v289;
  __int128 v290;
  int v291[2];
  std::__shared_weak_count *v292;
  uint64_t v293;
  uint64_t v294;
  __int128 v295;
  std::__shared_weak_count *v296;
  __int128 v297;
  __int128 v298;
  std::__shared_weak_count *v299;
  std::__shared_weak_count *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  __int128 v305;
  std::__shared_weak_count *v306;
  __int128 v307;
  __int128 v308;
  uint64_t v309;
  std::__shared_weak_count *v310;
  uint64_t v311;
  std::__shared_weak_count *v312;
  _QWORD v313[8];
  char v314;
  char v315;
  char v316;
  uint64_t v317;
  _QWORD v318[3];
  float v319;
  char v320;
  __int128 v321;
  uint64_t v322;
  std::string v323;
  _QWORD v324[4];
  _BYTE v325[360];
  std::string v326[4];
  _QWORD v327[3];
  _QWORD *v328;
  _QWORD v329[3];
  _QWORD *v330;
  _QWORD v331[8];
  _QWORD v332[3];
  _QWORD *v333;
  _BYTE v334[24];
  _BYTE *v335;
  _BYTE v336[24];
  _BYTE *v337;
  _QWORD v338[8];
  pthread_rwlock_t task_info_out;
  int *v340;
  int *v341;
  _BYTE v342[24];
  _BYTE *v343;
  _BYTE v344[24];
  _BYTE *v345;
  _QWORD v346[8];
  mach_msg_type_number_t task_info_outCnt[4];
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  uint64_t v352;
  char v353;
  __int16 v354;
  __int128 v355;
  char v356;
  uint64_t v357;
  __int128 v358;
  char v359;
  int v360;
  __int128 v361;
  __int128 v362;
  uint64_t v363;
  __int128 v364;
  __int128 v365;
  char v366;
  int v367;
  uint64_t v368;
  int v369;
  uint64_t v370;
  uint64_t v371;
  char v372;
  int v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  char v379;
  int v380;
  uint64_t v381;
  uint64_t v382;
  int32x2_t v383;
  uint64_t v384;
  int v385;
  uint64_t v386;
  __int128 v387;
  uint64_t v388;
  char v389;
  uint64_t v390;
  __int128 v391;
  __int128 v392;
  char v393;
  uint64_t v394;
  char v395;
  char v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  _QWORD v404[4];
  _QWORD v405[4];
  _QWORD v406[3];
  _QWORD *v407;
  _BYTE v408[24];
  _BYTE *v409;
  _QWORD v410[3];
  _QWORD *v411;
  _QWORD v412[3];
  _QWORD *v413;
  _QWORD v414[3];
  _QWORD *v415;
  _BYTE v416[24];
  _BYTE *v417;
  _QWORD v418[3];
  _QWORD *v419;
  _BYTE v420[24];
  _BYTE *v421;
  _BYTE v422[24];
  _BYTE *v423;
  _QWORD v424[3];
  _QWORD *v425;
  _BYTE v426[24];
  _BYTE *v427;
  _QWORD v428[3];
  _QWORD *v429;
  _QWORD v430[3];
  _QWORD *v431;
  _QWORD v432[3];
  _QWORD *v433;
  _QWORD v434[3];
  _QWORD *v435;
  _QWORD v436[3];
  _QWORD *v437;
  _BYTE v438[24];
  _BYTE *v439;
  _BYTE v440[24];
  _BYTE *v441;
  _BYTE v442[24];
  _BYTE *v443;
  _QWORD v444[3];
  _QWORD *v445;
  _BYTE v446[24];
  _BYTE *v447;
  _QWORD v448[3];
  _QWORD *v449;
  _QWORD v450[3];
  _QWORD *v451;
  _QWORD v452[3];
  _QWORD *v453;
  _QWORD v454[3];
  _QWORD *v455;
  _BYTE v456[24];
  _BYTE *v457;
  _BYTE v458[24];
  _BYTE *v459;
  _BYTE v460[24];
  _BYTE *v461;
  _BYTE v462[568];
  _QWORD v463[3];
  _QWORD *v464;
  _QWORD v465[3];
  _QWORD *v466;
  _BYTE v467[24];
  _BYTE *v468;
  _BYTE v469[24];
  _BYTE *v470;
  _QWORD v471[3];
  _QWORD *v472;
  _BYTE v473[24];
  _BYTE *v474;
  _BYTE v475[24];
  _BYTE *v476;
  uint64_t v477;

  v1 = (_QWORD *)MEMORY[0x24BDAC7A8](a1);
  v477 = *MEMORY[0x24BDAC8D0];
  if (v1[6] != v1[7] && v1[60] != 0 && v1[58] != 0 && *v2 != 0 && v2[2] != 0 && v2[4] != 0 && v2[6] != 0)
  {
    v11 = v3;
    v12 = v2;
    v13 = (uint64_t)v1;
    sub_239B48884((uint64_t)v313);
    v318[0] = std::chrono::system_clock::now().__d_.__rep_;
    task_info_outCnt[0] = 93;
    if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, (task_info_t)&task_info_out, task_info_outCnt))
      v319 = (float)((float)*(unint64_t *)&task_info_out.__opaque[136] * 0.00097656) * 0.00097656;
    v320 = 1;
    v321 = *(_OWORD *)v13;
    v322 = *(_QWORD *)(v13 + 16);
    std::string::operator=(&v323, (const std::string *)(v13 + 24));
    if (&v321 != (__int128 *)v13)
      sub_23945D3D0(v324, *(char **)(v13 + 48), *(char **)(v13 + 56), (uint64_t)(*(_QWORD *)(v13 + 56) - *(_QWORD *)(v13 + 48)) >> 3);
    v324[3] = *(_QWORD *)(v13 + 72);
    memcpy(v325, (const void *)(v13 + 80), sizeof(v325));
    std::string::operator=(v326, (const std::string *)(v13 + 440));
    v14 = operator new(0x20uLL);
    *v14 = &off_250AF60A0;
    v14[1] = v313;
    v14[2] = v12;
    v476 = v14;
    v15 = *(_QWORD *)(v13 + 464);
    v16 = v12[2];
    v17 = v12[4];
    v262 = v12[6];
    v263 = *v12;
    task_info_out.__sig = (uint64_t)sub_239B48C3C;
    *(_QWORD *)task_info_out.__opaque = 0;
    *(_QWORD *)&task_info_out.__opaque[8] = v263;
    sub_239B48F24((uint64_t)&task_info_out);
    LODWORD(task_info_out.__sig) = 0x7FFFFFFF;
    memset(task_info_out.__opaque, 0, 49);
    *(_QWORD *)&task_info_out.__opaque[64] = 0;
    *(_QWORD *)&task_info_out.__opaque[56] = 0;
    sub_2397A1618((pthread_mutex_t *)&task_info_out.__opaque[168]);
    sig = task_info_out.__sig;
    if (LODWORD(task_info_out.__sig) > 0x7FFFFFFE)
    {
      sig = 0x7FFFFFFF;
    }
    else if (LODWORD(task_info_out.__sig) < 2)
    {
      sig = 1;
    }
    LODWORD(task_info_out.__sig) = sig;
    pthread_cond_init((pthread_cond_t *)&task_info_out.__opaque[72], 0);
    pthread_cond_init((pthread_cond_t *)&task_info_out.__opaque[120], 0);
    *(_QWORD *)task_info_outCnt = &off_250AF6130;
    *(_QWORD *)&task_info_outCnt[2] = &task_info_out;
    *(_QWORD *)&v349 = task_info_outCnt;
    v19 = sub_239B490E4(v16, task_info_outCnt);
    v20 = v15;
    v21 = (mach_msg_type_number_t *)v349;
    if ((mach_msg_type_number_t *)v349 == task_info_outCnt)
    {
      v22 = 4;
      v21 = task_info_outCnt;
    }
    else
    {
      if (!(_QWORD)v349)
        goto LABEL_35;
      v22 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v21 + 8 * v22))();
LABEL_35:
    if (v19)
    {
      sub_2395BFB54((unsigned int *)&task_info_out);
      sub_2395C2A4C((uint64_t)&task_info_out);
    }
    sub_2395C29C4((uint64_t)&task_info_out);
    task_info_out.__sig = (uint64_t)sub_239B48C3C;
    *(_QWORD *)task_info_out.__opaque = 0;
    *(_QWORD *)&task_info_out.__opaque[8] = v17;
    sub_239B48F24((uint64_t)&task_info_out);
    task_info_out.__sig = (uint64_t)sub_239B48C3C;
    *(_QWORD *)task_info_out.__opaque = 0;
    *(_QWORD *)&task_info_out.__opaque[8] = v262;
    sub_239B48F24((uint64_t)&task_info_out);
    v23 = *(_QWORD *)(v13 + 488);
    v311 = *(_QWORD *)(v13 + 480);
    v312 = (std::__shared_weak_count *)v23;
    if (v23)
    {
      v24 = (unint64_t *)(v23 + 8);
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
    }
    v26 = *(_QWORD *)(v13 + 504);
    v309 = *(_QWORD *)(v13 + 496);
    v310 = (std::__shared_weak_count *)v26;
    if (v26)
    {
      v27 = (unint64_t *)(v26 + 8);
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
    }
    sub_2396FDAA8(v11, (uint64_t)v469);
    v29 = v11[3];
    if (v29)
    {
      if ((_QWORD *)v29 == v11)
      {
        v464 = v463;
        (*(void (**)(_QWORD *, _QWORD *))(*v11 + 24))(v11, v463);
LABEL_48:
        v30 = v465;
        v31 = v11[7];
        if (v31)
        {
          if ((_QWORD *)v31 == v11 + 4)
          {
            v466 = v465;
            (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v31 + 24))(v31, v465);
LABEL_53:
            v468 = 0;
            v32 = operator new(0x48uLL);
            v33 = v32;
            *v32 = &off_250AF6178;
            if (v464)
            {
              if (v464 == v463)
              {
                v32[4] = v32 + 1;
                (*(void (**)(_QWORD *))(v463[0] + 24))(v463);
              }
              else
              {
                v32[4] = v464;
                v464 = 0;
              }
            }
            else
            {
              v32[4] = 0;
            }
            if (v466)
            {
              if (v466 == v465)
              {
                v33[8] = v33 + 5;
                (*(void (**)(_QWORD *))(v465[0] + 24))(v465);
              }
              else
              {
                v33[8] = v466;
                v466 = 0;
              }
            }
            else
            {
              v33[8] = 0;
            }
            v468 = v33;
            sub_2396FD600((uint64_t)v471, (uint64_t)v469, (uint64_t)v467);
            v34 = v468;
            if (v468 == v467)
            {
              v35 = 4;
              v34 = v467;
            }
            else
            {
              if (!v468)
                goto LABEL_68;
              v35 = 5;
            }
            (*(void (**)(void))(*v34 + 8 * v35))();
LABEL_68:
            if (v466 == v465)
            {
              v36 = 4;
            }
            else
            {
              if (!v466)
                goto LABEL_73;
              v36 = 5;
              v30 = v466;
            }
            (*(void (**)(_QWORD *))(*v30 + 8 * v36))(v30);
LABEL_73:
            v37 = v464;
            if (v464 == v463)
            {
              v38 = 4;
              v37 = v463;
            }
            else
            {
              if (!v464)
                goto LABEL_78;
              v38 = 5;
            }
            (*(void (**)(void))(*v37 + 8 * v38))();
LABEL_78:
            v39 = v470;
            if (v470 == v469)
            {
              v40 = 4;
              v39 = v469;
            }
            else
            {
              if (!v470)
                goto LABEL_83;
              v40 = 5;
            }
            (*(void (**)(void))(*v39 + 8 * v40))();
LABEL_83:
            sub_2396FD800(v471, (uint64_t)v460);
            task_info_out.__sig = 0x42C8000000000000;
            sub_2396FCC68(v462, 205, v460, &task_info_out, 1.0);
            v41 = v461;
            if (v461 == v460)
            {
              v42 = 4;
              v41 = v460;
            }
            else
            {
              if (!v461)
                goto LABEL_88;
              v42 = 5;
            }
            (*(void (**)(void))(*v41 + 8 * v42))();
LABEL_88:
            sub_2396FDAA8(v471, (uint64_t)v458);
            sub_2396FD534(&v305, v462, 100);
            v457 = 0;
            v43 = (char *)operator new(0x40uLL);
            *(_QWORD *)v43 = &off_250ADB9D8;
            *(_OWORD *)(v43 + 8) = v305;
            *((_QWORD *)v43 + 3) = v306;
            v306 = 0;
            *((_QWORD *)&v305 + 1) = 0;
            v44 = v307;
            v307 = 0uLL;
            v45 = v308;
            *((_OWORD *)v43 + 2) = v44;
            *((_OWORD *)v43 + 3) = v45;
            v308 = 0uLL;
            v457 = v43;
            sub_2396FD600((uint64_t)&task_info_out, (uint64_t)v458, (uint64_t)v456);
            v46 = v457;
            if (v457 == v456)
            {
              v47 = 4;
              v46 = v456;
            }
            else
            {
              if (!v457)
              {
LABEL_93:
                v48 = (std::__shared_weak_count *)*((_QWORD *)&v308 + 1);
                if (*((_QWORD *)&v308 + 1))
                {
                  v49 = (unint64_t *)(*((_QWORD *)&v308 + 1) + 8);
                  do
                    v50 = __ldaxr(v49);
                  while (__stlxr(v50 - 1, v49));
                  if (!v50)
                  {
                    ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
                    std::__shared_weak_count::__release_weak(v48);
                  }
                }
                v51 = (std::__shared_weak_count *)*((_QWORD *)&v307 + 1);
                if (*((_QWORD *)&v307 + 1))
                {
                  v52 = (unint64_t *)(*((_QWORD *)&v307 + 1) + 8);
                  do
                    v53 = __ldaxr(v52);
                  while (__stlxr(v53 - 1, v52));
                  if (!v53)
                  {
                    ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                    std::__shared_weak_count::__release_weak(v51);
                  }
                }
                v54 = v306;
                if (v306)
                {
                  p_shared_owners = (unint64_t *)&v306->__shared_owners_;
                  do
                    v56 = __ldaxr(p_shared_owners);
                  while (__stlxr(v56 - 1, p_shared_owners));
                  if (!v56)
                  {
                    ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
                    std::__shared_weak_count::__release_weak(v54);
                  }
                }
                v57 = v459;
                if (v459 == v458)
                {
                  v58 = 4;
                  v57 = v458;
                }
                else
                {
                  if (!v459)
                    goto LABEL_113;
                  v58 = 5;
                }
                (*(void (**)(void))(*v57 + 8 * v58))();
LABEL_113:
                sub_239B493CC((uint64_t)task_info_outCnt, v13);
                v60 = v311;
                v61 = (uint64_t)v312;
                if (v312)
                {
                  v62 = (unint64_t *)&v312->__shared_owners_;
                  do
                    v63 = __ldxr(v62);
                  while (__stxr(v63 + 1, v62));
                }
                v454[0] = &off_250AF61C0;
                v454[1] = v60;
                v304 = 0;
                v303 = 0;
                v454[2] = v61;
                v455 = v454;
                v64 = v309;
                v65 = (uint64_t)v310;
                if (v310)
                {
                  v66 = (unint64_t *)&v310->__shared_owners_;
                  do
                    v67 = __ldxr(v66);
                  while (__stxr(v67 + 1, v66));
                }
                v452[0] = &off_250AF6208;
                v452[1] = v64;
                v301 = 0;
                v302 = 0;
                v452[2] = v65;
                v453 = v452;
                v450[0] = &off_250AF6250;
                v450[1] = v263;
                v451 = v450;
                v448[0] = &off_250AF62E0;
                v448[1] = v16;
                v449 = v448;
                v68 = *(_QWORD *)&task_info_out.__opaque[16];
                if (*(_QWORD *)&task_info_out.__opaque[16])
                {
                  if (*(pthread_rwlock_t **)&task_info_out.__opaque[16] == &task_info_out)
                  {
                    v445 = v444;
                    (*(void (**)(pthread_rwlock_t *, _QWORD *))(task_info_out.__sig + 24))(&task_info_out, v444);
LABEL_124:
                    v69 = v446;
                    v70 = *(_QWORD *)&task_info_out.__opaque[48];
                    if (*(_QWORD *)&task_info_out.__opaque[48])
                    {
                      if (*(pthread_rwlock_t **)&task_info_out.__opaque[48] == (pthread_rwlock_t *)&task_info_out.__opaque[24])
                      {
                        v447 = v446;
                        (*(void (**)(void))(**(_QWORD **)&task_info_out.__opaque[48] + 24))();
LABEL_129:
                        v443 = 0;
                        v71 = sub_239E95724(v15, (uint64_t)task_info_outCnt, (uint64_t)v454, v452, v450, v448, v444, v59, (uint64_t)v313, 1, (uint64_t)v442);
                        v72 = v443;
                        if (v443 == v442)
                        {
                          v73 = 4;
                          v72 = v442;
                        }
                        else
                        {
                          if (!v443)
                            goto LABEL_134;
                          v73 = 5;
                        }
                        (*(void (**)(void))(*v72 + 8 * v73))();
LABEL_134:
                        if (v447 == v446)
                        {
                          v74 = 4;
                        }
                        else
                        {
                          if (!v447)
                            goto LABEL_139;
                          v74 = 5;
                          v69 = v447;
                        }
                        (*(void (**)(_QWORD *))(*v69 + 8 * v74))(v69);
LABEL_139:
                        v75 = v445;
                        if (v445 == v444)
                        {
                          v76 = 4;
                          v75 = v444;
                        }
                        else
                        {
                          if (!v445)
                            goto LABEL_144;
                          v76 = 5;
                        }
                        (*(void (**)(void))(*v75 + 8 * v76))();
LABEL_144:
                        v77 = v449;
                        if (v449 == v448)
                        {
                          v78 = 4;
                          v77 = v448;
                        }
                        else
                        {
                          if (!v449)
                            goto LABEL_149;
                          v78 = 5;
                        }
                        (*(void (**)(void))(*v77 + 8 * v78))();
LABEL_149:
                        v79 = v451;
                        if (v451 == v450)
                        {
                          v80 = 4;
                          v79 = v450;
                        }
                        else
                        {
                          if (!v451)
                            goto LABEL_154;
                          v80 = 5;
                        }
                        (*(void (**)(void))(*v79 + 8 * v80))();
LABEL_154:
                        v81 = v453;
                        if (v453 == v452)
                        {
                          v82 = 4;
                          v81 = v452;
                        }
                        else
                        {
                          if (!v453)
                            goto LABEL_159;
                          v82 = 5;
                        }
                        (*(void (**)(void))(*v81 + 8 * v82))();
LABEL_159:
                        v83 = v455;
                        if (v455 == v454)
                        {
                          v84 = 4;
                          v83 = v454;
                        }
                        else
                        {
                          if (!v455)
                            goto LABEL_164;
                          v84 = 5;
                        }
                        (*(void (**)(void))(*v83 + 8 * v84))();
LABEL_164:
                        if (v71)
                        {
                          if (*((_QWORD *)&v349 + 1))
                          {
                            *(_QWORD *)&v350 = *((_QWORD *)&v349 + 1);
                            operator delete(*((void **)&v349 + 1));
                          }
                          if (SBYTE7(v349) < 0)
                            operator delete(*(void **)&task_info_outCnt[2]);
                          v85 = *(char **)&task_info_out.__opaque[48];
                          if (*(pthread_rwlock_t **)&task_info_out.__opaque[48] == (pthread_rwlock_t *)&task_info_out.__opaque[24])
                          {
                            v86 = 4;
                            v85 = &task_info_out.__opaque[24];
                          }
                          else
                          {
                            if (!*(_QWORD *)&task_info_out.__opaque[48])
                              goto LABEL_181;
                            v86 = 5;
                          }
                          (*(void (**)(void))(*(_QWORD *)v85 + 8 * v86))();
LABEL_181:
                          p_task_info_out = *(pthread_rwlock_t **)&task_info_out.__opaque[16];
                          if (*(pthread_rwlock_t **)&task_info_out.__opaque[16] == &task_info_out)
                          {
                            v90 = 4;
                            p_task_info_out = &task_info_out;
                          }
                          else
                          {
                            if (!*(_QWORD *)&task_info_out.__opaque[16])
                              goto LABEL_186;
                            v90 = 5;
                          }
                          (*(void (**)(void))(p_task_info_out->__sig + 8 * v90))();
LABEL_186:
                          v91 = (std::__shared_weak_count *)operator new(0xB0uLL);
                          v91->__shared_owners_ = 0;
                          v91->__shared_weak_owners_ = 0;
                          v91->__vftable = (std::__shared_weak_count_vtbl *)&off_250B020F8;
                          v91[1].__vftable = 0;
                          v92 = &v91[1].__vftable;
                          LOBYTE(v91[3].__vftable) = 0;
                          LOBYTE(v91[3].__shared_owners_) = 0;
                          LOBYTE(v91[4].__shared_owners_) = 0;
                          LOBYTE(v91[4].__shared_weak_owners_) = 0;
                          LOBYTE(v91[5].__shared_weak_owners_) = 0;
                          LOBYTE(v91[6].__vftable) = 0;
                          LOBYTE(v91[7].__vftable) = 0;
                          v91[1].__shared_owners_ = 0;
                          v91[1].__shared_weak_owners_ = 0;
                          LOBYTE(v91[2].__vftable) = 0;
                          v299 = v91 + 1;
                          v300 = v91;
                          sub_2397A1588(&task_info_out);
                          if (LOBYTE(v91[4].__shared_owners_))
                          {
                            shared_owners = (void *)v91[3].__shared_owners_;
                            if (shared_owners)
                            {
                              v91[3].__shared_weak_owners_ = (uint64_t)shared_owners;
                              operator delete(shared_owners);
                            }
                            LOBYTE(v91[4].__shared_owners_) = 0;
                          }
                          if (LOBYTE(v91[7].__vftable))
                          {
                            v94 = v91[6].__vftable;
                            if (v94)
                            {
                              v91[6].__shared_owners_ = (uint64_t)v94;
                              operator delete(v94);
                            }
                            LOBYTE(v91[7].__vftable) = 0;
                          }
                          if (LOBYTE(v91[3].__vftable))
                          {
                            if (LOBYTE(v91[5].__shared_weak_owners_))
                              goto LABEL_196;
                          }
                          else
                          {
                            v91[2].__vftable = 0;
                            v91[2].__shared_owners_ = 0;
                            v91[2].__shared_weak_owners_ = 0;
                            LOBYTE(v91[3].__vftable) = 1;
                            if (LOBYTE(v91[5].__shared_weak_owners_))
                              goto LABEL_196;
                          }
                          v91[4].__shared_weak_owners_ = 0;
                          v91[5].__vftable = 0;
                          v91[5].__shared_owners_ = 0;
                          LOBYTE(v91[5].__shared_weak_owners_) = 1;
LABEL_196:
                          sub_2396FDAA8(v471, (uint64_t)v440);
                          sub_2396FD534(&v295, v462, 50);
                          v439 = 0;
                          v95 = (char *)operator new(0x40uLL);
                          *(_QWORD *)v95 = &off_250ADB9D8;
                          *(_OWORD *)(v95 + 8) = v295;
                          *((_QWORD *)v95 + 3) = v296;
                          *((_QWORD *)&v295 + 1) = 0;
                          v296 = 0;
                          v96 = v297;
                          v297 = 0uLL;
                          v97 = v298;
                          *((_OWORD *)v95 + 2) = v96;
                          *((_OWORD *)v95 + 3) = v97;
                          v298 = 0uLL;
                          v439 = v95;
                          sub_2396FD600((uint64_t)task_info_outCnt, (uint64_t)v440, (uint64_t)v438);
                          v98 = v439;
                          if (v439 == v438)
                          {
                            v99 = 4;
                            v98 = v438;
                          }
                          else
                          {
                            if (!v439)
                            {
LABEL_211:
                              v102 = (std::__shared_weak_count *)*((_QWORD *)&v298 + 1);
                              if (*((_QWORD *)&v298 + 1))
                              {
                                v103 = (unint64_t *)(*((_QWORD *)&v298 + 1) + 8);
                                do
                                  v104 = __ldaxr(v103);
                                while (__stlxr(v104 - 1, v103));
                                if (!v104)
                                {
                                  ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
                                  std::__shared_weak_count::__release_weak(v102);
                                }
                              }
                              v105 = (std::__shared_weak_count *)*((_QWORD *)&v297 + 1);
                              if (*((_QWORD *)&v297 + 1))
                              {
                                v106 = (unint64_t *)(*((_QWORD *)&v297 + 1) + 8);
                                do
                                  v107 = __ldaxr(v106);
                                while (__stlxr(v107 - 1, v106));
                                if (!v107)
                                {
                                  ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
                                  std::__shared_weak_count::__release_weak(v105);
                                }
                              }
                              v108 = v296;
                              if (v296)
                              {
                                v109 = (unint64_t *)&v296->__shared_owners_;
                                do
                                  v110 = __ldaxr(v109);
                                while (__stlxr(v110 - 1, v109));
                                if (!v110)
                                {
                                  ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
                                  std::__shared_weak_count::__release_weak(v108);
                                }
                              }
                              v111 = v441;
                              if (v441 == v440)
                              {
                                v112 = 4;
                                v111 = v440;
                              }
                              else
                              {
                                if (!v441)
                                  goto LABEL_231;
                                v112 = 5;
                              }
                              (*(void (**)(void))(*v111 + 8 * v112))();
LABEL_231:
                              v113 = *(_DWORD *)v13;
                              LODWORD(v273) = *(_DWORD *)(v13 + 12);
                              DWORD1(v273) = 1;
                              HIDWORD(v273) = *(_DWORD *)(v13 + 76);
                              LODWORD(v275) = 1111490560;
                              HIDWORD(v275) = *(_DWORD *)(v13 + 20);
                              v276 = 1106247680;
                              v272[0] = v113;
                              v272[1] = 2;
                              v274 = 0x3F8000003CA3D70ALL;
                              *(_DWORD *)((char *)&v273 + 7) = 65793;
                              v436[0] = &off_250AF6370;
                              v436[1] = v263;
                              v437 = v436;
                              v434[0] = &off_250AF63B8;
                              v434[1] = v16;
                              v435 = v434;
                              v114 = v311;
                              v115 = (uint64_t)v312;
                              if (v312)
                              {
                                v116 = (unint64_t *)&v312->__shared_owners_;
                                do
                                  v117 = __ldxr(v116);
                                while (__stxr(v117 + 1, v116));
                              }
                              v432[0] = &off_250AF61C0;
                              v432[1] = v114;
                              v293 = 0;
                              v294 = 0;
                              v432[2] = v115;
                              v433 = v432;
                              v430[0] = &off_250AF6448;
                              v430[1] = v17;
                              v431 = v430;
                              v428[0] = &off_250AF6490;
                              v428[1] = v91 + 1;
                              v428[2] = &task_info_out;
                              v429 = v428;
                              v118 = v349;
                              if ((_QWORD)v349)
                              {
                                if ((mach_msg_type_number_t *)v349 == task_info_outCnt)
                                {
                                  v425 = v424;
                                  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)task_info_outCnt + 24))((uint64_t)task_info_outCnt, v424);
LABEL_239:
                                  v119 = v426;
                                  v120 = v351;
                                  if ((_QWORD)v351)
                                  {
                                    if ((__int128 *)v351 == (__int128 *)((char *)&v349 + 8))
                                    {
                                      v427 = v426;
                                      (*(void (**)(void))(*(_QWORD *)v351 + 24))();
LABEL_244:
                                      v121 = sub_239E98470(v15, (uint64_t)v272, (uint64_t)v436, (uint64_t)v434, (uint64_t)v432, (uint64_t)v430, (uint64_t)v428, v424, v313, 1);
                                      if (v427 == v426)
                                      {
                                        v129 = 4;
                                      }
                                      else
                                      {
                                        if (!v427)
                                          goto LABEL_249;
                                        v129 = 5;
                                        v119 = v427;
                                      }
                                      (*(void (**)(_QWORD *))(*v119 + 8 * v129))(v119);
LABEL_249:
                                      v130 = v425;
                                      if (v425 == v424)
                                      {
                                        v131 = 4;
                                        v130 = v424;
                                      }
                                      else
                                      {
                                        if (!v425)
                                          goto LABEL_254;
                                        v131 = 5;
                                      }
                                      (*(void (**)(void))(*v130 + 8 * v131))();
LABEL_254:
                                      v132 = v429;
                                      if (v429 == v428)
                                      {
                                        v133 = 4;
                                        v132 = v428;
                                      }
                                      else
                                      {
                                        if (!v429)
                                          goto LABEL_259;
                                        v133 = 5;
                                      }
                                      (*(void (**)(void))(*v132 + 8 * v133))();
LABEL_259:
                                      v134 = v431;
                                      if (v431 == v430)
                                      {
                                        v135 = 4;
                                        v134 = v430;
                                      }
                                      else
                                      {
                                        if (!v431)
                                          goto LABEL_264;
                                        v135 = 5;
                                      }
                                      (*(void (**)(void))(*v134 + 8 * v135))();
LABEL_264:
                                      v136 = v433;
                                      if (v433 == v432)
                                      {
                                        v137 = 4;
                                        v136 = v432;
                                      }
                                      else
                                      {
                                        if (!v433)
                                          goto LABEL_269;
                                        v137 = 5;
                                      }
                                      (*(void (**)(void))(*v136 + 8 * v137))();
LABEL_269:
                                      v138 = v435;
                                      if (v435 == v434)
                                      {
                                        v139 = 4;
                                        v138 = v434;
                                      }
                                      else
                                      {
                                        if (!v435)
                                          goto LABEL_274;
                                        v139 = 5;
                                      }
                                      (*(void (**)(void))(*v138 + 8 * v139))();
LABEL_274:
                                      v140 = v437;
                                      if (v437 == v436)
                                      {
                                        v141 = 4;
                                        v140 = v436;
                                      }
                                      else
                                      {
                                        if (!v437)
                                          goto LABEL_279;
                                        v141 = 5;
                                      }
                                      (*(void (**)(void))(*v140 + 8 * v141))();
LABEL_279:
                                      if ((v121 & 1) != 0)
                                      {
                                        LODWORD(v122.f64[0]) = HIDWORD(v275);
                                        if (*((float *)&v275 + 1) != 0.0)
                                        {
                                          *(float *)&v123 = 0.0 - *((float *)&v275 + 1);
                                          if (*((float *)&v275 + 1) >= 0.0)
                                            *(float *)&v123 = *((float *)&v275 + 1);
                                          LODWORD(v124) = 730643660;
                                          if (*(float *)&v123 > 1.0e-12)
                                          {
                                            v142 = sub_2396DBCA0(v92, v15, *((float *)&v275 + 1));
                                            if ((sub_2396DC540((uint64_t)v92, v15, 1, v142, *(float *)&v276) & 1) == 0)
                                            {
                                              v143 = 0;
                                              v10 = 3;
LABEL_290:
                                              v144 = (_QWORD *)v351;
                                              if ((__int128 *)v351 == (__int128 *)((char *)&v349 + 8))
                                              {
                                                v145 = 4;
                                                v144 = (_QWORD *)&v349 + 1;
                                              }
                                              else
                                              {
                                                if (!(_QWORD)v351)
                                                  goto LABEL_295;
                                                v145 = 5;
                                              }
                                              (*(void (**)(void))(*v144 + 8 * v145))();
LABEL_295:
                                              v146 = (mach_msg_type_number_t *)v349;
                                              if ((mach_msg_type_number_t *)v349 == task_info_outCnt)
                                              {
                                                v147 = 4;
                                                v146 = task_info_outCnt;
                                              }
                                              else
                                              {
                                                if (!(_QWORD)v349)
                                                  goto LABEL_300;
                                                v147 = 5;
                                              }
                                              (*(void (**)(void))(*(_QWORD *)v146 + 8 * v147))();
LABEL_300:
                                              sub_2397A15B0(&task_info_out);
                                              v148 = v300;
                                              if (!v143)
                                              {
LABEL_492:
                                                if (v148)
                                                {
                                                  v247 = (unint64_t *)&v148->__shared_owners_;
                                                  do
                                                    v248 = __ldaxr(v247);
                                                  while (__stlxr(v248 - 1, v247));
                                                  if (!v248)
                                                  {
                                                    ((void (*)(std::__shared_weak_count *))v148->__on_zero_shared)(v148);
                                                    std::__shared_weak_count::__release_weak(v148);
                                                  }
                                                }
LABEL_497:
                                                sub_2396FCD14((uint64_t)v462);
                                                v249 = v474;
                                                if (v474 == v473)
                                                {
                                                  v250 = 4;
                                                  v249 = v473;
                                                }
                                                else
                                                {
                                                  if (!v474)
                                                    goto LABEL_502;
                                                  v250 = 5;
                                                }
                                                (*(void (**)(void))(*v249 + 8 * v250))();
LABEL_502:
                                                v251 = v472;
                                                if (v472 == v471)
                                                {
                                                  v252 = 4;
                                                  v251 = v471;
                                                }
                                                else
                                                {
                                                  if (!v472)
                                                  {
LABEL_507:
                                                    v253 = v310;
                                                    if (v310)
                                                    {
                                                      v254 = (unint64_t *)&v310->__shared_owners_;
                                                      do
                                                        v255 = __ldaxr(v254);
                                                      while (__stlxr(v255 - 1, v254));
                                                      if (!v255)
                                                      {
                                                        ((void (*)(std::__shared_weak_count *))v253->__on_zero_shared)(v253);
                                                        std::__shared_weak_count::__release_weak(v253);
                                                      }
                                                    }
                                                    v256 = v312;
                                                    if (v312)
                                                    {
                                                      v257 = (unint64_t *)&v312->__shared_owners_;
                                                      do
                                                        v258 = __ldaxr(v257);
                                                      while (__stlxr(v258 - 1, v257));
                                                      if (!v258)
                                                      {
                                                        ((void (*)(std::__shared_weak_count *))v256->__on_zero_shared)(v256);
                                                        std::__shared_weak_count::__release_weak(v256);
                                                      }
                                                    }
                                                    if (!v476)
                                                      sub_2394172E0();
                                                    (*(void (**)(_BYTE *))(*(_QWORD *)v476 + 48))(v476);
                                                    v259 = v476;
                                                    if (v476 == v475)
                                                    {
                                                      v260 = 4;
                                                      v259 = v475;
                                                    }
                                                    else
                                                    {
                                                      if (!v476)
                                                      {
LABEL_523:
                                                        sub_239A613DC((uint64_t)v313);
                                                        return v10;
                                                      }
                                                      v260 = 5;
                                                    }
                                                    (*(void (**)(void))(*v259 + 8 * v260))();
                                                    goto LABEL_523;
                                                  }
                                                  v252 = 5;
                                                }
                                                (*(void (**)(void))(*v251 + 8 * v252))();
                                                goto LABEL_507;
                                              }
                                              v149 = (uint64_t)v299;
                                              if (v300)
                                              {
                                                v150 = (unint64_t *)&v300->__shared_owners_;
                                                do
                                                  v151 = __ldxr(v150);
                                                while (__stxr(v151 + 1, v150));
                                              }
                                              v152 = (std::__shared_weak_count *)v12[9];
                                              v12[8] = v149;
                                              v12[9] = (uint64_t)v148;
                                              if (v152)
                                              {
                                                v153 = (unint64_t *)&v152->__shared_owners_;
                                                do
                                                  v154 = __ldaxr(v153);
                                                while (__stlxr(v154 - 1, v153));
                                                if (!v154)
                                                {
                                                  ((void (*)(std::__shared_weak_count *))v152->__on_zero_shared)(v152);
                                                  std::__shared_weak_count::__release_weak(v152);
                                                }
                                              }
                                              v155 = (std::__shared_weak_count *)operator new(0xB0uLL);
                                              v155->__shared_owners_ = 0;
                                              v155->__shared_weak_owners_ = 0;
                                              v155[1].__vftable = 0;
                                              v155->__vftable = (std::__shared_weak_count_vtbl *)&off_250B020F8;
                                              LOBYTE(v155[3].__shared_owners_) = 0;
                                              LOBYTE(v155[4].__shared_owners_) = 0;
                                              LOBYTE(v155[6].__vftable) = 0;
                                              LOBYTE(v155[7].__vftable) = 0;
                                              v155[1].__shared_owners_ = 0;
                                              v155[1].__shared_weak_owners_ = 0;
                                              *(_QWORD *)v291 = v155 + 1;
                                              v292 = v155;
                                              v155[2].__shared_owners_ = 0;
                                              v155[2].__shared_weak_owners_ = 0;
                                              v155[2].__vftable = 0;
                                              LOBYTE(v155[3].__vftable) = 1;
                                              v155[4].__shared_weak_owners_ = 0;
                                              v155[5].__vftable = 0;
                                              v155[5].__shared_owners_ = 0;
                                              LOBYTE(v155[5].__shared_weak_owners_) = 1;
                                              sub_2397A1588(&task_info_out);
                                              sub_2396FDAA8(v471, (uint64_t)v422);
                                              sub_2396FD534(&v287, v462, 50);
                                              v421 = 0;
                                              v156 = (char *)operator new(0x40uLL);
                                              *(_QWORD *)v156 = &off_250ADB9D8;
                                              *(_OWORD *)(v156 + 8) = v287;
                                              *((_QWORD *)v156 + 3) = v288;
                                              *((_QWORD *)&v287 + 1) = 0;
                                              v288 = 0;
                                              v157 = v289;
                                              v289 = 0uLL;
                                              v158 = v290;
                                              *((_OWORD *)v156 + 2) = v157;
                                              *((_OWORD *)v156 + 3) = v158;
                                              v290 = 0uLL;
                                              v421 = v156;
                                              sub_2396FD600((uint64_t)task_info_outCnt, (uint64_t)v422, (uint64_t)v420);
                                              v159 = v421;
                                              if (v421 == v420)
                                              {
                                                v160 = 4;
                                                v159 = v420;
                                              }
                                              else
                                              {
                                                if (!v421)
                                                {
LABEL_314:
                                                  v161 = (std::__shared_weak_count *)*((_QWORD *)&v290 + 1);
                                                  if (*((_QWORD *)&v290 + 1))
                                                  {
                                                    v162 = (unint64_t *)(*((_QWORD *)&v290 + 1) + 8);
                                                    do
                                                      v163 = __ldaxr(v162);
                                                    while (__stlxr(v163 - 1, v162));
                                                    if (!v163)
                                                    {
                                                      ((void (*)(std::__shared_weak_count *))v161->__on_zero_shared)(v161);
                                                      std::__shared_weak_count::__release_weak(v161);
                                                    }
                                                  }
                                                  v164 = (std::__shared_weak_count *)*((_QWORD *)&v289 + 1);
                                                  if (*((_QWORD *)&v289 + 1))
                                                  {
                                                    v165 = (unint64_t *)(*((_QWORD *)&v289 + 1) + 8);
                                                    do
                                                      v166 = __ldaxr(v165);
                                                    while (__stlxr(v166 - 1, v165));
                                                    if (!v166)
                                                    {
                                                      ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
                                                      std::__shared_weak_count::__release_weak(v164);
                                                    }
                                                  }
                                                  v167 = v288;
                                                  if (v288)
                                                  {
                                                    v168 = (unint64_t *)&v288->__shared_owners_;
                                                    do
                                                      v169 = __ldaxr(v168);
                                                    while (__stlxr(v169 - 1, v168));
                                                    if (!v169)
                                                    {
                                                      ((void (*)(std::__shared_weak_count *))v167->__on_zero_shared)(v167);
                                                      std::__shared_weak_count::__release_weak(v167);
                                                    }
                                                  }
                                                  v170 = v423;
                                                  if (v423 == v422)
                                                  {
                                                    v171 = 4;
                                                    v170 = v422;
                                                  }
                                                  else
                                                  {
                                                    if (!v423)
                                                      goto LABEL_334;
                                                    v171 = 5;
                                                  }
                                                  (*(void (**)(void))(*v170 + 8 * v171))();
LABEL_334:
                                                  *(_QWORD *)&v273 = *(unsigned int *)(v13 + 12);
                                                  *(_DWORD *)((char *)&v273 + 7) = 0;
                                                  HIDWORD(v273) = *(_DWORD *)(v13 + 76);
                                                  v274 = 0x3F8000003C23D70ALL;
                                                  LODWORD(v275) = 1111490560;
                                                  HIDWORD(v275) = *(_DWORD *)(v13 + 20);
                                                  v276 = 1106247680;
                                                  *(_QWORD *)v272 = *(_QWORD *)v13;
                                                  BYTE5(v273) = 1;
                                                  *(_WORD *)((char *)&v273 + 7) = 257;
                                                  BYTE10(v273) = *(_BYTE *)(v13 + 17);
                                                  v418[0] = &off_250AF64D8;
                                                  v418[1] = v17;
                                                  v419 = v418;
                                                  v417 = 0;
                                                  v172 = v311;
                                                  v173 = (uint64_t)v312;
                                                  if (v312)
                                                  {
                                                    v174 = (unint64_t *)&v312->__shared_owners_;
                                                    do
                                                      v175 = __ldxr(v174);
                                                    while (__stxr(v175 + 1, v174));
                                                  }
                                                  v414[0] = &off_250AF61C0;
                                                  v414[1] = v172;
                                                  v285 = 0;
                                                  v286 = 0;
                                                  v414[2] = v173;
                                                  v415 = v414;
                                                  v412[0] = &off_250AF6520;
                                                  v412[1] = v262;
                                                  v413 = v412;
                                                  v410[0] = &off_250AF6568;
                                                  v410[1] = v155 + 1;
                                                  v410[2] = &task_info_out;
                                                  v411 = v410;
                                                  v176 = v349;
                                                  if ((_QWORD)v349)
                                                  {
                                                    if ((mach_msg_type_number_t *)v349 == task_info_outCnt)
                                                    {
                                                      v407 = v406;
                                                      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)task_info_outCnt
                                                                                                + 24))((uint64_t)task_info_outCnt, v406);
LABEL_342:
                                                      v177 = v408;
                                                      v178 = v351;
                                                      if ((_QWORD)v351)
                                                      {
                                                        if ((__int128 *)v351 == (__int128 *)((char *)&v349 + 8))
                                                        {
                                                          v409 = v408;
                                                          (*(void (**)(void))(*(_QWORD *)v351 + 24))();
LABEL_347:
                                                          v179 = sub_239E98470(v20, (uint64_t)v272, (uint64_t)v418, (uint64_t)v416, (uint64_t)v414, (uint64_t)v412, (uint64_t)v410, v406, v313, 1);
                                                          if (v409 == v408)
                                                          {
                                                            v180 = 4;
                                                          }
                                                          else
                                                          {
                                                            if (!v409)
                                                              goto LABEL_352;
                                                            v180 = 5;
                                                            v177 = v409;
                                                          }
                                                          (*(void (**)(_QWORD *))(*v177 + 8 * v180))(v177);
LABEL_352:
                                                          v181 = v407;
                                                          if (v407 == v406)
                                                          {
                                                            v183 = 4;
                                                            v181 = v406;
                                                            v182 = v17;
                                                          }
                                                          else
                                                          {
                                                            v182 = v17;
                                                            if (!v407)
                                                              goto LABEL_357;
                                                            v183 = 5;
                                                          }
                                                          (*(void (**)(void))(*v181 + 8 * v183))();
LABEL_357:
                                                          v184 = v411;
                                                          if (v411 == v410)
                                                          {
                                                            v185 = 4;
                                                            v184 = v410;
                                                          }
                                                          else
                                                          {
                                                            if (!v411)
                                                              goto LABEL_362;
                                                            v185 = 5;
                                                          }
                                                          (*(void (**)(void))(*v184 + 8 * v185))();
LABEL_362:
                                                          v186 = v413;
                                                          if (v413 == v412)
                                                          {
                                                            v187 = 4;
                                                            v186 = v412;
                                                          }
                                                          else
                                                          {
                                                            if (!v413)
                                                              goto LABEL_367;
                                                            v187 = 5;
                                                          }
                                                          (*(void (**)(void))(*v186 + 8 * v187))();
LABEL_367:
                                                          v188 = v415;
                                                          if (v415 == v414)
                                                          {
                                                            v189 = 4;
                                                            v188 = v414;
                                                          }
                                                          else
                                                          {
                                                            if (!v415)
                                                              goto LABEL_372;
                                                            v189 = 5;
                                                          }
                                                          (*(void (**)(void))(*v188 + 8 * v189))();
LABEL_372:
                                                          v190 = v417;
                                                          if (v417 == v416)
                                                          {
                                                            v191 = 4;
                                                            v190 = v416;
                                                          }
                                                          else
                                                          {
                                                            if (!v417)
                                                              goto LABEL_377;
                                                            v191 = 5;
                                                          }
                                                          (*(void (**)(void))(*v190 + 8 * v191))();
LABEL_377:
                                                          v192 = v419;
                                                          if (v419 == v418)
                                                          {
                                                            v193 = 4;
                                                            v192 = v418;
                                                          }
                                                          else
                                                          {
                                                            if (!v419)
                                                              goto LABEL_382;
                                                            v193 = 5;
                                                          }
                                                          (*(void (**)(void))(*v192 + 8 * v193))();
LABEL_382:
                                                          if ((v179 & 1) != 0)
                                                          {
                                                            sub_2396DB4C8();
                                                            if ((std::__shared_weak_count_vtbl *)v155[1].__shared_owners_ == v155[1].__vftable)
                                                            {
                                                              sub_2394202DC(v318, 5006);
                                                              v194 = 0;
                                                              v10 = 2;
                                                            }
                                                            else
                                                            {
                                                              v194 = 1;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            sub_2394202DC(v318, 5005);
                                                            v194 = 0;
                                                            v10 = 2;
                                                          }
                                                          v195 = (_QWORD *)v351;
                                                          if ((__int128 *)v351 == (__int128 *)((char *)&v349 + 8))
                                                          {
                                                            v196 = 4;
                                                            v195 = (_QWORD *)&v349 + 1;
                                                          }
                                                          else
                                                          {
                                                            if (!(_QWORD)v351)
                                                              goto LABEL_392;
                                                            v196 = 5;
                                                          }
                                                          (*(void (**)(void))(*v195 + 8 * v196))();
LABEL_392:
                                                          v197 = (mach_msg_type_number_t *)v349;
                                                          if ((mach_msg_type_number_t *)v349 == task_info_outCnt)
                                                          {
                                                            v198 = 4;
                                                            v197 = task_info_outCnt;
                                                          }
                                                          else
                                                          {
                                                            if (!(_QWORD)v349)
                                                              goto LABEL_397;
                                                            v198 = 5;
                                                          }
                                                          (*(void (**)(void))(*(_QWORD *)v197 + 8 * v198))();
LABEL_397:
                                                          sub_2397A15B0(&task_info_out);
                                                          if (!v194)
                                                            goto LABEL_486;
                                                          v199 = *(_QWORD *)v291;
                                                          v200 = (uint64_t)v292;
                                                          if (v292)
                                                          {
                                                            v201 = (unint64_t *)&v292->__shared_owners_;
                                                            do
                                                              v202 = __ldxr(v201);
                                                            while (__stxr(v202 + 1, v201));
                                                          }
                                                          v203 = (uint64_t)(v12 + 8);
                                                          v204 = (std::__shared_weak_count *)v12[11];
                                                          v205 = v12 + 10;
                                                          v12[10] = v199;
                                                          v12[11] = v200;
                                                          if (v204)
                                                          {
                                                            v206 = (unint64_t *)&v204->__shared_owners_;
                                                            do
                                                              v207 = __ldaxr(v206);
                                                            while (__stlxr(v207 - 1, v206));
                                                            if (!v207)
                                                            {
                                                              ((void (*)(std::__shared_weak_count *))v204->__on_zero_shared)(v204);
                                                              std::__shared_weak_count::__release_weak(v204);
                                                            }
                                                          }
                                                          if (*(_BYTE *)(v13 + 19))
                                                          {
                                                            v208 = *(_QWORD *)(v13 + 512);
                                                            if (v208)
                                                            {
                                                              if (*(_QWORD *)(v208 + 96))
                                                              {
                                                                sub_239B49518(task_info_outCnt);
                                                                if (**(int **)(*(_QWORD *)task_info_outCnt + 56) <= 3
                                                                  && *(_BYTE *)(*(_QWORD *)task_info_outCnt + 72))
                                                                {
                                                                  task_info_out.__sig = (uint64_t)task_info_outCnt;
                                                                  *(std::chrono::steady_clock::time_point *)task_info_out.__opaque = std::chrono::steady_clock::now();
                                                                  *(std::chrono::system_clock::time_point *)&task_info_out.__opaque[8] = std::chrono::system_clock::now();
                                                                  *(_DWORD *)&task_info_out.__opaque[16] = 3;
                                                                  *(_QWORD *)&task_info_out.__opaque[24] = "unknown file";
                                                                  *(_DWORD *)&task_info_out.__opaque[32] = 287;
                                                                  *(_QWORD *)&task_info_out.__opaque[56] = 0;
                                                                  *(_QWORD *)&task_info_out.__opaque[40] = "unknown function";
                                                                  *(_QWORD *)&task_info_out.__opaque[48] = 0;
                                                                  sub_239A58DD4((uint64_t)&task_info_out, "Reconstructing point cloud - step 3 option A");
                                                                  sub_239A47720((uint64_t)&task_info_out);
                                                                  sub_239A478B4((uint64_t)&task_info_out);
                                                                }
                                                                *(_OWORD *)task_info_outCnt = xmmword_239F0C0D0;
                                                                rep = 0x4020000000010101;
                                                                v349 = 0u;
                                                                v350 = 0u;
                                                                v351 = 0u;
                                                                v352 = 8000000;
                                                                v353 = 0;
                                                                v355 = xmmword_239F0C0E0;
                                                                v356 = 2;
                                                                v358 = xmmword_239F0C0F0;
                                                                v359 = 1;
                                                                v360 = 0x40000000;
                                                                v361 = xmmword_239F0C100;
                                                                v366 = 0;
                                                                v362 = xmmword_239F0BFA0;
                                                                v363 = 5;
                                                                v364 = xmmword_239F0C110;
                                                                v365 = xmmword_239F0C120;
                                                                v367 = 1045220557;
                                                                v368 = 3;
                                                                v369 = 1077936128;
                                                                v370 = 3;
                                                                v371 = 0x3E4CCCCD41A00000;
                                                                v372 = 0;
                                                                v373 = 1065353216;
                                                                v374 = 0x41F000003C23D70ALL;
                                                                v375 = 0x3F50624DD2F1A9FCLL;
                                                                v376 = 30;
                                                                v377 = 30;
                                                                v378 = 1022739087;
                                                                v379 = 1;
                                                                v380 = 1106247680;
                                                                v381 = 0x412000003C23D70ALL;
                                                                v382 = 200;
                                                                v383 = vdup_n_s32(0x3C23D70Au);
                                                                v384 = 1;
                                                                v385 = 1050253722;
                                                                v386 = 1;
                                                                v387 = xmmword_239F0C130;
                                                                v388 = 0x42C8000000000000;
                                                                v389 = 1;
                                                                v390 = 0x837D1B717;
                                                                v391 = xmmword_239F0C140;
                                                                v392 = xmmword_239F0C150;
                                                                v393 = 1;
                                                                v394 = 2147483650000000;
                                                                v396 = 0;
                                                                v395 = 0;
                                                                v357 = 3;
                                                                v354 = 257;
                                                                v404[3] = 0;
                                                                v405[3] = 0;
                                                                v397 = 0u;
                                                                v398 = 0u;
                                                                v399 = 0u;
                                                                v400 = 0u;
                                                                v401 = 0u;
                                                                v402 = 0u;
                                                                v403 = 0u;
                                                                sub_239B3E838((uint64_t)task_info_outCnt, (__int128 *)v13);
                                                                sub_239B3CCAC(&v397, *(_QWORD *)(v13 + 464), *(_QWORD *)(v13 + 472));
                                                                sub_239B3CCAC(&v398, *(_QWORD *)(v13 + 512), *(_QWORD *)(v13 + 520));
                                                                sub_239B3CCAC(&v399, *(_QWORD *)(v13 + 528), *(_QWORD *)(v13 + 536));
                                                                sub_239B3CCAC(&v400, *(_QWORD *)(v13 + 544), *(_QWORD *)(v13 + 552));
                                                                sub_239B3CCAC(&v401, v12[4], v12[5]);
                                                                sub_239B3CCAC(&v402, (uint64_t)v299, (uint64_t)v300);
                                                                sub_239B3CCAC(&v403, *(uint64_t *)v291, (uint64_t)v292);
                                                                sub_239B495E8(v404, v309, (uint64_t)v310);
                                                                sub_239B496A0(v405, v311, (uint64_t)v312);
                                                                sub_2396FDAA8(v471, (uint64_t)v344);
                                                                sub_2396FD534(&v281, v462, 5);
                                                                v343 = 0;
                                                                v209 = (char *)operator new(0x40uLL);
                                                                *(_QWORD *)v209 = &off_250ADB9D8;
                                                                *(_OWORD *)(v209 + 8) = v281;
                                                                *((_QWORD *)v209 + 3) = v282;
                                                                *((_QWORD *)&v281 + 1) = 0;
                                                                v282 = 0;
                                                                v210 = v283;
                                                                v283 = 0uLL;
                                                                v211 = v284;
                                                                *((_OWORD *)v209 + 2) = v210;
                                                                *((_OWORD *)v209 + 3) = v211;
                                                                v284 = 0uLL;
                                                                v343 = v209;
                                                                sub_2396FD600((uint64_t)v346, (uint64_t)v344, (uint64_t)v342);
                                                                v212 = v343;
                                                                if (v343 == v342)
                                                                {
                                                                  v213 = 4;
                                                                  v212 = v342;
                                                                }
                                                                else
                                                                {
                                                                  if (!v343)
                                                                    goto LABEL_424;
                                                                  v213 = 5;
                                                                }
                                                                (*(void (**)(void))(*v212 + 8 * v213))();
LABEL_424:
                                                                sub_23942FEFC(&v281);
                                                                v220 = v345;
                                                                if (v345 == v344)
                                                                {
                                                                  v221 = 4;
                                                                  v220 = v344;
                                                                }
                                                                else
                                                                {
                                                                  if (!v345)
                                                                    goto LABEL_429;
                                                                  v221 = 5;
                                                                }
                                                                (*(void (**)(void))(*v220 + 8 * v221))();
LABEL_429:
                                                                sub_239B49758(&task_info_out);
                                                                sub_2394B2548((uint64_t)v338, (uint64_t)v346);
                                                                v222 = sub_239B6D110(task_info_outCnt, (uint64_t)&task_info_out, v338);
                                                                sub_23942FE80(v338);
                                                                if (v222)
                                                                {
                                                                  sub_2394202DC(v318, 5503);
                                                                  v314 = task_info_out.__opaque[121];
                                                                  sub_239B49518(&v280);
                                                                  if (**(int **)(v280 + 56) <= 4
                                                                    && *(_BYTE *)(v280 + 72))
                                                                  {
                                                                    *(_QWORD *)v272 = &v280;
                                                                    *(std::chrono::steady_clock::time_point *)&v273 = std::chrono::steady_clock::now();
                                                                    *((std::chrono::system_clock::time_point *)&v273 + 1) = std::chrono::system_clock::now();
                                                                    LODWORD(v274) = 4;
                                                                    v275 = "unknown file";
                                                                    v276 = 309;
                                                                    v278 = 0;
                                                                    v279 = 0;
                                                                    v277 = "unknown function";
                                                                    sub_239B49884((uint64_t)v272, "Reconstructing point cloud - step 3 option A failed");
                                                                    sub_239A47720((uint64_t)v272);
                                                                    sub_239A478B4((uint64_t)v272);
                                                                  }
                                                                  if (!task_info_out.__opaque[121])
                                                                    goto LABEL_437;
                                                                }
                                                                else
                                                                {
                                                                  sub_239B3CCAC(v12 + 12, task_info_out.__sig, *(uint64_t *)task_info_out.__opaque);
                                                                }
                                                                sub_239B3CCAC(v12 + 8, *(uint64_t *)&task_info_out.__opaque[24], *(uint64_t *)&task_info_out.__opaque[32]);
                                                                sub_239B3CCAC(v12 + 10, *(uint64_t *)&task_info_out.__opaque[40], *(uint64_t *)&task_info_out.__opaque[48]);
LABEL_437:
                                                                sub_239B499A4((uint64_t)&v317, (__int128 *)&task_info_out.__opaque[128]);
                                                                v315 = task_info_out.__opaque[122];
                                                                v223 = v340;
                                                                v224 = v341;
                                                                while (v223 != v224)
                                                                {
                                                                  v272[0] = 0;
                                                                  v272[0] = *v223;
                                                                  if ((sub_2396F1DB0(v272) & 1) == 0)
                                                                    sub_2394202DC(v318, v272[0]);
                                                                  ++v223;
                                                                }
                                                                sub_239B49A30(&task_info_out);
                                                                sub_23942FE80(v346);
                                                                sub_239B49B50((uint64_t)task_info_outCnt);
                                                                goto LABEL_485;
                                                              }
                                                            }
                                                          }
                                                          if (!*(_BYTE *)(v13 + 18)
                                                            || (v214 = *(_QWORD *)(v13 + 528)) == 0
                                                            || !*(_QWORD *)(v214 + 24))
                                                          {
LABEL_485:
                                                            v10 = 0;
LABEL_486:
                                                            v244 = v292;
                                                            if (v292)
                                                            {
                                                              v245 = (unint64_t *)&v292->__shared_owners_;
                                                              do
                                                                v246 = __ldaxr(v245);
                                                              while (__stlxr(v246 - 1, v245));
                                                              if (!v246)
                                                              {
                                                                ((void (*)(std::__shared_weak_count *))v244->__on_zero_shared)(v244);
                                                                std::__shared_weak_count::__release_weak(v244);
                                                              }
                                                            }
                                                            v148 = v300;
                                                            goto LABEL_492;
                                                          }
                                                          task_info_out.__opaque[40] = 0;
                                                          task_info_out.__opaque[48] = 0;
                                                          task_info_out.__opaque[72] = 0;
                                                          task_info_out.__opaque[80] = 0;
                                                          task_info_out.__opaque[104] = 0;
                                                          task_info_out.__opaque[112] = 0;
                                                          task_info_out.__opaque[136] = 0;
                                                          memset(&task_info_out, 0, 25);
                                                          sub_2396FDAA8(v471, (uint64_t)v336);
                                                          sub_2396FD534(&v268, v462, 5);
                                                          v335 = 0;
                                                          v215 = (char *)operator new(0x40uLL);
                                                          *(_QWORD *)v215 = &off_250ADB9D8;
                                                          *(_OWORD *)(v215 + 8) = v268;
                                                          *((_QWORD *)v215 + 3) = v269;
                                                          *((_QWORD *)&v268 + 1) = 0;
                                                          v269 = 0;
                                                          v216 = v270;
                                                          v270 = 0uLL;
                                                          v217 = v271;
                                                          *((_OWORD *)v215 + 2) = v216;
                                                          *((_OWORD *)v215 + 3) = v217;
                                                          v271 = 0uLL;
                                                          v335 = v215;
                                                          sub_2396FD600((uint64_t)v346, (uint64_t)v336, (uint64_t)v334);
                                                          v218 = v335;
                                                          if (v335 == v334)
                                                          {
                                                            v219 = 4;
                                                            v218 = v334;
                                                          }
                                                          else
                                                          {
                                                            if (!v335)
                                                              goto LABEL_445;
                                                            v219 = 5;
                                                          }
                                                          (*(void (**)(void))(*v218 + 8 * v219))();
LABEL_445:
                                                          sub_23942FEFC(&v268);
                                                          v225 = v337;
                                                          if (v337 == v336)
                                                          {
                                                            v226 = 4;
                                                            v225 = v336;
                                                          }
                                                          else
                                                          {
                                                            if (!v337)
                                                            {
LABEL_450:
                                                              sub_239B49518(v272);
                                                              if (**(int **)(*(_QWORD *)v272 + 56) <= 3
                                                                && *(_BYTE *)(*(_QWORD *)v272 + 72))
                                                              {
                                                                *(_QWORD *)task_info_outCnt = v272;
                                                                *(std::chrono::steady_clock::time_point *)&task_info_outCnt[2] = std::chrono::steady_clock::now();
                                                                rep = std::chrono::system_clock::now().__d_.__rep_;
                                                                LODWORD(v349) = 3;
                                                                *((_QWORD *)&v349 + 1) = "unknown file";
                                                                LODWORD(v350) = 352;
                                                                *((_QWORD *)&v350 + 1) = "unknown function";
                                                                v351 = 0uLL;
                                                                sub_239A58DD4((uint64_t)task_info_outCnt, "Reconstructing point cloud - step 3 option B");
                                                                sub_239A47720((uint64_t)task_info_outCnt);
                                                                sub_239A478B4((uint64_t)task_info_outCnt);
                                                              }
                                                              BYTE8(v350) = 0;
                                                              LOBYTE(v351) = 0;
                                                              v353 = 0;
                                                              BYTE4(v355) = 0;
                                                              LOBYTE(v358) = 0;
                                                              BYTE8(v358) = 0;
                                                              BYTE8(v361) = 0;
                                                              rep = 0;
                                                              memset(task_info_outCnt, 0, sizeof(task_info_outCnt));
                                                              LOBYTE(v349) = 0;
                                                              v332[0] = &off_250AF65B0;
                                                              v332[1] = v182;
                                                              v333 = v332;
                                                              v227 = *(_QWORD *)(v13 + 528);
                                                              v228 = (uint64_t)v299;
                                                              sub_2394B2548((uint64_t)v331, (uint64_t)v346);
                                                              v229 = v309;
                                                              v230 = (uint64_t)v310;
                                                              v266 = v309;
                                                              v267 = (uint64_t)v310;
                                                              if (v310)
                                                              {
                                                                v231 = (unint64_t *)&v310->__shared_owners_;
                                                                do
                                                                  v232 = __ldxr(v231);
                                                                while (__stxr(v232 + 1, v231));
                                                                v230 = v267;
                                                              }
                                                              v329[0] = &off_250AF6208;
                                                              v329[1] = v229;
                                                              v266 = 0;
                                                              v267 = 0;
                                                              v329[2] = v230;
                                                              v330 = v329;
                                                              v233 = v311;
                                                              v234 = (uint64_t)v312;
                                                              v264 = v311;
                                                              v265 = (uint64_t)v312;
                                                              if (v312)
                                                              {
                                                                v235 = (unint64_t *)&v312->__shared_owners_;
                                                                do
                                                                  v236 = __ldxr(v235);
                                                                while (__stxr(v236 + 1, v235));
                                                                v234 = v265;
                                                              }
                                                              v327[0] = &off_250AF61C0;
                                                              v327[1] = v233;
                                                              v264 = 0;
                                                              v265 = 0;
                                                              v327[2] = v234;
                                                              v328 = v327;
                                                              v237 = sub_239EA3878(v20, v13, (uint64_t)v332, v227, v228, (uint64_t)&task_info_out, (uint64_t)task_info_outCnt, (uint64_t)v331, (uint64_t)v313, 1, v329, v327);
                                                              v238 = v328;
                                                              if (v328 == v327)
                                                              {
                                                                v239 = 4;
                                                                v238 = v327;
                                                              }
                                                              else
                                                              {
                                                                if (!v328)
                                                                  goto LABEL_466;
                                                                v239 = 5;
                                                              }
                                                              (*(void (**)(void))(*v238 + 8 * v239))();
LABEL_466:
                                                              sub_239A4D7C0((uint64_t)&v264);
                                                              v240 = v330;
                                                              if (v330 == v329)
                                                              {
                                                                v241 = 4;
                                                                v240 = v329;
                                                              }
                                                              else
                                                              {
                                                                if (!v330)
                                                                  goto LABEL_471;
                                                                v241 = 5;
                                                              }
                                                              (*(void (**)(void))(*v240 + 8 * v241))();
LABEL_471:
                                                              sub_239A4D7C0((uint64_t)&v266);
                                                              sub_23942FE80(v331);
                                                              v242 = v333;
                                                              if (v333 == v332)
                                                              {
                                                                v243 = 4;
                                                                v242 = v332;
                                                              }
                                                              else
                                                              {
                                                                if (!v333)
                                                                {
LABEL_476:
                                                                  if ((v237 & 1) != 0)
                                                                  {
                                                                    sub_239B49DC0((uint64_t *)v272, (uint64_t)task_info_outCnt);
                                                                    sub_239B24AF0(v203, (__int128 *)v272);
                                                                    sub_239A4D7C0((uint64_t)v272);
                                                                    sub_239B3ED9C(v272);
                                                                    if (sub_239EA8E00(v20, *(char ***)v291, (uint64_t)&task_info_out, *(uint64_t *)v272, 0, 0, *(float *)(v13 + 400), *(float *)(v13 + 404), *(float *)(v13 + 408), *(float *)(v13 + 412), 0.004))sub_239B3CCAC(v205, *(uint64_t *)v272, v273);
                                                                    else
                                                                      sub_2394202DC(v318, 5502);
                                                                    sub_239A4D7C0((uint64_t)v272);
                                                                  }
                                                                  else
                                                                  {
                                                                    sub_2394202DC(v318, 5502);
                                                                    sub_239B49518(&v280);
                                                                    if (**(int **)(v280 + 56) <= 4
                                                                      && *(_BYTE *)(v280 + 72))
                                                                    {
                                                                      *(_QWORD *)v272 = &v280;
                                                                      *(std::chrono::steady_clock::time_point *)&v273 = std::chrono::steady_clock::now();
                                                                      *((std::chrono::system_clock::time_point *)&v273
                                                                      + 1) = std::chrono::system_clock::now();
                                                                      LODWORD(v274) = 4;
                                                                      v275 = "unknown file";
                                                                      v276 = 360;
                                                                      v278 = 0;
                                                                      v279 = 0;
                                                                      v277 = "unknown function";
                                                                      sub_239B49884((uint64_t)v272, "Reconstructing point cloud - step 3 option B failed");
                                                                      sub_239A47720((uint64_t)v272);
                                                                      sub_239A478B4((uint64_t)v272);
                                                                    }
                                                                  }
                                                                  sub_2394B6764((uint64_t)task_info_outCnt);
                                                                  sub_23942FE80(v346);
                                                                  sub_2394B6764((uint64_t)&task_info_out);
                                                                  goto LABEL_485;
                                                                }
                                                                v243 = 5;
                                                              }
                                                              (*(void (**)(void))(*v242 + 8 * v243))();
                                                              goto LABEL_476;
                                                            }
                                                            v226 = 5;
                                                          }
                                                          (*(void (**)(void))(*v225 + 8 * v226))();
                                                          goto LABEL_450;
                                                        }
                                                        v178 = (*(uint64_t (**)(void))(*(_QWORD *)v351 + 16))();
                                                      }
                                                      v409 = (_BYTE *)v178;
                                                      goto LABEL_347;
                                                    }
                                                    v176 = (*(uint64_t (**)(void))(*(_QWORD *)v349 + 16))();
                                                  }
                                                  v407 = (_QWORD *)v176;
                                                  goto LABEL_342;
                                                }
                                                v160 = 5;
                                              }
                                              (*(void (**)(void))(*v159 + 8 * v160))();
                                              goto LABEL_314;
                                            }
                                          }
                                        }
                                        v316 = sub_2396E4590((uint64_t)v92, v15, v122, v123, v124, v125, v126, v127, v128);
                                        sub_2396DB4C8();
                                        if ((std::__shared_weak_count_vtbl *)v91[1].__shared_owners_ != v91[1].__vftable)
                                        {
                                          v10 = 2;
                                          v143 = 1;
                                          goto LABEL_290;
                                        }
                                        sub_2394202DC(v318, 5007);
                                      }
                                      else
                                      {
                                        sub_2394202DC(v318, 5005);
                                      }
                                      v143 = 0;
                                      v10 = 2;
                                      goto LABEL_290;
                                    }
                                    v120 = (*(uint64_t (**)(void))(*(_QWORD *)v351 + 16))();
                                  }
                                  v427 = (_BYTE *)v120;
                                  goto LABEL_244;
                                }
                                v118 = (*(uint64_t (**)(void))(*(_QWORD *)v349 + 16))();
                              }
                              v425 = (_QWORD *)v118;
                              goto LABEL_239;
                            }
                            v99 = 5;
                          }
                          (*(void (**)(void))(*v98 + 8 * v99))();
                          goto LABEL_211;
                        }
                        sub_2394202DC(v318, 5004);
                        if (*((_QWORD *)&v349 + 1))
                        {
                          *(_QWORD *)&v350 = *((_QWORD *)&v349 + 1);
                          operator delete(*((void **)&v349 + 1));
                        }
                        if (SBYTE7(v349) < 0)
                          operator delete(*(void **)&task_info_outCnt[2]);
                        v87 = *(char **)&task_info_out.__opaque[48];
                        if (*(pthread_rwlock_t **)&task_info_out.__opaque[48] == (pthread_rwlock_t *)&task_info_out.__opaque[24])
                        {
                          v88 = 4;
                          v87 = &task_info_out.__opaque[24];
                        }
                        else
                        {
                          if (!*(_QWORD *)&task_info_out.__opaque[48])
                            goto LABEL_201;
                          v88 = 5;
                        }
                        (*(void (**)(void))(*(_QWORD *)v87 + 8 * v88))();
LABEL_201:
                        v100 = *(pthread_rwlock_t **)&task_info_out.__opaque[16];
                        if (*(pthread_rwlock_t **)&task_info_out.__opaque[16] == &task_info_out)
                        {
                          v101 = 4;
                          v100 = &task_info_out;
                        }
                        else
                        {
                          if (!*(_QWORD *)&task_info_out.__opaque[16])
                          {
LABEL_206:
                            v10 = 2;
                            goto LABEL_497;
                          }
                          v101 = 5;
                        }
                        (*(void (**)(void))(v100->__sig + 8 * v101))();
                        goto LABEL_206;
                      }
                      v70 = (*(uint64_t (**)(void))(**(_QWORD **)&task_info_out.__opaque[48] + 16))();
                    }
                    v447 = (_BYTE *)v70;
                    goto LABEL_129;
                  }
                  v68 = (*(uint64_t (**)(void))(**(_QWORD **)&task_info_out.__opaque[16] + 16))();
                }
                v445 = (_QWORD *)v68;
                goto LABEL_124;
              }
              v47 = 5;
            }
            (*(void (**)(void))(*v46 + 8 * v47))();
            goto LABEL_93;
          }
          v31 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 16))(v31);
        }
        v466 = (_QWORD *)v31;
        goto LABEL_53;
      }
      v29 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 16))(v29);
    }
    v464 = (_QWORD *)v29;
    goto LABEL_48;
  }
  return 3;
}

void sub_239B47DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;
  uint64_t v69;

  sub_239A478B4((uint64_t)&a29);
  sub_2394B6764((uint64_t)&STACK[0xB10]);
  sub_23942FE80(&STACK[0xAD0]);
  sub_2394B6764((uint64_t)&STACK[0x6F0]);
  sub_239A4D7C0((uint64_t)&a57);
  sub_239A4D7C0((uint64_t)&a69);
  sub_2396FCD14((uint64_t)&STACK[0x1110]);
  sub_23942FE80((_QWORD *)(v69 - 216));
  sub_239A4D7C0((uint64_t)&STACK[0x250]);
  sub_239A4D7C0((uint64_t)&STACK[0x260]);
  sub_239416834((_QWORD *)(v69 - 152));
  sub_239A613DC((uint64_t)&STACK[0x270]);
  _Unwind_Resume(a1);
}

void sub_239B48720()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;

  v1 = (unint64_t *)STACK[0x1108];
  if (STACK[0x1108] == v0)
  {
    v2 = 4;
    v1 = &STACK[0x10F0];
  }
  else
  {
    if (!v1)
      goto LABEL_6;
    v2 = 5;
  }
  (*(void (**)(void))(*v1 + 8 * v2))();
LABEL_6:
  JUMPOUT(0x239B486F0);
}

void sub_239B48758()
{
  JUMPOUT(0x239B486F0);
}

void sub_239B48760()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;

  v1 = (unint64_t *)STACK[0x13A0];
  if (STACK[0x13A0] == v0)
  {
    v2 = 4;
    v1 = &STACK[0x1388];
  }
  else
  {
    if (!v1)
    {
LABEL_6:
      sub_23942FE80(&STACK[0x1348]);
      JUMPOUT(0x239B487A8);
    }
    v2 = 5;
  }
  (*(void (**)(void))(*v1 + 8 * v2))();
  goto LABEL_6;
}

void sub_239B487DC()
{
  JUMPOUT(0x239B486F8);
}

void sub_239B487E4()
{
  sub_2395C29C4((uint64_t)&STACK[0x6F0]);
  JUMPOUT(0x239B48708);
}

void sub_239B48828()
{
  uint64_t v0;

  sub_239596DB0(v0 + 8);
  JUMPOUT(0x239B48708);
}

void sub_239B48830()
{
  JUMPOUT(0x239B48710);
}

void sub_239B48838(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B4885C()
{
  pthread_mutex_t *v0;

  sub_2397A163C(v0);
  JUMPOUT(0x239B48868);
}

void sub_239B48874()
{
  JUMPOUT(0x239B48708);
}

void sub_239B4887C()
{
  JUMPOUT(0x239B48710);
}

uint64_t sub_239B48884(uint64_t a1)
{
  task_name_t *v7;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v11;

  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  __asm { FMOV            V1.2S, #-1.0 }
  *(_QWORD *)(a1 + 96) = _D1;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_QWORD *)(a1 + 168) = _D1;
  *(_DWORD *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 227) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_DWORD *)(a1 + 244) = -1082130432;
  *(_BYTE *)(a1 + 248) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 312) = 0;
  *(_QWORD *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_DWORD *)(a1 + 288) = 0;
  *(_BYTE *)(a1 + 320) = 1;
  *(std::chrono::system_clock::time_point *)(a1 + 256) = std::chrono::system_clock::now();
  task_info_outCnt = 93;
  v7 = (task_name_t *)MEMORY[0x24BDAEC58];
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(a1 + 284) = (float)((float)v11 * 0.00097656) * 0.00097656;
  *(_BYTE *)(a1 + 320) = 1;
  *(_OWORD *)(a1 + 328) = xmmword_239F0C0D0;
  *(_DWORD *)(a1 + 344) = 65793;
  *(_DWORD *)(a1 + 348) = 1075838976;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_QWORD *)(a1 + 400) = 8000000;
  *(_BYTE *)(a1 + 408) = 0;
  *(_OWORD *)(a1 + 412) = xmmword_239F0C0E0;
  *(_BYTE *)(a1 + 428) = 2;
  *(_OWORD *)(a1 + 440) = xmmword_239F0C0F0;
  *(_BYTE *)(a1 + 456) = 1;
  *(_DWORD *)(a1 + 460) = 0x40000000;
  *(_BYTE *)(a1 + 536) = 0;
  *(_OWORD *)(a1 + 464) = xmmword_239F0C100;
  *(_OWORD *)(a1 + 480) = xmmword_239F0BFA0;
  *(_QWORD *)(a1 + 496) = 5;
  *(_OWORD *)(a1 + 504) = xmmword_239F0C110;
  *(_OWORD *)(a1 + 520) = xmmword_239F0C120;
  *(_DWORD *)(a1 + 544) = 1045220557;
  *(_QWORD *)(a1 + 552) = 3;
  *(_DWORD *)(a1 + 560) = 1077936128;
  *(_QWORD *)(a1 + 568) = 3;
  *(_QWORD *)(a1 + 576) = 0x3E4CCCCD41A00000;
  *(_BYTE *)(a1 + 584) = 0;
  *(_DWORD *)(a1 + 588) = 1065353216;
  *(_QWORD *)(a1 + 592) = 0x41F000003C23D70ALL;
  *(_QWORD *)(a1 + 600) = 0x3F50624DD2F1A9FCLL;
  *(int64x2_t *)(a1 + 608) = vdupq_n_s64(0x1EuLL);
  *(_QWORD *)(a1 + 624) = 1022739087;
  *(_BYTE *)(a1 + 632) = 1;
  *(_DWORD *)(a1 + 636) = 1106247680;
  *(_QWORD *)(a1 + 640) = 0x412000003C23D70ALL;
  *(_QWORD *)(a1 + 648) = 200;
  *(int32x2_t *)(a1 + 656) = vdup_n_s32(0x3C23D70Au);
  *(_QWORD *)(a1 + 664) = 1;
  *(_DWORD *)(a1 + 672) = 1050253722;
  *(_QWORD *)(a1 + 680) = 1;
  *(_OWORD *)(a1 + 688) = xmmword_239F0C130;
  *(_QWORD *)(a1 + 704) = 0x42C8000000000000;
  *(_BYTE *)(a1 + 712) = 1;
  *(_QWORD *)(a1 + 716) = 0x837D1B717;
  *(_OWORD *)(a1 + 724) = xmmword_239F0C140;
  *(_OWORD *)(a1 + 740) = xmmword_239F0C150;
  *(_BYTE *)(a1 + 756) = 1;
  *(_QWORD *)(a1 + 760) = 2147483650000000;
  *(_BYTE *)(a1 + 791) = 0;
  *(_BYTE *)(a1 + 768) = 0;
  *(_QWORD *)(a1 + 432) = 3;
  *(_WORD *)(a1 + 409) = 257;
  *(_QWORD *)(a1 + 840) = 0;
  *(_QWORD *)(a1 + 832) = 0;
  *(_QWORD *)(a1 + 848) = 0;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_DWORD *)(a1 + 824) = 0;
  *(_BYTE *)(a1 + 856) = 1;
  *(std::chrono::system_clock::time_point *)(a1 + 792) = std::chrono::system_clock::now();
  task_info_outCnt = 93;
  if (!task_info(*v7, 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(a1 + 820) = (float)((float)v11 * 0.00097656) * 0.00097656;
  *(_BYTE *)(a1 + 856) = 1;
  return a1;
}

void sub_239B48BF0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void **v6;
  void *v8;
  void *v9;

  v8 = *v6;
  if (*v6)
  {
    *(_QWORD *)(v1 + 840) = v8;
    operator delete(v8);
  }
  sub_239A62090(v4);
  v9 = *v5;
  if (*v5)
  {
    *(_QWORD *)(v1 + 304) = v9;
    operator delete(v9);
  }
  sub_239A620EC(v3);
  sub_239420950(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239B48C3C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 647, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 99;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v23 = v3;
    goto LABEL_12;
  }
  v23 = &v22;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v24 = 0;
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA190;
  *(_QWORD *)&v12 = sub_239B415DC((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239B417F8(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239B48E3C(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B48E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39)
{
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  if (a39 == v41)
  {
    v43 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_6;
    v43 = 5;
    v41 = a39;
  }
  (*(void (**)(_QWORD *))(*v41 + 8 * v43))(v41);
LABEL_6:
  sub_239A8303C(v40);
  sub_239A83110(v39);
  v44 = a20;
  if (a20 == &a17)
  {
    v45 = 4;
    v44 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_11;
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
LABEL_11:
  v46 = a14;
  if (a14 == &a11)
  {
    v47 = 4;
    v46 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v47 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v46 + 8 * v47))();
  _Unwind_Resume(a1);
}

uint64_t sub_239B48F24(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *, _QWORD *);
  _QWORD *v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  unsigned int v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  pthread_cond_t v16;
  pthread_cond_t v17;
  pthread_mutex_t v18;
  _QWORD v19[3];
  _QWORD *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_2397A1618(&v18);
  v9 = 0x7FFFFFFF;
  pthread_cond_init(&v16, 0);
  pthread_cond_init(&v17, 0);
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(_QWORD *, _QWORD *))a1;
  v4 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v2 >> 1));
  if ((v2 & 1) != 0)
    v3 = *(uint64_t (**)(_QWORD *, _QWORD *))(*v4 + v3);
  v19[0] = &off_250AF60E8;
  v19[1] = &v9;
  v20 = v19;
  v5 = v3(v4, v19);
  v6 = v20;
  if (v20 == v19)
  {
    v7 = 4;
    v6 = v19;
  }
  else
  {
    if (!v20)
      goto LABEL_8;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_8:
  if (v5)
  {
    sub_2395BFB54(&v9);
    sub_2395C2A4C((uint64_t)&v9);
  }
  return sub_2395C29C4((uint64_t)&v9);
}

void sub_239B49078(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B490C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

uint64_t sub_239B490E4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 647, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 99;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v23 = v3;
    goto LABEL_12;
  }
  v23 = &v22;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v24 = 0;
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA690;
  *(_QWORD *)&v12 = sub_239B407F0((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239B40A0C(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239B492E4(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B492F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39)
{
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  if (a39 == v41)
  {
    v43 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_6;
    v43 = 5;
    v41 = a39;
  }
  (*(void (**)(_QWORD *))(*v41 + 8 * v43))(v41);
LABEL_6:
  sub_239A8303C(v40);
  sub_239A83110(v39);
  v44 = a20;
  if (a20 == &a17)
  {
    v45 = 4;
    v44 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_11;
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
LABEL_11:
  v46 = a14;
  if (a14 == &a11)
  {
    v47 = 4;
    v46 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v47 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v46 + 8 * v47))();
  _Unwind_Resume(a1);
}

uint64_t sub_239B493CC(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  _BYTE *v6;
  _BYTE *v7;
  int64_t v8;
  char *v9;
  char *v10;

  v4 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = v4;
  if (*(char *)(a2 + 47) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 8), *(void **)(a2 + 24), *(_QWORD *)(a2 + 32));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v5;
  }
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  v7 = *(_BYTE **)(a2 + 48);
  v6 = *(_BYTE **)(a2 + 56);
  v8 = v6 - v7;
  if (v6 != v7)
  {
    if (v8 < 0)
      sub_2394189F8();
    v9 = (char *)operator new(v6 - v7);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v9;
    v10 = &v9[8 * (v8 >> 3)];
    *(_QWORD *)(a1 + 48) = v10;
    memcpy(v9, v7, v8);
    *(_QWORD *)(a1 + 40) = v10;
  }
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 76);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 16);
  return a1;
}

void sub_239B4949C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 40) = v5;
    operator delete(v5);
    if ((*(char *)(v1 + 31) & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v1 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B494D8(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(_QWORD *)(a1 + 40) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B49518(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25693D9B0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25693D9B0))
  {
    sub_2399FF268(&v5);
    sub_23941A4FC(__p, "cv3dapi.pg");
    sub_239A03BC8(&v5, (uint64_t)__p, &qword_25693D9A8);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_25693D9B0);
  }
  *a1 = qword_25693D9A8;
}

void sub_239B495B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25693D9B0);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B495E8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[3];
  _QWORD *v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v4 = (unint64_t *)(a3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v9[0] = &off_250AF6208;
  v9[1] = a2;
  v9[2] = a3;
  v10 = v9;
  sub_23948AB98(v9, a1);
  v6 = v10;
  if (v10 == v9)
  {
    v7 = 4;
    v6 = v9;
    goto LABEL_8;
  }
  if (v10)
  {
    v7 = 5;
LABEL_8:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

_QWORD *sub_239B496A0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[3];
  _QWORD *v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v4 = (unint64_t *)(a3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v9[0] = &off_250AF61C0;
  v9[1] = a2;
  v9[2] = a3;
  v10 = v9;
  sub_239A7ECE0(v9, a1);
  v6 = v10;
  if (v10 == v9)
  {
    v7 = 4;
    v6 = v9;
    goto LABEL_8;
  }
  if (v10)
  {
    v7 = 5;
LABEL_8:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

_OWORD *sub_239B49758(_OWORD *a1)
{
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  sub_239B48884((uint64_t)(a1 + 4));
  return a1;
}

void sub_239B49794(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;

  v3 = (std::__shared_weak_count *)v1[7];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = (std::__shared_weak_count *)v1[5];
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = (std::__shared_weak_count *)v1[3];
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = (std::__shared_weak_count *)v1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B49884(uint64_t a1, char *__s)
{
  size_t v4;
  uint64_t v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  if (!*(_QWORD *)(a1 + 56))
  {
    v6 = operator new();
    sub_2394988CC(v6);
    v7 = (_QWORD *)operator new();
    *v7 = &unk_250AF1978;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = v6;
    v8 = *(std::__shared_weak_count **)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v7;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  v4 = strlen(__s);
  sub_239458500((_QWORD *)(*(_QWORD *)(a1 + 56) + 16), (uint64_t)__s, v4);
  return a1;
}

void sub_239B49964(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239B49980(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

uint64_t sub_239B499A4(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 64) = v7;
  if ((__int128 *)a1 != a2)
  {
    sub_23942156C((_QWORD *)(a1 + 120), *((char **)a2 + 15), *((char **)a2 + 16), (uint64_t)(*((_QWORD *)a2 + 16) - *((_QWORD *)a2 + 15)) >> 2);
    sub_23945D3D0((_QWORD *)(a1 + 144), *((char **)a2 + 18), *((char **)a2 + 19), (uint64_t)(*((_QWORD *)a2 + 19) - *((_QWORD *)a2 + 18)) >> 3);
  }
  v10 = *((_QWORD *)a2 + 21);
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  *(_QWORD *)(a1 + 168) = v10;
  return a1;
}

_QWORD *sub_239B49A30(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;

  sub_239A613DC((uint64_t)(a1 + 8));
  v2 = (std::__shared_weak_count *)a1[7];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[5];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[5];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[3];
  if (!v8)
    goto LABEL_15;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v11 = (std::__shared_weak_count *)a1[1];
    if (!v11)
      return a1;
  }
  else
  {
LABEL_15:
    v11 = (std::__shared_weak_count *)a1[1];
    if (!v11)
      return a1;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  return a1;
}

uint64_t sub_239B49B50(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  void *v28;

  v2 = (_QWORD *)(a1 + 608);
  v3 = *(_QWORD **)(a1 + 632);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(_QWORD **)(a1 + 600);
  if (v5 == (_QWORD *)(a1 + 576))
  {
    v6 = 4;
    v5 = (_QWORD *)(a1 + 576);
    goto LABEL_10;
  }
  if (v5)
  {
    v6 = 5;
LABEL_10:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }
  v7 = *(std::__shared_weak_count **)(a1 + 568);
  if (!v7)
    goto LABEL_15;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    v10 = *(std::__shared_weak_count **)(a1 + 552);
    if (!v10)
      goto LABEL_21;
  }
  else
  {
LABEL_15:
    v10 = *(std::__shared_weak_count **)(a1 + 552);
    if (!v10)
      goto LABEL_21;
  }
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
LABEL_21:
  v13 = *(std::__shared_weak_count **)(a1 + 536);
  if (!v13)
    goto LABEL_25;
  v14 = (unint64_t *)&v13->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = *(std::__shared_weak_count **)(a1 + 520);
    if (!v16)
      goto LABEL_31;
  }
  else
  {
LABEL_25:
    v16 = *(std::__shared_weak_count **)(a1 + 520);
    if (!v16)
      goto LABEL_31;
  }
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
LABEL_31:
  v19 = *(std::__shared_weak_count **)(a1 + 504);
  if (!v19)
    goto LABEL_35;
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldaxr(v20);
  while (__stlxr(v21 - 1, v20));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    v22 = *(std::__shared_weak_count **)(a1 + 488);
    if (!v22)
      goto LABEL_41;
  }
  else
  {
LABEL_35:
    v22 = *(std::__shared_weak_count **)(a1 + 488);
    if (!v22)
      goto LABEL_41;
  }
  v23 = (unint64_t *)&v22->__shared_owners_;
  do
    v24 = __ldaxr(v23);
  while (__stlxr(v24 - 1, v23));
  if (!v24)
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
LABEL_41:
  v25 = *(std::__shared_weak_count **)(a1 + 472);
  if (!v25)
    goto LABEL_45;
  v26 = (unint64_t *)&v25->__shared_owners_;
  do
    v27 = __ldaxr(v26);
  while (__stlxr(v27 - 1, v26));
  if (!v27)
  {
    ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
    std::__shared_weak_count::__release_weak(v25);
    if ((*(char *)(a1 + 463) & 0x80000000) == 0)
    {
LABEL_46:
      v28 = *(void **)(a1 + 48);
      if (!v28)
        goto LABEL_48;
      goto LABEL_47;
    }
  }
  else
  {
LABEL_45:
    if ((*(char *)(a1 + 463) & 0x80000000) == 0)
      goto LABEL_46;
  }
  operator delete(*(void **)(a1 + 440));
  v28 = *(void **)(a1 + 48);
  if (v28)
  {
LABEL_47:
    *(_QWORD *)(a1 + 56) = v28;
    operator delete(v28);
  }
LABEL_48:
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  return a1;
}

uint64_t sub_239B49DC0(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t result;

  v4 = operator new(0xB0uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_250B020F8;
  result = sub_2394B6DC0((uint64_t)(v4 + 3), a2);
  *a1 = result;
  a1[1] = (uint64_t)v4;
  return result;
}

void sub_239B49E10(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_239B49E2C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B49E40(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF65B0;
  result[1] = v3;
  return result;
}

uint64_t sub_239B49E74(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF65B0;
  a2[1] = v2;
  return result;
}

void sub_239B49E90(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v10[4];
  char v11;
  __int128 v12;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v12 = 0uLL;
  v11 = 0;
  v10[0] = sub_239B49F7C;
  v10[1] = 0;
  v10[2] = v4;
  v10[3] = v5;
  sub_239B4A200((uint64_t)v10, (uint64_t)&v12, (uint64_t)&v11);
  if (v11)
  {
    v6 = v12;
  }
  else
  {
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
    v6 = 0uLL;
    if (*((_QWORD *)&v12 + 1))
    {
      v8 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, (__n128)0);
        std::__shared_weak_count::__release_weak(v7);
        v6 = 0uLL;
      }
    }
  }
  *a3 = v6;
}

void sub_239B49F38(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B49F7C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 308, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = a2;
  v14 = a2;
  v5 = v15;
  v6 = (uint64_t *)a3[3];
  if (!v6)
  {
    v16 = 0;
    LODWORD(v17) = 0;
    v18 = a2;
LABEL_10:
    v20 = v6;
    goto LABEL_11;
  }
  if (v6 == a3)
  {
    v16 = v15;
    (*(void (**)(uint64_t *, _QWORD *))(*a3 + 24))(a3, v15);
    v3 = v14;
    v6 = v16;
  }
  else
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    v16 = v6;
  }
  LODWORD(v17) = 0;
  v18 = v3;
  if (!v6)
    goto LABEL_10;
  if (v6 != v15)
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    goto LABEL_10;
  }
  v20 = &v19;
  (*(void (**)(_QWORD *))(v15[0] + 24))(v15);
LABEL_11:
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v18 = v14;
  v21 = v14;
  v25 = 0;
  v26 = v14;
  v7 = (std::__shared_weak_count *)operator new(0x120uLL);
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA190;
  *(_QWORD *)&v13 = sub_239B415DC((uint64_t)&v7[1], (uint64_t)&v17);
  *((_QWORD *)&v13 + 1) = v7;
  sub_239A82E8C(&v17);
  if (v16 == v15)
  {
    v9 = 4;
    goto LABEL_15;
  }
  if (v16)
  {
    v9 = 5;
    v5 = v16;
LABEL_15:
    (*(void (**)(uint64_t *))(*v5 + 8 * v9))(v5);
  }
  v10 = sub_239B417F8(*(unsigned int **)(a1 + 288), &v13);
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  return v10;
}

void sub_239B4A18C(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B4A198(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, char a17)
{
  _QWORD *v17;
  uint64_t v19;

  if (a16 == v17)
  {
    v19 = 4;
  }
  else
  {
    if (!a16)
      _Unwind_Resume(exception_object);
    v19 = 5;
    v17 = a16;
  }
  (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B4A200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, uint64_t, _BYTE *);
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  pthread_cond_t v22;
  pthread_cond_t v23;
  pthread_mutex_t v24;
  _BYTE v25[24];
  _BYTE *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  sub_2397A1618(&v24);
  v15 = 0x7FFFFFFF;
  pthread_cond_init(&v22, 0);
  pthread_cond_init(&v23, 0);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(uint64_t (**)(_QWORD *, uint64_t, _BYTE *))a1;
  v8 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v6 >> 1));
  if ((v6 & 1) != 0)
    v7 = *(uint64_t (**)(_QWORD *, uint64_t, _BYTE *))(*v8 + v7);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = operator new(0x20uLL);
  *v10 = &off_250AF7820;
  v10[1] = &v15;
  v10[2] = a2;
  v10[3] = a3;
  v26 = v10;
  v11 = v7(v8, v9, v25);
  v12 = v26;
  if (v26 == v25)
  {
    v13 = 4;
    v12 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_8;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_8:
  if (v11)
  {
    sub_2395BFB54(&v15);
    sub_2395C2A4C((uint64_t)&v15);
  }
  return sub_2395C29C4((uint64_t)&v15);
}

void sub_239B4A37C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  va_list va;

  va_start(va, a2);
  v5 = *(_QWORD **)(v3 - 80);
  if (v5 == v2)
  {
    v6 = 4;
    v5 = (_QWORD *)(v3 - 104);
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B4A3CC()
{
  pthread_mutex_t *v0;

  sub_2397A163C(v0);
  JUMPOUT(0x239B4A3D8);
}

void sub_239B4A3EC()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B4A400(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF7820;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B4A440(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF7820;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B4A468(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  char v6;
  _QWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;

  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *a3;
  v7 = *(_QWORD **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v10 = (std::__shared_weak_count *)v7[1];
  *v7 = v4;
  v7[1] = v5;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  **(_BYTE **)(a1 + 24) = v6;
  v13 = *(unsigned int **)(a1 + 8);
  v16 = 1;
  sub_2395BFE44(v13, &v16);
  if (v5)
  {
    v14 = (unint64_t *)&v5->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_239B4A548(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B4A58C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B4A5A0(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF6568;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B4A5D8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6568;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B4A5F8(uint64_t a1, uint64_t *a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  pthread_rwlock_t *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  v4 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v5 = *(pthread_rwlock_t **)(a1 + 16);
  j__pthread_rwlock_wrlock(v5);
  v6 = sub_239B4A6D8(*(_QWORD *)(a1 + 8), v4);
  j__pthread_rwlock_unlock(v5);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v6;
}

void sub_239B4A684(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  pthread_rwlock_t *v2;
  unint64_t *p_shared_owners;
  unint64_t v5;

  j__pthread_rwlock_unlock(v2);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B4A6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  char **v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  char **v17;
  uint64_t v18;
  _QWORD *v19;
  char **v20;
  char *v21;
  char *v22;
  int64_t v23;
  char **v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char **v30;
  char *v31;
  char *v32;
  int64_t v33;
  char *v34;
  char *v35;
  char **v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char **v41;
  char **v42;
  char **v43;
  char *v44;
  char *v45;
  char **v46;
  _QWORD *v47;
  _QWORD *v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  char *v67;
  int64_t v68;
  char *v69;
  char *v70;
  size_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  char *v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD *v83;
  __int128 *v84;
  uint64_t v85;
  __int128 v86;
  int v87;
  char *v88;
  char *v89;
  unint64_t v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  __int128 *v94;
  _OWORD *v95;
  uint64_t v96;
  __int128 v97;
  int v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  __int128 *v102;
  _OWORD *v103;
  uint64_t v104;
  __int128 v105;
  int v106;
  char *v107;
  size_t v108;
  uint64_t v109;
  char ***v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  _QWORD *v115;
  char **v116;
  char *v117;
  char *v118;

  if ((*(_BYTE *)(a2 + 48) != 0) == (*(_BYTE *)(a1 + 48) != 0))
  {
    v2 = a2;
    v3 = (_QWORD *)a1;
    if ((*(_BYTE *)(a2 + 80) != 0) == (*(_BYTE *)(a1 + 80) != 0)
      && (*(_BYTE *)(a2 + 112) != 0) == (*(_BYTE *)(a1 + 112) != 0)
      && (*(_BYTE *)(a2 + 144) != 0) == (*(_BYTE *)(a1 + 144) != 0))
    {
      sub_2396C835C((void **)a1, *(_QWORD *)(a1 + 8), *(uint64_t **)a2, *(uint64_t **)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 2));
      if (*((_BYTE *)v3 + 48))
      {
        if (!*(_BYTE *)(v2 + 48))
          goto LABEL_128;
        sub_2396C8640((void **)v3 + 3, v3[4], *(__int16 **)(v2 + 24), *(__int16 **)(v2 + 32), 0xAAAAAAAAAAAAAAABLL * (*(_QWORD *)(v2 + 32) - *(_QWORD *)(v2 + 24)));
      }
      if (*((_BYTE *)v3 + 80))
      {
        if (!*(_BYTE *)(v2 + 80))
          goto LABEL_128;
        sub_2396C835C((void **)v3 + 7, v3[8], *(uint64_t **)(v2 + 56), *(uint64_t **)(v2 + 64), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v2 + 64) - *(_QWORD *)(v2 + 56)) >> 2));
      }
      if (*((_BYTE *)v3 + 112))
      {
        if (!*(_BYTE *)(v2 + 112))
          goto LABEL_128;
        v5 = *(char ***)(v2 + 88);
        v116 = *(char ***)(v2 + 96);
        if ((char *)v116 - (char *)v5 >= 1)
        {
          v7 = v3[11];
          v6 = v3[12];
          v8 = ((char *)v116 - (char *)v5) / 24;
          v9 = (uint64_t)(v6 - v7) / 24;
          v10 = v3[13];
          v11 = (char **)(v7 + 24 * v9);
          if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - v6) >> 3)) < v8)
          {
            v12 = v9 + v8;
            if ((unint64_t)(v9 + v8) > 0xAAAAAAAAAAAAAAALL)
              sub_2394189F8();
            v13 = 0xAAAAAAAAAAAAAAABLL * ((v10 - v7) >> 3);
            if (2 * v13 > v12)
              v12 = 2 * v13;
            if (v13 >= 0x555555555555555)
              v14 = 0xAAAAAAAAAAAAAAALL;
            else
              v14 = v12;
            v111 = v2;
            v113 = v3;
            v110 = (char ***)(v3 + 11);
            if (v14)
            {
              if (v14 > 0xAAAAAAAAAAAAAAALL)
                goto LABEL_130;
              v15 = (char *)operator new(24 * v14);
            }
            else
            {
              v15 = 0;
            }
            v109 = (uint64_t)(v6 - v7) / 24;
            v117 = &v15[24 * v9];
            v118 = &v15[24 * v14];
            v28 = 24 * v8;
            v29 = &v117[v28];
            v30 = (char **)(v117 + 8);
            do
            {
              *(v30 - 1) = 0;
              *v30 = 0;
              v30[1] = 0;
              v32 = *v5;
              v31 = v5[1];
              v33 = v31 - *v5;
              if (v31 != *v5)
              {
                if (v33 < 0)
                  sub_2394189F8();
                v34 = (char *)operator new(v31 - *v5);
                *(v30 - 1) = v34;
                *v30 = v34;
                v35 = &v34[4 * (v33 >> 2)];
                v30[1] = v35;
                memcpy(v34, v32, v33);
                *v30 = v35;
              }
              v30 += 3;
              v5 += 3;
              v28 -= 24;
            }
            while (v28);
            v36 = *v110;
            v3 = v113;
            v37 = v117;
            if (*v110 != v11)
            {
              v38 = 24 * v109;
              do
              {
                v39 = &v15[v38];
                v40 = v7 + v38;
                *(_OWORD *)(v39 - 24) = *(_OWORD *)(v7 + v38 - 24);
                *((_QWORD *)v39 - 1) = *(_QWORD *)(v7 + v38 - 8);
                *(_QWORD *)(v40 - 24) = 0;
                *(_QWORD *)(v40 - 16) = 0;
                *(_QWORD *)(v40 - 8) = 0;
                v15 -= 24;
                v7 -= 24;
              }
              while ((char **)(v7 + v38) != v36);
              v37 = &v15[v38];
            }
            v41 = (char **)v113[12];
            if (v41 != v11)
            {
              do
              {
                *(_QWORD *)v29 = 0;
                *((_QWORD *)v29 + 1) = 0;
                *((_QWORD *)v29 + 2) = 0;
                *(_OWORD *)v29 = *(_OWORD *)v11;
                *((_QWORD *)v29 + 2) = v11[2];
                *v11 = 0;
                v11[1] = 0;
                v11[2] = 0;
                v29 += 24;
                v11 += 3;
              }
              while (v11 != v41);
              v11 = (char **)v113[12];
            }
            v42 = (char **)v113[11];
            v113[11] = v37;
            v113[12] = v29;
            v113[13] = v118;
            if (v11 != v42)
            {
              v43 = v11;
              do
              {
                v45 = *(v43 - 3);
                v43 -= 3;
                v44 = v45;
                if (v45)
                {
                  *(v11 - 2) = v44;
                  operator delete(v44);
                }
                v11 = v43;
              }
              while (v43 != v42);
            }
            if (v42)
              operator delete(v42);
            v2 = v111;
            goto LABEL_67;
          }
          v16 = v6 - (_QWORD)v11;
          if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - (_QWORD)v11) >> 3)) >= v8)
          {
            v17 = &v5[3 * v8];
            v27 = (_QWORD *)v3[12];
          }
          else
          {
            v17 = &v5[(uint64_t)(v6 - (_QWORD)v11) >> 3];
            if (v17 == v116)
            {
              v27 = (_QWORD *)v3[12];
            }
            else
            {
              v112 = v2;
              v114 = v3;
              v18 = 0;
              do
              {
                v19 = (_QWORD *)(v6 + v18 * 8);
                v20 = &v17[v18];
                *v19 = 0;
                v19[1] = 0;
                v19[2] = 0;
                v22 = v17[v18];
                v21 = v17[v18 + 1];
                v23 = v21 - v22;
                if (v21 != v22)
                {
                  if (v23 < 0)
                    sub_2394189F8();
                  v24 = v17;
                  v25 = (char *)operator new(v21 - v22);
                  *v19 = v25;
                  v19[1] = v25;
                  v26 = &v25[4 * (v23 >> 2)];
                  v19[2] = v26;
                  memcpy(v25, v22, v23);
                  v19[1] = v26;
                  v17 = v24;
                }
                v18 += 3;
              }
              while (v20 + 3 != v116);
              v27 = (_QWORD *)(v6 + v18 * 8);
              v2 = v112;
              v3 = v114;
              v16 = v6 - (_QWORD)v11;
              v8 = ((char *)v116 - (char *)v5) / 24;
            }
            v3[12] = v27;
            if (v16 <= 0)
              goto LABEL_67;
          }
          v46 = &v11[3 * v8];
          v47 = &v27[-3 * v8];
          v48 = v27;
          if ((unint64_t)v47 < v6)
          {
            v48 = v27;
            do
            {
              *v48 = 0;
              v48[1] = 0;
              v48[2] = 0;
              *(_OWORD *)v48 = *(_OWORD *)v47;
              v48[2] = v47[2];
              *v47 = 0;
              v47[1] = 0;
              v47[2] = 0;
              v48 += 3;
              v47 += 3;
            }
            while ((unint64_t)v47 < v6);
          }
          v3[12] = v48;
          if (v27 != v46)
          {
            v49 = (void **)(v27 - 3);
            v50 = (char **)v27 - v46;
            do
            {
              v52 = *v49;
              if (*v49)
              {
                v49[1] = v52;
                operator delete(v52);
                *v49 = 0;
                v49[1] = 0;
                v49[2] = 0;
              }
              v51 = (uint64_t)&v11[v50 - 3];
              *(_OWORD *)v49 = *(_OWORD *)v51;
              v49[2] = v11[v50 - 1];
              *(_QWORD *)v51 = 0;
              *(_QWORD *)(v51 + 8) = 0;
              *(_QWORD *)(v51 + 16) = 0;
              v49 -= 3;
              v50 -= 3;
            }
            while (v50 * 8);
          }
          for (; v5 != v17; v11 += 3)
          {
            if (v5 != v11)
              sub_23942156C(v11, *v5, v5[1], (v5[1] - *v5) >> 2);
            v5 += 3;
          }
        }
      }
LABEL_67:
      if (!*((_BYTE *)v3 + 144))
        return 1;
      if (*(_BYTE *)(v2 + 144))
      {
        v54 = *(char **)(v2 + 120);
        v53 = *(char **)(v2 + 128);
        if (v53 - v54 >= 1)
        {
          v56 = v3[15];
          v55 = (char *)v3[16];
          v57 = (v53 - v54) >> 2;
          v58 = (int64_t)&v55[-v56];
          v59 = (uint64_t)&v55[-v56] >> 2;
          v60 = (_BYTE *)(v56 + ((unint64_t)&v55[-v56] & 0xFFFFFFFFFFFFFFFCLL));
          v61 = v3[17];
          v115 = v3;
          if (v57 > (v61 - (uint64_t)v55) >> 2)
          {
            v62 = v59 + v57;
            if ((unint64_t)(v59 + v57) >> 62)
              sub_2394189F8();
            v63 = v61 - v56;
            if (v63 >> 1 > v62)
              v62 = v63 >> 1;
            if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL)
              v64 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v64 = v62;
            if (!v64)
            {
              v65 = 0;
LABEL_106:
              v88 = &v65[4 * v59];
              v89 = &v88[4 * v57];
              v90 = (v57 - 1) & 0x3FFFFFFFFFFFFFFFLL;
              if (v90 >= 7)
              {
                v91 = &v65[4 * v59];
                if ((unint64_t)(&v65[v58 & 0xFFFFFFFFFFFFFFFCLL] - v54) >= 0x20)
                {
                  v92 = v90 + 1;
                  v93 = 4 * (v92 & 0x7FFFFFFFFFFFFFF8);
                  v91 = &v88[v93];
                  v94 = (__int128 *)(v54 + 16);
                  v95 = &v65[4 * v59 + 16];
                  v96 = v92 & 0x7FFFFFFFFFFFFFF8;
                  do
                  {
                    v97 = *v94;
                    *(v95 - 1) = *(v94 - 1);
                    *v95 = v97;
                    v94 += 2;
                    v95 += 2;
                    v96 -= 8;
                  }
                  while (v96);
                  if (v92 == (v92 & 0x7FFFFFFFFFFFFFF8))
                  {
LABEL_114:
                    if ((char *)v56 != v55)
                    {
                      if ((unint64_t)(v58 - 4) >= 0x3C)
                      {
                        v99 = (char *)(v56 + ((unint64_t)&v55[-v56] & 0xFFFFFFFFFFFFFFFCLL));
                        if ((v58 & 0xFFFFFFFFFFFFFFFCLL) + v56 - (unint64_t)&v65[v58 & 0xFFFFFFFFFFFFFFFCLL] >= 0x20)
                        {
                          v100 = ((unint64_t)(v58 - 4) >> 2) + 1;
                          v99 = &v60[-4 * (v100 & 0x7FFFFFFFFFFFFFF8)];
                          v101 = 4 * v59 - 16;
                          v102 = (__int128 *)(v56 + v101);
                          v103 = &v65[v101];
                          v104 = v100 & 0x7FFFFFFFFFFFFFF8;
                          do
                          {
                            v105 = *v102;
                            *(v103 - 1) = *(v102 - 1);
                            *v103 = v105;
                            v102 -= 2;
                            v103 -= 2;
                            v104 -= 8;
                          }
                          while (v104);
                          v88 -= 4 * (v100 & 0x7FFFFFFFFFFFFFF8);
                          if (v100 == (v100 & 0x7FFFFFFFFFFFFFF8))
                            goto LABEL_122;
                        }
                      }
                      else
                      {
                        v99 = (char *)(v56 + ((unint64_t)&v55[-v56] & 0xFFFFFFFFFFFFFFFCLL));
                      }
                      do
                      {
                        v106 = *((_DWORD *)v99 - 1);
                        v99 -= 4;
                        *((_DWORD *)v88 - 1) = v106;
                        v88 -= 4;
                      }
                      while (v99 != (char *)v56);
                    }
LABEL_122:
                    v107 = &v65[4 * v64];
                    v108 = v55 - v60;
                    if (v108)
                      memmove(v89, v60, v108);
                    v115[15] = v88;
                    v115[16] = &v89[v108];
                    v115[17] = v107;
                    if (v56)
                      operator delete((void *)v56);
                    return 1;
                  }
                  v54 += v93;
                }
              }
              else
              {
                v91 = &v65[4 * v59];
              }
              do
              {
                v98 = *(_DWORD *)v54;
                v54 += 4;
                *(_DWORD *)v91 = v98;
                v91 += 4;
              }
              while (v91 != v89);
              goto LABEL_114;
            }
            if (!(v64 >> 62))
            {
              v65 = operator new(4 * v64);
              goto LABEL_106;
            }
LABEL_130:
            sub_239418A80();
          }
          v66 = (v55 - v60) >> 2;
          if (v66 >= v57)
          {
            v67 = &v54[4 * v57];
            v69 = v55;
          }
          else
          {
            v67 = &v54[4 * v66];
            v68 = v53 - v67;
            if (v53 != v67)
              memmove(v55, &v54[4 * v66], v53 - v67);
            v69 = &v55[v68];
            v115[16] = &v55[v68];
            if (v55 - v60 < 1)
              return 1;
          }
          v70 = &v60[4 * v57];
          v71 = v69 - v70;
          v72 = (v69 - v70) >> 2;
          v73 = &v69[-4 * v57];
          v74 = v69;
          if (v73 < v55)
          {
            v75 = (v58 & 0xFFFFFFFFFFFFFFFCLL) + v71;
            v76 = (char *)(v75 + v56);
            v77 = v75 + v56 + 4;
            if ((unint64_t)v55 > v77)
              v77 = (unint64_t)v55;
            v78 = v77 + ~v56 - v75;
            v79 = v69 - v76;
            v80 = v78 >= 0x2C && v79 > 0x1F;
            v74 = v69;
            if (!v80)
              goto LABEL_135;
            v81 = (v78 >> 2) + 1;
            v82 = 4 * (v81 & 0x7FFFFFFFFFFFFFF8);
            v73 += v82;
            v83 = v69 + 16;
            v84 = (__int128 *)(4 * v72 + 4 * v59 + v56 + 16);
            v85 = v81 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v86 = *v84;
              *(v83 - 1) = *(v84 - 1);
              *v83 = v86;
              v83 += 2;
              v84 += 2;
              v85 -= 8;
            }
            while (v85);
            v74 = &v69[v82];
            if (v81 != (v81 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_135:
              do
              {
                v87 = *(_DWORD *)v73;
                v73 += 4;
                *(_DWORD *)v74 = v87;
                v74 += 4;
              }
              while (v73 < v55);
            }
          }
          v115[16] = v74;
          if (v69 != v70)
            memmove(&v69[-4 * v72], (const void *)(v56 + ((unint64_t)&v55[-v56] & 0xFFFFFFFFFFFFFFFCLL)), v71);
          if (v67 != v54)
            memmove((void *)(v56 + ((unint64_t)&v55[-v56] & 0xFFFFFFFFFFFFFFFCLL)), v54, v67 - v54);
        }
        return 1;
      }
LABEL_128:
      sub_2394875CC();
    }
  }
  return 0;
}

void sub_239B4AFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  va_list va;

  va_start(va, a6);
  sub_2394B7358((uint64_t)va);
  *(_QWORD *)(a5 + 96) = v6;
  _Unwind_Resume(a1);
}

void sub_239B4B01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_23942A5F4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B4B050()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4B064(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6520;
  result[1] = v3;
  return result;
}

uint64_t sub_239B4B098(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6520;
  a2[1] = v2;
  return result;
}

BOOL sub_239B4B0B4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t (*v18)(uint64_t, uint64_t *, uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unsigned __int8 v24;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v5 = *a3;
  v6 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v18 = sub_239B4B2A0;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = v4;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v18 = sub_239B4B2A0;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = 0;
  }
  v24 = 0;
  v23 = v5;
  sub_239B4B508((uint64_t)&v18, (uint64_t)&v24);
  v10 = v22;
  if (v22)
  {
    v11 = (unint64_t *)&v22->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = v24;
  if (v4)
  {
    v14 = (unint64_t *)&v4->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    do
      v16 = __ldaxr(v14);
    while (__stlxr(v16 - 1, v14));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v13 != 0;
}

void sub_239B4B1F8(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;

  v3 = v2;
  if (v3)
  {
    v5 = v3;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v1)
  {
    v8 = (unint64_t *)&v1->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
    do
      v10 = __ldaxr(v8);
    while (__stlxr(v10 - 1, v8));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B4B2A0(uint64_t a1, uint64_t *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v22;
  uint64_t v23[2];
  std::__shared_weak_count *v24;
  char v25;
  _BYTE v26[24];
  _BYTE *v27;
  _QWORD v28[34];

  v28[33] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 337, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v4 = *a2;
  if (*a2)
  {
    v23[0] = a3;
    v23[1] = v4;
    v6 = (std::__shared_weak_count *)a2[1];
    v24 = v6;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
    }
    v25 = 0;
    v9 = v26;
    v10 = a4[3];
    if (v10)
    {
      if ((_QWORD *)v10 == a4)
      {
        v27 = v26;
        (*(void (**)(_QWORD *, _BYTE *))(*a4 + 24))(a4, v26);
LABEL_13:
        sub_239B4B81C((uint64_t)v28, v23);
        v13 = operator new(0x120uLL);
        v13[1] = 0;
        v13[2] = 0;
        *v13 = &off_250AFA190;
        *(_QWORD *)&v22 = sub_239B415DC((uint64_t)(v13 + 3), (uint64_t)v28);
        *((_QWORD *)&v22 + 1) = v13;
        sub_239A82E8C(v28);
        if (v27 == v26)
        {
          v14 = 4;
        }
        else
        {
          if (!v27)
            goto LABEL_18;
          v14 = 5;
          v9 = v27;
        }
        (*(void (**)(_QWORD *))(*v9 + 8 * v14))(v9);
LABEL_18:
        v15 = v24;
        if (v24)
        {
          v16 = (unint64_t *)&v24->__shared_owners_;
          do
            v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }
        v12 = sub_239B417F8(*(unsigned int **)(a1 + 288), &v22);
        v18 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
        if (*((_QWORD *)&v22 + 1))
        {
          v19 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        return v12;
      }
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
    }
    v27 = (_BYTE *)v10;
    goto LABEL_13;
  }
  LOBYTE(v28[0]) = 0;
  v11 = a4[3];
  if (!v11)
    sub_2394172E0();
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v11 + 48))(v11, v28);
  return 1;
}

void sub_239B4B4BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239A4D7C0(v1);
  _Unwind_Resume(a1);
}

void sub_239B4B4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239A4D7C0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239B4B4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  sub_239A82E8C((uint64_t *)va1);
  sub_239A83110((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239B4B508(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)());
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t (***v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unsigned int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  pthread_cond_t v28;
  pthread_cond_t v29;
  pthread_mutex_t v30;
  uint64_t (**v31)();
  __int128 v32;
  uint64_t (***v33)();
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  sub_2397A1618(&v30);
  v21 = 0x7FFFFFFF;
  pthread_cond_init(&v28, 0);
  pthread_cond_init(&v29, 0);
  *(_QWORD *)&v4 = &v21;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(uint64_t (**)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)()))a1;
  v7 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v5 >> 1));
  if ((v5 & 1) != 0)
    v6 = *(uint64_t (**)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)()))(*v7 + v6);
  *((_QWORD *)&v4 + 1) = a2;
  v8 = *(std::__shared_weak_count **)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 24);
  v20 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  v11 = *(_QWORD *)(a1 + 40);
  v31 = &off_250AF6298;
  v32 = v4;
  v33 = &v31;
  v12 = v6(v7, &v19, v11, &v31);
  v13 = v33;
  if (v33 == &v31)
  {
    v14 = 4;
    v13 = &v31;
    goto LABEL_10;
  }
  if (v33)
  {
    v14 = 5;
LABEL_10:
    (*v13)[v14]();
  }
  v15 = v20;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      if (!v12)
        return sub_2395C29C4((uint64_t)&v21);
      goto LABEL_16;
    }
  }
  if (v12)
  {
LABEL_16:
    sub_2395BFB54(&v21);
    sub_2395C2A4C((uint64_t)&v21);
  }
  return sub_2395C29C4((uint64_t)&v21);
}

void sub_239B4B6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B4B754(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_239B4B77C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B4B790(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF6298;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B4B7C8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6298;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B4B7E8(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

uint64_t sub_239B4B81C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = 1;
  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v4;
  v6 = a2[2];
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 24);
  v9 = a2[7];
  if (v9)
  {
    if ((uint64_t *)v9 == a2 + 4)
    {
      *(_QWORD *)(a1 + 104) = a1 + 80;
      (*(void (**)(uint64_t))(*(_QWORD *)a2[7] + 24))(a2[7]);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  *(_QWORD *)(a1 + 104) = v9;
LABEL_9:
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  v10 = *a2;
  *(_QWORD *)(a1 + 8) = *a2;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 112) = v10;
  return a1;
}

void sub_239B4B8E4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = *(std::__shared_weak_count **)(v1 + 64);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = *(_QWORD **)(v1 + 40);
  if (v6 == (_QWORD *)(v1 + 16))
  {
    v7 = 4;
    v6 = (_QWORD *)(v1 + 16);
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  _Unwind_Resume(exception_object);
}

void sub_239B4B95C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4B970(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF64D8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B4B9A4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF64D8;
  a2[1] = v2;
  return result;
}

void sub_239B4B9C0(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v10[4];
  char v11;
  __int128 v12;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v12 = 0uLL;
  v11 = 0;
  v10[0] = sub_239B49F7C;
  v10[1] = 0;
  v10[2] = v4;
  v10[3] = v5;
  sub_239B4A200((uint64_t)v10, (uint64_t)&v12, (uint64_t)&v11);
  if (v11)
  {
    v6 = v12;
  }
  else
  {
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
    v6 = 0uLL;
    if (*((_QWORD *)&v12 + 1))
    {
      v8 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, (__n128)0);
        std::__shared_weak_count::__release_weak(v7);
        v6 = 0uLL;
      }
    }
  }
  *a3 = v6;
}

void sub_239B4BA68(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B4BAB0()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B4BAC4(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF6490;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B4BAFC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6490;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B4BB1C(uint64_t a1, uint64_t *a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  pthread_rwlock_t *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  v4 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v5 = *(pthread_rwlock_t **)(a1 + 16);
  j__pthread_rwlock_wrlock(v5);
  v6 = sub_239B4A6D8(*(_QWORD *)(a1 + 8), v4);
  j__pthread_rwlock_unlock(v5);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v6;
}

void sub_239B4BBA8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  pthread_rwlock_t *v2;
  unint64_t *p_shared_owners;
  unint64_t v5;

  j__pthread_rwlock_unlock(v2);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239B4BC00()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4BC14(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6448;
  result[1] = v3;
  return result;
}

uint64_t sub_239B4BC48(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6448;
  a2[1] = v2;
  return result;
}

BOOL sub_239B4BC64(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t (*v18)(uint64_t, uint64_t *, uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unsigned __int8 v24;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v5 = *a3;
  v6 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v18 = sub_239B4B2A0;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = v4;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v18 = sub_239B4B2A0;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = 0;
  }
  v24 = 0;
  v23 = v5;
  sub_239B4B508((uint64_t)&v18, (uint64_t)&v24);
  v10 = v22;
  if (v22)
  {
    v11 = (unint64_t *)&v22->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = v24;
  if (v4)
  {
    v14 = (unint64_t *)&v4->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    do
      v16 = __ldaxr(v14);
    while (__stlxr(v16 - 1, v14));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v13 != 0;
}

void sub_239B4BDA8(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;

  v3 = v2;
  if (v3)
  {
    v5 = v3;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v1)
  {
    v8 = (unint64_t *)&v1->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
    do
      v10 = __ldaxr(v8);
    while (__stlxr(v10 - 1, v8));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B4BE54()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4BE68(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF63B8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B4BE9C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF63B8;
  a2[1] = v2;
  return result;
}

void sub_239B4BEB8(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  char v14;
  __int128 v15;
  unsigned int v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  pthread_cond_t v23;
  pthread_cond_t v24;
  pthread_mutex_t v25;
  uint64_t v26[3];
  uint64_t *v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v15 = 0uLL;
  v14 = 0;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  sub_2397A1618(&v25);
  v16 = 0x7FFFFFFF;
  pthread_cond_init(&v23, 0);
  pthread_cond_init(&v24, 0);
  v6 = (uint64_t *)operator new(0x20uLL);
  *v6 = (uint64_t)&off_250AF6400;
  v6[1] = (uint64_t)&v16;
  v6[2] = (uint64_t)&v15;
  v6[3] = (uint64_t)&v14;
  v27 = v6;
  v7 = sub_239B4C124(v4, v5, v26);
  v8 = v27;
  if (v27 == v26)
  {
    v9 = 4;
    v8 = v26;
  }
  else
  {
    if (!v27)
      goto LABEL_6;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_6:
  if (v7)
  {
    sub_2395BFB54(&v16);
    sub_2395C2A4C((uint64_t)&v16);
  }
  sub_2395C29C4((uint64_t)&v16);
  if (v14)
  {
    v10 = v15;
  }
  else
  {
    v11 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
    v10 = 0uLL;
    if (*((_QWORD *)&v15 + 1))
    {
      v12 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v11->__on_zero_shared)(v11, (__n128)0);
        std::__shared_weak_count::__release_weak(v11);
        v10 = 0uLL;
      }
    }
  }
  *a3 = v10;
}

void sub_239B4C080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, std::__shared_weak_count *a5, uint64_t a6, ...)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  va_list va;

  va_start(va, a6);
  v10 = *(_QWORD **)(v6 + 24);
  if (v10 == v7)
  {
    v11 = 4;
    v10 = (_QWORD *)(v8 - 104);
  }
  else
  {
    if (!v10)
      goto LABEL_6;
    v11 = 5;
  }
  (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_6:
  sub_2395C29C4((uint64_t)va);
  if (a5)
  {
    p_shared_owners = (unint64_t *)&a5->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a5->__on_zero_shared)(a5);
      std::__shared_weak_count::__release_weak(a5);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239B4C108()
{
  pthread_mutex_t *v0;

  sub_2397A163C(v0);
  JUMPOUT(0x239B4C114);
}

uint64_t sub_239B4C124(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 308, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = a2;
  v14 = a2;
  v5 = v15;
  v6 = (uint64_t *)a3[3];
  if (!v6)
  {
    v16 = 0;
    LODWORD(v17) = 0;
    v18 = a2;
LABEL_10:
    v20 = v6;
    goto LABEL_11;
  }
  if (v6 == a3)
  {
    v16 = v15;
    (*(void (**)(uint64_t *, _QWORD *))(*a3 + 24))(a3, v15);
    v3 = v14;
    v6 = v16;
  }
  else
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    v16 = v6;
  }
  LODWORD(v17) = 0;
  v18 = v3;
  if (!v6)
    goto LABEL_10;
  if (v6 != v15)
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    goto LABEL_10;
  }
  v20 = &v19;
  (*(void (**)(_QWORD *))(v15[0] + 24))(v15);
LABEL_11:
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v18 = v14;
  v21 = v14;
  v25 = 0;
  v26 = v14;
  v7 = (std::__shared_weak_count *)operator new(0x120uLL);
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA690;
  *(_QWORD *)&v13 = sub_239B407F0((uint64_t)&v7[1], (uint64_t)&v17);
  *((_QWORD *)&v13 + 1) = v7;
  sub_239A82E8C(&v17);
  if (v16 == v15)
  {
    v9 = 4;
    goto LABEL_15;
  }
  if (v16)
  {
    v9 = 5;
    v5 = v16;
LABEL_15:
    (*(void (**)(uint64_t *))(*v5 + 8 * v9))(v5);
  }
  v10 = sub_239B40A0C(*(unsigned int **)(a1 + 288), &v13);
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  return v10;
}

void sub_239B4C334(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B4C340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, char a17)
{
  _QWORD *v17;
  uint64_t v19;

  if (a16 == v17)
  {
    v19 = 4;
  }
  else
  {
    if (!a16)
      _Unwind_Resume(exception_object);
    v19 = 5;
    v17 = a16;
  }
  (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
  _Unwind_Resume(exception_object);
}

void sub_239B4C3AC()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B4C3C0(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF6400;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B4C400(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6400;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B4C428(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  char v6;
  _QWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;

  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *a3;
  v7 = *(_QWORD **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v10 = (std::__shared_weak_count *)v7[1];
  *v7 = v4;
  v7[1] = v5;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  **(_BYTE **)(a1 + 24) = v6;
  v13 = *(unsigned int **)(a1 + 8);
  v16 = 1;
  sub_2395BFE44(v13, &v16);
  if (v5)
  {
    v14 = (unint64_t *)&v5->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_239B4C508(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B4C54C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4C560(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6370;
  result[1] = v3;
  return result;
}

uint64_t sub_239B4C594(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6370;
  a2[1] = v2;
  return result;
}

void sub_239B4C5B0(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v10[4];
  char v11;
  __int128 v12;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v12 = 0uLL;
  v11 = 0;
  v10[0] = sub_239B49F7C;
  v10[1] = 0;
  v10[2] = v4;
  v10[3] = v5;
  sub_239B4A200((uint64_t)v10, (uint64_t)&v12, (uint64_t)&v11);
  if (v11)
  {
    v6 = v12;
  }
  else
  {
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
    v6 = 0uLL;
    if (*((_QWORD *)&v12 + 1))
    {
      v8 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, (__n128)0);
        std::__shared_weak_count::__release_weak(v7);
        v6 = 0uLL;
      }
    }
  }
  *a3 = v6;
}

void sub_239B4C658(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B4C6A0()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4C6B4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF62E0;
  result[1] = v3;
  return result;
}

uint64_t sub_239B4C6E8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF62E0;
  a2[1] = v2;
  return result;
}

BOOL sub_239B4C704(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  uint64_t (***v15)();
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  int v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int8 v26;
  uint64_t v27[2];
  unsigned int v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  pthread_cond_t v35;
  pthread_cond_t v36;
  pthread_mutex_t v37;
  uint64_t (**v38)();
  __int128 v39;
  uint64_t (***v40)();
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v4 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v5 = *a3;
  v6 = *(_QWORD *)(a1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = v3;
  }
  else
  {
    v10 = 0;
  }
  v26 = 0;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  sub_2397A1618(&v37);
  v28 = 0x7FFFFFFF;
  pthread_cond_init(&v35, 0);
  pthread_cond_init(&v36, 0);
  *(_QWORD *)&v11 = &v28;
  *((_QWORD *)&v11 + 1) = &v26;
  v27[0] = v4;
  v27[1] = (uint64_t)v10;
  if (v10)
  {
    v12 = (unint64_t *)&v10->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v38 = &off_250AF6328;
  v39 = v11;
  v40 = &v38;
  v14 = sub_239B4CADC(v6, v27, v5, &v38);
  v15 = v40;
  if (v40 == &v38)
  {
    v16 = 4;
    v15 = &v38;
    goto LABEL_14;
  }
  if (v40)
  {
    v16 = 5;
LABEL_14:
    (*v15)[v16]();
  }
  if (v10)
  {
    v17 = (unint64_t *)&v10->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (!v14)
        goto LABEL_21;
      goto LABEL_20;
    }
  }
  if (v14)
  {
LABEL_20:
    sub_2395BFB54(&v28);
    sub_2395C2A4C((uint64_t)&v28);
  }
LABEL_21:
  sub_2395C29C4((uint64_t)&v28);
  if (v10)
  {
    v19 = (unint64_t *)&v10->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v21 = v26;
  if (v3)
  {
    v22 = (unint64_t *)&v3->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v21 != 0;
}

void sub_239B4C9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  va_list va;

  va_start(va, a4);
  sub_2395C29C4((uint64_t)va);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    do
      v11 = __ldaxr(v9);
    while (__stlxr(v11 - 1, v9));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B4CADC(uint64_t a1, uint64_t *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v22;
  uint64_t v23[2];
  std::__shared_weak_count *v24;
  char v25;
  _BYTE v26[24];
  _BYTE *v27;
  _QWORD v28[34];

  v28[33] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 337, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v4 = *a2;
  if (*a2)
  {
    v23[0] = a3;
    v23[1] = v4;
    v6 = (std::__shared_weak_count *)a2[1];
    v24 = v6;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
    }
    v25 = 0;
    v9 = v26;
    v10 = a4[3];
    if (v10)
    {
      if ((_QWORD *)v10 == a4)
      {
        v27 = v26;
        (*(void (**)(_QWORD *, _BYTE *))(*a4 + 24))(a4, v26);
LABEL_13:
        sub_239B4CDE8((uint64_t)v28, v23);
        v13 = operator new(0x120uLL);
        v13[1] = 0;
        v13[2] = 0;
        *v13 = &off_250AFA690;
        *(_QWORD *)&v22 = sub_239B407F0((uint64_t)(v13 + 3), (uint64_t)v28);
        *((_QWORD *)&v22 + 1) = v13;
        sub_239A82E8C(v28);
        if (v27 == v26)
        {
          v14 = 4;
        }
        else
        {
          if (!v27)
            goto LABEL_18;
          v14 = 5;
          v9 = v27;
        }
        (*(void (**)(_QWORD *))(*v9 + 8 * v14))(v9);
LABEL_18:
        v15 = v24;
        if (v24)
        {
          v16 = (unint64_t *)&v24->__shared_owners_;
          do
            v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }
        v12 = sub_239B40A0C(*(unsigned int **)(a1 + 288), &v22);
        v18 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
        if (*((_QWORD *)&v22 + 1))
        {
          v19 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        return v12;
      }
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
    }
    v27 = (_BYTE *)v10;
    goto LABEL_13;
  }
  LOBYTE(v28[0]) = 0;
  v11 = a4[3];
  if (!v11)
    sub_2394172E0();
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v11 + 48))(v11, v28);
  return 1;
}

void sub_239B4CCF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239A4D7C0(v1);
  _Unwind_Resume(a1);
}

void sub_239B4CD0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239A4D7C0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239B4CD20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  sub_239A82E8C((uint64_t *)va1);
  sub_239A83110((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B4CD48()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B4CD5C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF6328;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B4CD94(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6328;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B4CDB4(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

uint64_t sub_239B4CDE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = 1;
  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v4;
  v6 = a2[2];
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 24);
  v9 = a2[7];
  if (v9)
  {
    if ((uint64_t *)v9 == a2 + 4)
    {
      *(_QWORD *)(a1 + 104) = a1 + 80;
      (*(void (**)(uint64_t))(*(_QWORD *)a2[7] + 24))(a2[7]);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  *(_QWORD *)(a1 + 104) = v9;
LABEL_9:
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  v10 = *a2;
  *(_QWORD *)(a1 + 8) = *a2;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 112) = v10;
  return a1;
}

void sub_239B4CEB0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = *(std::__shared_weak_count **)(v1 + 64);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = *(_QWORD **)(v1 + 40);
  if (v6 == (_QWORD *)(v1 + 16))
  {
    v7 = 4;
    v6 = (_QWORD *)(v1 + 16);
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  _Unwind_Resume(exception_object);
}

void sub_239B4CF28()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4CF3C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6250;
  result[1] = v3;
  return result;
}

uint64_t sub_239B4CF70(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6250;
  a2[1] = v2;
  return result;
}

BOOL sub_239B4CF8C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t (*v18)(uint64_t, uint64_t *, uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unsigned __int8 v24;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v5 = *a3;
  v6 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v18 = sub_239B4B2A0;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = v4;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v18 = sub_239B4B2A0;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = 0;
  }
  v24 = 0;
  v23 = v5;
  sub_239B4B508((uint64_t)&v18, (uint64_t)&v24);
  v10 = v22;
  if (v22)
  {
    v11 = (unint64_t *)&v22->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = v24;
  if (v4)
  {
    v14 = (unint64_t *)&v4->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    do
      v16 = __ldaxr(v14);
    while (__stlxr(v16 - 1, v14));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v13 != 0;
}

void sub_239B4D0D0(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;

  v3 = v2;
  if (v3)
  {
    v5 = v3;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v1)
  {
    v8 = (unint64_t *)&v1->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
    do
      v10 = __ldaxr(v8);
    while (__stlxr(v10 - 1, v8));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B4D178(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF6208;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B4D1DC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF6208;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4D250(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF6208;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B4D2A0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF6208;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B4D2D0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B4D328(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B4D380(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *a2;
    v11 = 0uLL;
    v10 = 0;
    v9[0] = sub_239B4D474;
    v9[1] = 0;
    v9[2] = v4;
    v9[3] = v5;
    sub_239B4D6F8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
    if (v10)
    {
      *(_OWORD *)a3 = v11;
    }
    else
    {
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
      if (*((_QWORD *)&v11 + 1))
      {
        v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
        do
          v8 = __ldaxr(v7);
        while (__stlxr(v8 - 1, v7));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
    }
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
  }
}

void sub_239B4D430(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B4D474(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 308, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = a2;
  v14 = a2;
  v5 = v15;
  v6 = (uint64_t *)a3[3];
  if (!v6)
  {
    v16 = 0;
    LODWORD(v17) = 0;
    v18 = a2;
LABEL_10:
    v20 = v6;
    goto LABEL_11;
  }
  if (v6 == a3)
  {
    v16 = v15;
    (*(void (**)(uint64_t *, _QWORD *))(*a3 + 24))(a3, v15);
    v3 = v14;
    v6 = v16;
  }
  else
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    v16 = v6;
  }
  LODWORD(v17) = 0;
  v18 = v3;
  if (!v6)
    goto LABEL_10;
  if (v6 != v15)
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    goto LABEL_10;
  }
  v20 = &v19;
  (*(void (**)(_QWORD *))(v15[0] + 24))(v15);
LABEL_11:
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v18 = v14;
  v21 = v14;
  v25 = 0;
  v26 = v14;
  v7 = (std::__shared_weak_count *)operator new(0x120uLL);
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF85E0;
  *(_QWORD *)&v13 = sub_239B0CB10((uint64_t)&v7[1], (uint64_t)&v17);
  *((_QWORD *)&v13 + 1) = v7;
  sub_239A82E8C(&v17);
  if (v16 == v15)
  {
    v9 = 4;
    goto LABEL_15;
  }
  if (v16)
  {
    v9 = 5;
    v5 = v16;
LABEL_15:
    (*(void (**)(uint64_t *))(*v5 + 8 * v9))(v5);
  }
  v10 = sub_239B09F38(*(unsigned int **)(a1 + 288), &v13);
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  return v10;
}

void sub_239B4D684(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B4D690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, char a17)
{
  _QWORD *v17;
  uint64_t v19;

  if (a16 == v17)
  {
    v19 = 4;
  }
  else
  {
    if (!a16)
      _Unwind_Resume(exception_object);
    v19 = 5;
    v17 = a16;
  }
  (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B4D6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, uint64_t, _BYTE *);
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  pthread_cond_t v22;
  pthread_cond_t v23;
  pthread_mutex_t v24;
  _BYTE v25[24];
  _BYTE *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  sub_2397A1618(&v24);
  v15 = 0x7FFFFFFF;
  pthread_cond_init(&v22, 0);
  pthread_cond_init(&v23, 0);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(uint64_t (**)(_QWORD *, uint64_t, _BYTE *))a1;
  v8 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v6 >> 1));
  if ((v6 & 1) != 0)
    v7 = *(uint64_t (**)(_QWORD *, uint64_t, _BYTE *))(*v8 + v7);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = operator new(0x20uLL);
  *v10 = &off_250AF9AF8;
  v10[1] = &v15;
  v10[2] = a2;
  v10[3] = a3;
  v26 = v10;
  v11 = v7(v8, v9, v25);
  v12 = v26;
  if (v26 == v25)
  {
    v13 = 4;
    v12 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_8;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_8:
  if (v11)
  {
    sub_2395BFB54(&v15);
    sub_2395C2A4C((uint64_t)&v15);
  }
  return sub_2395C29C4((uint64_t)&v15);
}

void sub_239B4D874(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  va_list va;

  va_start(va, a2);
  v5 = *(_QWORD **)(v3 - 80);
  if (v5 == v2)
  {
    v6 = 4;
    v5 = (_QWORD *)(v3 - 104);
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B4D8C4()
{
  pthread_mutex_t *v0;

  sub_2397A163C(v0);
  JUMPOUT(0x239B4D8D0);
}

void sub_239B4D8E4()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B4D8F8(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF9AF8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B4D938(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF9AF8;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B4D960(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  char v6;
  _QWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;

  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *a3;
  v7 = *(_QWORD **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v10 = (std::__shared_weak_count *)v7[1];
  *v7 = v4;
  v7[1] = v5;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  **(_BYTE **)(a1 + 24) = v6;
  v13 = *(unsigned int **)(a1 + 8);
  v16 = 1;
  sub_2395BFE44(v13, &v16);
  if (v5)
  {
    v14 = (unint64_t *)&v5->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_239B4DA40(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B4DA80(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF61C0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B4DAE4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF61C0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4DB58(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF61C0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B4DBA8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF61C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B4DBD8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B4DC30(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B4DC88(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4DD70;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4DFF4((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B4DD2C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B4DD70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 308, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = a2;
  v14 = a2;
  v5 = v15;
  v6 = (uint64_t *)a3[3];
  if (!v6)
  {
    v16 = 0;
    LODWORD(v17) = 0;
    v18 = a2;
LABEL_10:
    v20 = v6;
    goto LABEL_11;
  }
  if (v6 == a3)
  {
    v16 = v15;
    (*(void (**)(uint64_t *, _QWORD *))(*a3 + 24))(a3, v15);
    v3 = v14;
    v6 = v16;
  }
  else
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    v16 = v6;
  }
  LODWORD(v17) = 0;
  v18 = v3;
  if (!v6)
    goto LABEL_10;
  if (v6 != v15)
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    goto LABEL_10;
  }
  v20 = &v19;
  (*(void (**)(_QWORD *))(v15[0] + 24))(v15);
LABEL_11:
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v18 = v14;
  v21 = v14;
  v25 = 0;
  v26 = v14;
  v7 = (std::__shared_weak_count *)operator new(0x120uLL);
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8128;
  *(_QWORD *)&v13 = sub_239A82C70((uint64_t)&v7[1], (uint64_t)&v17);
  *((_QWORD *)&v13 + 1) = v7;
  sub_239A82E8C(&v17);
  if (v16 == v15)
  {
    v9 = 4;
    goto LABEL_15;
  }
  if (v16)
  {
    v9 = 5;
    v5 = v16;
LABEL_15:
    (*(void (**)(uint64_t *))(*v5 + 8 * v9))(v5);
  }
  v10 = sub_239A7FF28(*(unsigned int **)(a1 + 288), &v13);
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  return v10;
}

void sub_239B4DF80(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B4DF8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, char a17)
{
  _QWORD *v17;
  uint64_t v19;

  if (a16 == v17)
  {
    v19 = 4;
  }
  else
  {
    if (!a16)
      _Unwind_Resume(exception_object);
    v19 = 5;
    v17 = a16;
  }
  (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B4DFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, uint64_t, _BYTE *);
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  pthread_cond_t v22;
  pthread_cond_t v23;
  pthread_mutex_t v24;
  _BYTE v25[24];
  _BYTE *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  sub_2397A1618(&v24);
  v15 = 0x7FFFFFFF;
  pthread_cond_init(&v22, 0);
  pthread_cond_init(&v23, 0);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(uint64_t (**)(_QWORD *, uint64_t, _BYTE *))a1;
  v8 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v6 >> 1));
  if ((v6 & 1) != 0)
    v7 = *(uint64_t (**)(_QWORD *, uint64_t, _BYTE *))(*v8 + v7);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = operator new(0x20uLL);
  *v10 = &off_250AF7940;
  v10[1] = &v15;
  v10[2] = a2;
  v10[3] = a3;
  v26 = v10;
  v11 = v7(v8, v9, v25);
  v12 = v26;
  if (v26 == v25)
  {
    v13 = 4;
    v12 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_8;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_8:
  if (v11)
  {
    sub_2395BFB54(&v15);
    sub_2395C2A4C((uint64_t)&v15);
  }
  return sub_2395C29C4((uint64_t)&v15);
}

void sub_239B4E170(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  va_list va;

  va_start(va, a2);
  v5 = *(_QWORD **)(v3 - 80);
  if (v5 == v2)
  {
    v6 = 4;
    v5 = (_QWORD *)(v3 - 104);
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B4E1C0()
{
  pthread_mutex_t *v0;

  sub_2397A163C(v0);
  JUMPOUT(0x239B4E1CCLL);
}

void sub_239B4E1E0()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B4E1F4(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF7940;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B4E234(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF7940;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B4E25C(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  char v6;
  _QWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;

  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *a3;
  v7 = *(_QWORD **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v10 = (std::__shared_weak_count *)v7[1];
  *v7 = v4;
  v7[1] = v5;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  **(_BYTE **)(a1 + 24) = v6;
  v13 = *(unsigned int **)(a1 + 8);
  v16 = 1;
  sub_2395BFE44(v13, &v16);
  if (v5)
  {
    v14 = (unint64_t *)&v5->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_239B4E33C(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B4E37C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF6178;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_239B4E408(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF6178;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4E4A4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AF6178;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
  {
    if (v5 == a1 + 40)
    {
      v2[8] = v2 + 5;
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
      return v2;
    }
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  }
  v2[8] = v5;
  return v2;
}

void sub_239B4E560(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
LABEL_6:
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B4E5AC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AF6178;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_239B4E67C(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B4E6B8(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = (_QWORD *)a1[4];
  if (result == v2)
  {
    v7 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239B4E73C(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

void sub_239B4E7BC(uint64_t a1, float *a2)
{
  float v2;
  void *__p;
  char v4;

  v2 = *a2;
  v4 = 0;
  LOBYTE(__p) = 0;
  sub_2396FD7C8(a1 + 8, (uint64_t)&__p, v2);
  if (v4 < 0)
    operator delete(__p);
}

void sub_239B4E804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239B4E824()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4E838(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6130;
  result[1] = v3;
  return result;
}

uint64_t sub_239B4E86C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6130;
  a2[1] = v2;
  return result;
}

uint64_t sub_239B4E888(uint64_t a1)
{
  unsigned int *v1;
  char v3;

  v1 = *(unsigned int **)(a1 + 8);
  v3 = 1;
  return sub_2395BFE44(v1, &v3);
}

void sub_239B4E8B8()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B4E8CC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF60E8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B4E900(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF60E8;
  a2[1] = v2;
  return result;
}

uint64_t sub_239B4E91C(uint64_t a1)
{
  unsigned int *v1;
  char v3;

  v1 = *(unsigned int **)(a1 + 8);
  v3 = 1;
  return sub_2395BFE44(v1, &v3);
}

void sub_239B4E94C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B4E960(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF60A0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B4E9A0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF60A0;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B4E9C8(uint64_t a1)
{
  uint64_t v2;
  std::chrono::system_clock::time_point v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  rusage v8;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v11;

  v2 = *(_QWORD *)(a1 + 8);
  v3.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)(v2 + 264) = v3;
  *(double *)(v2 + 272) = (double)(v3.__d_.__rep_ - *(_QWORD *)(v2 + 256)) / 1000000.0;
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(v2 + 288) = (float)((float)v11 * 0.00097656) * 0.00097656;
  *(_BYTE *)(v2 + 320) = 0;
  getrusage(0, &v8);
  *(float *)(v2 + 280) = (float)((float)v8.ru_maxrss * 0.00097656) * 0.00097656;
  v4 = *(uint64_t **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = v5 + 112;
  if (*(_BYTE *)(v5 + 976))
    return sub_239B42008(v6, v4);
  result = sub_239A6064C(v6, v4);
  *(_BYTE *)(v5 + 976) = 1;
  return result;
}

uint64_t sub_239B4EAB8(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  BOOL v3;
  uint64_t v5;
  task_name_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  integer_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  integer_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  kern_return_t v39;
  unint64_t v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  unint64_t v44;
  unsigned int v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  float v63;
  int v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *p_shared_owners;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  mach_msg_type_number_t *v86;
  uint64_t v87;
  integer_t *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  int v99;
  void *__p[2];
  uint64_t v101;
  void *v102[2];
  uint64_t v103;
  _QWORD v104[3];
  int v105;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  void *v111;
  void *v112;
  uint64_t v113;
  char v114;
  mach_msg_type_number_t v115;
  _QWORD v116[3];
  _QWORD *v117;
  _BYTE v118[24];
  _BYTE *v119;
  _QWORD v120[3];
  _QWORD *v121;
  _QWORD v122[3];
  _QWORD *v123;
  _QWORD v124[3];
  _QWORD *v125;
  _QWORD v126[3];
  _QWORD *v127;
  integer_t task_info_out[2];
  uint64_t v129;
  uint64_t v130;
  integer_t *v131;
  unint64_t v132;
  char v133;
  _QWORD v134[3];
  _QWORD *v135;
  _QWORD v136[3];
  _QWORD *v137;
  _BYTE v138[24];
  _BYTE *v139;
  _BYTE v140[24];
  _BYTE *v141;
  mach_msg_type_number_t task_info_outCnt[4];
  uint64_t *v143;
  mach_msg_type_number_t *v144;
  _BYTE v145[24];
  _BYTE *v146;
  _QWORD v147[3];
  integer_t *v148;
  _QWORD v149[3];
  _QWORD *v150;
  _QWORD v151[3];
  _QWORD *v152;
  _QWORD v153[3];
  _QWORD *v154;
  _BYTE v155[24];
  _BYTE *v156;
  uint64_t v157;

  v157 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 40))
    v3 = *(_QWORD *)(a1 + 24) == 0;
  else
    v3 = 1;
  if (v3 || a2[2] == 0)
    return 3;
  memset(v104, 0, sizeof(v104));
  v105 = 1065353216;
  v112 = 0;
  v113 = 0;
  v111 = 0;
  v108 = 0;
  v109 = 0;
  v107 = 0;
  v110 = 0;
  v114 = 1;
  rep = std::chrono::system_clock::now().__d_.__rep_;
  task_info_outCnt[0] = 93;
  v9 = (task_name_t *)MEMORY[0x24BDAEC58];
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, task_info_outCnt))
    *((float *)&v109 + 1) = (float)((float)v132 * 0.00097656) * 0.00097656;
  v114 = 1;
  rep = std::chrono::system_clock::now().__d_.__rep_;
  task_info_outCnt[0] = 93;
  if (!task_info(*v9, 0x16u, task_info_out, task_info_outCnt))
    *((float *)&v109 + 1) = (float)((float)v132 * 0.00097656) * 0.00097656;
  v114 = 1;
  v10 = operator new(0x20uLL);
  *v10 = &off_250AF65F8;
  v10[1] = v104;
  v10[2] = a2;
  v156 = v10;
  v11 = a2[2];
  *(_QWORD *)task_info_out = sub_239A9C608;
  v129 = 0;
  v130 = v11;
  sub_239A9C8F0((uint64_t)task_info_out);
  v12 = a2[4];
  if (v12)
  {
    *(_QWORD *)task_info_out = sub_239B101B8;
    v129 = 0;
    v130 = v12;
    sub_239B104A0((uint64_t)task_info_out);
  }
  v14 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  if (v13)
  {
    v15 = (unint64_t *)(v13 + 8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
  }
  v153[0] = &off_250AF66D0;
  v153[1] = v14;
  v153[2] = v13;
  v154 = v153;
  v18 = a2[2];
  v17 = a2[3];
  if (v17)
  {
    v19 = (unint64_t *)(v17 + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v151[0] = &off_250AF6718;
  v151[1] = v18;
  v151[2] = v17;
  v152 = v151;
  v21 = a2[4];
  v150 = 0;
  v148 = 0;
  if (!v21)
    goto LABEL_43;
  v22 = *(_QWORD *)(a1 + 56);
  if (!v22)
  {
    sub_239A444D4((uint64_t)"unknown file", 72, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v23 = *(_QWORD *)(a1 + 64);
  if (v23)
  {
    v24 = (unint64_t *)(v23 + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)task_info_out = &off_250AF67A8;
  v129 = v22;
  v130 = v23;
  v131 = task_info_out;
  sub_23948AB98(task_info_out, v149);
  v26 = v131;
  if (v131 == task_info_out)
  {
    v27 = 4;
    v26 = task_info_out;
    goto LABEL_31;
  }
  if (v131)
  {
    v27 = 5;
LABEL_31:
    (*(void (**)(void))(*(_QWORD *)v26 + 8 * v27))();
  }
  v29 = a2[4];
  v28 = a2[5];
  if (v28)
  {
    v30 = (unint64_t *)(v28 + 8);
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  *(_QWORD *)task_info_out = &off_250AF67F0;
  v129 = v29;
  v130 = v28;
  v131 = task_info_out;
  if (v148 == (integer_t *)v147)
  {
    sub_239B55164((uint64_t)task_info_out, task_info_outCnt);
    (*(void (**)(integer_t *))(*(_QWORD *)v131 + 32))(v131);
    v131 = 0;
    (*(void (**)(integer_t *, integer_t *))(*(_QWORD *)v148 + 24))(v148, task_info_out);
    (*(void (**)(integer_t *))(*(_QWORD *)v148 + 32))(v148);
    v148 = 0;
    v131 = task_info_out;
    (*(void (**)(mach_msg_type_number_t *, _QWORD *))(*(_QWORD *)task_info_outCnt + 24))(task_info_outCnt, v147);
    (*(void (**)(mach_msg_type_number_t *))(*(_QWORD *)task_info_outCnt + 32))(task_info_outCnt);
    v148 = (integer_t *)v147;
    v32 = v131;
  }
  else
  {
    sub_239B55164((uint64_t)task_info_out, v147);
    (*(void (**)(integer_t *))(*(_QWORD *)v131 + 32))(v131);
    v32 = v148;
    v131 = v148;
    v148 = (integer_t *)v147;
  }
  if (v32 == task_info_out)
  {
    v33 = 4;
    v32 = task_info_out;
  }
  else
  {
    if (!v32)
      goto LABEL_43;
    v33 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v32 + 8 * v33))();
LABEL_43:
  v102[0] = 0;
  v102[1] = 0;
  v103 = 0;
  __p[0] = 0;
  __p[1] = 0;
  v101 = 0;
  v34 = *(_QWORD *)(a1 + 16);
  v35 = sub_239A4F8F4((uint64_t)task_info_outCnt, *(_QWORD *)(a1 + 24) + 72);
  v36 = v143;
  if (v143)
  {
    v37 = 0;
    do
    {
      if (v37 <= (*((_DWORD *)v36 + 57) * *((_DWORD *)v36 + 56)))
        v37 = (*((_DWORD *)v36 + 57) * *((_DWORD *)v36 + 56));
      v36 = (uint64_t *)*v36;
    }
    while (v36);
  }
  else
  {
    v37 = 0;
  }
  v38 = MEMORY[0x23B83EE44](v35);
  v115 = 93;
  v39 = task_info(*v9, 0x16u, task_info_out, &v115);
  v40 = v132 + v38;
  if (v39)
    v40 = 0;
  v41 = (v40 >> 1) + 0x40000000;
  v42 = v40 >= v41;
  v43 = v40 - v41;
  if (!v42)
    v43 = 0;
  v44 = v43 / (12 * v37);
  if (v34 < v44)
    v44 = v34;
  if (v44 <= 1)
    v45 = 1;
  else
    v45 = v44;
  sub_239A4E2B0((uint64_t)task_info_outCnt);
  sub_2396FDAA8(a3, (uint64_t)v140);
  v46 = a3[3];
  if (!v46)
    goto LABEL_62;
  if ((_QWORD *)v46 != a3)
  {
    v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v46 + 16))(v46);
LABEL_62:
    v135 = (_QWORD *)v46;
    goto LABEL_64;
  }
  v135 = v134;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v134);
LABEL_64:
  v47 = v136;
  v48 = a3[7];
  if (!v48)
  {
LABEL_67:
    v137 = (_QWORD *)v48;
    goto LABEL_69;
  }
  if ((_QWORD *)v48 != a3 + 4)
  {
    v48 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v48 + 16))(v48);
    goto LABEL_67;
  }
  v137 = v136;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v48 + 24))(v48, v136);
LABEL_69:
  v139 = 0;
  v49 = operator new(0x48uLL);
  v50 = v49;
  *v49 = &off_250AF6838;
  if (v135)
  {
    if (v135 == v134)
    {
      v49[4] = v49 + 1;
      (*(void (**)(_QWORD *))(v134[0] + 24))(v134);
    }
    else
    {
      v49[4] = v135;
      v135 = 0;
    }
  }
  else
  {
    v49[4] = 0;
  }
  if (v137)
  {
    if (v137 == v136)
    {
      v50[8] = v50 + 5;
      (*(void (**)(_QWORD *))(v136[0] + 24))(v136);
    }
    else
    {
      v50[8] = v137;
      v137 = 0;
    }
  }
  else
  {
    v50[8] = 0;
  }
  v139 = v50;
  sub_2396FD600((uint64_t)task_info_outCnt, (uint64_t)v140, (uint64_t)v138);
  v51 = v139;
  if (v139 == v138)
  {
    v52 = 4;
    v51 = v138;
  }
  else
  {
    if (!v139)
      goto LABEL_84;
    v52 = 5;
  }
  (*(void (**)(void))(*v51 + 8 * v52))();
LABEL_84:
  if (v137 == v136)
  {
    v53 = 4;
  }
  else
  {
    if (!v137)
      goto LABEL_89;
    v53 = 5;
    v47 = v137;
  }
  (*(void (**)(_QWORD *))(*v47 + 8 * v53))(v47);
LABEL_89:
  v54 = v135;
  if (v135 == v134)
  {
    v55 = 4;
    v54 = v134;
  }
  else
  {
    if (!v135)
      goto LABEL_94;
    v55 = 5;
  }
  (*(void (**)(void))(*v54 + 8 * v55))();
LABEL_94:
  v56 = v141;
  if (v141 == v140)
  {
    v57 = 4;
    v56 = v140;
  }
  else
  {
    if (!v141)
      goto LABEL_99;
    v57 = 5;
  }
  (*(void (**)(void))(*v56 + 8 * v57))();
LABEL_99:
  v58 = *(_QWORD *)(a1 + 24);
  v59 = (uint64_t)v154;
  if (!v154)
  {
LABEL_102:
    v127 = (_QWORD *)v59;
    goto LABEL_104;
  }
  if (v154 != v153)
  {
    v59 = (*(uint64_t (**)(_QWORD *))(*v154 + 16))(v154);
    goto LABEL_102;
  }
  v127 = v126;
  (*(void (**)(_QWORD *, _QWORD *))(v153[0] + 24))(v153, v126);
LABEL_104:
  v60 = (uint64_t)v152;
  if (!v152)
  {
LABEL_107:
    v125 = (_QWORD *)v60;
    goto LABEL_109;
  }
  if (v152 != v151)
  {
    v60 = (*(uint64_t (**)(_QWORD *))(*v152 + 16))(v152);
    goto LABEL_107;
  }
  v125 = v124;
  (*(void (**)(_QWORD *, _QWORD *))(v151[0] + 24))(v151, v124);
LABEL_109:
  v61 = (uint64_t)v150;
  if (!v150)
  {
LABEL_112:
    v123 = (_QWORD *)v61;
    goto LABEL_114;
  }
  if (v150 != v149)
  {
    v61 = (*(uint64_t (**)(_QWORD *))(*v150 + 16))(v150);
    goto LABEL_112;
  }
  v123 = v122;
  (*(void (**)(_QWORD *, _QWORD *))(v149[0] + 24))(v149, v122);
LABEL_114:
  v62 = (uint64_t)v148;
  if (!v148)
  {
LABEL_117:
    v121 = (_QWORD *)v62;
    goto LABEL_119;
  }
  if (v148 != (integer_t *)v147)
  {
    v62 = (*(uint64_t (**)(void))(*(_QWORD *)v148 + 16))();
    goto LABEL_117;
  }
  v121 = v120;
  (*(void (**)(_QWORD *, _QWORD *))(v147[0] + 24))(v147, v120);
LABEL_119:
  v63 = *(float *)a1;
  v64 = *(unsigned __int8 *)(a1 + 8);
  v65 = (uint64_t)v144;
  if (!v144)
  {
LABEL_122:
    v117 = (_QWORD *)v65;
    goto LABEL_124;
  }
  if (v144 != task_info_outCnt)
  {
    v65 = (*(uint64_t (**)(void))(*(_QWORD *)v144 + 16))();
    goto LABEL_122;
  }
  v117 = v116;
  (*(void (**)(mach_msg_type_number_t *, _QWORD *))(*(_QWORD *)task_info_outCnt + 24))(task_info_outCnt, v116);
LABEL_124:
  v66 = v118;
  v67 = (uint64_t)v146;
  if (!v146)
  {
LABEL_127:
    v119 = (_BYTE *)v67;
    goto LABEL_129;
  }
  if (v146 != v145)
  {
    v67 = (*(uint64_t (**)(void))(*(_QWORD *)v146 + 16))();
    goto LABEL_127;
  }
  v119 = v118;
  (*(void (**)(void))(*(_QWORD *)v146 + 24))();
LABEL_129:
  sub_239B4FA28(task_info_out, v58, v126, v124, v122, v120, (uint64_t)v102, (uint64_t)__p, v63, v64 != 0, v99, v45, v116, (uint64_t)v104, 1);
  if (v119 == v118)
  {
    v68 = 4;
  }
  else
  {
    if (!v119)
      goto LABEL_134;
    v68 = 5;
    v66 = v119;
  }
  (*(void (**)(_QWORD *))(*v66 + 8 * v68))(v66);
LABEL_134:
  v69 = v117;
  if (v117 == v116)
  {
    v70 = 4;
    v69 = v116;
  }
  else
  {
    if (!v117)
      goto LABEL_139;
    v70 = 5;
  }
  (*(void (**)(void))(*v69 + 8 * v70))();
LABEL_139:
  v71 = v121;
  if (v121 == v120)
  {
    v72 = 4;
    v71 = v120;
  }
  else
  {
    if (!v121)
      goto LABEL_144;
    v72 = 5;
  }
  (*(void (**)(void))(*v71 + 8 * v72))();
LABEL_144:
  v73 = v123;
  if (v123 == v122)
  {
    v74 = 4;
    v73 = v122;
  }
  else
  {
    if (!v123)
      goto LABEL_149;
    v74 = 5;
  }
  (*(void (**)(void))(*v73 + 8 * v74))();
LABEL_149:
  v75 = v125;
  if (v125 == v124)
  {
    v76 = 4;
    v75 = v124;
  }
  else
  {
    if (!v125)
      goto LABEL_154;
    v76 = 5;
  }
  (*(void (**)(void))(*v75 + 8 * v76))();
LABEL_154:
  v77 = v127;
  if (v127 == v126)
  {
    v78 = 4;
    v77 = v126;
  }
  else
  {
    if (!v127)
      goto LABEL_159;
    v78 = 5;
  }
  (*(void (**)(void))(*v77 + 8 * v78))();
LABEL_159:
  if (v133)
  {
    v79 = operator new(0x3C0uLL);
    v79[1] = 0;
    v79[2] = 0;
    *v79 = &off_250B01B38;
    v80 = sub_239B51FBC((uint64_t)(v79 + 3), (uint64_t)task_info_out);
    v81 = (std::__shared_weak_count *)a2[1];
    *a2 = v80;
    a2[1] = (uint64_t)v79;
    if (v81)
    {
      p_shared_owners = (unint64_t *)&v81->__shared_owners_;
      do
        v83 = __ldaxr(p_shared_owners);
      while (__stlxr(v83 - 1, p_shared_owners));
      if (!v83)
      {
        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
        std::__shared_weak_count::__release_weak(v81);
      }
    }
    if (v133)
      sub_239A4D648((uint64_t)task_info_out);
    v5 = 0;
  }
  else
  {
    v5 = 2;
  }
  v84 = v146;
  if (v146 == v145)
  {
    v85 = 4;
    v84 = v145;
  }
  else
  {
    if (!v146)
      goto LABEL_174;
    v85 = 5;
  }
  (*(void (**)(void))(*v84 + 8 * v85))();
LABEL_174:
  v86 = v144;
  if (v144 == task_info_outCnt)
  {
    v87 = 4;
    v86 = task_info_outCnt;
  }
  else
  {
    if (!v144)
      goto LABEL_179;
    v87 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v86 + 8 * v87))();
LABEL_179:
  if (SHIBYTE(v101) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v103) & 0x80000000) == 0)
      goto LABEL_181;
  }
  else if ((SHIBYTE(v103) & 0x80000000) == 0)
  {
    goto LABEL_181;
  }
  operator delete(v102[0]);
LABEL_181:
  v88 = v148;
  if (v148 == (integer_t *)v147)
  {
    v89 = 4;
    v88 = (integer_t *)v147;
  }
  else
  {
    if (!v148)
      goto LABEL_188;
    v89 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v88 + 8 * v89))();
LABEL_188:
  v90 = v150;
  if (v150 == v149)
  {
    v91 = 4;
    v90 = v149;
  }
  else
  {
    if (!v150)
      goto LABEL_193;
    v91 = 5;
  }
  (*(void (**)(void))(*v90 + 8 * v91))();
LABEL_193:
  v92 = v152;
  if (v152 == v151)
  {
    v93 = 4;
    v92 = v151;
  }
  else
  {
    if (!v152)
      goto LABEL_198;
    v93 = 5;
  }
  (*(void (**)(void))(*v92 + 8 * v93))();
LABEL_198:
  v94 = v154;
  if (v154 == v153)
  {
    v95 = 4;
    v94 = v153;
  }
  else
  {
    if (!v154)
      goto LABEL_203;
    v95 = 5;
  }
  (*(void (**)(void))(*v94 + 8 * v95))();
LABEL_203:
  if (!v156)
    sub_2394172E0();
  (*(void (**)(_BYTE *))(*(_QWORD *)v156 + 48))(v156);
  v96 = v156;
  if (v156 == v155)
  {
    v97 = 4;
    v96 = v155;
  }
  else
  {
    if (!v156)
      goto LABEL_209;
    v97 = 5;
  }
  (*(void (**)(void))(*v96 + 8 * v97))();
LABEL_209:
  if (v111)
  {
    v112 = v111;
    operator delete(v111);
  }
  return v5;
}

void sub_239B4F6A4(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_239B4FA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_239A4E2B0((uint64_t)&STACK[0x5B8]);
  if (a19 < 0)
    JUMPOUT(0x239B4F99CLL);
  JUMPOUT(0x239B4F844);
}

uint64_t sub_239B4FA28(_BYTE *a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, uint64_t a7, uint64_t a8, float a9, char a10, int a11, unsigned int a12, _QWORD *a13, uint64_t a14, char a15)
{
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int32 v31;
  double *i;
  float v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  _QWORD *v39;
  void **v40;
  uint64_t v41;
  _QWORD *v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t prime;
  _QWORD *v49;
  _QWORD *v50;
  char *v51;
  char *v52;
  void *v53;
  void *v54;
  unint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  void *v58;
  BOOL v59;
  void *v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint8x8_t v64;
  uint64_t v65;
  _QWORD *v66;
  void *v67;
  _QWORD *v68;
  void **v69;
  uint64_t v70;
  _QWORD *v71;
  void **v72;
  uint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  __int128 v79;
  __int128 v80;
  _QWORD *v81;
  uint64_t v82;
  _BOOL4 v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  std::__shared_weak_count *v90;
  unint64_t *p_shared_owners;
  unint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  char *v100;
  _BYTE *v101;
  _QWORD *v102;
  uint64_t v103;
  char *v104;
  _BYTE *v105;
  _QWORD *v106;
  __int128 *p_dst;
  uint64_t v108;
  int v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  pthread_mutex_t *v119;
  uint64_t v120;
  char *v121;
  __int128 v122;
  __int128 v123;
  _QWORD *v124;
  uint64_t v125;
  std::__shared_weak_count *v126;
  unint64_t *v127;
  unint64_t v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  char *v142;
  _BYTE *v143;
  pthread_mutex_t *v144;
  uint64_t v145;
  char *v146;
  _BYTE *v147;
  _QWORD *v148;
  __int128 *v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  _BOOL4 v159;
  uint64_t *v160;
  uint64_t *v161;
  __int128 v162;
  __int128 v163;
  uint64_t v164;
  _OWORD *v165;
  uint64_t *v166;
  _OWORD *v167;
  std::bad_alloc *v168;
  std::bad_alloc *v169;
  uint64_t v170;
  unint64_t *sig;
  unint64_t *v172;
  void *v173;
  void **v174;
  __int128 v175;
  std::__fs::filesystem::path::__string_view v176;
  void *v177;
  std::basic_string_view<_CharT, _Traits>::size_type v178;
  std::basic_string_view<_CharT, _Traits>::size_type v179;
  void *v180;
  char *v181;
  uint64_t v182;
  void **v183;
  void **v184;
  _DWORD *v185;
  unint64_t v186;
  std::string *v187;
  std::__fs::filesystem::path *v188;
  std::string *v189;
  uint64_t v190;
  unint64_t *v191;
  unint64_t *v192;
  unint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  unsigned int v199;
  _BYTE *v200;
  _BYTE *v201;
  void **v202;
  void **v203;
  uint64_t v204;
  _QWORD *v205;
  void *v206;
  void *v207;
  int v208;
  _BOOL4 v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  double *v213;
  uint64_t v214;
  _QWORD *v215;
  _QWORD *v216;
  _QWORD *v217;
  void *v218;
  _QWORD *v219;
  uint64_t v220;
  _QWORD *v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  __n128 v227;
  _QWORD *v228;
  _QWORD *v229;
  void *v230;
  _QWORD *v231;
  _QWORD *v232;
  void *v233;
  _QWORD *v234;
  uint64_t v235;
  _QWORD *v236;
  uint64_t v237;
  std::__shared_weak_count *v238;
  unint64_t *v239;
  unint64_t v240;
  std::__shared_weak_count *v241;
  unint64_t *v242;
  unint64_t v243;
  std::bad_alloc *exception;
  std::bad_alloc *v246;
  uint64_t v247;
  uint64_t v248;
  _BOOL4 v249;
  uint64_t *v252[4];
  __int128 v253;
  std::__shared_weak_count *v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  std::__shared_weak_count *v258;
  __int128 v259;
  __int128 v260;
  int v261;
  void *v262[2];
  void *v263[2];
  int v264;
  void *v265[2];
  void *v266[2];
  int v267;
  uint64_t v268;
  std::__shared_weak_count *v269;
  std::__shared_weak_count *v270;
  void *v271;
  _BYTE *v272;
  uint64_t v273;
  void *v274[2];
  __int128 v275;
  uint64_t v276;
  uint64_t v277;
  void *v278;
  uint64_t v279;
  double *v280;
  uint64_t v281;
  _QWORD v282[5];
  _QWORD v283[37];
  uint64_t v284;
  uint64_t v285;
  void *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  void *v290;
  char *v291;
  __int128 __p;
  float v293;
  char v294;
  float v295;
  unsigned __int8 v296;
  void *v297;
  _BYTE *v298;
  uint64_t v299;
  __int128 __dst;
  __int128 __dst_16;
  __int128 v302;
  int v303;
  _BYTE v304[24];
  _BYTE *v305;
  _QWORD v306[3];
  _QWORD *v307;
  _BYTE v308[24];
  _BYTE *v309;
  _BYTE v310[24];
  _BYTE *v311;
  _BYTE v312[24];
  _BYTE *v313;
  _BYTE v314[24];
  _BYTE *v315;
  _BYTE v316[24];
  _BYTE *v317;
  _QWORD v318[3];
  _QWORD *v319;
  _BYTE v320[24];
  _BYTE *v321;
  _QWORD v322[3];
  _QWORD *v323;
  _BYTE v324[24];
  _BYTE *v325;
  _BYTE v326[24];
  _BYTE *v327;
  _BYTE v328[24];
  _BYTE *v329;
  _BYTE v330[24];
  _BYTE *v331;
  _BYTE v332[24];
  _BYTE *v333;
  float32x2_t v334[28];
  _QWORD v335[3];
  _QWORD *v336;
  _QWORD v337[3];
  _QWORD *v338;
  _QWORD v339[3];
  _QWORD *v340;
  _QWORD v341[3];
  _QWORD *v342;
  _BYTE v343[24];
  _BYTE *v344;
  _BYTE v345[568];
  void *memptr[2];
  __int128 v347;
  float v348;
  void *v349;
  char *v350;
  uint64_t v351;
  void **v352;
  pthread_mutex_t v353;
  void *v354[2];
  char v355;
  uint64_t v356;

  v356 = *MEMORY[0x24BDAC8D0];
  v295 = a9;
  sub_239A4D360((uint64_t)v274, a2);
  v271 = 0;
  v272 = 0;
  v273 = 0;
  sub_2394B5624((uint64_t)v274, (uint64_t)&v271, 1);
  v20 = a5[3];
  v22 = v271;
  v21 = v272;
  sub_2396FD800(a13, (uint64_t)v343);
  v23 = 2;
  if (!v20)
    v23 = 3;
  memptr[0] = (void *)0x42B4000000000000;
  sub_2396FCC68(v345, (v21 - v22) >> v23, v343, memptr, 1.0);
  v24 = v344;
  if (v344 == v343)
  {
    v25 = 4;
    v24 = v343;
    goto LABEL_7;
  }
  if (v344)
  {
    v25 = 5;
LABEL_7:
    (*(void (**)(void))(*v24 + 8 * v25))();
  }
  sub_2397A9868((std::__shared_weak_count_vtbl **)memptr);
  sub_2397A9E70(&v268, (uint64_t)memptr);
  v26 = (std::__shared_weak_count *)memptr[1];
  if (memptr[1])
  {
    v27 = (unint64_t *)((char *)memptr[1] + 8);
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  kdebug_trace();
  v29 = a3[3];
  if (!v29)
    goto LABEL_16;
  if ((_QWORD *)v29 != a3)
  {
    v29 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 16))(v29);
LABEL_16:
    v342 = (_QWORD *)v29;
    goto LABEL_18;
  }
  v342 = v341;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v341);
LABEL_18:
  v30 = a5[3];
  if (!v30)
  {
LABEL_21:
    v340 = (_QWORD *)v30;
    goto LABEL_23;
  }
  if ((_QWORD *)v30 != a5)
  {
    v30 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v30 + 16))(v30);
    goto LABEL_21;
  }
  v340 = v339;
  (*(void (**)(_QWORD *, _QWORD *))(*a5 + 24))(a5, v339);
LABEL_23:
  v31 = LODWORD(v295);
  if (v295 >= 1.0)
    goto LABEL_37;
  for (i = v280; i; i = *(double **)i)
  {
    v354[0] = *((void **)i + 28);
    v334[0].i32[0] = v31;
    v334[0].i32[1] = v31;
    sub_2397104F0((uint32x2_t *)v354, v334, (float32x2_t *)memptr);
    v33 = *((float *)memptr + 1);
    v34 = i[4];
    v35 = i[3] * *(float *)memptr;
    v36 = i[6];
    v37 = i[5] * *(float *)memptr;
    *((_QWORD *)i + 28) = (float)(*(float *)memptr * (float)*((unsigned int *)i + 56)) | ((unint64_t)(float)(*((float *)memptr + 1) * (float)*((unsigned int *)i + 57)) << 32);
    v38 = v33;
    i[3] = v35;
    i[4] = v34 * v38;
    i[5] = v37;
    i[6] = v36 * v38;
  }
  v39 = operator new(0x20uLL);
  *v39 = &off_250AF6880;
  v39[1] = &v268;
  v39[2] = &v295;
  v39[3] = a3;
  *((_QWORD *)&v347 + 1) = v39;
  sub_239A7ECE0(memptr, v341);
  v40 = (void **)*((_QWORD *)&v347 + 1);
  if (*((void ***)&v347 + 1) == memptr)
  {
    v41 = 4;
    v40 = memptr;
  }
  else
  {
    if (!*((_QWORD *)&v347 + 1))
      goto LABEL_31;
    v41 = 5;
  }
  (*((void (**)(void))*v40 + v41))();
LABEL_31:
  if (!a5[3])
    goto LABEL_37;
  v42 = operator new(0x20uLL);
  *v42 = &off_250AF68C8;
  v42[1] = &v268;
  v42[2] = &v295;
  v42[3] = a5;
  *((_QWORD *)&v347 + 1) = v42;
  sub_23948AB98(memptr, v339);
  v43 = (void **)*((_QWORD *)&v347 + 1);
  if (*((void ***)&v347 + 1) == memptr)
  {
    v44 = 4;
    v43 = memptr;
  }
  else
  {
    if (!*((_QWORD *)&v347 + 1))
      goto LABEL_37;
    v44 = 5;
  }
  (*((void (**)(void))*v43 + v44))();
LABEL_37:
  *(_OWORD *)v265 = 0u;
  *(_OWORD *)v266 = 0u;
  v267 = 1065353216;
  *(_OWORD *)v262 = 0u;
  *(_OWORD *)v263 = 0u;
  v264 = 1065353216;
  sub_2397A15E0(&v261);
  v45 = (uint64_t)v342;
  if (!v342)
  {
LABEL_40:
    v338 = (_QWORD *)v45;
    goto LABEL_42;
  }
  if (v342 != v341)
  {
    v45 = (*(uint64_t (**)(void))(*v342 + 16))();
    goto LABEL_40;
  }
  v338 = v337;
  (*(void (**)(_QWORD *, _QWORD *))(v341[0] + 24))(v341, v337);
LABEL_42:
  v46 = (uint64_t)v340;
  if (!v340)
  {
LABEL_45:
    v336 = (_QWORD *)v46;
    goto LABEL_47;
  }
  if (v340 != v339)
  {
    v46 = (*(uint64_t (**)(void))(*v340 + 16))();
    goto LABEL_45;
  }
  v336 = v335;
  (*(void (**)(_QWORD *, _QWORD *))(v339[0] + 24))(v339, v335);
LABEL_47:
  if (!a10)
    goto LABEL_99;
  v47 = v272 - (_BYTE *)v271;
  *(_OWORD *)memptr = 0u;
  v347 = 0u;
  v348 = 1.0;
  if (v272 - (_BYTE *)v271 == 8)
  {
    prime = 2;
LABEL_50:
    sub_239427FE0((uint64_t)memptr, prime);
    goto LABEL_51;
  }
  prime = v47 >> 3;
  if (((v47 >> 3) & ((v47 >> 3) - 1)) != 0)
  {
    prime = std::__next_prime(prime);
    v58 = memptr[1];
    v59 = (void *)prime >= memptr[1];
    if ((void *)prime > memptr[1])
      goto LABEL_50;
  }
  else
  {
    v58 = 0;
    v59 = 1;
    if (prime)
      goto LABEL_50;
  }
  if (!v59)
  {
    v63 = vcvtps_u32_f32((float)*((unint64_t *)&v347 + 1) / v348);
    if ((unint64_t)v58 < 3
      || (v64 = (uint8x8_t)vcnt_s8((int8x8_t)v58), v64.i16[0] = vaddlv_u8(v64), v64.u32[0] > 1uLL))
    {
      v63 = std::__next_prime(v63);
    }
    else
    {
      v65 = 1 << -(char)__clz(v63 - 1);
      if (v63 >= 2)
        v63 = v65;
    }
    if (prime <= v63)
      prime = v63;
    if (prime < (unint64_t)v58)
      goto LABEL_50;
  }
LABEL_51:
  if (v294)
  {
    if (*((_QWORD *)&__p + 1))
    {
      v49 = (_QWORD *)__p;
      if ((_QWORD)__p)
      {
        do
        {
          v50 = (_QWORD *)*v49;
          operator delete(v49);
          v49 = v50;
        }
        while (v50);
      }
      *(_QWORD *)&__p = 0;
      v51 = v291;
      if (v291)
      {
        v52 = 0;
        do
          *((_QWORD *)v290 + (_QWORD)v52++) = 0;
        while (v51 != v52);
      }
      *((_QWORD *)&__p + 1) = 0;
    }
    v53 = memptr[0];
    memptr[0] = 0;
    v54 = v290;
    v290 = v53;
    if (v54)
      operator delete(v54);
    v55 = (unint64_t)memptr[1];
    v56 = (_QWORD *)v347;
    v291 = (char *)memptr[1];
    memptr[1] = 0;
    v293 = v348;
    __p = v347;
    if (*((_QWORD *)&v347 + 1))
    {
      v57 = *(_QWORD *)(v347 + 8);
      if ((v55 & (v55 - 1)) != 0)
      {
        if (v57 >= v55)
          v57 %= v55;
      }
      else
      {
        v57 &= v55 - 1;
      }
      *((_QWORD *)v290 + v57) = &__p;
      v347 = 0uLL;
      goto LABEL_86;
    }
  }
  else
  {
    v60 = memptr[0];
    v61 = (unint64_t)memptr[1];
    memptr[1] = 0;
    memptr[0] = 0;
    v290 = v60;
    v291 = (char *)v61;
    v56 = (_QWORD *)v347;
    __p = v347;
    v293 = v348;
    if (*((_QWORD *)&v347 + 1))
    {
      v62 = *(_QWORD *)(v347 + 8);
      if ((v61 & (v61 - 1)) != 0)
      {
        if (v62 >= v61)
          v62 %= v61;
      }
      else
      {
        v62 &= v61 - 1;
      }
      v56 = 0;
      *((_QWORD *)v60 + v62) = &__p;
      v347 = 0uLL;
    }
    v294 = 1;
  }
  if (v56)
  {
    do
    {
      v66 = (_QWORD *)*v56;
      operator delete(v56);
      v56 = v66;
    }
    while (v66);
  }
LABEL_86:
  v67 = memptr[0];
  memptr[0] = 0;
  if (v67)
    operator delete(v67);
  if (!a5[3])
    goto LABEL_94;
  v68 = operator new(0x38uLL);
  *v68 = &off_250AF6910;
  v68[1] = v339;
  v68[2] = v265;
  v68[3] = v262;
  v68[4] = &v261;
  v68[5] = &v290;
  v68[6] = v274;
  *((_QWORD *)&v347 + 1) = v68;
  sub_23948AB98(memptr, v335);
  v69 = (void **)*((_QWORD *)&v347 + 1);
  if (*((void ***)&v347 + 1) == memptr)
  {
    v70 = 4;
    v69 = memptr;
    goto LABEL_93;
  }
  if (*((_QWORD *)&v347 + 1))
  {
    v70 = 5;
LABEL_93:
    (*((void (**)(void))*v69 + v70))();
  }
LABEL_94:
  v71 = operator new(0x20uLL);
  *v71 = &off_250AF6958;
  v71[1] = v341;
  v71[2] = v265;
  v71[3] = v262;
  *((_QWORD *)&v347 + 1) = v71;
  sub_239A7ECE0(memptr, v337);
  v72 = (void **)*((_QWORD *)&v347 + 1);
  if (*((void ***)&v347 + 1) == memptr)
  {
    v73 = 4;
    v72 = memptr;
    goto LABEL_98;
  }
  if (*((_QWORD *)&v347 + 1))
  {
    v73 = 5;
LABEL_98:
    (*((void (**)(void))*v72 + v73))();
  }
LABEL_99:
  sub_2397A9868((std::__shared_weak_count_vtbl **)memptr);
  sub_23971AF90(v334, memptr);
  v74 = (std::__shared_weak_count *)memptr[1];
  if (memptr[1])
  {
    v75 = (unint64_t *)((char *)memptr[1] + 8);
    do
      v76 = __ldaxr(v75);
    while (__stlxr(v76 - 1, v75));
    if (!v76)
    {
      ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
      std::__shared_weak_count::__release_weak(v74);
    }
  }
  v77 = a14;
  if (!a5[3])
  {
    v83 = 1;
    goto LABEL_198;
  }
  sub_2396FDAA8(a13, (uint64_t)v332);
  sub_2396FD534(&v257, v345, (v272 - (_BYTE *)v271) >> 3);
  v331 = 0;
  v78 = (char *)operator new(0x40uLL);
  *(_QWORD *)v78 = &off_250ADB9D8;
  *(_OWORD *)(v78 + 8) = v257;
  *((_QWORD *)v78 + 3) = v258;
  *((_QWORD *)&v257 + 1) = 0;
  v258 = 0;
  v79 = v259;
  v259 = 0uLL;
  v80 = v260;
  *((_OWORD *)v78 + 2) = v79;
  *((_OWORD *)v78 + 3) = v80;
  v260 = 0uLL;
  v331 = v78;
  sub_2396FD600((uint64_t)&v353, (uint64_t)v332, (uint64_t)v330);
  v81 = v331;
  if (v331 == v330)
  {
    v82 = 4;
    v81 = v330;
    goto LABEL_110;
  }
  if (v331)
  {
    v82 = 5;
LABEL_110:
    (*(void (**)(void))(*v81 + 8 * v82))();
  }
  v84 = (std::__shared_weak_count *)*((_QWORD *)&v260 + 1);
  if (*((_QWORD *)&v260 + 1))
  {
    v85 = (unint64_t *)(*((_QWORD *)&v260 + 1) + 8);
    do
      v86 = __ldaxr(v85);
    while (__stlxr(v86 - 1, v85));
    if (!v86)
    {
      ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
      std::__shared_weak_count::__release_weak(v84);
    }
  }
  v87 = (std::__shared_weak_count *)*((_QWORD *)&v259 + 1);
  if (*((_QWORD *)&v259 + 1))
  {
    v88 = (unint64_t *)(*((_QWORD *)&v259 + 1) + 8);
    do
      v89 = __ldaxr(v88);
    while (__stlxr(v89 - 1, v88));
    if (!v89)
    {
      ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
      std::__shared_weak_count::__release_weak(v87);
    }
  }
  v90 = v258;
  if (v258)
  {
    p_shared_owners = (unint64_t *)&v258->__shared_owners_;
    do
      v92 = __ldaxr(p_shared_owners);
    while (__stlxr(v92 - 1, p_shared_owners));
    if (!v92)
    {
      ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
      std::__shared_weak_count::__release_weak(v90);
    }
  }
  v93 = v333;
  if (v333 == v332)
  {
    v94 = 4;
    v93 = v332;
  }
  else
  {
    if (!v333)
      goto LABEL_131;
    v94 = 5;
  }
  (*(void (**)(void))(*v93 + 8 * v94))();
LABEL_131:
  v95 = (uint64_t)v336;
  if (!v336)
  {
LABEL_134:
    v329 = (_BYTE *)v95;
    goto LABEL_136;
  }
  if (v336 != v335)
  {
    v95 = (*(uint64_t (**)(void))(*v336 + 16))();
    goto LABEL_134;
  }
  v329 = v328;
  (*(void (**)(_QWORD *, _BYTE *))(v335[0] + 24))(v335, v328);
LABEL_136:
  v96 = a6[3];
  if (!v96)
  {
LABEL_139:
    v327 = (_BYTE *)v96;
    goto LABEL_141;
  }
  if ((_QWORD *)v96 != a6)
  {
    v96 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v96 + 16))(v96);
    goto LABEL_139;
  }
  v327 = v326;
  (*(void (**)(_QWORD *, _BYTE *))(*a6 + 24))(a6, v326);
LABEL_141:
  v97 = *(_QWORD *)&v353.__opaque[16];
  if (!*(_QWORD *)&v353.__opaque[16])
  {
LABEL_144:
    v323 = (_QWORD *)v97;
    goto LABEL_146;
  }
  if (*(pthread_mutex_t **)&v353.__opaque[16] != &v353)
  {
    v97 = (*(uint64_t (**)(void))(**(_QWORD **)&v353.__opaque[16] + 16))();
    goto LABEL_144;
  }
  v323 = v322;
  (*(void (**)(pthread_mutex_t *, _QWORD *))(v353.__sig + 24))(&v353, v322);
LABEL_146:
  v98 = v324;
  v99 = *(_QWORD *)&v353.__opaque[48];
  if (!*(_QWORD *)&v353.__opaque[48])
  {
LABEL_149:
    v325 = (_BYTE *)v99;
    goto LABEL_151;
  }
  if (*(pthread_mutex_t **)&v353.__opaque[48] != (pthread_mutex_t *)&v353.__opaque[24])
  {
    v99 = (*(uint64_t (**)(void))(**(_QWORD **)&v353.__opaque[48] + 16))();
    goto LABEL_149;
  }
  v325 = v324;
  (*(void (**)(void))(**(_QWORD **)&v353.__opaque[48] + 24))();
LABEL_151:
  if (!v329)
  {
    v248 = 203;
    goto LABEL_491;
  }
  if (!v327)
  {
    v248 = 204;
LABEL_491:
    sub_239A444D4((uint64_t)"unknown file", v248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  LOBYTE(v252[0]) = 1;
  v350 = 0;
  v349 = 0;
  v351 = 0;
  sub_2394B5624((uint64_t)v274, (uint64_t)&v349, 1);
  v100 = v350;
  v101 = v349;
  sub_2396FD800(v322, (uint64_t)v318);
  v354[0] = (void *)0x42C8000000000000;
  sub_2396FCC68(memptr, (v100 - v101) >> 3, v318, v354, 1.0);
  v102 = v319;
  if (v319 == v318)
  {
    v103 = 4;
    v102 = v318;
  }
  else
  {
    if (!v319)
      goto LABEL_158;
    v103 = 5;
  }
  (*(void (**)(void))(*v102 + 8 * v103))();
LABEL_158:
  sub_2397A2A50((uint64_t)v354, a12, 0);
  v104 = v350;
  v105 = v349;
  *((_QWORD *)&__dst_16 + 1) = 0;
  v106 = operator new(0x48uLL);
  *v106 = &off_250AF69A0;
  v106[1] = v322;
  v106[2] = v252;
  v106[3] = memptr;
  v106[4] = &v349;
  v106[5] = v274;
  v106[6] = v328;
  v106[7] = v334;
  v106[8] = v326;
  *((_QWORD *)&__dst_16 + 1) = v106;
  sub_2397A376C((unint64_t *)v354, (v104 - v105) >> 3, &__dst, 0);
  p_dst = (__int128 *)*((_QWORD *)&__dst_16 + 1);
  if (*((__int128 **)&__dst_16 + 1) == &__dst)
  {
    v108 = 4;
    p_dst = &__dst;
  }
  else
  {
    if (!*((_QWORD *)&__dst_16 + 1))
      goto LABEL_163;
    v108 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)p_dst + 8 * v108))();
LABEL_163:
  v109 = LOBYTE(v252[0]);
  sub_2397A2E14(v354);
  sub_2396FCD14((uint64_t)memptr);
  if (v349)
  {
    v350 = (char *)v349;
    operator delete(v349);
  }
  v83 = v109 != 0;
  if (v325 == v324)
  {
    v110 = 4;
  }
  else
  {
    if (!v325)
      goto LABEL_170;
    v110 = 5;
    v98 = v325;
  }
  (*(void (**)(_QWORD *))(*v98 + 8 * v110))(v98);
LABEL_170:
  v111 = v323;
  if (v323 == v322)
  {
    v112 = 4;
    v111 = v322;
  }
  else
  {
    if (!v323)
      goto LABEL_175;
    v112 = 5;
  }
  (*(void (**)(void))(*v111 + 8 * v112))();
LABEL_175:
  v113 = v327;
  if (v327 == v326)
  {
    v114 = 4;
    v113 = v326;
  }
  else
  {
    if (!v327)
      goto LABEL_180;
    v114 = 5;
  }
  (*(void (**)(void))(*v113 + 8 * v114))();
LABEL_180:
  v115 = v329;
  if (v329 == v328)
  {
    v116 = 4;
    v115 = v328;
    goto LABEL_184;
  }
  if (v329)
  {
    v116 = 5;
LABEL_184:
    (*(void (**)(void))(*v115 + 8 * v116))();
  }
  if (!v109 && a15)
    sub_2394202DC((_QWORD *)(a14 + 32), 4015);
  v117 = *(char **)&v353.__opaque[48];
  if (*(pthread_mutex_t **)&v353.__opaque[48] == (pthread_mutex_t *)&v353.__opaque[24])
  {
    v118 = 4;
    v117 = &v353.__opaque[24];
  }
  else
  {
    if (!*(_QWORD *)&v353.__opaque[48])
      goto LABEL_193;
    v118 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v117 + 8 * v118))();
LABEL_193:
  v119 = *(pthread_mutex_t **)&v353.__opaque[16];
  if (*(pthread_mutex_t **)&v353.__opaque[16] == &v353)
  {
    v120 = 4;
    v119 = &v353;
  }
  else
  {
    if (!*(_QWORD *)&v353.__opaque[16])
      goto LABEL_198;
    v120 = 5;
  }
  (*(void (**)(void))(v119->__sig + 8 * v120))();
LABEL_198:
  sub_2396FDAA8(a13, (uint64_t)v316);
  sub_2396FD534(&v253, v345, (v272 - (_BYTE *)v271) >> 3);
  v315 = 0;
  v121 = (char *)operator new(0x40uLL);
  *(_QWORD *)v121 = &off_250ADB9D8;
  *(_OWORD *)(v121 + 8) = v253;
  *((_QWORD *)v121 + 3) = v254;
  *((_QWORD *)&v253 + 1) = 0;
  v254 = 0;
  v122 = v255;
  v255 = 0uLL;
  v123 = v256;
  *((_OWORD *)v121 + 2) = v122;
  *((_OWORD *)v121 + 3) = v123;
  v256 = 0uLL;
  v315 = v121;
  sub_2396FD600((uint64_t)v318, (uint64_t)v316, (uint64_t)v314);
  v124 = v315;
  if (v315 == v314)
  {
    v125 = 4;
    v124 = v314;
    goto LABEL_202;
  }
  if (v315)
  {
    v125 = 5;
LABEL_202:
    (*(void (**)(void))(*v124 + 8 * v125))();
  }
  v126 = (std::__shared_weak_count *)*((_QWORD *)&v256 + 1);
  if (*((_QWORD *)&v256 + 1))
  {
    v127 = (unint64_t *)(*((_QWORD *)&v256 + 1) + 8);
    do
      v128 = __ldaxr(v127);
    while (__stlxr(v128 - 1, v127));
    if (!v128)
    {
      ((void (*)(std::__shared_weak_count *))v126->__on_zero_shared)(v126);
      std::__shared_weak_count::__release_weak(v126);
    }
  }
  v129 = (std::__shared_weak_count *)*((_QWORD *)&v255 + 1);
  if (*((_QWORD *)&v255 + 1))
  {
    v130 = (unint64_t *)(*((_QWORD *)&v255 + 1) + 8);
    do
      v131 = __ldaxr(v130);
    while (__stlxr(v131 - 1, v130));
    if (!v131)
    {
      ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
      std::__shared_weak_count::__release_weak(v129);
    }
  }
  v132 = v254;
  if (v254)
  {
    v133 = (unint64_t *)&v254->__shared_owners_;
    do
      v134 = __ldaxr(v133);
    while (__stlxr(v134 - 1, v133));
    if (!v134)
    {
      ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
      std::__shared_weak_count::__release_weak(v132);
    }
  }
  v135 = v317;
  if (v317 == v316)
  {
    v136 = 4;
    v135 = v316;
  }
  else
  {
    if (!v317)
      goto LABEL_223;
    v136 = 5;
  }
  (*(void (**)(void))(*v135 + 8 * v136))();
LABEL_223:
  v137 = (uint64_t)v338;
  if (!v338)
  {
LABEL_226:
    v313 = (_BYTE *)v137;
    goto LABEL_228;
  }
  if (v338 != v337)
  {
    v137 = (*(uint64_t (**)(void))(*v338 + 16))();
    goto LABEL_226;
  }
  v313 = v312;
  (*(void (**)(_QWORD *, _BYTE *))(v337[0] + 24))(v337, v312);
LABEL_228:
  v138 = a4[3];
  if (!v138)
  {
LABEL_231:
    v311 = (_BYTE *)v138;
    goto LABEL_233;
  }
  if ((_QWORD *)v138 != a4)
  {
    v138 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v138 + 16))(v138);
    goto LABEL_231;
  }
  v311 = v310;
  (*(void (**)(_QWORD *, _BYTE *))(*a4 + 24))(a4, v310);
LABEL_233:
  v139 = (uint64_t)v319;
  if (!v319)
  {
LABEL_236:
    v307 = (_QWORD *)v139;
    goto LABEL_238;
  }
  if (v319 != v318)
  {
    v139 = (*(uint64_t (**)(void))(*v319 + 16))();
    goto LABEL_236;
  }
  v307 = v306;
  (*(void (**)(_QWORD *, _QWORD *))(v318[0] + 24))(v318, v306);
LABEL_238:
  v140 = v308;
  v141 = (uint64_t)v321;
  if (!v321)
  {
LABEL_241:
    v309 = (_BYTE *)v141;
    goto LABEL_243;
  }
  if (v321 != v320)
  {
    v141 = (*(uint64_t (**)(void))(*(_QWORD *)v321 + 16))();
    goto LABEL_241;
  }
  v309 = v308;
  (*(void (**)(void))(*(_QWORD *)v321 + 24))();
LABEL_243:
  if (!v313)
  {
    v247 = 203;
    goto LABEL_488;
  }
  if (!v311)
  {
    v247 = 204;
LABEL_488:
    sub_239A444D4((uint64_t)"unknown file", v247, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  LOBYTE(v252[0]) = 1;
  v350 = 0;
  v349 = 0;
  v351 = 0;
  sub_2394B5624((uint64_t)v274, (uint64_t)&v349, 1);
  v142 = v350;
  v143 = v349;
  sub_2396FD800(v306, (uint64_t)&v353);
  v354[0] = (void *)0x42C8000000000000;
  sub_2396FCC68(memptr, (v142 - v143) >> 3, &v353, v354, 1.0);
  v144 = *(pthread_mutex_t **)&v353.__opaque[16];
  if (*(pthread_mutex_t **)&v353.__opaque[16] == &v353)
  {
    v145 = 4;
    v144 = &v353;
  }
  else
  {
    if (!*(_QWORD *)&v353.__opaque[16])
      goto LABEL_250;
    v145 = 5;
  }
  (*(void (**)(void))(v144->__sig + 8 * v145))();
LABEL_250:
  sub_2397A2A50((uint64_t)v354, a12, 0);
  v146 = v350;
  v147 = v349;
  *((_QWORD *)&__dst_16 + 1) = 0;
  v148 = operator new(0x48uLL);
  *v148 = &off_250AF69E8;
  v148[1] = v306;
  v148[2] = v252;
  v148[3] = memptr;
  v148[4] = &v349;
  v148[5] = v274;
  v148[6] = v312;
  v148[7] = v334;
  v148[8] = v310;
  *((_QWORD *)&__dst_16 + 1) = v148;
  sub_2397A376C((unint64_t *)v354, (v146 - v147) >> 3, &__dst, 0);
  v149 = (__int128 *)*((_QWORD *)&__dst_16 + 1);
  if (*((__int128 **)&__dst_16 + 1) == &__dst)
  {
    v150 = 4;
    v149 = &__dst;
  }
  else
  {
    if (!*((_QWORD *)&__dst_16 + 1))
      goto LABEL_255;
    v150 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v149 + 8 * v150))();
LABEL_255:
  v151 = LOBYTE(v252[0]);
  sub_2397A2E14(v354);
  sub_2396FCD14((uint64_t)memptr);
  if (v349)
  {
    v350 = (char *)v349;
    operator delete(v349);
  }
  if (v309 == v308)
  {
    v152 = 4;
  }
  else
  {
    if (!v309)
      goto LABEL_262;
    v152 = 5;
    v140 = v309;
  }
  (*(void (**)(_QWORD *))(*v140 + 8 * v152))(v140);
LABEL_262:
  v153 = v307;
  if (v307 == v306)
  {
    v154 = 4;
    v153 = v306;
  }
  else
  {
    if (!v307)
      goto LABEL_267;
    v154 = 5;
  }
  (*(void (**)(void))(*v153 + 8 * v154))();
LABEL_267:
  v155 = v311;
  if (v311 == v310)
  {
    v156 = 4;
    v155 = v310;
  }
  else
  {
    if (!v311)
      goto LABEL_272;
    v156 = 5;
  }
  (*(void (**)(void))(*v155 + 8 * v156))();
LABEL_272:
  v157 = v313;
  if (v313 == v312)
  {
    v158 = 4;
    v157 = v312;
  }
  else
  {
    if (!v313)
      goto LABEL_277;
    v158 = 5;
  }
  (*(void (**)(void))(*v157 + 8 * v158))();
LABEL_277:
  if (!v151 && a15)
    sub_2394202DC((_QWORD *)(a14 + 32), 4014);
  if (v151)
    v159 = v83;
  else
    v159 = 0;
  v249 = v159;
  if (sub_2396FD7B0((uint64_t)a13))
  {
    if (a15)
      goto LABEL_424;
    goto LABEL_427;
  }
  v272 = v271;
  sub_2394B5624((uint64_t)v274, (uint64_t)&v271, 1);
  v160 = (uint64_t *)v271;
  v161 = (uint64_t *)v272;
  if (v271 != v272)
  {
    do
    {
      v164 = *v160;
      memptr[0] = 0;
      malloc_type_posix_memalign(memptr, 0x20uLL, 0x40uLL, 0x100BBD03uLL);
      v165 = memptr[0];
      if (!memptr[0])
      {
        exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
        v246 = std::bad_alloc::bad_alloc(exception);
        __cxa_throw(v246, (struct type_info *)&unk_250ADB310, (void (*)(void *))MEMORY[0x24BEDB670]);
      }
      *((_QWORD *)memptr[0] + 4) = 0;
      *v165 = 0u;
      v165[1] = 0u;
      v166 = sub_2395D7BEC((uint64_t)v274, v164);
      *((_BYTE *)v166 + 32) = 1;
      v167 = (_OWORD *)v166[5];
      if ((unint64_t)v166[6] <= 4)
      {
        free(v167);
        v166[5] = 0;
        v166[6] = 8;
        memptr[0] = 0;
        malloc_type_posix_memalign(memptr, 0x20uLL, 0x40uLL, 0x100BBD03uLL);
        v167 = memptr[0];
        v166[5] = (uint64_t)memptr[0];
        if (!v167)
        {
          v168 = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
          v169 = std::bad_alloc::bad_alloc(v168);
          __cxa_throw(v169, (struct type_info *)&unk_250ADB310, (void (*)(void *))MEMORY[0x24BEDB670]);
        }
      }
      v162 = *v165;
      v163 = v165[1];
      *((_QWORD *)v167 + 4) = *((_QWORD *)v165 + 4);
      *v167 = v162;
      v167[1] = v163;
      *((_DWORD *)v166 + 14) = 5;
      free(v165);
      ++v160;
    }
    while (v160 != v161);
  }
  v170 = *(unsigned __int8 *)(a7 + 23);
  if ((v170 & 0x80u) != 0)
    v170 = *(_QWORD *)(a7 + 8);
  if (!v170)
    goto LABEL_347;
  sub_2396B906C((uint64_t)v282, a7);
  v355 = 4;
  strcpy((char *)v354, ".jpg");
  sub_2396B8D74((uint64_t)v282, (int64x2_t *)&v353);
  sig = (unint64_t *)v353.__sig;
  v172 = *(unint64_t **)v353.__opaque;
  if (v353.__sig == *(_QWORD *)v353.__opaque)
    goto LABEL_343;
  do
  {
    v173 = (void *)*sig;
    v174 = (void **)sub_2396B8B20(v282, *sig);
    if (*((char *)v174 + 23) < 0)
    {
      sub_23941A7F8(&__dst, *v174, (unint64_t)v174[1]);
    }
    else
    {
      v175 = *(_OWORD *)v174;
      *(_QWORD *)&__dst_16 = v174[2];
      __dst = v175;
    }
    v176 = std::__fs::filesystem::path::__extension((const std::__fs::filesystem::path *)&__dst);
    if (v176.__size_ >= 0x7FFFFFFFFFFFFFF8)
      sub_23941A5AC();
    if (v176.__size_ >= 0x17)
    {
      v178 = (v176.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v176.__size_ | 7) != 0x17)
        v178 = v176.__size_ | 7;
      v179 = v178 + 1;
      v177 = operator new(v178 + 1);
      *(_QWORD *)&v347 = v179 | 0x8000000000000000;
      memptr[0] = v177;
      memptr[1] = (void *)v176.__size_;
LABEL_310:
      memmove(v177, v176.__data_, v176.__size_);
      goto LABEL_311;
    }
    BYTE7(v347) = v176.__size_;
    v177 = memptr;
    if (v176.__size_)
      goto LABEL_310;
LABEL_311:
    *((_BYTE *)v177 + v176.__size_) = 0;
    v180 = memptr[0];
    v181 = (char *)memptr[1];
    LODWORD(v252[0]) = v347;
    *(_DWORD *)((char *)v252 + 3) = *(_DWORD *)((char *)&v347 + 3);
    if (SBYTE7(v347) < 0)
    {
      sub_23941A7F8(&v349, memptr[0], (unint64_t)memptr[1]);
      operator delete(v180);
      v182 = HIBYTE(v351);
      v180 = v349;
      v181 = v350;
    }
    else
    {
      v182 = BYTE7(v347);
      v349 = memptr[0];
      v350 = (char *)memptr[1];
      LODWORD(v351) = v252[0];
      *(_DWORD *)((char *)&v351 + 3) = *(_DWORD *)((char *)v252 + 3);
      HIBYTE(v351) = BYTE7(v347);
    }
    if ((v182 & 0x80u) == 0)
      v183 = (void **)((char *)&v349 + v182);
    else
      v183 = (void **)&v181[(_QWORD)v180];
    if ((v182 & 0x80u) == 0)
      v184 = &v349;
    else
      v184 = (void **)v180;
    if (v184 != v183)
    {
      do
      {
        *(_BYTE *)v184 = __tolower(*(unsigned __int8 *)v184);
        v184 = (void **)((char *)v184 + 1);
      }
      while (v184 != v183);
      v182 = HIBYTE(v351);
    }
    if ((v182 & 0x80) != 0)
    {
      v185 = v349;
      if (v350 != (char *)4)
        goto LABEL_340;
    }
    else
    {
      if (v182 != 4)
        goto LABEL_298;
      v185 = &v349;
    }
    if (*v185 == 1735287854)
    {
      memptr[1] = 0;
      memptr[0] = 0;
      *(_QWORD *)&v347 = 0;
      v186 = v355;
      if (v355 >= 0)
        v187 = (std::string *)v354;
      else
        v187 = (std::string *)v354[0];
      if (v355 < 0)
        v186 = (unint64_t)v354[1];
      sub_23948900C((std::string *)memptr, v187, (std::string *)((char *)v187 + v186));
      v188 = std::__fs::filesystem::path::replace_extension((std::__fs::filesystem::path *)&__dst, (const std::__fs::filesystem::path *)memptr);
      v297 = v173;
      v252[0] = (uint64_t *)&v297;
      v189 = (std::string *)sub_2395A09DC((uint64_t)v282, (unint64_t *)&v297, (uint64_t)&unk_239EC6E98, v252);
      std::string::operator=(v189 + 1, &v188->__pn_);
      if (SBYTE7(v347) < 0)
      {
        operator delete(memptr[0]);
        if (v351 < 0)
        {
LABEL_339:
          v185 = v349;
LABEL_340:
          operator delete(v185);
          if ((SBYTE7(__dst_16) & 0x80000000) == 0)
            goto LABEL_299;
          goto LABEL_341;
        }
      }
      else if (v351 < 0)
      {
        goto LABEL_339;
      }
    }
    else if ((v182 & 0x80) != 0)
    {
      goto LABEL_339;
    }
LABEL_298:
    if ((SBYTE7(__dst_16) & 0x80000000) == 0)
      goto LABEL_299;
LABEL_341:
    operator delete((void *)__dst);
LABEL_299:
    ++sig;
  }
  while (sig != v172);
  sig = (unint64_t *)v353.__sig;
LABEL_343:
  v77 = a14;
  if (sig)
  {
    *(_QWORD *)v353.__opaque = sig;
    operator delete(sig);
  }
  if (v355 < 0)
    operator delete(v354[0]);
LABEL_347:
  v190 = *(unsigned __int8 *)(a8 + 23);
  if ((v190 & 0x80u) != 0)
    v190 = *(_QWORD *)(a8 + 8);
  if (v190)
    sub_2396B906C((uint64_t)v283, a8);
  memptr[1] = 0;
  memptr[0] = 0;
  *(_QWORD *)&v347 = 0;
  sub_239433C1C((uint64_t)v274, (uint64_t)memptr, 1);
  v191 = (unint64_t *)memptr[0];
  v192 = (unint64_t *)memptr[1];
  if (memptr[0] != memptr[1])
  {
    do
    {
      v193 = *v191;
      if (*((_BYTE *)sub_2395D7BEC((uint64_t)v274, *v191) + 232) != 2)
      {
        if (sub_2396B8F48(v282, v193))
          sub_2396B9040(v282, v193);
        if (sub_2396B8F48(v283, v193))
          sub_2396B9040(v283, v193);
      }
      ++v191;
    }
    while (v191 != v192);
    v191 = (unint64_t *)memptr[0];
  }
  if (v191)
  {
    memptr[1] = v191;
    operator delete(v191);
  }
  kdebug_trace();
  if (!sub_2396FD7B0((uint64_t)a13))
  {
    kdebug_trace();
    sub_2396FD800(a13, (uint64_t)v304);
    v354[0] = (void *)0x42C8000042B40000;
    sub_2396FCC68(memptr, 1, v304, v354, 1.0);
    v194 = v305;
    if (v305 == v304)
    {
      v195 = 4;
      v194 = v304;
    }
    else
    {
      if (!v305)
        goto LABEL_370;
      v195 = 5;
    }
    (*(void (**)(void))(*v194 + 8 * v195))();
LABEL_370:
    v355 = 0;
    LOBYTE(v354[0]) = 0;
    sub_2396FD394(v252, (uint64_t)memptr, (__int128 *)v354);
    if (v355 < 0)
      operator delete(v354[0]);
    *(_QWORD *)&__dst = 0x3F7333333F333333;
    DWORD2(__dst) = 0x40000000;
    BYTE12(__dst) = 0;
    __dst_16 = xmmword_239F0C160;
    v302 = xmmword_239F0C170;
    v303 = a12;
    v289 = v288;
    sub_239DFA564((uint64_t)&v288);
    if (v287)
    {
      v196 = v286;
      if (v286)
      {
        do
        {
          v205 = (_QWORD *)*v196;
          v206 = (void *)v196[6];
          if (v206)
          {
            v196[7] = v206;
            operator delete(v206);
          }
          v207 = (void *)v196[3];
          if (v207)
          {
            v196[4] = v207;
            operator delete(v207);
          }
          operator delete(v196);
          v196 = v205;
        }
        while (v205);
      }
      v286 = 0;
      v197 = v285;
      if (v285)
      {
        v198 = 0;
        do
          *(_QWORD *)(v284 + 8 * v198++) = 0;
        while (v197 != v198);
      }
      v287 = 0;
    }
    v298 = 0;
    v297 = 0;
    v299 = 0;
    sub_2394B5624((uint64_t)v274, (uint64_t)&v297, 1);
    v296 = 1;
    v199 = v303;
    if (v303 <= 0)
      v199 = std::thread::hardware_concurrency();
    sub_2397A2A50((uint64_t)v354, v199, 0);
    sub_2397A1618(&v353);
    v200 = v298;
    v201 = v297;
    v352 = 0;
    v202 = (void **)operator new(0x38uLL);
    *v202 = &off_250AFFA08;
    v202[1] = &v297;
    v202[2] = &v353;
    v202[3] = v274;
    v202[4] = &v296;
    v202[5] = &v284;
    v202[6] = &__dst;
    v352 = v202;
    sub_2397A376C((unint64_t *)v354, (v200 - v201) >> 3, &v349, 0);
    v203 = v352;
    if (v352 == &v349)
    {
      v204 = 4;
      v203 = &v349;
    }
    else
    {
      if (!v352)
      {
LABEL_390:
        v208 = v296;
        if (v296)
          sub_239E2DB34((uint64_t)v274, (float *)&__dst, (uint64_t *)v286, (uint64_t)&v288);
        sub_2397A163C(&v353);
        sub_2397A2E14(v354);
        if (v297)
        {
          v298 = v297;
          operator delete(v297);
        }
        if (!v208 && a15)
          sub_2394202DC((_QWORD *)(v77 + 32), 4016);
        if (v208)
          v209 = v249;
        else
          v209 = 0;
        sub_2396FD3E8((uint64_t)v252);
        sub_2396FCD14((uint64_t)memptr);
        v210 = v277;
        if (v277)
        {
          v211 = 0;
          do
            *(_QWORD *)(v276 + 8 * v211++) = 0;
          while (v210 != v211);
          v212 = v278;
          v278 = 0;
          v279 = 0;
          if (v212)
          {
            do
            {
              v215 = (_QWORD *)*v212;
              v216 = (_QWORD *)v212[16];
              if (v216)
              {
                do
                {
                  v217 = (_QWORD *)*v216;
                  operator delete(v216);
                  v216 = v217;
                }
                while (v217);
              }
              v218 = (void *)v212[14];
              v212[14] = 0;
              if (v218)
                operator delete(v218);
              if (*((_BYTE *)v212 + 104))
                sub_239916980((uint64_t)(v212 + 9));
              operator delete(v212);
              v212 = v215;
            }
            while (v215);
          }
        }
        if (v274[0])
        {
          v274[1] = v274[0];
          operator delete(v274[0]);
        }
        *(_OWORD *)v274 = 0u;
        v275 = 0u;
        if (a15)
        {
          *(_QWORD *)v77 = (v289 - v288) >> 3;
          *(float *)(v77 + 24) = v295;
          *(_QWORD *)(v77 + 8) = v281;
          v213 = v280;
          if (v280)
          {
            v214 = 0;
            do
            {
              if (*((_BYTE *)v213 + 256) == 2)
                ++v214;
              v213 = *(double **)v213;
            }
            while (v213);
          }
          else
          {
            v214 = 0;
          }
          *(_QWORD *)(v77 + 16) = v214;
        }
        kdebug_trace();
        if (sub_2396FD7B0((uint64_t)a13))
        {
          if (a15)
            goto LABEL_424;
          goto LABEL_427;
        }
        if (!v209)
          goto LABEL_427;
        *(_BYTE *)(sub_239B51FBC((uint64_t)a1, (uint64_t)v274) + 936) = 1;
        goto LABEL_428;
      }
      v204 = 5;
    }
    (*((void (**)(void))*v203 + v204))();
    goto LABEL_390;
  }
  if (a15)
LABEL_424:
    sub_2394202DC((_QWORD *)(v77 + 32), 2);
LABEL_427:
  *a1 = 0;
  a1[936] = 0;
LABEL_428:
  v219 = v321;
  if (v321 == v320)
  {
    v220 = 4;
    v219 = v320;
LABEL_432:
    (*(void (**)(void))(*v219 + 8 * v220))();
  }
  else if (v321)
  {
    v220 = 5;
    goto LABEL_432;
  }
  v221 = v319;
  if (v319 == v318)
  {
    v222 = 4;
    v221 = v318;
LABEL_437:
    (*(void (**)(void))(*v221 + 8 * v222))();
  }
  else if (v319)
  {
    v222 = 5;
    goto LABEL_437;
  }
  sub_239420C38(v334);
  v223 = v336;
  if (v336 == v335)
  {
    v224 = 4;
    v223 = v335;
LABEL_442:
    (*(void (**)(void))(*v223 + 8 * v224))();
  }
  else if (v336)
  {
    v224 = 5;
    goto LABEL_442;
  }
  v225 = v338;
  if (v338 == v337)
  {
    v226 = 4;
    v225 = v337;
LABEL_447:
    (*(void (**)(void))(*v225 + 8 * v226))();
  }
  else if (v338)
  {
    v226 = 5;
    goto LABEL_447;
  }
  v227 = nullsub_4(&v261);
  v228 = v263[0];
  if (v263[0])
  {
    do
    {
      v229 = (_QWORD *)*v228;
      operator delete(v228);
      v228 = v229;
    }
    while (v229);
  }
  v230 = v262[0];
  v262[0] = 0;
  if (v230)
    operator delete(v230);
  v231 = v266[0];
  if (v266[0])
  {
    do
    {
      v232 = (_QWORD *)*v231;
      operator delete(v231);
      v231 = v232;
    }
    while (v232);
  }
  v233 = v265[0];
  v265[0] = 0;
  if (v233)
    operator delete(v233);
  v234 = v340;
  if (v340 == v339)
  {
    v235 = 4;
    v234 = v339;
LABEL_460:
    (*(void (**)(__n128))(*v234 + 8 * v235))(v227);
  }
  else if (v340)
  {
    v235 = 5;
    goto LABEL_460;
  }
  v236 = v342;
  if (v342 == v341)
  {
    v237 = 4;
    v236 = v341;
LABEL_465:
    (*(void (**)(__n128))(*v236 + 8 * v237))(v227);
  }
  else if (v342)
  {
    v237 = 5;
    goto LABEL_465;
  }
  v238 = v270;
  if (v270)
  {
    v239 = (unint64_t *)&v270->__shared_owners_;
    do
      v240 = __ldaxr(v239);
    while (__stlxr(v240 - 1, v239));
    if (!v240)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v238->__on_zero_shared)(v238, v227);
      std::__shared_weak_count::__release_weak(v238);
    }
  }
  v241 = v269;
  if (v269)
  {
    v242 = (unint64_t *)&v269->__shared_owners_;
    do
      v243 = __ldaxr(v242);
    while (__stlxr(v243 - 1, v242));
    if (!v243)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v241->__on_zero_shared)(v241, v227);
      std::__shared_weak_count::__release_weak(v241);
    }
  }
  sub_2396FCD14((uint64_t)v345);
  if (v271)
  {
    v272 = v271;
    operator delete(v271);
  }
  return sub_239A4D648((uint64_t)v274);
}

void sub_239B51814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37,__int16 a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,void *a55,uint64_t a56,char a57)
{
  void *v58;
  unint64_t *v59;
  uint64_t v60;
  unint64_t *v61;
  uint64_t v62;
  unint64_t *v63;
  uint64_t v64;
  unint64_t *v65;
  uint64_t v66;

  v58 = (void *)STACK[0x528];
  if (STACK[0x528])
  {
    STACK[0x530] = (unint64_t)v58;
    operator delete(v58);
  }
  sub_2396FD3E8((uint64_t)&a17);
  sub_2396FCD14((uint64_t)&STACK[0xB10]);
  sub_23942FE80(&STACK[0x658]);
  sub_239420C38(&STACK[0x758]);
  v59 = (unint64_t *)STACK[0x850];
  if ((unint64_t *)STACK[0x850] == &STACK[0x838])
  {
    v60 = 4;
    v59 = &STACK[0x838];
  }
  else
  {
    if (!v59)
      goto LABEL_8;
    v60 = 5;
  }
  (*(void (**)(void))(*v59 + 8 * v60))();
LABEL_8:
  v61 = (unint64_t *)STACK[0x870];
  if ((unint64_t *)STACK[0x870] == &STACK[0x858])
  {
    v62 = 4;
    v61 = &STACK[0x858];
  }
  else
  {
    if (!v61)
      goto LABEL_13;
    v62 = 5;
  }
  (*(void (**)(void))(*v61 + 8 * v62))();
LABEL_13:
  nullsub_4(&a37);
  sub_239420950((uint64_t)&a39);
  sub_239420950((uint64_t)&a45);
  v63 = (unint64_t *)STACK[0x890];
  if ((unint64_t *)STACK[0x890] == &STACK[0x878])
  {
    v64 = 4;
    v63 = &STACK[0x878];
  }
  else
  {
    if (!v63)
      goto LABEL_18;
    v64 = 5;
  }
  (*(void (**)(void))(*v63 + 8 * v64))();
LABEL_18:
  v65 = (unint64_t *)STACK[0x8B0];
  if ((unint64_t *)STACK[0x8B0] == &STACK[0x898])
  {
    v66 = 4;
    v65 = &STACK[0x898];
  }
  else
  {
    if (!v65)
      goto LABEL_23;
    v66 = 5;
  }
  (*(void (**)(void))(*v65 + 8 * v66))();
LABEL_23:
  sub_239420490((uint64_t)&a50);
  sub_2396FCD14((uint64_t)&STACK[0x8D8]);
  if (a54)
  {
    a55 = a54;
    operator delete(a54);
  }
  sub_239A4D648((uint64_t)&a57);
  _Unwind_Resume(a1);
}

uint64_t sub_239B51FBC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;

  *(_QWORD *)result = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_OWORD *)result = *(_OWORD *)a2;
  v2 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(result + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(result + 24) = v2;
  *(_QWORD *)(result + 32) = v3;
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(result + 48) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(result + 56) = v5;
  *(_DWORD *)(result + 64) = *(_DWORD *)(a2 + 64);
  if (v5)
  {
    v6 = *(_QWORD *)(v4 + 8);
    v7 = *(_QWORD *)(result + 40);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v6 %= v7;
    }
    else
    {
      v6 &= v7 - 1;
    }
    *(_QWORD *)(v3 + 8 * v6) = result + 48;
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 56) = 0;
  }
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(result + 72) = v8;
  *(_QWORD *)(result + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a2 + 80) = 0;
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(result + 88) = v9;
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(result + 96) = v10;
  *(_DWORD *)(result + 104) = *(_DWORD *)(a2 + 104);
  if (v10)
  {
    v11 = *(_QWORD *)(v9 + 8);
    v12 = *(_QWORD *)(result + 80);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
        v11 %= v12;
    }
    else
    {
      v11 &= v12 - 1;
    }
    *(_QWORD *)(v8 + 8 * v11) = result + 88;
    *(_QWORD *)(a2 + 88) = 0;
    *(_QWORD *)(a2 + 96) = 0;
  }
  v13 = *(_QWORD *)(a2 + 112);
  *(_DWORD *)(result + 120) = *(_DWORD *)(a2 + 120);
  *(_QWORD *)(result + 112) = v13;
  *(_QWORD *)(result + 128) = 0;
  *(_OWORD *)(result + 136) = 0u;
  *(_OWORD *)(result + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(result + 144) = *(_QWORD *)(a2 + 144);
  v14 = *(_QWORD *)(a2 + 152);
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_QWORD *)(result + 152) = v14;
  *(_QWORD *)(result + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a2 + 160) = 0;
  v15 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(result + 168) = v15;
  v16 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(result + 176) = v16;
  *(_DWORD *)(result + 184) = *(_DWORD *)(a2 + 184);
  if (v16)
  {
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_QWORD *)(result + 160);
    if ((v18 & (v18 - 1)) != 0)
    {
      if (v17 >= v18)
        v17 %= v18;
    }
    else
    {
      v17 &= v18 - 1;
    }
    *(_QWORD *)(v14 + 8 * v17) = result + 168;
    *(_QWORD *)(a2 + 168) = 0;
    *(_QWORD *)(a2 + 176) = 0;
  }
  v19 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a2 + 192) = 0;
  *(_QWORD *)(result + 192) = v19;
  *(_QWORD *)(result + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a2 + 200) = 0;
  v20 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(result + 208) = v20;
  v21 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(result + 216) = v21;
  *(_DWORD *)(result + 224) = *(_DWORD *)(a2 + 224);
  if (v21)
  {
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(result + 200);
    if ((v23 & (v23 - 1)) != 0)
    {
      if (v22 >= v23)
        v22 %= v23;
    }
    else
    {
      v22 &= v23 - 1;
    }
    *(_QWORD *)(v19 + 8 * v22) = result + 208;
    *(_QWORD *)(a2 + 208) = 0;
    *(_QWORD *)(a2 + 216) = 0;
  }
  *(_QWORD *)(result + 232) = 0;
  *(_QWORD *)(result + 240) = 0;
  *(_QWORD *)(result + 248) = 0;
  *(_OWORD *)(result + 232) = *(_OWORD *)(a2 + 232);
  *(_QWORD *)(result + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a2 + 232) = 0;
  *(_QWORD *)(a2 + 240) = 0;
  *(_QWORD *)(a2 + 248) = 0;
  *(_QWORD *)(result + 256) = 0;
  *(_QWORD *)(result + 264) = 0;
  *(_QWORD *)(result + 272) = 0;
  *(_OWORD *)(result + 256) = *(_OWORD *)(a2 + 256);
  *(_QWORD *)(result + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a2 + 264) = 0;
  *(_QWORD *)(a2 + 272) = 0;
  *(_QWORD *)(a2 + 256) = 0;
  v24 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(result + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(result + 288) = v24;
  *(_QWORD *)(result + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a2 + 280) = 0;
  *(_QWORD *)(a2 + 288) = 0;
  *(_QWORD *)(a2 + 296) = 0;
  *(_QWORD *)(result + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(result + 312) = *(_QWORD *)(a2 + 312);
  v25 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(result + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(result + 320) = v25;
  v26 = *(_OWORD *)(a2 + 384);
  v27 = *(_OWORD *)(a2 + 400);
  v28 = *(_QWORD *)(a2 + 416);
  *(_OWORD *)(result + 368) = *(_OWORD *)(a2 + 368);
  *(_QWORD *)(result + 416) = v28;
  *(_OWORD *)(result + 400) = v27;
  *(_OWORD *)(result + 384) = v26;
  *(_OWORD *)(result + 352) = *(_OWORD *)(a2 + 352);
  v29 = *(_OWORD *)(a2 + 424);
  *(_QWORD *)(result + 440) = *(_QWORD *)(a2 + 440);
  *(_OWORD *)(result + 424) = v29;
  *(_DWORD *)(result + 448) = *(_DWORD *)(a2 + 448);
  v30 = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a2 + 456) = 0;
  *(_QWORD *)(result + 456) = v30;
  *(_QWORD *)(result + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a2 + 464) = 0;
  v31 = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(result + 472) = v31;
  v32 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(result + 480) = v32;
  *(_DWORD *)(result + 488) = *(_DWORD *)(a2 + 488);
  if (v32)
  {
    v33 = *(_QWORD *)(v31 + 8);
    v34 = *(_QWORD *)(result + 464);
    if ((v34 & (v34 - 1)) != 0)
    {
      if (v33 >= v34)
        v33 %= v34;
    }
    else
    {
      v33 &= v34 - 1;
    }
    *(_QWORD *)(v30 + 8 * v33) = result + 472;
    *(_QWORD *)(a2 + 472) = 0;
    *(_QWORD *)(a2 + 480) = 0;
  }
  v35 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a2 + 496) = 0;
  *(_QWORD *)(result + 496) = v35;
  *(_QWORD *)(result + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a2 + 504) = 0;
  v36 = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(result + 512) = v36;
  v37 = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(result + 520) = v37;
  *(_DWORD *)(result + 528) = *(_DWORD *)(a2 + 528);
  if (v37)
  {
    v38 = *(_QWORD *)(v36 + 8);
    v39 = *(_QWORD *)(result + 504);
    if ((v39 & (v39 - 1)) != 0)
    {
      if (v38 >= v39)
        v38 %= v39;
    }
    else
    {
      v38 &= v39 - 1;
    }
    *(_QWORD *)(v35 + 8 * v38) = result + 512;
    *(_QWORD *)(a2 + 512) = 0;
    *(_QWORD *)(a2 + 520) = 0;
  }
  v40 = *(_OWORD *)(a2 + 536);
  v41 = *(_OWORD *)(a2 + 552);
  v42 = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(result + 568) = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(result + 584) = v42;
  *(_OWORD *)(result + 536) = v40;
  *(_OWORD *)(result + 552) = v41;
  v43 = *(_OWORD *)(a2 + 600);
  v44 = *(_OWORD *)(a2 + 616);
  v45 = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(result + 632) = *(_OWORD *)(a2 + 632);
  *(_OWORD *)(result + 648) = v45;
  *(_OWORD *)(result + 600) = v43;
  *(_OWORD *)(result + 616) = v44;
  v46 = *(_OWORD *)(a2 + 776);
  v48 = *(_OWORD *)(a2 + 728);
  v47 = *(_OWORD *)(a2 + 744);
  *(_OWORD *)(result + 760) = *(_OWORD *)(a2 + 760);
  *(_OWORD *)(result + 776) = v46;
  *(_OWORD *)(result + 728) = v48;
  *(_OWORD *)(result + 744) = v47;
  v49 = *(_OWORD *)(a2 + 664);
  v50 = *(_OWORD *)(a2 + 680);
  v51 = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(result + 696) = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(result + 712) = v51;
  *(_OWORD *)(result + 664) = v49;
  *(_OWORD *)(result + 680) = v50;
  v52 = *(_QWORD *)(a2 + 792);
  *(_QWORD *)(a2 + 792) = 0;
  *(_QWORD *)(result + 792) = v52;
  *(_QWORD *)(result + 800) = *(_QWORD *)(a2 + 800);
  *(_QWORD *)(a2 + 800) = 0;
  v53 = *(_QWORD *)(a2 + 808);
  *(_QWORD *)(result + 808) = v53;
  v54 = *(_QWORD *)(a2 + 816);
  *(_QWORD *)(result + 816) = v54;
  *(_DWORD *)(result + 824) = *(_DWORD *)(a2 + 824);
  if (v54)
  {
    v55 = *(_QWORD *)(v53 + 8);
    v56 = *(_QWORD *)(result + 800);
    if ((v56 & (v56 - 1)) != 0)
    {
      if (v55 >= v56)
        v55 %= v56;
    }
    else
    {
      v55 &= v56 - 1;
    }
    *(_QWORD *)(v52 + 8 * v55) = result + 808;
    *(_QWORD *)(a2 + 808) = 0;
    *(_QWORD *)(a2 + 816) = 0;
  }
  *(_QWORD *)(result + 840) = 0;
  *(_QWORD *)(result + 832) = 0;
  *(_QWORD *)(result + 848) = 0;
  *(_OWORD *)(result + 832) = *(_OWORD *)(a2 + 832);
  *(_QWORD *)(result + 848) = *(_QWORD *)(a2 + 848);
  *(_QWORD *)(a2 + 840) = 0;
  *(_QWORD *)(a2 + 832) = 0;
  *(_QWORD *)(a2 + 848) = 0;
  *(_BYTE *)(result + 856) = 0;
  *(_BYTE *)(result + 896) = 0;
  if (*(_BYTE *)(a2 + 896))
  {
    v57 = *(_QWORD *)(a2 + 856);
    *(_QWORD *)(a2 + 856) = 0;
    *(_QWORD *)(result + 856) = v57;
    *(_QWORD *)(result + 864) = *(_QWORD *)(a2 + 864);
    *(_QWORD *)(a2 + 864) = 0;
    v58 = *(_QWORD *)(a2 + 872);
    *(_QWORD *)(result + 872) = v58;
    v59 = *(_QWORD *)(a2 + 880);
    *(_QWORD *)(result + 880) = v59;
    *(_DWORD *)(result + 888) = *(_DWORD *)(a2 + 888);
    if (v59)
    {
      v60 = *(_QWORD *)(v58 + 8);
      v61 = *(_QWORD *)(result + 864);
      if ((v61 & (v61 - 1)) != 0)
      {
        if (v60 >= v61)
          v60 %= v61;
      }
      else
      {
        v60 &= v61 - 1;
      }
      *(_QWORD *)(v57 + 8 * v60) = result + 872;
      *(_QWORD *)(a2 + 872) = 0;
      *(_QWORD *)(a2 + 880) = 0;
    }
    *(_BYTE *)(result + 896) = 1;
  }
  *(_BYTE *)(result + 904) = 0;
  *(_BYTE *)(result + 928) = 0;
  if (*(_BYTE *)(a2 + 928))
  {
    *(_QWORD *)(result + 904) = 0;
    *(_QWORD *)(result + 912) = 0;
    *(_QWORD *)(result + 920) = 0;
    *(_QWORD *)(result + 904) = *(_QWORD *)(a2 + 904);
    *(_QWORD *)(result + 912) = *(_QWORD *)(a2 + 912);
    *(_QWORD *)(result + 920) = *(_QWORD *)(a2 + 920);
    *(_QWORD *)(a2 + 912) = 0;
    *(_QWORD *)(a2 + 904) = 0;
    *(_QWORD *)(a2 + 920) = 0;
    *(_BYTE *)(result + 928) = 1;
  }
  return result;
}

void sub_239B52520()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B52534(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x48uLL);
  *(_QWORD *)v2 = &off_250AF69E8;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a1 + 40);
  result = *(__n128 *)(a1 + 56);
  *(__n128 *)(v2 + 56) = result;
  return result;
}

__n128 sub_239B52584(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_QWORD *)a2 = &off_250AF69E8;
  result = *(__n128 *)(a1 + 8);
  v3 = *(_OWORD *)(a1 + 24);
  v4 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v4;
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B525BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t (**v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void *v11;
  __n128 v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  __n128 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  char *v27;
  char *v28;
  void *v29;
  void **v30;
  void **v31;
  void *v32;
  void **v33;
  void **v34;
  void *v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  void **v39;
  uint64_t (**v40)();
  uint64_t v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  char *v44;
  std::__shared_weak_count *v45;
  std::__shared_weak_count *v46;
  uint64_t v47;
  void *__p;
  char *v49;
  void *v50[2];
  void *v51[2];
  int v52;
  _QWORD *v53;
  std::__shared_weak_count *v54;
  _QWORD v55[4];
  __int128 v56;
  void *v57;
  uint64_t *v58;
  void **v59;
  __int16 v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  result = sub_2396FD7B0(*(_QWORD *)(a1 + 8));
  if ((_DWORD)result)
  {
    **(_BYTE **)(a1 + 16) = 0;
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 24);
    HIBYTE(v57) = 0;
    LOBYTE(v56) = 0;
    sub_2396FD394(v55, v5, &v56);
    if (SHIBYTE(v57) < 0)
      operator delete((void *)v56);
    v6 = *(uint64_t (***)())(**(_QWORD **)(a1 + 32) + 8 * v3);
    v7 = sub_239470FCC(*(_QWORD *)(a1 + 40), v6);
    v8 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)&v56 = v6;
    v9 = *(_QWORD *)(v8 + 24);
    if (!v9)
      sub_2394172E0();
    (*(void (**)(_QWORD **__return_ptr, uint64_t, __int128 *))(*(_QWORD *)v9 + 48))(&v53, v9, &v56);
    if (v53)
    {
      HIBYTE(v57) = 6;
      strcpy((char *)&v56, "camera");
      v58 = v7;
      *(_OWORD *)v50 = 0u;
      *(_OWORD *)v51 = 0u;
      v52 = 1065353216;
      sub_239428484((uint64_t)v50, (uint64_t)&v56, (uint64_t)&v56);
      if (SHIBYTE(v57) < 0)
        operator delete((void *)v56);
      sub_239719E98((uint64_t)&v56, 11, (uint64_t)v50, 0.0, 0.0);
      sub_23942818C(&__p, (uint64_t)&v56, 1uLL);
      v10 = v59;
      if (v59)
      {
        do
        {
          v30 = (void **)*v10;
          if (*((char *)v10 + 39) < 0)
            operator delete(v10[2]);
          operator delete(v10);
          v10 = v30;
        }
        while (v30);
      }
      v11 = v57;
      v57 = 0;
      if (v11)
        operator delete(v11);
      v40 = &off_250ADB210;
      sub_239423B80(v53, (uint64_t)&v41);
      sub_23971D0F4((uint64_t *)&__p, (int32x2_t *)&v40, *(_QWORD *)(a1 + 56), (uint64_t)&v44);
      *(_QWORD *)&v56 = &off_250ADBEA0;
      sub_239469644((uint64_t)&v44, (uint64_t)&v56 + 8);
      v12 = nullsub_4(&v47);
      v13 = v46;
      if (v46)
      {
        p_shared_owners = (unint64_t *)&v46->__shared_owners_;
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v13->__on_zero_shared)(v13, v12);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      j_nullsub_4_89(&v44);
      v16 = nullsub_4(&v43);
      v17 = v42;
      if (v42)
      {
        v18 = (unint64_t *)&v42->__shared_owners_;
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v17->__on_zero_shared)(v17, v16);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      nullsub_4(&v40);
      v20 = *(_QWORD *)(a1 + 64);
      v21 = operator new(0xA0uLL);
      v21[1] = 0;
      v21[2] = 0;
      *v21 = &off_250ADD758;
      v21[3] = &off_250ADBEA0;
      sub_239827500((uint64_t)(v21 + 4), (uint64_t)&v56 + 8);
      *((_WORD *)v21 + 76) = v60;
      v44 = (char *)(v21 + 3);
      v45 = (std::__shared_weak_count *)v21;
      v40 = v6;
      v22 = *(_QWORD *)(v20 + 24);
      if (!v22)
        sub_2394172E0();
      v23 = (*(uint64_t (**)(uint64_t, char **, uint64_t (***)()))(*(_QWORD *)v22 + 48))(v22, &v44, &v40);
      v24 = v45;
      if (v45)
      {
        v25 = (unint64_t *)&v45->__shared_owners_;
        do
          v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if ((v23 & 1) == 0)
        **(_BYTE **)(a1 + 16) = 0;
      sub_239416DA0((uint64_t)&v56 + 8);
      nullsub_4(&v56);
      v27 = (char *)__p;
      if (__p)
      {
        v28 = v49;
        v29 = __p;
        if (v49 != __p)
        {
          do
          {
            v31 = (void **)*((_QWORD *)v28 - 3);
            if (v31)
            {
              do
              {
                v33 = (void **)*v31;
                if (*((char *)v31 + 39) < 0)
                  operator delete(v31[2]);
                operator delete(v31);
                v31 = v33;
              }
              while (v33);
            }
            v32 = (void *)*((_QWORD *)v28 - 5);
            *((_QWORD *)v28 - 5) = 0;
            if (v32)
              operator delete(v32);
            v28 -= 56;
          }
          while (v28 != v27);
          v29 = __p;
        }
        v49 = v27;
        operator delete(v29);
      }
      v34 = (void **)v51[0];
      if (v51[0])
      {
        do
        {
          v39 = (void **)*v34;
          if (*((char *)v34 + 39) < 0)
            operator delete(v34[2]);
          operator delete(v34);
          v34 = v39;
        }
        while (v39);
      }
      v35 = v50[0];
      v50[0] = 0;
      if (v35)
        operator delete(v35);
    }
    v36 = v54;
    if (v54)
    {
      v37 = (unint64_t *)&v54->__shared_owners_;
      do
        v38 = __ldaxr(v37);
      while (__stlxr(v38 - 1, v37));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    return sub_2396FD3E8((uint64_t)v55);
  }
  return result;
}

void sub_239B52A10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char *__p,char *a25,uint64_t a26,void *a27,uint64_t a28,void **a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,std::__shared_weak_count *a34,char a35)
{
  uint64_t v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  uint64_t v38;
  void *v40;
  __n128 v41;
  char *v42;
  char *v43;
  void **v44;
  void *v45;
  void **v46;
  void **v47;
  unint64_t *p_shared_owners;
  unint64_t v49;
  void **v50;

  nullsub_4(v37);
  std::__shared_weak_count::~__shared_weak_count(v36);
  operator delete(v40);
  sub_239416DA0(v35);
  v41 = nullsub_4(v38 - 208);
  if (__p)
  {
    v42 = a25;
    v43 = __p;
    if (a25 != __p)
    {
      do
      {
        v44 = (void **)*((_QWORD *)v42 - 3);
        if (v44)
        {
          do
          {
            v46 = (void **)*v44;
            if (*((char *)v44 + 39) < 0)
              operator delete(v44[2]);
            operator delete(v44);
            v44 = v46;
          }
          while (v46);
        }
        v45 = (void *)*((_QWORD *)v42 - 5);
        *((_QWORD *)v42 - 5) = 0;
        if (v45)
          operator delete(v45);
        v42 -= 56;
      }
      while (v42 != __p);
      v43 = __p;
    }
    operator delete(v43);
  }
  v47 = a29;
  if (a29)
  {
    do
    {
      v50 = (void **)*v47;
      if (*((char *)v47 + 39) < 0)
        operator delete(v47[2]);
      operator delete(v47);
      v47 = v50;
    }
    while (v50);
  }
  if (a27)
    operator delete(a27);
  if (a34)
  {
    p_shared_owners = (unint64_t *)&a34->__shared_owners_;
    do
      v49 = __ldaxr(p_shared_owners);
    while (__stlxr(v49 - 1, p_shared_owners));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *, __n128))a34->__on_zero_shared)(a34, v41);
      std::__shared_weak_count::__release_weak(a34);
    }
  }
  sub_2396FD3E8((uint64_t)&a35);
  _Unwind_Resume(a1);
}

void sub_239B52D00()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B52D14(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x48uLL);
  *(_QWORD *)v2 = &off_250AF69A0;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a1 + 40);
  result = *(__n128 *)(a1 + 56);
  *(__n128 *)(v2 + 56) = result;
  return result;
}

__n128 sub_239B52D64(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_QWORD *)a2 = &off_250AF69A0;
  result = *(__n128 *)(a1 + 8);
  v3 = *(_OWORD *)(a1 + 24);
  v4 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v4;
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B52D9C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t (**v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void *v11;
  __n128 v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  __n128 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  char *v27;
  char *v28;
  void *v29;
  void **v30;
  void **v31;
  void *v32;
  void **v33;
  void **v34;
  void *v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  void **v39;
  uint64_t (**v40)();
  uint64_t v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  char *v44;
  std::__shared_weak_count *v45;
  std::__shared_weak_count *v46;
  uint64_t v47;
  void *__p;
  char *v49;
  void *v50[2];
  void *v51[2];
  int v52;
  _QWORD *v53;
  std::__shared_weak_count *v54;
  _QWORD v55[4];
  __int128 v56;
  void *v57;
  uint64_t *v58;
  void **v59;
  __int16 v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  result = sub_2396FD7B0(*(_QWORD *)(a1 + 8));
  if ((_DWORD)result)
  {
    **(_BYTE **)(a1 + 16) = 0;
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 24);
    HIBYTE(v57) = 0;
    LOBYTE(v56) = 0;
    sub_2396FD394(v55, v5, &v56);
    if (SHIBYTE(v57) < 0)
      operator delete((void *)v56);
    v6 = *(uint64_t (***)())(**(_QWORD **)(a1 + 32) + 8 * v3);
    v7 = sub_239470FCC(*(_QWORD *)(a1 + 40), v6);
    v8 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)&v56 = v6;
    v9 = *(_QWORD *)(v8 + 24);
    if (!v9)
      sub_2394172E0();
    (*(void (**)(_QWORD **__return_ptr, uint64_t, __int128 *))(*(_QWORD *)v9 + 48))(&v53, v9, &v56);
    if (v53)
    {
      HIBYTE(v57) = 6;
      strcpy((char *)&v56, "camera");
      v58 = v7;
      *(_OWORD *)v50 = 0u;
      *(_OWORD *)v51 = 0u;
      v52 = 1065353216;
      sub_239428484((uint64_t)v50, (uint64_t)&v56, (uint64_t)&v56);
      if (SHIBYTE(v57) < 0)
        operator delete((void *)v56);
      sub_239719E98((uint64_t)&v56, 11, (uint64_t)v50, 0.0, 0.0);
      sub_23942818C(&__p, (uint64_t)&v56, 1uLL);
      v10 = v59;
      if (v59)
      {
        do
        {
          v30 = (void **)*v10;
          if (*((char *)v10 + 39) < 0)
            operator delete(v10[2]);
          operator delete(v10);
          v10 = v30;
        }
        while (v30);
      }
      v11 = v57;
      v57 = 0;
      if (v11)
        operator delete(v11);
      v40 = &off_250ADB210;
      sub_239624770(v53, (uint64_t)&v41);
      sub_23971D0F4((uint64_t *)&__p, (int32x2_t *)&v40, *(_QWORD *)(a1 + 56), (uint64_t)&v44);
      *(_QWORD *)&v56 = &off_250ADB628;
      sub_239423E50((uint64_t)&v44, (uint64_t)&v56 + 8);
      v12 = nullsub_4(&v47);
      v13 = v46;
      if (v46)
      {
        p_shared_owners = (unint64_t *)&v46->__shared_owners_;
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v13->__on_zero_shared)(v13, v12);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      j_nullsub_4_89(&v44);
      v16 = nullsub_4(&v43);
      v17 = v42;
      if (v42)
      {
        v18 = (unint64_t *)&v42->__shared_owners_;
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v17->__on_zero_shared)(v17, v16);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      nullsub_4(&v40);
      v20 = *(_QWORD *)(a1 + 64);
      v21 = operator new(0x70uLL);
      v21[1] = 0;
      v21[2] = 0;
      *v21 = &off_250ADB878;
      v21[3] = &off_250ADB628;
      sub_23982619C((uint64_t)(v21 + 4), (uint64_t)&v56 + 8);
      *((_WORD *)v21 + 52) = v60;
      v44 = (char *)(v21 + 3);
      v45 = (std::__shared_weak_count *)v21;
      v40 = v6;
      v22 = *(_QWORD *)(v20 + 24);
      if (!v22)
        sub_2394172E0();
      v23 = (*(uint64_t (**)(uint64_t, char **, uint64_t (***)()))(*(_QWORD *)v22 + 48))(v22, &v44, &v40);
      v24 = v45;
      if (v45)
      {
        v25 = (unint64_t *)&v45->__shared_owners_;
        do
          v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if ((v23 & 1) == 0)
        **(_BYTE **)(a1 + 16) = 0;
      sub_239416DA0((uint64_t)&v56 + 8);
      nullsub_4(&v56);
      v27 = (char *)__p;
      if (__p)
      {
        v28 = v49;
        v29 = __p;
        if (v49 != __p)
        {
          do
          {
            v31 = (void **)*((_QWORD *)v28 - 3);
            if (v31)
            {
              do
              {
                v33 = (void **)*v31;
                if (*((char *)v31 + 39) < 0)
                  operator delete(v31[2]);
                operator delete(v31);
                v31 = v33;
              }
              while (v33);
            }
            v32 = (void *)*((_QWORD *)v28 - 5);
            *((_QWORD *)v28 - 5) = 0;
            if (v32)
              operator delete(v32);
            v28 -= 56;
          }
          while (v28 != v27);
          v29 = __p;
        }
        v49 = v27;
        operator delete(v29);
      }
      v34 = (void **)v51[0];
      if (v51[0])
      {
        do
        {
          v39 = (void **)*v34;
          if (*((char *)v34 + 39) < 0)
            operator delete(v34[2]);
          operator delete(v34);
          v34 = v39;
        }
        while (v39);
      }
      v35 = v50[0];
      v50[0] = 0;
      if (v35)
        operator delete(v35);
    }
    v36 = v54;
    if (v54)
    {
      v37 = (unint64_t *)&v54->__shared_owners_;
      do
        v38 = __ldaxr(v37);
      while (__stlxr(v38 - 1, v37));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    return sub_2396FD3E8((uint64_t)v55);
  }
  return result;
}

void sub_239B531F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char *__p,char *a25,uint64_t a26,void *a27,uint64_t a28,void **a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,std::__shared_weak_count *a34)
{
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  uint64_t v37;
  void *v39;
  __n128 v40;
  char *v41;
  char *v42;
  void **v43;
  void *v44;
  void **v45;
  void **v46;
  unint64_t *p_shared_owners;
  unint64_t v48;
  void **v49;

  nullsub_4(v36);
  std::__shared_weak_count::~__shared_weak_count(v35);
  operator delete(v39);
  sub_239416DA0(v34);
  v40 = nullsub_4(v37 - 160);
  if (__p)
  {
    v41 = a25;
    v42 = __p;
    if (a25 != __p)
    {
      do
      {
        v43 = (void **)*((_QWORD *)v41 - 3);
        if (v43)
        {
          do
          {
            v45 = (void **)*v43;
            if (*((char *)v43 + 39) < 0)
              operator delete(v43[2]);
            operator delete(v43);
            v43 = v45;
          }
          while (v45);
        }
        v44 = (void *)*((_QWORD *)v41 - 5);
        *((_QWORD *)v41 - 5) = 0;
        if (v44)
          operator delete(v44);
        v41 -= 56;
      }
      while (v41 != __p);
      v42 = __p;
    }
    operator delete(v42);
  }
  v46 = a29;
  if (a29)
  {
    do
    {
      v49 = (void **)*v46;
      if (*((char *)v46 + 39) < 0)
        operator delete(v46[2]);
      operator delete(v46);
      v46 = v49;
    }
    while (v49);
  }
  if (a27)
    operator delete(a27);
  if (a34)
  {
    p_shared_owners = (unint64_t *)&a34->__shared_owners_;
    do
      v48 = __ldaxr(p_shared_owners);
    while (__stlxr(v48 - 1, p_shared_owners));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *, __n128))a34->__on_zero_shared)(a34, v40);
      std::__shared_weak_count::__release_weak(a34);
    }
  }
  sub_2396FD3E8(v37 - 192);
  _Unwind_Resume(a1);
}

void sub_239B534E0()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B534F4(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF6958;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B53534(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6958;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B5355C(_QWORD *a1@<X0>, uint64_t (***a2)()@<X1>, _OWORD *a3@<X8>)
{
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int8x8_t v10;
  uint8x8_t v11;
  unint64_t v12;
  __int128 v13;
  std::__shared_weak_count *v14;
  float *v15;
  uint64_t v16;
  uint64_t (**v17)();
  uint64_t (**v18)();
  _QWORD *v19;
  int8x8_t v20;
  uint8x8_t v21;
  unint64_t v22;
  float **v23;
  float *v24;
  uint64_t v25;
  uint64_t (**v26)();
  uint64_t (**v27)();
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  float v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  BOOL v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  __int128 v48;
  std::__shared_weak_count *v49;
  unint64_t *p_shared_owners;
  unint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t (**v62)();
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int16 v71;
  uint64_t (**v72)();
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  __int16 v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  char v84;
  _DWORD v85[2];

  v5 = *a2;
  v6 = a1[1];
  v72 = *a2;
  v7 = *(_QWORD *)(v6 + 24);
  if (!v7)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t (***)()))(*(_QWORD *)v7 + 48))(&v82, v7, &v72);
  v8 = v82;
  if (!v82)
  {
    v13 = 0uLL;
    v14 = v83;
    if (v83)
      goto LABEL_78;
    goto LABEL_82;
  }
  v72 = &off_250ADBEA0;
  sub_239827500((uint64_t)&v73, v82 + 8);
  v81 = *(_WORD *)(v8 + 128);
  v9 = (_QWORD *)a1[2];
  v10 = (int8x8_t)v9[1];
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8(v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v12 = (unint64_t)v5;
      if (*(_QWORD *)&v10 <= (unint64_t)v5)
        v12 = (unint64_t)v5 % *(_QWORD *)&v10;
    }
    else
    {
      v12 = (*(_QWORD *)&v10 - 1) & (unint64_t)v5;
    }
    v15 = *(float **)(*v9 + 8 * v12);
    if (v15)
    {
      v15 = *(float **)v15;
      if (v15)
      {
        if (v11.u32[0] < 2uLL)
        {
          v16 = *(_QWORD *)&v10 - 1;
          while (1)
          {
            v18 = (uint64_t (**)())*((_QWORD *)v15 + 1);
            if (v18 == v5)
            {
              if (*((uint64_t (***)())v15 + 2) == v5)
                goto LABEL_26;
            }
            else if (((unint64_t)v18 & v16) != v12)
            {
              goto LABEL_25;
            }
            v15 = *(float **)v15;
            if (!v15)
              goto LABEL_26;
          }
        }
        do
        {
          v17 = (uint64_t (**)())*((_QWORD *)v15 + 1);
          if (v17 == v5)
          {
            if (*((uint64_t (***)())v15 + 2) == v5)
              break;
          }
          else
          {
            if ((unint64_t)v17 >= *(_QWORD *)&v10)
              v17 = (uint64_t (**)())((unint64_t)v17 % *(_QWORD *)&v10);
            if (v17 != (uint64_t (**)())v12)
              goto LABEL_25;
          }
          v15 = *(float **)v15;
        }
        while (v15);
      }
    }
  }
  else
  {
LABEL_25:
    v15 = 0;
  }
LABEL_26:
  v19 = (_QWORD *)a1[3];
  v20 = (int8x8_t)v19[1];
  if (!*(_QWORD *)&v20)
    goto LABEL_77;
  v21 = (uint8x8_t)vcnt_s8(v20);
  v21.i16[0] = vaddlv_u8(v21);
  if (v21.u32[0] > 1uLL)
  {
    v22 = (unint64_t)v5;
    if (*(_QWORD *)&v20 <= (unint64_t)v5)
      v22 = (unint64_t)v5 % *(_QWORD *)&v20;
  }
  else
  {
    v22 = (*(_QWORD *)&v20 - 1) & (unint64_t)v5;
  }
  v23 = *(float ***)(*v19 + 8 * v22);
  if (!v23)
    goto LABEL_77;
  v24 = *v23;
  if (!v24)
    goto LABEL_77;
  if (v21.u32[0] < 2uLL)
  {
    v25 = *(_QWORD *)&v20 - 1;
    while (1)
    {
      v27 = (uint64_t (**)())*((_QWORD *)v24 + 1);
      if (v27 == v5)
      {
        if (*((uint64_t (***)())v24 + 2) == v5)
          goto LABEL_47;
      }
      else if (((unint64_t)v27 & v25) != v22)
      {
        goto LABEL_77;
      }
      v24 = *(float **)v24;
      if (!v24)
        goto LABEL_77;
    }
  }
  while (1)
  {
    v26 = (uint64_t (**)())*((_QWORD *)v24 + 1);
    if (v26 == v5)
      break;
    if ((unint64_t)v26 >= *(_QWORD *)&v20)
      v26 = (uint64_t (**)())((unint64_t)v26 % *(_QWORD *)&v20);
    if (v26 != (uint64_t (**)())v22)
      goto LABEL_77;
LABEL_36:
    v24 = *(float **)v24;
    if (!v24)
      goto LABEL_77;
  }
  if (*((uint64_t (***)())v24 + 2) != v5)
    goto LABEL_36;
LABEL_47:
  if (v15)
  {
    v28 = v82;
    v29 = *(_DWORD *)(v82 + 112);
    v30 = *(_DWORD *)(v82 + 116);
    v31 = v24[7];
    v32 = (float)(v24[6] * (float)v29);
    v33 = (float)(v31 * (float)v30);
    v34 = (float)(v15[6] * (float)v29);
    v35 = (float)(v15[7] * (float)v30);
    v36 = v29 - 1;
    if (v36 > v32)
      v37 = v32 + 1;
    else
      v37 = v32 - (v36 == v32);
    if ((((_BYTE)v32 - (_BYTE)v34) & 1) != 0)
      v38 = v32;
    else
      v38 = v37;
    if (v30 - 1 > v33)
      v39 = v33 + 1;
    else
      v39 = v33 - (v30 - 1 == v33);
    if ((((_BYTE)v33 - (_BYTE)v35) & 1) != 0)
      v39 = (float)(v31 * (float)v30);
    v40 = v38 >= v34;
    v41 = v38 - v34;
    if (!v40)
    {
      v59 = 256;
      goto LABEL_84;
    }
    v40 = v39 >= v35;
    v42 = v39 - v35;
    if (!v40)
    {
      v59 = 257;
LABEL_84:
      sub_239A444D4((uint64_t)"unknown file", v59, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v85[0] = v41 + 1;
    v85[1] = v42 + 1;
    v84 = 0;
    v62 = &off_250ADBEA0;
    sub_23949C9B0(v85, &v84, &v63);
    v43 = DWORD2(v69);
    if (DWORD2(v69) && HIDWORD(v69))
    {
      v44 = 0;
      v45 = 1;
      do
      {
        if (v45)
        {
          v46 = 0;
          v47 = v44 + v34;
          do
          {
            *(_BYTE *)(*((_QWORD *)&v64 + 1) + HIDWORD(v70) * v46 + (_DWORD)v70 * v44) = *(_BYTE *)(*(_QWORD *)(v28 + 80)
                                                                                                  + *(_DWORD *)(v28 + 124) * (v35 + v46)
                                                                                                  + *(_DWORD *)(v28 + 120) * v47);
            *(_BYTE *)(*((_QWORD *)&v64 + 1) + HIDWORD(v70) * v46 + (_DWORD)v70 * v44 + 1) = *(_BYTE *)(*(_QWORD *)(v28 + 80) + *(_DWORD *)(v28 + 124) * (v35 + v46) + *(_DWORD *)(v28 + 120) * v47 + 1);
            *(_BYTE *)(*((_QWORD *)&v64 + 1) + HIDWORD(v70) * v46 + (_DWORD)v70 * v44 + 2) = *(_BYTE *)(*(_QWORD *)(v28 + 80) + *(_DWORD *)(v28 + 124) * (v35 + v46) + *(_DWORD *)(v28 + 120) * v47 + 2);
            ++v46;
            v45 = HIDWORD(v69);
          }
          while (v46 < HIDWORD(v69));
          v43 = DWORD2(v69);
        }
        ++v44;
      }
      while (v44 < v43);
    }
    v48 = v63;
    v63 = 0uLL;
    v49 = (std::__shared_weak_count *)*((_QWORD *)&v73 + 1);
    v73 = v48;
    if (v49)
    {
      p_shared_owners = (unint64_t *)&v49->__shared_owners_;
      do
        v51 = __ldaxr(p_shared_owners);
      while (__stlxr(v51 - 1, p_shared_owners));
      if (!v51)
      {
        ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
        std::__shared_weak_count::__release_weak(v49);
      }
    }
    v77 = v67;
    v78 = v68;
    v79 = v69;
    v80 = v70;
    v74 = v64;
    v75 = v65;
    v76 = v66;
    v81 = v71;
    sub_239416DA0((uint64_t)&v63);
    nullsub_4(&v62);
  }
LABEL_77:
  v52 = operator new(0xA0uLL);
  v52[1] = 0;
  v52[2] = 0;
  v52[3] = &off_250ADBEA0;
  *v52 = &off_250ADD758;
  v53 = v73;
  v73 = 0uLL;
  v54 = v78;
  *((_OWORD *)v52 + 6) = v77;
  *((_OWORD *)v52 + 7) = v54;
  *((_OWORD *)v52 + 8) = v79;
  v52[18] = v80;
  v55 = v74;
  *((_OWORD *)v52 + 2) = v53;
  *((_OWORD *)v52 + 3) = v55;
  v56 = v76;
  *((_OWORD *)v52 + 4) = v75;
  *((_OWORD *)v52 + 5) = v56;
  *((_WORD *)v52 + 76) = v81;
  *(_QWORD *)&v53 = v52 + 3;
  *((_QWORD *)&v53 + 1) = v52;
  v60 = v53;
  sub_239416DA0((uint64_t)&v73);
  nullsub_4(&v72);
  v13 = v60;
  v14 = v83;
  if (v83)
  {
LABEL_78:
    v57 = (unint64_t *)&v14->__shared_owners_;
    do
      v58 = __ldaxr(v57);
    while (__stlxr(v58 - 1, v57));
    if (!v58)
    {
      v61 = v13;
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v13 = v61;
    }
  }
LABEL_82:
  *a3 = v13;
}

void sub_239B53AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;
  uint64_t v29;
  __n128 v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;

  nullsub_4(&a11);
  sub_239416DA0(v28);
  v31 = nullsub_4(&a28);
  v32 = *(std::__shared_weak_count **)(v29 - 104);
  if (v32)
  {
    p_shared_owners = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v32->__on_zero_shared)(v32, v31);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239B53B54()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B53B68(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = &off_250AF6910;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

__n128 sub_239B53BB0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  *(_QWORD *)a2 = &off_250AF6910;
  result = *(__n128 *)(a1 + 8);
  v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B53BE0(uint64_t a1@<X0>, unint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint32x2_t *v8;
  unsigned int v9;
  unsigned int v10;
  unsigned __int8 *v11;
  uint32x2_t v12;
  BOOL v13;
  uint32x2_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned __int8 *v26;
  int32x4_t v27;
  unint64_t v28;
  unsigned int v29;
  unsigned __int8 *v30;
  uint64_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  uint32x4_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int32x4_t v41;
  int32x4_t v42;
  int16x8_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t (**v52)();
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  uint32x2_t *v60;
  float v61;
  os_unfair_lock_s *v62;
  float v63;
  uint64_t v65;
  uint32x2_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  float *v70;
  uint64_t v71;
  uint32x2_t v72;
  _QWORD *v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  BOOL v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  __int128 v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  uint64_t *v91;
  _QWORD *v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  unint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  float32x2_t v99;
  _OWORD *v100;
  float v101;
  float v102;
  float64x2_t v103;
  __int128 v104;
  __int128 v105;
  unint64_t *v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  __int16 v112;
  uint64_t (**v113)();
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  __int16 v119;
  uint32x2_t *v120;
  std::__shared_weak_count *v121;
  uint64_t (**v122)();
  char v123;
  _DWORD v124[4];

  v122 = (uint64_t (**)())*a2;
  v5 = v122;
  v6 = *(_QWORD *)(a1 + 8);
  v113 = v122;
  v7 = *(_QWORD *)(v6 + 24);
  if (!v7)
    sub_2394172E0();
  (*(void (**)(uint32x2_t **__return_ptr, uint64_t, uint64_t (***)()))(*(_QWORD *)v7 + 48))(&v120, v7, &v113);
  v8 = v120;
  if (!v120)
  {
    v15 = 0uLL;
    v16 = v121;
    if (!v121)
      goto LABEL_100;
    goto LABEL_96;
  }
  v100 = a3;
  v9 = v120[8].u32[0];
  v10 = v120[8].u32[1];
  sub_2395647D4((uint64_t)v120, &v113);
  v11 = (unsigned __int8 *)v8[7];
  v12 = v8[8];
  if (v8[10].i8[0])
    v13 = v11 == 0;
  else
    v13 = 1;
  if (v13)
  {
    v14 = (uint32x2_t)HIDWORD(*(_QWORD *)&v12);
  }
  else
  {
    v14 = v8[1];
    v17 = (std::__shared_weak_count *)v8[2];
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
      do
        v20 = __ldaxr(p_shared_owners);
      while (__stlxr(v20 - 1, p_shared_owners));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    (*(void (**)(uint32x2_t, _QWORD, const char *))(**(_QWORD **)&v14 + 88))(v14, 0, "unknown location");
    v11 = (unsigned __int8 *)v8[7];
    v14.i32[0] = v8[8].i32[1];
  }
  v21 = v8[9].u32[1];
  v22 = 0;
  v23 = 0;
  v24 = (v21 * v14.i32[0]);
  if ((_DWORD)v24)
  {
    v25 = 0;
    v26 = &v11[v24];
    v27.i64[0] = 0x800000008;
    v27.i64[1] = 0x800000008;
    v28 = v12.u32[0] - (unint64_t)(v12.i8[0] & 7);
    do
    {
      if (v12.i32[0])
      {
        if (v12.u32[0] < 8uLL)
        {
          v29 = 0;
          v30 = v11;
          do
          {
LABEL_27:
            v47 = *v30++;
            v46 = v47;
            if (v29 <= v22)
              v48 = v22;
            else
              v48 = v29;
            if (v25 <= v23)
              v49 = v23;
            else
              v49 = v25;
            if (v9 >= v29)
              v50 = v29;
            else
              v50 = v9;
            if (v10 >= v25)
              v51 = v25;
            else
              v51 = v10;
            if (v46)
            {
              v22 = v48;
              v23 = v49;
              v9 = v50;
              v10 = v51;
            }
            ++v29;
          }
          while (v30 != &v11[v12.u32[0]]);
          goto LABEL_20;
        }
        v31 = 0;
        v30 = &v11[v28];
        v32 = (int8x16_t)vdupq_n_s32(v22);
        v33 = (int8x16_t)vdupq_n_s32(v23);
        v34 = (int8x16_t)vdupq_n_s32(v9);
        v35 = (int8x16_t)vdupq_n_s32(v10);
        v36 = v32;
        v37 = v33;
        v38 = (uint32x4_t)vdupq_n_s32(v25);
        v39 = v34;
        v40 = v35;
        v41 = (int32x4_t)xmmword_239EC6870;
        v42 = (int32x4_t)xmmword_239EC8190;
        do
        {
          v43 = vceqzq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)&v11[v31]));
          v44 = (int8x16_t)vmovl_s16(*(int16x4_t *)v43.i8);
          v45 = (int8x16_t)vmovl_high_s16(v43);
          v36 = vbslq_s8(v45, v36, (int8x16_t)vmaxq_u32((uint32x4_t)v42, (uint32x4_t)v36));
          v32 = vbslq_s8(v44, v32, (int8x16_t)vmaxq_u32((uint32x4_t)v41, (uint32x4_t)v32));
          v37 = vbslq_s8(v45, v37, (int8x16_t)vmaxq_u32(v38, (uint32x4_t)v37));
          v33 = vbslq_s8(v44, v33, (int8x16_t)vmaxq_u32(v38, (uint32x4_t)v33));
          v39 = vbslq_s8(v45, v39, (int8x16_t)vminq_u32((uint32x4_t)v39, (uint32x4_t)v42));
          v34 = vbslq_s8(v44, v34, (int8x16_t)vminq_u32((uint32x4_t)v34, (uint32x4_t)v41));
          v40 = vbslq_s8(v45, v40, (int8x16_t)vminq_u32((uint32x4_t)v40, v38));
          v35 = vbslq_s8(v44, v35, (int8x16_t)vminq_u32((uint32x4_t)v35, v38));
          v31 += 8;
          v41 = vaddq_s32(v41, v27);
          v42 = vaddq_s32(v42, v27);
        }
        while (v28 != v31);
        v10 = vminvq_u32(vminq_u32((uint32x4_t)v35, (uint32x4_t)v40));
        v9 = vminvq_u32(vminq_u32((uint32x4_t)v34, (uint32x4_t)v39));
        v23 = vmaxvq_u32(vmaxq_u32((uint32x4_t)v33, (uint32x4_t)v37));
        v22 = vmaxvq_u32(vmaxq_u32((uint32x4_t)v32, (uint32x4_t)v36));
        v29 = v12.i32[0] - (v12.i8[0] & 7);
        if ((v12.i8[0] & 7) != 0)
          goto LABEL_27;
      }
LABEL_20:
      v11 += v21;
      ++v25;
    }
    while (v11 != v26);
  }
  v52 = v113;
  v113 = 0;
  if (v52)
  {
    (*((void (**)(uint64_t (**)()))*v52 + 1))(v52);
    v14.i32[0] = v8[8].i32[1];
  }
  v53 = v8[8].u32[0];
  if (v22 - v9 < 0x40 || v23 - v10 <= 0x3F)
  {
    v54 = (v10 + v23) >> 1;
    v55 = (v9 + v22) >> 1;
    if (v55 <= 0x20)
      v56 = 32;
    else
      v56 = (v9 + v22) >> 1;
    v9 = v56 - 32;
    v57 = v55 + 31;
    if (v57 >= v53 - 1)
      v22 = v53 - 1;
    else
      v22 = v57;
    if ((v10 + v23) >> 1 <= 0x20)
      v58 = 32;
    else
      v58 = (v10 + v23) >> 1;
    v10 = v58 - 32;
    v59 = v54 + 31;
    if (v59 >= v14.i32[0] - 1)
      v23 = v14.i32[0] - 1;
    else
      v23 = v59;
  }
  v60 = v120;
  v113 = &off_250ADB628;
  sub_23982619C((uint64_t)&v114, (uint64_t)&v120[1]);
  v61 = (float)v22 / (float)v53;
  v119 = v60[10].i16[0];
  v62 = *(os_unfair_lock_s **)(a1 + 32);
  v102 = (float)v9 / (float)v53;
  v63 = (float)v23 / (float)v14.u32[0];
  v101 = (float)v10 / (float)v14.u32[0];
  if (v102 > v61 || (float)((float)v10 / (float)v14.u32[0]) > v63)
  {
    sub_2397A15E8(v62);
    v65 = *(_QWORD *)(a1 + 40);
    if (!*(_BYTE *)(v65 + 40))
      sub_2394875CC();
    v66 = v120[8];
    LODWORD(v106) = v5;
    v67 = sub_239B54418(v65, v5, &v106);
    *(uint32x2_t *)((char *)v67 + 20) = v66;
    *((_DWORD *)v67 + 7) = 0;
    *((_DWORD *)v67 + 8) = 0;
    sub_2397A1600(*(os_unfair_lock_s **)(a1 + 32));
  }
  else
  {
    sub_2397A15E8(v62);
    v68 = *(_QWORD *)(a1 + 16);
    v106 = (unint64_t *)&v122;
    v99 = (float32x2_t)__PAIR64__(LODWORD(v101), LODWORD(v102));
    sub_23955C280(v68, (unint64_t *)&v122, (uint64_t)&unk_239EC6E98, &v106)[3] = __PAIR64__(LODWORD(v101), LODWORD(v102));
    v69 = *(_QWORD *)(a1 + 24);
    v106 = (unint64_t *)&v122;
    v70 = (float *)sub_23955C280(v69, (unint64_t *)&v122, (uint64_t)&unk_239EC6E98, &v106);
    v70[6] = v61;
    v70[7] = v63;
    v71 = *(_QWORD *)(a1 + 40);
    if (!*(_BYTE *)(v71 + 40))
      sub_2394875CC();
    v72 = v120[8];
    LODWORD(v106) = (_DWORD)v122;
    v73 = sub_239B54418(v71, v122, &v106);
    *(uint32x2_t *)((char *)v73 + 20) = v72;
    *(_QWORD *)((char *)v73 + 28) = __PAIR64__(LODWORD(v101), LODWORD(v102));
    sub_2397A1600(*(os_unfair_lock_s **)(a1 + 32));
    v74 = (float)(v61 * (float)DWORD2(v117));
    v75 = (float)(v63 * (float)HIDWORD(v117));
    v76 = (float)(v102 * (float)DWORD2(v117));
    v77 = (float)(v101 * (float)HIDWORD(v117));
    if (DWORD2(v117) - 1 > v74)
      v78 = v74 + 1;
    else
      v78 = v74 - (DWORD2(v117) - 1 == v74);
    if ((((_BYTE)v74 - (_BYTE)v76) & 1) != 0)
      v78 = (float)(v61 * (float)DWORD2(v117));
    if (HIDWORD(v117) - 1 > v75)
      v79 = v75 + 1;
    else
      v79 = v75 - (HIDWORD(v117) - 1 == v75);
    if ((((_BYTE)v75 - (_BYTE)v77) & 1) != 0)
      v79 = (float)(v63 * (float)HIDWORD(v117));
    v80 = v78 >= v76;
    v81 = v78 - v76;
    if (!v80)
    {
      v98 = 256;
      goto LABEL_104;
    }
    v80 = v79 >= v77;
    v82 = v79 - v77;
    if (!v80)
    {
      v98 = 257;
LABEL_104:
      sub_239A444D4((uint64_t)"unknown file", v98, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v124[0] = v81 + 1;
    v124[1] = v82 + 1;
    v123 = 0;
    v106 = (unint64_t *)&off_250ADB628;
    sub_23949E6D4(v124, (void **)&v123, &v107);
    v83 = DWORD2(v110);
    if (DWORD2(v110) && HIDWORD(v110))
    {
      v84 = 0;
      v85 = 1;
      do
      {
        if (v85)
        {
          v86 = 0;
          do
          {
            *(_BYTE *)(*((_QWORD *)&v108 + 1) + (_DWORD)v111 * v84 + HIDWORD(v111) * v86) = *(_BYTE *)(v117 + (_DWORD)v118 * (v84 + v76) + HIDWORD(v118) * (v77 + v86));
            ++v86;
            v85 = HIDWORD(v110);
          }
          while (v86 < HIDWORD(v110));
          v83 = DWORD2(v110);
        }
        ++v84;
      }
      while (v84 < v83);
    }
    v87 = v107;
    v107 = 0uLL;
    v88 = (std::__shared_weak_count *)*((_QWORD *)&v114 + 1);
    v114 = v87;
    if (v88)
    {
      v89 = (unint64_t *)&v88->__shared_owners_;
      do
        v90 = __ldaxr(v89);
      while (__stlxr(v90 - 1, v89));
      if (!v90)
      {
        ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
        std::__shared_weak_count::__release_weak(v88);
      }
    }
    v115 = v108;
    v116 = v109;
    v117 = v110;
    v118 = v111;
    v119 = v112;
    sub_239416DA0((uint64_t)&v107);
    nullsub_4(&v106);
    v103 = *((float64x2_t *)sub_2395D7BEC(*(_QWORD *)(a1 + 48), v122) + 1);
    *((float64x2_t *)sub_2395D7BEC(*(_QWORD *)(a1 + 48), v122) + 1) = vsubq_f64(v103, vcvtq_f64_f32(vmul_f32(v99, vcvt_f32_u32(v120[8]))));
    v91 = sub_2395D7BEC(*(_QWORD *)(a1 + 48), v122);
    v91[25] = *((_QWORD *)&v117 + 1);
  }
  v92 = operator new(0x70uLL);
  v92[1] = 0;
  v92[2] = 0;
  v92[3] = &off_250ADB628;
  *v92 = &off_250ADB878;
  v93 = v114;
  v94 = v115;
  v114 = 0uLL;
  *((_OWORD *)v92 + 2) = v93;
  *((_OWORD *)v92 + 3) = v94;
  v95 = v117;
  *((_OWORD *)v92 + 4) = v116;
  *((_OWORD *)v92 + 5) = v95;
  v92[12] = v118;
  *((_WORD *)v92 + 52) = v119;
  *(_QWORD *)&v93 = v92 + 3;
  *((_QWORD *)&v93 + 1) = v92;
  v104 = v93;
  sub_239416DA0((uint64_t)&v114);
  nullsub_4(&v113);
  v15 = v104;
  a3 = v100;
  v16 = v121;
  if (v121)
  {
LABEL_96:
    v96 = (unint64_t *)&v16->__shared_owners_;
    do
      v97 = __ldaxr(v96);
    while (__stlxr(v97 - 1, v96));
    if (!v97)
    {
      v105 = v15;
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
      v15 = v105;
    }
  }
LABEL_100:
  *a3 = v15;
}

void sub_239B5436C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  __n128 v32;
  std::__shared_weak_count *v33;
  unint64_t *p_shared_owners;
  unint64_t v35;

  nullsub_4(&a19);
  sub_239416DA0(a16);
  v32 = nullsub_4(&a30);
  v33 = *(std::__shared_weak_count **)(v30 - 152);
  if (v33)
  {
    p_shared_owners = (unint64_t *)&v33->__shared_owners_;
    do
      v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v33->__on_zero_shared)(v33, v32);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_239B54418(uint64_t a1, unsigned int a2, _DWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t prime;
  unint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v6 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = ((_DWORD)v7 - 1) & a2;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (*((_DWORD *)v10 + 4) == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (*((_DWORD *)v10 + 4) == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v10 = operator new(0x28uLL);
  *v10 = 0;
  v10[1] = v6;
  *((_DWORD *)v10 + 4) = *a3;
  *(_QWORD *)((char *)v10 + 28) = 0;
  *(_QWORD *)((char *)v10 + 20) = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (v7 && (float)(v14 * (float)v7) >= v13)
  {
    v6 = v3;
  }
  else
  {
    v15 = 1;
    if (v7 >= 3)
      v15 = (v7 & (v7 - 1)) != 0;
    v16 = v15 | (2 * v7);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      prime = v17;
    else
      prime = v16;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_35;
    if (prime < v7)
    {
      v19 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v20 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v20.i16[0] = vaddlv_u8(v20), v20.u32[0] > 1uLL))
      {
        v19 = std::__next_prime(v19);
      }
      else
      {
        v21 = 1 << -(char)__clz(v19 - 1);
        if (v19 >= 2)
          v19 = v21;
      }
      if (prime <= v19)
        prime = v19;
      if (prime < v7)
LABEL_35:
        sub_239427FE0(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6)
        v6 %= v7;
    }
    else
    {
      v6 = ((_DWORD)v7 - 1) & v6;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v6);
  if (v23)
  {
    *v10 = *v23;
LABEL_58:
    *v23 = v10;
    goto LABEL_59;
  }
  *v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(v22 + 8 * v6) = a1 + 16;
  if (*v10)
  {
    v24 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v24 >= v7)
        v24 %= v7;
    }
    else
    {
      v24 &= v7 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239B546E8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239B54700()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B54714(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF68C8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B54754(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF68C8;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B5477C(uint64_t a1@<X0>, float32x2_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  float32x2_t v17;
  _OWORD v18[4];
  uint64_t v19;
  __int16 v20;
  float32x2_t v21;
  uint32x2_t *v22;
  std::__shared_weak_count *v23;

  v5 = *(_QWORD *)(a1 + 24);
  v17 = *a2;
  v6 = *(_QWORD *)(v5 + 24);
  if (!v6)
    sub_2394172E0();
  (*(void (**)(uint32x2_t **__return_ptr, uint64_t, float32x2_t *))(*(_QWORD *)v6 + 48))(&v22, v6, &v17);
  if (v22)
  {
    v17.i32[0] = **(_DWORD **)(a1 + 16);
    v17.i32[1] = v17.i32[0];
    sub_2397104F0(v22 + 8, &v17, &v21);
    sub_2397161B4(&v17, v22, *(_QWORD *)(a1 + 8), 1, v21.f32[0], v21.f32[1]);
    v7 = operator new(0x70uLL);
    v7[1] = 0;
    v7[2] = 0;
    *v7 = &off_250ADB878;
    v7[3] = &off_250ADB628;
    v8 = v18[0];
    v18[0] = 0uLL;
    v9 = v18[1];
    *((_OWORD *)v7 + 2) = v8;
    *((_OWORD *)v7 + 3) = v9;
    v10 = v18[3];
    *((_OWORD *)v7 + 4) = v18[2];
    *((_OWORD *)v7 + 5) = v10;
    v7[12] = v19;
    *((_WORD *)v7 + 52) = v20;
    *(_QWORD *)&v8 = v7 + 3;
    *((_QWORD *)&v8 + 1) = v7;
    v15 = v8;
    sub_239416DA0((uint64_t)v18);
    nullsub_4(&v17);
    v11 = v15;
    v12 = v23;
    if (!v23)
      goto LABEL_10;
  }
  else
  {
    v11 = 0uLL;
    v12 = v23;
    if (!v23)
      goto LABEL_10;
  }
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    v16 = v11;
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
    v11 = v16;
  }
LABEL_10:
  *a3 = v11;
}

void sub_239B54944()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B54958(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF6880;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B54998(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6880;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B549C0(uint64_t a1@<X0>, float32x2_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  float32x2_t v18;
  _OWORD v19[7];
  uint64_t v20;
  __int16 v21;
  float32x2_t v22;
  uint32x2_t *v23;
  std::__shared_weak_count *v24;

  v5 = *(_QWORD *)(a1 + 24);
  v18 = *a2;
  v6 = *(_QWORD *)(v5 + 24);
  if (!v6)
    sub_2394172E0();
  (*(void (**)(uint32x2_t **__return_ptr, uint64_t, float32x2_t *))(*(_QWORD *)v6 + 48))(&v23, v6, &v18);
  if (v23)
  {
    v18.i32[0] = **(_DWORD **)(a1 + 16);
    v18.i32[1] = v18.i32[0];
    sub_2397104F0(v23 + 14, &v18, &v22);
    sub_239716718(&v18, v23, *(_QWORD *)(a1 + 8), 1, v22.f32[0], v22.f32[1]);
    v7 = operator new(0xA0uLL);
    v7[1] = 0;
    v7[2] = 0;
    *v7 = &off_250ADD758;
    v7[3] = &off_250ADBEA0;
    v8 = v19[0];
    v19[0] = 0uLL;
    v9 = v19[5];
    *((_OWORD *)v7 + 6) = v19[4];
    *((_OWORD *)v7 + 7) = v9;
    *((_OWORD *)v7 + 8) = v19[6];
    v7[18] = v20;
    v10 = v19[1];
    *((_OWORD *)v7 + 2) = v8;
    *((_OWORD *)v7 + 3) = v10;
    v11 = v19[3];
    *((_OWORD *)v7 + 4) = v19[2];
    *((_OWORD *)v7 + 5) = v11;
    *((_WORD *)v7 + 76) = v21;
    *(_QWORD *)&v8 = v7 + 3;
    *((_QWORD *)&v8 + 1) = v7;
    v16 = v8;
    sub_239416DA0((uint64_t)v19);
    nullsub_4(&v18);
    v12 = v16;
    v13 = v24;
    if (!v24)
      goto LABEL_10;
  }
  else
  {
    v12 = 0uLL;
    v13 = v24;
    if (!v24)
      goto LABEL_10;
  }
  p_shared_owners = (unint64_t *)&v13->__shared_owners_;
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    v17 = v12;
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v12 = v17;
  }
LABEL_10:
  *a3 = v12;
}

_QWORD *sub_239B54B98(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF6838;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_239B54C24(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF6838;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B54CC0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AF6838;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
  {
    if (v5 == a1 + 40)
    {
      v2[8] = v2 + 5;
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
      return v2;
    }
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  }
  v2[8] = v5;
  return v2;
}

void sub_239B54D7C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
LABEL_6:
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B54DC8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AF6838;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_239B54E98(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B54ED4(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = (_QWORD *)a1[4];
  if (result == v2)
  {
    v7 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239B54F58(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

void sub_239B54FD8(uint64_t a1, float *a2)
{
  float v2;
  void *__p;
  char v4;

  v2 = *a2;
  v4 = 0;
  LOBYTE(__p) = 0;
  sub_2396FD7C8(a1 + 8, (uint64_t)&__p, v2);
  if (v4 < 0)
    operator delete(__p);
}

void sub_239B55020(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B5503C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF67F0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B550A0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF67F0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B55114(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF67F0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B55164(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF67F0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B55194(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B551EC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

BOOL sub_239B55244(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t (*v18)(uint64_t, uint64_t *, uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unsigned __int8 v24;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v5 = *a3;
  v6 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v18 = sub_239B2EBE8;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = v4;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v18 = sub_239B2EBE8;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = 0;
  }
  v24 = 0;
  v23 = v5;
  sub_239B55430((uint64_t)&v18, (uint64_t)&v24);
  v10 = v22;
  if (v22)
  {
    v11 = (unint64_t *)&v22->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = v24;
  if (v4)
  {
    v14 = (unint64_t *)&v4->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    do
      v16 = __ldaxr(v14);
    while (__stlxr(v16 - 1, v14));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v13 != 0;
}

void sub_239B55388(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;

  v3 = v2;
  if (v3)
  {
    v5 = v3;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v1)
  {
    v8 = (unint64_t *)&v1->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
    do
      v10 = __ldaxr(v8);
    while (__stlxr(v10 - 1, v8));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B55430(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)());
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t (***v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unsigned int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  pthread_cond_t v28;
  pthread_cond_t v29;
  pthread_mutex_t v30;
  uint64_t (**v31)();
  __int128 v32;
  uint64_t (***v33)();
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  sub_2397A1618(&v30);
  v21 = 0x7FFFFFFF;
  pthread_cond_init(&v28, 0);
  pthread_cond_init(&v29, 0);
  *(_QWORD *)&v4 = &v21;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(uint64_t (**)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)()))a1;
  v7 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v5 >> 1));
  if ((v5 & 1) != 0)
    v6 = *(uint64_t (**)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)()))(*v7 + v6);
  *((_QWORD *)&v4 + 1) = a2;
  v8 = *(std::__shared_weak_count **)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 24);
  v20 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  v11 = *(_QWORD *)(a1 + 40);
  v31 = &off_250AF6C60;
  v32 = v4;
  v33 = &v31;
  v12 = v6(v7, &v19, v11, &v31);
  v13 = v33;
  if (v33 == &v31)
  {
    v14 = 4;
    v13 = &v31;
    goto LABEL_10;
  }
  if (v33)
  {
    v14 = 5;
LABEL_10:
    (*v13)[v14]();
  }
  v15 = v20;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      if (!v12)
        return sub_2395C29C4((uint64_t)&v21);
      goto LABEL_16;
    }
  }
  if (v12)
  {
LABEL_16:
    sub_2395BFB54(&v21);
    sub_2395C2A4C((uint64_t)&v21);
  }
  return sub_2395C29C4((uint64_t)&v21);
}

void sub_239B555FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B5567C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_239B556A4()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B556B8(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF6C60;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B556F0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6C60;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B55710(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

_QWORD *sub_239B55744(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF67A8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B557A8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF67A8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B5581C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF67A8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B5586C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF67A8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B5589C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B558F4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B5594C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4D474;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4D6F8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B559F0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B55A34(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF6718;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B55A98(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF6718;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B55B0C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF6718;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B55B5C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF6718;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B55B8C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B55BE4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

BOOL sub_239B55C3C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t (*v18)(uint64_t, uint64_t *, uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unsigned __int8 v24;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v5 = *a3;
  v6 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v18 = sub_239A9AA50;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = v4;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v18 = sub_239A9AA50;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = 0;
  }
  v24 = 0;
  v23 = v5;
  sub_239B2E920((uint64_t)&v18, (uint64_t)&v24);
  v10 = v22;
  if (v22)
  {
    v11 = (unint64_t *)&v22->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = v24;
  if (v4)
  {
    v14 = (unint64_t *)&v4->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    do
      v16 = __ldaxr(v14);
    while (__stlxr(v16 - 1, v14));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v13 != 0;
}

void sub_239B55D80(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;

  v3 = v2;
  if (v3)
  {
    v5 = v3;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v1)
  {
    v8 = (unint64_t *)&v1->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
    do
      v10 = __ldaxr(v8);
    while (__stlxr(v10 - 1, v8));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B55E28(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF66D0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B55E8C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF66D0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B55F00(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF66D0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B55F50(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF66D0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B55F80(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B55FD8(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B56030(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4DD70;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4DFF4((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B560D4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B5611C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B56130(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF65F8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B56170(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF65F8;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void *sub_239B56198(uint64_t a1)
{
  uint64_t v2;
  std::chrono::system_clock::time_point v3;
  void *result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  char *v15;
  char *v16;
  rusage v17;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v20;

  v2 = *(_QWORD *)(a1 + 8);
  v3.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)(v2 + 40) = v3;
  *(double *)(v2 + 48) = (double)(v3.__d_.__rep_ - *(_QWORD *)(v2 + 32)) / 1000000.0;
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(v2 + 64) = (float)((float)v20 * 0.00097656) * 0.00097656;
  *(_BYTE *)(v2 + 96) = 0;
  result = (void *)getrusage(0, &v17);
  *(float *)(v2 + 56) = (float)((float)v17.ru_maxrss * 0.00097656) * 0.00097656;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(unsigned __int8 *)(v5 + 152);
  v8 = *(_OWORD *)(v6 + 12);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)v6;
  *(_OWORD *)(v5 + 60) = v8;
  if (v7)
  {
    *(_QWORD *)(v5 + 80) = *(_QWORD *)(v6 + 32);
    *(_OWORD *)(v5 + 88) = *(_OWORD *)(v6 + 40);
    v9 = *(_QWORD *)(v6 + 56);
    *(_DWORD *)(v5 + 112) = *(_DWORD *)(v6 + 64);
    *(_QWORD *)(v5 + 104) = v9;
    if (v5 + 48 != v6)
      result = sub_23942156C((_QWORD *)(v5 + 120), *(char **)(v6 + 72), *(char **)(v6 + 80), (uint64_t)(*(_QWORD *)(v6 + 80) - *(_QWORD *)(v6 + 72)) >> 2);
    *(_BYTE *)(v5 + 144) = *(_BYTE *)(v6 + 96);
  }
  else
  {
    v10 = *(_OWORD *)(v6 + 32);
    v11 = *(_OWORD *)(v6 + 48);
    *(_DWORD *)(v5 + 112) = *(_DWORD *)(v6 + 64);
    *(_QWORD *)(v5 + 120) = 0;
    *(_OWORD *)(v5 + 80) = v10;
    *(_OWORD *)(v5 + 96) = v11;
    *(_QWORD *)(v5 + 128) = 0;
    *(_QWORD *)(v5 + 136) = 0;
    v13 = *(_BYTE **)(v6 + 72);
    v12 = *(_BYTE **)(v6 + 80);
    v14 = v12 - v13;
    if (v12 != v13)
    {
      if (v14 < 0)
        sub_2394189F8();
      v15 = (char *)operator new(v12 - v13);
      *(_QWORD *)(v5 + 120) = v15;
      *(_QWORD *)(v5 + 128) = v15;
      v16 = &v15[4 * (v14 >> 2)];
      *(_QWORD *)(v5 + 136) = v16;
      result = memcpy(v15, v13, v14);
      *(_QWORD *)(v5 + 128) = v16;
    }
    *(_BYTE *)(v5 + 144) = *(_BYTE *)(v6 + 96);
    *(_BYTE *)(v5 + 152) = 1;
  }
  return result;
}

void sub_239B5634C(_Unwind_Exception *exception_object)
{
  void **v1;
  uint64_t v2;
  void *v4;

  v4 = *v1;
  if (*v1)
  {
    *(_QWORD *)(v2 + 128) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B56368(uint64_t a1, char ***a2, _QWORD *a3)
{
  uint64_t v6;
  task_name_t *v10;
  _QWORD *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  char **v31;
  char *v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t (***v51)();
  uint64_t v52;
  mach_msg_type_number_t *v53;
  uint64_t v54;
  mach_msg_type_number_t v55;
  int v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  _QWORD *v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t (***v73)();
  uint64_t v74;
  mach_msg_type_number_t *v75;
  uint64_t v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t *v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  integer_t *v83;
  uint64_t v84;
  unint64_t *v85;
  unint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  char **v90;
  std::__shared_weak_count *v91;
  std::__shared_weak_count *v92;
  _QWORD v93[3];
  char v94;
  __int128 v95;
  __int128 v96;
  char v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  void *v104;
  void *v105;
  uint64_t v106;
  char v107;
  char v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  char v114;
  uint64_t v115;
  int v116;
  char v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  int v132;
  char v133;
  mach_msg_type_number_t task_info_outCnt[2];
  uint64_t v135;
  void *__p;
  mach_msg_type_number_t *v137;
  uint64_t v138;
  _QWORD v139[3];
  _QWORD *v140;
  _BYTE v141[24];
  _BYTE *v142;
  _QWORD v143[3];
  _QWORD *v144;
  _BYTE v145[24];
  _BYTE *v146;
  uint64_t (**v147)();
  uint64_t v148;
  std::__shared_weak_count *v149;
  uint64_t (***v150)();
  _QWORD v151[3];
  _QWORD *v152;
  _QWORD v153[3];
  _QWORD *v154;
  _BYTE v155[24];
  _BYTE *v156;
  _BYTE v157[24];
  _BYTE *v158;
  _BYTE v159[24];
  _BYTE *v160;
  integer_t task_info_out[6];
  integer_t *v162;
  _QWORD v163[3];
  _QWORD *v164;
  unint64_t v165;
  uint64_t v166;

  v166 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 88) == *(_QWORD *)(a1 + 96)
    || *(_QWORD *)(a1 + 200) == 0
    || *(_QWORD *)(a1 + 216) == 0
    || *(_QWORD *)(a1 + 232) == 0)
  {
    return 3;
  }
  v104 = 0;
  v105 = 0;
  v106 = 0;
  memset(v93, 0, sizeof(v93));
  v94 = 0;
  v95 = 0u;
  v96 = 0u;
  v97 = 0;
  v98 = 0u;
  v99 = 0u;
  v100 = 0u;
  v101 = 0u;
  v102 = 0u;
  v103 = 0;
  v107 = 1;
  *(std::chrono::system_clock::time_point *)((char *)&v101 + 4) = std::chrono::system_clock::now();
  task_info_outCnt[0] = 93;
  v10 = (task_name_t *)MEMORY[0x24BDAEC58];
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, task_info_outCnt))
    *(float *)&v103 = (float)((float)v165 * 0.00097656) * 0.00097656;
  v107 = 1;
  v108 = 1;
  v109 = 1056964608;
  v110 = 0x4000000000000000;
  v111 = 0x12C3F800000;
  v112 = 0x3F8000003F000000;
  v113 = 5;
  v114 = 1;
  v115 = 0x3E4CCCCD00000000;
  v116 = 16;
  v117 = 0;
  v118 = 0x300000015;
  v119 = 1;
  v120 = 0x313E4CCCCDLL;
  v124 = 0u;
  v123 = 0u;
  v122 = 0u;
  v121 = 100000000;
  v125 = 10240;
  v126 = 0x3F80000000000000;
  v127 = 4;
  v128 = 0x3A83126F41200000;
  v129 = 256000;
  v130 = 8000000;
  v131 = 20000000;
  v132 = 1050253722;
  v133 = 1;
  *(std::chrono::system_clock::time_point *)((char *)&v101 + 4) = std::chrono::system_clock::now();
  task_info_outCnt[0] = 93;
  if (!task_info(*v10, 0x16u, task_info_out, task_info_outCnt))
    *(float *)&v103 = (float)((float)v165 * 0.00097656) * 0.00097656;
  v107 = 1;
  v11 = operator new(0x20uLL);
  *v11 = &off_250AF6A30;
  v11[1] = v93;
  v11[2] = a2;
  v160 = v11;
  v12 = *(_QWORD *)(a1 + 232);
  v14 = *(_QWORD *)(a1 + 248);
  v13 = *(std::__shared_weak_count **)(a1 + 256);
  v92 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  sub_2396FDAA8(a3, (uint64_t)v157);
  v17 = a3[3];
  if (!v17)
    goto LABEL_23;
  if ((_QWORD *)v17 != a3)
  {
    v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
LABEL_23:
    v152 = (_QWORD *)v17;
    goto LABEL_25;
  }
  v152 = v151;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v151);
LABEL_25:
  v18 = v153;
  v19 = a3[7];
  if (!v19)
  {
LABEL_28:
    v154 = (_QWORD *)v19;
    goto LABEL_30;
  }
  if ((_QWORD *)v19 != a3 + 4)
  {
    v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
    goto LABEL_28;
  }
  v154 = v153;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v19 + 24))(v19, v153);
LABEL_30:
  v156 = 0;
  v20 = operator new(0x48uLL);
  v21 = v20;
  *v20 = &off_250AF6A78;
  if (v152)
  {
    if (v152 == v151)
    {
      v20[4] = v20 + 1;
      (*(void (**)(_QWORD *))(v151[0] + 24))(v151);
    }
    else
    {
      v20[4] = v152;
      v152 = 0;
    }
  }
  else
  {
    v20[4] = 0;
  }
  if (v154)
  {
    if (v154 == v153)
    {
      v21[8] = v21 + 5;
      (*(void (**)(_QWORD *))(v153[0] + 24))(v153);
    }
    else
    {
      v21[8] = v154;
      v154 = 0;
    }
  }
  else
  {
    v21[8] = 0;
  }
  v156 = v21;
  sub_2396FD600((uint64_t)task_info_out, (uint64_t)v157, (uint64_t)v155);
  v22 = v156;
  if (v156 == v155)
  {
    v23 = 4;
    v22 = v155;
  }
  else
  {
    if (!v156)
      goto LABEL_45;
    v23 = 5;
  }
  (*(void (**)(void))(*v22 + 8 * v23))();
LABEL_45:
  if (v154 == v153)
  {
    v24 = 4;
  }
  else
  {
    if (!v154)
      goto LABEL_50;
    v24 = 5;
    v18 = v154;
  }
  (*(void (**)(_QWORD *))(*v18 + 8 * v24))(v18);
LABEL_50:
  v25 = v152;
  if (v152 == v151)
  {
    v26 = 4;
    v25 = v151;
  }
  else
  {
    if (!v152)
      goto LABEL_55;
    v26 = 5;
  }
  (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_55:
  v27 = v158;
  if (v158 == v157)
  {
    v28 = 4;
    v27 = v157;
    goto LABEL_59;
  }
  if (v158)
  {
    v28 = 5;
LABEL_59:
    (*(void (**)(void))(*v27 + 8 * v28))();
  }
  v29 = (std::__shared_weak_count *)operator new(0xA8uLL);
  v29->__shared_owners_ = 0;
  v30 = (unint64_t *)&v29->__shared_owners_;
  v29->__shared_weak_owners_ = 0;
  v29->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF6AC0;
  v29[1].std::__shared_count = 0u;
  v31 = (char **)&v29[1];
  LOBYTE(v29[4].__vftable) = 0;
  LOBYTE(v29[4].__shared_owners_) = 0;
  LOBYTE(v29[5].__shared_owners_) = 0;
  LOBYTE(v29[5].__shared_weak_owners_) = 0;
  LOBYTE(v29[6].__shared_weak_owners_) = 0;
  *(_OWORD *)&v29[1].__shared_weak_owners_ = 0u;
  *(_OWORD *)&v29[2].__shared_owners_ = 0u;
  LOBYTE(v29[3].__vftable) = 0;
  v32 = (char *)operator new(0xA8uLL);
  *((_QWORD *)v32 + 1) = 0;
  *((_QWORD *)v32 + 2) = 0;
  *(_QWORD *)v32 = &off_250AF6AC0;
  *(_OWORD *)(v32 + 24) = 0u;
  v33 = (void **)(v32 + 24);
  v32[96] = 0;
  v32[104] = 0;
  v32[128] = 0;
  v32[136] = 0;
  v32[160] = 0;
  *(_OWORD *)(v32 + 40) = 0u;
  *(_OWORD *)(v32 + 56) = 0u;
  v32[72] = 0;
  v90 = (char **)(v32 + 24);
  v91 = (std::__shared_weak_count *)v32;
  sub_2396DB4C8();
  v35 = *(_QWORD *)(a1 + 264);
  if (!v35 || !*(_QWORD *)(v35 + 96))
  {
    v40 = *(_QWORD *)(a1 + 216);
    *(_QWORD *)task_info_outCnt = &off_250AF6AF8;
    v135 = v12;
    v137 = task_info_outCnt;
    if (v13)
    {
      v41 = (unint64_t *)&v13->__shared_owners_;
      do
        v42 = __ldxr(v41);
      while (__stxr(v42 + 1, v41));
    }
    v147 = &off_250AF6B40;
    v148 = v14;
    v149 = v13;
    v150 = &v147;
    v43 = *(_QWORD *)(a1 + 200);
    v44 = (uint64_t)v162;
    if (v162)
    {
      if (v162 == task_info_out)
      {
        v144 = v143;
        (*(void (**)(integer_t *, _QWORD *))(*(_QWORD *)task_info_out + 24))(task_info_out, v143);
LABEL_77:
        v45 = v145;
        v46 = (uint64_t)v164;
        if (v164)
        {
          if (v164 == v163)
          {
            v146 = v145;
            (*(void (**)(_QWORD *, _BYTE *))(v163[0] + 24))(v163, v145);
LABEL_82:
            v47 = sub_2394ADE14(v40, a1, (uint64_t)task_info_outCnt, (uint64_t)&v147, v43, v143, v31, v34, (uint64_t)v93, 1);
            if (v146 == v145)
            {
              v48 = 4;
            }
            else
            {
              if (!v146)
                goto LABEL_87;
              v48 = 5;
              v45 = v146;
            }
            (*(void (**)(_QWORD *))(*v45 + 8 * v48))(v45);
LABEL_87:
            v49 = v144;
            if (v144 == v143)
            {
              v50 = 4;
              v49 = v143;
            }
            else
            {
              if (!v144)
                goto LABEL_92;
              v50 = 5;
            }
            (*(void (**)(void))(*v49 + 8 * v50))();
LABEL_92:
            v51 = v150;
            if (v150 == &v147)
            {
              v52 = 4;
              v51 = &v147;
            }
            else
            {
              if (!v150)
                goto LABEL_97;
              v52 = 5;
            }
            (*v51)[v52]();
LABEL_97:
            v53 = v137;
            if (v137 == task_info_outCnt)
            {
              v54 = 4;
              v53 = task_info_outCnt;
            }
            else
            {
              if (!v137)
                goto LABEL_102;
              v54 = 5;
            }
            (*(void (**)(void))(*(_QWORD *)v53 + 8 * v54))();
LABEL_102:
            if ((v47 & 1) == 0)
              goto LABEL_151;
            goto LABEL_103;
          }
          v46 = (*(uint64_t (**)(void))(*v164 + 16))();
        }
        v146 = (_BYTE *)v46;
        goto LABEL_82;
      }
      v44 = (*(uint64_t (**)(void))(*(_QWORD *)v162 + 16))();
    }
    v144 = (_QWORD *)v44;
    goto LABEL_77;
  }
  *(_QWORD *)task_info_outCnt = &off_250AF6AF8;
  v135 = v12;
  v137 = task_info_outCnt;
  if (v13)
  {
    v36 = (unint64_t *)&v13->__shared_owners_;
    do
      v37 = __ldxr(v36);
    while (__stxr(v37 + 1, v36));
  }
  v147 = &off_250AF6B40;
  v148 = v14;
  v149 = v13;
  v150 = &v147;
  v38 = *(_QWORD *)(a1 + 200);
  v39 = (uint64_t)v162;
  if (!v162)
    goto LABEL_68;
  if (v162 != task_info_out)
  {
    v39 = (*(uint64_t (**)(void))(*(_QWORD *)v162 + 16))();
LABEL_68:
    v140 = (_QWORD *)v39;
    goto LABEL_125;
  }
  v140 = v139;
  (*(void (**)(integer_t *, _QWORD *))(*(_QWORD *)task_info_out + 24))(task_info_out, v139);
LABEL_125:
  v67 = v141;
  v68 = (uint64_t)v164;
  if (!v164)
  {
LABEL_128:
    v142 = (_BYTE *)v68;
    goto LABEL_130;
  }
  if (v164 != v163)
  {
    v68 = (*(uint64_t (**)(void))(*v164 + 16))();
    goto LABEL_128;
  }
  v142 = v141;
  (*(void (**)(void))(*v164 + 24))();
LABEL_130:
  v69 = sub_2394ADE14(v35, a1, (uint64_t)task_info_outCnt, (uint64_t)&v147, v38, v139, v31, v34, (uint64_t)v93, 1);
  if (v142 == v141)
  {
    v70 = 4;
  }
  else
  {
    if (!v142)
      goto LABEL_135;
    v70 = 5;
    v67 = v142;
  }
  (*(void (**)(_QWORD *))(*v67 + 8 * v70))(v67);
LABEL_135:
  v71 = v140;
  if (v140 == v139)
  {
    v72 = 4;
    v71 = v139;
  }
  else
  {
    if (!v140)
      goto LABEL_140;
    v72 = 5;
  }
  (*(void (**)(void))(*v71 + 8 * v72))();
LABEL_140:
  v73 = v150;
  if (v150 == &v147)
  {
    v74 = 4;
    v73 = &v147;
  }
  else
  {
    if (!v150)
      goto LABEL_145;
    v74 = 5;
  }
  (*v73)[v74]();
LABEL_145:
  v75 = v137;
  if (v137 == task_info_outCnt)
  {
    v76 = 4;
    v75 = task_info_outCnt;
  }
  else
  {
    if (!v137)
      goto LABEL_150;
    v76 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v75 + 8 * v76))();
LABEL_150:
  if ((v69 & 1) == 0)
  {
LABEL_151:
    v6 = 2;
    v66 = v91;
    if (!v91)
      goto LABEL_156;
    goto LABEL_152;
  }
LABEL_103:
  v137 = 0;
  __p = 0;
  v138 = 0;
  v55 = *(_DWORD *)(a1 + 192);
  *(float *)&v135 = (float)*(unint64_t *)(a1 + 184);
  task_info_outCnt[0] = v55;
  task_info_outCnt[1] = 256;
  v56 = sub_2394E8FB8((uint64_t *)v31, v33, (uint64_t)task_info_outCnt);
  if (__p)
    operator delete(__p);
  if (!v56)
  {
    v6 = 3;
    v66 = v91;
    if (!v91)
      goto LABEL_156;
    goto LABEL_152;
  }
  do
    v57 = __ldxr(v30);
  while (__stxr(v57 + 1, v30));
  v58 = (std::__shared_weak_count *)a2[1];
  *a2 = v31;
  a2[1] = (char **)v29;
  if (v58)
  {
    v59 = (unint64_t *)&v58->__shared_owners_;
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
  if (v91)
  {
    v61 = (unint64_t *)&v91->__shared_owners_;
    do
      v62 = __ldxr(v61);
    while (__stxr(v62 + 1, v61));
  }
  v63 = (std::__shared_weak_count *)a2[3];
  a2[2] = v90;
  a2[3] = (char **)v91;
  if (v63)
  {
    v64 = (unint64_t *)&v63->__shared_owners_;
    do
      v65 = __ldaxr(v64);
    while (__stlxr(v65 - 1, v64));
    if (!v65)
    {
      ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
      std::__shared_weak_count::__release_weak(v63);
    }
  }
  v6 = 0;
  v66 = v91;
  if (v91)
  {
LABEL_152:
    v77 = (unint64_t *)&v66->__shared_owners_;
    do
      v78 = __ldaxr(v77);
    while (__stlxr(v78 - 1, v77));
    if (!v78)
    {
      ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
      std::__shared_weak_count::__release_weak(v66);
    }
  }
LABEL_156:
  if (v29)
  {
    v79 = (unint64_t *)&v29->__shared_owners_;
    do
      v80 = __ldaxr(v79);
    while (__stlxr(v80 - 1, v79));
    if (!v80)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v81 = v164;
  if (v164 == v163)
  {
    v82 = 4;
    v81 = v163;
  }
  else
  {
    if (!v164)
      goto LABEL_166;
    v82 = 5;
  }
  (*(void (**)(void))(*v81 + 8 * v82))();
LABEL_166:
  v83 = v162;
  if (v162 == task_info_out)
  {
    v84 = 4;
    v83 = task_info_out;
    goto LABEL_170;
  }
  if (v162)
  {
    v84 = 5;
LABEL_170:
    (*(void (**)(void))(*(_QWORD *)v83 + 8 * v84))();
  }
  if (v92)
  {
    v85 = (unint64_t *)&v92->__shared_owners_;
    do
      v86 = __ldaxr(v85);
    while (__stlxr(v86 - 1, v85));
    if (!v86)
    {
      ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
      std::__shared_weak_count::__release_weak(v92);
    }
  }
  if (!v160)
    sub_2394172E0();
  (*(void (**)(_BYTE *))(*(_QWORD *)v160 + 48))(v160);
  v87 = v160;
  if (v160 == v159)
  {
    v88 = 4;
    v87 = v159;
    goto LABEL_181;
  }
  if (v160)
  {
    v88 = 5;
LABEL_181:
    (*(void (**)(void))(*v87 + 8 * v88))();
  }
  if (SHIBYTE(v124) < 0)
    operator delete(*((void **)&v123 + 1));
  if ((_QWORD)v122)
  {
    *((_QWORD *)&v122 + 1) = v122;
    operator delete((void *)v122);
  }
  if (v104)
  {
    v105 = v104;
    operator delete(v104);
  }
  return v6;
}

void sub_239B56F40(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

uint64_t sub_239B571E4(uint64_t a1)
{
  void *v2;
  void *v3;

  if ((*(char *)(a1 + 327) & 0x80000000) == 0)
  {
    v2 = *(void **)(a1 + 280);
    if (!v2)
      goto LABEL_4;
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 304));
  v2 = *(void **)(a1 + 280);
  if (v2)
  {
LABEL_3:
    *(_QWORD *)(a1 + 288) = v2;
    operator delete(v2);
  }
LABEL_4:
  v3 = *(void **)(a1 + 160);
  if (v3)
  {
    *(_QWORD *)(a1 + 168) = v3;
    operator delete(v3);
  }
  return a1;
}

_QWORD *sub_239B57240(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF6B40;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B572A4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF6B40;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B57318(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF6B40;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B57368(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF6B40;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B57398(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B573F0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B57448(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *a2;
    v11 = 0uLL;
    v10 = 0;
    v9[0] = sub_239B4D474;
    v9[1] = 0;
    v9[2] = v4;
    v9[3] = v5;
    sub_239B4D6F8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
    if (v10)
    {
      *(_OWORD *)a3 = v11;
    }
    else
    {
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
      if (*((_QWORD *)&v11 + 1))
      {
        v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
        do
          v8 = __ldaxr(v7);
        while (__stlxr(v8 - 1, v7));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
    }
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
  }
}

void sub_239B574F8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B57540()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B57554(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6AF8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B57588(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6AF8;
  a2[1] = v2;
  return result;
}

void sub_239B575A4(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4DD70;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4DFF4((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B57648(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B5768C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF6A78;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_239B57718(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF6A78;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B577B4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AF6A78;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
  {
    if (v5 == a1 + 40)
    {
      v2[8] = v2 + 5;
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
      return v2;
    }
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  }
  v2[8] = v5;
  return v2;
}

void sub_239B57870(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
LABEL_6:
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B578BC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AF6A78;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_239B5798C(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B579C8(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = (_QWORD *)a1[4];
  if (result == v2)
  {
    v7 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239B57A4C(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

void sub_239B57ACC(uint64_t a1, float *a2)
{
  float v2;
  void *__p;
  char v4;

  v2 = *a2;
  v4 = 0;
  LOBYTE(__p) = 0;
  sub_2396FD7C8(a1 + 8, (uint64_t)&__p, v2);
  if (v4 < 0)
    operator delete(__p);
}

void sub_239B57B14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239B57B34()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B57B48(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF6A30;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B57B88(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6A30;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B57BB0(uint64_t a1)
{
  uint64_t v2;
  std::chrono::system_clock::time_point v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t result;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  rusage v22;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v25;

  v2 = *(_QWORD *)(a1 + 8);
  v3.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)(v2 + 128) = v3;
  *(double *)(v2 + 136) = (double)(v3.__d_.__rep_ - *(_QWORD *)(v2 + 120)) / 1000000.0;
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(v2 + 152) = (float)((float)v25 * 0.00097656) * 0.00097656;
  *(_BYTE *)(v2 + 184) = 0;
  getrusage(0, &v22);
  *(float *)(v2 + 144) = (float)((float)v22.ru_maxrss * 0.00097656) * 0.00097656;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = (__int128 *)(v5 + 32);
  if (*(_BYTE *)(v5 + 424))
  {
    v7 = *(_OWORD *)v4;
    v8 = *(_OWORD *)(v4 + 16);
    v9 = *(_OWORD *)(v4 + 48);
    *(_OWORD *)(v5 + 64) = *(_OWORD *)(v4 + 32);
    *(_OWORD *)(v5 + 80) = v9;
    *v6 = v7;
    *(_OWORD *)(v5 + 48) = v8;
    v10 = *(_OWORD *)(v4 + 64);
    v11 = *(_OWORD *)(v4 + 80);
    v12 = *(_OWORD *)(v4 + 96);
    *(_QWORD *)(v5 + 144) = *(_QWORD *)(v4 + 112);
    *(_OWORD *)(v5 + 112) = v11;
    *(_OWORD *)(v5 + 128) = v12;
    *(_OWORD *)(v5 + 96) = v10;
    *(_QWORD *)(v5 + 152) = *(_QWORD *)(v4 + 120);
    *(_OWORD *)(v5 + 160) = *(_OWORD *)(v4 + 128);
    v13 = *(_QWORD *)(v4 + 144);
    *(_DWORD *)(v5 + 184) = *(_DWORD *)(v4 + 152);
    *(_QWORD *)(v5 + 176) = v13;
    if (v6 != (__int128 *)v4)
    {
      sub_23942156C((_QWORD *)(v5 + 192), *(char **)(v4 + 160), *(char **)(v4 + 168), (uint64_t)(*(_QWORD *)(v4 + 168) - *(_QWORD *)(v4 + 160)) >> 2);
      *(_BYTE *)(v5 + 216) = *(_BYTE *)(v4 + 184);
      v14 = *(_OWORD *)(v4 + 192);
      v15 = *(_OWORD *)(v4 + 208);
      v16 = *(_OWORD *)(v4 + 224);
      *(_QWORD *)(v5 + 269) = *(_QWORD *)(v4 + 237);
      *(_OWORD *)(v5 + 240) = v15;
      *(_OWORD *)(v5 + 256) = v16;
      *(_OWORD *)(v5 + 224) = v14;
      v17 = *(_OWORD *)(v4 + 248);
      *(_OWORD *)(v5 + 296) = *(_OWORD *)(v4 + 264);
      *(_OWORD *)(v5 + 280) = v17;
      sub_23945D3D0((_QWORD *)(v5 + 312), *(char **)(v4 + 280), *(char **)(v4 + 288), (uint64_t)(*(_QWORD *)(v4 + 288) - *(_QWORD *)(v4 + 280)) >> 3);
    }
    result = (uint64_t)std::string::operator=((std::string *)(v5 + 336), (const std::string *)(v4 + 304));
    v19 = *(_QWORD *)(v4 + 360);
    v20 = *(_OWORD *)(v4 + 344);
    *(_OWORD *)(v5 + 360) = *(_OWORD *)(v4 + 328);
    *(_OWORD *)(v5 + 376) = v20;
    *(_QWORD *)(v5 + 392) = v19;
    v21 = *(_OWORD *)(v4 + 368);
    *(_QWORD *)(v5 + 413) = *(_QWORD *)(v4 + 381);
    *(_OWORD *)(v5 + 400) = v21;
  }
  else
  {
    result = sub_239A60CB0((uint64_t)v6, (__int128 *)v4);
    *(_BYTE *)(v5 + 424) = 1;
  }
  return result;
}

uint64_t sub_239B57D98(int8x8_t **a1, uint64_t *a2, _QWORD *a3)
{
  BOOL v3;
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int8x8_t *v22;
  int8x8_t *v23;
  int64_t v24;
  char *v25;
  int v26;
  unint64_t v27;
  int8x8_t *v28;
  int8x8_t v29;
  int8x8_t *v30;
  int8x8_t v31;
  int8x8_t *v32;
  unint64_t v33;
  float32x2_t v34;
  unint64_t v35;
  int8x8_t v36;
  uint8x8_t v37;
  unint64_t v38;
  uint64_t **v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  int64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  int8x8_t *v61;
  int8x8_t v62;
  uint8x8_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t ***v66;
  uint64_t **v67;
  uint32x4_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  char *v72;
  char *v73;
  char *v74;
  int64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  float64x2_t v89;
  uint32x4_t v90;
  uint32x4_t *v91;
  uint32x4_t *v92;
  uint32x4_t *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint32x4_t *v99;
  char *v100;
  char *v101;
  char *v102;
  int64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  char **v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  _QWORD *v130;
  unint64_t i;
  unint64_t v132;
  int8x8_t *v133;
  int8x8_t v134;
  uint8x8_t v135;
  unint64_t v136;
  uint64_t **v137;
  uint64_t *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t *v143;
  uint64_t **v144;
  uint64_t **v145;
  unint64_t v146;
  char *v147;
  uint64_t *v148;
  void *v149;
  _QWORD *v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t **v157;
  uint64_t *v158;
  unint64_t v159;
  uint64_t **v160;
  uint64_t **v161;
  unint64_t v162;
  uint64_t **v163;
  uint64_t *v164;
  uint64_t *v165;
  uint64_t *v166;
  uint64_t **v167;
  uint64_t *v168;
  uint64_t **v169;
  uint64_t v170;
  std::string *v171;
  uint64_t v172;
  uint64_t v173;
  void **v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  _BOOL4 v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  char *v184;
  void *v185;
  void *v186;
  _QWORD *v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  _QWORD *v192;
  uint64_t v193;
  int v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  _QWORD *v202;
  int8x8_t v203;
  uint64_t v204;
  unint64_t v205;
  uint8x8_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  int8x8_t *v210;
  int8x8_t v211;
  _DWORD *v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t **v215;
  uint64_t *v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t **v219;
  uint64_t *v220;
  uint64_t *v221;
  uint64_t **v222;
  unint64_t v223;
  uint64_t *v224;
  uint64_t *v225;
  _DWORD *v226;
  int8x8_t v227;
  uint8x8_t v228;
  unint64_t v229;
  uint64_t **v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  uint32x4_t v234;
  int8x8_t *v235;
  std::chrono::system_clock::time_point v236;
  int v237;
  void *__p;
  char *v239;
  char *v240;
  void *v241;
  char *v242;
  char *v243;
  void *v244;
  char *v245;
  char *v246;
  std::string task_info_outCnt;
  void *v248;
  void *v249;
  std::string v250;
  std::string v251;
  void *v252;
  char v253;
  void *v254;
  char v255;
  uint64_t *v256;
  uint64_t *v257;
  uint64_t v258;
  void *v259;
  void *v260;
  uint64_t v261;
  uint64_t v262;
  double v263;
  float v264;
  void *v265;
  void *v266;
  std::string task_info_out;
  void *v268;
  void *v269;
  unint64_t v270;
  std::string v271;
  std::string v272;
  void *v273;
  char v274;
  void *v275;
  char v276;
  uint64_t **v277;
  uint64_t *v278;
  uint64_t v279;
  void *v280;
  void *v281;
  uint64_t v282;
  uint64_t v283;
  double v284;
  float v285;
  void *v286;
  void *v287;
  std::string v288;
  char *v289;
  char *v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  int v298;
  _QWORD v299[3];
  _QWORD *v300;
  _BYTE v301[24];
  _BYTE *v302;
  _QWORD v303[3];
  _QWORD *v304;
  _QWORD v305[3];
  _QWORD *v306;
  _BYTE v307[24];
  _BYTE *v308;
  _QWORD v309[3];
  _QWORD *v310;
  _QWORD v311[3];
  _QWORD *v312;
  _QWORD v313[3];
  _QWORD *v314;
  _BYTE v315[24];
  _BYTE *v316;
  _QWORD v317[3];
  _QWORD *v318;
  _QWORD v319[3];
  _QWORD *v320;
  _QWORD v321[3];
  _QWORD *v322;
  _QWORD v323[3];
  _QWORD *v324;
  _BYTE v325[24];
  _BYTE *v326;
  _BYTE v327[24];
  _BYTE *v328;
  _QWORD v329[3];
  _QWORD *v330;
  _QWORD v331[3];
  _QWORD *v332;
  uint64_t v333;

  v333 = *MEMORY[0x24BDAC8D0];
  v3 = a1[17] == a1[16] || a1[12] == 0;
  if (v3 || a1[10] == 0 || *a2 == 0)
    return 3;
  *((std::chrono::system_clock::time_point *)a2 + 51) = std::chrono::system_clock::now();
  LODWORD(task_info_outCnt.__r_.__value_.__l.__data_) = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, (task_info_t)&task_info_out, (mach_msg_type_number_t *)&task_info_outCnt))
    *((float *)a2 + 109) = (float)((float)v270 * 0.00097656) * 0.00097656;
  *((_BYTE *)a2 + 472) = 1;
  v235 = a1[12];
  v236.__d_.__rep_ = *a2;
  sub_2396FDAA8(a3, (uint64_t)v327);
  v10 = a3[3];
  if (!v10)
    goto LABEL_18;
  if ((_QWORD *)v10 != a3)
  {
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
LABEL_18:
    v322 = (_QWORD *)v10;
    goto LABEL_20;
  }
  v322 = v321;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v321);
LABEL_20:
  v11 = v323;
  v12 = a3[7];
  if (!v12)
  {
LABEL_23:
    v324 = (_QWORD *)v12;
    goto LABEL_25;
  }
  if ((_QWORD *)v12 != a3 + 4)
  {
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
    goto LABEL_23;
  }
  v324 = v323;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v12 + 24))(v12, v323);
LABEL_25:
  v326 = 0;
  v13 = operator new(0x48uLL);
  v14 = v13;
  *v13 = &off_250AF6B88;
  if (v322)
  {
    if (v322 == v321)
    {
      v13[4] = v13 + 1;
      (*(void (**)(_QWORD *))(v321[0] + 24))(v321);
    }
    else
    {
      v13[4] = v322;
      v322 = 0;
    }
  }
  else
  {
    v13[4] = 0;
  }
  if (v324)
  {
    if (v324 == v323)
    {
      v14[8] = v14 + 5;
      (*(void (**)(_QWORD *))(v323[0] + 24))(v323);
    }
    else
    {
      v14[8] = v324;
      v324 = 0;
    }
  }
  else
  {
    v14[8] = 0;
  }
  v326 = v14;
  sub_2396FD600((uint64_t)v329, (uint64_t)v327, (uint64_t)v325);
  v15 = v326;
  if (v326 == v325)
  {
    v16 = 4;
    v15 = v325;
  }
  else
  {
    if (!v326)
      goto LABEL_40;
    v16 = 5;
  }
  (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_40:
  if (v324 == v323)
  {
    v17 = 4;
  }
  else
  {
    if (!v324)
      goto LABEL_45;
    v17 = 5;
    v11 = v324;
  }
  (*(void (**)(_QWORD *))(*v11 + 8 * v17))(v11);
LABEL_45:
  v18 = v322;
  if (v322 == v321)
  {
    v19 = 4;
    v18 = v321;
  }
  else
  {
    if (!v322)
      goto LABEL_50;
    v19 = 5;
  }
  (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_50:
  v20 = v328;
  if (v328 == v327)
  {
    v21 = 4;
    v20 = v327;
    goto LABEL_54;
  }
  if (v328)
  {
    v21 = 5;
LABEL_54:
    (*(void (**)(void))(*v20 + 8 * v21))();
  }
  *(_OWORD *)&v288.__r_.__value_.__l.__data_ = *((_OWORD *)a1 + 7);
  v288.__r_.__value_.__r.__words[2] = 0;
  v290 = 0;
  v289 = 0;
  v23 = a1[16];
  v22 = a1[17];
  v24 = (char *)v22 - (char *)v23;
  if (v22 != v23)
  {
    if (v24 < 0)
      sub_2394189F8();
    v288.__r_.__value_.__r.__words[2] = (std::string::size_type)operator new((char *)v22 - (char *)v23);
    v289 = (char *)v288.__r_.__value_.__r.__words[2];
    v25 = (char *)(v288.__r_.__value_.__r.__words[2] + 8 * (v24 >> 3));
    v290 = v25;
    memcpy((void *)v288.__r_.__value_.__r.__words[2], v23, v24);
    v289 = v25;
  }
  v295 = *(_OWORD *)(a1 + 27);
  v296 = *(_OWORD *)(a1 + 29);
  v297 = *(_OWORD *)(a1 + 31);
  v26 = *((_DWORD *)a1 + 66);
  v291 = *(_OWORD *)(a1 + 19);
  v292 = *(_OWORD *)(a1 + 21);
  v293 = *(_OWORD *)(a1 + 23);
  v294 = *(_OWORD *)(a1 + 25);
  v298 = v26;
  HIDWORD(v288.__r_.__value_.__r.__words[0]) = -1;
  sub_239AEA110((uint64_t)&task_info_out);
  sub_239AEA110((uint64_t)&task_info_outCnt);
  v244 = 0;
  v245 = 0;
  v246 = 0;
  v241 = 0;
  v242 = 0;
  v243 = 0;
  v28 = *a1;
  if (!*a1)
    goto LABEL_196;
  if (LODWORD(v288.__r_.__value_.__l.__data_) == 2)
  {
    if (!*(_QWORD *)&v28[3])
      goto LABEL_196;
    v30 = a1[10];
  }
  else if (LODWORD(v288.__r_.__value_.__l.__data_) != 1
         || (v29 = v28[3], v30 = a1[10], *(_QWORD *)&v29 != (uint64_t)(*(_QWORD *)&v30[1] - *(_QWORD *)v30) >> 3))
  {
LABEL_196:
    v117 = (char **)a1[10];
    if (&v241 != (void **)v117)
      sub_23945D3D0(&v241, *v117, v117[1], (v117[1] - *v117) >> 3);
    goto LABEL_198;
  }
  v239 = 0;
  v240 = 0;
  __p = 0;
  v32 = v30;
  v31 = *v30;
  if (*(_QWORD *)&v32[1] == *(_QWORD *)&v31)
    goto LABEL_203;
  v33 = 0;
  v34 = (float32x2_t)vdup_n_s32(0x43A00000u);
  do
  {
    v35 = *(_QWORD *)(*(_QWORD *)&v31 + 8 * v33);
    v36 = (*a1)[1];
    if (!*(_QWORD *)&v36)
      goto LABEL_87;
    v37 = (uint8x8_t)vcnt_s8(v36);
    v37.i16[0] = vaddlv_u8(v37);
    if (v37.u32[0] > 1uLL)
    {
      v38 = *(_QWORD *)(*(_QWORD *)&v31 + 8 * v33);
      if (v35 >= *(_QWORD *)&v36)
        v38 = v35 % *(_QWORD *)&v36;
    }
    else
    {
      v38 = (*(_QWORD *)&v36 - 1) & v35;
    }
    v39 = *(uint64_t ***)(*(_QWORD *)*a1 + 8 * v38);
    if (!v39 || (v40 = *v39) == 0)
    {
LABEL_87:
      v44 = v242;
      if (v242 >= v243)
      {
        v46 = (char *)v241;
        v47 = v242 - (_BYTE *)v241;
        v48 = (v242 - (_BYTE *)v241) >> 3;
        v49 = v48 + 1;
        if ((unint64_t)(v48 + 1) >> 61)
          sub_2394189F8();
        v50 = v243 - (_BYTE *)v241;
        if ((v243 - (_BYTE *)v241) >> 2 > v49)
          v49 = v50 >> 2;
        if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFF8)
          v51 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v51 = v49;
        if (v51)
        {
          if (v51 >> 61)
            sub_239418A80();
          v52 = (char *)operator new(8 * v51);
        }
        else
        {
          v52 = 0;
        }
        v53 = &v52[8 * v48];
        *(_QWORD *)v53 = v35;
        v45 = v53 + 8;
        if (v44 != v46)
        {
          v54 = v44 - 8 - v46;
          if (v54 < 0x58)
            goto LABEL_510;
          if ((unint64_t)(v44 - &v52[v47]) < 0x20)
            goto LABEL_510;
          v55 = (v54 >> 3) + 1;
          v56 = &v52[8 * v48 - 16];
          v57 = v44 - 16;
          v58 = v55 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v59 = *(_OWORD *)v57;
            *((_OWORD *)v56 - 1) = *((_OWORD *)v57 - 1);
            *(_OWORD *)v56 = v59;
            v56 -= 32;
            v57 -= 32;
            v58 -= 4;
          }
          while (v58);
          v53 -= 8 * (v55 & 0x3FFFFFFFFFFFFFFCLL);
          v44 -= 8 * (v55 & 0x3FFFFFFFFFFFFFFCLL);
          if (v55 != (v55 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_510:
            do
            {
              v60 = *((_QWORD *)v44 - 1);
              v44 -= 8;
              *((_QWORD *)v53 - 1) = v60;
              v53 -= 8;
            }
            while (v44 != v46);
          }
        }
        v241 = v53;
        v242 = v45;
        v243 = &v52[8 * v51];
        if (v46)
          operator delete(v46);
      }
      else
      {
        *(_QWORD *)v242 = v35;
        v45 = v44 + 8;
      }
      v242 = v45;
      goto LABEL_109;
    }
    if (v37.u32[0] < 2uLL)
    {
      v41 = *(_QWORD *)&v36 - 1;
      while (1)
      {
        v43 = v40[1];
        if (v43 == v35)
        {
          if (v40[2] == v35)
            goto LABEL_111;
        }
        else if ((v43 & v41) != v38)
        {
          goto LABEL_87;
        }
        v40 = (uint64_t *)*v40;
        if (!v40)
          goto LABEL_87;
      }
    }
    while (1)
    {
      v42 = v40[1];
      if (v42 == v35)
        break;
      if (v42 >= *(_QWORD *)&v36)
        v42 %= *(_QWORD *)&v36;
      if (v42 != v38)
        goto LABEL_87;
LABEL_77:
      v40 = (uint64_t *)*v40;
      if (!v40)
        goto LABEL_87;
    }
    if (v40[2] != v35)
      goto LABEL_77;
LABEL_111:
    v61 = a1[2];
    v62 = v61[1];
    if (!*(_QWORD *)&v62)
      goto LABEL_131;
    v63 = (uint8x8_t)vcnt_s8(v62);
    v63.i16[0] = vaddlv_u8(v63);
    v64 = v63.u32[0];
    if (v63.u32[0] > 1uLL)
    {
      v65 = v35;
      if (v35 >= *(_QWORD *)&v62)
        v65 = v35 % *(_QWORD *)&v62;
    }
    else
    {
      v65 = (*(_QWORD *)&v62 - 1) & v35;
    }
    v66 = *(uint64_t ****)(*(_QWORD *)v61 + 8 * v65);
    if (!v66 || (v67 = *v66) == 0)
    {
LABEL_131:
      v72 = v242;
      if (v242 >= v243)
      {
        v74 = (char *)v241;
        v75 = v242 - (_BYTE *)v241;
        v76 = (v242 - (_BYTE *)v241) >> 3;
        v77 = v76 + 1;
        if ((unint64_t)(v76 + 1) >> 61)
          sub_2394189F8();
        v78 = v243 - (_BYTE *)v241;
        if ((v243 - (_BYTE *)v241) >> 2 > v77)
          v77 = v78 >> 2;
        if ((unint64_t)v78 >= 0x7FFFFFFFFFFFFFF8)
          v79 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v79 = v77;
        if (v79)
        {
          if (v79 >> 61)
            sub_239418A80();
          v80 = (char *)operator new(8 * v79);
        }
        else
        {
          v80 = 0;
        }
        v81 = &v80[8 * v76];
        *(_QWORD *)v81 = v35;
        v73 = v81 + 8;
        if (v72 != v74)
        {
          v82 = v72 - 8 - v74;
          if (v82 < 0x58)
            goto LABEL_511;
          if ((unint64_t)(v72 - &v80[v75]) < 0x20)
            goto LABEL_511;
          v83 = (v82 >> 3) + 1;
          v84 = &v80[8 * v76 - 16];
          v85 = v72 - 16;
          v86 = v83 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v87 = *(_OWORD *)v85;
            *((_OWORD *)v84 - 1) = *((_OWORD *)v85 - 1);
            *(_OWORD *)v84 = v87;
            v84 -= 32;
            v85 -= 32;
            v86 -= 4;
          }
          while (v86);
          v81 -= 8 * (v83 & 0x3FFFFFFFFFFFFFFCLL);
          v72 -= 8 * (v83 & 0x3FFFFFFFFFFFFFFCLL);
          if (v83 != (v83 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_511:
            do
            {
              v88 = *((_QWORD *)v72 - 1);
              v72 -= 8;
              *((_QWORD *)v81 - 1) = v88;
              v81 -= 8;
            }
            while (v72 != v74);
          }
        }
        v241 = v81;
        v242 = v73;
        v243 = &v80[8 * v79];
        if (v74)
          operator delete(v74);
      }
      else
      {
        *(_QWORD *)v242 = v35;
        v73 = v72 + 8;
      }
      v242 = v73;
      goto LABEL_109;
    }
    v68 = *(uint32x4_t *)(v40 + 3);
    if (v64 < 2)
    {
      v69 = *(_QWORD *)&v62 - 1;
      while (1)
      {
        v71 = v67[1];
        if (v71 == (uint64_t *)v35)
        {
          if (v67[2] == (uint64_t *)v35)
            goto LABEL_155;
        }
        else if (((unint64_t)v71 & v69) != v65)
        {
          goto LABEL_131;
        }
        v67 = (uint64_t **)*v67;
        if (!v67)
          goto LABEL_131;
      }
    }
    while (2)
    {
      v70 = (unint64_t)v67[1];
      if (v70 != v35)
      {
        if (v70 >= *(_QWORD *)&v62)
          v70 %= *(_QWORD *)&v62;
        if (v70 != v65)
          goto LABEL_131;
        goto LABEL_121;
      }
      if (v67[2] != (uint64_t *)v35)
      {
LABEL_121:
        v67 = (uint64_t **)*v67;
        if (!v67)
          goto LABEL_131;
        continue;
      }
      break;
    }
LABEL_155:
    v89 = vcvtq_f64_u64(*(uint64x2_t *)v67[3]);
    *(float32x2_t *)&v89.f64[0] = vdiv_f32(v34, vcvt_f32_f64(v89));
    v90 = vcvtq_u32_f32(vmulq_f32((float32x4_t)vzip1q_s32((int32x4_t)v89, (int32x4_t)v89), vcvtq_f32_u32(v68)));
    v91 = (uint32x4_t *)v239;
    if (v239 >= v240)
    {
      v93 = (uint32x4_t *)__p;
      v94 = (v239 - (_BYTE *)__p) >> 4;
      v95 = v94 + 1;
      if ((unint64_t)(v94 + 1) >> 60)
        sub_2394189F8();
      v96 = v240 - (_BYTE *)__p;
      if ((v240 - (_BYTE *)__p) >> 3 > v95)
        v95 = v96 >> 3;
      if ((unint64_t)v96 >= 0x7FFFFFFFFFFFFFF0)
        v97 = 0xFFFFFFFFFFFFFFFLL;
      else
        v97 = v95;
      if (v97)
      {
        v234 = v90;
        if (v97 >> 60)
          sub_239418A80();
        v98 = (char *)operator new(16 * v97);
        v90 = v234;
      }
      else
      {
        v98 = 0;
      }
      v99 = (uint32x4_t *)&v98[16 * v94];
      *v99 = v90;
      v92 = v99 + 1;
      if (v91 != v93)
      {
        do
        {
          v99[-1] = v91[-1];
          --v99;
          --v91;
        }
        while (v91 != v93);
        v91 = (uint32x4_t *)__p;
      }
      __p = v99;
      v239 = (char *)v92;
      v240 = &v98[16 * v97];
      if (v91)
        operator delete(v91);
    }
    else
    {
      *(uint32x4_t *)v239 = v90;
      v92 = v91 + 1;
    }
    v239 = (char *)v92;
    v100 = v245;
    if (v245 >= v246)
    {
      v102 = (char *)v244;
      v103 = v245 - (_BYTE *)v244;
      v104 = (v245 - (_BYTE *)v244) >> 3;
      v105 = v104 + 1;
      if ((unint64_t)(v104 + 1) >> 61)
        sub_2394189F8();
      v106 = v246 - (_BYTE *)v244;
      if ((v246 - (_BYTE *)v244) >> 2 > v105)
        v105 = v106 >> 2;
      if ((unint64_t)v106 >= 0x7FFFFFFFFFFFFFF8)
        v107 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v107 = v105;
      if (v107)
      {
        if (v107 >> 61)
          sub_239418A80();
        v108 = (char *)operator new(8 * v107);
      }
      else
      {
        v108 = 0;
      }
      v109 = &v108[8 * v104];
      *(_QWORD *)v109 = v35;
      v101 = v109 + 8;
      if (v100 != v102)
      {
        v110 = v100 - 8 - v102;
        if (v110 < 0x58)
          goto LABEL_512;
        if ((unint64_t)(v100 - &v108[v103]) < 0x20)
          goto LABEL_512;
        v111 = (v110 >> 3) + 1;
        v112 = &v108[8 * v104 - 16];
        v113 = v100 - 16;
        v114 = v111 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v115 = *(_OWORD *)v113;
          *((_OWORD *)v112 - 1) = *((_OWORD *)v113 - 1);
          *(_OWORD *)v112 = v115;
          v112 -= 32;
          v113 -= 32;
          v114 -= 4;
        }
        while (v114);
        v109 -= 8 * (v111 & 0x3FFFFFFFFFFFFFFCLL);
        v100 -= 8 * (v111 & 0x3FFFFFFFFFFFFFFCLL);
        if (v111 != (v111 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_512:
          do
          {
            v116 = *((_QWORD *)v100 - 1);
            v100 -= 8;
            *((_QWORD *)v109 - 1) = v116;
            v109 -= 8;
          }
          while (v100 != v102);
        }
      }
      v244 = v109;
      v245 = v101;
      v246 = &v108[8 * v107];
      if (v102)
        operator delete(v102);
    }
    else
    {
      *(_QWORD *)v245 = v35;
      v101 = v100 + 8;
    }
    v245 = v101;
LABEL_109:
    ++v33;
    v31 = *a1[10];
  }
  while (v33 < (uint64_t)(*(_QWORD *)&a1[10][1] - *(_QWORD *)&v31) >> 3);
LABEL_203:
  v319[0] = &off_250AF6BD0;
  v319[1] = v235;
  v320 = v319;
  v317[0] = &off_250AF6C18;
  v317[1] = v236.__d_.__rep_;
  v317[2] = a1;
  v318 = v317;
  v119 = (uint64_t)v330;
  if (!v330)
    goto LABEL_206;
  if (v330 == v329)
  {
    v314 = v313;
    (*(void (**)(_QWORD *, _QWORD *))(v329[0] + 24))(v329, v313);
  }
  else
  {
    v119 = (*(uint64_t (**)(void))(*v330 + 16))();
LABEL_206:
    v314 = (_QWORD *)v119;
  }
  v192 = v315;
  v193 = (uint64_t)v332;
  if (v332)
  {
    if (v332 != v331)
    {
      v193 = (*(uint64_t (**)(void))(*v332 + 16))();
      goto LABEL_405;
    }
    v316 = v315;
    (*(void (**)(void))(*v332 + 24))();
  }
  else
  {
LABEL_405:
    v316 = (_BYTE *)v193;
  }
  v194 = sub_23956540C((const void **)&v244, &v288, v319, (uint64_t)v317, v313, &task_info_out, 1, v27, (uint64_t)&__p, 1);
  if (v316 == v315)
  {
    v195 = 4;
LABEL_411:
    (*(void (**)(_QWORD *))(*v192 + 8 * v195))(v192);
  }
  else if (v316)
  {
    v195 = 5;
    v192 = v316;
    goto LABEL_411;
  }
  v196 = v314;
  if (v314 == v313)
  {
    v197 = 4;
    v196 = v313;
LABEL_416:
    (*(void (**)(void))(*v196 + 8 * v197))();
  }
  else if (v314)
  {
    v197 = 5;
    goto LABEL_416;
  }
  v198 = v318;
  if (v318 == v317)
  {
    v199 = 4;
    v198 = v317;
LABEL_421:
    (*(void (**)(void))(*v198 + 8 * v199))();
  }
  else if (v318)
  {
    v199 = 5;
    goto LABEL_421;
  }
  v200 = v320;
  if (v320 == v319)
  {
    v201 = 4;
    v200 = v319;
LABEL_426:
    (*(void (**)(void))(*v200 + 8 * v201))();
  }
  else if (v320)
  {
    v201 = 5;
    goto LABEL_426;
  }
  if (v194)
  {
    v202 = v244;
    if (v245 == v244)
      goto LABEL_497;
    v203 = (*a1)[1];
    if (!*(_QWORD *)&v203)
      goto LABEL_497;
    v204 = 0;
    v205 = (v245 - (_BYTE *)v244) >> 3;
    v206 = (uint8x8_t)vcnt_s8(v203);
    v206.i16[0] = vaddlv_u8(v206);
    v207 = v206.u32[0];
    v208 = *(_QWORD *)&v203 - 1;
    v209 = v278;
    v210 = a1[4];
    v211 = **a1;
    if (v205 <= 1)
      v205 = 1;
    while (2)
    {
      v213 = v202[v204];
      if (v207 > 1)
      {
        v214 = v202[v204];
        if (v213 >= *(_QWORD *)&v203)
          v214 = v213 % *(_QWORD *)&v203;
      }
      else
      {
        v214 = v208 & v213;
      }
      v215 = *(uint64_t ***)(*(_QWORD *)&v211 + 8 * v214);
      if (!v215)
        goto LABEL_441;
      v216 = *v215;
      if (!*v215)
        goto LABEL_441;
      if (v207 < 2)
      {
        while (1)
        {
          v217 = v216[1];
          if (v217 == v213)
          {
            if (v216[2] == v213)
              goto LABEL_462;
          }
          else if ((v217 & v208) != v214)
          {
            goto LABEL_441;
          }
          v216 = (uint64_t *)*v216;
          if (!v216)
            goto LABEL_441;
        }
      }
      while (2)
      {
        v218 = v216[1];
        if (v218 != v213)
        {
          if (v218 >= *(_QWORD *)&v203)
            v218 %= *(_QWORD *)&v203;
          if (v218 != v214)
            goto LABEL_441;
          goto LABEL_456;
        }
        if (v216[2] != v213)
        {
LABEL_456:
          v216 = (uint64_t *)*v216;
          if (!v216)
            goto LABEL_441;
          continue;
        }
        break;
      }
LABEL_462:
      if (v209)
      {
        v219 = &v278;
        v220 = v209;
        do
        {
          v221 = v220;
          v222 = v219;
          v223 = v220[4];
          if (v223 >= v213)
            v219 = (uint64_t **)v220;
          else
            ++v220;
          v220 = (uint64_t *)*v220;
        }
        while (v220);
        if (v219 != &v278)
        {
          v224 = v223 >= v213 ? v221 : (uint64_t *)v222;
          if (v213 >= v224[4])
          {
            v225 = v223 >= v213 ? v221 : (uint64_t *)v222;
            v226 = (_DWORD *)v225[5];
            *v226 = *((_DWORD *)v216 + 6);
            v226[1] = *((_DWORD *)v216 + 7);
            v226[2] = *((_DWORD *)v216 + 8);
            v226[3] = *((_DWORD *)v216 + 9);
            v227 = v210[1];
            if (v227)
            {
              v228 = (uint8x8_t)vcnt_s8(v227);
              v228.i16[0] = vaddlv_u8(v228);
              v27 = v228.u32[0];
              if (v228.u32[0] > 1uLL)
              {
                v229 = v213;
                if (v213 >= *(_QWORD *)&v227)
                  v229 = v213 % *(_QWORD *)&v227;
              }
              else
              {
                v229 = (*(_QWORD *)&v227 - 1) & v213;
              }
              v230 = *(uint64_t ***)(*(_QWORD *)v210 + 8 * v229);
              if (v230)
              {
                v231 = *v230;
                if (v231)
                {
                  if (v228.u32[0] < 2uLL)
                  {
                    v232 = *(_QWORD *)&v227 - 1;
                    while (1)
                    {
                      v233 = v231[1];
                      if (v233 == v213)
                      {
                        v27 = v231[2];
                        if (v27 == v213)
                          goto LABEL_437;
                      }
                      else
                      {
                        v27 = v233 & v232;
                        if (v27 != v229)
                          goto LABEL_441;
                      }
                      v231 = (uint64_t *)*v231;
                      if (!v231)
                        goto LABEL_441;
                    }
                  }
                  do
                  {
                    v27 = v231[1];
                    if (v27 == v213)
                    {
                      v27 = v231[2];
                      if (v27 == v213)
                      {
LABEL_437:
                        if (v223 >= v213)
                          v212 = v221;
                        else
                          v212 = v222;
                        v212[16] = *((_DWORD *)v231 + 6);
                        break;
                      }
                    }
                    else
                    {
                      if (v27 >= *(_QWORD *)&v227)
                        v27 %= *(_QWORD *)&v227;
                      if (v27 != v229)
                        break;
                    }
                    v231 = (uint64_t *)*v231;
                  }
                  while (v231);
                }
              }
            }
          }
        }
      }
LABEL_441:
      if (++v204 != v205)
        continue;
      break;
    }
LABEL_497:
    if (__p)
    {
      v239 = (char *)__p;
      operator delete(__p);
    }
LABEL_198:
    if (v242 == v241)
      goto LABEL_272;
    v311[0] = &off_250AF6BD0;
    v311[1] = v235;
    v312 = v311;
    v309[0] = &off_250AF6C18;
    v309[1] = v236.__d_.__rep_;
    v309[2] = a1;
    v310 = v309;
    v118 = (uint64_t)v330;
    if (!v330)
      goto LABEL_202;
    if (v330 == v329)
    {
      v306 = v305;
      (*(void (**)(_QWORD *, _QWORD *))(v329[0] + 24))(v329, v305);
    }
    else
    {
      v118 = (*(uint64_t (**)(void))(*v330 + 16))();
LABEL_202:
      v306 = (_QWORD *)v118;
    }
    v120 = v307;
    v121 = (uint64_t)v332;
    if (v332)
    {
      if (v332 != v331)
      {
        v121 = (*(uint64_t (**)(void))(*v332 + 16))();
        goto LABEL_211;
      }
      v308 = v307;
      (*(void (**)(_QWORD *, _BYTE *))(v331[0] + 24))(v331, v307);
    }
    else
    {
LABEL_211:
      v308 = (_BYTE *)v121;
    }
    v122 = sub_23956540C((const void **)&v241, &v288, v311, (uint64_t)v309, v305, &task_info_outCnt, 1, v27, 0, 0);
    if (v308 == v307)
    {
      v123 = 4;
LABEL_217:
      (*(void (**)(_QWORD *))(*v120 + 8 * v123))(v120);
    }
    else if (v308)
    {
      v123 = 5;
      v120 = v308;
      goto LABEL_217;
    }
    v124 = v306;
    if (v306 == v305)
    {
      v125 = 4;
      v124 = v305;
LABEL_222:
      (*(void (**)(void))(*v124 + 8 * v125))();
    }
    else if (v306)
    {
      v125 = 5;
      goto LABEL_222;
    }
    v126 = v310;
    if (v310 == v309)
    {
      v127 = 4;
      v126 = v309;
LABEL_227:
      (*(void (**)(void))(*v126 + 8 * v127))();
    }
    else if (v310)
    {
      v127 = 5;
      goto LABEL_227;
    }
    v128 = v312;
    if (v312 == v311)
    {
      v129 = 4;
      v128 = v311;
LABEL_232:
      (*(void (**)(void))(*v128 + 8 * v129))();
    }
    else if (v312)
    {
      v129 = 5;
      goto LABEL_232;
    }
    if (v122)
    {
      v130 = v241;
      if (v242 != v241)
      {
        for (i = 0; i < (v242 - (_BYTE *)v241) >> 3; ++i)
        {
          v132 = v130[i];
          v133 = a1[4];
          v134 = v133[1];
          if (!*(_QWORD *)&v134)
            goto LABEL_257;
          v135 = (uint8x8_t)vcnt_s8(v134);
          v135.i16[0] = vaddlv_u8(v135);
          if (v135.u32[0] > 1uLL)
          {
            v136 = v130[i];
            if (v132 >= *(_QWORD *)&v134)
              v136 = v132 % *(_QWORD *)&v134;
          }
          else
          {
            v136 = (*(_QWORD *)&v134 - 1) & v132;
          }
          v137 = *(uint64_t ***)(*(_QWORD *)v133 + 8 * v136);
          if (!v137 || (v138 = *v137) == 0)
          {
LABEL_257:
            v142 = 0;
            goto LABEL_258;
          }
          if (v135.u32[0] < 2uLL)
          {
            v139 = *(_QWORD *)&v134 - 1;
            while (1)
            {
              v141 = v138[1];
              if (v141 == v132)
              {
                if (v138[2] == v132)
                  goto LABEL_271;
              }
              else if ((v141 & v139) != v136)
              {
                goto LABEL_257;
              }
              v138 = (uint64_t *)*v138;
              if (!v138)
                goto LABEL_257;
            }
          }
          while (1)
          {
            v140 = v138[1];
            if (v140 == v132)
              break;
            if (v140 >= *(_QWORD *)&v134)
              v140 %= *(_QWORD *)&v134;
            if (v140 != v136)
              goto LABEL_257;
LABEL_247:
            v138 = (uint64_t *)*v138;
            if (!v138)
              goto LABEL_257;
          }
          if (v138[2] != v132)
            goto LABEL_247;
LABEL_271:
          v142 = *((_DWORD *)v138 + 6);
LABEL_258:
          v143 = v257;
          v144 = &v257;
          v145 = &v257;
          if (v257)
          {
            while (1)
            {
              while (1)
              {
                v145 = (uint64_t **)v143;
                v146 = v143[4];
                if (v132 >= v146)
                  break;
                v143 = *v145;
                v144 = v145;
                if (!*v145)
                  goto LABEL_265;
              }
              if (v146 >= v132)
                break;
              v143 = v145[1];
              if (!v143)
              {
                v144 = v145 + 1;
                goto LABEL_265;
              }
            }
            v147 = (char *)v145;
          }
          else
          {
LABEL_265:
            v147 = (char *)operator new(0x48uLL);
            *((_QWORD *)v147 + 4) = v132;
            *(_OWORD *)(v147 + 40) = 0u;
            *(_OWORD *)(v147 + 56) = 0u;
            *(_QWORD *)v147 = 0;
            *((_QWORD *)v147 + 1) = 0;
            *((_QWORD *)v147 + 2) = v145;
            *v144 = (uint64_t *)v147;
            v148 = (uint64_t *)v147;
            if (*v256)
            {
              v256 = (uint64_t *)*v256;
              v148 = *v144;
            }
            sub_2394213B8(v257, v148);
            ++v258;
          }
          v150 = v147 + 40;
          v149 = (void *)*((_QWORD *)v147 + 5);
          if (v149)
          {
            *((_QWORD *)v147 + 6) = v149;
            operator delete(v149);
            *v150 = 0;
            *((_QWORD *)v147 + 6) = 0;
            *((_QWORD *)v147 + 7) = 0;
          }
          *v150 = 0;
          *((_QWORD *)v147 + 6) = 0;
          *((_QWORD *)v147 + 7) = 0;
          *((_DWORD *)v147 + 16) = v142;
          v130 = v241;
        }
      }
LABEL_272:
      *(_OWORD *)(a2 + 3) = *(_OWORD *)&v288.__r_.__value_.__l.__data_;
      if (a2 + 3 != (uint64_t *)&v288)
        sub_23945D3D0(a2 + 5, (char *)v288.__r_.__value_.__r.__words[2], v289, (uint64_t)&v289[-v288.__r_.__value_.__r.__words[2]] >> 3);
      v151 = v296;
      *((_OWORD *)a2 + 8) = v295;
      *((_OWORD *)a2 + 9) = v151;
      *((_OWORD *)a2 + 10) = v297;
      *((_DWORD *)a2 + 44) = v298;
      v152 = v292;
      *((_OWORD *)a2 + 4) = v291;
      *((_OWORD *)a2 + 5) = v152;
      v153 = v294;
      *((_OWORD *)a2 + 6) = v293;
      *((_OWORD *)a2 + 7) = v153;
      if (SLODWORD(task_info_outCnt.__r_.__value_.__l.__data_) >= 1)
      {
        *((_DWORD *)a2 + 4) += LODWORD(task_info_outCnt.__r_.__value_.__l.__data_);
        if (a2 + 2 != (uint64_t *)&task_info_outCnt)
          sub_239AEA4C4((uint64_t)(a2 + 36), v256, (uint64_t *)&v257);
        std::string::operator=((std::string *)(a2 + 23), &v250);
        std::string::operator=((std::string *)(a2 + 26), &v251);
        v154 = a2[51];
        v155 = a2[52];
        if (v261 < v154)
          v154 = v261;
        if (v155 <= v262)
          v155 = v262;
        *((double *)a2 + 53) = v263 + *((double *)a2 + 53);
        a2[51] = v154;
        a2[52] = v155;
        *((float *)a2 + 108) = fmaxf(*((float *)a2 + 108), v264);
      }
      if (SLODWORD(task_info_out.__r_.__value_.__l.__data_) >= 1)
      {
        *((_DWORD *)a2 + 4) += LODWORD(task_info_out.__r_.__value_.__l.__data_);
        *((_BYTE *)a2 + 280) = 1;
        v156 = (uint64_t *)v277;
        if (v277 != &v278)
        {
          v157 = (uint64_t **)(a2 + 37);
          do
          {
            v158 = *v157;
            if (*v157)
            {
              v159 = v156[4];
              v160 = (uint64_t **)(a2 + 37);
              while (1)
              {
                while (1)
                {
                  v161 = (uint64_t **)v158;
                  v162 = v158[4];
                  if (v159 >= v162)
                    break;
                  v158 = *v161;
                  v160 = v161;
                  if (!*v161)
                  {
                    v163 = 0;
                    v160 = v161;
                    goto LABEL_297;
                  }
                }
                if (v162 >= v159)
                  break;
                v160 = v161 + 1;
                v158 = v161[1];
                if (!v158)
                {
                  v163 = 0;
                  goto LABEL_297;
                }
              }
              v163 = v161;
            }
            else
            {
              v163 = 0;
              v161 = (uint64_t **)(a2 + 37);
              v160 = (uint64_t **)(a2 + 37);
            }
LABEL_297:
            v164 = (uint64_t *)v156[1];
            v165 = v164;
            v166 = v156;
            if (v164)
            {
              do
              {
                v167 = (uint64_t **)v165;
                v165 = (uint64_t *)*v165;
              }
              while (v165);
            }
            else
            {
              do
              {
                v167 = (uint64_t **)v166[2];
                v3 = *v167 == v166;
                v166 = (uint64_t *)v167;
              }
              while (!v3);
            }
            if (!v163)
            {
              v168 = v156;
              if (v164)
              {
                do
                {
                  v169 = (uint64_t **)v164;
                  v164 = (uint64_t *)*v164;
                }
                while (v164);
              }
              else
              {
                do
                {
                  v169 = (uint64_t **)v168[2];
                  v3 = *v169 == v168;
                  v168 = (uint64_t *)v169;
                }
                while (!v3);
              }
              if (v277 == (uint64_t **)v156)
                v277 = v169;
              --v279;
              sub_2394F0930(v278, v156);
              *v156 = 0;
              v156[1] = 0;
              v156[2] = (uint64_t)v161;
              *v160 = v156;
              v170 = *(_QWORD *)a2[36];
              if (v170)
              {
                a2[36] = v170;
                v156 = *v160;
              }
              sub_2394213B8((uint64_t *)a2[37], v156);
              ++a2[38];
            }
            v156 = (uint64_t *)v167;
          }
          while (v167 != &v278);
        }
        if (SLODWORD(task_info_outCnt.__r_.__value_.__l.__data_) < 1)
        {
          std::string::operator=((std::string *)(a2 + 23), &v271);
          v171 = (std::string *)(a2 + 26);
        }
        else
        {
          std::string::operator=((std::string *)(a2 + 29), &v271);
          v171 = (std::string *)(a2 + 32);
        }
        std::string::operator=(v171, &v272);
        v172 = v282;
        if (v282 >= a2[51])
          v172 = a2[51];
        v173 = v283;
        if (a2[52] > v283)
          v173 = a2[52];
        *((double *)a2 + 53) = v284 + *((double *)a2 + 53);
        a2[51] = v172;
        a2[52] = v173;
        *((float *)a2 + 108) = fmaxf(*((float *)a2 + 108), v285);
      }
      __p = 0;
      v239 = 0;
      v240 = 0;
      if (LODWORD(v288.__r_.__value_.__l.__data_) == 2)
      {
        v174 = &v241;
      }
      else
      {
        v174 = (void **)a1[10];
        if (&__p == v174)
          goto LABEL_324;
      }
      sub_23945D3D0(&__p, (char *)*v174, (char *)v174[1], ((_BYTE *)v174[1] - (_BYTE *)*v174) >> 3);
LABEL_324:
      v237 = 0;
      v303[0] = &off_250AF6CA8;
      v303[1] = v236.__d_.__rep_;
      v304 = v303;
      v175 = (uint64_t)v330;
      if (v330)
      {
        if (v330 == v329)
        {
          v300 = v299;
          (*(void (**)(_QWORD *, _QWORD *))(v329[0] + 24))(v329, v299);
LABEL_329:
          v176 = v301;
          v177 = (uint64_t)v332;
          if (v332)
          {
            if (v332 == v331)
            {
              v302 = v301;
              (*(void (**)(_QWORD *, _BYTE *))(v331[0] + 24))(v331, v301);
LABEL_334:
              v178 = sub_23955FE6C((uint64_t *)&__p, (float *)&v237, (uint64_t)v303, v299, (uint64_t)(a2 + 39), 1);
              if (v302 == v301)
              {
                v179 = 4;
              }
              else
              {
                if (!v302)
                  goto LABEL_339;
                v179 = 5;
                v176 = v302;
              }
              (*(void (**)(_QWORD *))(*v176 + 8 * v179))(v176);
LABEL_339:
              v180 = v300;
              if (v300 == v299)
              {
                v181 = 4;
                v180 = v299;
              }
              else
              {
                if (!v300)
                  goto LABEL_344;
                v181 = 5;
              }
              (*(void (**)(void))(*v180 + 8 * v181))();
LABEL_344:
              v182 = v304;
              if (v304 == v303)
              {
                v183 = 4;
                v182 = v303;
              }
              else
              {
                if (!v304)
                  goto LABEL_349;
                v183 = 5;
              }
              (*(void (**)(void))(*v182 + 8 * v183))();
LABEL_349:
              if (v178)
                v6 = 0;
              else
                v6 = 2;
              if (__p)
              {
                v239 = (char *)__p;
                operator delete(__p);
              }
              v184 = (char *)v241;
              if (v241)
                goto LABEL_355;
              goto LABEL_356;
            }
            v177 = (*(uint64_t (**)(void))(*v332 + 16))();
          }
          v302 = (_BYTE *)v177;
          goto LABEL_334;
        }
        v175 = (*(uint64_t (**)(void))(*v330 + 16))();
      }
      v300 = (_QWORD *)v175;
      goto LABEL_329;
    }
  }
  else if (__p)
  {
    v239 = (char *)__p;
    operator delete(__p);
  }
  v6 = 2;
  v184 = (char *)v241;
  if (v241)
  {
LABEL_355:
    v242 = v184;
    operator delete(v184);
  }
LABEL_356:
  if (v244)
  {
    v245 = (char *)v244;
    operator delete(v244);
  }
  if (v265)
  {
    v266 = v265;
    operator delete(v265);
  }
  if (v259)
  {
    v260 = v259;
    operator delete(v259);
  }
  sub_239A61EC0(v257);
  if (v255 < 0)
  {
    operator delete(v254);
    if ((v253 & 0x80000000) == 0)
    {
LABEL_364:
      if ((SHIBYTE(v251.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_365;
      goto LABEL_385;
    }
  }
  else if ((v253 & 0x80000000) == 0)
  {
    goto LABEL_364;
  }
  operator delete(v252);
  if ((SHIBYTE(v251.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_365:
    if ((SHIBYTE(v250.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_366;
    goto LABEL_386;
  }
LABEL_385:
  operator delete(v251.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v250.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_366:
    v185 = v248;
    if (!v248)
      goto LABEL_368;
    goto LABEL_367;
  }
LABEL_386:
  operator delete(v250.__r_.__value_.__l.__data_);
  v185 = v248;
  if (v248)
  {
LABEL_367:
    v249 = v185;
    operator delete(v185);
  }
LABEL_368:
  if (v286)
  {
    v287 = v286;
    operator delete(v286);
  }
  if (v280)
  {
    v281 = v280;
    operator delete(v280);
  }
  sub_239A61EC0(v278);
  if (v276 < 0)
  {
    operator delete(v275);
    if ((v274 & 0x80000000) == 0)
    {
LABEL_374:
      if ((SHIBYTE(v272.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_375;
      goto LABEL_390;
    }
  }
  else if ((v274 & 0x80000000) == 0)
  {
    goto LABEL_374;
  }
  operator delete(v273);
  if ((SHIBYTE(v272.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_375:
    if ((SHIBYTE(v271.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_376;
    goto LABEL_391;
  }
LABEL_390:
  operator delete(v272.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v271.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_376:
    v186 = v268;
    if (!v268)
      goto LABEL_378;
    goto LABEL_377;
  }
LABEL_391:
  operator delete(v271.__r_.__value_.__l.__data_);
  v186 = v268;
  if (v268)
  {
LABEL_377:
    v269 = v186;
    operator delete(v186);
  }
LABEL_378:
  if (v288.__r_.__value_.__r.__words[2])
  {
    v289 = (char *)v288.__r_.__value_.__r.__words[2];
    operator delete((void *)v288.__r_.__value_.__r.__words[2]);
  }
  v187 = v332;
  if (v332 == v331)
  {
    v188 = 4;
    v187 = v331;
    goto LABEL_394;
  }
  if (v332)
  {
    v188 = 5;
LABEL_394:
    (*(void (**)(void))(*v187 + 8 * v188))();
  }
  v189 = v330;
  if (v330 == v329)
  {
    v190 = 4;
    v189 = v329;
    goto LABEL_399;
  }
  if (v330)
  {
    v190 = 5;
LABEL_399:
    (*(void (**)(void))(*v189 + 8 * v190))();
  }
  return v6;
}

void sub_239B5970C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  void *v19;
  va_list va;

  va_start(va, a17);
  if (__p)
    operator delete(__p);
  if (a12)
    operator delete(a12);
  if (a15)
    operator delete(a15);
  sub_239A61848((uint64_t)va);
  sub_239A61848((uint64_t)&STACK[0x250]);
  v19 = (void *)STACK[0x430];
  if (STACK[0x430])
  {
    STACK[0x438] = (unint64_t)v19;
    operator delete(v19);
  }
  sub_23942FE80((_QWORD *)(v17 - 184));
  _Unwind_Resume(a1);
}

void sub_239B59A8C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B59AA0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6CA8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B59AD4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6CA8;
  a2[1] = v2;
  return result;
}

void sub_239B59AF0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4D474;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4D6F8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B59B94(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B59BDC()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B59BF0(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF6C18;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B59C28(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6C18;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_239B59C48(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int8x8_t v15;
  uint8x8_t v16;
  unint64_t v17;
  float **v18;
  float *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  _QWORD *v30;
  int8x8_t v31;
  uint8x8_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  __n128 v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  double v52;
  double v53;
  __n128 v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  __n128 v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  int v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t (**v74)();
  std::__shared_weak_count *v75;
  std::__shared_weak_count *v76;
  _BYTE v77[32];
  void *v78;
  uint64_t v79;
  std::__shared_weak_count *v80;
  uint64_t v81;
  _QWORD v82[4];
  uint64_t v83;
  std::__shared_weak_count *v84;
  char v85;

  v5 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *a3;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(std::__shared_weak_count **)(v7 + 64);
  if (v8)
  {
    v74 = 0;
    v75 = 0;
    v85 = 0;
    v78 = sub_239B5A4EC;
    v79 = 0;
    v80 = v8;
    v81 = v6;
    sub_239B5A770((uint64_t)&v78, (uint64_t)&v74, (uint64_t)&v85);
    if (v85)
    {
      v9 = (uint64_t)v74;
      v10 = v75;
    }
    else
    {
      v10 = v75;
      if (v75)
      {
        p_shared_owners = (unint64_t *)&v75->__shared_owners_;
        do
          v12 = __ldaxr(p_shared_owners);
        while (__stlxr(v12 - 1, p_shared_owners));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
        v10 = 0;
      }
      v9 = 0;
    }
    v13 = *(_QWORD *)(a1 + 16);
    v14 = *(_QWORD **)(v13 + 48);
    v15 = (int8x8_t)v14[1];
    if (v15)
    {
      v16 = (uint8x8_t)vcnt_s8(v15);
      v16.i16[0] = vaddlv_u8(v16);
      if (v16.u32[0] > 1uLL)
      {
        v17 = v6;
        if (*(_QWORD *)&v15 <= v6)
          v17 = v6 % *(_QWORD *)&v15;
      }
      else
      {
        v17 = (*(_QWORD *)&v15 - 1) & v6;
      }
      v18 = *(float ***)(*v14 + 8 * v17);
      if (v18)
      {
        v19 = *v18;
        if (v19)
        {
          if (v16.u32[0] < 2uLL)
          {
            v20 = *(_QWORD *)&v15 - 1;
            while (1)
            {
              v22 = *((_QWORD *)v19 + 1);
              if (v22 == v6)
              {
                if (*((_QWORD *)v19 + 2) == v6)
                  goto LABEL_32;
              }
              else if ((v22 & v20) != v17)
              {
                goto LABEL_41;
              }
              v19 = *(float **)v19;
              if (!v19)
                goto LABEL_41;
            }
          }
          do
          {
            v21 = *((_QWORD *)v19 + 1);
            if (v21 == v6)
            {
              if (*((_QWORD *)v19 + 2) == v6)
              {
LABEL_32:
                v83 = v9;
                v84 = v10;
                if (v10)
                {
                  v23 = (unint64_t *)&v10->__shared_owners_;
                  do
                    v24 = __ldxr(v23);
                  while (__stxr(v24 + 1, v23));
                  v13 = *(_QWORD *)(a1 + 16);
                }
                sub_239579084(v5, &v83, v19[6], (float)*(int *)(v13 + 116));
                v25 = v84;
                if (v84)
                {
                  v26 = (unint64_t *)&v84->__shared_owners_;
                  do
                    v27 = __ldaxr(v26);
                  while (__stlxr(v27 - 1, v26));
                  if (!v27)
                  {
                    ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                    std::__shared_weak_count::__release_weak(v25);
                  }
                }
                break;
              }
            }
            else
            {
              if (v21 >= *(_QWORD *)&v15)
                v21 %= *(_QWORD *)&v15;
              if (v21 != v17)
                break;
            }
            v19 = *(float **)v19;
          }
          while (v19);
        }
      }
    }
LABEL_41:
    if (v10)
    {
      v28 = (unint64_t *)&v10->__shared_owners_;
      do
        v29 = __ldaxr(v28);
      while (__stlxr(v29 - 1, v28));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    v7 = *(_QWORD *)(a1 + 16);
  }
  v30 = *(_QWORD **)(v7 + 16);
  v31 = (int8x8_t)v30[1];
  if (v31)
  {
    v32 = (uint8x8_t)vcnt_s8(v31);
    v32.i16[0] = vaddlv_u8(v32);
    if (v32.u32[0] > 1uLL)
    {
      v33 = v6;
      if (*(_QWORD *)&v31 <= v6)
        v33 = v6 % *(_QWORD *)&v31;
    }
    else
    {
      v33 = (*(_QWORD *)&v31 - 1) & v6;
    }
    v34 = *(_QWORD **)(*v30 + 8 * v33);
    if (v34)
    {
      v35 = (_QWORD *)*v34;
      if (v35)
      {
        if (v32.u32[0] < 2uLL)
        {
          v36 = *(_QWORD *)&v31 - 1;
          while (1)
          {
            v38 = v35[1];
            if (v38 == v6)
            {
              if (v35[2] == v6)
                goto LABEL_68;
            }
            else if ((v38 & v36) != v33)
            {
              goto LABEL_90;
            }
            v35 = (_QWORD *)*v35;
            if (!v35)
              goto LABEL_90;
          }
        }
        do
        {
          v37 = v35[1];
          if (v37 == v6)
          {
            if (v35[2] == v6)
            {
LABEL_68:
              v39 = *(_QWORD *)(v5 + 64);
              v40 = (unint64_t *)v35[3];
              v41 = *v40;
              v42 = v40[1];
              v74 = &off_250ADB778;
              sub_2394247FC(v5, (uint64_t)&v75);
              sub_239713FB0(&v74, 0, &v78, COERCE_UNSIGNED_INT64((float)((float)v41 / (float)v39)), COERCE_UNSIGNED_INT64((float)((float)v42 / (float)HIDWORD(v39))));
              sub_239422CF0(v5, (uint64_t)&v78);
              v43 = nullsub_4(v82);
              v44 = v80;
              if (v80)
              {
                v45 = (unint64_t *)&v80->__shared_owners_;
                do
                  v46 = __ldaxr(v45);
                while (__stlxr(v46 - 1, v45));
                if (!v46)
                {
                  ((void (*)(std::__shared_weak_count *, __n128))v44->__on_zero_shared)(v44, v43);
                  std::__shared_weak_count::__release_weak(v44);
                }
              }
              j_nullsub_4_89(&v78);
              v47 = nullsub_4(v77);
              v48 = v76;
              if (v76)
              {
                v49 = (unint64_t *)&v76->__shared_owners_;
                do
                  v50 = __ldaxr(v49);
                while (__stlxr(v50 - 1, v49));
                if (!v50)
                {
                  ((void (*)(std::__shared_weak_count *, __n128))v48->__on_zero_shared)(v48, v47);
                  std::__shared_weak_count::__release_weak(v48);
                }
              }
              j_nullsub_4_89(&v74);
              if ((*(_DWORD *)(*(_QWORD *)(a1 + 16) + 116) & 0x80000000) == 0)
              {
                v74 = &off_250ADB778;
                sub_2394247FC(v5, (uint64_t)&v75);
                v51 = *(_QWORD *)(a1 + 16);
                *(float *)&v52 = (float)*(int *)(v51 + 116);
                *(float *)&v53 = (float)*(int *)(v51 + 120);
                sub_239713AF4((uint64_t)&v74, (uint64_t)&v78, v52, v53);
                sub_239422CF0(v5, (uint64_t)&v78);
                v54 = nullsub_4(v82);
                v55 = v80;
                if (v80)
                {
                  v56 = (unint64_t *)&v80->__shared_owners_;
                  do
                    v57 = __ldaxr(v56);
                  while (__stlxr(v57 - 1, v56));
                  if (!v57)
                  {
                    ((void (*)(std::__shared_weak_count *, __n128))v55->__on_zero_shared)(v55, v54);
                    std::__shared_weak_count::__release_weak(v55);
                  }
                }
                j_nullsub_4_89(&v78);
                v58 = nullsub_4(v77);
                v59 = v76;
                if (v76)
                {
                  v60 = (unint64_t *)&v76->__shared_owners_;
                  do
                    v61 = __ldaxr(v60);
                  while (__stlxr(v61 - 1, v60));
                  if (!v61)
                  {
                    ((void (*)(std::__shared_weak_count *, __n128))v59->__on_zero_shared)(v59, v58);
                    std::__shared_weak_count::__release_weak(v59);
                  }
                }
                j_nullsub_4_89(&v74);
              }
              break;
            }
          }
          else
          {
            if (v37 >= *(_QWORD *)&v31)
              v37 %= *(_QWORD *)&v31;
            if (v37 != v33)
              break;
          }
          v35 = (_QWORD *)*v35;
        }
        while (v35);
      }
    }
  }
LABEL_90:
  v62 = *(std::__shared_weak_count **)(a1 + 8);
  if (v4)
  {
    v63 = (unint64_t *)&v4->__shared_owners_;
    do
      v64 = __ldxr(v63);
    while (__stxr(v64 + 1, v63));
    v78 = sub_239B2EBE8;
    v79 = 0;
    v80 = v62;
    v81 = v5;
    v82[0] = v4;
    do
      v65 = __ldxr(v63);
    while (__stxr(v65 + 1, v63));
  }
  else
  {
    v78 = sub_239B2EBE8;
    v79 = 0;
    v80 = v62;
    v81 = v5;
    v82[0] = 0;
  }
  LOBYTE(v74) = 0;
  v82[1] = v6;
  sub_239B55430((uint64_t)&v78, (uint64_t)&v74);
  v66 = (std::__shared_weak_count *)v82[0];
  if (v82[0])
  {
    v67 = (unint64_t *)(v82[0] + 8);
    do
      v68 = __ldaxr(v67);
    while (__stlxr(v68 - 1, v67));
    if (!v68)
    {
      ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
      std::__shared_weak_count::__release_weak(v66);
    }
  }
  v69 = v74;
  if (v4)
  {
    v70 = (unint64_t *)&v4->__shared_owners_;
    do
      v71 = __ldaxr(v70);
    while (__stlxr(v71 - 1, v70));
    if (!v71)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    do
      v72 = __ldaxr(v70);
    while (__stlxr(v72 - 1, v70));
    if (!v72)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v69 != 0;
}

void sub_239B5A260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, std::__shared_weak_count *a20)
{
  std::__shared_weak_count *v20;
  uint64_t v21;
  __n128 v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  __n128 v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;

  v23 = nullsub_4(v21 + 32);
  v24 = a20;
  if (a20)
  {
    p_shared_owners = (unint64_t *)&a20->__shared_owners_;
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v24->__on_zero_shared)(v24, v23);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  j_nullsub_4_89(&a18);
  v27 = nullsub_4(&a14);
  v28 = a12;
  if (a12)
  {
    v29 = (unint64_t *)&a12->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v28->__on_zero_shared)(v28, v27);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  j_nullsub_4_89(&a10);
  if (v20)
  {
    v31 = (unint64_t *)&v20->__shared_owners_;
    do
      v32 = __ldaxr(v31);
    while (__stlxr(v32 - 1, v31));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B5A4EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 308, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = a2;
  v14 = a2;
  v5 = v15;
  v6 = (uint64_t *)a3[3];
  if (!v6)
  {
    v16 = 0;
    LODWORD(v17) = 0;
    v18 = a2;
LABEL_10:
    v20 = v6;
    goto LABEL_11;
  }
  if (v6 == a3)
  {
    v16 = v15;
    (*(void (**)(uint64_t *, _QWORD *))(*a3 + 24))(a3, v15);
    v3 = v14;
    v6 = v16;
  }
  else
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    v16 = v6;
  }
  LODWORD(v17) = 0;
  v18 = v3;
  if (!v6)
    goto LABEL_10;
  if (v6 != v15)
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    goto LABEL_10;
  }
  v20 = &v19;
  (*(void (**)(_QWORD *))(v15[0] + 24))(v15);
LABEL_11:
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v18 = v14;
  v21 = v14;
  v25 = 0;
  v26 = v14;
  v7 = (std::__shared_weak_count *)operator new(0x120uLL);
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF93E8;
  *(_QWORD *)&v13 = sub_239AA2C28((uint64_t)&v7[1], (uint64_t)&v17);
  *((_QWORD *)&v13 + 1) = v7;
  sub_239A82E8C(&v17);
  if (v16 == v15)
  {
    v9 = 4;
    goto LABEL_15;
  }
  if (v16)
  {
    v9 = 5;
    v5 = v16;
LABEL_15:
    (*(void (**)(uint64_t *))(*v5 + 8 * v9))(v5);
  }
  v10 = sub_239AA0050(*(unsigned int **)(a1 + 288), &v13);
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  return v10;
}

void sub_239B5A6FC(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B5A708(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, char a17)
{
  _QWORD *v17;
  uint64_t v19;

  if (a16 == v17)
  {
    v19 = 4;
  }
  else
  {
    if (!a16)
      _Unwind_Resume(exception_object);
    v19 = 5;
    v17 = a16;
  }
  (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B5A770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, uint64_t, _BYTE *);
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  pthread_cond_t v22;
  pthread_cond_t v23;
  pthread_mutex_t v24;
  _BYTE v25[24];
  _BYTE *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  sub_2397A1618(&v24);
  v15 = 0x7FFFFFFF;
  pthread_cond_init(&v22, 0);
  pthread_cond_init(&v23, 0);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(uint64_t (**)(_QWORD *, uint64_t, _BYTE *))a1;
  v8 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v6 >> 1));
  if ((v6 & 1) != 0)
    v7 = *(uint64_t (**)(_QWORD *, uint64_t, _BYTE *))(*v8 + v7);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = operator new(0x20uLL);
  *v10 = &off_250AF7040;
  v10[1] = &v15;
  v10[2] = a2;
  v10[3] = a3;
  v26 = v10;
  v11 = v7(v8, v9, v25);
  v12 = v26;
  if (v26 == v25)
  {
    v13 = 4;
    v12 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_8;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_8:
  if (v11)
  {
    sub_2395BFB54(&v15);
    sub_2395C2A4C((uint64_t)&v15);
  }
  return sub_2395C29C4((uint64_t)&v15);
}

void sub_239B5A8EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  va_list va;

  va_start(va, a2);
  v5 = *(_QWORD **)(v3 - 80);
  if (v5 == v2)
  {
    v6 = 4;
    v5 = (_QWORD *)(v3 - 104);
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B5A93C()
{
  pthread_mutex_t *v0;

  sub_2397A163C(v0);
  JUMPOUT(0x239B5A948);
}

void sub_239B5A95C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B5A970(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF7040;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B5A9B0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF7040;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B5A9D8(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  char v6;
  _QWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;

  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *a3;
  v7 = *(_QWORD **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v10 = (std::__shared_weak_count *)v7[1];
  *v7 = v4;
  v7[1] = v5;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  **(_BYTE **)(a1 + 24) = v6;
  v13 = *(unsigned int **)(a1 + 8);
  v16 = 1;
  sub_2395BFE44(v13, &v16);
  if (v5)
  {
    v14 = (unint64_t *)&v5->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_239B5AAB8(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B5AAFC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B5AB10(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6BD0;
  result[1] = v3;
  return result;
}

uint64_t sub_239B5AB44(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6BD0;
  a2[1] = v2;
  return result;
}

void sub_239B5AB60(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4DD70;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4DFF4((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B5AC04(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B5AC48(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF6B88;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_239B5ACD4(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF6B88;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B5AD70(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AF6B88;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
  {
    if (v5 == a1 + 40)
    {
      v2[8] = v2 + 5;
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
      return v2;
    }
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  }
  v2[8] = v5;
  return v2;
}

void sub_239B5AE2C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
LABEL_6:
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B5AE78(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AF6B88;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_239B5AF48(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B5AF84(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = (_QWORD *)a1[4];
  if (result == v2)
  {
    v7 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239B5B008(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

void sub_239B5B088(uint64_t a1, float *a2)
{
  float v2;
  void *__p;
  char v4;

  v2 = *a2;
  v4 = 0;
  LOBYTE(__p) = 0;
  sub_2396FD7C8(a1 + 8, (uint64_t)&__p, v2);
  if (v4 < 0)
    operator delete(__p);
}

void sub_239B5B0D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B5B0EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  int v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __int128 v53;
  unint64_t v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  int v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  _QWORD *v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  void **v129;
  __int128 v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  _QWORD *v134;
  size_t v135;
  _QWORD *v136;
  _QWORD *v137;
  char *v138;
  _QWORD *v139;
  char *v140;
  int64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  _BYTE *v146;
  _QWORD *v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v154;
  _OWORD *v155;
  char *v156;
  uint64_t v157;
  __int128 v158;
  unint64_t *v159;
  unint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  BOOL v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  BOOL v170;
  char v171;
  void *v172;
  std::__shared_weak_count *v173;
  unint64_t *v174;
  unint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  char v178;
  __int128 v179;
  uint64_t v180;
  char *v181;
  __int128 v182;
  __int128 v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  float64x2_t v189;
  uint64_t *v190;
  char **v191;
  char v192;
  float64x2_t v193;
  float64x2_t v194;
  _QWORD *v195;
  uint64_t v196;
  float64x2_t v197;
  BOOL v198;
  double v200;
  float64x2_t v205;
  float64x2_t v206;
  float64x2_t v207;
  float64x2_t v208;
  float64x2_t v209;
  float64x2_t v210;
  float64x2_t v211;
  float64x2_t v212;
  float64x2_t v214;
  float64x2_t v215;
  float64x2_t v218;
  float64x2_t v219;
  float64x2_t v220;
  float64x2_t v221;
  float64x2_t v222;
  float64x2_t v223;
  float64x2_t v224;
  float64x2_t v225;
  float64x2_t v226;
  float64x2_t v227;
  float64x2_t v228;
  float64x2_t v229;
  float64x2_t v230;
  float64x2_t v231;
  float64x2_t v232;
  float64x2_t v233;
  float64x2_t v234;
  float64x2_t v235;
  float64x2_t v236;
  float64x2_t v237;
  float64x2_t v238;
  float64x2_t v239;
  float64x2_t v240;
  float64x2_t v241;
  float64x2_t v243;
  float64x2_t v245;
  float64x2_t v246;
  float64x2_t v248;
  float64x2_t v250;
  float64x2_t v251;
  float64x2_t v252;
  float64x2_t v253;
  uint64_t v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  _QWORD *v266;
  double v267;
  double v268;
  float64x2_t v269;
  double v270;
  float64x2_t v271;
  double v272;
  float64x2_t v273;
  char v274;
  char v275;
  uint64_t v276;
  _QWORD *v277;
  uint64_t v278;
  float64x2_t v279;
  float64x2_t v280;
  float64x2_t v281;
  float64x2_t v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  uint64_t *v286;
  uint64_t v287;
  _QWORD *v288;
  uint64_t v289;
  _QWORD *v290;
  uint64_t v291;
  uint64_t v293;
  _QWORD *v294;
  uint64_t v295;
  std::__shared_weak_count *v296;
  unint64_t *v297;
  unint64_t v298;
  std::__shared_weak_count *v299;
  unint64_t *v300;
  unint64_t v301;
  std::__shared_weak_count *v302;
  unint64_t *v303;
  unint64_t v304;
  _QWORD *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  std::__shared_weak_count *v309;
  unint64_t *v310;
  unint64_t v311;
  _QWORD *v312;
  _QWORD *v313;
  uint64_t v314;
  double *v315;
  uint64_t v316;
  uint64_t *v317;
  uint64_t v318;
  _QWORD *v319;
  std::__shared_weak_count *v320;
  unint64_t *v321;
  unint64_t v322;
  uint64_t v323;
  _QWORD *v324;
  uint64_t v325;
  uint64_t *v326;
  uint64_t *v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  std::__shared_weak_count *v333;
  std::__shared_weak_count *v334;
  unint64_t *v335;
  unint64_t v336;
  double v337;
  uint64_t v338;
  std::__shared_weak_count *v339;
  unint64_t *v340;
  unint64_t v341;
  double v342;
  std::__shared_weak_count *v343;
  unint64_t *v344;
  unint64_t v345;
  uint64_t v346;
  _QWORD *v347;
  uint64_t v348;
  double v349;
  std::__shared_weak_count *v350;
  unint64_t *v351;
  unint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  _QWORD *v356;
  uint64_t v357;
  std::__shared_weak_count *v358;
  unint64_t *v359;
  unint64_t v360;
  uint64_t v361;
  _QWORD *v362;
  uint64_t v363;
  uint64_t v364;
  _QWORD *v365;
  uint64_t v366;
  float64x2_t *v367;
  uint64_t v368;
  float64x2_t *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  int v374;
  _QWORD *v375;
  uint64_t *v376;
  uint64_t *v377;
  _QWORD *v378;
  float64x2_t v379;
  uint64_t v380;
  __int128 v381;
  std::__shared_weak_count *v382;
  __int128 v383;
  __int128 v384;
  uint64_t v385;
  uint64_t v386;
  void *v387;
  void *v388;
  char *v389;
  int v390;
  uint64_t v391;
  std::__shared_weak_count *v392;
  void *v393;
  char *v394;
  float64x2_t v395;
  float64x2_t v396;
  float64x2_t v397;
  float64x2_t v398;
  float64x2_t v399;
  float64x2_t v400;
  float64x2_t v401;
  float64x2_t v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  _BYTE v412[29];
  uint64_t v413;
  unint64_t v414;
  _QWORD v415[2];
  int v416;
  uint64_t v417;
  unint64_t v418;
  _QWORD v419[2];
  int v420;
  uint64_t v421;
  unint64_t v422;
  _QWORD v423[2];
  int v424;
  uint64_t v425;
  __int128 v426;
  uint64_t v427;
  uint64_t v428;
  unint64_t v429;
  _QWORD v430[2];
  int v431;
  __int128 v432;
  __int128 v433;
  int v434;
  __int128 v435;
  uint64_t v436;
  char v437;
  __int128 v438;
  __int128 v439;
  int v440;
  __int128 v441;
  uint64_t v442;
  char v443;
  __int128 v444;
  __int128 v445;
  int v446;
  __int128 v447;
  uint64_t v448;
  char v449;
  __int128 v450;
  __int128 v451;
  uint64_t v452;
  int v453;
  __int128 v454;
  uint64_t v455;
  __int128 v456;
  uint64_t v457;
  __int128 v458;
  uint64_t v459;
  int v460;
  _OWORD v461[2];
  uint64_t v462;
  uint64_t *v463;
  _QWORD v464[2];
  uint64_t *v465;
  _QWORD v466[2];
  uint64_t *v467;
  _QWORD v468[2];
  uint64_t *v469;
  _QWORD v470[4];
  _QWORD v471[2];
  int v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  int v476;
  __int128 v477;
  uint64_t v478;
  char v479;
  int v480;
  char v481;
  __int128 v482;
  __int128 v483;
  uint64_t v484;
  __int128 v485;
  _QWORD v486[2];
  int v487;
  __int128 v488;
  int v489;
  _BYTE v490[28];
  uint64_t v491;
  __int128 v492;
  __int128 v493;
  uint64_t v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  int v513;
  _QWORD *v514;
  _QWORD *v515[2];
  __int128 v516;
  __int128 v517;
  int v518;
  void *__src[3];
  char v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  uint64_t v524;
  __int128 v525;
  std::__shared_weak_count *v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  char v537;
  _BYTE v538[24];
  _BYTE *v539;
  _BYTE v540[24];
  _BYTE *v541;
  _QWORD v542[3];
  _QWORD *v543;
  _BYTE v544[24];
  _BYTE *v545;
  _BYTE v546[24];
  _BYTE *v547;
  _BYTE v548[24];
  _BYTE *v549;
  _QWORD v550[3];
  _QWORD *v551;
  void *__p[2];
  __int128 v553;
  float64x2_t v554;
  __int128 v555;
  _BYTE v556[48];
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  _BYTE v564[80];
  uint64_t v565;
  __int128 v566;
  __int128 v567;
  uint64_t v568;
  int v569;
  _BYTE v570[32];
  int v571;
  __int128 v572;
  __int128 v573;
  int v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  __int128 v578;
  __int128 v579;
  __int128 v580;
  __int128 v581;
  __int128 v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  __int128 v591;
  __int128 v592;
  int v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  char v597;
  char v598;
  uint64_t v599;
  _BYTE v600[24];
  _BYTE *v601;
  _BYTE v602[24];
  _BYTE *v603;
  _QWORD v604[3];
  _QWORD *v605;
  _BYTE v606[24];
  _BYTE *v607;
  _QWORD v608[3];
  _QWORD *v609;
  _BYTE v610[24];
  _BYTE *v611;
  _QWORD v612[3];
  _QWORD *v613;
  _BYTE v614[24];
  _BYTE *v615;
  _QWORD v616[3];
  _QWORD *v617;
  _QWORD v618[3];
  _QWORD *v619;
  _QWORD v620[3];
  _QWORD *v621;
  _BYTE v622[24];
  _BYTE *v623;
  _QWORD v624[3];
  _QWORD *v625;
  _QWORD v626[3];
  _QWORD *v627;
  _QWORD v628[3];
  _QWORD *v629;
  _QWORD v630[3];
  _QWORD *v631;
  _BYTE v632[24];
  _BYTE *v633;
  _QWORD v634[3];
  _QWORD *v635;
  _QWORD v636[3];
  _QWORD *v637;
  _OWORD v638[12];
  uint64_t v639;
  __int128 v640;
  __int128 v641;
  __int128 v642;
  __int128 v643;
  __int128 v644;
  __int128 v645;
  uint64_t v646;
  uint64_t *v647;
  _QWORD v648[2];
  uint64_t *v649;
  _QWORD v650[2];
  __int128 v651;
  __int128 v652;
  uint64_t v653;
  __int128 v654;
  __int128 v655;
  __int128 v656;
  __int128 v657;
  __int128 v658;
  uint64_t v659;
  __int128 v660;
  __int128 v661;
  uint64_t v662;
  __int128 v663;
  uint64_t v664;
  int v665;
  uint64_t v666;
  unint64_t v667;
  _QWORD v668[2];
  int v669;
  _OWORD v670[2];
  int v671;
  __int128 v672;
  uint64_t v673;
  char v674;
  uint64_t v675;
  _BYTE v676[24];
  _BYTE *v677;
  _QWORD v678[3];
  _QWORD *v679;
  _QWORD v680[3];
  _QWORD *v681;
  _BYTE v682[24];
  _BYTE *v683;
  _BYTE v684[24];
  _BYTE *v685;
  _BYTE v686[24];
  _BYTE *v687;
  _BYTE v688[24];
  _BYTE *v689;
  _BYTE v690[24];
  _BYTE *v691;
  _QWORD v692[3];
  _QWORD *v693;
  _QWORD v694[3];
  _QWORD *v695;
  __int128 v696;
  __int128 v697;
  __int128 v698;
  __int128 v699;
  std::__shared_weak_count *v700;
  __int128 v701;
  __int128 v702;
  int v703;
  uint64_t v704;
  int v705;
  __int128 v706;
  __int128 v707;
  __int128 v708;
  uint64_t v709;
  int v710;
  __int128 v711;
  __int128 v712;
  int v713;
  __int128 v714;
  __int128 v715;
  __int128 v716;
  __int128 v717;
  uint64_t v718;
  uint64_t v719;
  __int128 v720;
  __int128 v721;
  uint64_t v722;
  int v723;
  float64x2_t v724;
  float64x2_t v725;
  float64x2_t v726;
  float64x2_t v727;
  float64x2_t v728;
  float64x2_t v729;
  float64x2_t v730;
  float64x2_t v731;
  __int128 v732;
  __int128 v733;
  __int128 v734;
  __int128 v735;
  __int128 v736;
  __int128 v737;
  __int128 v738;
  __int128 v739;
  __int128 v740;
  uint64_t v741;
  uint64_t v742;
  _OWORD v743[2];
  int v744;
  _QWORD *v745;
  _QWORD *v746;
  _QWORD *v747;
  __int128 v748;
  __int128 v749;
  int v750;
  __int128 v751;
  void *v752;
  char v753;
  __int128 v754;
  __int128 v755;
  __int128 v756;
  uint64_t v757;
  _OWORD v758[2];
  uint64_t v759;
  uint64_t *v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t *v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t *v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t *v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  unint64_t v773;
  uint64_t v774;
  uint64_t v775;
  int v776;
  __int128 v777;
  __int128 v778;
  __int128 v779;
  int v780;
  __int128 v781;
  uint64_t v782;
  char v783;
  int v784;
  char v785;
  __int128 v786;
  __int128 v787;
  uint64_t v788;
  __int128 v789;
  uint64_t v790;
  uint64_t v791;
  int v792;
  __int128 v793;
  int v794;
  _OWORD v795[2];
  uint64_t v796;
  __int128 v797;
  __int128 v798;
  uint64_t v799;
  __int128 v800;
  __int128 v801;
  __int128 v802;
  __int128 v803;
  __int128 v804;
  __int128 v805;
  __int128 v806;
  __int128 v807;
  __int128 v808;
  __int128 v809;
  __int128 v810;
  __int128 v811;
  __int128 v812;
  __int128 v813;
  __int128 v814;
  __int128 v815;
  _OWORD v816[11];
  __int128 v817;
  uint64_t v818;
  __int128 v819;
  __int128 v820;
  __int128 v821;
  __int128 v822;
  __int128 v823;
  __int128 v824;
  uint64_t v825;
  uint64_t *v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t *v829;
  uint64_t v830;
  uint64_t v831;
  __int128 v832;
  __int128 v833;
  uint64_t v834;
  __int128 v835;
  __int128 v836;
  __int128 v837;
  __int128 v838;
  __int128 v839;
  uint64_t v840;
  __int128 v841;
  __int128 v842;
  uint64_t v843;
  __int128 v844;
  uint64_t v845;
  int v846;
  uint64_t v847;
  unint64_t v848;
  uint64_t v849;
  uint64_t v850;
  int v851;
  __int128 v852;
  __int128 v853;
  int v854;
  __int128 v855;
  uint64_t v856;
  char v857;
  __int128 v858[67];
  __int128 v859;
  _OWORD v860[2];
  uint64_t v861;
  unint64_t v862;
  uint64_t v863;
  uint64_t v864;
  int v865;
  uint64_t v866;
  unint64_t v867;
  uint64_t v868;
  uint64_t v869;
  int v870;
  uint64_t v871;
  unint64_t v872;
  uint64_t v873;
  uint64_t v874;
  int v875;
  uint64_t v876;
  __int128 v877;
  uint64_t v878;
  uint64_t v879;
  unint64_t v880;
  uint64_t v881;
  uint64_t v882;
  int v883;
  __int128 v884;
  __int128 v885;
  int v886;
  __int128 v887;
  uint64_t v888;
  char v889;
  __int128 v890;
  __int128 v891;
  int v892;
  __int128 v893;
  uint64_t v894;
  char v895;
  __int128 v896;
  __int128 v897;
  int v898;
  __int128 v899;
  uint64_t v900;
  char v901;
  __int128 v902;
  __int128 v903;
  uint64_t v904;
  int v905;
  __int128 v906;
  uint64_t v907;
  __int128 v908;
  uint64_t v909;
  __int128 v910;
  uint64_t v911;
  int v912;
  _BYTE v913[24];
  _BYTE *v914;
  _BYTE v915[568];
  float64x2_t v916;
  float64_t v917;
  float64x2_t *v918;
  float64x2_t v919;
  __int128 v920;
  float64x2_t v921;
  unint64_t v922;
  uint64_t v923;
  float64x2_t v924;
  __int128 v925;
  _QWORD v926[3];
  _QWORD *v927;
  double v928;
  std::__shared_weak_count *v929;
  double *v930;
  uint64_t v931;
  std::__shared_weak_count *v932;
  uint64_t *v933;
  uint64_t v934;

  v1 = MEMORY[0x24BDAC7A8](a1);
  v3 = v2;
  v5 = v4;
  v6 = v1;
  v934 = *MEMORY[0x24BDAC8D0];
  v375 = v7;
  sub_2396FD800(v7, (uint64_t)v913);
  *(_QWORD *)&v696 = 0x42C8000000000000;
  sub_2396FCC68(v915, 100, v913, &v696, 1.0);
  v8 = v914;
  if (v914 == v913)
  {
    v9 = 4;
    v8 = v913;
    goto LABEL_5;
  }
  if (v914)
  {
    v9 = 5;
LABEL_5:
    (*(void (**)(void))(*v8 + 8 * v9))();
  }
  sub_239B5EE28(__p);
  if (**((int **)__p[0] + 7) <= 3)
  {
    if (*((_BYTE *)__p[0] + 72))
    {
      *(_QWORD *)&v696 = __p;
      *((std::chrono::steady_clock::time_point *)&v696 + 1) = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&v697 = std::chrono::system_clock::now();
      DWORD2(v697) = 3;
      *(_QWORD *)&v698 = "unknown file";
      DWORD2(v698) = 49;
      v700 = 0;
      *(_QWORD *)&v699 = "unknown function";
      *((_QWORD *)&v699 + 1) = 0;
      sub_239B5EEF8((uint64_t)&v696, "Reconstructing camera poses - step 1");
      sub_239A47720((uint64_t)&v696);
      sub_239A47720((uint64_t)&v696);
      v10 = v700;
      if (v700)
      {
        p_shared_owners = (unint64_t *)&v700->__shared_owners_;
        do
          v12 = __ldaxr(p_shared_owners);
        while (__stlxr(v12 - 1, p_shared_owners));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
    }
  }
  v13 = *(_QWORD *)(v6 + 16);
  v14 = *(_QWORD *)(v6 + 32);
  v699 = 0u;
  v698 = 0u;
  v697 = 0u;
  v696 = 0u;
  v701 = 0u;
  v702 = 0u;
  LODWORD(v700) = 1065353216;
  v703 = 1065353216;
  v704 = 0;
  v705 = 0;
  v706 = 0u;
  v707 = 0u;
  v708 = 0u;
  v709 = 0;
  v710 = 1065353216;
  v711 = 0u;
  v712 = 0u;
  v713 = 1065353216;
  v717 = 0u;
  v716 = 0u;
  v715 = 0u;
  v714 = 0u;
  v718 = 0;
  v719 = 0x3FF0000000000000;
  v720 = 0u;
  v721 = 0u;
  v722 = 0;
  v723 = -1;
  v739 = 0u;
  v740 = 0u;
  v737 = 0u;
  v738 = 0u;
  v735 = 0u;
  v736 = 0u;
  v733 = 0u;
  v734 = 0u;
  v731 = 0u;
  v732 = 0u;
  v729 = 0u;
  v730 = 0u;
  v727 = 0u;
  v728 = 0u;
  v725 = 0u;
  v726 = 0u;
  v724 = 0u;
  v741 = 0;
  sub_239AEA110((uint64_t)&v742);
  v380 = v6;
  v377 = v5;
  sub_239420EF4((uint64_t)v743);
  v378 = v3;
  sub_239AD233C((uint64_t)v758);
  sub_239AB5C84((uint64_t)v816);
  sub_239AA7E14((uint64_t)&v859);
  sub_2396FDAA8(v375, (uint64_t)v690);
  sub_2396FD534(&v525, v915, 95);
  v689 = 0;
  v15 = (char *)operator new(0x40uLL);
  *(_QWORD *)v15 = &off_250ADB9D8;
  *(_OWORD *)(v15 + 8) = v525;
  *((_QWORD *)v15 + 3) = v526;
  v526 = 0;
  *((_QWORD *)&v525 + 1) = 0;
  v16 = v527;
  v527 = 0uLL;
  v17 = v528;
  *((_OWORD *)v15 + 2) = v16;
  *((_OWORD *)v15 + 3) = v17;
  v528 = 0uLL;
  v689 = v15;
  sub_2396FD600((uint64_t)v692, (uint64_t)v690, (uint64_t)v688);
  v18 = v689;
  if (v689 == v688)
  {
    v19 = 4;
    v18 = v688;
    goto LABEL_17;
  }
  if (v689)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(void))(*v18 + 8 * v19))();
  }
  v20 = (std::__shared_weak_count *)*((_QWORD *)&v528 + 1);
  if (*((_QWORD *)&v528 + 1))
  {
    v21 = (unint64_t *)(*((_QWORD *)&v528 + 1) + 8);
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v23 = (std::__shared_weak_count *)*((_QWORD *)&v527 + 1);
  if (*((_QWORD *)&v527 + 1))
  {
    v24 = (unint64_t *)(*((_QWORD *)&v527 + 1) + 8);
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  v376 = v3 + 22;
  v26 = v526;
  if (v526)
  {
    v27 = (unint64_t *)&v526->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v29 = v691;
  if (v691 == v690)
  {
    v30 = 4;
    v29 = v690;
  }
  else
  {
    if (!v691)
      goto LABEL_38;
    v30 = 5;
  }
  (*(void (**)(void))(*v29 + 8 * v30))();
LABEL_38:
  v31 = *v376;
  v32 = v6 + 1672;
  v33 = *(_QWORD *)(v6 + 1696);
  v372 = v6 + 1672;
  if (!v33)
  {
LABEL_41:
    v687 = (_BYTE *)v33;
    goto LABEL_43;
  }
  if (v33 != v32)
  {
    v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 16))(v33);
    goto LABEL_41;
  }
  v687 = v686;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v32 + 24))(v6 + 1672, v686);
LABEL_43:
  v34 = (uint64_t)v693;
  if (!v693)
  {
LABEL_46:
    v683 = (_BYTE *)v34;
    goto LABEL_48;
  }
  if (v693 != v692)
  {
    v34 = (*(uint64_t (**)(void))(*v693 + 16))();
    goto LABEL_46;
  }
  v683 = v682;
  (*(void (**)(_QWORD *, _BYTE *))(v692[0] + 24))(v692, v682);
LABEL_48:
  v35 = v684;
  v36 = (uint64_t)v695;
  if (!v695)
  {
LABEL_51:
    v685 = (_BYTE *)v36;
    goto LABEL_53;
  }
  if (v695 != v694)
  {
    v36 = (*(uint64_t (**)(void))(*v695 + 16))();
    goto LABEL_51;
  }
  v685 = v684;
  (*(void (**)(void))(*v695 + 24))();
LABEL_53:
  v680[0] = &off_250AF6CF0;
  v680[1] = v13;
  v681 = v680;
  v678[0] = &off_250AF6D38;
  v678[1] = v14;
  v679 = v678;
  v677 = 0;
  v37 = sub_239E80038(v31);
  v38 = v677;
  if (v677 == v676)
  {
    v39 = 4;
    v38 = v676;
  }
  else
  {
    if (!v677)
      goto LABEL_58;
    v39 = 5;
  }
  (*(void (**)(void))(*v38 + 8 * v39))();
LABEL_58:
  v40 = v679;
  if (v679 == v678)
  {
    v41 = 4;
    v40 = v678;
  }
  else
  {
    if (!v679)
      goto LABEL_63;
    v41 = 5;
  }
  (*(void (**)(void))(*v40 + 8 * v41))();
LABEL_63:
  v42 = v681;
  if (v681 == v680)
  {
    v43 = 4;
    v42 = v680;
  }
  else
  {
    if (!v681)
      goto LABEL_68;
    v43 = 5;
  }
  (*(void (**)(void))(*v42 + 8 * v43))();
LABEL_68:
  if (v685 == v684)
  {
    v44 = 4;
  }
  else
  {
    if (!v685)
      goto LABEL_73;
    v44 = 5;
    v35 = v685;
  }
  (*(void (**)(_QWORD *))(*v35 + 8 * v44))(v35);
LABEL_73:
  v45 = v683;
  if (v683 == v682)
  {
    v46 = 4;
    v45 = v682;
  }
  else
  {
    if (!v683)
      goto LABEL_78;
    v46 = 5;
  }
  (*(void (**)(void))(*v45 + 8 * v46))();
LABEL_78:
  v47 = v687;
  if (v687 == v686)
  {
    v48 = 4;
    v47 = v686;
  }
  else
  {
    if (!v687)
      goto LABEL_83;
    v48 = 5;
  }
  (*(void (**)(void))(*v47 + 8 * v48))();
LABEL_83:
  v511 = v743[0];
  v512 = v743[1];
  v513 = v744;
  v514 = v745;
  v515[0] = v746;
  v515[1] = v747;
  if (v747)
  {
    v746[2] = v515;
    v745 = &v746;
    v746 = 0;
    v747 = 0;
  }
  else
  {
    v514 = v515;
  }
  v516 = v748;
  v517 = v749;
  v518 = v750;
  *(_OWORD *)__src = v751;
  __src[2] = v752;
  v752 = 0;
  v751 = 0uLL;
  v520 = v753;
  v524 = v757;
  v523 = v756;
  v522 = v755;
  v521 = v754;
  v461[0] = v758[0];
  v461[1] = v758[1];
  v462 = v759;
  v463 = v760;
  v464[0] = v761;
  v464[1] = v762;
  if (v762)
  {
    *(_QWORD *)(v761 + 16) = v464;
    v760 = &v761;
    v761 = 0;
    v762 = 0;
  }
  else
  {
    v463 = v464;
  }
  v49 = v5;
  v465 = v763;
  v466[0] = v764;
  v466[1] = v765;
  if (v765)
  {
    *(_QWORD *)(v764 + 16) = v466;
    v763 = &v764;
    v764 = 0;
    v765 = 0;
  }
  else
  {
    v465 = v466;
  }
  v467 = v766;
  v468[0] = v767;
  v468[1] = v768;
  if (v768)
  {
    *(_QWORD *)(v767 + 16) = v468;
    v766 = &v767;
    v767 = 0;
    v768 = 0;
  }
  else
  {
    v467 = v468;
  }
  v469 = v769;
  v470[0] = v770;
  v470[1] = v771;
  if (v771)
  {
    *(_QWORD *)(v770 + 16) = v470;
    v769 = &v770;
    v770 = 0;
    v771 = 0;
  }
  else
  {
    v469 = v470;
  }
  v50 = v772;
  v51 = v773;
  v773 = 0;
  v772 = 0;
  v470[2] = v50;
  v470[3] = v51;
  v471[0] = v774;
  v471[1] = v775;
  v472 = v776;
  if (v775)
  {
    v52 = *(_QWORD *)(v774 + 8);
    if ((v51 & (v51 - 1)) != 0)
    {
      if (v52 >= v51)
        v52 %= v51;
    }
    else
    {
      v52 &= v51 - 1;
    }
    *(_QWORD *)(v50 + 8 * v52) = v471;
    v774 = 0;
    v775 = 0;
  }
  v473 = v777;
  v474 = v778;
  v475 = v779;
  v476 = v780;
  v477 = v781;
  v478 = v782;
  v782 = 0;
  v781 = 0uLL;
  v479 = v783;
  v481 = v785;
  v480 = v784;
  v482 = v786;
  v483 = v787;
  v53 = v789;
  v789 = 0u;
  v484 = v788;
  v485 = v53;
  v486[0] = v790;
  v486[1] = v791;
  v487 = v792;
  if (v791)
  {
    v54 = *(_QWORD *)(v790 + 8);
    if ((*((_QWORD *)&v53 + 1) & (*((_QWORD *)&v53 + 1) - 1)) != 0)
    {
      if (v54 >= *((_QWORD *)&v53 + 1))
        v54 %= *((_QWORD *)&v53 + 1);
    }
    else
    {
      v54 &= *((_QWORD *)&v53 + 1) - 1;
    }
    *(_QWORD *)(v53 + 8 * v54) = v486;
    v790 = 0;
    v791 = 0;
  }
  v488 = v793;
  v489 = v794;
  *(_OWORD *)v490 = v795[0];
  *(_OWORD *)&v490[12] = *(_OWORD *)((char *)v795 + 12);
  v491 = v796;
  v55 = v797;
  v796 = 0;
  v797 = 0uLL;
  v494 = v799;
  v492 = v55;
  v493 = v798;
  v798 = 0uLL;
  v799 = 0;
  v509 = v814;
  v510 = v815;
  v507 = v812;
  v508 = v813;
  v505 = v810;
  v506 = v811;
  v503 = v808;
  v504 = v809;
  v501 = v806;
  v502 = v807;
  v499 = v804;
  v500 = v805;
  v497 = v802;
  v498 = v803;
  v495 = v800;
  v496 = v801;
  v638[8] = v816[8];
  v638[9] = v816[9];
  v638[4] = v816[4];
  v638[5] = v816[5];
  v638[7] = v816[7];
  v638[6] = v816[6];
  v638[0] = v816[0];
  v638[1] = v816[1];
  v638[3] = v816[3];
  v638[2] = v816[2];
  v638[10] = v816[10];
  v638[11] = v817;
  v56 = v818;
  v818 = 0;
  v817 = 0uLL;
  v644 = v823;
  v641 = v820;
  v642 = v821;
  v643 = v822;
  v640 = v819;
  v645 = v824;
  v639 = v56;
  v646 = v825;
  v824 = 0uLL;
  v825 = 0;
  v647 = v826;
  v648[0] = v827;
  v648[1] = v828;
  if (v828)
  {
    *(_QWORD *)(v827 + 16) = v648;
    v826 = &v827;
    v827 = 0;
    v828 = 0;
  }
  else
  {
    v647 = v648;
  }
  v57 = v378;
  v649 = v829;
  v650[0] = v830;
  v650[1] = v831;
  if (v831)
  {
    *(_QWORD *)(v830 + 16) = v650;
    v829 = &v830;
    v830 = 0;
    v831 = 0;
  }
  else
  {
    v649 = v650;
  }
  v651 = v832;
  v652 = v833;
  v58 = v834;
  v834 = 0;
  v833 = 0uLL;
  v656 = v837;
  v657 = v838;
  v658 = v839;
  v654 = v835;
  v655 = v836;
  v653 = v58;
  v659 = v840;
  v660 = v841;
  v661 = v842;
  v662 = v843;
  v842 = 0uLL;
  v843 = 0;
  v663 = v844;
  v664 = v845;
  v844 = 0uLL;
  v845 = 0;
  v665 = v846;
  v59 = v847;
  v847 = 0;
  v666 = v59;
  v60 = v848;
  v667 = v848;
  v848 = 0;
  v668[0] = v849;
  v668[1] = v850;
  v669 = v851;
  if (v850)
  {
    v61 = *(_QWORD *)(v849 + 8);
    if ((v60 & (v60 - 1)) != 0)
    {
      if (v61 >= v60)
        v61 %= v60;
    }
    else
    {
      v61 &= v60 - 1;
    }
    *(_QWORD *)(v59 + 8 * v61) = v668;
    v849 = 0;
    v850 = 0;
  }
  v671 = v854;
  v670[0] = v852;
  v670[1] = v853;
  v672 = v855;
  v673 = v856;
  v855 = 0uLL;
  v856 = 0;
  v674 = v857;
  sub_239B62508((uint64_t)&v675, v858);
  v411 = v859;
  *(_OWORD *)v412 = v860[0];
  *(_OWORD *)&v412[13] = *(_OWORD *)((char *)v860 + 13);
  v62 = v861;
  v63 = v862;
  v862 = 0;
  v861 = 0;
  v413 = v62;
  v414 = v63;
  v415[0] = v863;
  v415[1] = v864;
  v416 = v865;
  if (v864)
  {
    v64 = *(_QWORD *)(v863 + 8);
    if ((v63 & (v63 - 1)) != 0)
    {
      if (v64 >= v63)
        v64 %= v63;
    }
    else
    {
      v64 &= v63 - 1;
    }
    *(_QWORD *)(v62 + 8 * v64) = v415;
    v863 = 0;
    v864 = 0;
  }
  v65 = v866;
  v66 = v867;
  v867 = 0;
  v866 = 0;
  v417 = v65;
  v418 = v66;
  v419[0] = v868;
  v419[1] = v869;
  v420 = v870;
  if (v869)
  {
    v67 = *(_QWORD *)(v868 + 8);
    if ((v66 & (v66 - 1)) != 0)
    {
      if (v67 >= v66)
        v67 %= v66;
    }
    else
    {
      v67 &= v66 - 1;
    }
    *(_QWORD *)(v65 + 8 * v67) = v419;
    v868 = 0;
    v869 = 0;
  }
  v68 = v871;
  v69 = v872;
  v872 = 0;
  v871 = 0;
  v421 = v68;
  v422 = v69;
  v423[0] = v873;
  v423[1] = v874;
  v424 = v875;
  if (v874)
  {
    v70 = *(_QWORD *)(v873 + 8);
    if ((v69 & (v69 - 1)) != 0)
    {
      if (v70 >= v69)
        v70 %= v69;
    }
    else
    {
      v70 &= v69 - 1;
    }
    *(_QWORD *)(v68 + 8 * v70) = v423;
    v873 = 0;
    v874 = 0;
  }
  v425 = v876;
  v426 = v877;
  v71 = v878;
  v878 = 0;
  v877 = 0uLL;
  v72 = v879;
  v73 = v880;
  v880 = 0;
  v879 = 0;
  v427 = v71;
  v428 = v72;
  v429 = v73;
  v430[0] = v881;
  v430[1] = v882;
  v431 = v883;
  if (v882)
  {
    v74 = *(_QWORD *)(v881 + 8);
    if ((v73 & (v73 - 1)) != 0)
    {
      if (v74 >= v73)
        v74 %= v73;
    }
    else
    {
      v74 &= v73 - 1;
    }
    *(_QWORD *)(v72 + 8 * v74) = v430;
    v881 = 0;
    v882 = 0;
  }
  v434 = v886;
  v432 = v884;
  v433 = v885;
  v435 = v887;
  v436 = v888;
  v887 = 0uLL;
  v888 = 0;
  v437 = v889;
  v438 = v890;
  v439 = v891;
  v440 = v892;
  v441 = v893;
  v442 = v894;
  v893 = 0uLL;
  v894 = 0;
  v443 = v895;
  v446 = v898;
  v444 = v896;
  v445 = v897;
  v447 = v899;
  v448 = v900;
  v899 = 0uLL;
  v900 = 0;
  v449 = v901;
  v450 = v902;
  v451 = v903;
  v453 = v905;
  v452 = v904;
  v454 = v906;
  v455 = v907;
  v906 = 0uLL;
  v907 = 0;
  v456 = v908;
  v457 = v909;
  v908 = 0uLL;
  v909 = 0;
  v458 = v910;
  v459 = v911;
  v910 = 0uLL;
  v911 = 0;
  v460 = v912;
  sub_239B5F018(*v5, *(_QWORD *)v6);
  v75 = *v5;
  v409 = 0u;
  v410 = 0u;
  v407 = 0u;
  v408 = 0u;
  v405 = 0u;
  v406 = 0u;
  v403 = 0u;
  v404 = 0u;
  v401 = 0u;
  v402 = 0u;
  v399 = 0u;
  v400 = 0u;
  v397 = 0u;
  v398 = 0u;
  v395 = 0u;
  v396 = 0u;
  v373 = v75;
  if (v37)
  {
    sub_239B5F258(v75, (uint64_t)&v696);
    v399 = v728;
    v400 = v729;
    v401 = v730;
    v402 = v731;
    v395 = v724;
    v396 = v725;
    v397 = v726;
    v398 = v727;
    v405 = v734;
    v406 = v735;
    v403 = v732;
    v404 = v733;
    v409 = v738;
    v410 = v739;
    v407 = v736;
    v408 = v737;
    if (*((_QWORD *)&v740 + 1) != (_QWORD)v740)
      sub_2395F4CD4(*v5 + 904, (char **)&v740);
    v374 = 1;
LABEL_251:
    sub_239B5EE28(&v529);
    if (**(int **)(v529 + 56) <= 3)
    {
      if (*(_BYTE *)(v529 + 72))
      {
        __p[0] = &v529;
        __p[1] = (void *)std::chrono::steady_clock::now().__d_.__rep_;
        *(std::chrono::system_clock::time_point *)&v553 = std::chrono::system_clock::now();
        DWORD2(v553) = 3;
        *(_QWORD *)&v554.f64[0] = "unknown file";
        LODWORD(v554.f64[1]) = 131;
        *(_QWORD *)v556 = 0;
        *(_QWORD *)&v555 = "unknown function";
        *((_QWORD *)&v555 + 1) = 0;
        sub_239B5EEF8((uint64_t)__p, "Reconstructing camera poses - step 2");
        sub_239A47720((uint64_t)__p);
        sub_239A47720((uint64_t)__p);
        v120 = *(std::__shared_weak_count **)v556;
        if (*(_QWORD *)v556)
        {
          v121 = (unint64_t *)(*(_QWORD *)v556 + 8);
          do
            v122 = __ldaxr(v121);
          while (__stlxr(v122 - 1, v121));
          if (!v122)
          {
            ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
            std::__shared_weak_count::__release_weak(v120);
          }
        }
      }
    }
    sub_2396B8E4C(*(_QWORD *)v6 + 456, &v393);
    if (!*(_BYTE *)(v6 + 1664) || *(_BYTE *)(v6 + 147))
    {
      if (*(_BYTE *)(v6 + 1664))
        goto LABEL_381;
      v129 = (void **)operator new(0x20uLL);
      *v129 = &off_250AF6F68;
      v129[1] = v377;
      v129[2] = &v511;
      *((_QWORD *)&v553 + 1) = v129;
      v130 = v512;
      *((_OWORD *)v377 + 1) = v511;
      *((_OWORD *)v377 + 2) = v130;
      *((_DWORD *)v377 + 12) = v513;
      if (v377 + 2 == (uint64_t *)&v511)
      {
        *((_OWORD *)v377 + 5) = v516;
        v179 = v522;
        *(_OWORD *)(v377 + 19) = v521;
        v180 = *((_QWORD *)&v517 + 1);
        v377[12] = v517;
        v377[13] = v180;
        *((_DWORD *)v377 + 28) = v518;
        *((_BYTE *)v377 + 144) = v520;
        *(_OWORD *)(v377 + 21) = v179;
        *(_OWORD *)(v377 + 23) = v523;
        v133 = 5;
        v377[25] = v524;
      }
      else
      {
        sub_239421078(v377 + 7, v514, v515);
        *((_OWORD *)v377 + 5) = v516;
        v131 = *((_QWORD *)&v517 + 1);
        v377[12] = v517;
        v377[13] = v131;
        *((_DWORD *)v377 + 28) = v518;
        sub_23942156C(v377 + 15, (char *)__src[0], (char *)__src[1], ((char *)__src[1] - (char *)__src[0]) >> 2);
        v129 = (void **)*((_QWORD *)&v553 + 1);
        *((_BYTE *)v377 + 144) = v520;
        v132 = v522;
        *(_OWORD *)(v377 + 19) = v521;
        *(_OWORD *)(v377 + 21) = v132;
        *(_OWORD *)(v377 + 23) = v523;
        v377[25] = v524;
        if (v129 == __p)
        {
          v133 = 4;
          v129 = __p;
        }
        else
        {
          if (!v129)
            goto LABEL_381;
          v133 = 5;
        }
      }
      (*((void (**)(void))*v129 + v133))();
LABEL_381:
      v186 = (uint64_t *)operator new(0x38uLL);
      *v186 = (uint64_t)&off_250AF6FB0;
      v186[1] = (uint64_t)v49;
      v186[2] = (uint64_t)v461;
      v186[3] = (uint64_t)v638;
      v186[4] = (uint64_t)&v411;
      v186[5] = (uint64_t)v376;
      v933 = v186;
      if ((v374 & 1) == 0)
      {
        if (*(_QWORD *)(*(_QWORD *)v380 + 480) <= 2uLL)
          sub_2394202DC(v670, 4001);
        bzero(__p, 0x3A8uLL);
        memset(&v556[8], 0, 32);
        *(_DWORD *)v556 = 1065353216;
        *(_DWORD *)&v556[40] = 1065353216;
        v558 = 0u;
        v559 = 0u;
        v560 = 0u;
        *(_QWORD *)&v561 = 0;
        DWORD2(v561) = 1065353216;
        v562 = 0u;
        v563 = 0u;
        *(_DWORD *)v564 = 1065353216;
        memset(&v564[8], 0, 72);
        v565 = 0x3FF0000000000000;
        v567 = 0u;
        v566 = 0u;
        v568 = 0;
        v569 = -1;
        memset(v570, 0, sizeof(v570));
        v571 = 1065353216;
        v572 = 0u;
        v573 = 0u;
        v574 = 1065353216;
        v575 = 0u;
        v576 = 0u;
        v577 = 0u;
        v578 = 0u;
        v579 = 0u;
        v580 = 0u;
        v581 = 0u;
        v582 = 0u;
        v583 = 0u;
        v584 = 0u;
        v585 = 0u;
        v586 = 0u;
        v587 = 0u;
        v588 = 0u;
        v589 = 0u;
        v590 = 0u;
        v591 = 0u;
        v592 = 0u;
        v593 = 1065353216;
        v594 = 0;
        v596 = 0;
        v595 = 0;
        v597 = 0;
        sub_239B5FFE0(*v49, (uint64_t)__p);
        sub_239A4D648((uint64_t)__p);
        BYTE7(v553) = 0;
        LOBYTE(__p[0]) = 0;
        sub_2396FCC6C((uint64_t)v915, (uint64_t)__p);
        if (SBYTE7(v553) < 0)
          operator delete(__p[0]);
        goto LABEL_430;
      }
      v187 = *(_QWORD *)(*(_QWORD *)(v57[22] + 24) + 792);
      v188 = v57[24];
      if (v188 + 792 != v187)
      {
        *(_DWORD *)(v188 + 824) = *(_DWORD *)(v187 + 32);
        sub_239435F04((_QWORD *)(v188 + 792), *(uint64_t **)(v187 + 16), 0);
        sub_239B602E4(v188 + 832, *(_QWORD *)(v187 + 40), *(char **)(v187 + 48), (uint64_t)(*(_QWORD *)(v187 + 48) - *(_QWORD *)(v187 + 40)) >> 3);
      }
      BYTE7(v553) = 0;
      LOBYTE(__p[0]) = 0;
      sub_2396FCDAC((uint64_t)v915, (__int128 *)__p, 5);
      if (SBYTE7(v553) < 0)
        operator delete(__p[0]);
      kdebug_trace();
      v928 = 1.0;
      v189.f64[0] = 1.0;
      v379 = v189;
      if (BYTE1(v651) || !*(_BYTE *)(v380 + 962) || !*(_QWORD *)(v380 + 64) || !*(_QWORD *)(v380 + 48))
        goto LABEL_405;
      if (sub_2396FD7B0((uint64_t)v375))
      {
        sub_2394202DC(v670, 2);
        v94 = 1;
        v190 = v933;
        if (!v933)
          goto LABEL_589;
        goto LABEL_431;
      }
      v191 = (char **)*v49;
      v542[0] = &off_250AF6FF8;
      v542[1] = v380;
      v543 = v542;
      v192 = sub_239DABAC4((uint64_t)v191, (uint64_t)v542, &v928, *(_DWORD *)(v380 + 464));
      v195 = v543;
      if (v543 == v542)
      {
        v196 = 4;
        v195 = v542;
      }
      else
      {
        if (!v543)
        {
LABEL_402:
          if ((v192 & 1) == 0 || (v194.f64[0] = v928, v928 < 2.22044605e-16))
          {
            sub_2394202DC(v670, 4504);
            BYTE3(v651) = 0;
            v928 = 1.0;
            v197.f64[0] = 1.0;
            v379 = v197;
            goto LABEL_405;
          }
          v379 = v194;
          v193.f64[0] = 1.0 / v928;
          sub_239B60624((uint64_t)v191, 0, v193, v194);
          BYTE3(v651) = 1;
          if (v412[28])
          {
            v293 = *v376;
            sub_239B3C90C((uint64_t)v540, v372);
            sub_239E8571C(v293, v191, (uint64_t)v540);
            v294 = v541;
            if (v541 == v540)
            {
              v295 = 4;
              v294 = v540;
            }
            else
            {
              if (!v541)
                goto LABEL_405;
              v295 = 5;
            }
            (*(void (**)(void))(*v294 + 8 * v295))();
          }
LABEL_405:
          kdebug_trace();
          if (*(_BYTE *)(v380 + 1048))
          {
            v198 = sub_2394AEBA4((float64x2_t *)(*v49 + 536), 0.0001);
            if (BYTE1(v651) && v198)
              goto LABEL_588;
          }
          if (sub_2394AEBA4(&v395, 0.0001))
          {
            if (v379.f64[0] == 1.0
              || (v379.f64[0] >= 1.0 ? (v200 = v379.f64[0] + -1.0) : (v200 = 1.0 - v379.f64[0]), v200 <= 0.00000001))
            {
              v254 = *v49 + 536;
              v279 = v400;
              *(float64x2_t *)(v254 + 64) = v399;
              *(float64x2_t *)(v254 + 80) = v279;
              v280 = v402;
              *(float64x2_t *)(v254 + 96) = v401;
              *(float64x2_t *)(v254 + 112) = v280;
              v281 = v396;
              *(float64x2_t *)v254 = v395;
              *(float64x2_t *)(v254 + 16) = v281;
              v282 = v398;
              *(float64x2_t *)(v254 + 32) = v397;
              *(float64x2_t *)(v254 + 48) = v282;
              v283 = v403;
              v284 = v404;
              v285 = v406;
              *(_OWORD *)(v254 + 160) = v405;
              *(_OWORD *)(v254 + 176) = v285;
              *(_OWORD *)(v254 + 128) = v283;
              *(_OWORD *)(v254 + 144) = v284;
              v262 = v407;
              v263 = v408;
              v264 = v409;
              v265 = v410;
            }
            else
            {
              __asm { FMOV            V21.2D, #-0.5 }
              v205 = vmulq_f64(v395, _Q21);
              v206 = vmlaq_f64(v205, _Q21, v397);
              v207 = vmulq_f64(v396, _Q21);
              v208 = vmlaq_f64(v207, _Q21, v398);
              v209 = vaddq_f64(v402, vmlaq_f64(v208, _Q21, v400));
              v210 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v209, 1);
              v211 = vdivq_f64(vaddq_f64(v401, vmlaq_f64(v206, _Q21, v399)), v210);
              v212 = vdivq_f64(v209, v210);
              __asm { FMOV            V22.2D, #0.5 }
              v214 = vaddq_f64(v402, vmlaq_f64(v208, _Q22, v400));
              v215 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v214, 1);
              _Q5 = vdivq_f64(vaddq_f64(v401, vmlaq_f64(v206, _Q22, v399)), v215);
              _Q6 = vdivq_f64(v214, v215);
              v218 = vmlaq_f64(v205, _Q22, v397);
              v219 = vmlaq_f64(v207, _Q22, v398);
              v220 = vaddq_f64(v402, vmlaq_f64(v219, _Q21, v400));
              v221 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v220, 1);
              v222 = vdivq_f64(vaddq_f64(v401, vmlaq_f64(v218, _Q21, v399)), v221);
              v223 = vdivq_f64(v220, v221);
              v224 = vaddq_f64(v402, vmlaq_f64(v219, _Q22, v400));
              v225 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v224, 1);
              v226 = vdivq_f64(vaddq_f64(v401, vmlaq_f64(v218, _Q22, v399)), v225);
              v227 = vdivq_f64(v224, v225);
              v228 = vmulq_f64(v395, _Q22);
              v229 = vmlaq_f64(v228, _Q21, v397);
              v230 = vmulq_f64(v396, _Q22);
              v231 = vmlaq_f64(v230, _Q21, v398);
              v232 = vaddq_f64(v402, vmlaq_f64(v231, _Q21, v400));
              v233 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v232, 1);
              v234 = vdivq_f64(vaddq_f64(v401, vmlaq_f64(v229, _Q21, v399)), v233);
              v235 = vdivq_f64(v232, v233);
              v236 = vaddq_f64(v402, vmlaq_f64(v231, _Q22, v400));
              v237 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v236, 1);
              v238 = vdivq_f64(vaddq_f64(v401, vmlaq_f64(v229, _Q22, v399)), v237);
              v239 = vdivq_f64(v236, v237);
              v240 = vmlaq_f64(v228, _Q22, v397);
              v241 = vmlaq_f64(v240, _Q21, v399);
              _Q23 = vmlaq_f64(v230, _Q22, v398);
              v243 = vaddq_f64(v402, vmlaq_f64(_Q23, _Q21, v400));
              _Q21 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v243, 1);
              v245 = vaddq_f64(v402, vmlaq_f64(_Q23, _Q22, v400));
              v246 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v245, 1);
              v243.f64[0] = vaddq_f64(vdivq_f64(v245, v246), vaddq_f64(vdivq_f64(v243, _Q21), vaddq_f64(v239, vaddq_f64(v235, vaddq_f64(v227, vaddq_f64(v223, vaddq_f64(_Q6, vaddq_f64(v212, (float64x2_t)0)))))))).f64[0];
              __asm { FMOV            V19.2D, #0.125 }
              v248 = vmulq_f64(vaddq_f64(vdivq_f64(vaddq_f64(v401, vmlaq_f64(v240, _Q22, v399)), v246), vaddq_f64(vdivq_f64(vaddq_f64(v401, v241), _Q21), vaddq_f64(v238, vaddq_f64(v234, vaddq_f64(v226, vaddq_f64(v222, vaddq_f64(_Q5, vaddq_f64(v211, (float64x2_t)0)))))))), _Q19);
              _Q19.f64[0] = 0.125 * v243.f64[0];
              *(_QWORD *)&v243.f64[0] = *(_OWORD *)&vsubq_f64(v212, v235);
              _Q23.f64[0] = vsubq_f64(v211, v234).f64[1];
              __asm { FMLA            D22, D23, V21.D[1] }
              v243.f64[0] = sqrt(vmlad_n_f64(_Q22.f64[0], v243.f64[0], v243.f64[0]));
              *(_QWORD *)&v223.f64[0] = *(_OWORD *)&vsubq_f64(v212, v223);
              _Q22.f64[0] = vsubq_f64(v211, v222).f64[1];
              __asm { FMLA            D21, D22, V17.D[1] }
              v222.f64[0] = sqrt(vmlad_n_f64(_Q21.f64[0], v223.f64[0], v223.f64[0]));
              *(_QWORD *)&v212.f64[0] = *(_OWORD *)&vsubq_f64(v212, _Q6);
              _Q3 = vsubq_f64(v211, _Q5);
              _Q6.f64[0] = _Q3.f64[1];
              __asm { FMLA            D5, D6, V3.D[1] }
              _Q3.f64[0] = sqrt(vmlad_n_f64(_Q5.f64[0], v212.f64[0], v212.f64[0]));
              v212.f64[0] = v396.f64[0] / v243.f64[0];
              v250 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v243.f64[0], 0);
              v243.f64[1] = v222.f64[0];
              v251 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v379.f64[0], 0);
              v252 = vdivq_f64(v248, v251);
              v253 = vdivq_f64(v243, v251);
              v251.f64[0] = vdivq_f64(_Q3, v379).f64[0];
              v918 = 0;
              v923 = 0;
              *((_QWORD *)&v925 + 1) = 0x3FF0000000000000;
              v924 = v252;
              *(_QWORD *)&v925 = *(_OWORD *)&vdivq_f64(_Q19, v379);
              v916 = vmulq_n_f64(vdivq_f64(v395, v250), v253.f64[0]);
              v919 = vmulq_laneq_f64(vdivq_f64(v397, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v222.f64[0], 0)), v253, 1);
              v921 = vmulq_n_f64(vdivq_f64(v399, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&_Q3.f64[0], 0)), v251.f64[0]);
              v917 = v212.f64[0] * v253.f64[0];
              v920 = COERCE_UNSIGNED_INT64(vmuld_lane_f64(v398.f64[0] / v222.f64[0], v253, 1));
              *(double *)&v922 = v400.f64[0] / _Q3.f64[0] * v251.f64[0];
              v555 = v920;
              v554 = v919;
              v553 = COERCE_UNSIGNED_INT64(v212.f64[0] * v253.f64[0]);
              *(float64x2_t *)__p = v916;
              v557 = v925;
              *(float64x2_t *)&v556[32] = v252;
              *(_OWORD *)&v556[16] = v922;
              *(float64x2_t *)v556 = v921;
              sub_239A22BE8(&v529);
              v562 = v533;
              v563 = v534;
              *(_OWORD *)v564 = v535;
              *(_OWORD *)&v564[16] = v536;
              v558 = v529;
              v559 = v530;
              v560 = v531;
              v561 = v532;
              v254 = *v49 + 536;
              v255 = *(_OWORD *)&v556[16];
              *(_OWORD *)(v254 + 64) = *(_OWORD *)v556;
              *(_OWORD *)(v254 + 80) = v255;
              v256 = v557;
              *(_OWORD *)(v254 + 96) = *(_OWORD *)&v556[32];
              *(_OWORD *)(v254 + 112) = v256;
              v257 = v553;
              *(_OWORD *)v254 = *(_OWORD *)__p;
              *(_OWORD *)(v254 + 16) = v257;
              v258 = v555;
              *(float64x2_t *)(v254 + 32) = v554;
              *(_OWORD *)(v254 + 48) = v258;
              v259 = v558;
              v260 = v559;
              v261 = v561;
              *(_OWORD *)(v254 + 160) = v560;
              *(_OWORD *)(v254 + 176) = v261;
              *(_OWORD *)(v254 + 128) = v259;
              *(_OWORD *)(v254 + 144) = v260;
              v262 = v562;
              v263 = v563;
              v264 = *(_OWORD *)v564;
              v265 = *(_OWORD *)&v564[16];
            }
            *(_OWORD *)(v254 + 224) = v264;
            *(_OWORD *)(v254 + 240) = v265;
            *(_OWORD *)(v254 + 192) = v262;
            *(_OWORD *)(v254 + 208) = v263;
            v94 = 0;
            BYTE4(v651) = 1;
            v190 = v933;
            if (!v933)
LABEL_589:
              sub_2394172E0();
LABEL_431:
            (*(void (**)(uint64_t *))(*v190 + 48))(v190);
            v286 = v933;
            if (v933 == &v931)
            {
              v287 = 4;
              v286 = &v931;
            }
            else
            {
              if (!v933)
                goto LABEL_436;
              v287 = 5;
            }
            (*(void (**)(void))(*v286 + 8 * v287))();
LABEL_436:
            if (v393)
            {
              v394 = (char *)v393;
              operator delete(v393);
            }
            goto LABEL_438;
          }
          if ((sub_239E022D8((uint64_t *)*v49, (_OWORD *)(*v49 + 536), *(unsigned __int8 *)(v380 + 1072), *(double *)(v380 + 1056), *(double *)(v380 + 1064)) & 1) != 0)
          {
            BYTE4(v651) = 1;
            if (!BYTE1(v651))
            {
              v266 = (_QWORD *)*v49;
              v267 = sub_239B60994((float64x2_t *)__p, (float64x2_t *)(*v49 + 536));
              v274 = sub_2396F661C((uint64_t)__p, v266, v267, v268, v269, v270, v271, v272, v273);
              v275 = v412[28] ? v274 : 0;
              if ((v275 & 1) != 0)
              {
                v276 = *v376;
                sub_239B3C90C((uint64_t)v538, v372);
                sub_239E8571C(v276, (char **)v373, (uint64_t)v538);
                v277 = v539;
                if (v539 == v538)
                {
                  v278 = 4;
                  v277 = v538;
                }
                else
                {
                  if (!v539)
                    goto LABEL_588;
                  v278 = 5;
                }
                (*(void (**)(void))(*v277 + 8 * v278))();
              }
            }
LABEL_588:
            v94 = 0;
            v190 = v933;
            if (!v933)
              goto LABEL_589;
            goto LABEL_431;
          }
          sub_2394202DC(v670, 4020);
          BYTE4(v651) = 0;
LABEL_430:
          v94 = 2;
          v190 = v933;
          if (!v933)
            goto LABEL_589;
          goto LABEL_431;
        }
        v196 = 5;
      }
      (*(void (**)(void))(*v195 + 8 * v196))();
      goto LABEL_402;
    }
    v123 = operator new(0x20uLL);
    *v123 = &off_250AF6E58;
    v123[1] = v377;
    v123[2] = &v511;
    v611 = v123;
    v124 = *(std::__shared_weak_count **)(v6 + 40);
    v371 = *(_QWORD *)(v6 + 32);
    v391 = v371;
    v392 = v124;
    if (v124)
    {
      v125 = (unint64_t *)&v124->__shared_owners_;
      do
        v126 = __ldxr(v125);
      while (__stxr(v126 + 1, v125));
    }
    v127 = *(uint64_t **)(v373 + 88);
    if (v127)
    {
      v128 = 0;
      do
      {
        if (*((_BYTE *)v127 + 256) == 2)
          ++v128;
        v127 = (uint64_t *)*v127;
      }
      while (v127);
    }
    else
    {
      v128 = 0;
    }
    v390 = 0;
    v134 = (_QWORD *)v57[54];
    v387 = 0;
    v388 = 0;
    v389 = 0;
    v135 = (v394 - (_BYTE *)v393) >> 3;
    if (v134[38] == v135)
    {
      v136 = (_QWORD *)v134[36];
      v137 = v134 + 37;
      if (v136 != v134 + 37)
      {
        v138 = 0;
        while (*((_DWORD *)v136 + 16) == 2)
        {
LABEL_300:
          v151 = (_QWORD *)v136[1];
          if (v151)
          {
            do
            {
              v152 = v151;
              v151 = (_QWORD *)*v151;
            }
            while (v151);
          }
          else
          {
            do
            {
              v152 = (_QWORD *)v136[2];
              _ZF = *v152 == (_QWORD)v136;
              v136 = v152;
            }
            while (!_ZF);
          }
          v136 = v152;
          if (v152 == v137)
            goto LABEL_317;
        }
        if (v138 < v389)
        {
          *(_QWORD *)v138 = v136[4];
          v139 = v138 + 8;
LABEL_299:
          v388 = v139;
          v138 = (char *)v139;
          goto LABEL_300;
        }
        v140 = (char *)v387;
        v141 = v138 - (_BYTE *)v387;
        v142 = (v138 - (_BYTE *)v387) >> 3;
        v143 = v142 + 1;
        if ((unint64_t)(v142 + 1) >> 61)
          sub_2394189F8();
        v144 = v389 - (_BYTE *)v387;
        if ((v389 - (_BYTE *)v387) >> 2 > v143)
          v143 = v144 >> 2;
        if ((unint64_t)v144 >= 0x7FFFFFFFFFFFFFF8)
          v145 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v145 = v143;
        if (v145)
        {
          if (v145 >> 61)
            sub_239418A80();
          v146 = operator new(8 * v145);
        }
        else
        {
          v146 = 0;
        }
        v147 = &v146[8 * v142];
        *v147 = v136[4];
        v139 = v147 + 1;
        if (v138 != v140)
        {
          v148 = v138 - 8 - v140;
          if (v148 >= 0x168)
          {
            if (&v146[v141 - 8 - (v148 & 0xFFFFFFFFFFFFFFF8)] > &v146[v141 - 8])
            {
              v149 = v138;
            }
            else if (&v138[-(v148 & 0xFFFFFFFFFFFFFFF8) - 8] > v138 - 8)
            {
              v149 = v138;
            }
            else if ((unint64_t)(v138 - v146 - v141) >= 0x20)
            {
              v154 = (v148 >> 3) + 1;
              v149 = &v138[-8 * (v154 & 0x3FFFFFFFFFFFFFFCLL)];
              v155 = &v146[8 * v142 - 16];
              v156 = v138 - 16;
              v157 = v154 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v158 = *(_OWORD *)v156;
                *(v155 - 1) = *((_OWORD *)v156 - 1);
                *v155 = v158;
                v155 -= 2;
                v156 -= 32;
                v157 -= 4;
              }
              while (v157);
              v147 -= v154 & 0x3FFFFFFFFFFFFFFCLL;
              if (v154 == (v154 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_296;
            }
            else
            {
              v149 = v138;
            }
          }
          else
          {
            v149 = v138;
          }
          do
          {
            v150 = *((_QWORD *)v149 - 1);
            v149 -= 8;
            *--v147 = v150;
          }
          while (v149 != v140);
        }
LABEL_296:
        v387 = v147;
        v388 = v139;
        v389 = &v146[8 * v145];
        if (v140)
          operator delete(v140);
        v49 = v377;
        goto LABEL_299;
      }
    }
    else
    {
      sub_23945D3D0(&v387, (char *)v393, v394, v135);
    }
LABEL_317:
    if (v124)
    {
      v159 = (unint64_t *)&v124->__shared_owners_;
      do
        v160 = __ldxr(v159);
      while (__stxr(v160 + 1, v159));
    }
    v608[0] = &off_250AF6EA0;
    v608[1] = v371;
    v385 = 0;
    v386 = 0;
    v608[2] = v124;
    v609 = v608;
    v161 = (uint64_t)v693;
    if (v693)
    {
      if (v693 == v692)
      {
        v605 = v604;
        (*(void (**)(_QWORD *, _QWORD *))(v692[0] + 24))(v692, v604);
        v57 = v378;
LABEL_326:
        v162 = v606;
        v163 = (uint64_t)v695;
        if (v695)
        {
          if (v695 == v694)
          {
            v607 = v606;
            (*(void (**)(_QWORD *, _BYTE *))(v694[0] + 24))(v694, v606);
LABEL_331:
            v164 = sub_23955FE6C((uint64_t *)&v387, (float *)&v390, (uint64_t)v608, v604, v57[54] + 312, 1);
            if (v607 == v606)
            {
              v165 = 4;
            }
            else
            {
              if (!v607)
                goto LABEL_336;
              v165 = 5;
              v162 = v607;
            }
            (*(void (**)(_QWORD *))(*v162 + 8 * v165))(v162);
LABEL_336:
            v166 = v605;
            if (v605 == v604)
            {
              v167 = 4;
              v166 = v604;
            }
            else
            {
              if (!v605)
                goto LABEL_341;
              v167 = 5;
            }
            (*(void (**)(void))(*v166 + 8 * v167))();
LABEL_341:
            v168 = v609;
            if (v609 == v608)
            {
              v169 = 4;
              v168 = v608;
            }
            else
            {
              if (!v609)
                goto LABEL_346;
              v169 = 5;
            }
            (*(void (**)(void))(*v168 + 8 * v169))();
LABEL_346:
            if (!v164)
            {
              v171 = 0;
              v94 = 2;
              v172 = v387;
              if (!v387)
              {
LABEL_355:
                v173 = v392;
                if (v392)
                {
                  v174 = (unint64_t *)&v392->__shared_owners_;
                  do
                    v175 = __ldaxr(v174);
                  while (__stlxr(v175 - 1, v174));
                  if (!v175)
                  {
                    ((void (*)(std::__shared_weak_count *))v173->__on_zero_shared)(v173);
                    std::__shared_weak_count::__release_weak(v173);
                  }
                }
                if (!v611)
                  sub_2394172E0();
                (*(void (**)(_BYTE *))(*(_QWORD *)v611 + 48))(v611);
                v176 = v611;
                if (v611 == v610)
                {
                  v177 = 4;
                  v176 = v610;
                }
                else
                {
                  if (!v611)
                    goto LABEL_366;
                  v177 = 5;
                }
                (*(void (**)(void))(*v176 + 8 * v177))();
LABEL_366:
                if ((v171 & 1) == 0)
                  goto LABEL_436;
                goto LABEL_381;
              }
LABEL_354:
              v388 = v172;
              operator delete(v172);
              goto LABEL_355;
            }
            v170 = 0;
            if (*(_BYTE *)(v380 + 1664) && (_BYTE)v521)
              v170 = v490[27] == 0;
            if (HIBYTE(v480))
            {
LABEL_351:
              v94 = 2;
              v171 = 1;
              v172 = v387;
              if (!v387)
                goto LABEL_355;
              goto LABEL_354;
            }
            v178 = !v170;
            if (!*(_BYTE *)(v57[54] + 320))
              v178 = 1;
            if ((v178 & 1) != 0)
            {
              if (*(_BYTE *)(v57[54] + 320))
                goto LABEL_351;
            }
            else if (v374 && 2 * v128 >= (unint64_t)((v394 - (_BYTE *)v393) >> 3))
            {
              goto LABEL_351;
            }
            sub_2396FDAA8(v692, (uint64_t)v602);
            sub_2396FD534(&v381, v915, 5);
            v601 = 0;
            v181 = (char *)operator new(0x40uLL);
            *(_QWORD *)v181 = &off_250ADB9D8;
            *(_OWORD *)(v181 + 8) = v381;
            *((_QWORD *)v181 + 3) = v382;
            *((_QWORD *)&v381 + 1) = 0;
            v382 = 0;
            v182 = v383;
            v383 = 0uLL;
            v183 = v384;
            *((_OWORD *)v181 + 2) = v182;
            *((_OWORD *)v181 + 3) = v183;
            v384 = 0uLL;
            v601 = v181;
            sub_2396FD600((uint64_t)&v916, (uint64_t)v602, (uint64_t)v600);
            v184 = v601;
            if (v601 == v600)
            {
              v185 = 4;
              v184 = v600;
            }
            else
            {
              if (!v601)
              {
LABEL_457:
                v296 = (std::__shared_weak_count *)*((_QWORD *)&v384 + 1);
                if (*((_QWORD *)&v384 + 1))
                {
                  v297 = (unint64_t *)(*((_QWORD *)&v384 + 1) + 8);
                  do
                    v298 = __ldaxr(v297);
                  while (__stlxr(v298 - 1, v297));
                  if (!v298)
                  {
                    ((void (*)(std::__shared_weak_count *))v296->__on_zero_shared)(v296);
                    std::__shared_weak_count::__release_weak(v296);
                  }
                }
                v299 = (std::__shared_weak_count *)*((_QWORD *)&v383 + 1);
                if (*((_QWORD *)&v383 + 1))
                {
                  v300 = (unint64_t *)(*((_QWORD *)&v383 + 1) + 8);
                  do
                    v301 = __ldaxr(v300);
                  while (__stlxr(v301 - 1, v300));
                  if (!v301)
                  {
                    ((void (*)(std::__shared_weak_count *))v299->__on_zero_shared)(v299);
                    std::__shared_weak_count::__release_weak(v299);
                  }
                }
                v302 = v382;
                if (v382)
                {
                  v303 = (unint64_t *)&v382->__shared_owners_;
                  do
                    v304 = __ldaxr(v303);
                  while (__stlxr(v304 - 1, v303));
                  if (!v304)
                  {
                    ((void (*)(std::__shared_weak_count *))v302->__on_zero_shared)(v302);
                    std::__shared_weak_count::__release_weak(v302);
                  }
                }
                v305 = v603;
                if (v603 == v602)
                {
                  v306 = 4;
                  v305 = v602;
                }
                else
                {
                  if (!v603)
                  {
LABEL_477:
                    v307 = *(_QWORD *)(v380 + 16);
                    v308 = v57[4];
                    kdebug_trace();
                    v309 = (std::__shared_weak_count *)v57[23];
                    v57[22] = 0;
                    v57[23] = 0;
                    if (v309)
                    {
                      v310 = (unint64_t *)&v309->__shared_owners_;
                      do
                        v311 = __ldaxr(v310);
                      while (__stlxr(v311 - 1, v310));
                      if (!v311)
                      {
                        ((void (*)(std::__shared_weak_count *))v309->__on_zero_shared)(v309);
                        std::__shared_weak_count::__release_weak(v309);
                      }
                    }
                    kdebug_trace();
                    sub_239B5F800((uint64_t)__p, v380);
                    BYTE3(v559) = 1;
                    v598 = 1;
                    v312 = operator new(0x50uLL);
                    v312[1] = 0;
                    v312[2] = 0;
                    *v312 = &off_250AF99A0;
                    LOBYTE(v529) = 0;
                    v537 = 0;
                    v933 = 0;
                    v930 = 0;
                    v927 = 0;
                    sub_239E75CF8((uint64_t)(v312 + 3), &v556[8], (uint64_t)&v557 + 8, (uint64_t)v570, (uint64_t)&v599, &v529, &v931, &v928, v926);
                    v313 = v927;
                    if (v927 == v926)
                    {
                      v314 = 4;
                      v313 = v926;
                    }
                    else
                    {
                      if (!v927)
                        goto LABEL_487;
                      v314 = 5;
                    }
                    (*(void (**)(void))(*v313 + 8 * v314))();
LABEL_487:
                    v315 = v930;
                    if (v930 == &v928)
                    {
                      v316 = 4;
                      v315 = &v928;
                    }
                    else
                    {
                      if (!v930)
                        goto LABEL_492;
                      v316 = 5;
                    }
                    (*(void (**)(void))(*(_QWORD *)v315 + 8 * v316))();
LABEL_492:
                    v317 = v933;
                    if (v933 == &v931)
                    {
                      v318 = 4;
                      v317 = &v931;
                    }
                    else
                    {
                      if (!v933)
                      {
LABEL_497:
                        v319 = v57;
                        v320 = (std::__shared_weak_count *)v57[23];
                        v319[22] = v312 + 3;
                        v319[23] = v312;
                        if (v320)
                        {
                          v321 = (unint64_t *)&v320->__shared_owners_;
                          do
                            v322 = __ldaxr(v321);
                          while (__stlxr(v322 - 1, v321));
                          if (!v322)
                          {
                            ((void (*)(std::__shared_weak_count *))v320->__on_zero_shared)(v320);
                            std::__shared_weak_count::__release_weak(v320);
                          }
                        }
                        v323 = *v376;
                        v550[0] = &off_250AF6EE8;
                        v550[1] = v308;
                        v551 = v550;
                        sub_239B5FB80(*(_QWORD *)(v323 + 24), v550);
                        v324 = v551;
                        if (v551 == v550)
                        {
                          v325 = 4;
                          v324 = v550;
                        }
                        else
                        {
                          if (!v551)
                            goto LABEL_507;
                          v325 = 5;
                        }
                        (*(void (**)(void))(*v324 + 8 * v325))();
LABEL_507:
                        v326 = (uint64_t *)v378[14];
                        v327 = (uint64_t *)v378[15];
                        if (v326 != v327)
                        {
                          v328 = 0;
                          v329 = v378[10];
                          while (1)
                          {
                            v330 = (char *)operator new(0xA8uLL);
                            *((_QWORD *)v330 + 1) = 0;
                            *((_QWORD *)v330 + 2) = 0;
                            *(_QWORD *)v330 = &off_250AFAC20;
                            *(_OWORD *)(v330 + 40) = 0u;
                            *(_OWORD *)(v330 + 56) = 0u;
                            *(_OWORD *)(v330 + 72) = 0u;
                            *(_OWORD *)(v330 + 88) = 0u;
                            *(_OWORD *)(v330 + 104) = 0u;
                            *(_OWORD *)(v330 + 120) = 0u;
                            *(_OWORD *)(v330 + 136) = 0u;
                            *(_OWORD *)(v330 + 24) = 0u;
                            *(_OWORD *)(v330 + 152) = 0u;
                            *(_QWORD *)&v928 = v330 + 24;
                            v929 = (std::__shared_weak_count *)v330;
                            v331 = *v326;
                            *((_DWORD *)v330 + 6) = *v326;
                            v931 = 0;
                            v932 = 0;
                            LOBYTE(v926[0]) = 0;
                            *(_QWORD *)&v529 = sub_239B4DD70;
                            *((_QWORD *)&v529 + 1) = 0;
                            *(_QWORD *)&v530 = v307;
                            *((_QWORD *)&v530 + 1) = v331;
                            sub_239B4DFF4((uint64_t)&v529, (uint64_t)&v931, (uint64_t)v926);
                            if (LOBYTE(v926[0]))
                            {
                              v332 = v931;
                              v333 = v932;
                            }
                            else
                            {
                              v334 = v932;
                              if (v932)
                              {
                                v335 = (unint64_t *)&v932->__shared_owners_;
                                do
                                  v336 = __ldaxr(v335);
                                while (__stlxr(v336 - 1, v335));
                                if (!v336)
                                {
                                  ((void (*)(std::__shared_weak_count *))v334->__on_zero_shared)(v334);
                                  std::__shared_weak_count::__release_weak(v334);
                                }
                              }
                              v333 = 0;
                              v332 = 0;
                            }
                            v337 = v928;
                            v338 = *(unsigned int *)(*(_QWORD *)&v928 + 32);
                            if ((_DWORD)v338 == -1)
                              goto LABEL_526;
                            if ((_DWORD)v338)
                              break;
                            v339 = *(std::__shared_weak_count **)(*(_QWORD *)&v928 + 24);
                            *(_QWORD *)(*(_QWORD *)&v928 + 16) = v332;
                            *(_QWORD *)(*(_QWORD *)&v337 + 24) = v333;
                            v49 = v377;
                            if (v339)
                            {
                              v340 = (unint64_t *)&v339->__shared_owners_;
                              do
                                v341 = __ldaxr(v340);
                              while (__stlxr(v341 - 1, v340));
                              if (!v341)
                              {
                                ((void (*)(std::__shared_weak_count *))v339->__on_zero_shared)(v339);
                                std::__shared_weak_count::__release_weak(v339);
                              }
                            }
LABEL_527:
                            v342 = v928;
                            v343 = *(std::__shared_weak_count **)(*(_QWORD *)&v928 + 48);
                            *(_QWORD *)(*(_QWORD *)&v928 + 40) = 0;
                            *(_QWORD *)(*(_QWORD *)&v342 + 48) = 0;
                            if (v343)
                            {
                              v344 = (unint64_t *)&v343->__shared_owners_;
                              do
                                v345 = __ldaxr(v344);
                              while (__stlxr(v345 - 1, v344));
                              if (!v345)
                              {
                                ((void (*)(std::__shared_weak_count *))v343->__on_zero_shared)(v343);
                                std::__shared_weak_count::__release_weak(v343);
                              }
                            }
                            v346 = *(_QWORD *)(v329 + 176);
                            v347 = operator new(0x178uLL);
                            v347[2] = 0;
                            *v347 = &off_250AF6F30;
                            v347[1] = 0;
                            v348 = sub_2395A7198((uint64_t)(v347 + 3), v346 + 352 * v328);
                            v349 = v928;
                            v350 = *(std::__shared_weak_count **)(*(_QWORD *)&v928 + 80);
                            *(_QWORD *)(*(_QWORD *)&v928 + 72) = v348;
                            *(_QWORD *)(*(_QWORD *)&v349 + 80) = v347;
                            if (v350)
                            {
                              v351 = (unint64_t *)&v350->__shared_owners_;
                              do
                                v352 = __ldaxr(v351);
                              while (__stlxr(v352 - 1, v351));
                              if (!v352)
                              {
                                ((void (*)(std::__shared_weak_count *))v350->__on_zero_shared)(v350);
                                std::__shared_weak_count::__release_weak(v350);
                              }
                            }
                            v353 = v378[22];
                            v354 = v378[56];
                            v355 = *(_QWORD *)(v354 + 1696);
                            if (!v355)
                              goto LABEL_540;
                            if (v355 != v354 + 1672)
                            {
                              v355 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v355 + 16))(v355);
LABEL_540:
                              v549 = (_BYTE *)v355;
                              goto LABEL_542;
                            }
                            v549 = v548;
                            (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v355 + 24))(v355, v548);
LABEL_542:
                            (*(void (**)(uint64_t, double *, _BYTE *))(*(_QWORD *)v353 + 16))(v353, &v928, v548);
                            v356 = v549;
                            if (v549 == v548)
                            {
                              v356 = v548;
                              v357 = 4;
                            }
                            else
                            {
                              if (!v549)
                                goto LABEL_547;
                              v357 = 5;
                            }
                            (*(void (**)(void))(*v356 + 8 * v357))();
LABEL_547:
                            v358 = v929;
                            if (v929)
                            {
                              v359 = (unint64_t *)&v929->__shared_owners_;
                              do
                                v360 = __ldaxr(v359);
                              while (__stlxr(v360 - 1, v359));
                              if (!v360)
                              {
                                ((void (*)(std::__shared_weak_count *))v358->__on_zero_shared)(v358);
                                std::__shared_weak_count::__release_weak(v358);
                              }
                            }
                            ++v326;
                            ++v328;
                            if (v326 == v327)
                              goto LABEL_552;
                          }
                          ((void (*)(__int128 *, uint64_t))off_250B014C8[v338])(&v529, *(_QWORD *)&v928 + 16);
LABEL_526:
                          *(_QWORD *)(*(_QWORD *)&v337 + 16) = v332;
                          *(_QWORD *)(*(_QWORD *)&v337 + 24) = v333;
                          *(_DWORD *)(*(_QWORD *)&v337 + 32) = 0;
                          v49 = v377;
                          goto LABEL_527;
                        }
LABEL_552:
                        (*(void (**)(uint64_t))(*(_QWORD *)*v376 + 24))(*v376);
                        v57 = v378;
                        v361 = (uint64_t)v918;
                        if (v918)
                        {
                          if (v918 == &v916)
                          {
                            v545 = v544;
                            (*(void (**)(float64x2_t *, _BYTE *))(*(_QWORD *)&v916.f64[0] + 24))(&v916, v544);
LABEL_557:
                            v362 = v546;
                            v363 = *((_QWORD *)&v920 + 1);
                            if (*((_QWORD *)&v920 + 1))
                            {
                              if (*((float64x2_t **)&v920 + 1) == &v919)
                              {
                                v547 = v546;
                                (*(void (**)(void))(**((_QWORD **)&v920 + 1) + 24))();
LABEL_562:
                                v94 = sub_239B5B0EC(__p, v49, v378, v544);
                                if (v547 == v546)
                                {
                                  v364 = 4;
                                }
                                else
                                {
                                  if (!v547)
                                    goto LABEL_567;
                                  v364 = 5;
                                  v362 = v547;
                                }
                                (*(void (**)(_QWORD *))(*v362 + 8 * v364))(v362);
LABEL_567:
                                v365 = v545;
                                if (v545 == v544)
                                {
                                  v366 = 4;
                                  v365 = v544;
                                }
                                else
                                {
                                  if (!v545)
                                    goto LABEL_572;
                                  v366 = 5;
                                }
                                (*(void (**)(void))(*v365 + 8 * v366))();
LABEL_572:
                                sub_239B5FD30((uint64_t)__p);
                                v367 = (float64x2_t *)*((_QWORD *)&v920 + 1);
                                if (*((float64x2_t **)&v920 + 1) == &v919)
                                {
                                  v368 = 4;
                                  v367 = &v919;
                                }
                                else
                                {
                                  if (!*((_QWORD *)&v920 + 1))
                                    goto LABEL_577;
                                  v368 = 5;
                                }
                                (*(void (**)(void))(*(_QWORD *)&v367->f64[0] + 8 * v368))();
LABEL_577:
                                v369 = v918;
                                if (v918 == &v916)
                                {
                                  v370 = 4;
                                  v369 = &v916;
                                }
                                else
                                {
                                  if (!v918)
                                    goto LABEL_582;
                                  v370 = 5;
                                }
                                (*(void (**)(void))(*(_QWORD *)&v369->f64[0] + 8 * v370))();
LABEL_582:
                                v171 = 0;
                                v172 = v387;
                                if (!v387)
                                  goto LABEL_355;
                                goto LABEL_354;
                              }
                              v363 = (*(uint64_t (**)(void))(**((_QWORD **)&v920 + 1) + 16))();
                            }
                            v547 = (_BYTE *)v363;
                            goto LABEL_562;
                          }
                          v361 = (*(uint64_t (**)(void))(*(_QWORD *)&v918->f64[0] + 16))();
                        }
                        v545 = (_BYTE *)v361;
                        goto LABEL_557;
                      }
                      v318 = 5;
                    }
                    (*(void (**)(void))(*v317 + 8 * v318))();
                    goto LABEL_497;
                  }
                  v306 = 5;
                }
                (*(void (**)(void))(*v305 + 8 * v306))();
                goto LABEL_477;
              }
              v185 = 5;
            }
            (*(void (**)(void))(*v184 + 8 * v185))();
            goto LABEL_457;
          }
          v163 = (*(uint64_t (**)(void))(*v695 + 16))();
        }
        v607 = (_BYTE *)v163;
        goto LABEL_331;
      }
      v161 = (*(uint64_t (**)(void))(*v693 + 16))();
      v57 = v378;
    }
    else
    {
      v57 = v378;
    }
    v605 = (_QWORD *)v161;
    goto LABEL_326;
  }
  bzero(__p, 0x6D0uLL);
  sub_239AB5C84((uint64_t)__p);
  v76 = (int *)(v6 + 456);
  sub_239B3D494((uint64_t)v638, (__int128 *)__p);
  sub_239A615DC((uint64_t)__p);
  v78 = v378[4];
  v79 = v378[6];
  v80 = *(_QWORD *)(v378[22] + 24);
  v81 = *(_QWORD *)(v80 + 800);
  v82 = *(std::__shared_weak_count **)(v80 + 808);
  if (v82)
  {
    v83 = (unint64_t *)&v82->__shared_owners_;
    do
      v84 = __ldxr(v83);
    while (__stxr(v84 + 1, v83));
    do
      v85 = __ldaxr(v83);
    while (__stlxr(v85 - 1, v83));
    if (!v85)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      std::__shared_weak_count::__release_weak(v82);
    }
  }
  v86 = (_QWORD *)(*(_QWORD *)(*v376 + 8) + 720);
  v87 = *v76;
  if (*v76 == 2)
  {
    v92 = (uint64_t *)*v377;
    v618[0] = &off_250AF6D80;
    v618[1] = v78;
    v619 = v618;
    v616[0] = &off_250AF6DC8;
    v616[1] = v79;
    v617 = v616;
    v93 = (uint64_t)v693;
    if (v693)
    {
      if (v693 == v692)
      {
        v613 = v612;
        (*(void (**)(_QWORD *, _QWORD *))(v692[0] + 24))(v692, v612);
LABEL_180:
        v97 = v614;
        v98 = (uint64_t)v695;
        if (v695)
        {
          if (v695 == v694)
          {
            v615 = v614;
            (*(void (**)(_QWORD *, _BYTE *))(v694[0] + 24))(v694, v614);
LABEL_208:
            v374 = sub_239DFC830(v92, (uint64_t)v76, v618, v616, v612, (uint64_t)v638, 1, v77, v81, 1, v86, 1);
            if (v615 == v614)
            {
              v108 = 4;
            }
            else
            {
              if (!v615)
                goto LABEL_213;
              v108 = 5;
              v97 = v615;
            }
            (*(void (**)(_QWORD *))(*v97 + 8 * v108))(v97);
LABEL_213:
            v109 = v613;
            if (v613 == v612)
            {
              v110 = 4;
              v109 = v612;
              v57 = v378;
            }
            else
            {
              v57 = v378;
              if (!v613)
                goto LABEL_218;
              v110 = 5;
            }
            (*(void (**)(void))(*v109 + 8 * v110))();
LABEL_218:
            v111 = v617;
            if (v617 == v616)
            {
              v112 = 4;
              v111 = v616;
            }
            else
            {
              if (!v617)
                goto LABEL_223;
              v112 = 5;
            }
            (*(void (**)(void))(*v111 + 8 * v112))();
LABEL_223:
            v106 = v619;
            if (v619 == v618)
            {
              v107 = 4;
              v106 = v618;
              goto LABEL_250;
            }
            goto LABEL_247;
          }
          v98 = (*(uint64_t (**)(void))(*v695 + 16))();
        }
        v615 = (_BYTE *)v98;
        goto LABEL_208;
      }
      v93 = (*(uint64_t (**)(void))(*v693 + 16))();
    }
    v613 = (_QWORD *)v93;
    goto LABEL_180;
  }
  if (v87 == 1)
  {
    v90 = (uint64_t *)*v377;
    v626[0] = &off_250AF6D80;
    v626[1] = v78;
    v627 = v626;
    v624[0] = &off_250AF6DC8;
    v624[1] = v79;
    v625 = v624;
    v91 = (uint64_t)v693;
    if (v693)
    {
      if (v693 == v692)
      {
        v621 = v620;
        (*(void (**)(_QWORD *, _QWORD *))(v692[0] + 24))(v692, v620);
LABEL_175:
        v95 = v622;
        v96 = (uint64_t)v695;
        if (v695)
        {
          if (v695 == v694)
          {
            v623 = v622;
            (*(void (**)(_QWORD *, _BYTE *))(v694[0] + 24))(v694, v622);
LABEL_190:
            v374 = sub_239DFA9B4(v90, (uint64_t)v76, v626, v624, v620, (uint64_t)v638, 1, v77, v81, 1, v86, 1);
            if (v623 == v622)
            {
              v101 = 4;
            }
            else
            {
              if (!v623)
                goto LABEL_195;
              v101 = 5;
              v95 = v623;
            }
            (*(void (**)(_QWORD *))(*v95 + 8 * v101))(v95);
LABEL_195:
            v102 = v621;
            if (v621 == v620)
            {
              v103 = 4;
              v102 = v620;
              v57 = v378;
            }
            else
            {
              v57 = v378;
              if (!v621)
                goto LABEL_200;
              v103 = 5;
            }
            (*(void (**)(void))(*v102 + 8 * v103))();
LABEL_200:
            v104 = v625;
            if (v625 == v624)
            {
              v105 = 4;
              v104 = v624;
            }
            else
            {
              if (!v625)
                goto LABEL_205;
              v105 = 5;
            }
            (*(void (**)(void))(*v104 + 8 * v105))();
LABEL_205:
            v106 = v627;
            if (v627 == v626)
            {
              v107 = 4;
              v106 = v626;
              goto LABEL_250;
            }
LABEL_247:
            if (!v106)
              goto LABEL_251;
            v107 = 5;
LABEL_250:
            (*(void (**)(void))(*v106 + 8 * v107))();
            goto LABEL_251;
          }
          v96 = (*(uint64_t (**)(void))(*v695 + 16))();
        }
        v623 = (_BYTE *)v96;
        goto LABEL_190;
      }
      v91 = (*(uint64_t (**)(void))(*v693 + 16))();
    }
    v621 = (_QWORD *)v91;
    goto LABEL_175;
  }
  if (!v87)
  {
    v88 = (uint64_t *)*v377;
    v636[0] = &off_250AF6D80;
    v636[1] = v78;
    v637 = v636;
    v634[0] = &off_250AF6DC8;
    v634[1] = v79;
    v635 = v634;
    v89 = (uint64_t)v693;
    if (v693)
    {
      if (v693 == v692)
      {
        v631 = v630;
        (*(void (**)(_QWORD *, _QWORD *))(v692[0] + 24))(v692, v630);
LABEL_185:
        v99 = v632;
        v100 = (uint64_t)v695;
        if (v695)
        {
          if (v695 == v694)
          {
            v633 = v632;
            (*(void (**)(_QWORD *, _BYTE *))(v694[0] + 24))(v694, v632);
LABEL_226:
            v629 = 0;
            v374 = sub_239DF7D28(v88, (uint64_t)v76, v636, v634, v630, (uint64_t)v638, 1, v77, v81, 1, v86, 1, v628);
            v113 = v629;
            if (v629 == v628)
            {
              v114 = 4;
              v113 = v628;
            }
            else
            {
              if (!v629)
                goto LABEL_231;
              v114 = 5;
            }
            (*(void (**)(void))(*v113 + 8 * v114))();
LABEL_231:
            if (v633 == v632)
            {
              v115 = 4;
            }
            else
            {
              if (!v633)
                goto LABEL_236;
              v115 = 5;
              v99 = v633;
            }
            (*(void (**)(_QWORD *))(*v99 + 8 * v115))(v99);
LABEL_236:
            v116 = v631;
            if (v631 == v630)
            {
              v117 = 4;
              v116 = v630;
              v57 = v378;
            }
            else
            {
              v57 = v378;
              if (!v631)
                goto LABEL_241;
              v117 = 5;
            }
            (*(void (**)(void))(*v116 + 8 * v117))();
LABEL_241:
            v118 = v635;
            if (v635 == v634)
            {
              v119 = 4;
              v118 = v634;
            }
            else
            {
              if (!v635)
                goto LABEL_246;
              v119 = 5;
            }
            (*(void (**)(void))(*v118 + 8 * v119))();
LABEL_246:
            v106 = v637;
            if (v637 == v636)
            {
              v107 = 4;
              v106 = v636;
              goto LABEL_250;
            }
            goto LABEL_247;
          }
          v100 = (*(uint64_t (**)(void))(*v695 + 16))();
        }
        v633 = (_BYTE *)v100;
        goto LABEL_226;
      }
      v89 = (*(uint64_t (**)(void))(*v693 + 16))();
    }
    v631 = (_QWORD *)v89;
    goto LABEL_185;
  }
  BYTE7(v553) = 0;
  LOBYTE(__p[0]) = 0;
  sub_2396FCC6C((uint64_t)v915, (uint64_t)__p);
  if (SBYTE7(v553) < 0)
    operator delete(__p[0]);
  v94 = 2;
LABEL_438:
  sub_239A614AC(&v411);
  sub_239A615DC((uint64_t)v638);
  sub_239A6177C((uint64_t)v461);
  if (__src[0])
  {
    __src[1] = __src[0];
    operator delete(__src[0]);
  }
  sub_239421038((uint64_t)&v514, v515[0]);
  v288 = v695;
  if (v695 == v694)
  {
    v289 = 4;
    v288 = v694;
  }
  else
  {
    if (!v695)
      goto LABEL_445;
    v289 = 5;
  }
  (*(void (**)(void))(*v288 + 8 * v289))();
LABEL_445:
  v290 = v693;
  if (v693 == v692)
  {
    v291 = 4;
    v290 = v692;
    goto LABEL_449;
  }
  if (v693)
  {
    v291 = 5;
LABEL_449:
    (*(void (**)(void))(*v290 + 8 * v291))();
  }
  sub_239B60B4C((uint64_t)&v696);
  sub_2396FCD14((uint64_t)v915);
  return v94;
}

