void sub_239754918(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_239708338((uint64_t)va);
  sub_239754008((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_2397549C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_2397549D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397549EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239754A00(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239754A14(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_239754A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_239754F0C(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239754C2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239754C90(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 4;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239754DE8(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239754DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239754DE8(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_239754EF4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void *sub_239754F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397550AC(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397550AC(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397552E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239755348()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23975535C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE52D0;
  result[1] = v3;
  return result;
}

uint64_t sub_239755390(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE52D0;
  a2[1] = v2;
  return result;
}

void sub_2397553AC(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE5350;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_2397554E8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_239755554()
{
  return &unk_250AE5438;
}

void sub_239755560(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397555CC()
{
  return 30;
}

uint64_t sub_2397555D4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397555DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397555F8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23975567C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 30)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23975594C(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_239755900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23975594C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397559C4();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397559C4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569317E8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569317E8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23970F5A4();
    sub_239755BC8((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239755BC8((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569317D0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569317D0, &dword_23940C000);
          __cxa_guard_release(&qword_2569317E8);
          return &stru_2569317D0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569317D0;
}

void sub_239755B14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569317E8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569317E8);
  _Unwind_Resume(a1);
}

void sub_239755BC8(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239755C5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_239755C98(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_239755D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  uint64_t v29;
  __n128 v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  BOOL v47;
  std::__shared_weak_count *v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int16 *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  _WORD *v69;
  std::__shared_weak_count *v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  _WORD *v80;
  unsigned __int16 *v81;
  unsigned __int16 *v82;
  _WORD *v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t *v87;
  unint64_t *v88;
  unint64_t v89;
  __n128 v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  uint64_t (**v94)();
  uint64_t v95;
  std::__shared_weak_count *v96;
  unsigned __int16 *v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  char v103;
  char v104;
  uint64_t v105;
  std::__shared_weak_count *v106;
  std::__shared_weak_count *v107;
  _WORD *v108;
  unsigned int v109;
  unsigned int v110;
  char v111;
  char v112;
  unint64_t v113;
  CFDataRef v114;
  std::__shared_weak_count *v115;
  uint64_t v116;
  const UInt8 *v117;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v105);
  sub_239769054((uint64_t)&v105, (int)&v114);
  v11 = v106;
  if (v106)
  {
    v12 = (unint64_t *)&v106->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v114);
  v15 = sub_23962A55C(&v114);
  if (!v14 && v15 >= 2)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v113 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v105, v22, &v113);
  v23 = BytesPerRow >> 1;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v94 = &off_250AE3E30;
    if (HIDWORD(v113))
      v28 = (_DWORD)v113 == 0;
    else
      v28 = 1;
    v29 = v23 << 32;
    if (v28)
      v29 = 0;
    v116 = v29 | (4 * ((_DWORD)v113 != 0));
    v117 = v14;
    sub_239725E08((uint64_t *)&v117, &v113, &v116, (uint64_t)&v95);
    sub_2397566B0((uint64_t)&v94, (uint64_t)&v105, v30);
    v31 = v96;
    if (v96)
    {
      v32 = (unint64_t *)&v96->__shared_owners_;
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      goto LABEL_122;
    }
    goto LABEL_124;
  }
  v34 = v25 | *(_DWORD *)(a3 + 16);
  if (v34 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v47 = v34 != 0;
    if (v24)
      v47 = 1;
    if (!v47)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v48 = v107;
    if (!v107)
      goto LABEL_129;
    goto LABEL_125;
  }
  v94 = &off_250AE3E30;
  if (HIDWORD(v113))
    v35 = (_DWORD)v113 == 0;
  else
    v35 = 1;
  v36 = v23 << 32;
  if (v35)
    v36 = 0;
  v116 = v36 | (4 * ((_DWORD)v113 != 0));
  v117 = v14;
  sub_239725E08((uint64_t *)&v117, &v113, &v116, (uint64_t)&v95);
  v37 = v95;
  if (!v95)
    goto LABEL_67;
  v38 = v96;
  if (v96)
  {
    v39 = (unint64_t *)&v96->__shared_owners_;
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 1, v39));
    do
      v41 = __ldaxr(v39);
    while (__stlxr(v41 - 1, v39));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
    v37 = v95;
    v42 = v96;
    if (v96)
    {
      v43 = (unint64_t *)&v96->__shared_owners_;
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 1, v43));
      do
        v45 = __ldaxr(v43);
      while (__stlxr(v45 - 1, v43));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
      }
    }
  }
  if (v104)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v37 + 96))(&v117, v37, 0);
    v46 = v106;
    if (!v106)
      goto LABEL_82;
  }
  else
  {
LABEL_67:
    v117 = 0;
    v46 = v106;
    if (!v106)
    {
LABEL_82:
      v116 = 0;
      goto LABEL_83;
    }
  }
  v49 = v107;
  if (v107)
  {
    v50 = (unint64_t *)&v107->__shared_owners_;
    do
      v51 = __ldxr(v50);
    while (__stxr(v51 + 1, v50));
    do
      v52 = __ldaxr(v50);
    while (__stlxr(v52 - 1, v50));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
    v46 = v106;
    v53 = v107;
    if (v107)
    {
      v54 = (unint64_t *)&v107->__shared_owners_;
      do
        v55 = __ldxr(v54);
      while (__stxr(v55 + 1, v54));
      do
        v56 = __ldaxr(v54);
      while (__stlxr(v56 - 1, v54));
      if (!v56)
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
    }
  }
  if (!v112)
    goto LABEL_82;
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v46->__vftable[2].__on_zero_shared)(&v116, v46, 1);
LABEL_83:
  if (v98)
  {
    v57 = v99;
    if (v99)
    {
      v58 = v100;
      if (v100)
      {
        v60 = v101;
        v59 = v102;
        v62 = v109;
        v61 = v110;
        v63 = v97;
        if (v103 && v97)
        {
          v64 = v95;
          v65 = v96;
          if (v96)
          {
            v66 = (unint64_t *)&v96->__shared_owners_;
            do
              v67 = __ldxr(v66);
            while (__stxr(v67 + 1, v66));
            do
              v68 = __ldaxr(v66);
            while (__stlxr(v68 - 1, v66));
            if (!v68)
            {
              ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
              std::__shared_weak_count::__release_weak(v65);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v64 + 88))(v64, 0, "unknown location");
          v63 = v97;
        }
        v69 = v108;
        if (v111 && v108)
        {
          v70 = v106;
          v71 = v107;
          if (v107)
          {
            v72 = (unint64_t *)&v107->__shared_owners_;
            do
              v73 = __ldxr(v72);
            while (__stxr(v73 + 1, v72));
            do
              v74 = __ldaxr(v72);
            while (__stlxr(v74 - 1, v72));
            if (!v74)
            {
              ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
              std::__shared_weak_count::__release_weak(v71);
            }
          }
          ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v70->__vftable[2].~__shared_weak_count_0)(v70, 1, "unknown location");
          v69 = v108;
        }
        v75 = v57 - 1;
        v76 = 2 * v60;
        v77 = 2 * v62;
        v78 = v58 - 1;
        if (v58 != 1)
        {
          if (v57 == 1)
          {
            do
            {
              *v69 = bswap32(*v63) >> 16;
              v69[1] = bswap32(v63[1]) >> 16;
              v69[2] = bswap32(v63[2]) >> 16;
              v69[3] = bswap32(v63[3]) >> 16;
              v63 += v59;
              v69 += v61;
              --v78;
            }
            while (v78);
          }
          else
          {
            v79 = 0;
            v80 = v69 + 2;
            v81 = v63 + 2;
            do
            {
              v82 = v81;
              v83 = v80;
              v84 = v57 - 1;
              do
              {
                *(v83 - 2) = bswap32(*(v82 - 2)) >> 16;
                *(v83 - 1) = bswap32(*(v82 - 1)) >> 16;
                *v83 = bswap32(*v82) >> 16;
                v83[1] = bswap32(v82[1]) >> 16;
                v83 = (_WORD *)((char *)v83 + v77);
                v82 = (unsigned __int16 *)((char *)v82 + v76);
                --v84;
              }
              while (v84);
              *(v83 - 2) = bswap32(*(v82 - 2)) >> 16;
              *(v83 - 1) = bswap32(*(v82 - 1)) >> 16;
              *v83 = bswap32(*v82) >> 16;
              v83[1] = bswap32(v82[1]) >> 16;
              v63 += v59;
              v69 += v61;
              ++v79;
              v80 += v61;
              v81 += v59;
            }
            while (v79 != v78);
          }
        }
        if (v57 != 1)
        {
          do
          {
            *v69 = bswap32(*v63) >> 16;
            v69[1] = bswap32(v63[1]) >> 16;
            v69[2] = bswap32(v63[2]) >> 16;
            v69[3] = bswap32(v63[3]) >> 16;
            v63 = (unsigned __int16 *)((char *)v63 + v76);
            v69 = (_WORD *)((char *)v69 + v77);
            --v75;
          }
          while (v75);
        }
        *v69 = bswap32(*v63) >> 16;
        v69[1] = bswap32(v63[1]) >> 16;
        v69[2] = bswap32(v63[2]) >> 16;
        v69[3] = bswap32(v63[3]) >> 16;
      }
    }
  }
  v85 = v116;
  v116 = 0;
  if (v85)
    (*(void (**)(uint64_t))(*(_QWORD *)v85 + 8))(v85);
  v86 = (uint64_t)v117;
  v117 = 0;
  if (v86)
    (*(void (**)(uint64_t))(*(_QWORD *)v86 + 8))(v86);
  v31 = v96;
  if (v96)
  {
    v87 = (unint64_t *)&v96->__shared_owners_;
    do
      v33 = __ldaxr(v87);
    while (__stlxr(v33 - 1, v87));
LABEL_122:
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
LABEL_124:
  nullsub_4(&v94);
  v48 = v107;
  if (v107)
  {
LABEL_125:
    v88 = (unint64_t *)&v48->__shared_owners_;
    do
      v89 = __ldaxr(v88);
    while (__stlxr(v89 - 1, v88));
    if (!v89)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
  }
LABEL_129:
  v90 = nullsub_4(&v105);
  v91 = v115;
  if (v115)
  {
    v92 = (unint64_t *)&v115->__shared_owners_;
    do
      v93 = __ldaxr(v92);
    while (__stlxr(v93 - 1, v92));
    if (!v93)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v91->__on_zero_shared)(v91, v90);
      std::__shared_weak_count::__release_weak(v91);
    }
  }
}

void sub_2397565A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_239708408((uint64_t)va);
  sub_239755C98((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_23975664C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239756660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239756674(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239756688(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23975669C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_2397566B0(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_39;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v27, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (!v14)
    goto LABEL_32;
LABEL_18:
  v15 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v15)
    goto LABEL_40;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldxr(v16);
  while (__stxr(v17 + 1, v16));
  do
    v18 = __ldaxr(v16);
  while (__stlxr(v18 - 1, v16));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  v14 = *(_QWORD *)(a2 + 8);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_40;
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v26, v14, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v26 = 0;
LABEL_33:
  v23.n128_u64[0] = sub_239756918(a1, a2, a3);
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v24 + 8))(v24, v23.n128_f32[0]);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v23);
  return result;
}

void sub_2397568B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_239756918@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 4 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (4 * *(_DWORD *)(a1 + 56));
    sub_239756B28(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

uint64_t sub_239756B28(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239756D5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239756DC4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239756DD8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE5458;
  result[1] = v3;
  return result;
}

uint64_t sub_239756E0C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE5458;
  a2[1] = v2;
  return result;
}

void sub_239756E28(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE54D8;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_239756F64(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_239756FD0()
{
  return &unk_250AE55C0;
}

void sub_239756FDC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239757048()
{
  return 31;
}

uint64_t sub_239757050(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_239757058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_239757074(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397570F8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 31)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397573C8(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23975737C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397573C8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239757440();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239757440()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931808);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931808))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2396270A0();
    sub_239757644((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239757644((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569317F0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569317F0, &dword_23940C000);
          __cxa_guard_release(&qword_256931808);
          return &stru_2569317F0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569317F0;
}

void sub_239757590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931808);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931808);
  _Unwind_Resume(a1);
}

void sub_239757644(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397576D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_239757714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  BOOL v46;
  std::__shared_weak_count *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int *v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  _DWORD *v68;
  std::__shared_weak_count *v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  int v75;
  int v76;
  _DWORD *v77;
  unsigned int *v78;
  unsigned int *v79;
  _DWORD *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t *v84;
  unint64_t *v85;
  unint64_t v86;
  __n128 v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  uint64_t (**v91)();
  uint64_t v92;
  std::__shared_weak_count *v93;
  unsigned int *v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  char v100;
  char v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  std::__shared_weak_count *v104;
  _DWORD *v105;
  unsigned int v106;
  unsigned int v107;
  char v108;
  char v109;
  unint64_t v110;
  CFDataRef v111;
  std::__shared_weak_count *v112;
  uint64_t v113;
  const UInt8 *v114;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v102);
  sub_239769054((uint64_t)&v102, (int)&v111);
  v11 = v103;
  if (v103)
  {
    v12 = (unint64_t *)&v103->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v111);
  v15 = sub_23962A55C(&v111);
  if (!v14 && v15 >= 4)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v110 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v102, v22, &v110);
  v23 = BytesPerRow >> 2;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v91 = &off_250AE2038;
    if (HIDWORD(v110))
      v28 = (_DWORD)v110 == 0;
    else
      v28 = 1;
    v29 = v23 << 32;
    if (v28)
      v29 = 0;
    v113 = v29 | (4 * ((_DWORD)v110 != 0));
    v114 = v14;
    sub_239646DE8((uint64_t *)&v114, &v110, &v113, (uint64_t)&v92);
    sub_23975807C((uint64_t)&v91, (uint64_t)&v102);
    v30 = v93;
    if (v93)
    {
      v31 = (unint64_t *)&v93->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      goto LABEL_122;
    }
    goto LABEL_124;
  }
  v33 = v25 | *(_DWORD *)(a3 + 16);
  if (v33 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v46 = v33 != 0;
    if (v24)
      v46 = 1;
    if (!v46)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v47 = v104;
    if (!v104)
      goto LABEL_129;
    goto LABEL_125;
  }
  v91 = &off_250AE2038;
  if (HIDWORD(v110))
    v34 = (_DWORD)v110 == 0;
  else
    v34 = 1;
  v35 = v23 << 32;
  if (v34)
    v35 = 0;
  v113 = v35 | (4 * ((_DWORD)v110 != 0));
  v114 = v14;
  sub_239646DE8((uint64_t *)&v114, &v110, &v113, (uint64_t)&v92);
  v36 = v92;
  if (!v92)
    goto LABEL_67;
  v37 = v93;
  if (v93)
  {
    v38 = (unint64_t *)&v93->__shared_owners_;
    do
      v39 = __ldxr(v38);
    while (__stxr(v39 + 1, v38));
    do
      v40 = __ldaxr(v38);
    while (__stlxr(v40 - 1, v38));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
    v36 = v92;
    v41 = v93;
    if (v93)
    {
      v42 = (unint64_t *)&v93->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
  }
  if (v101)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v36 + 96))(&v114, v36, 0);
    v45 = v103;
    if (!v103)
      goto LABEL_82;
  }
  else
  {
LABEL_67:
    v114 = 0;
    v45 = v103;
    if (!v103)
    {
LABEL_82:
      v113 = 0;
      goto LABEL_83;
    }
  }
  v48 = v104;
  if (v104)
  {
    v49 = (unint64_t *)&v104->__shared_owners_;
    do
      v50 = __ldxr(v49);
    while (__stxr(v50 + 1, v49));
    do
      v51 = __ldaxr(v49);
    while (__stlxr(v51 - 1, v49));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
    v45 = v103;
    v52 = v104;
    if (v104)
    {
      v53 = (unint64_t *)&v104->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      do
        v55 = __ldaxr(v53);
      while (__stlxr(v55 - 1, v53));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }
  }
  if (!v109)
    goto LABEL_82;
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v45->__vftable[2].__on_zero_shared)(&v113, v45, 1);
LABEL_83:
  if (v95)
  {
    v56 = v96;
    if (v96)
    {
      v57 = v97;
      if (v97)
      {
        v58 = v98;
        v59 = v99;
        v60 = v106;
        v61 = v107;
        v62 = v94;
        if (v100 && v94)
        {
          v63 = v92;
          v64 = v93;
          if (v93)
          {
            v65 = (unint64_t *)&v93->__shared_owners_;
            do
              v66 = __ldxr(v65);
            while (__stxr(v66 + 1, v65));
            do
              v67 = __ldaxr(v65);
            while (__stlxr(v67 - 1, v65));
            if (!v67)
            {
              ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
              std::__shared_weak_count::__release_weak(v64);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v63 + 88))(v63, 0, "unknown location");
          v62 = v94;
        }
        v68 = v105;
        if (v108 && v105)
        {
          v69 = v103;
          v70 = v104;
          if (v104)
          {
            v71 = (unint64_t *)&v104->__shared_owners_;
            do
              v72 = __ldxr(v71);
            while (__stxr(v72 + 1, v71));
            do
              v73 = __ldaxr(v71);
            while (__stlxr(v73 - 1, v71));
            if (!v73)
            {
              ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
              std::__shared_weak_count::__release_weak(v70);
            }
          }
          ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v69->__vftable[2].~__shared_weak_count_0)(v69, 1, "unknown location");
          v68 = v105;
        }
        v74 = v56 - 1;
        v75 = v57 - 1;
        if (v57 != 1)
        {
          if (v56 == 1)
          {
            do
            {
              *v68 = bswap32(*v62);
              v68[1] = bswap32(v62[1]);
              v68[2] = bswap32(v62[2]);
              v68[3] = bswap32(v62[3]);
              v62 += v59;
              v68 += v61;
              --v75;
            }
            while (v75);
LABEL_114:
            *v68 = bswap32(*v62);
            v68[1] = bswap32(v62[1]);
            v68[2] = bswap32(v62[2]);
            v68[3] = bswap32(v62[3]);
            goto LABEL_115;
          }
          v76 = 0;
          v77 = v68 + 2;
          v78 = v62 + 2;
          do
          {
            v79 = v78;
            v80 = v77;
            v81 = v56 - 1;
            do
            {
              *(v80 - 2) = bswap32(*(v79 - 2));
              *(v80 - 1) = bswap32(*(v79 - 1));
              *v80 = bswap32(*v79);
              v80[1] = bswap32(v79[1]);
              v80 += v60;
              v79 += v58;
              --v81;
            }
            while (v81);
            *(v80 - 2) = bswap32(*(v79 - 2));
            *(v80 - 1) = bswap32(*(v79 - 1));
            *v80 = bswap32(*v79);
            v80[1] = bswap32(v79[1]);
            v62 += v59;
            v68 += v61;
            ++v76;
            v77 += v61;
            v78 += v59;
          }
          while (v76 != v75);
        }
        if (v56 != 1)
        {
          do
          {
            *v68 = bswap32(*v62);
            v68[1] = bswap32(v62[1]);
            v68[2] = bswap32(v62[2]);
            v68[3] = bswap32(v62[3]);
            v62 += v58;
            v68 += v60;
            --v74;
          }
          while (v74);
        }
        goto LABEL_114;
      }
    }
  }
LABEL_115:
  v82 = v113;
  v113 = 0;
  if (v82)
    (*(void (**)(uint64_t))(*(_QWORD *)v82 + 8))(v82);
  v83 = (uint64_t)v114;
  v114 = 0;
  if (v83)
    (*(void (**)(uint64_t))(*(_QWORD *)v83 + 8))(v83);
  v30 = v93;
  if (v93)
  {
    v84 = (unint64_t *)&v93->__shared_owners_;
    do
      v32 = __ldaxr(v84);
    while (__stlxr(v32 - 1, v84));
LABEL_122:
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
LABEL_124:
  nullsub_4(&v91);
  v47 = v104;
  if (v104)
  {
LABEL_125:
    v85 = (unint64_t *)&v47->__shared_owners_;
    do
      v86 = __ldaxr(v85);
    while (__stlxr(v86 - 1, v85));
    if (!v86)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
LABEL_129:
  v87 = nullsub_4(&v102);
  v88 = v112;
  if (v112)
  {
    v89 = (unint64_t *)&v112->__shared_owners_;
    do
      v90 = __ldaxr(v89);
    while (__stlxr(v90 - 1, v89));
    if (!v90)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v88->__on_zero_shared)(v88, v87);
      std::__shared_weak_count::__release_weak(v88);
    }
  }
}

void sub_239757F6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_2396440AC((uint64_t)va);
  sub_239643F74((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_239758018(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23975802C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239758040(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239758054(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239758068(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_23975807C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_2397582E4(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239758280(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397582E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_239758484(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_239758484(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397586B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239758720()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239758734(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE55E0;
  result[1] = v3;
  return result;
}

uint64_t sub_239758768(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE55E0;
  a2[1] = v2;
  return result;
}

void sub_239758784(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE1D50;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_2397588C0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_23975892C()
{
  return &unk_250AE5650;
}

void sub_239758938(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 32)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239758C08(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_239758BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_239758C08(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239758C80();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239758C80()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931828);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931828))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23960A93C();
    sub_239758E84((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239758E84((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931810, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931810, &dword_23940C000);
          __cxa_guard_release(&qword_256931828);
          return &stru_256931810;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931810;
}

void sub_239758DD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931828);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931828);
  _Unwind_Resume(a1);
}

void sub_239758E84(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239758F18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_239758F54(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_239758FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  size_t BytesPerRow;
  uint64_t v22;
  __n128 v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  size_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  __n128 v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t (**v42)();
  uint64_t v43;
  std::__shared_weak_count *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  std::__shared_weak_count *v47;
  unsigned int v48;
  unint64_t v49;
  CFDataRef v50;
  std::__shared_weak_count *v51;
  uint64_t v52;
  const UInt8 *v53;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v45);
  sub_239769054((uint64_t)&v45, (int)&v50);
  v11 = v46;
  if (v46)
  {
    v12 = (unint64_t *)&v46->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v50);
  v15 = sub_23962A55C(&v50);
  if (!v14 && v15)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v49 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v48 = BytesPerRow;
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v45, v22, &v49);
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v42 = &off_250AE3CB0;
    if (HIDWORD(v49))
      v28 = (_DWORD)v49 == 0;
    else
      v28 = 1;
    v29 = BytesPerRow << 32;
    if (v28)
      v29 = 0;
    v52 = v29 | (4 * ((_DWORD)v49 != 0));
    v53 = v14;
    sub_239759720((uint64_t *)&v53, &v49, &v52, (uint64_t)&v43);
    sub_2397594B8((uint64_t)&v42, (uint64_t)&v45);
    v30 = v44;
    if (v44)
    {
      v31 = (unint64_t *)&v44->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    v23 = nullsub_4(&v42);
  }
  else
  {
    v33 = v25 | *(_DWORD *)(a3 + 16);
    if (!v33 && !*(_DWORD *)(a3 + 20) && v24 == 1)
    {
      sub_239759430(&v42, (uint64_t)v14, &v49, &v48);
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v28 = v24 == 0;
    v34 = v33 != 0;
    if (!v28)
      v34 = 1;
    if (!v34)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  v35 = v47;
  if (v47)
  {
    v36 = (unint64_t *)&v47->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v35->__on_zero_shared)(v35, v23);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
  v38 = nullsub_4(&v45);
  v39 = v51;
  if (v51)
  {
    v40 = (unint64_t *)&v51->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v39->__on_zero_shared)(v39, v38);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
}

void sub_239759384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;

  sub_239708198((uint64_t)&a9);
  sub_239758F54((uint64_t)&a19);
  sub_239416DA0(v19 - 96);
  _Unwind_Resume(a1);
}

void sub_2397593CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_2397593E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397593F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_239759408(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_23975941C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

_QWORD *sub_239759430(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *a1 = &off_250AE3CB0;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (4 * (*a3 != 0));
  v9 = a2;
  sub_239759720(&v9, a3, &v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_2397594A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397594B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_23975999C(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397596BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239759720(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 4;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239759878(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239759864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239759878(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_239759984(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void *sub_23975999C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_239759B3C(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_239759B3C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239759D70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239759DD8()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239759DEC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE5670;
  result[1] = v3;
  return result;
}

uint64_t sub_239759E20(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE5670;
  a2[1] = v2;
  return result;
}

void sub_239759E3C(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE56F0;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_239759F78(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_239759FE4()
{
  return &unk_250AE57D8;
}

void sub_239759FF0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23975A05C()
{
  return 33;
}

uint64_t sub_23975A064(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23975A06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_23975A088(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23975A10C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 33)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23975A3D8(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23975A38C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23975A3D8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23975A450();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23975A450()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931848);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931848))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23970D7AC();
    sub_23975A654((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23975A654((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931830, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931830, &dword_23940C000);
          __cxa_guard_release(&qword_256931848);
          return &stru_256931830;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931830;
}

void sub_23975A5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931848);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931848);
  _Unwind_Resume(a1);
}

void sub_23975A654(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23975A6E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_23975A724(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23975A78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  size_t BytesPerRow;
  uint64_t v22;
  __n128 v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  size_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  __n128 v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t (**v42)();
  uint64_t v43;
  std::__shared_weak_count *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  std::__shared_weak_count *v47;
  unsigned int v48;
  unint64_t v49;
  CFDataRef v50;
  std::__shared_weak_count *v51;
  uint64_t v52;
  const UInt8 *v53;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v45);
  sub_239769054((uint64_t)&v45, (int)&v50);
  v11 = v46;
  if (v46)
  {
    v12 = (unint64_t *)&v46->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v50);
  v15 = sub_23962A55C(&v50);
  if (!v14 && v15)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v49 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v48 = BytesPerRow;
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v45, v22, &v49);
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v42 = &off_250AE3C70;
    if (HIDWORD(v49))
      v28 = (_DWORD)v49 == 0;
    else
      v28 = 1;
    v29 = BytesPerRow << 32;
    if (v28)
      v29 = 0;
    v52 = v29 | (4 * ((_DWORD)v49 != 0));
    v53 = v14;
    sub_23975AEF0((uint64_t *)&v53, &v49, &v52, (uint64_t)&v43);
    sub_23975AC88((uint64_t)&v42, (uint64_t)&v45);
    v30 = v44;
    if (v44)
    {
      v31 = (unint64_t *)&v44->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    v23 = nullsub_4(&v42);
  }
  else
  {
    v33 = v25 | *(_DWORD *)(a3 + 16);
    if (!v33 && !*(_DWORD *)(a3 + 20) && v24 == 1)
    {
      sub_23975AC00(&v42, (uint64_t)v14, &v49, &v48);
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v28 = v24 == 0;
    v34 = v33 != 0;
    if (!v28)
      v34 = 1;
    if (!v34)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  v35 = v47;
  if (v47)
  {
    v36 = (unint64_t *)&v47->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v35->__on_zero_shared)(v35, v23);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
  v38 = nullsub_4(&v45);
  v39 = v51;
  if (v51)
  {
    v40 = (unint64_t *)&v51->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v39->__on_zero_shared)(v39, v38);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
}

void sub_23975AB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;

  sub_239708130((uint64_t)&a9);
  sub_23975A724((uint64_t)&a19);
  sub_239416DA0(v19 - 96);
  _Unwind_Resume(a1);
}

void sub_23975AB9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_23975ABB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23975ABC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_23975ABD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_23975ABEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

_QWORD *sub_23975AC00(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *a1 = &off_250AE3C70;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (4 * (*a3 != 0));
  v9 = a2;
  sub_23975AEF0(&v9, a3, &v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_23975AC74(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23975AC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_23975B16C(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23975AE8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23975AEF0(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 4;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23975B048(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_23975B034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23975B048(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_23975B154(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void *sub_23975B16C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_23975B30C(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_23975B30C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23975B540(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23975B5A8()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23975B5BC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE57F8;
  result[1] = v3;
  return result;
}

uint64_t sub_23975B5F0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE57F8;
  a2[1] = v2;
  return result;
}

void sub_23975B60C(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE5878;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_23975B748(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_23975B7B4()
{
  return &unk_250AE5960;
}

void sub_23975B7C0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23975B82C()
{
  return 37;
}

uint64_t sub_23975B834(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23975B83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_23975B858(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23975B8DC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 37)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23975BBA8(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23975BB5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23975BBA8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23975BC20();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23975BC20()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931868);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931868))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23970A310();
    sub_23975BE24((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23975BE24((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931850, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931850, &dword_23940C000);
          __cxa_guard_release(&qword_256931868);
          return &stru_256931850;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931850;
}

void sub_23975BD70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931868);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931868);
  _Unwind_Resume(a1);
}

void sub_23975BE24(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23975BEB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_23975BEF4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23975BF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  BOOL v46;
  std::__shared_weak_count *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int16 *v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  _WORD *v68;
  std::__shared_weak_count *v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  int v75;
  int v76;
  _WORD *v77;
  unsigned __int16 *v78;
  unsigned __int16 *v79;
  _WORD *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t *v84;
  unint64_t *v85;
  unint64_t v86;
  __n128 v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  uint64_t (**v91)();
  uint64_t v92;
  std::__shared_weak_count *v93;
  unsigned __int16 *v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  char v100;
  char v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  std::__shared_weak_count *v104;
  _WORD *v105;
  unsigned int v106;
  unsigned int v107;
  char v108;
  char v109;
  unint64_t v110;
  CFDataRef v111;
  std::__shared_weak_count *v112;
  uint64_t v113;
  const UInt8 *v114;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v102);
  sub_239769054((uint64_t)&v102, (int)&v111);
  v11 = v103;
  if (v103)
  {
    v12 = (unint64_t *)&v103->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v111);
  v15 = sub_23962A55C(&v111);
  if (!v14 && v15 >= 2)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v110 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v102, v22, &v110);
  v23 = BytesPerRow >> 1;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v91 = &off_250AE4570;
    if (HIDWORD(v110))
      v28 = (_DWORD)v110 == 0;
    else
      v28 = 1;
    v29 = v23 << 32;
    if (v28)
      v29 = 0;
    v113 = v29 | (4 * ((_DWORD)v110 != 0));
    v114 = v14;
    sub_23975CB7C((uint64_t *)&v114, &v110, &v113, (uint64_t)&v92);
    sub_23975C914((uint64_t)&v91, (uint64_t)&v102);
    v30 = v93;
    if (v93)
    {
      v31 = (unint64_t *)&v93->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      goto LABEL_122;
    }
    goto LABEL_124;
  }
  v33 = v25 | *(_DWORD *)(a3 + 16);
  if (v33 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v46 = v33 != 0;
    if (v24)
      v46 = 1;
    if (!v46)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v47 = v104;
    if (!v104)
      goto LABEL_129;
    goto LABEL_125;
  }
  v91 = &off_250AE4570;
  if (HIDWORD(v110))
    v34 = (_DWORD)v110 == 0;
  else
    v34 = 1;
  v35 = v23 << 32;
  if (v34)
    v35 = 0;
  v113 = v35 | (4 * ((_DWORD)v110 != 0));
  v114 = v14;
  sub_23975CB7C((uint64_t *)&v114, &v110, &v113, (uint64_t)&v92);
  v36 = v92;
  if (!v92)
    goto LABEL_67;
  v37 = v93;
  if (v93)
  {
    v38 = (unint64_t *)&v93->__shared_owners_;
    do
      v39 = __ldxr(v38);
    while (__stxr(v39 + 1, v38));
    do
      v40 = __ldaxr(v38);
    while (__stlxr(v40 - 1, v38));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
    v36 = v92;
    v41 = v93;
    if (v93)
    {
      v42 = (unint64_t *)&v93->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
  }
  if (v101)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v36 + 96))(&v114, v36, 0);
    v45 = v103;
    if (!v103)
      goto LABEL_82;
  }
  else
  {
LABEL_67:
    v114 = 0;
    v45 = v103;
    if (!v103)
    {
LABEL_82:
      v113 = 0;
      goto LABEL_83;
    }
  }
  v48 = v104;
  if (v104)
  {
    v49 = (unint64_t *)&v104->__shared_owners_;
    do
      v50 = __ldxr(v49);
    while (__stxr(v50 + 1, v49));
    do
      v51 = __ldaxr(v49);
    while (__stlxr(v51 - 1, v49));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
    v45 = v103;
    v52 = v104;
    if (v104)
    {
      v53 = (unint64_t *)&v104->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      do
        v55 = __ldaxr(v53);
      while (__stlxr(v55 - 1, v53));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }
  }
  if (!v109)
    goto LABEL_82;
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v45->__vftable[2].__on_zero_shared)(&v113, v45, 1);
LABEL_83:
  if (v95)
  {
    v56 = v96;
    if (v96)
    {
      v57 = v97;
      if (v97)
      {
        v58 = v98;
        v59 = v99;
        v60 = v106;
        v61 = v107;
        v62 = v94;
        if (v100 && v94)
        {
          v63 = v92;
          v64 = v93;
          if (v93)
          {
            v65 = (unint64_t *)&v93->__shared_owners_;
            do
              v66 = __ldxr(v65);
            while (__stxr(v66 + 1, v65));
            do
              v67 = __ldaxr(v65);
            while (__stlxr(v67 - 1, v65));
            if (!v67)
            {
              ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
              std::__shared_weak_count::__release_weak(v64);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v63 + 88))(v63, 0, "unknown location");
          v62 = v94;
        }
        v68 = v105;
        if (v108 && v105)
        {
          v69 = v103;
          v70 = v104;
          if (v104)
          {
            v71 = (unint64_t *)&v104->__shared_owners_;
            do
              v72 = __ldxr(v71);
            while (__stxr(v72 + 1, v71));
            do
              v73 = __ldaxr(v71);
            while (__stlxr(v73 - 1, v71));
            if (!v73)
            {
              ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
              std::__shared_weak_count::__release_weak(v70);
            }
          }
          ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v69->__vftable[2].~__shared_weak_count_0)(v69, 1, "unknown location");
          v68 = v105;
        }
        v74 = v56 - 1;
        v75 = v57 - 1;
        if (v57 != 1)
        {
          if (v56 == 1)
          {
            do
            {
              *v68 = bswap32(*v62) >> 16;
              v68[1] = bswap32(v62[1]) >> 16;
              v68[2] = bswap32(v62[2]) >> 16;
              v68[3] = bswap32(v62[3]) >> 16;
              v62 += v59;
              v68 += v61;
              --v75;
            }
            while (v75);
LABEL_114:
            *v68 = bswap32(*v62) >> 16;
            v68[1] = bswap32(v62[1]) >> 16;
            v68[2] = bswap32(v62[2]) >> 16;
            v68[3] = bswap32(v62[3]) >> 16;
            goto LABEL_115;
          }
          v76 = 0;
          v77 = v68 + 2;
          v78 = v62 + 2;
          do
          {
            v79 = v78;
            v80 = v77;
            v81 = v56 - 1;
            do
            {
              *(v80 - 2) = bswap32(*(v79 - 2)) >> 16;
              *(v80 - 1) = bswap32(*(v79 - 1)) >> 16;
              *v80 = bswap32(*v79) >> 16;
              v80[1] = bswap32(v79[1]) >> 16;
              v80 += v60;
              v79 += v58;
              --v81;
            }
            while (v81);
            *(v80 - 2) = bswap32(*(v79 - 2)) >> 16;
            *(v80 - 1) = bswap32(*(v79 - 1)) >> 16;
            *v80 = bswap32(*v79) >> 16;
            v80[1] = bswap32(v79[1]) >> 16;
            v62 += v59;
            v68 += v61;
            ++v76;
            v77 += v61;
            v78 += v59;
          }
          while (v76 != v75);
        }
        if (v56 != 1)
        {
          do
          {
            *v68 = bswap32(*v62) >> 16;
            v68[1] = bswap32(v62[1]) >> 16;
            v68[2] = bswap32(v62[2]) >> 16;
            v68[3] = bswap32(v62[3]) >> 16;
            v62 += v58;
            v68 += v60;
            --v74;
          }
          while (v74);
        }
        goto LABEL_114;
      }
    }
  }
LABEL_115:
  v82 = v113;
  v113 = 0;
  if (v82)
    (*(void (**)(uint64_t))(*(_QWORD *)v82 + 8))(v82);
  v83 = (uint64_t)v114;
  v114 = 0;
  if (v83)
    (*(void (**)(uint64_t))(*(_QWORD *)v83 + 8))(v83);
  v30 = v93;
  if (v93)
  {
    v84 = (unint64_t *)&v93->__shared_owners_;
    do
      v32 = __ldaxr(v84);
    while (__stlxr(v32 - 1, v84));
LABEL_122:
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
LABEL_124:
  nullsub_4(&v91);
  v47 = v104;
  if (v104)
  {
LABEL_125:
    v85 = (unint64_t *)&v47->__shared_owners_;
    do
      v86 = __ldaxr(v85);
    while (__stlxr(v86 - 1, v85));
    if (!v86)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
LABEL_129:
  v87 = nullsub_4(&v102);
  v88 = v112;
  if (v112)
  {
    v89 = (unint64_t *)&v112->__shared_owners_;
    do
      v90 = __ldaxr(v89);
    while (__stlxr(v90 - 1, v89));
    if (!v90)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v88->__on_zero_shared)(v88, v87);
      std::__shared_weak_count::__release_weak(v88);
    }
  }
}

void sub_23975C804(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_2397401DC((uint64_t)va);
  sub_23975BEF4((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_23975C8B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23975C8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23975C8D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23975C8EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23975C900(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_23975C914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_23975CDF8(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23975CB18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23975CB7C(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 4;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23975CCD4(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_23975CCC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23975CCD4(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_23975CDE0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void *sub_23975CDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_23975CF98(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_23975CF98(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23975D1CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23975D234()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23975D248(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE5980;
  result[1] = v3;
  return result;
}

uint64_t sub_23975D27C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE5980;
  a2[1] = v2;
  return result;
}

void sub_23975D298(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE5A00;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_23975D3D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_23975D440()
{
  return &unk_250AE5AE8;
}

void sub_23975D44C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23975D4B8()
{
  return 38;
}

uint64_t sub_23975D4C0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23975D4C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_23975D4E4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23975D568(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 38)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23975D838(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23975D7EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23975D838(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23975D8B0();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23975D8B0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931888);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931888))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23974097C();
    sub_23975DAB4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23975DAB4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931870, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931870, &dword_23940C000);
          __cxa_guard_release(&qword_256931888);
          return &stru_256931870;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931870;
}

void sub_23975DA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931888);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931888);
  _Unwind_Resume(a1);
}

void sub_23975DAB4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23975DB48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_23975DB84(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23975DBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  uint64_t v29;
  __n128 v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  BOOL v47;
  std::__shared_weak_count *v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int16 *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  _WORD *v69;
  std::__shared_weak_count *v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  _WORD *v80;
  unsigned __int16 *v81;
  unsigned __int16 *v82;
  _WORD *v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t *v87;
  unint64_t *v88;
  unint64_t v89;
  __n128 v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  uint64_t (**v94)();
  uint64_t v95;
  std::__shared_weak_count *v96;
  unsigned __int16 *v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  char v103;
  char v104;
  uint64_t v105;
  std::__shared_weak_count *v106;
  std::__shared_weak_count *v107;
  _WORD *v108;
  unsigned int v109;
  unsigned int v110;
  char v111;
  char v112;
  unint64_t v113;
  CFDataRef v114;
  std::__shared_weak_count *v115;
  uint64_t v116;
  const UInt8 *v117;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v105);
  sub_239769054((uint64_t)&v105, (int)&v114);
  v11 = v106;
  if (v106)
  {
    v12 = (unint64_t *)&v106->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v114);
  v15 = sub_23962A55C(&v114);
  if (!v14 && v15 >= 2)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v113 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v105, v22, &v113);
  v23 = BytesPerRow >> 1;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v94 = &off_250AE4668;
    if (HIDWORD(v113))
      v28 = (_DWORD)v113 == 0;
    else
      v28 = 1;
    v29 = v23 << 32;
    if (v28)
      v29 = 0;
    v116 = v29 | (4 * ((_DWORD)v113 != 0));
    v117 = v14;
    sub_23975E804((uint64_t *)&v117, &v113, &v116, (uint64_t)&v95);
    sub_23975E59C((uint64_t)&v94, (uint64_t)&v105, v30);
    v31 = v96;
    if (v96)
    {
      v32 = (unint64_t *)&v96->__shared_owners_;
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      goto LABEL_122;
    }
    goto LABEL_124;
  }
  v34 = v25 | *(_DWORD *)(a3 + 16);
  if (v34 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v47 = v34 != 0;
    if (v24)
      v47 = 1;
    if (!v47)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v48 = v107;
    if (!v107)
      goto LABEL_129;
    goto LABEL_125;
  }
  v94 = &off_250AE4668;
  if (HIDWORD(v113))
    v35 = (_DWORD)v113 == 0;
  else
    v35 = 1;
  v36 = v23 << 32;
  if (v35)
    v36 = 0;
  v116 = v36 | (4 * ((_DWORD)v113 != 0));
  v117 = v14;
  sub_23975E804((uint64_t *)&v117, &v113, &v116, (uint64_t)&v95);
  v37 = v95;
  if (!v95)
    goto LABEL_67;
  v38 = v96;
  if (v96)
  {
    v39 = (unint64_t *)&v96->__shared_owners_;
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 1, v39));
    do
      v41 = __ldaxr(v39);
    while (__stlxr(v41 - 1, v39));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
    v37 = v95;
    v42 = v96;
    if (v96)
    {
      v43 = (unint64_t *)&v96->__shared_owners_;
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 1, v43));
      do
        v45 = __ldaxr(v43);
      while (__stlxr(v45 - 1, v43));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
      }
    }
  }
  if (v104)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v37 + 96))(&v117, v37, 0);
    v46 = v106;
    if (!v106)
      goto LABEL_82;
  }
  else
  {
LABEL_67:
    v117 = 0;
    v46 = v106;
    if (!v106)
    {
LABEL_82:
      v116 = 0;
      goto LABEL_83;
    }
  }
  v49 = v107;
  if (v107)
  {
    v50 = (unint64_t *)&v107->__shared_owners_;
    do
      v51 = __ldxr(v50);
    while (__stxr(v51 + 1, v50));
    do
      v52 = __ldaxr(v50);
    while (__stlxr(v52 - 1, v50));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
    v46 = v106;
    v53 = v107;
    if (v107)
    {
      v54 = (unint64_t *)&v107->__shared_owners_;
      do
        v55 = __ldxr(v54);
      while (__stxr(v55 + 1, v54));
      do
        v56 = __ldaxr(v54);
      while (__stlxr(v56 - 1, v54));
      if (!v56)
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
    }
  }
  if (!v112)
    goto LABEL_82;
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v46->__vftable[2].__on_zero_shared)(&v116, v46, 1);
LABEL_83:
  if (v98)
  {
    v57 = v99;
    if (v99)
    {
      v58 = v100;
      if (v100)
      {
        v60 = v101;
        v59 = v102;
        v62 = v109;
        v61 = v110;
        v63 = v97;
        if (v103 && v97)
        {
          v64 = v95;
          v65 = v96;
          if (v96)
          {
            v66 = (unint64_t *)&v96->__shared_owners_;
            do
              v67 = __ldxr(v66);
            while (__stxr(v67 + 1, v66));
            do
              v68 = __ldaxr(v66);
            while (__stlxr(v68 - 1, v66));
            if (!v68)
            {
              ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
              std::__shared_weak_count::__release_weak(v65);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v64 + 88))(v64, 0, "unknown location");
          v63 = v97;
        }
        v69 = v108;
        if (v111 && v108)
        {
          v70 = v106;
          v71 = v107;
          if (v107)
          {
            v72 = (unint64_t *)&v107->__shared_owners_;
            do
              v73 = __ldxr(v72);
            while (__stxr(v73 + 1, v72));
            do
              v74 = __ldaxr(v72);
            while (__stlxr(v74 - 1, v72));
            if (!v74)
            {
              ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
              std::__shared_weak_count::__release_weak(v71);
            }
          }
          ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v70->__vftable[2].~__shared_weak_count_0)(v70, 1, "unknown location");
          v69 = v108;
        }
        v75 = v57 - 1;
        v76 = 2 * v60;
        v77 = 2 * v62;
        v78 = v58 - 1;
        if (v58 != 1)
        {
          if (v57 == 1)
          {
            do
            {
              *v69 = bswap32(*v63) >> 16;
              v69[1] = bswap32(v63[1]) >> 16;
              v69[2] = bswap32(v63[2]) >> 16;
              v69[3] = bswap32(v63[3]) >> 16;
              v63 += v59;
              v69 += v61;
              --v78;
            }
            while (v78);
          }
          else
          {
            v79 = 0;
            v80 = v69 + 2;
            v81 = v63 + 2;
            do
            {
              v82 = v81;
              v83 = v80;
              v84 = v57 - 1;
              do
              {
                *(v83 - 2) = bswap32(*(v82 - 2)) >> 16;
                *(v83 - 1) = bswap32(*(v82 - 1)) >> 16;
                *v83 = bswap32(*v82) >> 16;
                v83[1] = bswap32(v82[1]) >> 16;
                v83 = (_WORD *)((char *)v83 + v77);
                v82 = (unsigned __int16 *)((char *)v82 + v76);
                --v84;
              }
              while (v84);
              *(v83 - 2) = bswap32(*(v82 - 2)) >> 16;
              *(v83 - 1) = bswap32(*(v82 - 1)) >> 16;
              *v83 = bswap32(*v82) >> 16;
              v83[1] = bswap32(v82[1]) >> 16;
              v63 += v59;
              v69 += v61;
              ++v79;
              v80 += v61;
              v81 += v59;
            }
            while (v79 != v78);
          }
        }
        if (v57 != 1)
        {
          do
          {
            *v69 = bswap32(*v63) >> 16;
            v69[1] = bswap32(v63[1]) >> 16;
            v69[2] = bswap32(v63[2]) >> 16;
            v69[3] = bswap32(v63[3]) >> 16;
            v63 = (unsigned __int16 *)((char *)v63 + v76);
            v69 = (_WORD *)((char *)v69 + v77);
            --v75;
          }
          while (v75);
        }
        *v69 = bswap32(*v63) >> 16;
        v69[1] = bswap32(v63[1]) >> 16;
        v69[2] = bswap32(v63[2]) >> 16;
        v69[3] = bswap32(v63[3]) >> 16;
      }
    }
  }
  v85 = v116;
  v116 = 0;
  if (v85)
    (*(void (**)(uint64_t))(*(_QWORD *)v85 + 8))(v85);
  v86 = (uint64_t)v117;
  v117 = 0;
  if (v86)
    (*(void (**)(uint64_t))(*(_QWORD *)v86 + 8))(v86);
  v31 = v96;
  if (v96)
  {
    v87 = (unint64_t *)&v96->__shared_owners_;
    do
      v33 = __ldaxr(v87);
    while (__stlxr(v33 - 1, v87));
LABEL_122:
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
LABEL_124:
  nullsub_4(&v94);
  v48 = v107;
  if (v107)
  {
LABEL_125:
    v88 = (unint64_t *)&v48->__shared_owners_;
    do
      v89 = __ldaxr(v88);
    while (__stlxr(v89 - 1, v88));
    if (!v89)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
  }
LABEL_129:
  v90 = nullsub_4(&v105);
  v91 = v115;
  if (v115)
  {
    v92 = (unint64_t *)&v115->__shared_owners_;
    do
      v93 = __ldaxr(v92);
    while (__stlxr(v93 - 1, v92));
    if (!v93)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v91->__on_zero_shared)(v91, v90);
      std::__shared_weak_count::__release_weak(v91);
    }
  }
}

void sub_23975E48C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_239740A24((uint64_t)va);
  sub_23975DB84((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_23975E538(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23975E54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23975E560(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23975E574(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23975E588(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_23975E59C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_39;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v27, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (!v14)
    goto LABEL_32;
LABEL_18:
  v15 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v15)
    goto LABEL_40;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldxr(v16);
  while (__stxr(v17 + 1, v16));
  do
    v18 = __ldaxr(v16);
  while (__stlxr(v18 - 1, v16));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  v14 = *(_QWORD *)(a2 + 8);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_40;
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v26, v14, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v26 = 0;
LABEL_33:
  v23.n128_u64[0] = sub_23975EA80(a1, a2, a3);
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v24 + 8))(v24, v23.n128_f32[0]);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v23);
  return result;
}

void sub_23975E7A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23975E804(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 4;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23975E95C(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_23975E948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23975E95C(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_23975EA68(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_23975EA80@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 4 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (4 * *(_DWORD *)(a1 + 56));
    sub_23975EC90(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

uint64_t sub_23975EC90(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23975EEC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23975EF2C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23975EF40(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE5B08;
  result[1] = v3;
  return result;
}

uint64_t sub_23975EF74(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE5B08;
  a2[1] = v2;
  return result;
}

void sub_23975EF90(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE5B88;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_23975F0CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_23975F138()
{
  return &unk_250AE5C70;
}

void sub_23975F144(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23975F1B0()
{
  return 39;
}

uint64_t sub_23975F1B8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23975F1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_23975F1DC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23975F260(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 39)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23975F530(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23975F4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23975F530(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23975F5A8();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23975F5A8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569318A8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569318A8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2397411C4();
    sub_23975F7AC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23975F7AC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931890, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931890, &dword_23940C000);
          __cxa_guard_release(&qword_2569318A8);
          return &stru_256931890;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931890;
}

void sub_23975F6F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569318A8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569318A8);
  _Unwind_Resume(a1);
}

void sub_23975F7AC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23975F840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_23975F87C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23975F8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  BOOL v46;
  std::__shared_weak_count *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int *v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  _DWORD *v68;
  std::__shared_weak_count *v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  int v75;
  int v76;
  _DWORD *v77;
  unsigned int *v78;
  unsigned int *v79;
  _DWORD *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t *v84;
  unint64_t *v85;
  unint64_t v86;
  __n128 v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  uint64_t (**v91)();
  uint64_t v92;
  std::__shared_weak_count *v93;
  unsigned int *v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  char v100;
  char v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  std::__shared_weak_count *v104;
  _DWORD *v105;
  unsigned int v106;
  unsigned int v107;
  char v108;
  char v109;
  unint64_t v110;
  CFDataRef v111;
  std::__shared_weak_count *v112;
  uint64_t v113;
  const UInt8 *v114;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v102);
  sub_239769054((uint64_t)&v102, (int)&v111);
  v11 = v103;
  if (v103)
  {
    v12 = (unint64_t *)&v103->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v111);
  v15 = sub_23962A55C(&v111);
  if (!v14 && v15 >= 4)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v110 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v102, v22, &v110);
  v23 = BytesPerRow >> 2;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v91 = &off_250AE4760;
    if (HIDWORD(v110))
      v28 = (_DWORD)v110 == 0;
    else
      v28 = 1;
    v29 = v23 << 32;
    if (v28)
      v29 = 0;
    v113 = v29 | (4 * ((_DWORD)v110 != 0));
    v114 = v14;
    sub_2397604B4((uint64_t *)&v114, &v110, &v113, (uint64_t)&v92);
    sub_23976024C((uint64_t)&v91, (uint64_t)&v102);
    v30 = v93;
    if (v93)
    {
      v31 = (unint64_t *)&v93->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      goto LABEL_122;
    }
    goto LABEL_124;
  }
  v33 = v25 | *(_DWORD *)(a3 + 16);
  if (v33 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v46 = v33 != 0;
    if (v24)
      v46 = 1;
    if (!v46)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v47 = v104;
    if (!v104)
      goto LABEL_129;
    goto LABEL_125;
  }
  v91 = &off_250AE4760;
  if (HIDWORD(v110))
    v34 = (_DWORD)v110 == 0;
  else
    v34 = 1;
  v35 = v23 << 32;
  if (v34)
    v35 = 0;
  v113 = v35 | (4 * ((_DWORD)v110 != 0));
  v114 = v14;
  sub_2397604B4((uint64_t *)&v114, &v110, &v113, (uint64_t)&v92);
  v36 = v92;
  if (!v92)
    goto LABEL_67;
  v37 = v93;
  if (v93)
  {
    v38 = (unint64_t *)&v93->__shared_owners_;
    do
      v39 = __ldxr(v38);
    while (__stxr(v39 + 1, v38));
    do
      v40 = __ldaxr(v38);
    while (__stlxr(v40 - 1, v38));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
    v36 = v92;
    v41 = v93;
    if (v93)
    {
      v42 = (unint64_t *)&v93->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
  }
  if (v101)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v36 + 96))(&v114, v36, 0);
    v45 = v103;
    if (!v103)
      goto LABEL_82;
  }
  else
  {
LABEL_67:
    v114 = 0;
    v45 = v103;
    if (!v103)
    {
LABEL_82:
      v113 = 0;
      goto LABEL_83;
    }
  }
  v48 = v104;
  if (v104)
  {
    v49 = (unint64_t *)&v104->__shared_owners_;
    do
      v50 = __ldxr(v49);
    while (__stxr(v50 + 1, v49));
    do
      v51 = __ldaxr(v49);
    while (__stlxr(v51 - 1, v49));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
    v45 = v103;
    v52 = v104;
    if (v104)
    {
      v53 = (unint64_t *)&v104->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      do
        v55 = __ldaxr(v53);
      while (__stlxr(v55 - 1, v53));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }
  }
  if (!v109)
    goto LABEL_82;
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v45->__vftable[2].__on_zero_shared)(&v113, v45, 1);
LABEL_83:
  if (v95)
  {
    v56 = v96;
    if (v96)
    {
      v57 = v97;
      if (v97)
      {
        v58 = v98;
        v59 = v99;
        v60 = v106;
        v61 = v107;
        v62 = v94;
        if (v100 && v94)
        {
          v63 = v92;
          v64 = v93;
          if (v93)
          {
            v65 = (unint64_t *)&v93->__shared_owners_;
            do
              v66 = __ldxr(v65);
            while (__stxr(v66 + 1, v65));
            do
              v67 = __ldaxr(v65);
            while (__stlxr(v67 - 1, v65));
            if (!v67)
            {
              ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
              std::__shared_weak_count::__release_weak(v64);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v63 + 88))(v63, 0, "unknown location");
          v62 = v94;
        }
        v68 = v105;
        if (v108 && v105)
        {
          v69 = v103;
          v70 = v104;
          if (v104)
          {
            v71 = (unint64_t *)&v104->__shared_owners_;
            do
              v72 = __ldxr(v71);
            while (__stxr(v72 + 1, v71));
            do
              v73 = __ldaxr(v71);
            while (__stlxr(v73 - 1, v71));
            if (!v73)
            {
              ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
              std::__shared_weak_count::__release_weak(v70);
            }
          }
          ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v69->__vftable[2].~__shared_weak_count_0)(v69, 1, "unknown location");
          v68 = v105;
        }
        v74 = v56 - 1;
        v75 = v57 - 1;
        if (v57 != 1)
        {
          if (v56 == 1)
          {
            do
            {
              *v68 = bswap32(*v62);
              v68[1] = bswap32(v62[1]);
              v68[2] = bswap32(v62[2]);
              v68[3] = bswap32(v62[3]);
              v62 += v59;
              v68 += v61;
              --v75;
            }
            while (v75);
LABEL_114:
            *v68 = bswap32(*v62);
            v68[1] = bswap32(v62[1]);
            v68[2] = bswap32(v62[2]);
            v68[3] = bswap32(v62[3]);
            goto LABEL_115;
          }
          v76 = 0;
          v77 = v68 + 2;
          v78 = v62 + 2;
          do
          {
            v79 = v78;
            v80 = v77;
            v81 = v56 - 1;
            do
            {
              *(v80 - 2) = bswap32(*(v79 - 2));
              *(v80 - 1) = bswap32(*(v79 - 1));
              *v80 = bswap32(*v79);
              v80[1] = bswap32(v79[1]);
              v80 += v60;
              v79 += v58;
              --v81;
            }
            while (v81);
            *(v80 - 2) = bswap32(*(v79 - 2));
            *(v80 - 1) = bswap32(*(v79 - 1));
            *v80 = bswap32(*v79);
            v80[1] = bswap32(v79[1]);
            v62 += v59;
            v68 += v61;
            ++v76;
            v77 += v61;
            v78 += v59;
          }
          while (v76 != v75);
        }
        if (v56 != 1)
        {
          do
          {
            *v68 = bswap32(*v62);
            v68[1] = bswap32(v62[1]);
            v68[2] = bswap32(v62[2]);
            v68[3] = bswap32(v62[3]);
            v62 += v58;
            v68 += v60;
            --v74;
          }
          while (v74);
        }
        goto LABEL_114;
      }
    }
  }
LABEL_115:
  v82 = v113;
  v113 = 0;
  if (v82)
    (*(void (**)(uint64_t))(*(_QWORD *)v82 + 8))(v82);
  v83 = (uint64_t)v114;
  v114 = 0;
  if (v83)
    (*(void (**)(uint64_t))(*(_QWORD *)v83 + 8))(v83);
  v30 = v93;
  if (v93)
  {
    v84 = (unint64_t *)&v93->__shared_owners_;
    do
      v32 = __ldaxr(v84);
    while (__stlxr(v32 - 1, v84));
LABEL_122:
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
LABEL_124:
  nullsub_4(&v91);
  v47 = v104;
  if (v104)
  {
LABEL_125:
    v85 = (unint64_t *)&v47->__shared_owners_;
    do
      v86 = __ldaxr(v85);
    while (__stlxr(v86 - 1, v85));
    if (!v86)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
LABEL_129:
  v87 = nullsub_4(&v102);
  v88 = v112;
  if (v112)
  {
    v89 = (unint64_t *)&v112->__shared_owners_;
    do
      v90 = __ldaxr(v89);
    while (__stlxr(v90 - 1, v89));
    if (!v90)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v88->__on_zero_shared)(v88, v87);
      std::__shared_weak_count::__release_weak(v88);
    }
  }
}

void sub_23976013C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_23974126C((uint64_t)va);
  sub_23975F87C((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_2397601E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_2397601FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239760210(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239760224(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239760238(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_23976024C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_239760730(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239760450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2397604B4(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 4;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23976060C(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_2397605F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23976060C(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_239760718(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void *sub_239760730(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397608D0(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397608D0(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239760B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239760B6C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239760B80(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE5C90;
  result[1] = v3;
  return result;
}

uint64_t sub_239760BB4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE5C90;
  a2[1] = v2;
  return result;
}

void sub_239760BD0(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE5D10;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_239760D0C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_239760D78()
{
  return &unk_250AE5DF8;
}

void sub_239760D84(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239760DF0()
{
  return 40;
}

uint64_t sub_239760DF8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_239760E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_239760E1C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_239760EA0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 40)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239761170(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_239761124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_239761170(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397611E8();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397611E8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569318C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569318C8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_239741A0C();
    sub_2397613EC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397613EC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569318B0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569318B0, &dword_23940C000);
          __cxa_guard_release(&qword_2569318C8);
          return &stru_2569318B0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569318B0;
}

void sub_239761338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569318C8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569318C8);
  _Unwind_Resume(a1);
}

void sub_2397613EC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239761480(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_2397614BC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397615C4(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397615A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397615C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;
  uint64_t v19;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v19, v3, 2);
  v9 = *(_QWORD *)(v19 + 16);
  *((_OWORD *)a1 + 1) = *(_OWORD *)v19;
  a1[4] = v9;
  v19 = 0;
  MEMORY[0x23B83E31C]();
  v10 = *a1;
  v11 = (std::__shared_weak_count *)a1[1];
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 104))(v10);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *((_WORD *)a1 + 20) = v17 & 0xFF00 | v16;
  return a1;
}

void sub_239761714(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239761728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 2, a1 + 64, 2, a1 + 72, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 80);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 2;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397617DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397617FC(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239761824(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239761860()
{
  return 3;
}

uint64_t sub_239761868(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_239761870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 2, a1 + 64, 2, a1 + 72, 2);
}

uint64_t sub_23976188C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_239761908@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_239761A70(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE5FF0;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_23982657C((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[36] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_2398102D0(result);
    return MEMORY[0x23B83E31C](v12, 0x1091C406A8758A4);
  }
  return result;
}

void sub_239761A1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239761B58((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239761A30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239761B58((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239761A54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239761B58((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239761A70@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250AE5F10;
  sub_23981EA30(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE5F58;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  return sub_2398102D0(v5);
}

void sub_239761B14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398102D0(va);
  _Unwind_Resume(a1);
}

void sub_239761B44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398102D0(va);
  _Unwind_Resume(a1);
}

uint64_t *sub_239761B58(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_2398102D0();
    MEMORY[0x23B83E31C](v3, 0x1091C406A8758A4);
  }
  return a1;
}

void sub_239761BA0()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239761BB4()
{
  return 3;
}

__int128 *sub_239761BC0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569318E8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569318E8))
  {
    v2 = sub_239761C98();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569318D0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569318E0 = *((_QWORD *)v2 + 2);
      xmmword_2569318D0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569318D0, &dword_23940C000);
    __cxa_guard_release(&qword_2569318E8);
  }
  if (byte_2569318E7 >= 0)
    return &xmmword_2569318D0;
  else
    return (__int128 *)xmmword_2569318D0;
}

void sub_239761C80(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569318E8);
  _Unwind_Resume(a1);
}

__int128 *sub_239761C98()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931908);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931908))
    return &xmmword_2569318F0;
  v2 = sub_239761D74();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_2569318F0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931900 = v2->__r_.__value_.__r.__words[2];
    xmmword_2569318F0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569318F0, &dword_23940C000);
  __cxa_guard_release(&qword_256931908);
  return &xmmword_2569318F0;
}

void sub_239761D5C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931908);
  _Unwind_Resume(a1);
}

std::string *sub_239761D74()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931928);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931928))
    return &stru_256931910;
  sub_239762014((uint64_t)__p);
  sub_239761E64((uint64_t)__p, &stru_256931910);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931910, &dword_23940C000);
  __cxa_guard_release(&qword_256931928);
  return &stru_256931910;
}

void sub_239761E24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931928);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931928);
  _Unwind_Resume(a1);
}

void sub_239761E64(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256930F40);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256930F40))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray16f]", &xmmword_256930F28);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256930F28, &dword_23940C000);
    __cxa_guard_release(&qword_256930F40);
  }
  if (byte_256930F3F < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256930F28, *((unint64_t *)&xmmword_256930F28 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256930F28;
    v13 = unk_256930F38;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239761FCC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256930F40);
  _Unwind_Resume(a1);
}

void sub_239761FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239762014(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931948);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931948))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Gray16f>]", qword_256931930);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931930, &dword_23940C000);
    __cxa_guard_release(&qword_256931948);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931968);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931968))
  {
    v5 = sub_239423A18(qword_256931930, "<", 0);
    sub_239423914(qword_256931930, 0, v5, qword_256931950);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931950, &dword_23940C000);
    __cxa_guard_release(&qword_256931968);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931988);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931988))
  {
    sub_239A44118((std::string::size_type)qword_256931950, (std::string *)&xmmword_256931970);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931970, &dword_23940C000);
    __cxa_guard_release(&qword_256931988);
  }
  if (byte_256931987 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931970, *((unint64_t *)&xmmword_256931970 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931970;
    *(_QWORD *)(a1 + 16) = unk_256931980;
  }
}

void sub_2397621B0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931988);
  _Unwind_Resume(a1);
}

void sub_2397621C8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931968);
  _Unwind_Resume(a1);
}

void sub_2397621E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931948);
  _Unwind_Resume(a1);
}

void sub_2397621FC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239762220(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_2398102D0();
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239762254(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE3EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE3EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2397622C4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397623CC(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397623B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397623CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;
  uint64_t v19;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v19, v3, 3);
  v9 = *(_QWORD *)(v19 + 16);
  *((_OWORD *)a1 + 1) = *(_OWORD *)v19;
  a1[4] = v9;
  v19 = 0;
  MEMORY[0x23B83E31C]();
  v10 = *a1;
  v11 = (std::__shared_weak_count *)a1[1];
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 104))(v10);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *((_WORD *)a1 + 20) = v17 & 0xFF00 | v16;
  return a1;
}

void sub_23976251C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239762530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 2, a1 + 64, 2, a1 + 72, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 80);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 3;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397625E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_239762604(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_23976270C(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2397626F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_23976270C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;
  uint64_t v19;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v19, v3, 4);
  v9 = *(_QWORD *)(v19 + 16);
  *((_OWORD *)a1 + 1) = *(_OWORD *)v19;
  a1[4] = v9;
  v19 = 0;
  MEMORY[0x23B83E31C]();
  v10 = *a1;
  v11 = (std::__shared_weak_count *)a1[1];
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 104))(v10);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *((_WORD *)a1 + 20) = v17 & 0xFF00 | v16;
  return a1;
}

void sub_23976285C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_239762870(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239762898(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397628D4()
{
  return 22;
}

uint64_t sub_2397628DC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2397628E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_239762900(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_23976297C@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_239762AE4(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6230;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239827880((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239817774(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_239762A90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239762BE4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239762AA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239762BE4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239762AC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239762BE4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_239762AE4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE6150;
  sub_2398226C8(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6198;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239817774((uint64_t)v5);
}

void sub_239762BA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239817774((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239762BD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239817774((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_239762BE4(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_239817774(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

void sub_239762C2C()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239762C40()
{
  return 22;
}

__int128 *sub_239762C4C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569319A8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569319A8))
  {
    v2 = sub_239762D24();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931990, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569319A0 = *((_QWORD *)v2 + 2);
      xmmword_256931990 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931990, &dword_23940C000);
    __cxa_guard_release(&qword_2569319A8);
  }
  if (byte_2569319A7 >= 0)
    return &xmmword_256931990;
  else
    return (__int128 *)xmmword_256931990;
}

void sub_239762D0C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569319A8);
  _Unwind_Resume(a1);
}

__int128 *sub_239762D24()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569319C8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569319C8))
    return &xmmword_2569319B0;
  v2 = sub_239762E00();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_2569319B0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569319C0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2569319B0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569319B0, &dword_23940C000);
  __cxa_guard_release(&qword_2569319C8);
  return &xmmword_2569319B0;
}

void sub_239762DE8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569319C8);
  _Unwind_Resume(a1);
}

std::string *sub_239762E00()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569319E8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569319E8))
    return &stru_2569319D0;
  sub_2397630A0((uint64_t)__p);
  sub_239762EF0((uint64_t)__p, &stru_2569319D0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569319D0, &dword_23940C000);
  __cxa_guard_release(&qword_2569319E8);
  return &stru_2569319D0;
}

void sub_239762EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2569319E8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2569319E8);
  _Unwind_Resume(a1);
}

void sub_239762EF0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_2569314A0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569314A0))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb16u]", &xmmword_256931488);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931488, &dword_23940C000);
    __cxa_guard_release(&qword_2569314A0);
  }
  if (byte_25693149F < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256931488, *((unint64_t *)&xmmword_256931488 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256931488;
    v13 = unk_256931498;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239763058(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569314A0);
  _Unwind_Resume(a1);
}

void sub_239763074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2397630A0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931A08);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931A08))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgb16u>]", qword_2569319F0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569319F0, &dword_23940C000);
    __cxa_guard_release(&qword_256931A08);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931A28);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931A28))
  {
    v5 = sub_239423A18(qword_2569319F0, "<", 0);
    sub_239423914(qword_2569319F0, 0, v5, qword_256931A10);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931A10, &dword_23940C000);
    __cxa_guard_release(&qword_256931A28);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931A48);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931A48))
  {
    sub_239A44118((std::string::size_type)qword_256931A10, (std::string *)&xmmword_256931A30);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931A30, &dword_23940C000);
    __cxa_guard_release(&qword_256931A48);
  }
  if (byte_256931A47 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931A30, *((unint64_t *)&xmmword_256931A30 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931A30;
    *(_QWORD *)(a1 + 16) = unk_256931A40;
  }
}

void sub_23976323C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931A48);
  _Unwind_Resume(a1);
}

void sub_239763254(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931A28);
  _Unwind_Resume(a1);
}

void sub_23976326C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931A08);
  _Unwind_Resume(a1);
}

void sub_239763288(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397632AC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_239817774(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_2397632E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE22EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_239763350(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239763458(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_23976343C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239763458(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 22);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397635A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397635BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 22;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_239763670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_239763690(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239763798(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_23976377C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239763798(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 23);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397638E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397638FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 23;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397639B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2397639D0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239763AD8(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239763ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239763AD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 24);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239763C28(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_239763C3C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239763D44(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239763D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239763D44(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 25);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239763E94(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_239763EA8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239763FB0(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239763F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239763FB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 29);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239764100(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_239764114(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23976413C(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239764178()
{
  return 30;
}

uint64_t sub_239764180(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_239764188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_2397641A4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_239764220@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_239764388(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE64B8;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239828148((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_23981A584(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_239764334(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239764488((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239764348(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239764488((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976436C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239764488((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_239764388@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE63D8;
  sub_239824154(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6420;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981A584((uint64_t)v5);
}

void sub_239764444(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981A584((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239764474(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981A584((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_239764488(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_23981A584(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

void sub_2397644D0()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397644E4()
{
  return 30;
}

__int128 *sub_2397644F0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931A68);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931A68))
  {
    v2 = sub_2397645C8();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931A50, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256931A60 = *((_QWORD *)v2 + 2);
      xmmword_256931A50 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931A50, &dword_23940C000);
    __cxa_guard_release(&qword_256931A68);
  }
  if (byte_256931A67 >= 0)
    return &xmmword_256931A50;
  else
    return (__int128 *)xmmword_256931A50;
}

void sub_2397645B0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931A68);
  _Unwind_Resume(a1);
}

__int128 *sub_2397645C8()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931A88);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931A88))
    return &xmmword_256931A70;
  v2 = sub_2397646A4();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931A70, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931A80 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931A70 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931A70, &dword_23940C000);
  __cxa_guard_release(&qword_256931A88);
  return &xmmword_256931A70;
}

void sub_23976468C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931A88);
  _Unwind_Resume(a1);
}

std::string *sub_2397646A4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931AA8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931AA8))
    return &stru_256931A90;
  sub_239764944((uint64_t)__p);
  sub_239764794((uint64_t)__p, &stru_256931A90);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931A90, &dword_23940C000);
  __cxa_guard_release(&qword_256931AA8);
  return &stru_256931A90;
}

void sub_239764754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931AA8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931AA8);
  _Unwind_Resume(a1);
}

void sub_239764794(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_2569314E0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569314E0))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba16u]", &xmmword_2569314C8);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569314C8, &dword_23940C000);
    __cxa_guard_release(&qword_2569314E0);
  }
  if (byte_2569314DF < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_2569314C8, *((unint64_t *)&xmmword_2569314C8 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_2569314C8;
    v13 = unk_2569314D8;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_2397648FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569314E0);
  _Unwind_Resume(a1);
}

void sub_239764918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239764944(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931AC8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931AC8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Rgba16u>]", qword_256931AB0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931AB0, &dword_23940C000);
    __cxa_guard_release(&qword_256931AC8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931AE8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931AE8))
  {
    v5 = sub_239423A18(qword_256931AB0, "<", 0);
    sub_239423914(qword_256931AB0, 0, v5, qword_256931AD0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931AD0, &dword_23940C000);
    __cxa_guard_release(&qword_256931AE8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931B08);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931B08))
  {
    sub_239A44118((std::string::size_type)qword_256931AD0, (std::string *)&xmmword_256931AF0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931AF0, &dword_23940C000);
    __cxa_guard_release(&qword_256931B08);
  }
  if (byte_256931B07 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931AF0, *((unint64_t *)&xmmword_256931AF0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931AF0;
    *(_QWORD *)(a1 + 16) = unk_256931B00;
  }
}

void sub_239764AE0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931B08);
  _Unwind_Resume(a1);
}

void sub_239764AF8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931AE8);
  _Unwind_Resume(a1);
}

void sub_239764B10(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931AC8);
  _Unwind_Resume(a1);
}

void sub_239764B2C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239764B50(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_23981A584(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239764B84(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE30EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_239764BF4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239764CFC(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239764CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239764CFC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 30);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239764E4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239764E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 30;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_239764F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_239764F34(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_23976503C(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239765020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_23976503C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 31);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_23976518C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_2397651A0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2397652A8(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_23976528C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397652A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 32);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397653F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_23976540C(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239765434(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239765470()
{
  return 33;
}

uint64_t sub_239765478(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_239765480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_23976549C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_239765518@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_239765680(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6710;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_23982837C((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_23981B5C4(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_23976562C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239765780((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239765640(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239765780((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239765664(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239765780((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_239765680@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE6630;
  sub_239824A48(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6678;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981B5C4((uint64_t)v5);
}

void sub_23976573C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981B5C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23976576C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981B5C4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_239765780(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_23981B5C4(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

void sub_2397657C8()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397657DC()
{
  return 33;
}

__int128 *sub_2397657E8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931B28);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931B28))
  {
    v2 = sub_2397658C0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931B10, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256931B20 = *((_QWORD *)v2 + 2);
      xmmword_256931B10 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931B10, &dword_23940C000);
    __cxa_guard_release(&qword_256931B28);
  }
  if (byte_256931B27 >= 0)
    return &xmmword_256931B10;
  else
    return (__int128 *)xmmword_256931B10;
}

void sub_2397658A8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931B28);
  _Unwind_Resume(a1);
}

__int128 *sub_2397658C0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931B48);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931B48))
    return &xmmword_256931B30;
  v2 = sub_23976599C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931B30, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931B40 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931B30 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931B30, &dword_23940C000);
  __cxa_guard_release(&qword_256931B48);
  return &xmmword_256931B30;
}

void sub_239765984(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931B48);
  _Unwind_Resume(a1);
}

std::string *sub_23976599C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931B68);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931B68))
    return &stru_256931B50;
  sub_239765C3C((uint64_t)__p);
  sub_239765A8C((uint64_t)__p, &stru_256931B50);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931B50, &dword_23940C000);
  __cxa_guard_release(&qword_256931B68);
  return &stru_256931B50;
}

void sub_239765A4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931B68);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931B68);
  _Unwind_Resume(a1);
}

void sub_239765A8C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256931400);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931400))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr8u]", &xmmword_2569313E8);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569313E8, &dword_23940C000);
    __cxa_guard_release(&qword_256931400);
  }
  if (byte_2569313FF < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_2569313E8, *((unint64_t *)&xmmword_2569313E8 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_2569313E8;
    v13 = unk_2569313F8;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239765BF4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931400);
  _Unwind_Resume(a1);
}

void sub_239765C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239765C3C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931B88);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931B88))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Abgr8u>]", qword_256931B70);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931B70, &dword_23940C000);
    __cxa_guard_release(&qword_256931B88);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931BA8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931BA8))
  {
    v5 = sub_239423A18(qword_256931B70, "<", 0);
    sub_239423914(qword_256931B70, 0, v5, qword_256931B90);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931B90, &dword_23940C000);
    __cxa_guard_release(&qword_256931BA8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931BC8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931BC8))
  {
    sub_239A44118((std::string::size_type)qword_256931B90, (std::string *)&xmmword_256931BB0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931BB0, &dword_23940C000);
    __cxa_guard_release(&qword_256931BC8);
  }
  if (byte_256931BC7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931BB0, *((unint64_t *)&xmmword_256931BB0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931BB0;
    *(_QWORD *)(a1 + 16) = unk_256931BC0;
  }
}

void sub_239765DD8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931BC8);
  _Unwind_Resume(a1);
}

void sub_239765DF0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931BA8);
  _Unwind_Resume(a1);
}

void sub_239765E08(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931B88);
  _Unwind_Resume(a1);
}

void sub_239765E24(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239765E48(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_23981B5C4(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239765E7C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE33EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_239765EEC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239765FF4(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239765FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239765FF4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 33);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239766144(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239766158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826490(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 33;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_23976620C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_23976622C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239766334(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239766318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239766334(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 37);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239766484(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_239766498(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397664C0(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397664FC()
{
  return 38;
}

uint64_t sub_239766504(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_23976650C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_239766528(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_2397665A4@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_23976670C(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6950;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239828728((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_23981D394(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2397666B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23976680C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397666CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23976680C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397666F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23976680C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_23976670C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE6870;
  sub_239825A54(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE68B8;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981D394((uint64_t)v5);
}

void sub_2397667C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981D394((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397667F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981D394((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_23976680C(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_23981D394(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

void sub_239766854()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239766868()
{
  return 38;
}

__int128 *sub_239766874()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931BE8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931BE8))
  {
    v2 = sub_23976694C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931BD0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256931BE0 = *((_QWORD *)v2 + 2);
      xmmword_256931BD0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931BD0, &dword_23940C000);
    __cxa_guard_release(&qword_256931BE8);
  }
  if (byte_256931BE7 >= 0)
    return &xmmword_256931BD0;
  else
    return (__int128 *)xmmword_256931BD0;
}

void sub_239766934(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931BE8);
  _Unwind_Resume(a1);
}

__int128 *sub_23976694C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931C08);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931C08))
    return &xmmword_256931BF0;
  v2 = sub_239766A28();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931BF0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931C00 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931BF0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931BF0, &dword_23940C000);
  __cxa_guard_release(&qword_256931C08);
  return &xmmword_256931BF0;
}

void sub_239766A10(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931C08);
  _Unwind_Resume(a1);
}

std::string *sub_239766A28()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931C28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931C28))
    return &stru_256931C10;
  sub_239766CC8((uint64_t)__p);
  sub_239766B18((uint64_t)__p, &stru_256931C10);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931C10, &dword_23940C000);
  __cxa_guard_release(&qword_256931C28);
  return &stru_256931C10;
}

void sub_239766AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931C28);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931C28);
  _Unwind_Resume(a1);
}

void sub_239766B18(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256931668);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931668))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb16u]", &xmmword_256931650);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931650, &dword_23940C000);
    __cxa_guard_release(&qword_256931668);
  }
  if (byte_256931667 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256931650, *((unint64_t *)&xmmword_256931650 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256931650;
    v13 = unk_256931660;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239766C80(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931668);
  _Unwind_Resume(a1);
}

void sub_239766C9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239766CC8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931C48);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931C48))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb16u>]", qword_256931C30);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931C30, &dword_23940C000);
    __cxa_guard_release(&qword_256931C48);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931C68);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931C68))
  {
    v5 = sub_239423A18(qword_256931C30, "<", 0);
    sub_239423914(qword_256931C30, 0, v5, qword_256931C50);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931C50, &dword_23940C000);
    __cxa_guard_release(&qword_256931C68);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931C88);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931C88))
  {
    sub_239A44118((std::string::size_type)qword_256931C50, (std::string *)&xmmword_256931C70);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931C70, &dword_23940C000);
    __cxa_guard_release(&qword_256931C88);
  }
  if (byte_256931C87 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931C70, *((unint64_t *)&xmmword_256931C70 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931C70;
    *(_QWORD *)(a1 + 16) = unk_256931C80;
  }
}

void sub_239766E64(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931C88);
  _Unwind_Resume(a1);
}

void sub_239766E7C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931C68);
  _Unwind_Resume(a1);
}

void sub_239766E94(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931C48);
  _Unwind_Resume(a1);
}

void sub_239766EB0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239766ED4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_23981D394(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239766F08(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE38EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE38EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE38EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE38EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_239766F78(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239767080(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239767064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239767080(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 38);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_2397671D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397671E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 38;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_239767298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397672B8(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2397672E0(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23976731C()
{
  return 39;
}

uint64_t sub_239767324(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_23976732C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

uint64_t sub_239767348(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_2397673C4@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_23976752C(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6B78;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_2398287E4((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_23981D970(result);
    return MEMORY[0x23B83E31C](v12, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_2397674D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23976762C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397674EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23976762C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239767510(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23976762C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23976752C@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE6A98;
  sub_239825D20(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6AE0;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981D970(v5);
}

void sub_2397675E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981D970(va);
  _Unwind_Resume(a1);
}

void sub_239767618(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981D970(va);
  _Unwind_Resume(a1);
}

uint64_t *sub_23976762C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_23981D970();
    MEMORY[0x23B83E31C](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_239767674()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239767688()
{
  return 39;
}

__int128 *sub_239767694()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931CA8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931CA8))
  {
    v2 = sub_23976776C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931C90, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256931CA0 = *((_QWORD *)v2 + 2);
      xmmword_256931C90 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931C90, &dword_23940C000);
    __cxa_guard_release(&qword_256931CA8);
  }
  if (byte_256931CA7 >= 0)
    return &xmmword_256931C90;
  else
    return (__int128 *)xmmword_256931C90;
}

void sub_239767754(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931CA8);
  _Unwind_Resume(a1);
}

__int128 *sub_23976776C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931CC8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931CC8))
    return &xmmword_256931CB0;
  v2 = sub_239767848();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931CB0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931CC0 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931CB0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931CB0, &dword_23940C000);
  __cxa_guard_release(&qword_256931CC8);
  return &xmmword_256931CB0;
}

void sub_239767830(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931CC8);
  _Unwind_Resume(a1);
}

std::string *sub_239767848()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931CE8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931CE8))
    return &stru_256931CD0;
  sub_239767AE8((uint64_t)__p);
  sub_239767938((uint64_t)__p, &stru_256931CD0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931CD0, &dword_23940C000);
  __cxa_guard_release(&qword_256931CE8);
  return &stru_256931CD0;
}

void sub_2397678F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931CE8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931CE8);
  _Unwind_Resume(a1);
}

void sub_239767938(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_2569316A8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569316A8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb16f]", &xmmword_256931690);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931690, &dword_23940C000);
    __cxa_guard_release(&qword_2569316A8);
  }
  if (byte_2569316A7 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256931690, *((unint64_t *)&xmmword_256931690 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256931690;
    v13 = unk_2569316A0;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239767AA0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569316A8);
  _Unwind_Resume(a1);
}

void sub_239767ABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239767AE8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931D08);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931D08))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb16f>]", qword_256931CF0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931CF0, &dword_23940C000);
    __cxa_guard_release(&qword_256931D08);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931D28);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931D28))
  {
    v5 = sub_239423A18(qword_256931CF0, "<", 0);
    sub_239423914(qword_256931CF0, 0, v5, qword_256931D10);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931D10, &dword_23940C000);
    __cxa_guard_release(&qword_256931D28);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931D48);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931D48))
  {
    sub_239A44118((std::string::size_type)qword_256931D10, (std::string *)&xmmword_256931D30);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931D30, &dword_23940C000);
    __cxa_guard_release(&qword_256931D48);
  }
  if (byte_256931D47 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931D30, *((unint64_t *)&xmmword_256931D30 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931D30;
    *(_QWORD *)(a1 + 16) = unk_256931D40;
  }
}

void sub_239767C84(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931D48);
  _Unwind_Resume(a1);
}

void sub_239767C9C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931D28);
  _Unwind_Resume(a1);
}

void sub_239767CB4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931D08);
  _Unwind_Resume(a1);
}

void sub_239767CD0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239767CF4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_23981D970();
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239767D28(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE39EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_239767D98(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239767EA0(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239767E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239767EA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 39);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239767FF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239768004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 39;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397680B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2397680D8(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239768100(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23976813C()
{
  return 40;
}

uint64_t sub_239768144(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_23976814C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

uint64_t sub_239768168(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_2397681E4@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_23976834C(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6DA0;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_2398288A0((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_23981DE84(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2397682F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23976844C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976830C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23976844C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239768330(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23976844C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_23976834C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE6CC0;
  sub_2398260F4(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6D08;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981DE84((uint64_t)v5);
}

void sub_239768408(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981DE84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239768438(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981DE84((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_23976844C(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_23981DE84(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

void sub_239768494()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397684A8()
{
  return 40;
}

__int128 *sub_2397684B4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931D68);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931D68))
  {
    v2 = sub_23976858C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931D50, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256931D60 = *((_QWORD *)v2 + 2);
      xmmword_256931D50 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931D50, &dword_23940C000);
    __cxa_guard_release(&qword_256931D68);
  }
  if (byte_256931D67 >= 0)
    return &xmmword_256931D50;
  else
    return (__int128 *)xmmword_256931D50;
}

void sub_239768574(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931D68);
  _Unwind_Resume(a1);
}

__int128 *sub_23976858C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931D88);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931D88))
    return &xmmword_256931D70;
  v2 = sub_239768668();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931D70, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931D80 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931D70 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931D70, &dword_23940C000);
  __cxa_guard_release(&qword_256931D88);
  return &xmmword_256931D70;
}

void sub_239768650(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931D88);
  _Unwind_Resume(a1);
}

std::string *sub_239768668()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931DA8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931DA8))
    return &stru_256931D90;
  sub_239768908((uint64_t)__p);
  sub_239768758((uint64_t)__p, &stru_256931D90);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931D90, &dword_23940C000);
  __cxa_guard_release(&qword_256931DA8);
  return &stru_256931D90;
}

void sub_239768718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931DA8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931DA8);
  _Unwind_Resume(a1);
}

void sub_239768758(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_2569316E8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569316E8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb32f]", &xmmword_2569316D0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569316D0, &dword_23940C000);
    __cxa_guard_release(&qword_2569316E8);
  }
  if (byte_2569316E7 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_2569316D0, *((unint64_t *)&xmmword_2569316D0 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_2569316D0;
    v13 = unk_2569316E0;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_2397688C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569316E8);
  _Unwind_Resume(a1);
}

void sub_2397688DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239768908(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931DC8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931DC8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb32f>]", qword_256931DB0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931DB0, &dword_23940C000);
    __cxa_guard_release(&qword_256931DC8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931DE8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931DE8))
  {
    v5 = sub_239423A18(qword_256931DB0, "<", 0);
    sub_239423914(qword_256931DB0, 0, v5, qword_256931DD0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931DD0, &dword_23940C000);
    __cxa_guard_release(&qword_256931DE8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931E08);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931E08))
  {
    sub_239A44118((std::string::size_type)qword_256931DD0, (std::string *)&xmmword_256931DF0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931DF0, &dword_23940C000);
    __cxa_guard_release(&qword_256931E08);
  }
  if (byte_256931E07 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931DF0, *((unint64_t *)&xmmword_256931DF0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931DF0;
    *(_QWORD *)(a1 + 16) = unk_256931E00;
  }
}

void sub_239768AA4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931E08);
  _Unwind_Resume(a1);
}

void sub_239768ABC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931DE8);
  _Unwind_Resume(a1);
}

void sub_239768AD4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931DC8);
  _Unwind_Resume(a1);
}

void sub_239768AF0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239768B14(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_23981DE84(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239768B48(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE40EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_239768BB8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239768CC0(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239768CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239768CC0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 40);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239768E10(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239768E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826920(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 4);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 40;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_239768ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_239768EF8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 522, a3, a4);
}

void sub_239768F00(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 581, a3, a4);
}

void sub_239768F08(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 67, a3, a4);
}

void sub_239768F10(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 177, a3, a4);
}

std::__shared_weak_count_vtbl **sub_239768F18(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_239721108(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3F48;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_239768FF4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23976900C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

std::__shared_weak_count_vtbl **sub_239769024(std::__shared_weak_count_vtbl **a1, CFDataRef *a2)
{
  std::__shared_weak_count_vtbl *v3;

  v3 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(*a2);
  return sub_239768F18(a1, v3, 0);
}

uint64_t sub_239769054@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  std::__shared_weak_count *v4;
  CGDataProviderRef v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  CFDataRef v9;

  v5 = *(CGDataProviderRef *)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  if (!v5)
    sub_239EC2478();
  v9 = CGDataProviderCopyData(*(CGDataProviderRef *)a1);
  return sub_23962A438(a2, v9);
}

std::__shared_weak_count_vtbl **sub_2397690E0@<X0>(void *a1@<X0>, std::__shared_weak_count_vtbl **a2@<X8>)
{
  std::__shared_weak_count_vtbl *v3;
  CGDataProviderSequentialCallbacks v5;

  *(_OWORD *)&v5.version = xmmword_250AE6DE0;
  *(_OWORD *)&v5.skipForward = *(_OWORD *)off_250AE6DF0;
  v5.releaseInfo = 0;
  v3 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateSequential(a1, &v5);
  return sub_239768F18(a2, v3, 0);
}

uint64_t sub_239769134(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *exception;

  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) != 0)
    return 0;
  std::istream::tellg();
  std::istream::seekg();
  if (a3 < 0)
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &unk_250AF2150;
    __cxa_throw(exception, (struct type_info *)&unk_250AF2168, (void (*)(void *))std::exception::~exception);
  }
  std::istream::read();
  return a1[1];
}

uint64_t sub_23976920C(_QWORD *a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;

  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) != 0)
    return 0;
  std::istream::tellg();
  std::istream::seekg();
  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) == 0)
  {
    std::istream::tellg();
    return v5 - v6;
  }
  return a2;
}

void sub_2397692CC(_QWORD *a1)
{
  std::istream::seekg();
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), 0);
}

char *sub_239769304(unsigned int a1)
{
  return (char *)&unk_239EDAE03 + 256 * (unint64_t)a1;
}

void sub_239769318(int a1, VTPixelTransferSessionRef session)
{
  if (session)
  {
    VTPixelTransferSessionInvalidate(session);
    CFRelease(session);
  }
}

VTPixelTransferSessionRef *sub_239769348(VTPixelTransferSessionRef *a1)
{
  VTPixelTransferSessionRef pixelTransferSessionOut;

  pixelTransferSessionOut = 0;
  if (VTPixelTransferSessionCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], &pixelTransferSessionOut))
    sub_239EBEEB0();
  *a1 = pixelTransferSessionOut;
  return a1;
}

uint64_t sub_239769398(OpaqueVTPixelTransferSession **a1, uint64_t a2, uint64_t a3)
{
  OpaqueVTPixelTransferSession *v3;
  __CVBuffer *v5;
  __CVBuffer *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  if (!*a1)
    sub_239EC1064();
  v5 = (__CVBuffer *)sub_23979C580(a2);
  v6 = (__CVBuffer *)sub_23979C580(a3);
  v7 = VTPixelTransferSessionTransferImage(v3, v5, v6);
  if (v7 == -12905)
    return 0x100000000;
  v8 = v7;
  v9 = v7;
  if (v7)
  {
    if (v7 != -12218)
      sub_239EC2308();
    v8 = 0x100000000;
    v9 = 1;
  }
  return v9 | v8;
}

_QWORD *sub_23976943C@<X0>(_QWORD *result@<X0>, int a2@<W1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  BOOL v6;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  if (*a3)
    v6 = a3[1] == 0;
  else
    v6 = 1;
  if (v6)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, a3, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_239769654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239769670(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_23976968C(int a1, uint64_t a2)
{
  double result;
  double v3;
  _QWORD v4[3];
  uint64_t v5;
  __int128 v6;

  switch(a1)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_11;
      sub_23979C50C(a2, v4);
      sub_2397697CC((uint64_t)v4, &v5);
      v3 = *(double *)&v6;
      sub_23979B260(v4);
      goto LABEL_10;
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_11;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_11;
LABEL_7:
      sub_2397697CC(a2, &v5);
      result = *(double *)&v6;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_11:
        sub_23964B158();
      sub_2397699B8((uint64_t *)a2, v4);
      sub_2397697CC((uint64_t)v4, &v5);
      v3 = *(double *)&v6;
      sub_23979BCF4(v4);
LABEL_10:
      result = v3;
      break;
    default:
      return result;
  }
  return result;
}

void sub_2397697A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397697B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_2397697CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  size_t result;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_23979D0F0(a1, &v19);
  v7 = v19;
  v6 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  sub_23978E124(a1);
  v10 = sub_23979A918(a1);
  v12 = (char *)&v22;
  if ((int)v10 > 1717855599)
  {
    if ((int)v10 > 1751410031)
    {
      if ((_DWORD)v10 == 1751410032)
      {
        v13 = 6;
      }
      else
      {
        if ((_DWORD)v10 != 1751411059)
          goto LABEL_27;
        v13 = 4;
      }
    }
    else if ((_DWORD)v10 == 1717855600)
    {
      v13 = 7;
    }
    else
    {
      if ((_DWORD)v10 != 1717856627)
        goto LABEL_27;
      v13 = 5;
    }
  }
  else if ((int)v10 > 1278226535)
  {
    if ((_DWORD)v10 == 1278226536)
    {
      v13 = 2;
    }
    else
    {
      if ((_DWORD)v10 != 1647392359)
        goto LABEL_27;
      v13 = 1;
    }
  }
  else if ((_DWORD)v10 == 1278226488)
  {
    v13 = 0;
  }
  else
  {
    if ((_DWORD)v10 != 1278226534)
      goto LABEL_27;
    v13 = 3;
  }
  v12 = (char *)&v19 + 4 * v13;
LABEL_27:
  if (v12 - (char *)&v19 == 32)
    sub_239EC2778(v10, v11);
  result = sub_23979AAF8(a1, 1u, 0, 0, &v19);
  if (HIDWORD(v19))
    v16 = (_DWORD)v19 == 0;
  else
    v16 = 1;
  v17 = v19;
  v18 = v20;
  if (v16)
    v17 = 0;
  *a2 = v21;
  a2[1] = v17;
  a2[2] = v18;
  if (HIDWORD(v17) * HIDWORD(v18) == -1)
    sub_239EBFBC4(result, v15);
  return result;
}

void sub_2397699B8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_239769A5C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239769A74(uint64_t a1, _QWORD *a2, int a3, unsigned int *a4, char a5)
{
  int v6;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  _QWORD v14[3];
  _QWORD v15[3];
  void **v16[2];

  v6 = (int)a2;
  v13 = a5;
  *(_QWORD *)a1 = off_250AE6E18;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_23976943C(a2, a3, a4, a1 + 16);
  if (*a4)
    v9 = a4[1] == 0;
  else
    v9 = 1;
  if (v9)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)a4;
  }
  else
  {
    sub_23976968C(v6, v8);
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
  }
  if (!sub_23976A3C4(a1))
  {
    sub_23976A4E4(a1, v15);
    sub_23976A590(a1, v14);
    v16[0] = (void **)v14;
    v16[1] = (void **)&v13;
    sub_2394605F8(v16);
    sub_23979B610(v15);
  }
  return a1;
}

void sub_239769B48(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2;
  sub_239769C14(v3);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239769B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  va_list va;

  va_start(va, a6);
  sub_23979B610(va);
  sub_239769BAC(v6);
  _Unwind_Resume(a1);
}

void sub_239769B84(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239769B98(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239769BAC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239769BAC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE6E18;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239769C14(uint64_t a1)
{
  uint64_t v2;
  char v4;

  v2 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1);
  *(_DWORD *)(a1 + 24) = -1;
  return a1;
}

uint64_t sub_239769C6C(uint64_t a1, _QWORD *a2, int a3, unsigned int *a4, __int128 *a5)
{
  int v7;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;

  v7 = (int)a2;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE6E18;
  v9 = a1 + 16;
  sub_23976943C(a2, a3, a4, a1 + 16);
  if (*a4)
    v10 = a4[1] == 0;
  else
    v10 = 1;
  if (v10)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)a4;
  }
  else
  {
    sub_23976968C(v7, v9);
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
  }
  v14 = *a5;
  v15 = *((_QWORD *)a5 + 2);
  sub_239769D68(a1, (uint64_t)&v14);
  return a1;
}

void sub_239769D24(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239769D40(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239769BAC(v1);
  _Unwind_Resume(a1);
}

void sub_239769D54(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239769D68(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v8;
  int v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int i;
  int v17;
  _BYTE *v18;
  _BYTE *v19;
  _QWORD v20[2];
  unsigned int v21;
  unsigned int v22;
  _QWORD v23[3];
  _QWORD v24[2];

  result = sub_23976A3C4(a1);
  if ((result & 1) == 0)
  {
    sub_23976A4E4(a1, v23);
    sub_23976A590(a1, v20);
    v24[0] = a2;
    v24[1] = v20;
    v5 = *(unsigned int *)(a2 + 16);
    v6 = v21;
    if ((_DWORD)v5 == 1 && v21 == 1)
    {
      sub_23978E2A0(v24);
    }
    else
    {
      v8 = *(_DWORD *)(a2 + 8);
      if (v8)
      {
        v9 = *(_DWORD *)(a2 + 12);
        if (v9)
        {
          v10 = v8 - 1;
          v11 = *(_BYTE **)a2;
          v12 = (_BYTE *)v20[0];
          v13 = v9 - 1;
          if (v13)
          {
            v14 = v22;
            v15 = *(unsigned int *)(a2 + 20);
            if (v10)
            {
              for (i = 0; i != v13; ++i)
              {
                v17 = v10;
                v18 = v11;
                v19 = v12;
                do
                {
                  *v19 = *v18;
                  v18 += v5;
                  v19 += v6;
                  --v17;
                }
                while (v17);
                *v19 = *v18;
                v11 += v15;
                v12 += v14;
              }
            }
            else
            {
              do
              {
                *v12 = *v11;
                v11 += v15;
                v12 += v14;
                --v13;
              }
              while (v13);
            }
          }
          for (; v10; --v10)
          {
            *v12 = *v11;
            v11 += v5;
            v12 += v6;
          }
          *v12 = *v11;
        }
      }
    }
    return sub_23979B610(v23);
  }
  return result;
}

void sub_239769E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239769EB0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_QWORD *)a1 = off_250AE6E18;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = sub_239769FD0(a2);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 48))
  {
    if (v10)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v10 ^ (*(_DWORD *)(a1 + 52) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_239769FA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239769FB4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_239769FD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;

  v2 = sub_23979D0F0(a1, &v13);
  v5 = v13;
  v4 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  if (!v5)
    sub_239EC27A4(v2, v3);
  sub_23978E124(a1);
  v8 = sub_23979A918(a1);
  v10 = (char *)&v15;
  if ((int)v8 > 1717855599)
  {
    if ((int)v8 > 1751410031)
    {
      if ((_DWORD)v8 == 1751410032)
      {
        v11 = 6;
      }
      else
      {
        if ((_DWORD)v8 != 1751411059)
          goto LABEL_27;
        v11 = 4;
      }
    }
    else if ((_DWORD)v8 == 1717855600)
    {
      v11 = 7;
    }
    else
    {
      if ((_DWORD)v8 != 1717856627)
        goto LABEL_27;
      v11 = 5;
    }
  }
  else if ((int)v8 > 1278226535)
  {
    if ((_DWORD)v8 == 1278226536)
    {
      v11 = 2;
    }
    else
    {
      if ((_DWORD)v8 != 1647392359)
        goto LABEL_27;
      v11 = 1;
    }
  }
  else if ((_DWORD)v8 == 1278226488)
  {
    v11 = 0;
  }
  else
  {
    if ((_DWORD)v8 != 1278226534)
      goto LABEL_27;
    v11 = 3;
  }
  v10 = (char *)&v13 + 4 * v11;
LABEL_27:
  if (v10 - (char *)&v13 == 32)
    sub_239EC2778(v8, v9);
  return sub_23979AE34(a1, 1, 1, 0, 0);
}

_QWORD *sub_23976A180(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_23976A2D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

void sub_23976A2E8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v3 = *(_QWORD *)(a1 + 24);
      v2 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v3;
      a2[2] = v2;
      if (v2)
      {
        v4 = (unint64_t *)(v2 + 8);
        do
          v5 = __ldxr(v4);
        while (__stxr(v5 + 1, v4));
      }
      break;
    case 1:
      v11 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v11;
      a2[2] = v10;
      if (v10)
      {
        v12 = (unint64_t *)(v10 + 8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 1, v12));
      }
      break;
    case 2:
      v7 = *(_QWORD *)(a1 + 24);
      v6 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v7;
      a2[2] = v6;
      if (v6)
      {
        v8 = (unint64_t *)(v6 + 8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 1, v8));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), a2);
      break;
    default:
      sub_23964B158();
  }
}

BOOL sub_23976A3C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_23976A4D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976A4E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_2397699B8((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_23976A57C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23976A590@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;

  result = sub_23976A3C4(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v10;
        v23 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v18;
        v23 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v14;
        v23 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v21);
        break;
      default:
        sub_23964B158();
    }
    sub_2397697CC((uint64_t)&v21, a2);
    return (uint64_t)sub_23979BCF4(&v21);
  }
  return result;
}

void sub_23976A6FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976A710@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_2397699B8((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_23976A7BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976A7D0@<X0>(_QWORD *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int *v6;
  BOOL v7;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  v6 = (unsigned int *)(a3 + 24);
  if (*(_DWORD *)(a3 + 24))
    v7 = *(_DWORD *)(a3 + 28) == 0;
  else
    v7 = 1;
  if (v7)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, v6, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_23976A9E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976AA04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23976AA20@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD v7[3];
  _BYTE v8[8];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  switch((int)result)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_10;
      sub_23979C50C(a2, v7);
      sub_23976AB6C((uint64_t)v7, (uint64_t)v8);
      v4 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v4;
      *(_QWORD *)(a3 + 32) = v11;
      return sub_23979B260(v7);
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_10;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_10;
LABEL_7:
      result = sub_23976AB6C(a2, (uint64_t)v8);
      v5 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v5;
      *(_QWORD *)(a3 + 32) = v11;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_10:
        sub_23964B158();
      sub_23976ACC8((uint64_t *)a2, v7);
      sub_23976AB6C((uint64_t)v7, (uint64_t)v8);
      v6 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v6;
      *(_QWORD *)(a3 + 32) = v11;
      result = (uint64_t)sub_23979BCF4(v7);
      break;
    default:
      return result;
  }
  return result;
}

void sub_23976AB44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976AB58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_23976AB6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  size_t result;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  _BYTE v20[12];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v17);
  v7 = v17;
  v6 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  sub_23978E124(a1);
  sub_23978E378(a1);
  result = sub_23979AAF8(a1, 2u, 0, 0, &v17);
  if (HIDWORD(v17))
    v12 = (_DWORD)v17 == 0;
  else
    v12 = 1;
  v13 = v17;
  v14 = v18;
  if (v12)
    v13 = 0;
  *(_QWORD *)&v20[4] = v13;
  *(_DWORD *)v20 = 2;
  v15 = *(_QWORD *)v20;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v18;
  v16 = *(_QWORD *)v20;
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = v15;
  *(_DWORD *)(a2 + 16) = HIDWORD(v13);
  *(_QWORD *)(a2 + 20) = v16;
  *(_DWORD *)(a2 + 28) = HIDWORD(v14);
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v14;
  if (HIDWORD(v14) * HIDWORD(v13) == -1)
    sub_239EBFBC4(result, v11);
  return result;
}

void sub_23976ACBC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_23976ACC8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_23976AD6C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976AD84(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, char a5)
{
  uint64_t v8;
  _OWORD *v9;
  BOOL v10;
  __int128 v11;
  __int128 v12;
  char v14;

  v14 = a5;
  *(_QWORD *)a1 = off_250AE6EA8;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_23976A7D0(a2, a3, a4, a1 + 16);
  v9 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v10 = *(_DWORD *)(a4 + 28) == 0;
  else
    v10 = 1;
  if (v10)
  {
    v11 = *(_OWORD *)a4;
    v12 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v9 = v11;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    sub_23976AA20((uint64_t)a2, v8, (uint64_t)v9);
  }
  sub_23976AE6C(a1, &v14);
  return a1;
}

void sub_23976AE28(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976AE44(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23976AFCC(v1);
  _Unwind_Resume(a1);
}

void sub_23976AE58(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976AE6C(uint64_t a1, _BYTE *a2)
{
  uint64_t result;
  int v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  uint64_t v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int v13;
  _BYTE *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  _QWORD v21[3];
  _QWORD v22[2];

  result = sub_23976B600(a1);
  if ((result & 1) == 0)
  {
    sub_23976B720(a1, v21);
    sub_23976B7CC(a1, (uint64_t)&v14);
    v22[0] = &v14;
    v22[1] = a2;
    if (v18 == 1)
    {
      sub_23978E780(v22);
    }
    else if (v15 && v16 && v17)
    {
      v5 = v16 - 1;
      v6 = v19;
      v7 = v14;
      v8 = v17 - 1;
      if (v17 != 1)
      {
        v9 = v20;
        if (v16 == 1)
        {
          do
          {
            *v7 = *a2;
            v7[1] = *a2;
            v7 += v9;
            --v8;
          }
          while (v8);
        }
        else
        {
          v10 = 0;
          v11 = v14 + 1;
          do
          {
            v12 = v11;
            v13 = v5;
            do
            {
              *(v12 - 1) = *a2;
              *v12 = *a2;
              v12 += v6;
              --v13;
            }
            while (v13);
            *(v12 - 1) = *a2;
            *v12 = *a2;
            v7 += v9;
            ++v10;
            v11 += v9;
          }
          while (v10 != v8);
        }
      }
      for (; v5; --v5)
      {
        *v7 = *a2;
        v7[1] = *a2;
        v7 += v6;
      }
      *v7 = *a2;
      v7[1] = *a2;
    }
    return sub_23979B610(v21);
  }
  return result;
}

void sub_23976AFB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23976AFCC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE6EA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23976B034(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  _OWORD *v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[3];
  _BYTE v17[48];
  _QWORD v18[3];
  _QWORD v19[2];

  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE6EA8;
  v9 = a1 + 16;
  sub_23976A7D0(a2, a3, a4, a1 + 16);
  v10 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v11 = *(_DWORD *)(a4 + 28) == 0;
  else
    v11 = 1;
  if (v11)
  {
    v12 = *(_OWORD *)a4;
    v13 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v10 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  else
  {
    sub_23976AA20((uint64_t)a2, v9, (uint64_t)v10);
  }
  v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  v16[2] = a5[2];
  if (!sub_23976B600(a1))
  {
    sub_23976B720(a1, v18);
    sub_23976B7CC(a1, (uint64_t)v17);
    v19[0] = v16;
    v19[1] = v17;
    sub_23978E92C((unsigned int *)v19);
    sub_23979B610(v18);
  }
  return a1;
}

void sub_23976B124(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976B140(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23979B610(v2 - 88);
  sub_23976AFCC(v1);
  _Unwind_Resume(a1);
}

void sub_23976B15C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976B170(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23976AFCC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976B184(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)a1 = off_250AE6EA8;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  sub_23976B2A4(a2, a1 + 48);
  v9 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 72))
  {
    if (v9)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v9 ^ (*(_DWORD *)(a1 + 76) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_23976B274(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976B288(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_23976B2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t result;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v11);
  v6 = v11;
  if (*((_QWORD *)&v11 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  if (!(_QWORD)v6)
    sub_239EC27A4(v4, v5);
  sub_23978E124(a1);
  sub_23978E378(a1);
  result = sub_23979AE34(a1, 1, 2, 0, 0);
  *(_QWORD *)a2 = __PAIR64__(result, 2);
  *(_DWORD *)(a2 + 8) = HIDWORD(result);
  LODWORD(v11) = 1;
  *(_QWORD *)((char *)&v11 + 4) = v10;
  *(_QWORD *)(a2 + 12) = v11;
  *(_DWORD *)(a2 + 20) = HIDWORD(v10);
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v10;
  return result;
}

void sub_23976B3B0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976B3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_23976B510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

void sub_23976B524(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v3 = *(_QWORD *)(a1 + 24);
      v2 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v3;
      a2[2] = v2;
      if (v2)
      {
        v4 = (unint64_t *)(v2 + 8);
        do
          v5 = __ldxr(v4);
        while (__stxr(v5 + 1, v4));
      }
      break;
    case 1:
      v11 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v11;
      a2[2] = v10;
      if (v10)
      {
        v12 = (unint64_t *)(v10 + 8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 1, v12));
      }
      break;
    case 2:
      v7 = *(_QWORD *)(a1 + 24);
      v6 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v7;
      a2[2] = v6;
      if (v6)
      {
        v8 = (unint64_t *)(v6 + 8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 1, v8));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), a2);
      break;
    default:
      sub_23964B158();
  }
}

BOOL sub_23976B600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_23976B70C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976B720@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_23976ACC8((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_23976B7B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976B7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23976B600(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 2;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 2 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x1FFFFFFFFLL | ((unint64_t)(v8 >> 1) << 33);
    v10 = __PAIR64__(DWORD1(v24), 2);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_23976AB6C((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_23976B99C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976B9B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_23976ACC8((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_23976BA5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976BA70@<X0>(_QWORD *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int *v6;
  BOOL v7;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  v6 = (unsigned int *)(a3 + 24);
  if (*(_DWORD *)(a3 + 24))
    v7 = *(_DWORD *)(a3 + 28) == 0;
  else
    v7 = 1;
  if (v7)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, v6, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_23976BC88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976BCA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23976BCC0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD v7[3];
  _BYTE v8[8];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  switch((int)result)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_10;
      sub_23979C50C(a2, v7);
      sub_23976BE0C((uint64_t)v7, (uint64_t)v8);
      v4 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v4;
      *(_QWORD *)(a3 + 32) = v11;
      return sub_23979B260(v7);
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_10;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_10;
LABEL_7:
      result = sub_23976BE0C(a2, (uint64_t)v8);
      v5 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v5;
      *(_QWORD *)(a3 + 32) = v11;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_10:
        sub_23964B158();
      sub_23976BF68((uint64_t *)a2, v7);
      sub_23976BE0C((uint64_t)v7, (uint64_t)v8);
      v6 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v6;
      *(_QWORD *)(a3 + 32) = v11;
      result = (uint64_t)sub_23979BCF4(v7);
      break;
    default:
      return result;
  }
  return result;
}

void sub_23976BDE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976BDF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_23976BE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  size_t result;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  _BYTE v20[12];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v17);
  v7 = v17;
  v6 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  sub_23978E124(a1);
  sub_23978EE58(a1);
  result = sub_23979AAF8(a1, 3u, 0, 0, &v17);
  if (HIDWORD(v17))
    v12 = (_DWORD)v17 == 0;
  else
    v12 = 1;
  v13 = v17;
  v14 = v18;
  if (v12)
    v13 = 0;
  *(_QWORD *)&v20[4] = v13;
  *(_DWORD *)v20 = 3;
  v15 = *(_QWORD *)v20;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v18;
  v16 = *(_QWORD *)v20;
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = v15;
  *(_DWORD *)(a2 + 16) = HIDWORD(v13);
  *(_QWORD *)(a2 + 20) = v16;
  *(_DWORD *)(a2 + 28) = HIDWORD(v14);
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v14;
  if (HIDWORD(v14) * HIDWORD(v13) == -1)
    sub_239EBFBC4(result, v11);
  return result;
}

void sub_23976BF5C(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_23976BF68(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_23976C00C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976C024(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, char a5)
{
  uint64_t v8;
  _OWORD *v9;
  BOOL v10;
  __int128 v11;
  __int128 v12;
  char v14;

  v14 = a5;
  *(_QWORD *)a1 = off_250AE6F38;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_23976BA70(a2, a3, a4, a1 + 16);
  v9 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v10 = *(_DWORD *)(a4 + 28) == 0;
  else
    v10 = 1;
  if (v10)
  {
    v11 = *(_OWORD *)a4;
    v12 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v9 = v11;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    sub_23976BCC0((uint64_t)a2, v8, (uint64_t)v9);
  }
  sub_23976C10C(a1, &v14);
  return a1;
}

void sub_23976C0C8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976C0E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23976C294(v1);
  _Unwind_Resume(a1);
}

void sub_23976C0F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976C10C(uint64_t a1, _BYTE *a2)
{
  uint64_t result;
  int v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  uint64_t v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int v13;
  _BYTE *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  _QWORD v21[3];
  _QWORD v22[2];

  result = sub_23976C7EC(a1);
  if ((result & 1) == 0)
  {
    sub_23976C90C(a1, v21);
    sub_23976C9B8(a1, (uint64_t)&v14);
    v22[0] = &v14;
    v22[1] = a2;
    if (v18 == 1)
    {
      sub_23978E780(v22);
    }
    else if (v15 && v16 && v17)
    {
      v5 = v16 - 1;
      v6 = v19;
      v7 = v14;
      v8 = v17 - 1;
      if (v17 != 1)
      {
        v9 = v20;
        if (v16 == 1)
        {
          do
          {
            *v7 = *a2;
            v7[1] = *a2;
            v7[2] = *a2;
            v7 += v9;
            --v8;
          }
          while (v8);
        }
        else
        {
          v10 = 0;
          v11 = v14 + 2;
          do
          {
            v12 = v11;
            v13 = v5;
            do
            {
              *(v12 - 2) = *a2;
              *(v12 - 1) = *a2;
              *v12 = *a2;
              v12 += v6;
              --v13;
            }
            while (v13);
            *(v12 - 2) = *a2;
            *(v12 - 1) = *a2;
            *v12 = *a2;
            v7 += v9;
            ++v10;
            v11 += v9;
          }
          while (v10 != v8);
        }
      }
      for (; v5; --v5)
      {
        *v7 = *a2;
        v7[1] = *a2;
        v7[2] = *a2;
        v7 += v6;
      }
      *v7 = *a2;
      v7[1] = *a2;
      v7[2] = *a2;
    }
    return sub_23979B610(v21);
  }
  return result;
}

void sub_23976C280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23976C294(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE6F38;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23976C2FC(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  _OWORD *v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[3];
  _BYTE v17[48];
  _QWORD v18[3];
  _QWORD v19[2];

  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE6F38;
  v9 = a1 + 16;
  sub_23976BA70(a2, a3, a4, a1 + 16);
  v10 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v11 = *(_DWORD *)(a4 + 28) == 0;
  else
    v11 = 1;
  if (v11)
  {
    v12 = *(_OWORD *)a4;
    v13 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v10 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  else
  {
    sub_23976BCC0((uint64_t)a2, v9, (uint64_t)v10);
  }
  v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  v16[2] = a5[2];
  if (!sub_23976C7EC(a1))
  {
    sub_23976C90C(a1, v18);
    sub_23976C9B8(a1, (uint64_t)v17);
    v19[0] = v16;
    v19[1] = v17;
    sub_23978F020((uint64_t)v19);
    sub_23979B610(v18);
  }
  return a1;
}

void sub_23976C3EC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976C408(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23979B610(v2 - 88);
  sub_23976C294(v1);
  _Unwind_Resume(a1);
}

void sub_23976C424(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976C438(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23976C294(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976C44C(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)a1 = off_250AE6F38;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  sub_23976C56C(a2, a1 + 48);
  v9 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 72))
  {
    if (v9)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v9 ^ (*(_DWORD *)(a1 + 76) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_23976C53C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976C550(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_23976C56C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t result;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v11);
  v6 = v11;
  if (*((_QWORD *)&v11 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  if (!(_QWORD)v6)
    sub_239EC27A4(v4, v5);
  sub_23978E124(a1);
  sub_23978EE58(a1);
  result = sub_23979AE34(a1, 1, 3, 0, 0);
  *(_QWORD *)a2 = __PAIR64__(result, 3);
  *(_DWORD *)(a2 + 8) = HIDWORD(result);
  LODWORD(v11) = 1;
  *(_QWORD *)((char *)&v11 + 4) = v10;
  *(_QWORD *)(a2 + 12) = v11;
  *(_DWORD *)(a2 + 20) = HIDWORD(v10);
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v10;
  return result;
}

void sub_23976C678(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976C684(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_23976C7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_23976C7EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_23976C8F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976C90C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_23976BF68((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_23976C9A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976C9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t (**v17)();
  uint64_t v18;
  uint64_t v19;

  if (sub_23976C7EC(a1))
    return (_QWORD *)sub_23978F1FC(a2, 0, (_DWORD *)(a1 + 72));
  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v6;
      v19 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 1:
      v14 = *(_QWORD *)(a1 + 24);
      v13 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v14;
      v19 = v13;
      if (v13)
      {
        v15 = (unint64_t *)(v13 + 8);
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }
      break;
    case 2:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v10;
      v19 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v17);
      break;
    default:
      sub_23964B158();
  }
  sub_23976BE0C((uint64_t)&v17, a2);
  return sub_23979BCF4(&v17);
}

void sub_23976CAE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976CAFC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_23976BF68((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_23976CBA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976CBBC@<X0>(_QWORD *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int *v6;
  BOOL v7;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  v6 = (unsigned int *)(a3 + 24);
  if (*(_DWORD *)(a3 + 24))
    v7 = *(_DWORD *)(a3 + 28) == 0;
  else
    v7 = 1;
  if (v7)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, v6, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_23976CDD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976CDF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23976CE0C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD v7[3];
  _BYTE v8[8];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  switch((int)result)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_10;
      sub_23979C50C(a2, v7);
      sub_23976CF58((uint64_t)v7, (uint64_t)v8);
      v4 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v4;
      *(_QWORD *)(a3 + 32) = v11;
      return sub_23979B260(v7);
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_10;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_10;
LABEL_7:
      result = sub_23976CF58(a2, (uint64_t)v8);
      v5 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v5;
      *(_QWORD *)(a3 + 32) = v11;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_10:
        sub_23964B158();
      sub_23976D0B4((uint64_t *)a2, v7);
      sub_23976CF58((uint64_t)v7, (uint64_t)v8);
      v6 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v6;
      *(_QWORD *)(a3 + 32) = v11;
      result = (uint64_t)sub_23979BCF4(v7);
      break;
    default:
      return result;
  }
  return result;
}

void sub_23976CF30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976CF44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_23976CF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  size_t result;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  _BYTE v20[12];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v17);
  v7 = v17;
  v6 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  sub_23978E124(a1);
  sub_23978F3B4(a1);
  result = sub_23979AAF8(a1, 4u, 0, 0, &v17);
  if (HIDWORD(v17))
    v12 = (_DWORD)v17 == 0;
  else
    v12 = 1;
  v13 = v17;
  v14 = v18;
  if (v12)
    v13 = 0;
  *(_QWORD *)&v20[4] = v13;
  *(_DWORD *)v20 = 4;
  v15 = *(_QWORD *)v20;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v18;
  v16 = *(_QWORD *)v20;
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = v15;
  *(_DWORD *)(a2 + 16) = HIDWORD(v13);
  *(_QWORD *)(a2 + 20) = v16;
  *(_DWORD *)(a2 + 28) = HIDWORD(v14);
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v14;
  if (HIDWORD(v14) * HIDWORD(v13) == -1)
    sub_239EBFBC4(result, v11);
  return result;
}

void sub_23976D0A8(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_23976D0B4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_23976D158(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976D170(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, char a5)
{
  uint64_t v8;
  _OWORD *v9;
  BOOL v10;
  __int128 v11;
  __int128 v12;
  char v14;

  v14 = a5;
  *(_QWORD *)a1 = off_250AE6FC8;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_23976CBBC(a2, a3, a4, a1 + 16);
  v9 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v10 = *(_DWORD *)(a4 + 28) == 0;
  else
    v10 = 1;
  if (v10)
  {
    v11 = *(_OWORD *)a4;
    v12 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v9 = v11;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    sub_23976CE0C((uint64_t)a2, v8, (uint64_t)v9);
  }
  sub_23976D258(a1, (uint64_t)&v14);
  return a1;
}

void sub_23976D214(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976D230(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23976D340(v1);
  _Unwind_Resume(a1);
}

void sub_23976D244(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976D258(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _BYTE *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD v12[3];
  _QWORD v13[2];
  uint64_t v14;
  uint64_t *v15;
  _DWORD v16[7];
  _QWORD v17[2];

  result = sub_23976D974(a1);
  if ((result & 1) == 0)
  {
    sub_23976DA94(a1, v12);
    sub_23976DB40(a1, (uint64_t)&v5);
    v13[0] = &v5;
    v13[1] = a2;
    if (v9 == 1)
    {
      sub_23978E780(v13);
    }
    else
    {
      v14 = a2;
      if (v6 && v7)
      {
        if (v8)
        {
          v15 = &v14;
          v16[0] = 0;
          v16[1] = v6 - 1;
          v16[2] = v9;
          v16[3] = v7 - 1;
          v16[4] = v10;
          v16[5] = v8 - 1;
          v16[6] = v11;
          v17[0] = 0;
          v17[1] = 0;
          sub_23978F57C(v16, (uint64_t)v17, (_BYTE ***)&v15, v5);
        }
      }
    }
    return sub_23979B610(v12);
  }
  return result;
}

void sub_23976D32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23976D340(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE6FC8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23976D3A8(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  _OWORD *v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[3];
  _BYTE v17[48];
  _QWORD v18[3];
  _QWORD v19[2];

  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE6FC8;
  v9 = a1 + 16;
  sub_23976CBBC(a2, a3, a4, a1 + 16);
  v10 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v11 = *(_DWORD *)(a4 + 28) == 0;
  else
    v11 = 1;
  if (v11)
  {
    v12 = *(_OWORD *)a4;
    v13 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v10 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  else
  {
    sub_23976CE0C((uint64_t)a2, v9, (uint64_t)v10);
  }
  v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  v16[2] = a5[2];
  if (!sub_23976D974(a1))
  {
    sub_23976DA94(a1, v18);
    sub_23976DB40(a1, (uint64_t)v17);
    v19[0] = v16;
    v19[1] = v17;
    sub_23978F738((uint64_t)v19);
    sub_23979B610(v18);
  }
  return a1;
}

void sub_23976D498(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976D4B4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23979B610(v2 - 88);
  sub_23976D340(v1);
  _Unwind_Resume(a1);
}

void sub_23976D4D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976D4E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23976D340(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976D4F8(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)a1 = off_250AE6FC8;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  sub_23976D618(a2, a1 + 48);
  v9 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 72))
  {
    if (v9)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v9 ^ (*(_DWORD *)(a1 + 76) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_23976D5E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976D5FC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_23976D618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t result;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v11);
  v6 = v11;
  if (*((_QWORD *)&v11 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  if (!(_QWORD)v6)
    sub_239EC27A4(v4, v5);
  sub_23978E124(a1);
  sub_23978F3B4(a1);
  result = sub_23979AE34(a1, 1, 4, 0, 0);
  *(_QWORD *)a2 = __PAIR64__(result, 4);
  *(_DWORD *)(a2 + 8) = HIDWORD(result);
  LODWORD(v11) = 1;
  *(_QWORD *)((char *)&v11 + 4) = v10;
  *(_QWORD *)(a2 + 12) = v11;
  *(_DWORD *)(a2 + 20) = HIDWORD(v10);
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v10;
  return result;
}

void sub_23976D724(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976D730(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_23976D884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

void sub_23976D898(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v3 = *(_QWORD *)(a1 + 24);
      v2 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v3;
      a2[2] = v2;
      if (v2)
      {
        v4 = (unint64_t *)(v2 + 8);
        do
          v5 = __ldxr(v4);
        while (__stxr(v5 + 1, v4));
      }
      break;
    case 1:
      v11 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v11;
      a2[2] = v10;
      if (v10)
      {
        v12 = (unint64_t *)(v10 + 8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 1, v12));
      }
      break;
    case 2:
      v7 = *(_QWORD *)(a1 + 24);
      v6 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v7;
      a2[2] = v6;
      if (v6)
      {
        v8 = (unint64_t *)(v6 + 8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 1, v8));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), a2);
      break;
    default:
      sub_23964B158();
  }
}

BOOL sub_23976D974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_23976DA80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976DA94@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_23976D0B4((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_23976DB2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976DB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23976D974(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 4;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(DWORD1(v24), 4);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_23976CF58((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_23976DD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976DD24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_23976D0B4((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_23976DDD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976DDE4@<X0>(_QWORD *result@<X0>, int a2@<W1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  BOOL v6;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  if (*a3)
    v6 = a3[1] == 0;
  else
    v6 = 1;
  if (v6)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, a3, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_23976DFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976E018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_23976E034(int a1, uint64_t a2)
{
  double result;
  double v3;
  _QWORD v4[3];
  uint64_t v5;
  __int128 v6;

  switch(a1)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_11;
      sub_23979C50C(a2, v4);
      sub_23976E174((uint64_t)v4, &v5);
      v3 = *(double *)&v6;
      sub_23979B260(v4);
      goto LABEL_10;
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_11;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_11;
LABEL_7:
      sub_23976E174(a2, &v5);
      result = *(double *)&v6;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_11:
        sub_23964B158();
      sub_23976E3EC((uint64_t *)a2, v4);
      sub_23976E174((uint64_t)v4, &v5);
      v3 = *(double *)&v6;
      sub_23979BCF4(v4);
LABEL_10:
      result = v3;
      break;
    default:
      return result;
  }
  return result;
}

void sub_23976E14C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976E160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_23976E174@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  size_t result;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_23979D0F0(a1, &v23);
  v7 = v23;
  v6 = v24;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  v10 = sub_23979A918(a1);
  v12 = (char *)&v25;
  if ((int)v10 > 1647589489)
  {
    if ((_DWORD)v10 == 1647719521)
    {
      v13 = 0;
    }
    else
    {
      if ((_DWORD)v10 != 1647589490)
        goto LABEL_17;
      v13 = 1;
    }
  }
  else if ((_DWORD)v10 == 1278226742)
  {
    v13 = 3;
  }
  else
  {
    if ((_DWORD)v10 != 1647392359)
      goto LABEL_17;
    v13 = 2;
  }
  v12 = (char *)&v23 + 4 * v13;
LABEL_17:
  if (v12 - (char *)&v23 == 16)
    sub_239EC27D0(v10, v11);
  v14 = sub_23979A918(a1);
  v16 = (char *)&v26;
  if ((int)v14 > 1717855599)
  {
    if ((int)v14 > 1751410031)
    {
      if ((_DWORD)v14 == 1751410032)
      {
        v17 = 6;
      }
      else
      {
        if ((_DWORD)v14 != 1751411059)
          goto LABEL_38;
        v17 = 4;
      }
    }
    else if ((_DWORD)v14 == 1717855600)
    {
      v17 = 7;
    }
    else
    {
      if ((_DWORD)v14 != 1717856627)
        goto LABEL_38;
      v17 = 5;
    }
  }
  else if ((int)v14 > 1278226535)
  {
    if ((_DWORD)v14 == 1278226536)
    {
      v17 = 2;
    }
    else
    {
      if ((_DWORD)v14 != 1647392359)
        goto LABEL_38;
      v17 = 1;
    }
  }
  else if ((_DWORD)v14 == 1278226488)
  {
    v17 = 0;
  }
  else
  {
    if ((_DWORD)v14 != 1278226534)
      goto LABEL_38;
    v17 = 3;
  }
  v16 = (char *)&v23 + 4 * v17;
LABEL_38:
  if (v16 - (char *)&v23 == 32)
    sub_239EC2778(v14, v15);
  result = sub_23979ABAC(a1, 1u, 0, 0, &v23);
  if (HIDWORD(v23))
    v20 = (_DWORD)v23 == 0;
  else
    v20 = 1;
  v21 = v23;
  v22 = v24;
  if (v20)
    v21 = 0;
  *a2 = v25;
  a2[1] = v21;
  a2[2] = v22;
  if (HIDWORD(v21) * HIDWORD(v22) == -1)
    sub_239EBFBC4(result, v19);
  return result;
}

void sub_23976E3EC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_23976E490(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976E4A8(uint64_t a1, _QWORD *a2, int a3, unsigned int *a4, __int16 a5)
{
  int v6;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;

  v6 = (int)a2;
  v13 = a5;
  *(_QWORD *)a1 = off_250AE7058;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_23976DDE4(a2, a3, a4, a1 + 16);
  if (*a4)
    v9 = a4[1] == 0;
  else
    v9 = 1;
  if (v9)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)a4;
  }
  else
  {
    sub_23976E034(v6, v8);
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
  }
  sub_23976E58C(a1, &v13);
  return a1;
}

void sub_23976E548(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976E564(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23976E6C0(v1);
  _Unwind_Resume(a1);
}

void sub_23976E578(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976E58C(uint64_t a1, _WORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _WORD *v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _WORD *v13;
  int v14;
  uint64_t v15;
  _WORD *v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  _QWORD v21[3];
  _QWORD v22[2];

  result = sub_23976EE50(a1);
  if ((result & 1) == 0)
  {
    sub_23976EF70(a1, v21);
    sub_23976F01C(a1, &v16);
    v22[0] = &v16;
    v22[1] = a2;
    v6 = v19;
    if (v19 == 1)
    {
      sub_23978F93C(v22, v5);
      return sub_23979B610(v21);
    }
    if (!v17 || !v18)
      return sub_23979B610(v21);
    v7 = v17 - 1;
    v8 = v16;
    v9 = v18 - 1;
    if (v18 != 1)
    {
      v10 = v20;
      if (v17 == 1)
      {
        do
        {
          *v8 = *a2;
          v8 += v10;
          --v9;
        }
        while (v9);
LABEL_17:
        *v8 = *a2;
        return sub_23979B610(v21);
      }
      v11 = 0;
      v12 = 2 * v20;
      do
      {
        v13 = v8;
        v14 = v7;
        do
        {
          *v13 = *a2;
          v13 += v6;
          --v14;
        }
        while (v14);
        *v13 = *a2;
        v8 = (_WORD *)((char *)v8 + v12);
        ++v11;
      }
      while (v11 != v9);
    }
    if (v7)
    {
      v15 = 2 * v6;
      do
      {
        *v8 = *a2;
        v8 = (_WORD *)((char *)v8 + v15);
        --v7;
      }
      while (v7);
    }
    goto LABEL_17;
  }
  return result;
}

void sub_23976E6AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23976E6C0(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7058;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23976E728(uint64_t a1, _QWORD *a2, int a3, unsigned int *a4, __int128 *a5)
{
  int v7;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;

  v7 = (int)a2;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE7058;
  v9 = a1 + 16;
  sub_23976DDE4(a2, a3, a4, a1 + 16);
  if (*a4)
    v10 = a4[1] == 0;
  else
    v10 = 1;
  if (v10)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)a4;
  }
  else
  {
    sub_23976E034(v7, v9);
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
  }
  v14 = *a5;
  v15 = *((_QWORD *)a5 + 2);
  sub_23976E824(a1, (uint64_t)&v14);
  return a1;
}

void sub_23976E7E0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976E7FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23976E6C0(v1);
  _Unwind_Resume(a1);
}

void sub_23976E810(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976E824(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v8;
  int v9;
  int v10;
  _WORD *v11;
  _WORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _WORD *v19;
  _WORD *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  unsigned int v25;
  unsigned int v26;
  _QWORD v27[3];
  _QWORD v28[2];

  result = sub_23976EE50(a1);
  if ((result & 1) == 0)
  {
    sub_23976EF70(a1, v27);
    sub_23976F01C(a1, v24);
    v28[0] = a2;
    v28[1] = v24;
    v5 = *(unsigned int *)(a2 + 16);
    v6 = v25;
    if ((_DWORD)v5 == 1 && v25 == 1)
    {
      sub_23978FC2C(v28);
      return sub_23979B610(v27);
    }
    v8 = *(_DWORD *)(a2 + 8);
    if (!v8)
      return sub_23979B610(v27);
    v9 = *(_DWORD *)(a2 + 12);
    if (!v9)
      return sub_23979B610(v27);
    v10 = v8 - 1;
    v11 = *(_WORD **)a2;
    v12 = (_WORD *)v24[0];
    v13 = v9 - 1;
    if (v13)
    {
      v14 = v26;
      v15 = *(unsigned int *)(a2 + 20);
      if (!v10)
      {
        do
        {
          *v12 = *v11;
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
LABEL_20:
        *v12 = *v11;
        return sub_23979B610(v27);
      }
      v16 = 0;
      v17 = 2 * v15;
      v18 = 2 * v26;
      do
      {
        v19 = v12;
        v20 = v11;
        v21 = v10;
        do
        {
          *v19 = *v20;
          v20 += v5;
          v19 += v6;
          --v21;
        }
        while (v21);
        *v19 = *v20;
        v11 = (_WORD *)((char *)v11 + v17);
        v12 = (_WORD *)((char *)v12 + v18);
        ++v16;
      }
      while (v16 != v13);
    }
    if (v10)
    {
      v22 = 2 * v5;
      v23 = 2 * v6;
      do
      {
        *v12 = *v11;
        v11 = (_WORD *)((char *)v11 + v22);
        v12 = (_WORD *)((char *)v12 + v23);
        --v10;
      }
      while (v10);
    }
    goto LABEL_20;
  }
  return result;
}

void sub_23976E978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23976E98C(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_QWORD *)a1 = off_250AE7058;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = sub_23976EAAC(a2);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 48))
  {
    if (v10)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v10 ^ (*(_DWORD *)(a1 + 52) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_23976EA7C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976EA90(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_23976EAAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_23979D0F0(a1, &v17);
  v5 = v17;
  v4 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  if (!v5)
    sub_239EC27A4(v2, v3);
  v8 = sub_23979A918(a1);
  v10 = (char *)&v19;
  if ((int)v8 > 1647589489)
  {
    if ((_DWORD)v8 == 1647719521)
    {
      v11 = 0;
    }
    else
    {
      if ((_DWORD)v8 != 1647589490)
        goto LABEL_17;
      v11 = 1;
    }
  }
  else if ((_DWORD)v8 == 1278226742)
  {
    v11 = 3;
  }
  else
  {
    if ((_DWORD)v8 != 1647392359)
      goto LABEL_17;
    v11 = 2;
  }
  v10 = (char *)&v17 + 4 * v11;
LABEL_17:
  if (v10 - (char *)&v17 == 16)
    sub_239EC27D0(v8, v9);
  v12 = sub_23979A918(a1);
  v14 = (char *)&v20;
  if ((int)v12 > 1717855599)
  {
    if ((int)v12 > 1751410031)
    {
      if ((_DWORD)v12 == 1751410032)
      {
        v15 = 6;
      }
      else
      {
        if ((_DWORD)v12 != 1751411059)
          goto LABEL_38;
        v15 = 4;
      }
    }
    else if ((_DWORD)v12 == 1717855600)
    {
      v15 = 7;
    }
    else
    {
      if ((_DWORD)v12 != 1717856627)
        goto LABEL_38;
      v15 = 5;
    }
  }
  else if ((int)v12 > 1278226535)
  {
    if ((_DWORD)v12 == 1278226536)
    {
      v15 = 2;
    }
    else
    {
      if ((_DWORD)v12 != 1647392359)
        goto LABEL_38;
      v15 = 1;
    }
  }
  else if ((_DWORD)v12 == 1278226488)
  {
    v15 = 0;
  }
  else
  {
    if ((_DWORD)v12 != 1278226534)
      goto LABEL_38;
    v15 = 3;
  }
  v14 = (char *)&v17 + 4 * v15;
LABEL_38:
  if (v14 - (char *)&v17 == 32)
    sub_239EC2778(v12, v13);
  return sub_23979AE34(a1, 2, 1, 0, 0);
}

_QWORD *sub_23976ECE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_23976EE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_23976EE50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_23976EF5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976EF70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_23976E3EC((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_23976F008(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23976F01C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;

  result = sub_23976EE50(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v10;
        v23 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v18;
        v23 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v14;
        v23 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v21);
        break;
      default:
        sub_23964B158();
    }
    sub_23976E174((uint64_t)&v21, a2);
    return (uint64_t)sub_23979BCF4(&v21);
  }
  return result;
}

void sub_23976F188(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976F19C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_23976E3EC((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_23976F248(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976F25C@<X0>(_QWORD *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int *v6;
  BOOL v7;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  v6 = (unsigned int *)(a3 + 24);
  if (*(_DWORD *)(a3 + 24))
    v7 = *(_DWORD *)(a3 + 28) == 0;
  else
    v7 = 1;
  if (v7)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, v6, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_23976F474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976F490(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23976F4AC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD v7[3];
  _BYTE v8[8];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  switch((int)result)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_10;
      sub_23979C50C(a2, v7);
      sub_23976F5F8((uint64_t)v7, (uint64_t)v8);
      v4 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v4;
      *(_QWORD *)(a3 + 32) = v11;
      return sub_23979B260(v7);
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_10;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_10;
LABEL_7:
      result = sub_23976F5F8(a2, (uint64_t)v8);
      v5 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v5;
      *(_QWORD *)(a3 + 32) = v11;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_10:
        sub_23964B158();
      sub_23976F7E8((uint64_t *)a2, v7);
      sub_23976F5F8((uint64_t)v7, (uint64_t)v8);
      v6 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v6;
      *(_QWORD *)(a3 + 32) = v11;
      result = (uint64_t)sub_23979BCF4(v7);
      break;
    default:
      return result;
  }
  return result;
}

void sub_23976F5D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23976F5E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_23976F5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  size_t result;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v21);
  v7 = v21;
  v6 = v22;
  if (v22)
  {
    p_shared_owners = (unint64_t *)&v22->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  v10 = sub_23979A918(a1);
  v12 = (char *)&v23;
  if ((int)v10 > 1647589489)
  {
    if ((_DWORD)v10 == 1647719521)
    {
      v13 = 0;
    }
    else
    {
      if ((_DWORD)v10 != 1647589490)
        goto LABEL_17;
      v13 = 1;
    }
  }
  else if ((_DWORD)v10 == 1278226742)
  {
    v13 = 3;
  }
  else
  {
    if ((_DWORD)v10 != 1647392359)
      goto LABEL_17;
    v13 = 2;
  }
  v12 = (char *)&v21 + 4 * v13;
LABEL_17:
  if (v12 - (char *)&v21 == 16)
    sub_239EC27D0(v10, v11);
  sub_23978EE58(a1);
  result = sub_23979ABAC(a1, 3u, 0, 0, &v21);
  if (HIDWORD(v21))
    v16 = (_DWORD)v21 == 0;
  else
    v16 = 1;
  v17 = v21;
  v18 = v22;
  if (v16)
    v17 = 0;
  *(_QWORD *)&v24[4] = v17;
  *(_DWORD *)v24 = 3;
  v19 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v22;
  v20 = *(_QWORD *)v24;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v19;
  *(_DWORD *)(a2 + 16) = HIDWORD(v17);
  *(_QWORD *)(a2 + 20) = v20;
  *(_DWORD *)(a2 + 28) = HIDWORD(v18);
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v18;
  if (HIDWORD(v18) * HIDWORD(v17) == -1)
    sub_239EBFBC4(result, v15);
  return result;
}

void sub_23976F7DC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_23976F7E8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_23976F88C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976F8A4(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, __int16 a5)
{
  uint64_t v8;
  _OWORD *v9;
  BOOL v10;
  __int128 v11;
  __int128 v12;
  __int16 v14;

  v14 = a5;
  *(_QWORD *)a1 = off_250AE70E8;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_23976F25C(a2, a3, a4, a1 + 16);
  v9 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v10 = *(_DWORD *)(a4 + 28) == 0;
  else
    v10 = 1;
  if (v10)
  {
    v11 = *(_OWORD *)a4;
    v12 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v9 = v11;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    sub_23976F4AC((uint64_t)a2, v8, (uint64_t)v9);
  }
  sub_23976F98C(a1, (uint64_t)&v14);
  return a1;
}

void sub_23976F948(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976F964(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23976FB08(v1);
  _Unwind_Resume(a1);
}

void sub_23976F978(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976F98C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  _QWORD v15[3];
  _QWORD v16[2];
  uint64_t v17;
  char v18;
  _QWORD v19[3];
  _QWORD *v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unint64_t v26[2];

  result = sub_2397700F4(a1);
  if ((result & 1) == 0)
  {
    sub_239770214(a1, v15);
    sub_2397702C0(a1, (uint64_t)&v8);
    v16[0] = &v8;
    v16[1] = a2;
    if (v12 == 1)
    {
      if (v13 == v9)
      {
        sub_23978FDF0((unsigned int *)v16, v5);
      }
      else
      {
        v17 = v9;
        v19[0] = &v18;
        v19[1] = &v17;
        v19[2] = a2;
        if (v9 && v10 && v11)
        {
          LODWORD(v20) = 0;
          HIDWORD(v20) = v9 - 1;
          v21 = 1;
          v22 = v10 - 1;
          v25 = v14;
          v6 = v8;
          v26[0] = 0;
          v26[1] = 0;
          v23 = v13;
          v24 = v11 - 1;
          if (v11 != 1)
          {
            v7 = 0;
            do
            {
              sub_23979010C((uint64_t)&v20, v26, (uint64_t)v19, v6);
              v6 += 2 * v25;
              ++v7;
            }
            while (v7 < v24);
          }
          sub_23979010C((uint64_t)&v20, v26, (uint64_t)v19, v6);
        }
      }
    }
    else
    {
      v19[0] = a2;
      if (v9 && v10 && v11)
      {
        v20 = v19;
        sub_2397902D8(&v20, (uint64_t)&v8);
      }
    }
    return sub_23979B610(v15);
  }
  return result;
}

void sub_23976FAE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

void sub_23976FAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23976FB08(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE70E8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23976FB70(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  _OWORD *v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[3];
  _BYTE v17[48];
  _QWORD v18[3];
  _QWORD v19[2];

  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE70E8;
  v9 = a1 + 16;
  sub_23976F25C(a2, a3, a4, a1 + 16);
  v10 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v11 = *(_DWORD *)(a4 + 28) == 0;
  else
    v11 = 1;
  if (v11)
  {
    v12 = *(_OWORD *)a4;
    v13 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v10 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  else
  {
    sub_23976F4AC((uint64_t)a2, v9, (uint64_t)v10);
  }
  v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  v16[2] = a5[2];
  if (!sub_2397700F4(a1))
  {
    sub_239770214(a1, v18);
    sub_2397702C0(a1, (uint64_t)v17);
    v19[0] = v16;
    v19[1] = v17;
    sub_239790400((uint64_t)v19);
    sub_23979B610(v18);
  }
  return a1;
}

void sub_23976FC60(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976FC7C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23979B610(v2 - 88);
  sub_23976FB08(v1);
  _Unwind_Resume(a1);
}

void sub_23976FC98(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976FCAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23976FB08(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23976FCC0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)a1 = off_250AE70E8;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  sub_23976FDE0(a2, a1 + 48);
  v9 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 72))
  {
    if (v9)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v9 ^ (*(_DWORD *)(a1 + 76) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_23976FDB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23976FDC4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_23976FDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v15);
  v6 = v15;
  if (*((_QWORD *)&v15 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  if (!(_QWORD)v6)
    sub_239EC27A4(v4, v5);
  v9 = sub_23979A918(a1);
  v11 = (char *)&v16;
  if ((int)v9 > 1647589489)
  {
    if ((_DWORD)v9 == 1647719521)
    {
      v12 = 0;
    }
    else
    {
      if ((_DWORD)v9 != 1647589490)
        goto LABEL_17;
      v12 = 1;
    }
  }
  else if ((_DWORD)v9 == 1278226742)
  {
    v12 = 3;
  }
  else
  {
    if ((_DWORD)v9 != 1647392359)
      goto LABEL_17;
    v12 = 2;
  }
  v11 = (char *)&v15 + 4 * v12;
LABEL_17:
  if (v11 - (char *)&v15 == 16)
    sub_239EC27D0(v9, v10);
  sub_23978EE58(a1);
  result = sub_23979AE34(a1, 2, 3, 0, 0);
  *(_QWORD *)a2 = __PAIR64__(result, 3);
  *(_DWORD *)(a2 + 8) = HIDWORD(result);
  LODWORD(v15) = 1;
  *(_QWORD *)((char *)&v15 + 4) = v14;
  *(_QWORD *)(a2 + 12) = v15;
  *(_DWORD *)(a2 + 20) = HIDWORD(v14);
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v14;
  return result;
}

void sub_23976FF80(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_23976FF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_2397700E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_2397700F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_239770200(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239770214@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_23976F7E8((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_2397702AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397702C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t (**v17)();
  uint64_t v18;
  uint64_t v19;

  if (sub_2397700F4(a1))
    return (_QWORD *)sub_2397909BC(a2, 0, (_DWORD *)(a1 + 72));
  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v6;
      v19 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 1:
      v14 = *(_QWORD *)(a1 + 24);
      v13 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v14;
      v19 = v13;
      if (v13)
      {
        v15 = (unint64_t *)(v13 + 8);
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }
      break;
    case 2:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v10;
      v19 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v17);
      break;
    default:
      sub_23964B158();
  }
  sub_23976F5F8((uint64_t)&v17, a2);
  return sub_23979BCF4(&v17);
}

void sub_2397703F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239770404@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_23976F7E8((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_2397704B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397704C4@<X0>(_QWORD *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int *v6;
  BOOL v7;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  v6 = (unsigned int *)(a3 + 24);
  if (*(_DWORD *)(a3 + 24))
    v7 = *(_DWORD *)(a3 + 28) == 0;
  else
    v7 = 1;
  if (v7)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, v6, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_2397706DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397706F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239770714@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD v7[3];
  _BYTE v8[8];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  switch((int)result)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_10;
      sub_23979C50C(a2, v7);
      sub_239770860((uint64_t)v7, (uint64_t)v8);
      v4 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v4;
      *(_QWORD *)(a3 + 32) = v11;
      return sub_23979B260(v7);
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_10;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_10;
LABEL_7:
      result = sub_239770860(a2, (uint64_t)v8);
      v5 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v5;
      *(_QWORD *)(a3 + 32) = v11;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_10:
        sub_23964B158();
      sub_239770A50((uint64_t *)a2, v7);
      sub_239770860((uint64_t)v7, (uint64_t)v8);
      v6 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v6;
      *(_QWORD *)(a3 + 32) = v11;
      result = (uint64_t)sub_23979BCF4(v7);
      break;
    default:
      return result;
  }
  return result;
}

void sub_239770838(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23977084C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_239770860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  size_t result;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v21);
  v7 = v21;
  v6 = v22;
  if (v22)
  {
    p_shared_owners = (unint64_t *)&v22->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  v10 = sub_23979A918(a1);
  v12 = (char *)&v23;
  if ((int)v10 > 1647589489)
  {
    if ((_DWORD)v10 == 1647719521)
    {
      v13 = 0;
    }
    else
    {
      if ((_DWORD)v10 != 1647589490)
        goto LABEL_17;
      v13 = 1;
    }
  }
  else if ((_DWORD)v10 == 1278226742)
  {
    v13 = 3;
  }
  else
  {
    if ((_DWORD)v10 != 1647392359)
      goto LABEL_17;
    v13 = 2;
  }
  v12 = (char *)&v21 + 4 * v13;
LABEL_17:
  if (v12 - (char *)&v21 == 16)
    sub_239EC27D0(v10, v11);
  sub_23978F3B4(a1);
  result = sub_23979ABAC(a1, 4u, 0, 0, &v21);
  if (HIDWORD(v21))
    v16 = (_DWORD)v21 == 0;
  else
    v16 = 1;
  v17 = v21;
  v18 = v22;
  if (v16)
    v17 = 0;
  *(_QWORD *)&v24[4] = v17;
  *(_DWORD *)v24 = 4;
  v19 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v22;
  v20 = *(_QWORD *)v24;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v19;
  *(_DWORD *)(a2 + 16) = HIDWORD(v17);
  *(_QWORD *)(a2 + 20) = v20;
  *(_DWORD *)(a2 + 28) = HIDWORD(v18);
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v18;
  if (HIDWORD(v18) * HIDWORD(v17) == -1)
    sub_239EBFBC4(result, v15);
  return result;
}

void sub_239770A44(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_239770A50(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_239770AF4(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239770B0C(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, __int16 a5)
{
  uint64_t v8;
  _OWORD *v9;
  BOOL v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int16 v15;
  _BYTE v16[48];
  _QWORD v17[3];
  _QWORD v18[2];

  v15 = a5;
  *(_QWORD *)a1 = off_250AE7178;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_2397704C4(a2, a3, a4, a1 + 16);
  v9 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v10 = *(_DWORD *)(a4 + 28) == 0;
  else
    v10 = 1;
  if (v10)
  {
    v11 = *(_OWORD *)a4;
    v12 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v9 = v11;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    sub_239770714((uint64_t)a2, v8, (uint64_t)v9);
  }
  if (!sub_239771234(a1))
  {
    sub_239771354(a1, v17);
    sub_239771400(a1, (uint64_t)v16);
    v18[0] = v16;
    v18[1] = &v15;
    sub_239790B74((uint64_t)v18, v13);
    sub_23979B610(v17);
  }
  return a1;
}

void sub_239770BE4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2;
  sub_239769C14(v3);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239770C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  sub_23979B610(va);
  sub_239770C48(v8);
  _Unwind_Resume(a1);
}

void sub_239770C20(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239770C34(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239770C48(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239770C48(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7178;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239770CB0(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  _OWORD *v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[3];
  _BYTE v17[48];
  _QWORD v18[3];
  _QWORD v19[2];

  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE7178;
  v9 = a1 + 16;
  sub_2397704C4(a2, a3, a4, a1 + 16);
  v10 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v11 = *(_DWORD *)(a4 + 28) == 0;
  else
    v11 = 1;
  if (v11)
  {
    v12 = *(_OWORD *)a4;
    v13 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v10 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  else
  {
    sub_239770714((uint64_t)a2, v9, (uint64_t)v10);
  }
  v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  v16[2] = a5[2];
  if (!sub_239771234(a1))
  {
    sub_239771354(a1, v18);
    sub_239771400(a1, (uint64_t)v17);
    v19[0] = v16;
    v19[1] = v17;
    sub_239790E2C((uint64_t)v19);
    sub_23979B610(v18);
  }
  return a1;
}

void sub_239770DA0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239770DBC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23979B610(v2 - 88);
  sub_239770C48(v1);
  _Unwind_Resume(a1);
}

void sub_239770DD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239770DEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239770C48(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239770E00(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)a1 = off_250AE7178;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  sub_239770F20(a2, a1 + 48);
  v9 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 72))
  {
    if (v9)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v9 ^ (*(_DWORD *)(a1 + 76) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_239770EF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239770F04(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_239770F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v15);
  v6 = v15;
  if (*((_QWORD *)&v15 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  if (!(_QWORD)v6)
    sub_239EC27A4(v4, v5);
  v9 = sub_23979A918(a1);
  v11 = (char *)&v16;
  if ((int)v9 > 1647589489)
  {
    if ((_DWORD)v9 == 1647719521)
    {
      v12 = 0;
    }
    else
    {
      if ((_DWORD)v9 != 1647589490)
        goto LABEL_17;
      v12 = 1;
    }
  }
  else if ((_DWORD)v9 == 1278226742)
  {
    v12 = 3;
  }
  else
  {
    if ((_DWORD)v9 != 1647392359)
      goto LABEL_17;
    v12 = 2;
  }
  v11 = (char *)&v15 + 4 * v12;
LABEL_17:
  if (v11 - (char *)&v15 == 16)
    sub_239EC27D0(v9, v10);
  sub_23978F3B4(a1);
  result = sub_23979AE34(a1, 2, 4, 0, 0);
  *(_QWORD *)a2 = __PAIR64__(result, 4);
  *(_DWORD *)(a2 + 8) = HIDWORD(result);
  LODWORD(v15) = 1;
  *(_QWORD *)((char *)&v15 + 4) = v14;
  *(_QWORD *)(a2 + 12) = v15;
  *(_DWORD *)(a2 + 20) = HIDWORD(v14);
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v14;
  return result;
}

void sub_2397710C0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397710CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_239771220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_239771234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_239771340(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239771354@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_239770A50((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_2397713EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239771400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_239771234(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 4;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(DWORD1(v24), 4);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239770860((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_2397715D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397715E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_239770A50((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_239771690(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397716A4@<X0>(_QWORD *result@<X0>, int a2@<W1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  BOOL v6;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  if (*a3)
    v6 = a3[1] == 0;
  else
    v6 = 1;
  if (v6)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, a3, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_2397718BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397718D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_2397718F4(int a1, uint64_t a2)
{
  double result;
  double v3;
  _QWORD v4[3];
  uint64_t v5;
  __int128 v6;

  switch(a1)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_11;
      sub_23979C50C(a2, v4);
      sub_239771A34((uint64_t)v4, &v5);
      v3 = *(double *)&v6;
      sub_23979B260(v4);
      goto LABEL_10;
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_11;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_11;
LABEL_7:
      sub_239771A34(a2, &v5);
      result = *(double *)&v6;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_11:
        sub_23964B158();
      sub_239771CC4((uint64_t *)a2, v4);
      sub_239771A34((uint64_t)v4, &v5);
      v3 = *(double *)&v6;
      sub_23979BCF4(v4);
LABEL_10:
      result = v3;
      break;
    default:
      return result;
  }
  return result;
}

void sub_239771A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239771A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_239771A34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  size_t result;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_23979D0F0(a1, &v23);
  v7 = v23;
  v6 = v24;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  v10 = sub_23979A918(a1);
  v12 = (char *)&v25 + 4;
  if ((int)v10 <= 1380411456)
  {
    if ((_DWORD)v10 == 843264104)
    {
      v13 = 1;
    }
    else
    {
      if ((_DWORD)v10 != 1278226536)
        goto LABEL_19;
      v13 = 0;
    }
  }
  else
  {
    switch((_DWORD)v10)
    {
      case 0x52476841:
        v13 = 2;
        break;
      case 0x68646570:
        v13 = 4;
        break;
      case 0x68646973:
        v13 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v12 = (char *)&v23 + 4 * v13;
LABEL_19:
  if (v12 - (char *)&v23 == 20)
    sub_239EC27FC(v10, v11);
  v14 = sub_23979A918(a1);
  v16 = (char *)&v26;
  if ((int)v14 > 1717855599)
  {
    if ((int)v14 > 1751410031)
    {
      if ((_DWORD)v14 == 1751410032)
      {
        v17 = 6;
      }
      else
      {
        if ((_DWORD)v14 != 1751411059)
          goto LABEL_40;
        v17 = 4;
      }
    }
    else if ((_DWORD)v14 == 1717855600)
    {
      v17 = 7;
    }
    else
    {
      if ((_DWORD)v14 != 1717856627)
        goto LABEL_40;
      v17 = 5;
    }
  }
  else if ((int)v14 > 1278226535)
  {
    if ((_DWORD)v14 == 1278226536)
    {
      v17 = 2;
    }
    else
    {
      if ((_DWORD)v14 != 1647392359)
        goto LABEL_40;
      v17 = 1;
    }
  }
  else if ((_DWORD)v14 == 1278226488)
  {
    v17 = 0;
  }
  else
  {
    if ((_DWORD)v14 != 1278226534)
      goto LABEL_40;
    v17 = 3;
  }
  v16 = (char *)&v23 + 4 * v17;
LABEL_40:
  if (v16 - (char *)&v23 == 32)
    sub_239EC2778(v14, v15);
  result = sub_23979ABAC(a1, 1u, 0, 0, &v23);
  if (HIDWORD(v23))
    v20 = (_DWORD)v23 == 0;
  else
    v20 = 1;
  v21 = v23;
  v22 = v24;
  if (v20)
    v21 = 0;
  *a2 = v25;
  a2[1] = v21;
  a2[2] = v22;
  if (HIDWORD(v21) * HIDWORD(v22) == -1)
    sub_239EBFBC4(result, v19);
  return result;
}

void sub_239771CC4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_239771D68(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239771D80(uint64_t a1, _QWORD *a2, int a3, unsigned int *a4, __int16 a5)
{
  int v6;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;

  v6 = (int)a2;
  v13 = a5;
  *(_QWORD *)a1 = off_250AE7208;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_2397716A4(a2, a3, a4, a1 + 16);
  if (*a4)
    v9 = a4[1] == 0;
  else
    v9 = 1;
  if (v9)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)a4;
  }
  else
  {
    sub_2397718F4(v6, v8);
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
  }
  sub_239771E64(a1, &v13);
  return a1;
}

void sub_239771E20(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239771E3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239771F94(v1);
  _Unwind_Resume(a1);
}

void sub_239771E50(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239771E64(uint64_t a1, _WORD *a2)
{
  uint64_t result;
  uint64_t v5;
  __n128 v6;
  int v7;
  _WORD *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _WORD *v14;
  int v15;
  _WORD *v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  _QWORD v21[3];
  _QWORD v22[2];

  result = sub_239772810(a1);
  if ((result & 1) == 0)
  {
    sub_239772930(a1, v21);
    sub_2397729DC(a1, &v16);
    v22[0] = &v16;
    v22[1] = a2;
    if (v19 == 1)
    {
      sub_239791058(v22, v5, v6);
    }
    else if (v17 && v18)
    {
      v7 = v17 - 1;
      v8 = v16;
      v9 = 2 * v19;
      v10 = v18 - 1;
      if (v18 != 1)
      {
        v11 = v20;
        if (v17 == 1)
        {
          do
          {
            *v8 = *a2;
            v8 += v11;
            --v10;
          }
          while (v10);
        }
        else
        {
          v12 = 0;
          v13 = 2 * v20;
          do
          {
            v14 = v8;
            v15 = v7;
            do
            {
              *v14 = *a2;
              v14 = (_WORD *)((char *)v14 + v9);
              --v15;
            }
            while (v15);
            *v14 = *a2;
            v8 = (_WORD *)((char *)v8 + v13);
            ++v12;
          }
          while (v12 != v10);
        }
      }
      for (; v7; --v7)
      {
        *v8 = *a2;
        v8 = (_WORD *)((char *)v8 + v9);
      }
      *v8 = *a2;
    }
    return sub_23979B610(v21);
  }
  return result;
}

void sub_239771F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239771F94(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7208;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239771FFC(uint64_t a1, _QWORD *a2, int a3, unsigned int *a4, __int128 *a5)
{
  int v7;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;

  v7 = (int)a2;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE7208;
  v9 = a1 + 16;
  sub_2397716A4(a2, a3, a4, a1 + 16);
  if (*a4)
    v10 = a4[1] == 0;
  else
    v10 = 1;
  if (v10)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)a4;
  }
  else
  {
    sub_2397718F4(v7, v9);
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
  }
  v14 = *a5;
  v15 = *((_QWORD *)a5 + 2);
  sub_2397720F8(a1, (uint64_t)&v14);
  return a1;
}

void sub_2397720B4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2397720D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239771F94(v1);
  _Unwind_Resume(a1);
}

void sub_2397720E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397720F8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v8;
  int v9;
  int v10;
  _WORD *v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _WORD *v21;
  _WORD *v22;
  int v23;
  _QWORD v24[2];
  unsigned int v25;
  unsigned int v26;
  _QWORD v27[3];
  _QWORD v28[2];

  result = sub_239772810(a1);
  if ((result & 1) == 0)
  {
    sub_239772930(a1, v27);
    sub_2397729DC(a1, v24);
    v28[0] = a2;
    v28[1] = v24;
    v6 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v6 == 1 && v25 == 1)
    {
      sub_2397912E0(v28, v5);
    }
    else
    {
      v8 = *(_DWORD *)(a2 + 8);
      if (v8)
      {
        v9 = *(_DWORD *)(a2 + 12);
        if (v9)
        {
          v10 = v8 - 1;
          v11 = *(_WORD **)a2;
          v12 = (_WORD *)v24[0];
          v13 = 2 * v6;
          v14 = 2 * v25;
          v15 = v9 - 1;
          if (v15)
          {
            v16 = v26;
            v17 = *(unsigned int *)(a2 + 20);
            if (v10)
            {
              v18 = 0;
              v19 = 2 * v17;
              v20 = 2 * v26;
              do
              {
                v21 = v12;
                v22 = v11;
                v23 = v10;
                do
                {
                  *v21 = *v22;
                  v22 = (_WORD *)((char *)v22 + v13);
                  v21 = (_WORD *)((char *)v21 + v14);
                  --v23;
                }
                while (v23);
                *v21 = *v22;
                v11 = (_WORD *)((char *)v11 + v19);
                v12 = (_WORD *)((char *)v12 + v20);
                ++v18;
              }
              while (v18 != v15);
            }
            else
            {
              do
              {
                *v12 = *v11;
                v11 += v17;
                v12 += v16;
                --v15;
              }
              while (v15);
            }
          }
          for (; v10; --v10)
          {
            *v12 = *v11;
            v11 = (_WORD *)((char *)v11 + v13);
            v12 = (_WORD *)((char *)v12 + v14);
          }
          *v12 = *v11;
        }
      }
    }
    return sub_23979B610(v27);
  }
  return result;
}

void sub_239772244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239772258(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_QWORD *)a1 = off_250AE7208;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = sub_239772378(a2);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 48))
  {
    if (v10)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v10 ^ (*(_DWORD *)(a1 + 52) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_239772348(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23977235C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_239772378(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  std::__shared_weak_count *v18;
  int v19;
  uint64_t v20;

  v2 = sub_23979D0F0(a1, &v17);
  v5 = v17;
  v4 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  if (!v5)
    sub_239EC27A4(v2, v3);
  v8 = sub_23979A918(a1);
  v10 = (char *)&v19;
  if ((int)v8 <= 1380411456)
  {
    if ((_DWORD)v8 == 843264104)
    {
      v11 = 1;
    }
    else
    {
      if ((_DWORD)v8 != 1278226536)
        goto LABEL_19;
      v11 = 0;
    }
  }
  else
  {
    switch((_DWORD)v8)
    {
      case 0x52476841:
        v11 = 2;
        break;
      case 0x68646570:
        v11 = 4;
        break;
      case 0x68646973:
        v11 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v10 = (char *)&v17 + 4 * v11;
LABEL_19:
  if (v10 - (char *)&v17 == 20)
    sub_239EC27FC(v8, v9);
  v12 = sub_23979A918(a1);
  v14 = (char *)&v20;
  if ((int)v12 > 1717855599)
  {
    if ((int)v12 > 1751410031)
    {
      if ((_DWORD)v12 == 1751410032)
      {
        v15 = 6;
      }
      else
      {
        if ((_DWORD)v12 != 1751411059)
          goto LABEL_40;
        v15 = 4;
      }
    }
    else if ((_DWORD)v12 == 1717855600)
    {
      v15 = 7;
    }
    else
    {
      if ((_DWORD)v12 != 1717856627)
        goto LABEL_40;
      v15 = 5;
    }
  }
  else if ((int)v12 > 1278226535)
  {
    if ((_DWORD)v12 == 1278226536)
    {
      v15 = 2;
    }
    else
    {
      if ((_DWORD)v12 != 1647392359)
        goto LABEL_40;
      v15 = 1;
    }
  }
  else if ((_DWORD)v12 == 1278226488)
  {
    v15 = 0;
  }
  else
  {
    if ((_DWORD)v12 != 1278226534)
      goto LABEL_40;
    v15 = 3;
  }
  v14 = (char *)&v17 + 4 * v15;
LABEL_40:
  if (v14 - (char *)&v17 == 32)
    sub_239EC2778(v12, v13);
  return sub_23979AE34(a1, 2, 1, 0, 0);
}

_QWORD *sub_2397725CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_239772720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

void sub_239772734(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v3 = *(_QWORD *)(a1 + 24);
      v2 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v3;
      a2[2] = v2;
      if (v2)
      {
        v4 = (unint64_t *)(v2 + 8);
        do
          v5 = __ldxr(v4);
        while (__stxr(v5 + 1, v4));
      }
      break;
    case 1:
      v11 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v11;
      a2[2] = v10;
      if (v10)
      {
        v12 = (unint64_t *)(v10 + 8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 1, v12));
      }
      break;
    case 2:
      v7 = *(_QWORD *)(a1 + 24);
      v6 = *(_QWORD *)(a1 + 32);
      *a2 = &off_250AE94F0;
      a2[1] = v7;
      a2[2] = v6;
      if (v6)
      {
        v8 = (unint64_t *)(v6 + 8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 1, v8));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), a2);
      break;
    default:
      sub_23964B158();
  }
}

BOOL sub_239772810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_23977291C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239772930@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_239771CC4((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_2397729C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397729DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;

  result = sub_239772810(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v10;
        v23 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v18;
        v23 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v14;
        v23 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v21);
        break;
      default:
        sub_23964B158();
    }
    sub_239771A34((uint64_t)&v21, a2);
    return (uint64_t)sub_23979BCF4(&v21);
  }
  return result;
}

void sub_239772B48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239772B5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_239771CC4((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_239772C08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239772C1C@<X0>(_QWORD *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int *v6;
  BOOL v7;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  v6 = (unsigned int *)(a3 + 24);
  if (*(_DWORD *)(a3 + 24))
    v7 = *(_DWORD *)(a3 + 28) == 0;
  else
    v7 = 1;
  if (v7)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, v6, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_239772E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239772E50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239772E6C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD v7[3];
  _BYTE v8[8];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  switch((int)result)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_10;
      sub_23979C50C(a2, v7);
      sub_239772FB8((uint64_t)v7, (uint64_t)v8);
      v4 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v4;
      *(_QWORD *)(a3 + 32) = v11;
      return sub_23979B260(v7);
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_10;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_10;
LABEL_7:
      result = sub_239772FB8(a2, (uint64_t)v8);
      v5 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v5;
      *(_QWORD *)(a3 + 32) = v11;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_10:
        sub_23964B158();
      sub_2397731C0((uint64_t *)a2, v7);
      sub_239772FB8((uint64_t)v7, (uint64_t)v8);
      v6 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v6;
      *(_QWORD *)(a3 + 32) = v11;
      result = (uint64_t)sub_23979BCF4(v7);
      break;
    default:
      return result;
  }
  return result;
}

void sub_239772F90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239772FA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_239772FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  size_t result;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v21);
  v7 = v21;
  v6 = v22;
  if (v22)
  {
    p_shared_owners = (unint64_t *)&v22->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  v10 = sub_23979A918(a1);
  v12 = (char *)&v23 + 4;
  if ((int)v10 <= 1380411456)
  {
    if ((_DWORD)v10 == 843264104)
    {
      v13 = 1;
    }
    else
    {
      if ((_DWORD)v10 != 1278226536)
        goto LABEL_19;
      v13 = 0;
    }
  }
  else
  {
    switch((_DWORD)v10)
    {
      case 0x52476841:
        v13 = 2;
        break;
      case 0x68646570:
        v13 = 4;
        break;
      case 0x68646973:
        v13 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v12 = (char *)&v21 + 4 * v13;
LABEL_19:
  if (v12 - (char *)&v21 == 20)
    sub_239EC27FC(v10, v11);
  sub_23978E378(a1);
  result = sub_23979ABAC(a1, 2u, 0, 0, &v21);
  if (HIDWORD(v21))
    v16 = (_DWORD)v21 == 0;
  else
    v16 = 1;
  v17 = v21;
  v18 = v22;
  if (v16)
    v17 = 0;
  *(_QWORD *)&v24[4] = v17;
  *(_DWORD *)v24 = 2;
  v19 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v22;
  v20 = *(_QWORD *)v24;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v19;
  *(_DWORD *)(a2 + 16) = HIDWORD(v17);
  *(_QWORD *)(a2 + 20) = v20;
  *(_DWORD *)(a2 + 28) = HIDWORD(v18);
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v18;
  if (HIDWORD(v18) * HIDWORD(v17) == -1)
    sub_239EBFBC4(result, v15);
  return result;
}

void sub_2397731B4(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_2397731C0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_239773264(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23977327C(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, __int16 a5)
{
  uint64_t v8;
  _OWORD *v9;
  BOOL v10;
  __int128 v11;
  __int128 v12;
  __int16 v14;

  v14 = a5;
  *(_QWORD *)a1 = off_250AE7298;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_239772C1C(a2, a3, a4, a1 + 16);
  v9 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v10 = *(_DWORD *)(a4 + 28) == 0;
  else
    v10 = 1;
  if (v10)
  {
    v11 = *(_OWORD *)a4;
    v12 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v9 = v11;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    sub_239772E6C((uint64_t)a2, v8, (uint64_t)v9);
  }
  sub_239773364(a1, &v14);
  return a1;
}

void sub_239773320(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23977333C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239773590(v1);
  _Unwind_Resume(a1);
}

void sub_239773350(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239773364(uint64_t a1, _WORD *a2)
{
  uint64_t result;
  uint64_t v5;
  __n128 v6;
  int v7;
  _WORD *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  _WORD *v13;
  _WORD *v14;
  int v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  _WORD *v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  _QWORD v26[3];
  _QWORD v27[2];
  uint64_t v28;
  char v29;
  _QWORD v30[3];
  _DWORD v31[5];
  unsigned int v32;
  unsigned int v33;
  unint64_t v34[2];

  result = sub_239773B94(a1);
  if ((result & 1) == 0)
  {
    sub_239773CB4(a1, v26);
    sub_239773D60(a1, (uint64_t)&v19);
    v27[0] = &v19;
    v27[1] = a2;
    if (v23 == 1)
    {
      if (v24 == v20)
      {
        sub_2397915C0(v27, v5, v6);
      }
      else
      {
        v28 = v20;
        v30[0] = &v29;
        v30[1] = &v28;
        v30[2] = a2;
        if (v20 && v21 && v22)
        {
          v31[0] = 0;
          v31[1] = v20 - 1;
          v31[2] = 1;
          v31[3] = v21 - 1;
          v33 = v25;
          v16 = (unint64_t)v19;
          v34[0] = 0;
          v34[1] = 0;
          v31[4] = v24;
          v32 = v22 - 1;
          if (v22 != 1)
          {
            v17 = 0;
            do
            {
              v6.n128_u64[0] = sub_239791874((uint64_t)v31, v34, (uint64_t)v30, v16, v6);
              v16 += 2 * v33;
              ++v17;
            }
            while (v17 < v32);
          }
          sub_239791874((uint64_t)v31, v34, (uint64_t)v30, v16, v6);
        }
      }
    }
    else if (v20 && v21 && v22)
    {
      v7 = v21 - 1;
      v8 = v19;
      v9 = 2 * v24;
      v10 = v22 - 1;
      if (v22 != 1)
      {
        v11 = v25;
        if (v21 == 1)
        {
          v18 = 2 * v25;
          do
          {
            *v8 = *a2;
            v8[1] = *a2;
            v8 = (_WORD *)((char *)v8 + v18);
            --v10;
          }
          while (v10);
        }
        else
        {
          v12 = 0;
          v13 = v19 + 1;
          do
          {
            v14 = v13;
            v15 = v7;
            do
            {
              *(v14 - 1) = *a2;
              *v14 = *a2;
              v14 = (_WORD *)((char *)v14 + v9);
              --v15;
            }
            while (v15);
            *(v14 - 1) = *a2;
            *v14 = *a2;
            v8 += v11;
            ++v12;
            v13 += v11;
          }
          while (v12 != v10);
        }
      }
      for (; v7; --v7)
      {
        *v8 = *a2;
        v8[1] = *a2;
        v8 = (_WORD *)((char *)v8 + v9);
      }
      *v8 = *a2;
      v8[1] = *a2;
    }
    return sub_23979B610(v26);
  }
  return result;
}

void sub_239773568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

void sub_23977357C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239773590(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7298;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_2397735F8(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  _OWORD *v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[3];
  _BYTE v17[48];
  _QWORD v18[3];
  uint64_t v19[2];

  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE7298;
  v9 = a1 + 16;
  sub_239772C1C(a2, a3, a4, a1 + 16);
  v10 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v11 = *(_DWORD *)(a4 + 28) == 0;
  else
    v11 = 1;
  if (v11)
  {
    v12 = *(_OWORD *)a4;
    v13 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v10 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  else
  {
    sub_239772E6C((uint64_t)a2, v9, (uint64_t)v10);
  }
  v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  v16[2] = a5[2];
  if (!sub_239773B94(a1))
  {
    sub_239773CB4(a1, v18);
    sub_239773D60(a1, (uint64_t)v17);
    v19[0] = (uint64_t)v16;
    v19[1] = (uint64_t)v17;
    sub_2397919D8(v19);
    sub_23979B610(v18);
  }
  return a1;
}

void sub_2397736E8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239773704(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23979B610(v2 - 88);
  sub_239773590(v1);
  _Unwind_Resume(a1);
}

void sub_239773720(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239773734(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239773590(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239773748(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)a1 = off_250AE7298;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  sub_239773868(a2, a1 + 48);
  v9 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 72))
  {
    if (v9)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v9 ^ (*(_DWORD *)(a1 + 76) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_239773838(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23977384C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_239773868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  __int128 v15;
  _BYTE v16[12];

  *(_QWORD *)&v16[4] = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v15);
  v6 = v15;
  if (*((_QWORD *)&v15 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  if (!(_QWORD)v6)
    sub_239EC27A4(v4, v5);
  v9 = sub_23979A918(a1);
  v11 = v16;
  if ((int)v9 <= 1380411456)
  {
    if ((_DWORD)v9 == 843264104)
    {
      v12 = 1;
    }
    else
    {
      if ((_DWORD)v9 != 1278226536)
        goto LABEL_19;
      v12 = 0;
    }
  }
  else
  {
    switch((_DWORD)v9)
    {
      case 0x52476841:
        v12 = 2;
        break;
      case 0x68646570:
        v12 = 4;
        break;
      case 0x68646973:
        v12 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v11 = &v16[4 * v12 - 12];
LABEL_19:
  if (v11 - (_BYTE *)&v15 == 20)
    sub_239EC27FC(v9, v10);
  sub_23978E378(a1);
  result = sub_23979AE34(a1, 2, 2, 0, 0);
  *(_QWORD *)a2 = __PAIR64__(result, 2);
  *(_DWORD *)(a2 + 8) = HIDWORD(result);
  LODWORD(v15) = 1;
  *(_QWORD *)((char *)&v15 + 4) = v14;
  *(_QWORD *)(a2 + 12) = v15;
  *(_DWORD *)(a2 + 20) = HIDWORD(v14);
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v14;
  return result;
}

void sub_239773A20(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239773A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_239773B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_239773B94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_239773CA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239773CB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_2397731C0((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_239773D4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239773D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_239773B94(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 2;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 2 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x1FFFFFFFFLL | ((unint64_t)(v8 >> 1) << 33);
    v10 = __PAIR64__(DWORD1(v24), 2);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239772FB8((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239773F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239773F44@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_2397731C0((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_239773FF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239774004@<X0>(_QWORD *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int *v6;
  BOOL v7;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  v6 = (unsigned int *)(a3 + 24);
  if (*(_DWORD *)(a3 + 24))
    v7 = *(_DWORD *)(a3 + 28) == 0;
  else
    v7 = 1;
  if (v7)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, v6, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_23977421C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239774238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239774254@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD v7[3];
  _BYTE v8[8];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  switch((int)result)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_10;
      sub_23979C50C(a2, v7);
      sub_2397743A0((uint64_t)v7, (uint64_t)v8);
      v4 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v4;
      *(_QWORD *)(a3 + 32) = v11;
      return sub_23979B260(v7);
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_10;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_10;
LABEL_7:
      result = sub_2397743A0(a2, (uint64_t)v8);
      v5 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v5;
      *(_QWORD *)(a3 + 32) = v11;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_10:
        sub_23964B158();
      sub_2397745A8((uint64_t *)a2, v7);
      sub_2397743A0((uint64_t)v7, (uint64_t)v8);
      v6 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v6;
      *(_QWORD *)(a3 + 32) = v11;
      result = (uint64_t)sub_23979BCF4(v7);
      break;
    default:
      return result;
  }
  return result;
}

void sub_239774378(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23977438C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_2397743A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  size_t result;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v21);
  v7 = v21;
  v6 = v22;
  if (v22)
  {
    p_shared_owners = (unint64_t *)&v22->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  v10 = sub_23979A918(a1);
  v12 = (char *)&v23 + 4;
  if ((int)v10 <= 1380411456)
  {
    if ((_DWORD)v10 == 843264104)
    {
      v13 = 1;
    }
    else
    {
      if ((_DWORD)v10 != 1278226536)
        goto LABEL_19;
      v13 = 0;
    }
  }
  else
  {
    switch((_DWORD)v10)
    {
      case 0x52476841:
        v13 = 2;
        break;
      case 0x68646570:
        v13 = 4;
        break;
      case 0x68646973:
        v13 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v12 = (char *)&v21 + 4 * v13;
LABEL_19:
  if (v12 - (char *)&v21 == 20)
    sub_239EC27FC(v10, v11);
  sub_23978F3B4(a1);
  result = sub_23979ABAC(a1, 4u, 0, 0, &v21);
  if (HIDWORD(v21))
    v16 = (_DWORD)v21 == 0;
  else
    v16 = 1;
  v17 = v21;
  v18 = v22;
  if (v16)
    v17 = 0;
  *(_QWORD *)&v24[4] = v17;
  *(_DWORD *)v24 = 4;
  v19 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v22;
  v20 = *(_QWORD *)v24;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v19;
  *(_DWORD *)(a2 + 16) = HIDWORD(v17);
  *(_QWORD *)(a2 + 20) = v20;
  *(_DWORD *)(a2 + 28) = HIDWORD(v18);
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v18;
  if (HIDWORD(v18) * HIDWORD(v17) == -1)
    sub_239EBFBC4(result, v15);
  return result;
}

void sub_23977459C(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_2397745A8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_23977464C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239774664(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, __int16 a5)
{
  uint64_t v8;
  _OWORD *v9;
  BOOL v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __n128 v14;
  __int16 v16;
  _BYTE v17[48];
  _QWORD v18[3];
  uint64_t v19[2];

  v16 = a5;
  *(_QWORD *)a1 = off_250AE7328;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_239774004(a2, a3, a4, a1 + 16);
  v9 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v10 = *(_DWORD *)(a4 + 28) == 0;
  else
    v10 = 1;
  if (v10)
  {
    v11 = *(_OWORD *)a4;
    v12 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v9 = v11;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    sub_239774254((uint64_t)a2, v8, (uint64_t)v9);
  }
  if (!sub_239774DA4(a1))
  {
    sub_239774EC4(a1, v18);
    sub_239774F70(a1, (uint64_t)v17);
    v19[0] = (uint64_t)v17;
    v19[1] = (uint64_t)&v16;
    sub_2397920EC(v19, v13, v14);
    sub_23979B610(v18);
  }
  return a1;
}

void sub_23977473C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2;
  sub_239769C14(v3);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23977475C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  sub_23979B610(va);
  sub_2397747A0(v8);
  _Unwind_Resume(a1);
}

void sub_239774778(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23977478C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2397747A0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397747A0(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7328;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239774808(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  _OWORD *v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[3];
  _BYTE v17[48];
  _QWORD v18[3];
  _QWORD v19[2];

  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE7328;
  v9 = a1 + 16;
  sub_239774004(a2, a3, a4, a1 + 16);
  v10 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v11 = *(_DWORD *)(a4 + 28) == 0;
  else
    v11 = 1;
  if (v11)
  {
    v12 = *(_OWORD *)a4;
    v13 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v10 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  else
  {
    sub_239774254((uint64_t)a2, v9, (uint64_t)v10);
  }
  v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  v16[2] = a5[2];
  if (!sub_239774DA4(a1))
  {
    sub_239774EC4(a1, v18);
    sub_239774F70(a1, (uint64_t)v17);
    v19[0] = v16;
    v19[1] = v17;
    sub_239792420(v19);
    sub_23979B610(v18);
  }
  return a1;
}

void sub_2397748F8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239774914(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23979B610(v2 - 88);
  sub_2397747A0(v1);
  _Unwind_Resume(a1);
}

void sub_239774930(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239774944(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2397747A0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239774958(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)a1 = off_250AE7328;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  sub_239774A78(a2, a1 + 48);
  v9 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 72))
  {
    if (v9)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v9 ^ (*(_DWORD *)(a1 + 76) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_239774A48(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239774A5C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_239774A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  __int128 v15;
  _BYTE v16[12];

  *(_QWORD *)&v16[4] = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v15);
  v6 = v15;
  if (*((_QWORD *)&v15 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  if (!(_QWORD)v6)
    sub_239EC27A4(v4, v5);
  v9 = sub_23979A918(a1);
  v11 = v16;
  if ((int)v9 <= 1380411456)
  {
    if ((_DWORD)v9 == 843264104)
    {
      v12 = 1;
    }
    else
    {
      if ((_DWORD)v9 != 1278226536)
        goto LABEL_19;
      v12 = 0;
    }
  }
  else
  {
    switch((_DWORD)v9)
    {
      case 0x52476841:
        v12 = 2;
        break;
      case 0x68646570:
        v12 = 4;
        break;
      case 0x68646973:
        v12 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v11 = &v16[4 * v12 - 12];
LABEL_19:
  if (v11 - (_BYTE *)&v15 == 20)
    sub_239EC27FC(v9, v10);
  sub_23978F3B4(a1);
  result = sub_23979AE34(a1, 2, 4, 0, 0);
  *(_QWORD *)a2 = __PAIR64__(result, 4);
  *(_DWORD *)(a2 + 8) = HIDWORD(result);
  LODWORD(v15) = 1;
  *(_QWORD *)((char *)&v15 + 4) = v14;
  *(_QWORD *)(a2 + 12) = v15;
  *(_DWORD *)(a2 + 20) = HIDWORD(v14);
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v14;
  return result;
}

void sub_239774C30(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239774C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_239774D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_239774DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_239774EB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239774EC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_2397745A8((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_239774F5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239774F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_239774DA4(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 4;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(DWORD1(v24), 4);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_2397743A0((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239775140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239775154@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_2397745A8((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_239775200(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239775214@<X0>(_QWORD *result@<X0>, int a2@<W1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  BOOL v6;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  if (*a3)
    v6 = a3[1] == 0;
  else
    v6 = 1;
  if (v6)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, a3, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_23977542C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239775448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double sub_239775464(int a1, uint64_t a2)
{
  double result;
  double v3;
  _QWORD v4[3];
  uint64_t v5;
  __int128 v6;

  switch(a1)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_11;
      sub_23979C50C(a2, v4);
      sub_2397755A4((uint64_t)v4, &v5);
      v3 = *(double *)&v6;
      sub_23979B260(v4);
      goto LABEL_10;
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_11;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_11;
LABEL_7:
      sub_2397755A4(a2, &v5);
      result = *(double *)&v6;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_11:
        sub_23964B158();
      sub_239775834((uint64_t *)a2, v4);
      sub_2397755A4((uint64_t)v4, &v5);
      v3 = *(double *)&v6;
      sub_23979BCF4(v4);
LABEL_10:
      result = v3;
      break;
    default:
      return result;
  }
  return result;
}

void sub_23977557C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239775590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_2397755A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  size_t result;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_23979D0F0(a1, &v23);
  v7 = v23;
  v6 = v24;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  v10 = sub_23979A918(a1);
  v12 = (char *)&v25 + 4;
  if ((int)v10 <= 1380410944)
  {
    if ((_DWORD)v10 == 843264102)
    {
      v13 = 1;
    }
    else
    {
      if ((_DWORD)v10 != 1278226534)
        goto LABEL_19;
      v13 = 0;
    }
  }
  else
  {
    switch((_DWORD)v10)
    {
      case 0x52476641:
        v13 = 2;
        break;
      case 0x66646570:
        v13 = 4;
        break;
      case 0x66646973:
        v13 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v12 = (char *)&v23 + 4 * v13;
LABEL_19:
  if (v12 - (char *)&v23 == 20)
    sub_239EC2828(v10, v11);
  v14 = sub_23979A918(a1);
  v16 = (char *)&v26;
  if ((int)v14 > 1717855599)
  {
    if ((int)v14 > 1751410031)
    {
      if ((_DWORD)v14 == 1751410032)
      {
        v17 = 6;
      }
      else
      {
        if ((_DWORD)v14 != 1751411059)
          goto LABEL_40;
        v17 = 4;
      }
    }
    else if ((_DWORD)v14 == 1717855600)
    {
      v17 = 7;
    }
    else
    {
      if ((_DWORD)v14 != 1717856627)
        goto LABEL_40;
      v17 = 5;
    }
  }
  else if ((int)v14 > 1278226535)
  {
    if ((_DWORD)v14 == 1278226536)
    {
      v17 = 2;
    }
    else
    {
      if ((_DWORD)v14 != 1647392359)
        goto LABEL_40;
      v17 = 1;
    }
  }
  else if ((_DWORD)v14 == 1278226488)
  {
    v17 = 0;
  }
  else
  {
    if ((_DWORD)v14 != 1278226534)
      goto LABEL_40;
    v17 = 3;
  }
  v16 = (char *)&v23 + 4 * v17;
LABEL_40:
  if (v16 - (char *)&v23 == 32)
    sub_239EC2778(v14, v15);
  result = sub_23979AC64(a1, 1u, 0, 0, &v23);
  if (HIDWORD(v23))
    v20 = (_DWORD)v23 == 0;
  else
    v20 = 1;
  v21 = v23;
  v22 = v24;
  if (v20)
    v21 = 0;
  *a2 = v25;
  a2[1] = v21;
  a2[2] = v22;
  if (HIDWORD(v21) * HIDWORD(v22) == -1)
    sub_239EBFBC4(result, v19);
  return result;
}

void sub_239775834(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_2397758D8(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397758F0(uint64_t a1, _QWORD *a2, int a3, unsigned int *a4, float a5)
{
  int v6;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  float v13;

  v6 = (int)a2;
  v13 = a5;
  *(_QWORD *)a1 = off_250AE73B8;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_239775214(a2, a3, a4, a1 + 16);
  if (*a4)
    v9 = a4[1] == 0;
  else
    v9 = 1;
  if (v9)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)a4;
  }
  else
  {
    sub_239775464(v6, v8);
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
  }
  sub_2397759D4(a1, &v13);
  return a1;
}

void sub_239775990(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2397759AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239775B08(v1);
  _Unwind_Resume(a1);
}

void sub_2397759C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397759D4(uint64_t a1, _DWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _DWORD *v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _DWORD *v13;
  int v14;
  uint64_t v15;
  _DWORD *v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  _QWORD v21[3];
  _QWORD v22[2];

  result = sub_2397762B0(a1);
  if ((result & 1) == 0)
  {
    sub_2397763D0(a1, v21);
    sub_23977647C(a1, &v16);
    v22[0] = &v16;
    v22[1] = a2;
    v6 = v19;
    if (v19 == 1)
    {
      sub_23957F848(v22, v5);
      return sub_23979B610(v21);
    }
    if (!v17 || !v18)
      return sub_23979B610(v21);
    v7 = v17 - 1;
    v8 = v16;
    v9 = v18 - 1;
    if (v18 != 1)
    {
      v10 = v20;
      if (v17 == 1)
      {
        do
        {
          *v8 = *a2;
          v8 += v10;
          --v9;
        }
        while (v9);
LABEL_17:
        *v8 = *a2;
        return sub_23979B610(v21);
      }
      v11 = 0;
      v12 = 4 * v20;
      do
      {
        v13 = v8;
        v14 = v7;
        do
        {
          *v13 = *a2;
          v13 += v6;
          --v14;
        }
        while (v14);
        *v13 = *a2;
        v8 = (_DWORD *)((char *)v8 + v12);
        ++v11;
      }
      while (v11 != v9);
    }
    if (v7)
    {
      v15 = 4 * v6;
      do
      {
        *v8 = *a2;
        v8 = (_DWORD *)((char *)v8 + v15);
        --v7;
      }
      while (v7);
    }
    goto LABEL_17;
  }
  return result;
}

void sub_239775AF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239775B08(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE73B8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239775B70(uint64_t a1, _QWORD *a2, int a3, unsigned int *a4, __int128 *a5)
{
  int v7;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;

  v7 = (int)a2;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE73B8;
  v9 = a1 + 16;
  sub_239775214(a2, a3, a4, a1 + 16);
  if (*a4)
    v10 = a4[1] == 0;
  else
    v10 = 1;
  if (v10)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)a4;
  }
  else
  {
    sub_239775464(v7, v9);
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
  }
  v14 = *a5;
  v15 = *((_QWORD *)a5 + 2);
  sub_239775C6C(a1, (uint64_t)&v14);
  return a1;
}

void sub_239775C28(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239775C44(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239775B08(v1);
  _Unwind_Resume(a1);
}

void sub_239775C58(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239775C6C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v8;
  int v9;
  int v10;
  _DWORD *v11;
  _DWORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  unsigned int v25;
  unsigned int v26;
  _QWORD v27[3];
  _QWORD v28[2];

  result = sub_2397762B0(a1);
  if ((result & 1) == 0)
  {
    sub_2397763D0(a1, v27);
    sub_23977647C(a1, v24);
    v28[0] = a2;
    v28[1] = v24;
    v5 = *(unsigned int *)(a2 + 16);
    v6 = v25;
    if ((_DWORD)v5 == 1 && v25 == 1)
    {
      sub_239717504(v28);
      return sub_23979B610(v27);
    }
    v8 = *(_DWORD *)(a2 + 8);
    if (!v8)
      return sub_23979B610(v27);
    v9 = *(_DWORD *)(a2 + 12);
    if (!v9)
      return sub_23979B610(v27);
    v10 = v8 - 1;
    v11 = *(_DWORD **)a2;
    v12 = (_DWORD *)v24[0];
    v13 = v9 - 1;
    if (v13)
    {
      v14 = v26;
      v15 = *(unsigned int *)(a2 + 20);
      if (!v10)
      {
        do
        {
          *v12 = *v11;
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
LABEL_20:
        *v12 = *v11;
        return sub_23979B610(v27);
      }
      v16 = 0;
      v17 = 4 * v15;
      v18 = 4 * v26;
      do
      {
        v19 = v12;
        v20 = v11;
        v21 = v10;
        do
        {
          *v19 = *v20;
          v20 += v5;
          v19 += v6;
          --v21;
        }
        while (v21);
        *v19 = *v20;
        v11 = (_DWORD *)((char *)v11 + v17);
        v12 = (_DWORD *)((char *)v12 + v18);
        ++v16;
      }
      while (v16 != v13);
    }
    if (v10)
    {
      v22 = 4 * v5;
      v23 = 4 * v6;
      do
      {
        *v12 = *v11;
        v11 = (_DWORD *)((char *)v11 + v22);
        v12 = (_DWORD *)((char *)v12 + v23);
        --v10;
      }
      while (v10);
    }
    goto LABEL_20;
  }
  return result;
}

void sub_239775DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239775DD4(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_QWORD *)a1 = off_250AE73B8;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = sub_239775EF4(a2);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 48))
  {
    if (v10)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v10 ^ (*(_DWORD *)(a1 + 52) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_239775EC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239775ED8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_239775EF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  std::__shared_weak_count *v18;
  int v19;
  uint64_t v20;

  v2 = sub_23979D0F0(a1, &v17);
  v5 = v17;
  v4 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  if (!v5)
    sub_239EC27A4(v2, v3);
  v8 = sub_23979A918(a1);
  v10 = (char *)&v19;
  if ((int)v8 <= 1380410944)
  {
    if ((_DWORD)v8 == 843264102)
    {
      v11 = 1;
    }
    else
    {
      if ((_DWORD)v8 != 1278226534)
        goto LABEL_19;
      v11 = 0;
    }
  }
  else
  {
    switch((_DWORD)v8)
    {
      case 0x52476641:
        v11 = 2;
        break;
      case 0x66646570:
        v11 = 4;
        break;
      case 0x66646973:
        v11 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v10 = (char *)&v17 + 4 * v11;
LABEL_19:
  if (v10 - (char *)&v17 == 20)
    sub_239EC2828(v8, v9);
  v12 = sub_23979A918(a1);
  v14 = (char *)&v20;
  if ((int)v12 > 1717855599)
  {
    if ((int)v12 > 1751410031)
    {
      if ((_DWORD)v12 == 1751410032)
      {
        v15 = 6;
      }
      else
      {
        if ((_DWORD)v12 != 1751411059)
          goto LABEL_40;
        v15 = 4;
      }
    }
    else if ((_DWORD)v12 == 1717855600)
    {
      v15 = 7;
    }
    else
    {
      if ((_DWORD)v12 != 1717856627)
        goto LABEL_40;
      v15 = 5;
    }
  }
  else if ((int)v12 > 1278226535)
  {
    if ((_DWORD)v12 == 1278226536)
    {
      v15 = 2;
    }
    else
    {
      if ((_DWORD)v12 != 1647392359)
        goto LABEL_40;
      v15 = 1;
    }
  }
  else if ((_DWORD)v12 == 1278226488)
  {
    v15 = 0;
  }
  else
  {
    if ((_DWORD)v12 != 1278226534)
      goto LABEL_40;
    v15 = 3;
  }
  v14 = (char *)&v17 + 4 * v15;
LABEL_40:
  if (v14 - (char *)&v17 == 32)
    sub_239EC2778(v12, v13);
  return sub_23979AE34(a1, 4, 1, 0, 0);
}

_QWORD *sub_239776148(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_23977629C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_2397762B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_2397763BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397763D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_239775834((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_239776468(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977647C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;

  result = sub_2397762B0(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v10;
        v23 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v18;
        v23 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v14;
        v23 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v21);
        break;
      default:
        sub_23964B158();
    }
    sub_2397755A4((uint64_t)&v21, a2);
    return (uint64_t)sub_23979BCF4(&v21);
  }
  return result;
}

void sub_2397765E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397765FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_239775834((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_2397766A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397766BC@<X0>(_QWORD *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int *v6;
  BOOL v7;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  v6 = (unsigned int *)(a3 + 24);
  if (*(_DWORD *)(a3 + 24))
    v7 = *(_DWORD *)(a3 + 28) == 0;
  else
    v7 = 1;
  if (v7)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, v6, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_2397768D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397768F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23977690C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD v7[3];
  _BYTE v8[8];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  switch((int)result)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_10;
      sub_23979C50C(a2, v7);
      sub_239776A58((uint64_t)v7, (uint64_t)v8);
      v4 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v4;
      *(_QWORD *)(a3 + 32) = v11;
      return sub_23979B260(v7);
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_10;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_10;
LABEL_7:
      result = sub_239776A58(a2, (uint64_t)v8);
      v5 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v5;
      *(_QWORD *)(a3 + 32) = v11;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_10:
        sub_23964B158();
      sub_239776C60((uint64_t *)a2, v7);
      sub_239776A58((uint64_t)v7, (uint64_t)v8);
      v6 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v6;
      *(_QWORD *)(a3 + 32) = v11;
      result = (uint64_t)sub_23979BCF4(v7);
      break;
    default:
      return result;
  }
  return result;
}

void sub_239776A30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239776A44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_239776A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  size_t result;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v21);
  v7 = v21;
  v6 = v22;
  if (v22)
  {
    p_shared_owners = (unint64_t *)&v22->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  v10 = sub_23979A918(a1);
  v12 = (char *)&v23 + 4;
  if ((int)v10 <= 1380410944)
  {
    if ((_DWORD)v10 == 843264102)
    {
      v13 = 1;
    }
    else
    {
      if ((_DWORD)v10 != 1278226534)
        goto LABEL_19;
      v13 = 0;
    }
  }
  else
  {
    switch((_DWORD)v10)
    {
      case 0x52476641:
        v13 = 2;
        break;
      case 0x66646570:
        v13 = 4;
        break;
      case 0x66646973:
        v13 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v12 = (char *)&v21 + 4 * v13;
LABEL_19:
  if (v12 - (char *)&v21 == 20)
    sub_239EC2828(v10, v11);
  sub_23978E378(a1);
  result = sub_23979AC64(a1, 2u, 0, 0, &v21);
  if (HIDWORD(v21))
    v16 = (_DWORD)v21 == 0;
  else
    v16 = 1;
  v17 = v21;
  v18 = v22;
  if (v16)
    v17 = 0;
  *(_QWORD *)&v24[4] = v17;
  *(_DWORD *)v24 = 2;
  v19 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v22;
  v20 = *(_QWORD *)v24;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v19;
  *(_DWORD *)(a2 + 16) = HIDWORD(v17);
  *(_QWORD *)(a2 + 20) = v20;
  *(_DWORD *)(a2 + 28) = HIDWORD(v18);
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v18;
  if (HIDWORD(v18) * HIDWORD(v17) == -1)
    sub_239EBFBC4(result, v15);
  return result;
}

void sub_239776C54(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_239776C60(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_239776D04(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239776D1C(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, float a5)
{
  uint64_t v8;
  _OWORD *v9;
  BOOL v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  float v15;
  _BYTE v16[48];
  _QWORD v17[3];
  uint64_t v18[2];

  v15 = a5;
  *(_QWORD *)a1 = off_250AE7448;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_2397766BC(a2, a3, a4, a1 + 16);
  v9 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v10 = *(_DWORD *)(a4 + 28) == 0;
  else
    v10 = 1;
  if (v10)
  {
    v11 = *(_OWORD *)a4;
    v12 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v9 = v11;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    sub_23977690C((uint64_t)a2, v8, (uint64_t)v9);
  }
  if (!sub_23977745C(a1))
  {
    sub_23977757C(a1, v17);
    sub_239777628(a1, (uint64_t)v16);
    v18[0] = (uint64_t)v16;
    v18[1] = (uint64_t)&v15;
    sub_23979263C(v18, v13);
    sub_23979B610(v17);
  }
  return a1;
}

void sub_239776DF4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2;
  sub_239769C14(v3);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239776E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  sub_23979B610(va);
  sub_239776E58(v8);
  _Unwind_Resume(a1);
}

void sub_239776E30(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239776E44(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239776E58(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239776E58(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7448;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239776EC0(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  _OWORD *v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[3];
  _BYTE v17[48];
  _QWORD v18[3];
  uint64_t v19[2];

  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE7448;
  v9 = a1 + 16;
  sub_2397766BC(a2, a3, a4, a1 + 16);
  v10 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v11 = *(_DWORD *)(a4 + 28) == 0;
  else
    v11 = 1;
  if (v11)
  {
    v12 = *(_OWORD *)a4;
    v13 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v10 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  else
  {
    sub_23977690C((uint64_t)a2, v9, (uint64_t)v10);
  }
  v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  v16[2] = a5[2];
  if (!sub_23977745C(a1))
  {
    sub_23977757C(a1, v18);
    sub_239777628(a1, (uint64_t)v17);
    v19[0] = (uint64_t)v16;
    v19[1] = (uint64_t)v17;
    sub_239792D70(v19);
    sub_23979B610(v18);
  }
  return a1;
}

void sub_239776FB0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239776FCC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23979B610(v2 - 88);
  sub_239776E58(v1);
  _Unwind_Resume(a1);
}

void sub_239776FE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239776FFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239776E58(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239777010(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)a1 = off_250AE7448;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  sub_239777130(a2, a1 + 48);
  v9 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 72))
  {
    if (v9)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v9 ^ (*(_DWORD *)(a1 + 76) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_239777100(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239777114(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_239777130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  __int128 v15;
  _BYTE v16[12];

  *(_QWORD *)&v16[4] = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v15);
  v6 = v15;
  if (*((_QWORD *)&v15 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  if (!(_QWORD)v6)
    sub_239EC27A4(v4, v5);
  v9 = sub_23979A918(a1);
  v11 = v16;
  if ((int)v9 <= 1380410944)
  {
    if ((_DWORD)v9 == 843264102)
    {
      v12 = 1;
    }
    else
    {
      if ((_DWORD)v9 != 1278226534)
        goto LABEL_19;
      v12 = 0;
    }
  }
  else
  {
    switch((_DWORD)v9)
    {
      case 0x52476641:
        v12 = 2;
        break;
      case 0x66646570:
        v12 = 4;
        break;
      case 0x66646973:
        v12 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v11 = &v16[4 * v12 - 12];
LABEL_19:
  if (v11 - (_BYTE *)&v15 == 20)
    sub_239EC2828(v9, v10);
  sub_23978E378(a1);
  result = sub_23979AE34(a1, 4, 2, 0, 0);
  *(_QWORD *)a2 = __PAIR64__(result, 2);
  *(_DWORD *)(a2 + 8) = HIDWORD(result);
  LODWORD(v15) = 1;
  *(_QWORD *)((char *)&v15 + 4) = v14;
  *(_QWORD *)(a2 + 12) = v15;
  *(_DWORD *)(a2 + 20) = HIDWORD(v14);
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v14;
  return result;
}

void sub_2397772E8(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397772F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_239777448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_23977745C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_239777568(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977757C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_239776C60((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_239777614(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239777628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23977745C(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 2;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 2 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x1FFFFFFFFLL | ((unint64_t)(v8 >> 1) << 33);
    v10 = __PAIR64__(DWORD1(v24), 2);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239776A58((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_2397777F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977780C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_239776C60((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_2397778B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397778CC@<X0>(_QWORD *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4;
  unsigned int *v6;
  BOOL v7;
  unsigned int v8;
  _BYTE __p[24];
  uint64_t (**v10)();
  __int128 v11;

  v4 = (int)result;
  v6 = (unsigned int *)(a3 + 24);
  if (*(_DWORD *)(a3 + 24))
    v7 = *(_DWORD *)(a3 + 28) == 0;
  else
    v7 = 1;
  if (v7)
  {
    if ((_DWORD)result == 3)
    {
      *(_QWORD *)a4 = 0;
      *(_QWORD *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 24) = 3;
      return result;
    }
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = &off_250AE94F0;
    v11 = 0uLL;
    v10 = &off_250AE94F0;
LABEL_16:
    *(_DWORD *)(a4 + 24) = 0;
  }
  else
  {
    if ((a2 - 1) > 0x25)
      v8 = 0;
    else
      v8 = dword_239EEF3F0[a2 - 1] | dword_239EEF358[a2 - 1];
    *(_QWORD *)__p = operator new(0x88uLL);
    *(_OWORD *)&__p[8] = xmmword_239EEAE10;
    strcpy(*(char **)__p, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/src/CVImage.cpp:51");
    sub_23979BD68((uint64_t)&v10, v6, v8, (uint64_t)__p, 0);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    switch(v4)
    {
      case 1:
        sub_23979C50C((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94B0;
        *(_DWORD *)(a4 + 24) = 1;
        sub_23979B260(__p);
        break;
      case 2:
        sub_23979C518((uint64_t)&v10, __p);
        *(_OWORD *)(a4 + 8) = *(_OWORD *)&__p[8];
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0;
        *(_QWORD *)a4 = &off_250AE94D0;
        *(_DWORD *)(a4 + 24) = 2;
        sub_23979B610(__p);
        break;
      case 3:
        sub_23979C524((uint64_t)&v10, __p);
        *(_OWORD *)a4 = *(_OWORD *)__p;
        *(_DWORD *)(a4 + 24) = 3;
        break;
      default:
        *(_QWORD *)a4 = &off_250AE94F0;
        *(_OWORD *)(a4 + 8) = v11;
        v11 = 0uLL;
        goto LABEL_16;
    }
  }
  return sub_23979BCF4(&v10);
}

void sub_239777AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239777B00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239777B1C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD v7[3];
  _BYTE v8[8];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  switch((int)result)
  {
    case 0:
      if (*(_DWORD *)(a2 + 24))
        goto LABEL_10;
      sub_23979C50C(a2, v7);
      sub_239777C68((uint64_t)v7, (uint64_t)v8);
      v4 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v4;
      *(_QWORD *)(a3 + 32) = v11;
      return sub_23979B260(v7);
    case 1:
      if (*(_DWORD *)(a2 + 24) != 1)
        goto LABEL_10;
      goto LABEL_7;
    case 2:
      if (*(_DWORD *)(a2 + 24) != 2)
        goto LABEL_10;
LABEL_7:
      result = sub_239777C68(a2, (uint64_t)v8);
      v5 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v5;
      *(_QWORD *)(a3 + 32) = v11;
      break;
    case 3:
      if (*(_DWORD *)(a2 + 24) != 3)
LABEL_10:
        sub_23964B158();
      sub_239777E70((uint64_t *)a2, v7);
      sub_239777C68((uint64_t)v7, (uint64_t)v8);
      v6 = v10;
      *(_OWORD *)a3 = v9;
      *(_OWORD *)(a3 + 16) = v6;
      *(_QWORD *)(a3 + 32) = v11;
      result = (uint64_t)sub_23979BCF4(v7);
      break;
    default:
      return result;
  }
  return result;
}

void sub_239777C40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239777C54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

size_t sub_239777C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  size_t result;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v21);
  v7 = v21;
  v6 = v22;
  if (v22)
  {
    p_shared_owners = (unint64_t *)&v22->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (!v7)
    sub_239EC12B4(v4, v5);
  v10 = sub_23979A918(a1);
  v12 = (char *)&v23 + 4;
  if ((int)v10 <= 1380410944)
  {
    if ((_DWORD)v10 == 843264102)
    {
      v13 = 1;
    }
    else
    {
      if ((_DWORD)v10 != 1278226534)
        goto LABEL_19;
      v13 = 0;
    }
  }
  else
  {
    switch((_DWORD)v10)
    {
      case 0x52476641:
        v13 = 2;
        break;
      case 0x66646570:
        v13 = 4;
        break;
      case 0x66646973:
        v13 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v12 = (char *)&v21 + 4 * v13;
LABEL_19:
  if (v12 - (char *)&v21 == 20)
    sub_239EC2828(v10, v11);
  sub_23978F3B4(a1);
  result = sub_23979AC64(a1, 4u, 0, 0, &v21);
  if (HIDWORD(v21))
    v16 = (_DWORD)v21 == 0;
  else
    v16 = 1;
  v17 = v21;
  v18 = v22;
  if (v16)
    v17 = 0;
  *(_QWORD *)&v24[4] = v17;
  *(_DWORD *)v24 = 4;
  v19 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v22;
  v20 = *(_QWORD *)v24;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v19;
  *(_DWORD *)(a2 + 16) = HIDWORD(v17);
  *(_QWORD *)(a2 + 20) = v20;
  *(_DWORD *)(a2 + 28) = HIDWORD(v18);
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v18;
  if (HIDWORD(v18) * HIDWORD(v17) == -1)
    sub_239EBFBC4(result, v15);
  return result;
}

void sub_239777E64(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_239777E70(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  sub_23979D2AC(a1, a2);
  sub_23979D0F0((uint64_t)a2, &v7);
  v4 = v7;
  v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
  {
    sub_239A444D4((uint64_t)"unknown file", 218, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
}

void sub_239777F14(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_23979BCF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239777F2C(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, float a5)
{
  uint64_t v8;
  _OWORD *v9;
  BOOL v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  float v15;
  _BYTE v16[48];
  _QWORD v17[3];
  uint64_t v18[2];

  v15 = a5;
  *(_QWORD *)a1 = off_250AE74D8;
  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  v8 = a1 + 16;
  sub_2397778CC(a2, a3, a4, a1 + 16);
  v9 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v10 = *(_DWORD *)(a4 + 28) == 0;
  else
    v10 = 1;
  if (v10)
  {
    v11 = *(_OWORD *)a4;
    v12 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v9 = v11;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    sub_239777B1C((uint64_t)a2, v8, (uint64_t)v9);
  }
  if (!sub_23977866C(a1))
  {
    sub_23977878C(a1, v17);
    sub_239778838(a1, (uint64_t)v16);
    v18[0] = (uint64_t)v16;
    v18[1] = (uint64_t)&v15;
    sub_2397932D0(v18, v13);
    sub_23979B610(v17);
  }
  return a1;
}

void sub_239778004(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2;
  sub_239769C14(v3);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239778024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  sub_23979B610(va);
  sub_239778068(v8);
  _Unwind_Resume(a1);
}

void sub_239778040(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239778054(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239778068(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239778068(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE74D8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_2397780D0(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  _OWORD *v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[3];
  _BYTE v17[48];
  _QWORD v18[3];
  _QWORD v19[2];

  *(_DWORD *)(a1 + 8) = (_DWORD)a2;
  *(_QWORD *)a1 = off_250AE74D8;
  v9 = a1 + 16;
  sub_2397778CC(a2, a3, a4, a1 + 16);
  v10 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)(a4 + 24))
    v11 = *(_DWORD *)(a4 + 28) == 0;
  else
    v11 = 1;
  if (v11)
  {
    v12 = *(_OWORD *)a4;
    v13 = *(_OWORD *)(a4 + 16);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a4 + 32);
    *v10 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  else
  {
    sub_239777B1C((uint64_t)a2, v9, (uint64_t)v10);
  }
  v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  v16[2] = a5[2];
  if (!sub_23977866C(a1))
  {
    sub_23977878C(a1, v18);
    sub_239778838(a1, (uint64_t)v17);
    v19[0] = v16;
    v19[1] = v17;
    sub_2397934CC((uint64_t)v19);
    sub_23979B610(v18);
  }
  return a1;
}

void sub_2397781C0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2397781DC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23979B610(v2 - 88);
  sub_239778068(v1);
  _Unwind_Resume(a1);
}

void sub_2397781F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23977820C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239778068(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239778220(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)a1 = off_250AE74D8;
  v4 = sub_23979C474(a2);
  v5 = v4 == 1;
  *(_QWORD *)(a1 + 16) = &off_250AE94F0;
  if (v4 == 2)
    v5 = 2;
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 32) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_DWORD *)(a1 + 40) = 0;
  sub_239778340(a2, a1 + 48);
  v9 = sub_23979D124(a2, 0);
  if (!*(_DWORD *)(a1 + 72))
  {
    if (v9)
      return a1;
LABEL_10:
    sub_239A444D4((uint64_t)"unknown file", 109, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (((v9 ^ (*(_DWORD *)(a1 + 76) == 0)) & 1) != 0)
    goto LABEL_10;
  return a1;
}

void sub_239778310(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239778324(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239769C14(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_239778340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  __int128 v15;
  _BYTE v16[12];

  *(_QWORD *)&v16[4] = *MEMORY[0x24BDAC8D0];
  v4 = sub_23979D0F0(a1, &v15);
  v6 = v15;
  if (*((_QWORD *)&v15 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v6 + 1) + 16))(*((_QWORD *)&v6 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v6 + 1));
    }
  }
  if (!(_QWORD)v6)
    sub_239EC27A4(v4, v5);
  v9 = sub_23979A918(a1);
  v11 = v16;
  if ((int)v9 <= 1380410944)
  {
    if ((_DWORD)v9 == 843264102)
    {
      v12 = 1;
    }
    else
    {
      if ((_DWORD)v9 != 1278226534)
        goto LABEL_19;
      v12 = 0;
    }
  }
  else
  {
    switch((_DWORD)v9)
    {
      case 0x52476641:
        v12 = 2;
        break;
      case 0x66646570:
        v12 = 4;
        break;
      case 0x66646973:
        v12 = 3;
        break;
      default:
        goto LABEL_19;
    }
  }
  v11 = &v16[4 * v12 - 12];
LABEL_19:
  if (v11 - (_BYTE *)&v15 == 20)
    sub_239EC2828(v9, v10);
  sub_23978F3B4(a1);
  result = sub_23979AE34(a1, 4, 4, 0, 0);
  *(_QWORD *)a2 = __PAIR64__(result, 4);
  *(_DWORD *)(a2 + 8) = HIDWORD(result);
  LODWORD(v15) = 1;
  *(_QWORD *)((char *)&v15 + 4) = v14;
  *(_QWORD *)(a2 + 12) = v15;
  *(_DWORD *)(a2 + 20) = HIDWORD(v14);
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v14;
  return result;
}

void sub_2397784F8(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239778504(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v4 = *(_QWORD *)(a1 + 24);
      v3 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v4;
      v22 = v3;
      if (v3)
      {
        v5 = (unint64_t *)(v3 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      break;
    case 1:
      v12 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v12;
      v22 = v11;
      if (v11)
      {
        v13 = (unint64_t *)(v11 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      break;
    case 2:
      v8 = *(_QWORD *)(a1 + 24);
      v7 = *(_QWORD *)(a1 + 32);
      v20 = &off_250AE94F0;
      v21 = v8;
      v22 = v7;
      if (v7)
      {
        v9 = (unint64_t *)(v7 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v20);
      break;
    default:
      sub_23964B158();
  }
  sub_23979D000((uint64_t)&v20, &v23);
  v15 = v24;
  v24 = 0uLL;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2399107E4(&v23);
  return sub_23979BCF4(&v20);
}

void sub_239778658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_23977866C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _BOOL8 v13;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;

  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v2 = *(_QWORD *)(a1 + 24);
      v1 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v2;
      v17 = v1;
      if (v1)
      {
        v3 = (unint64_t *)(v1 + 8);
        do
          v4 = __ldxr(v3);
        while (__stxr(v4 + 1, v3));
      }
      break;
    case 1:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v10;
      v17 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 2:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v15 = &off_250AE94F0;
      v16 = v6;
      v17 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v15);
      break;
    default:
      sub_23964B158();
  }
  v13 = sub_23979C580((uint64_t)&v15) == 0;
  sub_23979BCF4(&v15);
  return v13;
}

void sub_239778778(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977878C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  _QWORD v5[3];

  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_23979B368(a2, a1 + 16);
  if (v3 <= 1)
    return sub_23979C518(a1 + 16, a2);
  if (v3 != 3)
    sub_23964B158();
  sub_239777E70((uint64_t *)(a1 + 16), v5);
  sub_23979C518((uint64_t)v5, a2);
  return sub_23979BCF4(v5);
}

void sub_239778824(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239778838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23977866C(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 4;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(DWORD1(v24), 4);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239777C68((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239778A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239778A1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  _QWORD v6[3];

  v3 = a1 + 16;
  v4 = *(_DWORD *)(a1 + 40);
  switch(v4)
  {
    case 2:
      return sub_23979AED8(a2, v3);
    case 1:
      return sub_23979AFB8(a2, v3);
    case 0:
      return sub_23979C50C(a1 + 16, a2);
  }
  if (v4 != 3)
    sub_23964B158();
  sub_239777E70((uint64_t *)(a1 + 16), v6);
  sub_23979C50C((uint64_t)v6, a2);
  return sub_23979BCF4(v6);
}

void sub_239778AC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239778ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  _QWORD v10[3];
  _QWORD v11[3];

  *(_QWORD *)a1 = off_250AE7568;
  v3 = *(unsigned int *)(a2 + 8);
  LODWORD(v4) = *(_DWORD *)(a2 + 12);
  if (v4 <= 0x20)
    v4 = 32;
  else
    v4 = v4;
  *(_QWORD *)&v9 = *(_QWORD *)a2;
  *((_QWORD *)&v9 + 1) = v3 | (v4 << 32);
  *(_QWORD *)a1 = off_250AE6E18;
  *(_DWORD *)(a1 + 8) = 0;
  v5 = a1 + 16;
  sub_23976943C(0, 1, (unsigned int *)&v9, a1 + 16);
  if ((_DWORD)v9 && DWORD1(v9))
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v5, v10);
    sub_2397697CC((uint64_t)v10, v11);
    v6 = v11[1];
    v7 = v11[2];
    sub_23979B260(v10);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = v9;
  }
  *(_QWORD *)a1 = off_250AE7568;
  return a1;
}

void sub_239778BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  sub_23979B260(&a16);
  v19 = *(unsigned int *)(v16 + 40);
  if ((_DWORD)v19 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v19])(&a15, v17);
  *(_DWORD *)(v16 + 40) = -1;
  nullsub_4(v16);
  _Unwind_Resume(a1);
}

void sub_239778C0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239778C20(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;
  _QWORD v13[2];

  sub_23976A710(a2, v10);
  sub_239778FD0(a2, &v8);
  v11 = v8;
  v4 = *((_QWORD *)&v8 + 1);
  v12 = v9;
  v5 = v9;
  if (HIDWORD(v9) <= 0x20)
    v6 = 32;
  else
    v6 = HIDWORD(v9);
  *a1 = off_250AE7568;
  v13[0] = v4;
  v13[1] = v5 | (v6 << 32);
  sub_239769C6C((uint64_t)a1, 0, 1, (unsigned int *)v13, &v11);
  *a1 = off_250AE7568;
  return sub_23979B260(v10);
}

void sub_239778CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239778CCC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE6E18;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239778D34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (**v7)();
  int v8;
  uint64_t v9;
  unsigned int v10;
  __int128 v11;
  uint64_t v12;

  sub_239778C20(&v7, a2);
  v3 = v10;
  *(_DWORD *)(a1 + 8) = v8;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      *(_OWORD *)(a1 + 48) = v11;
      v7 = off_250AE6E18;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v12, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v12 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v12);
LABEL_6:
  v5 = v10;
  *(_OWORD *)(a1 + 48) = v11;
  v7 = off_250AE6E18;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v12, &v9);
LABEL_9:
  v10 = -1;
  nullsub_4(&v7);
  return a1;
}

void sub_239778E3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239778CCC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239778E50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;

  result = sub_23976A3C4(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v10;
        v23 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v18;
        v23 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v14;
        v23 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v21);
        break;
      default:
        sub_23964B158();
    }
    sub_2397697CC((uint64_t)&v21, a2);
    return (uint64_t)sub_23979BCF4(&v21);
  }
  return result;
}

void sub_239778FBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239778FD0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t (**v23)();
  uint64_t v24;
  uint64_t v25;

  result = sub_23976A3C4(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v10;
        v25 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v18;
        v25 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v14;
        v25 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v23);
        break;
      default:
        sub_23964B158();
    }
    sub_2397697CC((uint64_t)&v23, &v21);
    *a2 = v21;
    *(_OWORD *)(a2 + 1) = v22;
    return (uint64_t)sub_23979BCF4(&v23);
  }
  return result;
}

void sub_23977914C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239779160()
{
  return 1;
}

_UNKNOWN **sub_239779168()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_2397791D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[2];
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  __int128 v14;
  uint64_t v15;
  _QWORD v16[2];

  sub_23976A710(a1, v13);
  sub_239778FD0(a1, v10);
  sub_239778FD0(a1, &v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14 = v8;
  v15 = v9;
  *v4 = off_250AE7568;
  if (v12 <= 0x20)
    v6 = 32;
  else
    v6 = v12;
  v16[0] = v10[1];
  v16[1] = v11 | (unint64_t)(v6 << 32);
  sub_239769C6C((uint64_t)v4, 0, 1, (unsigned int *)v16, &v14);
  *v5 = off_250AE7568;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_2397792A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  MEMORY[0x23B83E31C](v8, 0x10A3C40A1F8E8FFLL);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_2397792CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_2397792E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397792F8(uint64_t a1, void *a2)
{
  return sub_239779304(a1, a1, a2);
}

_QWORD *sub_239779304(int a1, uint64_t a2, void *lpsrc)
{
  void *v5;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _BYTE *v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  _BYTE *v18;
  _QWORD v19[2];
  unsigned int v20;
  unsigned int v21;
  __int128 v22;
  uint64_t v23;
  _QWORD v24[2];

  v5 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7EF8, 0);
  if (v5)
    return (_QWORD *)sub_239778D34(a2, (uint64_t)v5);
  (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v19, lpsrc, 1);
  v7 = *(_QWORD *)(v19[0] + 16);
  v22 = *(_OWORD *)v19[0];
  v23 = v7;
  v19[0] = 0;
  MEMORY[0x23B83E31C]();
  result = (_QWORD *)sub_239778E50(a2, v19);
  v24[0] = &v22;
  v24[1] = v19;
  v8 = v23;
  v9 = v20;
  if ((_DWORD)v23 == 1 && v20 == 1)
    return sub_23978E2A0(v24);
  if (DWORD2(v22) && HIDWORD(v22))
  {
    v10 = DWORD2(v22) - 1;
    v11 = (_BYTE *)v22;
    v12 = (_BYTE *)v19[0];
    v13 = HIDWORD(v22) - 1;
    if (HIDWORD(v22) != 1)
    {
      v14 = v21;
      v15 = HIDWORD(v23);
      if (DWORD2(v22) == 1)
      {
        do
        {
          *v12 = *v11;
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
      }
      else
      {
        v16 = 0;
        do
        {
          v17 = v10;
          v18 = v11;
          result = v12;
          do
          {
            *(_BYTE *)result = *v18;
            v18 += v8;
            result = (_QWORD *)((char *)result + v9);
            --v17;
          }
          while (v17);
          *(_BYTE *)result = *v18;
          v11 += v15;
          v12 += v14;
          ++v16;
        }
        while (v16 != v13);
      }
    }
    for (; v10; --v10)
    {
      *v12 = *v11;
      v11 += v8;
      v12 += v9;
    }
    *v12 = *v11;
  }
  return result;
}

uint64_t sub_2397794B0(uint64_t a1)
{
  _QWORD v2[3];

  sub_239778E50(a1, v2);
  return v2[0];
}

double sub_2397794D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  if ((_DWORD)a2 != 1)
    sub_239EC2854(a1, a2);
  sub_239778E50(a1, &v6);
  v4 = operator new();
  result = *(double *)&v6;
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v7;
  *a3 = v4;
  return result;
}

double sub_239779538@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  if ((_DWORD)a2 != 1)
    sub_239EC2880(a1, a2);
  sub_239778FD0(a1, &v6);
  v4 = operator new();
  result = *(double *)&v6;
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v7;
  *a3 = v4;
  return result;
}

__int128 *sub_2397795A0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931E38))
  {
    v2 = sub_239797010();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931E20, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256931E30 = *((_QWORD *)v2 + 2);
      xmmword_256931E20 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931E20, &dword_23940C000);
    __cxa_guard_release(&qword_256931E38);
  }
  if (byte_256931E37 >= 0)
    return &xmmword_256931E20;
  else
    return (__int128 *)xmmword_256931E20;
}

void sub_239779660(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931E38);
  _Unwind_Resume(a1);
}

uint64_t sub_239779678@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_23976A4E4(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_23976A710(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23977977C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_2397797B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_2397797CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_239779808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977981C()
{
  return 65792;
}

uint64_t sub_23977982C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  _QWORD v10[3];
  _QWORD v11[3];

  *(_QWORD *)a1 = off_250AE75F8;
  v3 = *(unsigned int *)(a2 + 8);
  LODWORD(v4) = *(_DWORD *)(a2 + 12);
  if (v4 <= 0x10)
    v4 = 16;
  else
    v4 = v4;
  *(_QWORD *)&v9 = *(_QWORD *)a2;
  *((_QWORD *)&v9 + 1) = v3 | (v4 << 32);
  *(_QWORD *)a1 = off_250AE7058;
  *(_DWORD *)(a1 + 8) = 0;
  v5 = a1 + 16;
  sub_23976DDE4(0, 2, (unsigned int *)&v9, a1 + 16);
  if ((_DWORD)v9 && DWORD1(v9))
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v5, v10);
    sub_23976E174((uint64_t)v10, v11);
    v6 = v11[1];
    v7 = v11[2];
    sub_23979B260(v10);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = v9;
  }
  *(_QWORD *)a1 = off_250AE75F8;
  return a1;
}

void sub_239779908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  sub_23979B260(&a16);
  v19 = *(unsigned int *)(v16 + 40);
  if ((_DWORD)v19 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v19])(&a15, v17);
  *(_DWORD *)(v16 + 40) = -1;
  nullsub_4(v16);
  _Unwind_Resume(a1);
}

void sub_23977995C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239779970(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;
  _QWORD v13[2];

  sub_23976F19C(a2, v10);
  sub_239779D20(a2, &v8);
  v11 = v8;
  v4 = *((_QWORD *)&v8 + 1);
  v12 = v9;
  v5 = v9;
  if (HIDWORD(v9) <= 0x10)
    v6 = 16;
  else
    v6 = HIDWORD(v9);
  *a1 = off_250AE75F8;
  v13[0] = v4;
  v13[1] = v5 | (v6 << 32);
  sub_23976E728((uint64_t)a1, 0, 2, (unsigned int *)v13, &v11);
  *a1 = off_250AE75F8;
  return sub_23979B260(v10);
}

void sub_239779A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239779A1C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7058;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239779A84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (**v7)();
  int v8;
  uint64_t v9;
  unsigned int v10;
  __int128 v11;
  uint64_t v12;

  sub_239779970(&v7, a2);
  v3 = v10;
  *(_DWORD *)(a1 + 8) = v8;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      *(_OWORD *)(a1 + 48) = v11;
      v7 = off_250AE7058;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v12, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v12 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v12);
LABEL_6:
  v5 = v10;
  *(_OWORD *)(a1 + 48) = v11;
  v7 = off_250AE7058;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v12, &v9);
LABEL_9:
  v10 = -1;
  nullsub_4(&v7);
  return a1;
}

void sub_239779B8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239779A1C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239779BA0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;

  result = sub_23976EE50(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v10;
        v23 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v18;
        v23 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v14;
        v23 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v21);
        break;
      default:
        sub_23964B158();
    }
    sub_23976E174((uint64_t)&v21, a2);
    return (uint64_t)sub_23979BCF4(&v21);
  }
  return result;
}

void sub_239779D0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239779D20@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t (**v23)();
  uint64_t v24;
  uint64_t v25;

  result = sub_23976EE50(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v10;
        v25 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v18;
        v25 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v14;
        v25 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v23);
        break;
      default:
        sub_23964B158();
    }
    sub_23976E174((uint64_t)&v23, &v21);
    *a2 = v21;
    *(_OWORD *)(a2 + 1) = v22;
    return (uint64_t)sub_23979BCF4(&v23);
  }
  return result;
}

void sub_239779E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239779EB0()
{
  return 2;
}

_UNKNOWN **sub_239779EB8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_239779F28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[2];
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  __int128 v14;
  uint64_t v15;
  _QWORD v16[2];

  sub_23976F19C(a1, v13);
  sub_239779D20(a1, v10);
  sub_239779D20(a1, &v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14 = v8;
  v15 = v9;
  *v4 = off_250AE75F8;
  if (v12 <= 0x10)
    v6 = 16;
  else
    v6 = v12;
  v16[0] = v10[1];
  v16[1] = v11 | (unint64_t)(v6 << 32);
  sub_23976E728((uint64_t)v4, 0, 2, (unsigned int *)v16, &v14);
  *v5 = off_250AE75F8;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_239779FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  MEMORY[0x23B83E31C](v8, 0x10A3C40A1F8E8FFLL);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977A01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977A030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977A048(uint64_t a1, void *a2)
{
  return sub_23977A054(a1, a1, a2);
}

_QWORD *sub_23977A054(int a1, uint64_t a2, void *lpsrc)
{
  void *v5;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _WORD *v11;
  _WORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _WORD *v19;
  _WORD *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  unsigned int v25;
  unsigned int v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[2];

  v5 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7F10, 0);
  if (v5)
    return (_QWORD *)sub_239779A84(a2, (uint64_t)v5);
  (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v24, lpsrc, 2);
  v7 = *(_QWORD *)(v24[0] + 16);
  v27 = *(_OWORD *)v24[0];
  v28 = v7;
  v24[0] = 0;
  MEMORY[0x23B83E31C]();
  result = (_QWORD *)sub_239779BA0(a2, v24);
  v29[0] = &v27;
  v29[1] = v24;
  v8 = v28;
  v9 = v25;
  if ((_DWORD)v28 == 1 && v25 == 1)
    return sub_23978FC2C(v29);
  if (DWORD2(v27) && HIDWORD(v27))
  {
    v10 = DWORD2(v27) - 1;
    v11 = (_WORD *)v27;
    v12 = (_WORD *)v24[0];
    v13 = HIDWORD(v27) - 1;
    if (HIDWORD(v27) != 1)
    {
      v14 = v26;
      v15 = HIDWORD(v28);
      if (DWORD2(v27) == 1)
      {
        do
        {
          *v12 = *v11;
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
LABEL_20:
        *v12 = *v11;
        return result;
      }
      v16 = 0;
      v17 = 2 * HIDWORD(v28);
      v18 = 2 * v26;
      result = (_QWORD *)(2 * v25);
      do
      {
        v19 = v12;
        v20 = v11;
        v21 = v10;
        do
        {
          *v19 = *v20;
          v20 += v8;
          v19 = (_WORD *)((char *)result + (_QWORD)v19);
          --v21;
        }
        while (v21);
        *v19 = *v20;
        v11 = (_WORD *)((char *)v11 + v17);
        v12 = (_WORD *)((char *)v12 + v18);
        ++v16;
      }
      while (v16 != v13);
    }
    if (v10)
    {
      v22 = 2 * v8;
      v23 = 2 * v9;
      do
      {
        *v12 = *v11;
        v11 = (_WORD *)((char *)v11 + v22);
        v12 = (_WORD *)((char *)v12 + v23);
        --v10;
      }
      while (v10);
    }
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_23977A220(uint64_t a1)
{
  _QWORD v2[3];

  sub_239779BA0(a1, v2);
  return v2[0];
}

double sub_23977A244@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  if ((_DWORD)a2 != 2)
    sub_239EC2854(a1, a2);
  sub_239779BA0(a1, &v6);
  v4 = operator new();
  result = *(double *)&v6;
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v7;
  *a3 = v4;
  return result;
}

double sub_23977A2A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  if ((_DWORD)a2 != 2)
    sub_239EC2880(a1, a2);
  sub_239779D20(a1, &v6);
  v4 = operator new();
  result = *(double *)&v6;
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v7;
  *a3 = v4;
  return result;
}

__int128 *sub_23977A310()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931EF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931EF8))
  {
    v2 = sub_2397973C0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931EE0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256931EF0 = *((_QWORD *)v2 + 2);
      xmmword_256931EE0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931EE0, &dword_23940C000);
    __cxa_guard_release(&qword_256931EF8);
  }
  if (byte_256931EF7 >= 0)
    return &xmmword_256931EE0;
  else
    return (__int128 *)xmmword_256931EE0;
}

void sub_23977A3D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931EF8);
  _Unwind_Resume(a1);
}

uint64_t sub_23977A3E8@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_23976EF70(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_23976F19C(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23977A4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977A528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977A53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_23977A578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977A58C()
{
  return 65792;
}

uint64_t sub_23977A59C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  _QWORD v10[3];
  _QWORD v11[3];

  *(_QWORD *)a1 = off_250AE7688;
  v3 = *(unsigned int *)(a2 + 8);
  LODWORD(v4) = *(_DWORD *)(a2 + 12);
  if (v4 <= 0x10)
    v4 = 16;
  else
    v4 = v4;
  *(_QWORD *)&v9 = *(_QWORD *)a2;
  *((_QWORD *)&v9 + 1) = v3 | (v4 << 32);
  *(_QWORD *)a1 = off_250AE7208;
  *(_DWORD *)(a1 + 8) = 0;
  v5 = a1 + 16;
  sub_2397716A4(0, 3, (unsigned int *)&v9, a1 + 16);
  if ((_DWORD)v9 && DWORD1(v9))
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v5, v10);
    sub_239771A34((uint64_t)v10, v11);
    v6 = v11[1];
    v7 = v11[2];
    sub_23979B260(v10);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = v9;
  }
  *(_QWORD *)a1 = off_250AE7688;
  return a1;
}

void sub_23977A678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  sub_23979B260(&a16);
  v19 = *(unsigned int *)(v16 + 40);
  if ((_DWORD)v19 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v19])(&a15, v17);
  *(_DWORD *)(v16 + 40) = -1;
  nullsub_4(v16);
  _Unwind_Resume(a1);
}

void sub_23977A6CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23977A6E0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;
  _QWORD v13[2];

  sub_239772B5C(a2, v10);
  sub_23977AA90(a2, &v8);
  v11 = v8;
  v4 = *((_QWORD *)&v8 + 1);
  v12 = v9;
  v5 = v9;
  if (HIDWORD(v9) <= 0x10)
    v6 = 16;
  else
    v6 = HIDWORD(v9);
  *a1 = off_250AE7688;
  v13[0] = v4;
  v13[1] = v5 | (v6 << 32);
  sub_239771FFC((uint64_t)a1, 0, 3, (unsigned int *)v13, &v11);
  *a1 = off_250AE7688;
  return sub_23979B260(v10);
}

void sub_23977A778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977A78C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7208;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23977A7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (**v7)();
  int v8;
  uint64_t v9;
  unsigned int v10;
  __int128 v11;
  uint64_t v12;

  sub_23977A6E0(&v7, a2);
  v3 = v10;
  *(_DWORD *)(a1 + 8) = v8;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      *(_OWORD *)(a1 + 48) = v11;
      v7 = off_250AE7208;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v12, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v12 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v12);
LABEL_6:
  v5 = v10;
  *(_OWORD *)(a1 + 48) = v11;
  v7 = off_250AE7208;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v12, &v9);
LABEL_9:
  v10 = -1;
  nullsub_4(&v7);
  return a1;
}

void sub_23977A8FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23977A78C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977A910@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;

  result = sub_239772810(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v10;
        v23 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v18;
        v23 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v14;
        v23 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v21);
        break;
      default:
        sub_23964B158();
    }
    sub_239771A34((uint64_t)&v21, a2);
    return (uint64_t)sub_23979BCF4(&v21);
  }
  return result;
}

void sub_23977AA7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977AA90@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t (**v23)();
  uint64_t v24;
  uint64_t v25;

  result = sub_239772810(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v10;
        v25 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v18;
        v25 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v14;
        v25 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v23);
        break;
      default:
        sub_23964B158();
    }
    sub_239771A34((uint64_t)&v23, &v21);
    *a2 = v21;
    *(_OWORD *)(a2 + 1) = v22;
    return (uint64_t)sub_23979BCF4(&v23);
  }
  return result;
}

void sub_23977AC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977AC20()
{
  return 3;
}

_UNKNOWN **sub_23977AC28()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_23977AC98@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[2];
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  __int128 v14;
  uint64_t v15;
  _QWORD v16[2];

  sub_239772B5C(a1, v13);
  sub_23977AA90(a1, v10);
  sub_23977AA90(a1, &v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14 = v8;
  v15 = v9;
  *v4 = off_250AE7688;
  if (v12 <= 0x10)
    v6 = 16;
  else
    v6 = v12;
  v16[0] = v10[1];
  v16[1] = v11 | (unint64_t)(v6 << 32);
  sub_239771FFC((uint64_t)v4, 0, 3, (unsigned int *)v16, &v14);
  *v5 = off_250AE7688;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_23977AD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  MEMORY[0x23B83E31C](v8, 0x10A3C40A1F8E8FFLL);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977AD8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977ADA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

double sub_23977ADB8(uint64_t a1, void *a2)
{
  double result;

  *(_QWORD *)&result = sub_23977ADC4(a1, a1, a2);
  return result;
}

__int16 sub_23977ADC4@<H0>(int a1@<W0>, uint64_t a2@<X1>, void *lpsrc@<X2>)
{
  void *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _WORD *v10;
  _WORD *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _WORD *v20;
  _WORD *v21;
  int v22;
  _QWORD v24[2];
  unsigned int v25;
  unsigned int v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[2];

  v5 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7F28, 0);
  if (v5)
  {
    sub_23977A7F4(a2, (uint64_t)v5);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v24, lpsrc, 3);
    v7 = *(_QWORD *)(v24[0] + 16);
    v27 = *(_OWORD *)v24[0];
    v28 = v7;
    v24[0] = 0;
    MEMORY[0x23B83E31C]();
    sub_23977A910(a2, v24);
    v29[0] = &v27;
    v29[1] = v24;
    if ((_DWORD)v28 == 1 && v25 == 1)
    {
      v6 = sub_2397912E0(v29, v8);
    }
    else if (DWORD2(v27) && HIDWORD(v27))
    {
      v9 = DWORD2(v27) - 1;
      v10 = (_WORD *)v27;
      v11 = (_WORD *)v24[0];
      v12 = 2 * v28;
      v13 = 2 * v25;
      v14 = HIDWORD(v27) - 1;
      if (HIDWORD(v27) != 1)
      {
        v15 = v26;
        v16 = HIDWORD(v28);
        if (DWORD2(v27) == 1)
        {
          do
          {
            *v11 = *v10;
            v10 += v16;
            v11 += v15;
            --v14;
          }
          while (v14);
        }
        else
        {
          v17 = 0;
          v18 = 2 * HIDWORD(v28);
          v19 = 2 * v26;
          do
          {
            v20 = v11;
            v21 = v10;
            v22 = v9;
            do
            {
              *v20 = *v21;
              v21 = (_WORD *)((char *)v21 + v12);
              v20 = (_WORD *)((char *)v20 + v13);
              --v22;
            }
            while (v22);
            *v20 = *v21;
            v10 = (_WORD *)((char *)v10 + v18);
            v11 = (_WORD *)((char *)v11 + v19);
            ++v17;
          }
          while (v17 != v14);
        }
      }
      for (; v9; --v9)
      {
        *v11 = *v10;
        v10 = (_WORD *)((char *)v10 + v12);
        v11 = (_WORD *)((char *)v11 + v13);
      }
      LOWORD(v6) = *v10;
      *v11 = *v10;
    }
  }
  return LOWORD(v6);
}

uint64_t sub_23977AF88(uint64_t a1)
{
  _QWORD v2[3];

  sub_23977A910(a1, v2);
  return v2[0];
}

double sub_23977AFAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  if ((_DWORD)a2 != 3)
    sub_239EC2854(a1, a2);
  sub_23977A910(a1, &v6);
  v4 = operator new();
  result = *(double *)&v6;
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v7;
  *a3 = v4;
  return result;
}

double sub_23977B010@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  if ((_DWORD)a2 != 3)
    sub_239EC2880(a1, a2);
  sub_23977AA90(a1, &v6);
  v4 = operator new();
  result = *(double *)&v6;
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v7;
  *a3 = v4;
  return result;
}

__int128 *sub_23977B078()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931FB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931FB8))
  {
    v2 = sub_239797770();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931FA0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256931FB0 = *((_QWORD *)v2 + 2);
      xmmword_256931FA0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931FA0, &dword_23940C000);
    __cxa_guard_release(&qword_256931FB8);
  }
  if (byte_256931FB7 >= 0)
    return &xmmword_256931FA0;
  else
    return (__int128 *)xmmword_256931FA0;
}

void sub_23977B138(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931FB8);
  _Unwind_Resume(a1);
}

uint64_t sub_23977B150@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_239772930(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_239772B5C(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23977B254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977B290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977B2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_23977B2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977B2F4()
{
  return 65792;
}

uint64_t sub_23977B304(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  _QWORD v10[3];
  _QWORD v11[3];

  *(_QWORD *)a1 = off_250AE7718;
  v3 = *(unsigned int *)(a2 + 8);
  LODWORD(v4) = *(_DWORD *)(a2 + 12);
  if (v4 <= 8)
    v4 = 8;
  else
    v4 = v4;
  *(_QWORD *)&v9 = *(_QWORD *)a2;
  *((_QWORD *)&v9 + 1) = v3 | (v4 << 32);
  *(_QWORD *)a1 = off_250AE73B8;
  *(_DWORD *)(a1 + 8) = 0;
  v5 = a1 + 16;
  sub_239775214(0, 4, (unsigned int *)&v9, a1 + 16);
  if ((_DWORD)v9 && DWORD1(v9))
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v5, v10);
    sub_2397755A4((uint64_t)v10, v11);
    v6 = v11[1];
    v7 = v11[2];
    sub_23979B260(v10);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = v9;
  }
  *(_QWORD *)a1 = off_250AE7718;
  return a1;
}

void sub_23977B3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  sub_23979B260(&a16);
  v19 = *(unsigned int *)(v16 + 40);
  if ((_DWORD)v19 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v19])(&a15, v17);
  *(_DWORD *)(v16 + 40) = -1;
  nullsub_4(v16);
  _Unwind_Resume(a1);
}

void sub_23977B434(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23977B448(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;
  _QWORD v13[2];

  sub_2397765FC(a2, v10);
  sub_23977B7F8(a2, &v8);
  v11 = v8;
  v4 = *((_QWORD *)&v8 + 1);
  v12 = v9;
  v5 = v9;
  if (HIDWORD(v9) <= 8)
    v6 = 8;
  else
    v6 = HIDWORD(v9);
  *a1 = off_250AE7718;
  v13[0] = v4;
  v13[1] = v5 | (v6 << 32);
  sub_239775B70((uint64_t)a1, 0, 4, (unsigned int *)v13, &v11);
  *a1 = off_250AE7718;
  return sub_23979B260(v10);
}

void sub_23977B4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977B4F4(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE73B8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23977B55C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (**v7)();
  int v8;
  uint64_t v9;
  unsigned int v10;
  __int128 v11;
  uint64_t v12;

  sub_23977B448(&v7, a2);
  v3 = v10;
  *(_DWORD *)(a1 + 8) = v8;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      *(_OWORD *)(a1 + 48) = v11;
      v7 = off_250AE73B8;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v12, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v12 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v12);
LABEL_6:
  v5 = v10;
  *(_OWORD *)(a1 + 48) = v11;
  v7 = off_250AE73B8;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v12, &v9);
LABEL_9:
  v10 = -1;
  nullsub_4(&v7);
  return a1;
}

void sub_23977B664(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23977B4F4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977B678@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;

  result = sub_2397762B0(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v10;
        v23 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v18;
        v23 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v21 = &off_250AE94F0;
        v22 = v14;
        v23 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v21);
        break;
      default:
        sub_23964B158();
    }
    sub_2397755A4((uint64_t)&v21, a2);
    return (uint64_t)sub_23979BCF4(&v21);
  }
  return result;
}

void sub_23977B7E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977B7F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t (**v23)();
  uint64_t v24;
  uint64_t v25;

  result = sub_2397762B0(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 52))
      v6 = *(_DWORD *)(a1 + 48) == 0;
    else
      v6 = 1;
    v7 = *(_QWORD *)(a1 + 48);
    if (v6)
      v7 = 0;
    v8 = 0x100000000;
    if (v7 > 0x100000000)
      v8 = v7;
    *a2 = 0;
    a2[1] = v7;
    a2[2] = ((_DWORD)v7 != 0) | (unint64_t)(v8 << 32);
    if (HIDWORD(v7) * (_DWORD)v8 == -1)
      sub_239EBFBC4(result, v5);
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v10 = *(_QWORD *)(a1 + 24);
        v9 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v10;
        v25 = v9;
        if (v9)
        {
          v11 = (unint64_t *)(v9 + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        break;
      case 1:
        v18 = *(_QWORD *)(a1 + 24);
        v17 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v18;
        v25 = v17;
        if (v17)
        {
          v19 = (unint64_t *)(v17 + 8);
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }
        break;
      case 2:
        v14 = *(_QWORD *)(a1 + 24);
        v13 = *(_QWORD *)(a1 + 32);
        v23 = &off_250AE94F0;
        v24 = v14;
        v25 = v13;
        if (v13)
        {
          v15 = (unint64_t *)(v13 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v23);
        break;
      default:
        sub_23964B158();
    }
    sub_2397755A4((uint64_t)&v23, &v21);
    *a2 = v21;
    *(_OWORD *)(a2 + 1) = v22;
    return (uint64_t)sub_23979BCF4(&v23);
  }
  return result;
}

void sub_23977B974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977B988()
{
  return 4;
}

_UNKNOWN **sub_23977B990()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_23977BA00@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[2];
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  __int128 v14;
  uint64_t v15;
  _QWORD v16[2];

  sub_2397765FC(a1, v13);
  sub_23977B7F8(a1, v10);
  sub_23977B7F8(a1, &v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14 = v8;
  v15 = v9;
  *v4 = off_250AE7718;
  if (v12 <= 8)
    v6 = 8;
  else
    v6 = v12;
  v16[0] = v10[1];
  v16[1] = v11 | (unint64_t)(v6 << 32);
  sub_239775B70((uint64_t)v4, 0, 4, (unsigned int *)v16, &v14);
  *v5 = off_250AE7718;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_23977BAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  MEMORY[0x23B83E31C](v8, 0x10A3C40A1F8E8FFLL);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977BAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977BB08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

float sub_23977BB20(uint64_t a1, void *a2)
{
  return sub_23977BB2C(a1, a1, a2);
}

float sub_23977BB2C(int a1, uint64_t a2, void *lpsrc)
{
  void *v5;
  float result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _DWORD *v11;
  _DWORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  unsigned int v26;
  unsigned int v27;
  __int128 v28;
  uint64_t v29;
  _QWORD v30[2];

  v5 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7F40, 0);
  if (v5)
  {
    sub_23977B55C(a2, (uint64_t)v5);
    return result;
  }
  (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v25, lpsrc, 4);
  v7 = *(_QWORD *)(v25[0] + 16);
  v28 = *(_OWORD *)v25[0];
  v29 = v7;
  v25[0] = 0;
  MEMORY[0x23B83E31C]();
  sub_23977B678(a2, v25);
  v30[0] = &v28;
  v30[1] = v25;
  v8 = v29;
  v9 = v26;
  if ((_DWORD)v29 == 1 && v26 == 1)
  {
    sub_239717504(v30);
    return result;
  }
  if (DWORD2(v28) && HIDWORD(v28))
  {
    v10 = DWORD2(v28) - 1;
    v11 = (_DWORD *)v28;
    v12 = (_DWORD *)v25[0];
    v13 = HIDWORD(v28) - 1;
    if (HIDWORD(v28) != 1)
    {
      v14 = v27;
      v15 = HIDWORD(v29);
      if (DWORD2(v28) == 1)
      {
        do
        {
          *v12 = *v11;
          v11 += v15;
          v12 += v14;
          --v13;
        }
        while (v13);
LABEL_20:
        result = *(float *)v11;
        *v12 = *v11;
        return result;
      }
      v16 = 0;
      v17 = 4 * HIDWORD(v29);
      v18 = 4 * v27;
      v19 = 4 * v26;
      do
      {
        v20 = v12;
        v21 = v11;
        v22 = v10;
        do
        {
          *v20 = *v21;
          v21 += v8;
          v20 = (_DWORD *)((char *)v20 + v19);
          --v22;
        }
        while (v22);
        *v20 = *v21;
        v11 = (_DWORD *)((char *)v11 + v17);
        v12 = (_DWORD *)((char *)v12 + v18);
        ++v16;
      }
      while (v16 != v13);
    }
    if (v10)
    {
      v23 = 4 * v8;
      v24 = 4 * v9;
      do
      {
        *v12 = *v11;
        v11 = (_DWORD *)((char *)v11 + v23);
        v12 = (_DWORD *)((char *)v12 + v24);
        --v10;
      }
      while (v10);
    }
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_23977BCF8(uint64_t a1)
{
  _QWORD v2[3];

  sub_23977B678(a1, v2);
  return v2[0];
}

double sub_23977BD1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  if ((_DWORD)a2 != 4)
    sub_239EC2854(a1, a2);
  sub_23977B678(a1, &v6);
  v4 = operator new();
  result = *(double *)&v6;
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v7;
  *a3 = v4;
  return result;
}

double sub_23977BD80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  if ((_DWORD)a2 != 4)
    sub_239EC2880(a1, a2);
  sub_23977B7F8(a1, &v6);
  v4 = operator new();
  result = *(double *)&v6;
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v7;
  *a3 = v4;
  return result;
}

__int128 *sub_23977BDE8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932078);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932078))
  {
    v2 = sub_239797B20();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256932060, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256932070 = *((_QWORD *)v2 + 2);
      xmmword_256932060 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932060, &dword_23940C000);
    __cxa_guard_release(&qword_256932078);
  }
  if (byte_256932077 >= 0)
    return &xmmword_256932060;
  else
    return (__int128 *)xmmword_256932060;
}

void sub_23977BEA8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932078);
  _Unwind_Resume(a1);
}

uint64_t sub_23977BEC0@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_2397763D0(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_2397765FC(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23977BFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977C000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977C014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_23977C050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977C064()
{
  return 65792;
}

uint64_t sub_23977C074(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[32];
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_250AE77A8;
  v3 = *(unsigned int *)(a2 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v4 = 32;
  else
    v4 = v4;
  *(_DWORD *)v14 = 2;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v14[4] = v5;
  *(_QWORD *)v11 = *(_QWORD *)v14;
  *(_DWORD *)&v11[8] = HIDWORD(v5);
  *(_DWORD *)v14 = 1;
  *(_QWORD *)&v14[4] = v3 | (v4 << 32);
  *(_QWORD *)&v11[12] = *(_QWORD *)v14;
  *(_DWORD *)&v11[20] = v4;
  *(_QWORD *)&v11[24] = v5;
  v12 = *(_QWORD *)&v14[4];
  *(_QWORD *)a1 = off_250AE6EA8;
  *(_DWORD *)(a1 + 8) = 0;
  v6 = a1 + 16;
  sub_23976A7D0(0, 5, (uint64_t)v11, a1 + 16);
  v7 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)&v11[24] && *(_DWORD *)&v11[28])
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v6, v13);
    sub_23976AB6C((uint64_t)v13, (uint64_t)v14);
    v8 = v15;
    *v7 = *(_OWORD *)&v14[8];
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v16;
    sub_23979B260(v13);
  }
  else
  {
    v9 = *(_OWORD *)&v11[16];
    *v7 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 80) = v12;
  }
  *(_QWORD *)a1 = off_250AE77A8;
  return a1;
}

void sub_23977C1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23979B260(&a18);
  v21 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v21])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  nullsub_4(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_23977C228(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD v6[2];
  __int128 v7;
  _QWORD v8[3];
  _OWORD v9[3];
  _DWORD v10[3];
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  sub_23976B9B0(a2, v8);
  sub_23977C6BC(a2, (uint64_t)v6);
  v9[0] = v6[0];
  v9[1] = v6[1];
  v9[2] = v7;
  *a1 = off_250AE77A8;
  if (HIDWORD(v7) <= 0x20)
    v4 = 32;
  else
    v4 = HIDWORD(v7);
  v10[0] = 2;
  *(_QWORD *)&v10[1] = v7;
  LODWORD(v15[0]) = 1;
  *(_QWORD *)((char *)v15 + 4) = DWORD2(v7) | (unint64_t)(v4 << 32);
  v11 = v15[0];
  v12 = v4;
  v13 = v7;
  v14 = *(_QWORD *)((char *)v15 + 4);
  sub_23976B034((uint64_t)a1, 0, 5, (uint64_t)v10, v9);
  *a1 = off_250AE77A8;
  return sub_23979B260(v8);
}

void sub_23977C330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977C344(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE6EA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23977C3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void (**v9)();
  int v10;
  uint64_t v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  sub_23977C228(&v9, a2);
  v3 = v12;
  *(_DWORD *)(a1 + 8) = v10;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      v7 = v14;
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 80) = v15;
      v9 = off_250AE6EA8;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v16, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v16 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v16);
LABEL_6:
  v5 = v12;
  v6 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v15;
  v9 = off_250AE6EA8;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v16, &v11);
LABEL_9:
  v12 = -1;
  nullsub_4(&v9);
  return a1;
}

void sub_23977C4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23977C344((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977C4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23976B600(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 2;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 2 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x1FFFFFFFFLL | ((unint64_t)(v8 >> 1) << 33);
    v10 = __PAIR64__(DWORD1(v24), 2);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_23976AB6C((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_23977C6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977C6BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23976B600(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    *(_DWORD *)v27 = 2;
    *(_QWORD *)&v27[4] = v6;
    v7 = 2 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x1FFFFFFFFLL | ((unint64_t)(v8 >> 1) << 33);
    v10 = __PAIR64__(*(unsigned int *)&v27[4], 2);
    *(_DWORD *)v27 = 1;
    *(_QWORD *)&v27[4] = v9;
    v11 = *(_QWORD *)v27;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v13;
        v26 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v21;
        v26 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v17;
        v26 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_23976AB6C((uint64_t)&v24, (uint64_t)v27);
    *(_QWORD *)a2 = *(_QWORD *)v27;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)&v27[8];
    *(_OWORD *)(a2 + 24) = v28;
    *(_QWORD *)(a2 + 40) = v29;
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_23977C8AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977C8C0()
{
  return 5;
}

_UNKNOWN **sub_23977C8C8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_23977C938@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD v8[3];
  _BYTE v9[32];
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  _OWORD v14[3];
  _DWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  sub_23976B9B0(a1, v13);
  sub_23977C6BC(a1, (uint64_t)v9);
  sub_23977C6BC(a1, (uint64_t)v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14[0] = v8[0];
  v14[1] = v8[1];
  v14[2] = v8[2];
  *v4 = off_250AE77A8;
  if (v12 <= 0x20)
    v6 = 32;
  else
    v6 = v12;
  *(_QWORD *)&v15[1] = v10;
  v15[0] = 2;
  LODWORD(v20[0]) = 1;
  *(_QWORD *)((char *)v20 + 4) = v11 | (unint64_t)(v6 << 32);
  v16 = v20[0];
  v17 = v6;
  v18 = v10;
  v19 = *(_QWORD *)((char *)v20 + 4);
  sub_23976B034((uint64_t)v4, 0, 5, (uint64_t)v15, v14);
  *v5 = off_250AE77A8;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_23977CA68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x23B83E31C](v14, 0x10A3C40ED729E16);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977CA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977CAAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

unsigned int *sub_23977CAC4(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _QWORD v9[6];
  _OWORD v10[3];
  _QWORD v11[2];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7F58, 0);
  if (v4)
    return (unsigned int *)sub_23977C3AC(a1, (uint64_t)v4);
  (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v9, lpsrc, 5);
  v6 = v9[0];
  v8 = *(_OWORD *)(v9[0] + 16);
  v7 = *(_OWORD *)(v9[0] + 32);
  v10[0] = *(_OWORD *)v9[0];
  v10[1] = v8;
  v10[2] = v7;
  v9[0] = 0;
  MEMORY[0x23B83E31C](v6);
  sub_23977C4D8(a1, (uint64_t)v9);
  v11[0] = v10;
  v11[1] = v9;
  return sub_23978E92C((unsigned int *)v11);
}

uint64_t sub_23977CB90(uint64_t a1)
{
  _QWORD v2[6];

  sub_23977C4D8(a1, (uint64_t)v2);
  return v2[0];
}

double sub_23977CBB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 5)
    sub_239EC2854(a1, a2);
  sub_23977C4D8(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

double sub_23977CC18@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 5)
    sub_239EC2880(a1, a2);
  sub_23977C6BC(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

__int128 *sub_23977CC80()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932138);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932138))
  {
    v2 = sub_239797ED0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256932120, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256932130 = *((_QWORD *)v2 + 2);
      xmmword_256932120 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932120, &dword_23940C000);
    __cxa_guard_release(&qword_256932138);
  }
  if (byte_256932137 >= 0)
    return &xmmword_256932120;
  else
    return (__int128 *)xmmword_256932120;
}

void sub_23977CD40(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932138);
  _Unwind_Resume(a1);
}

uint64_t sub_23977CD58@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_23976B720(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_23976B9B0(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23977CE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977CE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977CEAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_23977CEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977CEFC()
{
  return 65792;
}

uint64_t sub_23977CF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[32];
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_250AE7838;
  v3 = *(unsigned int *)(a2 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x10)
    v4 = 16;
  else
    v4 = v4;
  *(_DWORD *)v14 = 2;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v14[4] = v5;
  *(_QWORD *)v11 = *(_QWORD *)v14;
  *(_DWORD *)&v11[8] = HIDWORD(v5);
  *(_DWORD *)v14 = 1;
  *(_QWORD *)&v14[4] = v3 | (v4 << 32);
  *(_QWORD *)&v11[12] = *(_QWORD *)v14;
  *(_DWORD *)&v11[20] = v4;
  *(_QWORD *)&v11[24] = v5;
  v12 = *(_QWORD *)&v14[4];
  *(_QWORD *)a1 = off_250AE7298;
  *(_DWORD *)(a1 + 8) = 0;
  v6 = a1 + 16;
  sub_239772C1C(0, 7, (uint64_t)v11, a1 + 16);
  v7 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)&v11[24] && *(_DWORD *)&v11[28])
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v6, v13);
    sub_239772FB8((uint64_t)v13, (uint64_t)v14);
    v8 = v15;
    *v7 = *(_OWORD *)&v14[8];
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v16;
    sub_23979B260(v13);
  }
  else
  {
    v9 = *(_OWORD *)&v11[16];
    *v7 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 80) = v12;
  }
  *(_QWORD *)a1 = off_250AE7838;
  return a1;
}

void sub_23977D058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23979B260(&a18);
  v21 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v21])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  nullsub_4(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_23977D0C0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD v6[2];
  __int128 v7;
  _QWORD v8[3];
  _OWORD v9[3];
  _DWORD v10[3];
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  sub_239773F44(a2, v8);
  sub_23977D554(a2, (uint64_t)v6);
  v9[0] = v6[0];
  v9[1] = v6[1];
  v9[2] = v7;
  *a1 = off_250AE7838;
  if (HIDWORD(v7) <= 0x10)
    v4 = 16;
  else
    v4 = HIDWORD(v7);
  v10[0] = 2;
  *(_QWORD *)&v10[1] = v7;
  LODWORD(v15[0]) = 1;
  *(_QWORD *)((char *)v15 + 4) = DWORD2(v7) | (unint64_t)(v4 << 32);
  v11 = v15[0];
  v12 = v4;
  v13 = v7;
  v14 = *(_QWORD *)((char *)v15 + 4);
  sub_2397735F8((uint64_t)a1, 0, 7, (uint64_t)v10, v9);
  *a1 = off_250AE7838;
  return sub_23979B260(v8);
}

void sub_23977D1C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977D1DC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7298;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23977D244(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void (**v9)();
  int v10;
  uint64_t v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  sub_23977D0C0(&v9, a2);
  v3 = v12;
  *(_DWORD *)(a1 + 8) = v10;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      v7 = v14;
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 80) = v15;
      v9 = off_250AE7298;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v16, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v16 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v16);
LABEL_6:
  v5 = v12;
  v6 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v15;
  v9 = off_250AE7298;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v16, &v11);
LABEL_9:
  v12 = -1;
  nullsub_4(&v9);
  return a1;
}

void sub_23977D35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23977D1DC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977D370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_239773B94(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 2;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 2 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x1FFFFFFFFLL | ((unint64_t)(v8 >> 1) << 33);
    v10 = __PAIR64__(DWORD1(v24), 2);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239772FB8((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_23977D540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977D554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_239773B94(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    *(_DWORD *)v27 = 2;
    *(_QWORD *)&v27[4] = v6;
    v7 = 2 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x1FFFFFFFFLL | ((unint64_t)(v8 >> 1) << 33);
    v10 = __PAIR64__(*(unsigned int *)&v27[4], 2);
    *(_DWORD *)v27 = 1;
    *(_QWORD *)&v27[4] = v9;
    v11 = *(_QWORD *)v27;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v13;
        v26 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v21;
        v26 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v17;
        v26 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239772FB8((uint64_t)&v24, (uint64_t)v27);
    *(_QWORD *)a2 = *(_QWORD *)v27;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)&v27[8];
    *(_OWORD *)(a2 + 24) = v28;
    *(_QWORD *)(a2 + 40) = v29;
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_23977D744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977D758()
{
  return 7;
}

_UNKNOWN **sub_23977D760()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_23977D7D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD v8[3];
  _BYTE v9[32];
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  _OWORD v14[3];
  _DWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  sub_239773F44(a1, v13);
  sub_23977D554(a1, (uint64_t)v9);
  sub_23977D554(a1, (uint64_t)v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14[0] = v8[0];
  v14[1] = v8[1];
  v14[2] = v8[2];
  *v4 = off_250AE7838;
  if (v12 <= 0x10)
    v6 = 16;
  else
    v6 = v12;
  *(_QWORD *)&v15[1] = v10;
  v15[0] = 2;
  LODWORD(v20[0]) = 1;
  *(_QWORD *)((char *)v20 + 4) = v11 | (unint64_t)(v6 << 32);
  v16 = v20[0];
  v17 = v6;
  v18 = v10;
  v19 = *(_QWORD *)((char *)v20 + 4);
  sub_2397735F8((uint64_t)v4, 0, 7, (uint64_t)v15, v14);
  *v5 = off_250AE7838;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_23977D900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x23B83E31C](v14, 0x10A3C40ED729E16);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977D92C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977D944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

double sub_23977D95C(uint64_t a1, void *lpsrc)
{
  void *v4;
  double result;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _QWORD v9[6];
  _OWORD v10[3];
  uint64_t v11[2];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7F70, 0);
  if (v4)
  {
    sub_23977D244(a1, (uint64_t)v4);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v9, lpsrc, 7);
    v6 = v9[0];
    v8 = *(_OWORD *)(v9[0] + 16);
    v7 = *(_OWORD *)(v9[0] + 32);
    v10[0] = *(_OWORD *)v9[0];
    v10[1] = v8;
    v10[2] = v7;
    v9[0] = 0;
    MEMORY[0x23B83E31C](v6);
    sub_23977D370(a1, (uint64_t)v9);
    v11[0] = (uint64_t)v10;
    v11[1] = (uint64_t)v9;
    *(_QWORD *)&result = sub_2397919D8(v11);
  }
  return result;
}

uint64_t sub_23977DA28(uint64_t a1)
{
  _QWORD v2[6];

  sub_23977D370(a1, (uint64_t)v2);
  return v2[0];
}

double sub_23977DA4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 7)
    sub_239EC2854(a1, a2);
  sub_23977D370(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

double sub_23977DAB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 7)
    sub_239EC2880(a1, a2);
  sub_23977D554(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

__int128 *sub_23977DB18()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569321F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569321F8))
  {
    v2 = sub_239798430();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569321E0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569321F0 = *((_QWORD *)v2 + 2);
      xmmword_2569321E0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569321E0, &dword_23940C000);
    __cxa_guard_release(&qword_2569321F8);
  }
  if (byte_2569321F7 >= 0)
    return &xmmword_2569321E0;
  else
    return (__int128 *)xmmword_2569321E0;
}

void sub_23977DBD8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569321F8);
  _Unwind_Resume(a1);
}

uint64_t sub_23977DBF0@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_239773CB4(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_239773F44(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23977DCF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977DD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977DD44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_23977DD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977DD94()
{
  return 65792;
}

uint64_t sub_23977DDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[32];
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_250AE78C8;
  v3 = *(unsigned int *)(a2 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  if (v4 <= 8)
    v4 = 8;
  else
    v4 = v4;
  *(_DWORD *)v14 = 2;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v14[4] = v5;
  *(_QWORD *)v11 = *(_QWORD *)v14;
  *(_DWORD *)&v11[8] = HIDWORD(v5);
  *(_DWORD *)v14 = 1;
  *(_QWORD *)&v14[4] = v3 | (v4 << 32);
  *(_QWORD *)&v11[12] = *(_QWORD *)v14;
  *(_DWORD *)&v11[20] = v4;
  *(_QWORD *)&v11[24] = v5;
  v12 = *(_QWORD *)&v14[4];
  *(_QWORD *)a1 = off_250AE7448;
  *(_DWORD *)(a1 + 8) = 0;
  v6 = a1 + 16;
  sub_2397766BC(0, 8, (uint64_t)v11, a1 + 16);
  v7 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)&v11[24] && *(_DWORD *)&v11[28])
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v6, v13);
    sub_239776A58((uint64_t)v13, (uint64_t)v14);
    v8 = v15;
    *v7 = *(_OWORD *)&v14[8];
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v16;
    sub_23979B260(v13);
  }
  else
  {
    v9 = *(_OWORD *)&v11[16];
    *v7 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 80) = v12;
  }
  *(_QWORD *)a1 = off_250AE78C8;
  return a1;
}

void sub_23977DEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23979B260(&a18);
  v21 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v21])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  nullsub_4(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_23977DF58(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD v6[2];
  __int128 v7;
  _QWORD v8[3];
  _OWORD v9[3];
  _DWORD v10[3];
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  sub_23977780C(a2, v8);
  sub_23977E3EC(a2, (uint64_t)v6);
  v9[0] = v6[0];
  v9[1] = v6[1];
  v9[2] = v7;
  *a1 = off_250AE78C8;
  if (HIDWORD(v7) <= 8)
    v4 = 8;
  else
    v4 = HIDWORD(v7);
  v10[0] = 2;
  *(_QWORD *)&v10[1] = v7;
  LODWORD(v15[0]) = 1;
  *(_QWORD *)((char *)v15 + 4) = DWORD2(v7) | (unint64_t)(v4 << 32);
  v11 = v15[0];
  v12 = v4;
  v13 = v7;
  v14 = *(_QWORD *)((char *)v15 + 4);
  sub_239776EC0((uint64_t)a1, 0, 8, (uint64_t)v10, v9);
  *a1 = off_250AE78C8;
  return sub_23979B260(v8);
}

void sub_23977E060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977E074(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7448;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23977E0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void (**v9)();
  int v10;
  uint64_t v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  sub_23977DF58(&v9, a2);
  v3 = v12;
  *(_DWORD *)(a1 + 8) = v10;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      v7 = v14;
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 80) = v15;
      v9 = off_250AE7448;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v16, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v16 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v16);
LABEL_6:
  v5 = v12;
  v6 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v15;
  v9 = off_250AE7448;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v16, &v11);
LABEL_9:
  v12 = -1;
  nullsub_4(&v9);
  return a1;
}

void sub_23977E1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23977E074((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977E208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23977745C(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 2;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 2 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x1FFFFFFFFLL | ((unint64_t)(v8 >> 1) << 33);
    v10 = __PAIR64__(DWORD1(v24), 2);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239776A58((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_23977E3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977E3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23977745C(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    *(_DWORD *)v27 = 2;
    *(_QWORD *)&v27[4] = v6;
    v7 = 2 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x1FFFFFFFFLL | ((unint64_t)(v8 >> 1) << 33);
    v10 = __PAIR64__(*(unsigned int *)&v27[4], 2);
    *(_DWORD *)v27 = 1;
    *(_QWORD *)&v27[4] = v9;
    v11 = *(_QWORD *)v27;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v13;
        v26 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v21;
        v26 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v17;
        v26 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239776A58((uint64_t)&v24, (uint64_t)v27);
    *(_QWORD *)a2 = *(_QWORD *)v27;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)&v27[8];
    *(_OWORD *)(a2 + 24) = v28;
    *(_QWORD *)(a2 + 40) = v29;
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_23977E5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977E5F0()
{
  return 8;
}

_UNKNOWN **sub_23977E5F8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_23977E668@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD v8[3];
  _BYTE v9[32];
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  _OWORD v14[3];
  _DWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  sub_23977780C(a1, v13);
  sub_23977E3EC(a1, (uint64_t)v9);
  sub_23977E3EC(a1, (uint64_t)v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14[0] = v8[0];
  v14[1] = v8[1];
  v14[2] = v8[2];
  *v4 = off_250AE78C8;
  if (v12 <= 8)
    v6 = 8;
  else
    v6 = v12;
  *(_QWORD *)&v15[1] = v10;
  v15[0] = 2;
  LODWORD(v20[0]) = 1;
  *(_QWORD *)((char *)v20 + 4) = v11 | (unint64_t)(v6 << 32);
  v16 = v20[0];
  v17 = v6;
  v18 = v10;
  v19 = *(_QWORD *)((char *)v20 + 4);
  sub_239776EC0((uint64_t)v4, 0, 8, (uint64_t)v15, v14);
  *v5 = off_250AE78C8;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_23977E798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x23B83E31C](v14, 0x10A3C40ED729E16);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977E7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977E7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

float sub_23977E7F4(uint64_t a1, void *lpsrc)
{
  void *v4;
  float result;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _QWORD v9[6];
  _OWORD v10[3];
  uint64_t v11[2];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7F88, 0);
  if (v4)
  {
    sub_23977E0DC(a1, (uint64_t)v4);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v9, lpsrc, 8);
    v6 = v9[0];
    v8 = *(_OWORD *)(v9[0] + 16);
    v7 = *(_OWORD *)(v9[0] + 32);
    v10[0] = *(_OWORD *)v9[0];
    v10[1] = v8;
    v10[2] = v7;
    v9[0] = 0;
    MEMORY[0x23B83E31C](v6);
    sub_23977E208(a1, (uint64_t)v9);
    v11[0] = (uint64_t)v10;
    v11[1] = (uint64_t)v9;
    return sub_239792D70(v11);
  }
  return result;
}

uint64_t sub_23977E8C0(uint64_t a1)
{
  _QWORD v2[6];

  sub_23977E208(a1, (uint64_t)v2);
  return v2[0];
}

double sub_23977E8E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 8)
    sub_239EC2854(a1, a2);
  sub_23977E208(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

double sub_23977E948@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 8)
    sub_239EC2880(a1, a2);
  sub_23977E3EC(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

__int128 *sub_23977E9B0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569322B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569322B8))
  {
    v2 = sub_239798990();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569322A0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569322B0 = *((_QWORD *)v2 + 2);
      xmmword_2569322A0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569322A0, &dword_23940C000);
    __cxa_guard_release(&qword_2569322B8);
  }
  if (byte_2569322B7 >= 0)
    return &xmmword_2569322A0;
  else
    return (__int128 *)xmmword_2569322A0;
}

void sub_23977EA70(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569322B8);
  _Unwind_Resume(a1);
}

uint64_t sub_23977EA88@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_23977757C(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_23977780C(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23977EB8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977EBC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977EBDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_23977EC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977EC2C()
{
  return 65792;
}

uint64_t sub_23977EC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[32];
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_250AE7958;
  v3 = *(unsigned int *)(a2 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v4 = 32;
  else
    v4 = v4;
  *(_DWORD *)v14 = 3;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v14[4] = v5;
  *(_QWORD *)v11 = *(_QWORD *)v14;
  *(_DWORD *)&v11[8] = HIDWORD(v5);
  *(_DWORD *)v14 = 1;
  *(_QWORD *)&v14[4] = v3 | (v4 << 32);
  *(_QWORD *)&v11[12] = *(_QWORD *)v14;
  *(_DWORD *)&v11[20] = v4;
  *(_QWORD *)&v11[24] = v5;
  v12 = *(_QWORD *)&v14[4];
  *(_QWORD *)a1 = off_250AE6F38;
  *(_DWORD *)(a1 + 8) = 0;
  v6 = a1 + 16;
  sub_23976BA70(0, 21, (uint64_t)v11, a1 + 16);
  v7 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)&v11[24] && *(_DWORD *)&v11[28])
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v6, v13);
    sub_23976BE0C((uint64_t)v13, (uint64_t)v14);
    v8 = v15;
    *v7 = *(_OWORD *)&v14[8];
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v16;
    sub_23979B260(v13);
  }
  else
  {
    v9 = *(_OWORD *)&v11[16];
    *v7 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 80) = v12;
  }
  *(_QWORD *)a1 = off_250AE7958;
  return a1;
}

void sub_23977ED88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23979B260(&a18);
  v21 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v21])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  nullsub_4(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_23977EDF0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD v6[2];
  __int128 v7;
  _QWORD v8[3];
  _OWORD v9[3];
  _DWORD v10[3];
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  sub_23976CAFC(a2, v8);
  sub_23977F1E4(a2, (uint64_t)v6);
  v9[0] = v6[0];
  v9[1] = v6[1];
  v9[2] = v7;
  *a1 = off_250AE7958;
  if (HIDWORD(v7) <= 0x20)
    v4 = 32;
  else
    v4 = HIDWORD(v7);
  v10[0] = 3;
  *(_QWORD *)&v10[1] = v7;
  LODWORD(v15[0]) = 1;
  *(_QWORD *)((char *)v15 + 4) = DWORD2(v7) | (unint64_t)(v4 << 32);
  v11 = v15[0];
  v12 = v4;
  v13 = v7;
  v14 = *(_QWORD *)((char *)v15 + 4);
  sub_23976C2FC((uint64_t)a1, 0, 21, (uint64_t)v10, v9);
  *a1 = off_250AE7958;
  return sub_23979B260(v8);
}

void sub_23977EEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977EF0C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE6F38;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23977EF74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void (**v9)();
  int v10;
  uint64_t v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  sub_23977EDF0(&v9, a2);
  v3 = v12;
  *(_DWORD *)(a1 + 8) = v10;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      v7 = v14;
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 80) = v15;
      v9 = off_250AE6F38;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v16, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v16 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v16);
LABEL_6:
  v5 = v12;
  v6 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v15;
  v9 = off_250AE6F38;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v16, &v11);
LABEL_9:
  v12 = -1;
  nullsub_4(&v9);
  return a1;
}

void sub_23977F08C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23977EF0C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977F0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t (**v17)();
  uint64_t v18;
  uint64_t v19;

  if (sub_23976C7EC(a1))
    return (_QWORD *)sub_23978F1FC(a2, 0, (_DWORD *)(a1 + 72));
  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v6;
      v19 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 1:
      v14 = *(_QWORD *)(a1 + 24);
      v13 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v14;
      v19 = v13;
      if (v13)
      {
        v15 = (unint64_t *)(v13 + 8);
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }
      break;
    case 2:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v10;
      v19 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v17);
      break;
    default:
      sub_23964B158();
  }
  sub_23976BE0C((uint64_t)&v17, a2);
  return sub_23979BCF4(&v17);
}

void sub_23977F1D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977F1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;

  if (sub_23976C7EC(a1))
    return (_QWORD *)sub_23978F2D8(a2, 0, (_DWORD *)(a1 + 72));
  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v21 = &off_250AE94F0;
      v22 = v6;
      v23 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 1:
      v14 = *(_QWORD *)(a1 + 24);
      v13 = *(_QWORD *)(a1 + 32);
      v21 = &off_250AE94F0;
      v22 = v14;
      v23 = v13;
      if (v13)
      {
        v15 = (unint64_t *)(v13 + 8);
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }
      break;
    case 2:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v21 = &off_250AE94F0;
      v22 = v10;
      v23 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v21);
      break;
    default:
      sub_23964B158();
  }
  sub_23976BE0C((uint64_t)&v21, (uint64_t)&v17);
  *(_QWORD *)a2 = v17;
  *(_OWORD *)(a2 + 8) = v18;
  *(_OWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 40) = v20;
  return sub_23979BCF4(&v21);
}

void sub_23977F334(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23979BCF4((_QWORD *)(v1 - 40));
  _Unwind_Resume(a1);
}

uint64_t sub_23977F348()
{
  return 21;
}

_UNKNOWN **sub_23977F350()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_23977F3C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD v8[3];
  _BYTE v9[32];
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  _OWORD v14[3];
  _DWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  sub_23976CAFC(a1, v13);
  sub_23977F1E4(a1, (uint64_t)v9);
  sub_23977F1E4(a1, (uint64_t)v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14[0] = v8[0];
  v14[1] = v8[1];
  v14[2] = v8[2];
  *v4 = off_250AE7958;
  if (v12 <= 0x20)
    v6 = 32;
  else
    v6 = v12;
  *(_QWORD *)&v15[1] = v10;
  v15[0] = 3;
  LODWORD(v20[0]) = 1;
  *(_QWORD *)((char *)v20 + 4) = v11 | (unint64_t)(v6 << 32);
  v16 = v20[0];
  v17 = v6;
  v18 = v10;
  v19 = *(_QWORD *)((char *)v20 + 4);
  sub_23976C2FC((uint64_t)v4, 0, 21, (uint64_t)v15, v14);
  *v5 = off_250AE7958;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_23977F4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x23B83E31C](v14, 0x10A3C40ED729E16);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977F51C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977F534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23977F54C(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD v8[6];
  _OWORD v9[3];
  _QWORD v10[2];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7FA0, 0);
  if (v4)
  {
    sub_23977EF74(a1, (uint64_t)v4);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v8, lpsrc, 21);
    v5 = v8[0];
    v7 = *(_OWORD *)(v8[0] + 16);
    v6 = *(_OWORD *)(v8[0] + 32);
    v9[0] = *(_OWORD *)v8[0];
    v9[1] = v7;
    v9[2] = v6;
    v8[0] = 0;
    MEMORY[0x23B83E31C](v5);
    sub_23977F0A0(a1, (uint64_t)v8);
    v10[0] = v9;
    v10[1] = v8;
    sub_23978F020((uint64_t)v10);
  }
}

uint64_t sub_23977F618(uint64_t a1)
{
  _QWORD v2[6];

  sub_23977F0A0(a1, (uint64_t)v2);
  return v2[0];
}

double sub_23977F63C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 21)
    sub_239EC2854(a1, a2);
  sub_23977F0A0(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

double sub_23977F6A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 21)
    sub_239EC2880(a1, a2);
  sub_23977F1E4(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

__int128 *sub_23977F708()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932378);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932378))
  {
    v2 = sub_239798EF0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256932360, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256932370 = *((_QWORD *)v2 + 2);
      xmmword_256932360 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932360, &dword_23940C000);
    __cxa_guard_release(&qword_256932378);
  }
  if (byte_256932377 >= 0)
    return &xmmword_256932360;
  else
    return (__int128 *)xmmword_256932360;
}

void sub_23977F7C8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932378);
  _Unwind_Resume(a1);
}

uint64_t sub_23977F7E0@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_23976C90C(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_23976CAFC(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23977F8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977F920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23977F934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_23977F970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23977F984()
{
  return 65792;
}

uint64_t sub_23977F994(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[32];
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_250AE79E8;
  v3 = *(unsigned int *)(a2 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x10)
    v4 = 16;
  else
    v4 = v4;
  *(_DWORD *)v14 = 3;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v14[4] = v5;
  *(_QWORD *)v11 = *(_QWORD *)v14;
  *(_DWORD *)&v11[8] = HIDWORD(v5);
  *(_DWORD *)v14 = 1;
  *(_QWORD *)&v14[4] = v3 | (v4 << 32);
  *(_QWORD *)&v11[12] = *(_QWORD *)v14;
  *(_DWORD *)&v11[20] = v4;
  *(_QWORD *)&v11[24] = v5;
  v12 = *(_QWORD *)&v14[4];
  *(_QWORD *)a1 = off_250AE70E8;
  *(_DWORD *)(a1 + 8) = 0;
  v6 = a1 + 16;
  sub_23976F25C(0, 22, (uint64_t)v11, a1 + 16);
  v7 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)&v11[24] && *(_DWORD *)&v11[28])
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v6, v13);
    sub_23976F5F8((uint64_t)v13, (uint64_t)v14);
    v8 = v15;
    *v7 = *(_OWORD *)&v14[8];
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v16;
    sub_23979B260(v13);
  }
  else
  {
    v9 = *(_OWORD *)&v11[16];
    *v7 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 80) = v12;
  }
  *(_QWORD *)a1 = off_250AE79E8;
  return a1;
}

void sub_23977FAE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23979B260(&a18);
  v21 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v21])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  nullsub_4(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_23977FB48(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD v6[2];
  __int128 v7;
  _QWORD v8[3];
  _OWORD v9[3];
  _DWORD v10[3];
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  sub_239770404(a2, v8);
  sub_23977FF3C(a2, (uint64_t)v6);
  v9[0] = v6[0];
  v9[1] = v6[1];
  v9[2] = v7;
  *a1 = off_250AE79E8;
  if (HIDWORD(v7) <= 0x10)
    v4 = 16;
  else
    v4 = HIDWORD(v7);
  v10[0] = 3;
  *(_QWORD *)&v10[1] = v7;
  LODWORD(v15[0]) = 1;
  *(_QWORD *)((char *)v15 + 4) = DWORD2(v7) | (unint64_t)(v4 << 32);
  v11 = v15[0];
  v12 = v4;
  v13 = v7;
  v14 = *(_QWORD *)((char *)v15 + 4);
  sub_23976FB70((uint64_t)a1, 0, 22, (uint64_t)v10, v9);
  *a1 = off_250AE79E8;
  return sub_23979B260(v8);
}

void sub_23977FC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23977FC64(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE70E8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_23977FCCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void (**v9)();
  int v10;
  uint64_t v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  sub_23977FB48(&v9, a2);
  v3 = v12;
  *(_DWORD *)(a1 + 8) = v10;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      v7 = v14;
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 80) = v15;
      v9 = off_250AE70E8;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v16, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v16 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v16);
LABEL_6:
  v5 = v12;
  v6 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v15;
  v9 = off_250AE70E8;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v16, &v11);
LABEL_9:
  v12 = -1;
  nullsub_4(&v9);
  return a1;
}

void sub_23977FDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23977FC64((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977FDF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t (**v17)();
  uint64_t v18;
  uint64_t v19;

  if (sub_2397700F4(a1))
    return (_QWORD *)sub_2397909BC(a2, 0, (_DWORD *)(a1 + 72));
  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v6;
      v19 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 1:
      v14 = *(_QWORD *)(a1 + 24);
      v13 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v14;
      v19 = v13;
      if (v13)
      {
        v15 = (unint64_t *)(v13 + 8);
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }
      break;
    case 2:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v17 = &off_250AE94F0;
      v18 = v10;
      v19 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v17);
      break;
    default:
      sub_23964B158();
  }
  sub_23976F5F8((uint64_t)&v17, a2);
  return sub_23979BCF4(&v17);
}

void sub_23977FF28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979BCF4((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23977FF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;

  if (sub_2397700F4(a1))
    return (_QWORD *)sub_239790A98(a2, 0, (_DWORD *)(a1 + 72));
  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      v6 = *(_QWORD *)(a1 + 24);
      v5 = *(_QWORD *)(a1 + 32);
      v21 = &off_250AE94F0;
      v22 = v6;
      v23 = v5;
      if (v5)
      {
        v7 = (unint64_t *)(v5 + 8);
        do
          v8 = __ldxr(v7);
        while (__stxr(v8 + 1, v7));
      }
      break;
    case 1:
      v14 = *(_QWORD *)(a1 + 24);
      v13 = *(_QWORD *)(a1 + 32);
      v21 = &off_250AE94F0;
      v22 = v14;
      v23 = v13;
      if (v13)
      {
        v15 = (unint64_t *)(v13 + 8);
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }
      break;
    case 2:
      v10 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v21 = &off_250AE94F0;
      v22 = v10;
      v23 = v9;
      if (v9)
      {
        v11 = (unint64_t *)(v9 + 8);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      break;
    case 3:
      sub_23979D2AC((uint64_t *)(a1 + 16), &v21);
      break;
    default:
      sub_23964B158();
  }
  sub_23976F5F8((uint64_t)&v21, (uint64_t)&v17);
  *(_QWORD *)a2 = v17;
  *(_OWORD *)(a2 + 8) = v18;
  *(_OWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 40) = v20;
  return sub_23979BCF4(&v21);
}

void sub_23978008C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23979BCF4((_QWORD *)(v1 - 40));
  _Unwind_Resume(a1);
}

uint64_t sub_2397800A0()
{
  return 22;
}

_UNKNOWN **sub_2397800A8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_239780118@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD v8[3];
  _BYTE v9[32];
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  _OWORD v14[3];
  _DWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  sub_239770404(a1, v13);
  sub_23977FF3C(a1, (uint64_t)v9);
  sub_23977FF3C(a1, (uint64_t)v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14[0] = v8[0];
  v14[1] = v8[1];
  v14[2] = v8[2];
  *v4 = off_250AE79E8;
  if (v12 <= 0x10)
    v6 = 16;
  else
    v6 = v12;
  *(_QWORD *)&v15[1] = v10;
  v15[0] = 3;
  LODWORD(v20[0]) = 1;
  *(_QWORD *)((char *)v20 + 4) = v11 | (unint64_t)(v6 << 32);
  v16 = v20[0];
  v17 = v6;
  v18 = v10;
  v19 = *(_QWORD *)((char *)v20 + 4);
  sub_23976FB70((uint64_t)v4, 0, 22, (uint64_t)v15, v14);
  *v5 = off_250AE79E8;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_239780248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x23B83E31C](v14, 0x10A3C40ED729E16);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239780274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23978028C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_2397802A4(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD v8[6];
  _OWORD v9[3];
  _QWORD v10[2];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7FB8, 0);
  if (v4)
  {
    sub_23977FCCC(a1, (uint64_t)v4);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v8, lpsrc, 22);
    v5 = v8[0];
    v7 = *(_OWORD *)(v8[0] + 16);
    v6 = *(_OWORD *)(v8[0] + 32);
    v9[0] = *(_OWORD *)v8[0];
    v9[1] = v7;
    v9[2] = v6;
    v8[0] = 0;
    MEMORY[0x23B83E31C](v5);
    sub_23977FDF8(a1, (uint64_t)v8);
    v10[0] = v9;
    v10[1] = v8;
    sub_239790400((uint64_t)v10);
  }
}

uint64_t sub_239780370(uint64_t a1)
{
  _QWORD v2[6];

  sub_23977FDF8(a1, (uint64_t)v2);
  return v2[0];
}

double sub_239780394@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 22)
    sub_239EC2854(a1, a2);
  sub_23977FDF8(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

double sub_2397803F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 22)
    sub_239EC2880(a1, a2);
  sub_23977FF3C(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

__int128 *sub_239780460()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932438);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932438))
  {
    v2 = sub_2397992A0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256932420, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256932430 = *((_QWORD *)v2 + 2);
      xmmword_256932420 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932420, &dword_23940C000);
    __cxa_guard_release(&qword_256932438);
  }
  if (byte_256932437 >= 0)
    return &xmmword_256932420;
  else
    return (__int128 *)xmmword_256932420;
}

void sub_239780520(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932438);
  _Unwind_Resume(a1);
}

uint64_t sub_239780538@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_239770214(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_239770404(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23978063C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_239780678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_23978068C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_2397806C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397806DC()
{
  return 65792;
}

uint64_t sub_2397806EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[32];
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_250AE7A78;
  v3 = *(unsigned int *)(a2 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v4 = 32;
  else
    v4 = v4;
  *(_DWORD *)v14 = 4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v14[4] = v5;
  *(_QWORD *)v11 = *(_QWORD *)v14;
  *(_DWORD *)&v11[8] = HIDWORD(v5);
  *(_DWORD *)v14 = 1;
  *(_QWORD *)&v14[4] = v3 | (v4 << 32);
  *(_QWORD *)&v11[12] = *(_QWORD *)v14;
  *(_DWORD *)&v11[20] = v4;
  *(_QWORD *)&v11[24] = v5;
  v12 = *(_QWORD *)&v14[4];
  *(_QWORD *)a1 = off_250AE6FC8;
  *(_DWORD *)(a1 + 8) = 0;
  v6 = a1 + 16;
  sub_23976CBBC(0, 25, (uint64_t)v11, a1 + 16);
  v7 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)&v11[24] && *(_DWORD *)&v11[28])
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v6, v13);
    sub_23976CF58((uint64_t)v13, (uint64_t)v14);
    v8 = v15;
    *v7 = *(_OWORD *)&v14[8];
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v16;
    sub_23979B260(v13);
  }
  else
  {
    v9 = *(_OWORD *)&v11[16];
    *v7 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 80) = v12;
  }
  *(_QWORD *)a1 = off_250AE7A78;
  return a1;
}

void sub_239780838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23979B260(&a18);
  v21 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v21])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  nullsub_4(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_2397808A0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD v6[2];
  __int128 v7;
  _QWORD v8[3];
  _OWORD v9[3];
  _DWORD v10[3];
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  sub_23976DD24(a2, v8);
  sub_239780D34(a2, (uint64_t)v6);
  v9[0] = v6[0];
  v9[1] = v6[1];
  v9[2] = v7;
  *a1 = off_250AE7A78;
  if (HIDWORD(v7) <= 0x20)
    v4 = 32;
  else
    v4 = HIDWORD(v7);
  v10[0] = 4;
  *(_QWORD *)&v10[1] = v7;
  LODWORD(v15[0]) = 1;
  *(_QWORD *)((char *)v15 + 4) = DWORD2(v7) | (unint64_t)(v4 << 32);
  v11 = v15[0];
  v12 = v4;
  v13 = v7;
  v14 = *(_QWORD *)((char *)v15 + 4);
  sub_23976D3A8((uint64_t)a1, 0, 25, (uint64_t)v10, v9);
  *a1 = off_250AE7A78;
  return sub_23979B260(v8);
}

void sub_2397809A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397809BC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE6FC8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239780A24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void (**v9)();
  int v10;
  uint64_t v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  sub_2397808A0(&v9, a2);
  v3 = v12;
  *(_DWORD *)(a1 + 8) = v10;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      v7 = v14;
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 80) = v15;
      v9 = off_250AE6FC8;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v16, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v16 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v16);
LABEL_6:
  v5 = v12;
  v6 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v15;
  v9 = off_250AE6FC8;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v16, &v11);
LABEL_9:
  v12 = -1;
  nullsub_4(&v9);
  return a1;
}

void sub_239780B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397809BC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239780B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23976D974(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 4;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(DWORD1(v24), 4);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_23976CF58((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239780D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239780D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23976D974(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    *(_DWORD *)v27 = 4;
    *(_QWORD *)&v27[4] = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(*(unsigned int *)&v27[4], 4);
    *(_DWORD *)v27 = 1;
    *(_QWORD *)&v27[4] = v9;
    v11 = *(_QWORD *)v27;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v13;
        v26 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v21;
        v26 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v17;
        v26 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_23976CF58((uint64_t)&v24, (uint64_t)v27);
    *(_QWORD *)a2 = *(_QWORD *)v27;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)&v27[8];
    *(_OWORD *)(a2 + 24) = v28;
    *(_QWORD *)(a2 + 40) = v29;
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239780F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239780F38()
{
  return 25;
}

_UNKNOWN **sub_239780F40()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_239780FB0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD v8[3];
  _BYTE v9[32];
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  _OWORD v14[3];
  _DWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  sub_23976DD24(a1, v13);
  sub_239780D34(a1, (uint64_t)v9);
  sub_239780D34(a1, (uint64_t)v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14[0] = v8[0];
  v14[1] = v8[1];
  v14[2] = v8[2];
  *v4 = off_250AE7A78;
  if (v12 <= 0x20)
    v6 = 32;
  else
    v6 = v12;
  *(_QWORD *)&v15[1] = v10;
  v15[0] = 4;
  LODWORD(v20[0]) = 1;
  *(_QWORD *)((char *)v20 + 4) = v11 | (unint64_t)(v6 << 32);
  v16 = v20[0];
  v17 = v6;
  v18 = v10;
  v19 = *(_QWORD *)((char *)v20 + 4);
  sub_23976D3A8((uint64_t)v4, 0, 25, (uint64_t)v15, v14);
  *v5 = off_250AE7A78;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_2397810E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x23B83E31C](v14, 0x10A3C40ED729E16);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23978110C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239781124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_23978113C(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD v8[6];
  _OWORD v9[3];
  _QWORD v10[2];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7FD0, 0);
  if (v4)
  {
    sub_239780A24(a1, (uint64_t)v4);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v8, lpsrc, 25);
    v5 = v8[0];
    v7 = *(_OWORD *)(v8[0] + 16);
    v6 = *(_OWORD *)(v8[0] + 32);
    v9[0] = *(_OWORD *)v8[0];
    v9[1] = v7;
    v9[2] = v6;
    v8[0] = 0;
    MEMORY[0x23B83E31C](v5);
    sub_239780B50(a1, (uint64_t)v8);
    v10[0] = v9;
    v10[1] = v8;
    sub_23978F738((uint64_t)v10);
  }
}

uint64_t sub_239781208(uint64_t a1)
{
  _QWORD v2[6];

  sub_239780B50(a1, (uint64_t)v2);
  return v2[0];
}

double sub_23978122C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 25)
    sub_239EC2854(a1, a2);
  sub_239780B50(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

double sub_239781290@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 25)
    sub_239EC2880(a1, a2);
  sub_239780D34(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

__int128 *sub_2397812F8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569324F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569324F8))
  {
    v2 = sub_239799650();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569324E0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569324F0 = *((_QWORD *)v2 + 2);
      xmmword_2569324E0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569324E0, &dword_23940C000);
    __cxa_guard_release(&qword_2569324F8);
  }
  if (byte_2569324F7 >= 0)
    return &xmmword_2569324E0;
  else
    return (__int128 *)xmmword_2569324E0;
}

void sub_2397813B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569324F8);
  _Unwind_Resume(a1);
}

uint64_t sub_2397813D0@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_23976DA94(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_23976DD24(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_2397814D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_239781510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_239781524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_239781560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239781574()
{
  return 65792;
}

uint64_t sub_239781584(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[32];
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_250AE7B08;
  v3 = *(unsigned int *)(a2 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x10)
    v4 = 16;
  else
    v4 = v4;
  *(_DWORD *)v14 = 4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v14[4] = v5;
  *(_QWORD *)v11 = *(_QWORD *)v14;
  *(_DWORD *)&v11[8] = HIDWORD(v5);
  *(_DWORD *)v14 = 1;
  *(_QWORD *)&v14[4] = v3 | (v4 << 32);
  *(_QWORD *)&v11[12] = *(_QWORD *)v14;
  *(_DWORD *)&v11[20] = v4;
  *(_QWORD *)&v11[24] = v5;
  v12 = *(_QWORD *)&v14[4];
  *(_QWORD *)a1 = off_250AE7328;
  *(_DWORD *)(a1 + 8) = 0;
  v6 = a1 + 16;
  sub_239774004(0, 31, (uint64_t)v11, a1 + 16);
  v7 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)&v11[24] && *(_DWORD *)&v11[28])
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v6, v13);
    sub_2397743A0((uint64_t)v13, (uint64_t)v14);
    v8 = v15;
    *v7 = *(_OWORD *)&v14[8];
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v16;
    sub_23979B260(v13);
  }
  else
  {
    v9 = *(_OWORD *)&v11[16];
    *v7 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 80) = v12;
  }
  *(_QWORD *)a1 = off_250AE7B08;
  return a1;
}

void sub_2397816D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23979B260(&a18);
  v21 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v21])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  nullsub_4(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_239781738(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD v6[2];
  __int128 v7;
  _QWORD v8[3];
  _OWORD v9[3];
  _DWORD v10[3];
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  sub_239775154(a2, v8);
  sub_239781BCC(a2, (uint64_t)v6);
  v9[0] = v6[0];
  v9[1] = v6[1];
  v9[2] = v7;
  *a1 = off_250AE7B08;
  if (HIDWORD(v7) <= 0x10)
    v4 = 16;
  else
    v4 = HIDWORD(v7);
  v10[0] = 4;
  *(_QWORD *)&v10[1] = v7;
  LODWORD(v15[0]) = 1;
  *(_QWORD *)((char *)v15 + 4) = DWORD2(v7) | (unint64_t)(v4 << 32);
  v11 = v15[0];
  v12 = v4;
  v13 = v7;
  v14 = *(_QWORD *)((char *)v15 + 4);
  sub_239774808((uint64_t)a1, 0, 31, (uint64_t)v10, v9);
  *a1 = off_250AE7B08;
  return sub_23979B260(v8);
}

void sub_239781840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239781854(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7328;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_2397818BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void (**v9)();
  int v10;
  uint64_t v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  sub_239781738(&v9, a2);
  v3 = v12;
  *(_DWORD *)(a1 + 8) = v10;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      v7 = v14;
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 80) = v15;
      v9 = off_250AE7328;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v16, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v16 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v16);
LABEL_6:
  v5 = v12;
  v6 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v15;
  v9 = off_250AE7328;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v16, &v11);
LABEL_9:
  v12 = -1;
  nullsub_4(&v9);
  return a1;
}

void sub_2397819D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239781854((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397819E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_239774DA4(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 4;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(DWORD1(v24), 4);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_2397743A0((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239781BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239781BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_239774DA4(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    *(_DWORD *)v27 = 4;
    *(_QWORD *)&v27[4] = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(*(unsigned int *)&v27[4], 4);
    *(_DWORD *)v27 = 1;
    *(_QWORD *)&v27[4] = v9;
    v11 = *(_QWORD *)v27;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v13;
        v26 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v21;
        v26 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v17;
        v26 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_2397743A0((uint64_t)&v24, (uint64_t)v27);
    *(_QWORD *)a2 = *(_QWORD *)v27;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)&v27[8];
    *(_OWORD *)(a2 + 24) = v28;
    *(_QWORD *)(a2 + 40) = v29;
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239781DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239781DD0()
{
  return 31;
}

_UNKNOWN **sub_239781DD8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_239781E48@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD v8[3];
  _BYTE v9[32];
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  _OWORD v14[3];
  _DWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  sub_239775154(a1, v13);
  sub_239781BCC(a1, (uint64_t)v9);
  sub_239781BCC(a1, (uint64_t)v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14[0] = v8[0];
  v14[1] = v8[1];
  v14[2] = v8[2];
  *v4 = off_250AE7B08;
  if (v12 <= 0x10)
    v6 = 16;
  else
    v6 = v12;
  *(_QWORD *)&v15[1] = v10;
  v15[0] = 4;
  LODWORD(v20[0]) = 1;
  *(_QWORD *)((char *)v20 + 4) = v11 | (unint64_t)(v6 << 32);
  v16 = v20[0];
  v17 = v6;
  v18 = v10;
  v19 = *(_QWORD *)((char *)v20 + 4);
  sub_239774808((uint64_t)v4, 0, 31, (uint64_t)v15, v14);
  *v5 = off_250AE7B08;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_239781F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x23B83E31C](v14, 0x10A3C40ED729E16);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239781FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239781FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

double sub_239781FD4(uint64_t a1, void *lpsrc)
{
  void *v4;
  double result;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _QWORD v9[6];
  _OWORD v10[3];
  _QWORD v11[2];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE7FE8, 0);
  if (v4)
  {
    sub_2397818BC(a1, (uint64_t)v4);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v9, lpsrc, 31);
    v6 = v9[0];
    v8 = *(_OWORD *)(v9[0] + 16);
    v7 = *(_OWORD *)(v9[0] + 32);
    v10[0] = *(_OWORD *)v9[0];
    v10[1] = v8;
    v10[2] = v7;
    v9[0] = 0;
    MEMORY[0x23B83E31C](v6);
    sub_2397819E8(a1, (uint64_t)v9);
    v11[0] = v10;
    v11[1] = v9;
    return sub_239792420(v11);
  }
  return result;
}

uint64_t sub_2397820A0(uint64_t a1)
{
  _QWORD v2[6];

  sub_2397819E8(a1, (uint64_t)v2);
  return v2[0];
}

double sub_2397820C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 31)
    sub_239EC2854(a1, a2);
  sub_2397819E8(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

double sub_239782128@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 31)
    sub_239EC2880(a1, a2);
  sub_239781BCC(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

__int128 *sub_239782190()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569325B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569325B8))
  {
    v2 = sub_239799A00();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569325A0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569325B0 = *((_QWORD *)v2 + 2);
      xmmword_2569325A0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569325A0, &dword_23940C000);
    __cxa_guard_release(&qword_2569325B8);
  }
  if (byte_2569325B7 >= 0)
    return &xmmword_2569325A0;
  else
    return (__int128 *)xmmword_2569325A0;
}

void sub_239782250(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569325B8);
  _Unwind_Resume(a1);
}

uint64_t sub_239782268@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_239774EC4(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_239775154(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23978236C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_2397823A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_2397823BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_2397823F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23978240C()
{
  return 65792;
}

uint64_t sub_23978241C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[32];
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_250AE7B98;
  v3 = *(unsigned int *)(a2 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  if (v4 <= 8)
    v4 = 8;
  else
    v4 = v4;
  *(_DWORD *)v14 = 4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v14[4] = v5;
  *(_QWORD *)v11 = *(_QWORD *)v14;
  *(_DWORD *)&v11[8] = HIDWORD(v5);
  *(_DWORD *)v14 = 1;
  *(_QWORD *)&v14[4] = v3 | (v4 << 32);
  *(_QWORD *)&v11[12] = *(_QWORD *)v14;
  *(_DWORD *)&v11[20] = v4;
  *(_QWORD *)&v11[24] = v5;
  v12 = *(_QWORD *)&v14[4];
  *(_QWORD *)a1 = off_250AE74D8;
  *(_DWORD *)(a1 + 8) = 0;
  v6 = a1 + 16;
  sub_2397778CC(0, 32, (uint64_t)v11, a1 + 16);
  v7 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)&v11[24] && *(_DWORD *)&v11[28])
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v6, v13);
    sub_239777C68((uint64_t)v13, (uint64_t)v14);
    v8 = v15;
    *v7 = *(_OWORD *)&v14[8];
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v16;
    sub_23979B260(v13);
  }
  else
  {
    v9 = *(_OWORD *)&v11[16];
    *v7 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 80) = v12;
  }
  *(_QWORD *)a1 = off_250AE7B98;
  return a1;
}

void sub_239782568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23979B260(&a18);
  v21 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v21])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  nullsub_4(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_2397825D0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD v6[2];
  __int128 v7;
  _QWORD v8[3];
  _OWORD v9[3];
  _DWORD v10[3];
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  sub_239778A1C(a2, v8);
  sub_239782A64(a2, (uint64_t)v6);
  v9[0] = v6[0];
  v9[1] = v6[1];
  v9[2] = v7;
  *a1 = off_250AE7B98;
  if (HIDWORD(v7) <= 8)
    v4 = 8;
  else
    v4 = HIDWORD(v7);
  v10[0] = 4;
  *(_QWORD *)&v10[1] = v7;
  LODWORD(v15[0]) = 1;
  *(_QWORD *)((char *)v15 + 4) = DWORD2(v7) | (unint64_t)(v4 << 32);
  v11 = v15[0];
  v12 = v4;
  v13 = v7;
  v14 = *(_QWORD *)((char *)v15 + 4);
  sub_2397780D0((uint64_t)a1, 0, 32, (uint64_t)v10, v9);
  *a1 = off_250AE7B98;
  return sub_23979B260(v8);
}

void sub_2397826D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397826EC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE74D8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239782754(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void (**v9)();
  int v10;
  uint64_t v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  sub_2397825D0(&v9, a2);
  v3 = v12;
  *(_DWORD *)(a1 + 8) = v10;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      v7 = v14;
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 80) = v15;
      v9 = off_250AE74D8;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v16, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v16 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v16);
LABEL_6:
  v5 = v12;
  v6 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v15;
  v9 = off_250AE74D8;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v16, &v11);
LABEL_9:
  v12 = -1;
  nullsub_4(&v9);
  return a1;
}

void sub_23978286C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397826EC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239782880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23977866C(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 4;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(DWORD1(v24), 4);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239777C68((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239782A50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239782A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23977866C(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    *(_DWORD *)v27 = 4;
    *(_QWORD *)&v27[4] = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(*(unsigned int *)&v27[4], 4);
    *(_DWORD *)v27 = 1;
    *(_QWORD *)&v27[4] = v9;
    v11 = *(_QWORD *)v27;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v13;
        v26 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v21;
        v26 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v17;
        v26 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239777C68((uint64_t)&v24, (uint64_t)v27);
    *(_QWORD *)a2 = *(_QWORD *)v27;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)&v27[8];
    *(_OWORD *)(a2 + 24) = v28;
    *(_QWORD *)(a2 + 40) = v29;
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239782C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239782C68()
{
  return 32;
}

_UNKNOWN **sub_239782C70()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_239782CE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD v8[3];
  _BYTE v9[32];
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  _OWORD v14[3];
  _DWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  sub_239778A1C(a1, v13);
  sub_239782A64(a1, (uint64_t)v9);
  sub_239782A64(a1, (uint64_t)v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14[0] = v8[0];
  v14[1] = v8[1];
  v14[2] = v8[2];
  *v4 = off_250AE7B98;
  if (v12 <= 8)
    v6 = 8;
  else
    v6 = v12;
  *(_QWORD *)&v15[1] = v10;
  v15[0] = 4;
  LODWORD(v20[0]) = 1;
  *(_QWORD *)((char *)v20 + 4) = v11 | (unint64_t)(v6 << 32);
  v16 = v20[0];
  v17 = v6;
  v18 = v10;
  v19 = *(_QWORD *)((char *)v20 + 4);
  sub_2397780D0((uint64_t)v4, 0, 32, (uint64_t)v15, v14);
  *v5 = off_250AE7B98;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_239782E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x23B83E31C](v14, 0x10A3C40ED729E16);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239782E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239782E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239782E6C(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD v8[6];
  _OWORD v9[3];
  _QWORD v10[2];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE8000, 0);
  if (v4)
  {
    sub_239782754(a1, (uint64_t)v4);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v8, lpsrc, 32);
    v5 = v8[0];
    v7 = *(_OWORD *)(v8[0] + 16);
    v6 = *(_OWORD *)(v8[0] + 32);
    v9[0] = *(_OWORD *)v8[0];
    v9[1] = v7;
    v9[2] = v6;
    v8[0] = 0;
    MEMORY[0x23B83E31C](v5);
    sub_239782880(a1, (uint64_t)v8);
    v10[0] = v9;
    v10[1] = v8;
    sub_2397934CC((uint64_t)v10);
  }
}

uint64_t sub_239782F38(uint64_t a1)
{
  _QWORD v2[6];

  sub_239782880(a1, (uint64_t)v2);
  return v2[0];
}

double sub_239782F5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 32)
    sub_239EC2854(a1, a2);
  sub_239782880(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

double sub_239782FC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 32)
    sub_239EC2880(a1, a2);
  sub_239782A64(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

__int128 *sub_239783028()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932678);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932678))
  {
    v2 = sub_239799DB0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256932660, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256932670 = *((_QWORD *)v2 + 2);
      xmmword_256932660 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932660, &dword_23940C000);
    __cxa_guard_release(&qword_256932678);
  }
  if (byte_256932677 >= 0)
    return &xmmword_256932660;
  else
    return (__int128 *)xmmword_256932660;
}

void sub_2397830E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932678);
  _Unwind_Resume(a1);
}

uint64_t sub_239783100@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_23977878C(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_239778A1C(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_239783204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_239783240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_239783254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_239783290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397832A4()
{
  return 65792;
}

uint64_t sub_2397832B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[32];
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_250AE7C28;
  v3 = *(unsigned int *)(a2 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v4 = 32;
  else
    v4 = v4;
  *(_DWORD *)v14 = 4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v14[4] = v5;
  *(_QWORD *)v11 = *(_QWORD *)v14;
  *(_DWORD *)&v11[8] = HIDWORD(v5);
  *(_DWORD *)v14 = 1;
  *(_QWORD *)&v14[4] = v3 | (v4 << 32);
  *(_QWORD *)&v11[12] = *(_QWORD *)v14;
  *(_DWORD *)&v11[20] = v4;
  *(_QWORD *)&v11[24] = v5;
  v12 = *(_QWORD *)&v14[4];
  *(_QWORD *)a1 = off_250AE6FC8;
  *(_DWORD *)(a1 + 8) = 0;
  v6 = a1 + 16;
  sub_23976CBBC(0, 37, (uint64_t)v11, a1 + 16);
  v7 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)&v11[24] && *(_DWORD *)&v11[28])
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v6, v13);
    sub_23976CF58((uint64_t)v13, (uint64_t)v14);
    v8 = v15;
    *v7 = *(_OWORD *)&v14[8];
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v16;
    sub_23979B260(v13);
  }
  else
  {
    v9 = *(_OWORD *)&v11[16];
    *v7 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 80) = v12;
  }
  *(_QWORD *)a1 = off_250AE7C28;
  return a1;
}

void sub_239783400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23979B260(&a18);
  v21 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v21])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  nullsub_4(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_239783468(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD v6[2];
  __int128 v7;
  _QWORD v8[3];
  _OWORD v9[3];
  _DWORD v10[3];
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  sub_23976DD24(a2, v8);
  sub_2397838FC(a2, (uint64_t)v6);
  v9[0] = v6[0];
  v9[1] = v6[1];
  v9[2] = v7;
  *a1 = off_250AE7C28;
  if (HIDWORD(v7) <= 0x20)
    v4 = 32;
  else
    v4 = HIDWORD(v7);
  v10[0] = 4;
  *(_QWORD *)&v10[1] = v7;
  LODWORD(v15[0]) = 1;
  *(_QWORD *)((char *)v15 + 4) = DWORD2(v7) | (unint64_t)(v4 << 32);
  v11 = v15[0];
  v12 = v4;
  v13 = v7;
  v14 = *(_QWORD *)((char *)v15 + 4);
  sub_23976D3A8((uint64_t)a1, 0, 37, (uint64_t)v10, v9);
  *a1 = off_250AE7C28;
  return sub_23979B260(v8);
}

void sub_239783570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239783584(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE6FC8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_2397835EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void (**v9)();
  int v10;
  uint64_t v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  sub_239783468(&v9, a2);
  v3 = v12;
  *(_DWORD *)(a1 + 8) = v10;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      v7 = v14;
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 80) = v15;
      v9 = off_250AE6FC8;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v16, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v16 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v16);
LABEL_6:
  v5 = v12;
  v6 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v15;
  v9 = off_250AE6FC8;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v16, &v11);
LABEL_9:
  v12 = -1;
  nullsub_4(&v9);
  return a1;
}

void sub_239783704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239783584((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239783718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23976D974(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 4;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(DWORD1(v24), 4);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_23976CF58((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_2397838E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397838FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_23976D974(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    *(_DWORD *)v27 = 4;
    *(_QWORD *)&v27[4] = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(*(unsigned int *)&v27[4], 4);
    *(_DWORD *)v27 = 1;
    *(_QWORD *)&v27[4] = v9;
    v11 = *(_QWORD *)v27;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v13;
        v26 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v21;
        v26 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v17;
        v26 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_23976CF58((uint64_t)&v24, (uint64_t)v27);
    *(_QWORD *)a2 = *(_QWORD *)v27;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)&v27[8];
    *(_OWORD *)(a2 + 24) = v28;
    *(_QWORD *)(a2 + 40) = v29;
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239783AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239783B00()
{
  return 37;
}

_UNKNOWN **sub_239783B08()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_239783B78@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD v8[3];
  _BYTE v9[32];
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  _OWORD v14[3];
  _DWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  sub_23976DD24(a1, v13);
  sub_2397838FC(a1, (uint64_t)v9);
  sub_2397838FC(a1, (uint64_t)v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14[0] = v8[0];
  v14[1] = v8[1];
  v14[2] = v8[2];
  *v4 = off_250AE7C28;
  if (v12 <= 0x20)
    v6 = 32;
  else
    v6 = v12;
  *(_QWORD *)&v15[1] = v10;
  v15[0] = 4;
  LODWORD(v20[0]) = 1;
  *(_QWORD *)((char *)v20 + 4) = v11 | (unint64_t)(v6 << 32);
  v16 = v20[0];
  v17 = v6;
  v18 = v10;
  v19 = *(_QWORD *)((char *)v20 + 4);
  sub_23976D3A8((uint64_t)v4, 0, 37, (uint64_t)v15, v14);
  *v5 = off_250AE7C28;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_239783CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x23B83E31C](v14, 0x10A3C40ED729E16);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239783CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239783CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239783D04(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD v8[6];
  _OWORD v9[3];
  _QWORD v10[2];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE8018, 0);
  if (v4)
  {
    sub_2397835EC(a1, (uint64_t)v4);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v8, lpsrc, 37);
    v5 = v8[0];
    v7 = *(_OWORD *)(v8[0] + 16);
    v6 = *(_OWORD *)(v8[0] + 32);
    v9[0] = *(_OWORD *)v8[0];
    v9[1] = v7;
    v9[2] = v6;
    v8[0] = 0;
    MEMORY[0x23B83E31C](v5);
    sub_239783718(a1, (uint64_t)v8);
    v10[0] = v9;
    v10[1] = v8;
    sub_23978F738((uint64_t)v10);
  }
}

uint64_t sub_239783DD0(uint64_t a1)
{
  _QWORD v2[6];

  sub_239783718(a1, (uint64_t)v2);
  return v2[0];
}

double sub_239783DF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 37)
    sub_239EC2854(a1, a2);
  sub_239783718(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

double sub_239783E58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 37)
    sub_239EC2880(a1, a2);
  sub_2397838FC(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

__int128 *sub_239783EC0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932738);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932738))
  {
    v2 = sub_23979A160();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256932720, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256932730 = *((_QWORD *)v2 + 2);
      xmmword_256932720 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932720, &dword_23940C000);
    __cxa_guard_release(&qword_256932738);
  }
  if (byte_256932737 >= 0)
    return &xmmword_256932720;
  else
    return (__int128 *)xmmword_256932720;
}

void sub_239783F80(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932738);
  _Unwind_Resume(a1);
}

uint64_t sub_239783F98@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_23976DA94(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_23976DD24(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_23978409C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_2397840D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_2397840EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_239784128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23978413C()
{
  return 65792;
}

uint64_t sub_23978414C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _BYTE v11[32];
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_250AE7CB8;
  v3 = *(unsigned int *)(a2 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x10)
    v4 = 16;
  else
    v4 = v4;
  *(_DWORD *)v14 = 4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v14[4] = v5;
  *(_QWORD *)v11 = *(_QWORD *)v14;
  *(_DWORD *)&v11[8] = HIDWORD(v5);
  *(_DWORD *)v14 = 1;
  *(_QWORD *)&v14[4] = v3 | (v4 << 32);
  *(_QWORD *)&v11[12] = *(_QWORD *)v14;
  *(_DWORD *)&v11[20] = v4;
  *(_QWORD *)&v11[24] = v5;
  v12 = *(_QWORD *)&v14[4];
  *(_QWORD *)a1 = off_250AE7178;
  *(_DWORD *)(a1 + 8) = 0;
  v6 = a1 + 16;
  sub_2397704C4(0, 38, (uint64_t)v11, a1 + 16);
  v7 = (_OWORD *)(a1 + 48);
  if (*(_DWORD *)&v11[24] && *(_DWORD *)&v11[28])
  {
    if (*(_DWORD *)(a1 + 40))
      sub_23964B158();
    sub_23979C50C(v6, v13);
    sub_239770860((uint64_t)v13, (uint64_t)v14);
    v8 = v15;
    *v7 = *(_OWORD *)&v14[8];
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v16;
    sub_23979B260(v13);
  }
  else
  {
    v9 = *(_OWORD *)&v11[16];
    *v7 = *(_OWORD *)v11;
    *(_OWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 80) = v12;
  }
  *(_QWORD *)a1 = off_250AE7CB8;
  return a1;
}

void sub_239784298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23979B260(&a18);
  v21 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v21])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  nullsub_4(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_239784300(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD v6[2];
  __int128 v7;
  _QWORD v8[3];
  _OWORD v9[3];
  _DWORD v10[3];
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  sub_2397715E4(a2, v8);
  sub_239784794(a2, (uint64_t)v6);
  v9[0] = v6[0];
  v9[1] = v6[1];
  v9[2] = v7;
  *a1 = off_250AE7CB8;
  if (HIDWORD(v7) <= 0x10)
    v4 = 16;
  else
    v4 = HIDWORD(v7);
  v10[0] = 4;
  *(_QWORD *)&v10[1] = v7;
  LODWORD(v15[0]) = 1;
  *(_QWORD *)((char *)v15 + 4) = DWORD2(v7) | (unint64_t)(v4 << 32);
  v11 = v15[0];
  v12 = v4;
  v13 = v7;
  v14 = *(_QWORD *)((char *)v15 + 4);
  sub_239770CB0((uint64_t)a1, 0, 38, (uint64_t)v10, v9);
  *a1 = off_250AE7CB8;
  return sub_23979B260(v8);
}

void sub_239784408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23978441C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_250AE7178;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return nullsub_4(a1);
}

uint64_t sub_239784484(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  void (**v9)();
  int v10;
  uint64_t v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  sub_239784300(&v9, a2);
  v3 = v12;
  *(_DWORD *)(a1 + 8) = v10;
  v4 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v4 == -1)
  {
    if ((_DWORD)v3 == -1)
    {
      v7 = v14;
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 80) = v15;
      v9 = off_250AE7178;
      goto LABEL_9;
    }
  }
  else if ((_DWORD)v3 == -1)
  {
    ((void (*)(uint64_t *, uint64_t))off_250AE8048[v4])(&v16, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_6;
  }
  v16 = a1 + 16;
  ((void (*)(uint64_t *))off_250AE8088[v3])(&v16);
LABEL_6:
  v5 = v12;
  v6 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = v15;
  v9 = off_250AE7178;
  if ((_DWORD)v5 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_250AE8048[v5])(&v16, &v11);
LABEL_9:
  v12 = -1;
  nullsub_4(&v9);
  return a1;
}

void sub_23978459C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23978441C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397845B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_239771234(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    LODWORD(v24) = 4;
    *(_QWORD *)((char *)&v24 + 4) = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(DWORD1(v24), 4);
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = v9;
    v11 = v24;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v13;
        v25 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v21;
        v25 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v24 = &off_250AE94F0;
        *((_QWORD *)&v24 + 1) = v17;
        v25 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239770860((uint64_t)&v24, a2);
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239784780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239784794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  result = (_QWORD *)sub_239771234(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(a1 + 76))
      v5 = *(_DWORD *)(a1 + 72) == 0;
    else
      v5 = 1;
    v6 = *(_QWORD *)(a1 + 72);
    if (v5)
      v6 = 0;
    *(_DWORD *)v27 = 4;
    *(_QWORD *)&v27[4] = v6;
    v7 = 4 * ((_DWORD)v6 != 0);
    LODWORD(v8) = v7 * v6;
    if (HIDWORD(v6))
      v8 = v8;
    else
      v8 = 0;
    v9 = v7 & 0x3FFFFFFFFLL | ((unint64_t)(v8 >> 2) << 34);
    v10 = __PAIR64__(*(unsigned int *)&v27[4], 4);
    *(_DWORD *)v27 = 1;
    *(_QWORD *)&v27[4] = v9;
    v11 = *(_QWORD *)v27;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = HIDWORD(v6);
    *(_QWORD *)(a2 + 20) = v11;
    *(_DWORD *)(a2 + 28) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
        v13 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v13;
        v26 = v12;
        if (v12)
        {
          v14 = (unint64_t *)(v12 + 8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }
        break;
      case 1:
        v21 = *(_QWORD *)(a1 + 24);
        v20 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v21;
        v26 = v20;
        if (v20)
        {
          v22 = (unint64_t *)(v20 + 8);
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }
        break;
      case 2:
        v17 = *(_QWORD *)(a1 + 24);
        v16 = *(_QWORD *)(a1 + 32);
        v24 = &off_250AE94F0;
        v25 = v17;
        v26 = v16;
        if (v16)
        {
          v18 = (unint64_t *)(v16 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        break;
      case 3:
        sub_23979D2AC((uint64_t *)(a1 + 16), &v24);
        break;
      default:
        sub_23964B158();
    }
    sub_239770860((uint64_t)&v24, (uint64_t)v27);
    *(_QWORD *)a2 = *(_QWORD *)v27;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)&v27[8];
    *(_OWORD *)(a2 + 24) = v28;
    *(_QWORD *)(a2 + 40) = v29;
    return sub_23979BCF4(&v24);
  }
  return result;
}

void sub_239784984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979BCF4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239784998()
{
  return 38;
}

_UNKNOWN **sub_2397849A0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E18))
    return &off_256931E10;
  __cxa_atexit((void (*)(void *))j_nullsub_4_88, &off_256931E10, &dword_23940C000);
  __cxa_guard_release(&qword_256931E18);
  return &off_256931E10;
}

uint64_t sub_239784A10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _OWORD v8[3];
  _BYTE v9[32];
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v13[3];
  _OWORD v14[3];
  _DWORD v15[3];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  sub_2397715E4(a1, v13);
  sub_239784794(a1, (uint64_t)v9);
  sub_239784794(a1, (uint64_t)v8);
  v4 = (_QWORD *)operator new();
  v5 = v4;
  v14[0] = v8[0];
  v14[1] = v8[1];
  v14[2] = v8[2];
  *v4 = off_250AE7CB8;
  if (v12 <= 0x10)
    v6 = 16;
  else
    v6 = v12;
  *(_QWORD *)&v15[1] = v10;
  v15[0] = 4;
  LODWORD(v20[0]) = 1;
  *(_QWORD *)((char *)v20 + 4) = v11 | (unint64_t)(v6 << 32);
  v16 = v20[0];
  v17 = v6;
  v18 = v10;
  v19 = *(_QWORD *)((char *)v20 + 4);
  sub_239770CB0((uint64_t)v4, 0, 38, (uint64_t)v15, v14);
  *v5 = off_250AE7CB8;
  *a2 = v5;
  return sub_23979B260(v13);
}

void sub_239784B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x23B83E31C](v14, 0x10A3C40ED729E16);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239784B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239784B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_23979B260(va);
  _Unwind_Resume(a1);
}

void sub_239784B9C(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD v8[6];
  _OWORD v9[3];
  _QWORD v10[2];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE8030, 0);
  if (v4)
  {
    sub_239784484(a1, (uint64_t)v4);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v8, lpsrc, 38);
    v5 = v8[0];
    v7 = *(_OWORD *)(v8[0] + 16);
    v6 = *(_OWORD *)(v8[0] + 32);
    v9[0] = *(_OWORD *)v8[0];
    v9[1] = v7;
    v9[2] = v6;
    v8[0] = 0;
    MEMORY[0x23B83E31C](v5);
    sub_2397845B0(a1, (uint64_t)v8);
    v10[0] = v9;
    v10[1] = v8;
    sub_239790E2C((uint64_t)v10);
  }
}

uint64_t sub_239784C68(uint64_t a1)
{
  _QWORD v2[6];

  sub_2397845B0(a1, (uint64_t)v2);
  return v2[0];
}

double sub_239784C8C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 38)
    sub_239EC2854(a1, a2);
  sub_2397845B0(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

double sub_239784CF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;

  if ((_DWORD)a2 != 38)
    sub_239EC2880(a1, a2);
  sub_239784794(a1, (uint64_t)v7);
  v4 = (_OWORD *)operator new();
  v5 = v7[1];
  *v4 = v7[0];
  v4[1] = v5;
  result = *(double *)&v8;
  v4[2] = v8;
  *a3 = v4;
  return result;
}

__int128 *sub_239784D58()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569327F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569327F8))
  {
    v2 = sub_23979A510();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569327E0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569327F0 = *((_QWORD *)v2 + 2);
      xmmword_2569327E0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569327E0, &dword_23940C000);
    __cxa_guard_release(&qword_2569327F8);
  }
  if (byte_2569327F7 >= 0)
    return &xmmword_2569327E0;
  else
    return (__int128 *)xmmword_2569327E0;
}

void sub_239784E18(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569327F8);
  _Unwind_Resume(a1);
}

uint64_t sub_239784E30@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v10;

  if (a2)
  {
    sub_239771354(a1, &v7);
    v4 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94D0;
    *v4 = &off_250AE7D68;
    sub_23979B368(v4 + 1, (uint64_t)&v9);
    sub_23979B610(&v9);
    *a3 = v4;
    return sub_23979B610(&v7);
  }
  else
  {
    sub_2397715E4(a1, &v7);
    v6 = (_QWORD *)operator new();
    v10 = v8;
    v8 = 0uLL;
    v9 = &off_250AE94B0;
    *v6 = &off_250AE7D48;
    sub_23979AFB8(v6 + 1, (uint64_t)&v9);
    sub_23979B260(&v9);
    *a3 = v6;
    return sub_23979B260(&v7);
  }
}

void sub_239784F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B260(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_239784F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B260(&a9);
  _Unwind_Resume(a1);
}

void sub_239784F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;

  nullsub_4(v12);
  sub_23979B610(&a12);
  MEMORY[0x23B83E31C](v12, 0xA1C40711E6FFCLL);
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

void sub_239784FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23979B610(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239784FD4()
{
  return 65792;
}

_QWORD *sub_239784FE4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  __int128 v2;

  *a1 = off_250AE7568;
  v2 = xmmword_239EEAE20;
  result = (_QWORD *)sub_239769A74((uint64_t)a1, 0, 1, (unsigned int *)&v2, 0);
  *result = off_250AE7568;
  return result;
}

uint64_t sub_239785038@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _BOOL8 v3;
  _QWORD v5[2];

  v2 = a2;
  LODWORD(a2) = *a1;
  v3 = *a1 != 0;
  if (a1[1])
    a2 = a2;
  else
    a2 = 0;
  v5[0] = *(_QWORD *)a1;
  v5[1] = v3 | (a2 << 32);
  return sub_239778ADC(v2, (uint64_t)v5);
}

__int128 *sub_23978507C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569328B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569328B8))
    return &xmmword_2569328A0;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two16f]", &xmmword_2569328A0);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569328A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569328B8);
  return &xmmword_2569328A0;
}

void sub_23978510C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569328B8);
  _Unwind_Resume(a1);
}

__int128 *sub_239785124()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569328D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569328D8))
    return &xmmword_2569328C0;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two32f]", &xmmword_2569328C0);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569328C0, &dword_23940C000);
  __cxa_guard_release(&qword_2569328D8);
  return &xmmword_2569328C0;
}

void sub_2397851B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569328D8);
  _Unwind_Resume(a1);
}

uint64_t sub_2397851CC@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD v7[3];
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];

  v12[2] = *MEMORY[0x24BDAC8D0];
  if (*a1)
    v3 = 3;
  else
    v3 = 0;
  LODWORD(v4) = v3 * *a1;
  if (a1[1])
    v4 = v4;
  else
    v4 = 0;
  v7[0] = 3;
  v5 = *(_QWORD *)a1;
  v7[1] = *(_QWORD *)a1;
  v7[2] = HIDWORD(v5);
  LODWORD(v12[0]) = 1;
  *(_QWORD *)((char *)v12 + 4) = v3 | (v4 << 32);
  v8 = v12[0];
  v9 = v4;
  v10 = v5;
  v11 = *(_QWORD *)((char *)v12 + 4);
  return sub_23977EC3C(a2, (uint64_t)v7);
}

uint64_t sub_239785278(_QWORD *a1)
{
  *a1 = &off_250AE7D48;
  sub_23979B260(a1 + 1);
  return nullsub_4(a1);
}

void sub_2397852A8(_QWORD *a1)
{
  *a1 = &off_250AE7D48;
  sub_23979B260(a1 + 1);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397852EC(_QWORD *a1)
{
  *a1 = &off_250AE7D68;
  sub_23979B610(a1 + 1);
  return nullsub_4(a1);
}

void sub_23978531C(_QWORD *a1)
{
  *a1 = &off_250AE7D68;
  sub_23979B610(a1 + 1);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239785360(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  std::logic_error *exception;
  unsigned int v7;
  std::string v8;

  v4 = sub_23979A918(a1);
  v5 = sub_239785458(v4);
  if ((v5 & 0xFF00000000) == 0)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v7 = sub_23979A918(a1);
    sub_239785724("Attempting to map pixel buffer of format ", &v7, " into a SharedCVImage. The format is not (yet) supported by Kit_Image.", &v8);
    std::logic_error::logic_error(exception, &v8);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  sub_2397866C4(a2, v5);
}

void sub_239785420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t sub_239785458(int a1)
{
  int v1;

  if (a1 > 1278226535)
  {
    if (a1 <= 1647589489)
    {
      if (a1 > 1380410944)
      {
        switch(a1)
        {
          case 1380410945:
            return 0x100000020;
          case 1380411457:
            return 0x10000001FLL;
          case 1647392359:
            return 0x100000002;
        }
        return 0;
      }
      if (a1 != 1278226536)
      {
        if (a1 == 1380401729)
          return 0x10000001DLL;
        return 0;
      }
    }
    else
    {
      if (a1 <= 1717856626)
      {
        if (a1 == 1647589490)
          return 0x100000016;
        if (a1 == 1647719521)
          return 0x100000026;
        v1 = 1717855600;
        goto LABEL_22;
      }
      if (a1 == 1717856627)
        return 0x100000004;
      if (a1 != 1751410032 && a1 != 1751411059)
        return 0;
    }
    return 0x100000003;
  }
  if (a1 <= 843264103)
  {
    if (a1 <= 842285638)
    {
      if (a1 == 24)
        return 0x100000015;
      if (a1 == 32)
        return 0x100000025;
    }
    else
    {
      switch(a1)
      {
        case 842285639:
          return 0x100000011;
        case 843264056:
          return 0x100000005;
        case 843264102:
          return 0x100000008;
      }
    }
    return 0;
  }
  if (a1 > 1111970368)
  {
    if (a1 == 1111970369)
      return 0x100000019;
    if (a1 == 1278226488)
      return 0x100000001;
    v1 = 1278226534;
LABEL_22:
    if (a1 != v1)
      return 0;
    return 0x100000004;
  }
  if (a1 == 843264104)
    return 0x100000007;
  if (a1 == 1094862674)
    return 0x100000021;
  return 0;
}

void sub_239785724(const char *a1@<X0>, unsigned int *a2@<X1>, const char *a3@<X2>, std::string *a4@<X8>)
{
  char *v7;
  size_t v8;
  int64x2_t v9;
  int8x16_t v10;
  size_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void *v18;
  void *v19;
  char *v20;
  unint64_t v21;
  void *__p[2];
  char v23;

  v19 = 0;
  v20 = 0;
  v21 = 0;
  v20 = sub_23941AAB0(&v19, a1);
  sub_23978D910((uint64_t)__p, (uint64_t)&v19, a2);
  v7 = v20;
  if ((unint64_t)v20 >= v21)
  {
    v13 = sub_23978D9E4(&v19, a3);
    goto LABEL_12;
  }
  v8 = strlen(a3);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v8;
  if (v8 >= 0x17)
  {
    v14 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v14 = v8 | 7;
    v15 = v14 + 1;
    v12 = operator new(v14 + 1);
    *((_QWORD *)v7 + 1) = v11;
    *((_QWORD *)v7 + 2) = v15 | 0x8000000000000000;
    *(_QWORD *)v7 = v12;
  }
  else
  {
    v20[23] = v8;
    v12 = v7;
    if (!v8)
      goto LABEL_11;
  }
  memmove(v12, a3, v11);
LABEL_11:
  *((_BYTE *)v12 + v11) = 0;
  v13 = v7 + 24;
LABEL_12:
  v20 = v13;
  v23 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v19, (uint64_t)v13, (uint64_t)__p, a4, v9, v10);
  if (v23 < 0)
    operator delete(__p[0]);
  v16 = (char *)v19;
  if (v19)
  {
    v17 = v20;
    v18 = v19;
    if (v20 != v19)
    {
      do
      {
        if (*(v17 - 1) < 0)
          operator delete(*((void **)v17 - 3));
        v17 -= 24;
      }
      while (v17 != v16);
      v18 = v19;
    }
    v20 = v16;
    operator delete(v18);
  }
}

void sub_2397858A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397858F8(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  int v6;
  uint64_t v7;
  size_t v8;
  BOOL v9;
  size_t v10;
  _BOOL8 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  uint64_t (**v17)();
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;

  if (!sub_23979AA14(a2))
    sub_239EC290C();
  v6 = sub_23979A918(a2);
  if (sub_23978DF18(v6) <= a3)
    sub_239EC28DC();
  if (sub_23979A918(a2) != 875704438 && sub_23979A918(a2) != 875704422)
    sub_239EC28AC();
  v7 = sub_23979CEE8(a2, a3);
  v20 = sub_23979C768(a2, a3);
  v8 = sub_23979CDDC(a2, a3);
  if (HIDWORD(v20))
    v9 = v20 == 0;
  else
    v9 = 1;
  v10 = v8 << 32;
  if (v9)
    v10 = 0;
  v11 = v20 != 0;
  if (a3)
  {
    v17 = &off_250ADB428;
    v21 = v10 | (2 * v11);
    v22 = v7;
    sub_2396450C8(&v22, &v20, &v21, (uint64_t)&v18);
    *a1 = &off_250ADB1D0;
    sub_239645344((uint64_t)&v17, (uint64_t)(a1 + 1));
    v12 = v19;
    if (!v19)
      return nullsub_4(&v17);
    p_shared_owners = (unint64_t *)&v19->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
  }
  else
  {
    v17 = &off_250ADB3D0;
    v21 = v10 | v11;
    v22 = v7;
    sub_23957FFF4(&v22, &v20, (uint64_t *)&v21, (uint64_t)&v18);
    *a1 = &off_250ADB1D0;
    sub_239644F6C((uint64_t)&v17, (uint64_t)(a1 + 1));
    v12 = v19;
    if (!v19)
      return nullsub_4(&v17);
    v15 = (unint64_t *)&v19->__shared_owners_;
    do
      v14 = __ldaxr(v15);
    while (__stlxr(v14 - 1, v15));
  }
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  return nullsub_4(&v17);
}

void sub_239785ACC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  nullsub_4(v2);
  sub_23941965C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239785AE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239785AFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  nullsub_4(v2);
  sub_239419954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239785B18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239785B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  int v8;
  __int16 v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  _QWORD v17[2];
  std::__shared_weak_count *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  __int16 v23;

  sub_239785360(a1, (uint64_t)v17);
  *(_QWORD *)a2 = &off_250ADB1D0;
  v3 = v17[1];
  v4 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v7 = v21;
    v8 = v22;
    v9 = v23;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  else
  {
    v7 = v21;
    v8 = v22;
    v9 = v23;
  }
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v7;
  *(_DWORD *)(a2 + 48) = v8;
  *(_WORD *)(a2 + 52) = v9;
  if (v4)
  {
    v11 = (unint64_t *)&v4->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v17[0] = &off_250AE81B0;
  nullsub_4(&v19);
  v13 = v18;
  if (v18)
  {
    v14 = (unint64_t *)&v18->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  return nullsub_4(v17);
}

double sub_239785C64(_QWORD *a1)
{
  __n128 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  double result;

  *a1 = &off_250AE81B0;
  v2 = nullsub_4(a1 + 3);
  v3 = (std::__shared_weak_count *)a1[2];
  if (!v3)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v3->__on_zero_shared)(v3, v2);
    std::__shared_weak_count::__release_weak(v3);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_239785CDC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD v6[3];

  sub_23979C518(a1, v6);
  sub_2397858F8(a3, (uint64_t)v6, a2);
  return sub_23979B610(v6);
}

void sub_239785D24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23979B610(va);
  _Unwind_Resume(a1);
}

const char *sub_239785D38()
{
  return "{unknown buffer type}";
}

uint64_t sub_239785D48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE6E18;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40A1F8E8FFLL);
}

uint64_t sub_239785DC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE7058;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40A1F8E8FFLL);
}

uint64_t sub_239785E40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE7208;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40A1F8E8FFLL);
}

uint64_t sub_239785EBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE73B8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40A1F8E8FFLL);
}

uint64_t sub_239785F38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE6EA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
}

uint64_t sub_239785FB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE7298;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
}

uint64_t sub_239786030(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE7448;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
}

uint64_t sub_2397860AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE6F38;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
}

uint64_t sub_239786128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE70E8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
}

uint64_t sub_2397861A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE6FC8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
}

uint64_t sub_239786220(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE7328;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
}

uint64_t sub_23978629C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE74D8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
}

uint64_t sub_239786318(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE6FC8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
}

uint64_t sub_239786394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)a1 = off_250AE7178;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v5, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  v3 = nullsub_4(a1);
  return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
}

_QWORD *sub_239786410(uint64_t a1, _QWORD *a2)
{
  return sub_23979BCF4(a2);
}

uint64_t sub_239786418(uint64_t a1, uint64_t a2)
{
  return sub_23979B260(a2);
}

uint64_t sub_239786420(uint64_t a1, uint64_t a2)
{
  return sub_23979B610(a2);
}

void sub_239786428(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a2 + 8);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
}

void sub_239786438(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char v10;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_9;
  if ((_DWORD)v5)
  {
    ((void (*)(char *, uint64_t))off_250AE8048[v5])(&v10, v4);
LABEL_9:
    *(_QWORD *)v4 = &off_250AE94F0;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_DWORD *)(v4 + 24) = 0;
    return;
  }
  v6 = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v6;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

__n128 sub_23978650C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  char v7;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 24);
  if ((_DWORD)v5 != -1)
  {
    if ((_DWORD)v5 == 1)
    {
      sub_23979B098(a2, a3);
      return result;
    }
    ((void (*)(char *, uint64_t))off_250AE8048[v5])(&v7, v4);
  }
  result = *(__n128 *)(a3 + 8);
  *(__n128 *)(v4 + 8) = result;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)v4 = &off_250AE94B0;
  *(_DWORD *)(v4 + 24) = 1;
  return result;
}

__n128 sub_2397865A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  char v7;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 24);
  if ((_DWORD)v5 != -1)
  {
    if ((_DWORD)v5 == 2)
    {
      sub_23979B448(a2, a3);
      return result;
    }
    ((void (*)(char *, uint64_t))off_250AE8048[v5])(&v7, v4);
  }
  result = *(__n128 *)(a3 + 8);
  *(__n128 *)(v4 + 8) = result;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)v4 = &off_250AE94D0;
  *(_DWORD *)(v4 + 24) = 2;
  return result;
}

__n128 sub_239786634(__n128 **a1, __n128 *a2, __n128 *a3)
{
  __n128 *v4;
  uint64_t v5;
  __n128 result;
  std::__shared_weak_count *v7;
  char v8;

  v4 = *a1;
  v5 = (*a1)[1].n128_u32[2];
  if ((_DWORD)v5 == -1)
    goto LABEL_6;
  if ((_DWORD)v5 != 3)
  {
    ((void (*)(char *, __n128 *))off_250AE8048[v5])(&v8, v4);
LABEL_6:
    result = *a3;
    *v4 = *a3;
    a3->n128_u64[0] = 0;
    a3->n128_u64[1] = 0;
    v4[1].n128_u32[2] = 3;
    return result;
  }
  result = *a3;
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  v7 = (std::__shared_weak_count *)a2->n128_u64[1];
  *a2 = result;
  if (v7)
    std::__shared_weak_count::__release_weak(v7);
  return result;
}

void sub_2397866C4(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2397866FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (**v17)();
  uint64_t v18;
  std::__shared_weak_count *v19;

  v3 = operator new();
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(std::__shared_weak_count **)(v1 + 16);
  *(_QWORD *)(v2 - 64) = &off_250AE94F0;
  *(_QWORD *)(v2 - 56) = v5;
  *(_QWORD *)(v2 - 48) = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v18 = v5;
    v19 = v6;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v18 = v5;
    v19 = 0;
  }
  v17 = &off_250AE94F0;
  sub_239769EB0(v3, (uint64_t)&v17);
  sub_23979BCF4(&v17);
  *v4 = off_250AE7568;
  sub_23979BCF4((_QWORD *)(v2 - 64));
  *(_QWORD *)(v2 - 64) = v4;
  sub_2397881C8(&v17, (uint64_t *)(v2 - 64));
  *v0 = &off_250AE81B0;
  sub_239788538(&v17, (uint64_t)(v0 + 1));
  v17 = &off_250AE80B8;
  v10 = v19;
  if (v19)
  {
    v11 = (unint64_t *)&v19->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  result = nullsub_4(&v17);
  v14 = *(_QWORD *)(v2 - 64);
  *(_QWORD *)(v2 - 64) = 0;
  if (v14)
  {
    *(_QWORD *)v14 = off_250AE6E18;
    v15 = *(unsigned int *)(v14 + 40);
    if ((_DWORD)v15 != -1)
      ((void (*)(uint64_t, uint64_t))off_250AE8048[v15])(v2 - 33, v14 + 16);
    *(_DWORD *)(v14 + 40) = -1;
    v16 = nullsub_4(v14);
    return MEMORY[0x23B83E31C](v16, 0x10A3C40A1F8E8FFLL);
  }
  return result;
}

void sub_239787A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (**a9)(), uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;

  nullsub_4(v11);
  a9 = &off_250AE9130;
  if (a11)
    sub_239EBED3C();
  v14 = nullsub_4(&a9);
  v15 = *(_QWORD *)(v12 - 64);
  *(_QWORD *)(v12 - 64) = 0;
  if (v15)
  {
    *(_QWORD *)v15 = off_250AE7178;
    v16 = *(unsigned int *)(v15 + 40);
    if ((_DWORD)v16 != -1)
      ((void (*)(uint64_t, uint64_t, __n128))off_250AE8048[v16])(v12 - 33, v15 + 16, v14);
    *(_DWORD *)(v15 + 40) = -1;
    v17 = nullsub_4(v15);
    MEMORY[0x23B83E31C](v17);
  }
  _Unwind_Resume(a1);
}

void sub_239788130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_23979BCF4(&a9);
  sub_23979BCF4((_QWORD *)(v9 - 64));
  JUMPOUT(0x239787FD8);
}

double sub_239788154(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE80B8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_2397881C8(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE80B8;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBD08;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_2397883F0((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2397882A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2397882B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_2397882D0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE80B8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239788348()
{
  return 1;
}

uint64_t sub_239788350(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_239788358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 2, a1 + 32, 2, a1 + 40, 1);
}

uint64_t sub_239788374(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_2397883F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v15, v3, 1);
  v9 = *(_QWORD *)(v15 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v15;
  *(_QWORD *)(a1 + 32) = v9;
  v15 = 0;
  MEMORY[0x23B83E31C]();
  v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v10)
    return a1;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return a1;
}

void sub_239788524(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_239788538(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 2, (uint64_t)(a1 + 4), 2, (uint64_t)(a1 + 5), 1);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 1;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_239788680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239788694(_QWORD *a1)
{
  __n128 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  *a1 = &off_250AE81B0;
  v2 = nullsub_4(a1 + 3);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v3->__on_zero_shared)(v3, v2);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239788710(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_239788718(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_239788720@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 24);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 32);
  return result;
}

uint64_t sub_239788734(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

double sub_2397887B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE8220;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_239788824(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE8220;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE8318;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_239788B64((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2397888FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239788910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_23978892C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE8220;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397889A4()
{
  return 2;
}

uint64_t sub_2397889AC(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2397889B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_2397889D0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_239788A50(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239788A74(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE7058;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40A1F8E8FFLL);
  }
  return result;
}

uint64_t sub_239788AF4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_239788B64(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v15, v3, 2);
  v9 = *(_QWORD *)(v15 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v15;
  *(_QWORD *)(a1 + 32) = v9;
  v15 = 0;
  MEMORY[0x23B83E31C]();
  v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v10)
    return a1;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return a1;
}

void sub_239788C98(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_239788CAC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 2, (uint64_t)(a1 + 4), 2, (uint64_t)(a1 + 5), 2);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 2;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_239788DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_239788E08(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE8368;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_239788E7C(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE8368;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE8460;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_2397891BC((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_239788F54(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239788F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_239788F84(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE8368;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239788FFC()
{
  return 3;
}

uint64_t sub_239789004(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_23978900C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_239789028(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2397890A8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397890CC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE7208;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40A1F8E8FFLL);
  }
  return result;
}

uint64_t sub_23978914C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_2397891BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v15, v3, 3);
  v9 = *(_QWORD *)(v15 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v15;
  *(_QWORD *)(a1 + 32) = v9;
  v15 = 0;
  MEMORY[0x23B83E31C]();
  v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v10)
    return a1;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return a1;
}

void sub_2397892F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_239789304(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 2, (uint64_t)(a1 + 4), 2, (uint64_t)(a1 + 5), 2);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 3;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978944C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_239789460(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE84B0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_2397894D4(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE84B0;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE85A8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_239789814((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2397895AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2397895C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_2397895DC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE84B0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239789654()
{
  return 4;
}

uint64_t sub_23978965C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_239789664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 2, a1 + 32, 2, a1 + 40, 4);
}

uint64_t sub_239789680(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_239789700(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239789724(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE73B8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40A1F8E8FFLL);
  }
  return result;
}

uint64_t sub_2397897A4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_239789814(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v15, v3, 4);
  v9 = *(_QWORD *)(v15 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v15;
  *(_QWORD *)(a1 + 32) = v9;
  v15 = 0;
  MEMORY[0x23B83E31C]();
  v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v10)
    return a1;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return a1;
}

void sub_239789948(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_23978995C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 2, (uint64_t)(a1 + 4), 2, (uint64_t)(a1 + 5), 4);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 4;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_239789AA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_239789AB8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE85F8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_239789B2C(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE85F8;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE86F0;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_239789E6C((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_239789C04(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239789C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_239789C34(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE85F8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239789CAC()
{
  return 5;
}

uint64_t sub_239789CB4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_239789CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_239789CD8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_239789D58(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239789D7C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE6EA8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
  }
  return result;
}

uint64_t sub_239789DFC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_239789E6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 5);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_239789FA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_239789FB4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 1);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 5;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978A0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23978A110(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE8740;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_23978A184(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE8740;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE8838;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_23978A4C4((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_23978A25C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23978A270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_23978A28C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE8740;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978A304()
{
  return 7;
}

uint64_t sub_23978A30C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978A314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_23978A330(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_23978A3B0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978A3D4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE7298;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
  }
  return result;
}

uint64_t sub_23978A454(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_23978A4C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 7);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_23978A5F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_23978A60C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 2);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 7;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978A754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23978A768(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE8888;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_23978A7DC(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE8888;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE8980;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_23978AB1C((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_23978A8B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23978A8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_23978A8E4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE8888;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978A95C()
{
  return 8;
}

uint64_t sub_23978A964(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978A96C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_23978A988(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_23978AA08(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978AA2C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE7448;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
  }
  return result;
}

uint64_t sub_23978AAAC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_23978AB1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 8);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_23978AC50(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_23978AC64(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 4);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 8;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978ADAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23978ADC0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE89D0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_23978AE34(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE89D0;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADEBE0;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_23978B05C((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_23978AF0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23978AF20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_23978AF3C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE89D0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978AFB4()
{
  return 21;
}

uint64_t sub_23978AFBC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978AFC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_23978AFE0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_23978B05C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 21);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_23978B190(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_23978B1A4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 1);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 21;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978B2EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23978B300(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE8AC8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_23978B374(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE8AC8;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE8BC0;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_23978B6B4((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_23978B44C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23978B460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_23978B47C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE8AC8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978B4F4()
{
  return 22;
}

uint64_t sub_23978B4FC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978B504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_23978B520(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_23978B5A0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978B5C4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE70E8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
  }
  return result;
}

uint64_t sub_23978B644(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_23978B6B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 22);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_23978B7E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_23978B7FC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 2);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 22;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978B944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23978B958(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE8C10;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_23978B9CC(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE8C10;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE8D08;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_23978BD0C((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_23978BAA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23978BAB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_23978BAD4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE8C10;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978BB4C()
{
  return 25;
}

uint64_t sub_23978BB54(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978BB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_23978BB78(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_23978BBF8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978BC1C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE6FC8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
  }
  return result;
}

uint64_t sub_23978BC9C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_23978BD0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 25);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_23978BE40(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_23978BE54(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 1);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 25;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978BF9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23978BFB0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE8D58;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_23978C024(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE8D58;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE8E50;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_23978C364((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_23978C0FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23978C110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_23978C12C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE8D58;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978C1A4()
{
  return 31;
}

uint64_t sub_23978C1AC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978C1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_23978C1D0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_23978C250(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978C274(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE7328;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
  }
  return result;
}

uint64_t sub_23978C2F4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_23978C364(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 31);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_23978C498(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_23978C4AC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 2);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 31;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978C5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23978C608(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE8EA0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_23978C67C(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE8EA0;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE8F98;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_23978C9BC((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_23978C754(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23978C768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_23978C784(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE8EA0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978C7FC()
{
  return 32;
}

uint64_t sub_23978C804(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978C80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_23978C828(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_23978C8A8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978C8CC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE74D8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
  }
  return result;
}

uint64_t sub_23978C94C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_23978C9BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 32);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_23978CAF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_23978CB04(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 4);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 32;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978CC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23978CC60(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE8FE8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_23978CCD4(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE8FE8;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE90E0;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_23978D014((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_23978CDAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23978CDC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_23978CDDC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE8FE8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978CE54()
{
  return 37;
}

uint64_t sub_23978CE5C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978CE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_23978CE80(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_23978CF00(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978CF24(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE6FC8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
  }
  return result;
}

uint64_t sub_23978CFA4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_23978D014(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 37);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_23978D148(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_23978D15C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 1);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 37;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978D2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23978D2B8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  *a1 = &off_250AE9130;
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_23978D32C(_QWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_250AE9130;
  v10 = *a2;
  if (v10)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a2;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE9228;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v11 = v4;
  *a2 = 0;
  sub_23978D66C((uint64_t)(a1 + 1), &v10);
  v6 = v11;
  if (!v11)
    return a1;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_23978D404(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_23978D418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  nullsub_4(v9);
  _Unwind_Resume(a1);
}

void sub_23978D434(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AE9130;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978D4AC()
{
  return 38;
}

uint64_t sub_23978D4B4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978D4BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_23978D4D8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_23978D558(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978D57C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_250AE7178;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_250AE8048[v2])(&v4, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    v3 = nullsub_4(v1);
    return MEMORY[0x23B83E31C](v3, 0x10A3C40ED729E16);
  }
  return result;
}

uint64_t sub_23978D5FC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_23978D66C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 38);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_23978D7A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_23978D7B4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v5 = a1[1];
  v4 = (std::__shared_weak_count *)a1[2];
  v19 = v5;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v17, 3, (uint64_t)(a1 + 4), 3, (uint64_t)a1 + 44, 2);
  v8 = a1[3];
  if (v4)
  {
    v9 = (unint64_t *)&v4->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldxr(v9);
    while (__stxr(v11 + 1, v9));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 38;
  *(_WORD *)(a2 + 44) = 256;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v17);
  v14 = v20;
  if (v20)
  {
    v15 = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_23978D8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23978D910(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v11;
  uint64_t v12;

  sub_239A43D24(&v12);
  v5 = (_QWORD *)sub_239A43E64(&v12);
  sub_239914E90(v5, a3);
  sub_239A43E70();
  sub_239A43DB8(&v12);
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
    v8 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v9 = SHIBYTE(v11);
    *(_QWORD *)(a2 + 8) = v8;
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v11;
    *(_OWORD *)v6 = v7;
    *(_QWORD *)(a2 + 8) = v6 + 24;
  }
}

void sub_23978D9B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_23978D9E4(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23978DBFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23978DC10(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23978DC78(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978DCE4()
{
  return 7;
}

uint64_t sub_23978DCEC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978DCF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_23978DD10(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

double sub_23978DD94(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23978DDFC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23978DE68()
{
  return 8;
}

uint64_t sub_23978DE70(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23978DE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_23978DE94(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_23978DF18(int a1)
{
  uint64_t result;
  int v3;
  int v4;
  unsigned int v5;

  result = 1;
  if (a1 <= 1278226487)
  {
    if (a1 > 875704421)
    {
      if (a1 > 875836533)
      {
        if (a1 != 875836534)
        {
          if (a1 == 1094862674)
            return result;
          v3 = 1111970369;
          goto LABEL_37;
        }
      }
      else if (a1 != 875704422 && a1 != 875704438 && a1 != 875836518)
      {
        goto LABEL_39;
      }
      return 2;
    }
    if (a1 > 843264055)
    {
      v4 = -843264056;
LABEL_23:
      v5 = a1 + v4;
      if (v5 > 0x30 || ((1 << v5) & 0x1400000000001) == 0)
        goto LABEL_39;
      return result;
    }
    if (a1 != 24 && a1 != 32)
    {
      v3 = 842285639;
      goto LABEL_37;
    }
  }
  else
  {
    if (a1 <= 1647392358)
    {
      if (a1 > 1278226741)
      {
        if (a1 > 1380410944)
        {
          if (a1 == 1380410945)
            return result;
          v3 = 1380411457;
        }
        else
        {
          if (a1 == 1278226742)
            return result;
          v3 = 1380401729;
        }
        goto LABEL_37;
      }
      v4 = -1278226488;
      goto LABEL_23;
    }
    if (a1 > 1717855599)
    {
      if (a1 > 1751410031)
      {
        if (a1 == 1751410032)
          return result;
        v3 = 1751411059;
      }
      else
      {
        if (a1 == 1717855600)
          return result;
        v3 = 1717856627;
      }
LABEL_37:
      if (a1 == v3)
        return result;
LABEL_39:
      sub_239EC293C();
    }
    if (a1 != 1647392359 && a1 != 1647589490)
    {
      v3 = 1647719521;
      goto LABEL_37;
    }
  }
  return result;
}

uint64_t sub_23978E124(uint64_t a1)
{
  uint64_t result;
  char *v2;
  uint64_t v3;
  _DWORD v4[12];
  uint64_t vars0;

  result = sub_23979A918(a1);
  v2 = (char *)&vars0;
  if ((int)result > 875836517)
  {
    if ((int)result > 1111970368)
    {
      switch((_DWORD)result)
      {
        case 0x42475241:
          v3 = 4;
          break;
        case 0x4C303038:
          v3 = 0;
          break;
        case 0x52474241:
          v3 = 6;
          break;
        default:
          goto LABEL_29;
      }
    }
    else
    {
      switch((_DWORD)result)
      {
        case 0x34343466:
          v3 = 10;
          break;
        case 0x34343476:
          v3 = 9;
          break;
        case 0x41424752:
          v3 = 5;
          break;
        default:
          goto LABEL_29;
      }
    }
  }
  else if ((int)result > 843264055)
  {
    switch((_DWORD)result)
    {
      case 0x32433038:
        v3 = 11;
        break;
      case 0x34323066:
        v3 = 8;
        break;
      case 0x34323076:
        v3 = 7;
        break;
      default:
        goto LABEL_29;
    }
  }
  else
  {
    switch((_DWORD)result)
    {
      case 0x18:
        v3 = 1;
        break;
      case 0x20:
        v3 = 3;
        break;
      case 0x32344247:
        v3 = 2;
        break;
      default:
        goto LABEL_29;
    }
  }
  v2 = (char *)&v4[v3];
LABEL_29:
  if (v2 - (char *)v4 == 48)
    sub_239EC296C();
  return result;
}

_QWORD *sub_23978E2A0(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  size_t v6;
  char *v7;
  BOOL v8;
  int v9;
  BOOL v10;
  char *v11;
  char *v12;
  size_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  _OWORD v19[2];

  v2 = *result;
  v1 = result[1];
  v3 = *(unsigned int *)(*result + 20);
  v4 = *(unsigned int *)(v1 + 20);
  if ((_DWORD)v3 == (_DWORD)v4)
  {
    v5 = *(_DWORD *)(v2 + 8);
    if ((_DWORD)v3 == *(_DWORD *)(v2 + 16) * v5)
    {
      v6 = *(_DWORD *)(v2 + 12) * v5;
      v7 = *(char **)v2;
      if ((_DWORD)v6)
        v8 = v7 == 0;
      else
        v8 = 0;
      if (v8)
        sub_239EBF50C((uint64_t)result, (uint64_t)v7);
      if ((_DWORD)v6)
        return memmove(*(void **)v1, v7, v6);
      return result;
    }
  }
  else
  {
    v5 = *(_DWORD *)(v2 + 8);
  }
  v13 = v5;
  v9 = *(_DWORD *)(v2 + 12);
  if (v5)
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v14 = 0;
    v15 = v5 - 1;
    v16 = *(unsigned int *)(v2 + 16) | ((unint64_t)*(unsigned int *)(v1 + 16) << 32);
    v17 = v9 - 1;
    v18 = v3 | (v4 << 32);
    v11 = *(char **)v2;
    v12 = *(char **)v1;
    memset(v19, 0, sizeof(v19));
    return sub_239661ED4(&v14, (uint64_t)v19, &v13, v11, v12);
  }
  return result;
}

uint64_t sub_23978E378(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  _DWORD v9[13];
  uint64_t v10;

  v2 = sub_23979A918(a1);
  v4 = (char *)&v10;
  if ((int)v2 <= 1094862673)
  {
    if ((int)v2 > 843264055)
    {
      switch((_DWORD)v2)
      {
        case 0x32433038:
          v5 = 8;
          break;
        case 0x32433066:
          v5 = 10;
          break;
        case 0x32433068:
          v5 = 9;
          break;
        default:
          goto LABEL_32;
      }
    }
    else
    {
      switch((_DWORD)v2)
      {
        case 0x18:
          v5 = 0;
          break;
        case 0x20:
          v5 = 2;
          break;
        case 0x32344247:
          v5 = 1;
          break;
        default:
          goto LABEL_32;
      }
    }
  }
  else if ((int)v2 <= 1380410944)
  {
    switch((_DWORD)v2)
    {
      case 0x41424752:
        v5 = 4;
        break;
      case 0x42475241:
        v5 = 3;
        break;
      case 0x52474241:
        v5 = 5;
        break;
      default:
        goto LABEL_32;
    }
  }
  else if ((int)v2 > 1647589489)
  {
    if ((_DWORD)v2 == 1647589490)
    {
      v5 = 7;
    }
    else
    {
      if ((_DWORD)v2 != 1647719521)
        goto LABEL_32;
      v5 = 6;
    }
  }
  else if ((_DWORD)v2 == 1380410945)
  {
    v5 = 12;
  }
  else
  {
    if ((_DWORD)v2 != 1380411457)
      goto LABEL_32;
    v5 = 11;
  }
  v4 = (char *)&v9[v5];
LABEL_32:
  if (v4 - (char *)v9 == 52)
    sub_239EC299C(v2, v3);
  v6 = sub_23979A918(a1);
  result = sub_23978E540(v6);
  if ((_DWORD)result != 2)
    sub_239EC29C8(result, v8);
  return result;
}

uint64_t sub_23978E540(int a1)
{
  uint64_t result;
  unsigned __int16 v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  result = 1;
  if (a1 <= 1278226487)
  {
    if (a1 > 875704421)
    {
      if (a1 > 875836533)
      {
        if (a1 == 875836534)
          return result;
        if (a1 != 1094862674)
        {
          v7 = 1111970369;
          goto LABEL_37;
        }
        return 4;
      }
      if (a1 == 875704422 || a1 == 875704438)
        return result;
      v4 = 875836518;
LABEL_41:
      if (a1 != v4)
        goto LABEL_43;
      return result;
    }
    if (a1 > 843264055)
    {
      v6 = a1 - 843264056;
      if (v6 <= 0x30 && ((1 << v6) & 0x1400000000001) != 0)
        return 2;
      goto LABEL_43;
    }
    if (a1 != 24)
    {
      if (a1 == 32)
        return 4;
      if (a1 != 842285639)
        goto LABEL_43;
    }
    return 3;
  }
  if (a1 > 1647392358)
  {
    if (a1 > 1717855599)
    {
      if (a1 > 1751410031)
      {
        if (a1 == 1751410032)
          return result;
        v4 = 1751411059;
      }
      else
      {
        if (a1 == 1717855600)
          return result;
        v4 = 1717856627;
      }
      goto LABEL_41;
    }
    if (a1 == 1647392359)
      return result;
    if (a1 != 1647589490)
    {
      v7 = 1647719521;
      goto LABEL_37;
    }
    return 3;
  }
  if (a1 <= 1278226741)
  {
    v5 = a1 - 1278226488;
    if (v5 > 0x30 || ((1 << v5) & 0x1400000000001) == 0)
      goto LABEL_43;
    return result;
  }
  if (a1 > 1380410944)
  {
    if (a1 != 1380410945)
    {
      v3 = 26689;
      goto LABEL_36;
    }
    return 4;
  }
  if (a1 != 1278226742)
  {
    v3 = 16961;
LABEL_36:
    v7 = v3 | 0x52470000;
LABEL_37:
    if (a1 == v7)
      return 4;
LABEL_43:
    sub_239EC29F4();
  }
  return result;
}

_QWORD *sub_23978E780(_QWORD *result)
{
  char **v1;
  size_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned __int8 *v6;
  size_t v7;
  int v8;
  int v9;
  BOOL v10;
  unsigned __int8 *v12;
  int v13;
  char *v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  char *v19;
  int v20;
  BOOL v21;
  char *v23;
  int v24;

  v1 = (char **)*result;
  v2 = *(unsigned int *)(*result + 8);
  v3 = *(unsigned int *)(*result + 24);
  if ((_DWORD)v3 == *(_DWORD *)(*result + 20) * (_DWORD)v2)
  {
    v4 = *((unsigned int *)v1 + 7);
    v5 = *((_DWORD *)v1 + 3);
    v6 = (unsigned __int8 *)result[1];
    v7 = (v5 * v2);
    if ((_DWORD)v4 == v5 * (_DWORD)v3)
    {
      return memset(*v1, *v6, (*((_DWORD *)v1 + 4) * v7));
    }
    else
    {
      v20 = *((_DWORD *)v1 + 4);
      if ((_DWORD)v2)
        v21 = v5 == 0;
      else
        v21 = 1;
      if (!v21 && v20 != 0)
      {
        v23 = *v1;
        v24 = v20 - 1;
        if (v20 != 1)
        {
          do
          {
            memset(v23, *v6, v7);
            v23 += v4;
            --v24;
          }
          while (v24);
        }
        return memset(v23, *v6, v7);
      }
    }
  }
  else
  {
    v9 = *((_DWORD *)v1 + 3);
    v8 = *((_DWORD *)v1 + 4);
    if ((_DWORD)v2)
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10 && v8 != 0)
    {
      v12 = (unsigned __int8 *)result[1];
      v13 = v9 - 1;
      v14 = *v1;
      v15 = v8 - 1;
      if (v8 != 1)
      {
        v16 = *((unsigned int *)v1 + 7);
        if (v9 == 1)
        {
          do
          {
            memset(v14, *v12, v2);
            v14 += v16;
            --v15;
          }
          while (v15);
        }
        else
        {
          v17 = 0;
          do
          {
            v18 = v13;
            v19 = v14;
            do
            {
              memset(v19, *v12, v2);
              v19 += v3;
              --v18;
            }
            while (v18);
            memset(v19, *v12, v2);
            v14 += v16;
            ++v17;
          }
          while (v17 != v15);
        }
      }
      for (; v13; --v13)
      {
        memset(v14, *v12, v2);
        v14 += v3;
      }
      return memset(v14, *v12, v2);
    }
  }
  return result;
}

unsigned int *sub_23978E92C(unsigned int *result)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BYTE *v17;
  unsigned int *v18;
  _BYTE *v19;
  int v20;
  int v21;
  unsigned int v22;
  BOOL v23;
  size_t v25;

  v1 = *(_QWORD *)result;
  v2 = *((_QWORD *)result + 1);
  if (*(_DWORD *)(*(_QWORD *)result + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v21 = *(_DWORD *)(v1 + 24);
    if (v21 == *(_DWORD *)(v2 + 24))
    {
      v22 = *(_DWORD *)(v1 + 8);
      if (v21 == v22)
        return sub_23978EAB4(result);
    }
    else
    {
      v22 = *(_DWORD *)(v1 + 8);
    }
    v25 = v22;
    if (v22)
      v23 = *(_DWORD *)(v1 + 12) == 0;
    else
      v23 = 1;
    if (!v23 && *(_DWORD *)(v1 + 16) != 0)
      return (unsigned int *)sub_23978EC98(&v25, v1, v2);
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 12);
    v5 = *(_DWORD *)(v1 + 16);
    if (*(_DWORD *)(v1 + 8))
      v6 = v4 == 0;
    else
      v6 = 1;
    if (!v6 && v5 != 0)
    {
      v8 = v4 - 1;
      v9 = *(unsigned int *)(v1 + 24);
      v10 = *(unsigned int *)(v2 + 24);
      v11 = *(_BYTE **)v1;
      v12 = *(_BYTE **)v2;
      v13 = v5 - 1;
      if (v13)
      {
        v14 = *(unsigned int *)(v2 + 28);
        v15 = *(unsigned int *)(v1 + 28);
        if (v8)
        {
          v16 = 0;
          v17 = v11 + 1;
          result = (unsigned int *)(v12 + 1);
          do
          {
            v18 = result;
            v19 = v17;
            v20 = v8;
            do
            {
              *((_BYTE *)v18 - 1) = *(v19 - 1);
              *(_BYTE *)v18 = *v19;
              v19 += v9;
              v18 = (unsigned int *)((char *)v18 + v10);
              --v20;
            }
            while (v20);
            *((_BYTE *)v18 - 1) = *(v19 - 1);
            *(_BYTE *)v18 = *v19;
            v11 += v15;
            v12 += v14;
            ++v16;
            v17 += v15;
            result = (unsigned int *)((char *)result + v14);
          }
          while (v16 != v13);
        }
        else
        {
          do
          {
            *v12 = *v11;
            v12[1] = v11[1];
            v11 += v15;
            v12 += v14;
            --v13;
          }
          while (v13);
        }
      }
      for (; v8; --v8)
      {
        *v12 = *v11;
        v12[1] = v11[1];
        v11 += v9;
        v12 += v10;
      }
      *v12 = *v11;
      v12[1] = v11[1];
    }
  }
  return result;
}

unsigned int *sub_23978EAB4(unsigned int *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  size_t v6;
  char *v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  size_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _OWORD v25[3];

  v2 = *(_QWORD *)result;
  v1 = *((_QWORD *)result + 1);
  v3 = *(unsigned int *)(*(_QWORD *)result + 28);
  v4 = *(unsigned int *)(v1 + 28);
  v5 = *(_DWORD *)(*(_QWORD *)result + 12);
  if ((_DWORD)v3 == (_DWORD)v4 && (_DWORD)v3 == *(_DWORD *)(v2 + 24) * v5)
  {
    v6 = (v5 * *(_DWORD *)(v2 + 8) * *(_DWORD *)(v2 + 16));
    v7 = *(char **)v2;
    if ((_DWORD)v6)
      v8 = v7 == 0;
    else
      v8 = 0;
    if (v8)
      sub_239EBF50C((uint64_t)result, (uint64_t)v7);
    if ((_DWORD)v6)
      return (unsigned int *)memmove(*(void **)v1, v7, v6);
  }
  else
  {
    v9 = *(_DWORD *)(v2 + 8);
    v17 = (v5 * v9);
    v10 = *(_DWORD *)(v2 + 16);
    if (v9)
      v11 = v5 == 0;
    else
      v11 = 1;
    if (!v11 && v10 != 0)
    {
      v19 = v9 - 1;
      v13 = *(unsigned int *)(v2 + 24);
      v14 = *(unsigned int *)(v1 + 24);
      v20 = *(unsigned int *)(v2 + 20) | ((unint64_t)*(unsigned int *)(v1 + 20) << 32);
      v18 = 0;
      v21 = v5 - 1;
      v22 = v13 | (v14 << 32);
      v23 = v10 - 1;
      v24 = v3 | (v4 << 32);
      v15 = *(char **)v2;
      v16 = *(char **)v1;
      memset(v25, 0, sizeof(v25));
      return sub_23978EBAC((unsigned int *)&v18, (uint64_t)v25, &v17, v15, v16);
    }
  }
  return result;
}

unsigned int *sub_23978EBAC(unsigned int *result, uint64_t a2, size_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int i;
  size_t v16;
  size_t v17;

  v5 = __dst;
  v6 = __src;
  v9 = result[6];
  v10 = result[7];
  v11 = result[3] | (unint64_t)(v9 << 32);
  v12 = result[4] | (unint64_t)(v10 << 32);
  *(_QWORD *)a2 = __src;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = __dst;
  *(_QWORD *)(a2 + 32) = v12;
  *(_DWORD *)(a2 + 40) = v10;
  v13 = result[8];
  if (v13)
  {
    v14 = result;
    for (i = 0; i < v13; ++i)
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 24) = v5;
      v16 = *a3;
      if (!v6 && v16)
        sub_239EBF50C((uint64_t)result, a2);
      if (v16)
      {
        result = (unsigned int *)memmove(v5, v6, v16);
        v13 = v14[8];
      }
      v6 += v14[9];
      v5 += v14[10];
    }
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 24) = v5;
  v17 = *a3;
  if (!v6 && v17)
    sub_239EBF50C((uint64_t)result, a2);
  if (v17)
    return (unsigned int *)memmove(v5, v6, v17);
  return result;
}

size_t *sub_23978EC98(size_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  size_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  _OWORD v21[2];

  v4 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v8 = result;
    v15 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 24);
    v10 = *(unsigned int *)(a3 + 24);
    v16 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v14 = 0;
    v17 = v3 - 1;
    v18 = v9 | (v10 << 32);
    v20 = *(unsigned int *)(a2 + 28) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v11 = *(char **)a2;
    v12 = *(char **)a3;
    memset(v21, 0, sizeof(v21));
    v19 = v5 - 1;
    if (v5 != 1)
    {
      v13 = 0;
      do
      {
        sub_23978ED84(&v14, (char **)v21, v8, v11, v12);
        v11 += v20;
        v12 += HIDWORD(v20);
        ++v13;
      }
      while (v13 < v19);
    }
    return (size_t *)sub_23978ED84(&v14, (char **)v21, v8, v11, v12);
  }
  return result;
}

_DWORD *sub_23978ED84(_DWORD *result, char **a2, size_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  unsigned int v9;
  _DWORD *v10;
  unsigned int i;
  size_t v12;
  size_t v13;

  v5 = __dst;
  v6 = __src;
  *a2 = __src;
  a2[2] = __dst;
  v9 = result[5];
  if (v9)
  {
    v10 = result;
    for (i = 0; i < v9; ++i)
    {
      *a2 = v6;
      a2[2] = v5;
      v12 = *a3;
      if (!v6 && v12)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      if (v12)
      {
        result = memmove(v5, v6, v12);
        v9 = v10[5];
      }
      v6 += v10[6];
      v5 += v10[7];
    }
  }
  *a2 = v6;
  a2[2] = v5;
  v13 = *a3;
  if (!v6 && v13)
    sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  if (v13)
    return memmove(v5, v6, v13);
  return result;
}

uint64_t sub_23978EE58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  _DWORD v9[13];
  uint64_t v10;

  v2 = sub_23979A918(a1);
  v4 = (char *)&v10;
  if ((int)v2 <= 1094862673)
  {
    if ((int)v2 > 843264055)
    {
      switch((_DWORD)v2)
      {
        case 0x32433038:
          v5 = 8;
          break;
        case 0x32433066:
          v5 = 10;
          break;
        case 0x32433068:
          v5 = 9;
          break;
        default:
          goto LABEL_32;
      }
    }
    else
    {
      switch((_DWORD)v2)
      {
        case 0x18:
          v5 = 0;
          break;
        case 0x20:
          v5 = 2;
          break;
        case 0x32344247:
          v5 = 1;
          break;
        default:
          goto LABEL_32;
      }
    }
  }
  else if ((int)v2 <= 1380410944)
  {
    switch((_DWORD)v2)
    {
      case 0x41424752:
        v5 = 4;
        break;
      case 0x42475241:
        v5 = 3;
        break;
      case 0x52474241:
        v5 = 5;
        break;
      default:
        goto LABEL_32;
    }
  }
  else if ((int)v2 > 1647589489)
  {
    if ((_DWORD)v2 == 1647589490)
    {
      v5 = 7;
    }
    else
    {
      if ((_DWORD)v2 != 1647719521)
        goto LABEL_32;
      v5 = 6;
    }
  }
  else if ((_DWORD)v2 == 1380410945)
  {
    v5 = 12;
  }
  else
  {
    if ((_DWORD)v2 != 1380411457)
      goto LABEL_32;
    v5 = 11;
  }
  v4 = (char *)&v9[v5];
LABEL_32:
  if (v4 - (char *)v9 == 52)
    sub_239EC299C(v2, v3);
  v6 = sub_23979A918(a1);
  result = sub_23978E540(v6);
  if ((_DWORD)result != 3)
    sub_239EC29C8(result, v8);
  return result;
}

void sub_23978F020(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  BOOL v4;
  int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  size_t v11;

  v1 = *(_DWORD **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v6 = v1[6];
    if (v6 == *(_DWORD *)(v2 + 24))
    {
      v7 = v1[2];
      if (v6 == v7)
      {
        sub_23978EAB4((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = v1[2];
    }
    v11 = v7;
    if (v7)
      v8 = v1[3] == 0;
    else
      v8 = 1;
    if (!v8 && v1[4] != 0)
      sub_23978EC98(&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (v1[2])
      v4 = v1[3] == 0;
    else
      v4 = 1;
    if (!v4 && v1[4] != 0)
    {
      v11 = (size_t)&v10;
      sub_23978F0D4((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

void sub_23978F0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  int v20;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 24);
    v9 = *(unsigned int *)(a3 + 24);
    v10 = *(_BYTE **)a2;
    v11 = *(_BYTE **)a3;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (v7)
      {
        v15 = 0;
        v16 = v11 + 2;
        v17 = v10 + 2;
        do
        {
          v18 = v17;
          v19 = v16;
          v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *v19 = *v18;
            v19 += v9;
            v18 += v8;
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v10 += v14;
          v11 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    *v11 = *v10;
    v11[1] = v10[1];
    v11[2] = v10[2];
  }
}

uint64_t sub_23978F1FC(uint64_t result, uint64_t a2, _DWORD *a3)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  if (a3[1])
    v3 = *a3 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a3;
  if (v3)
    v4 = 0;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  LODWORD(v6) = v5 * v4;
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  LODWORD(v7) = 1;
  *(_QWORD *)((char *)&v7 + 4) = v5 | (v6 << 32);
  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = __PAIR64__(v4, 3);
  *(_DWORD *)(result + 16) = HIDWORD(v4);
  *(_QWORD *)(result + 20) = v7;
  *(_DWORD *)(result + 28) = v6;
  *(_QWORD *)(result + 32) = v4;
  *(_QWORD *)(result + 40) = *(_QWORD *)((char *)&v7 + 4);
  if ((_DWORD)v6 * HIDWORD(v4) == -1)
    sub_239EBFBC4(result, a2);
  return result;
}

uint64_t sub_23978F2D8(uint64_t result, uint64_t a2, _DWORD *a3)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  if (a3[1])
    v3 = *a3 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a3;
  if (v3)
    v4 = 0;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  LODWORD(v6) = v5 * v4;
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  LODWORD(v7) = 1;
  *(_QWORD *)((char *)&v7 + 4) = v5 | (v6 << 32);
  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = __PAIR64__(v4, 3);
  *(_DWORD *)(result + 16) = HIDWORD(v4);
  *(_QWORD *)(result + 20) = v7;
  *(_DWORD *)(result + 28) = v6;
  *(_QWORD *)(result + 32) = v4;
  *(_QWORD *)(result + 40) = *(_QWORD *)((char *)&v7 + 4);
  if ((_DWORD)v6 * HIDWORD(v4) == -1)
    sub_239EBFBC4(result, a2);
  return result;
}

uint64_t sub_23978F3B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  _DWORD v9[13];
  uint64_t v10;

  v2 = sub_23979A918(a1);
  v4 = (char *)&v10;
  if ((int)v2 <= 1094862673)
  {
    if ((int)v2 > 843264055)
    {
      switch((_DWORD)v2)
      {
        case 0x32433038:
          v5 = 8;
          break;
        case 0x32433066:
          v5 = 10;
          break;
        case 0x32433068:
          v5 = 9;
          break;
        default:
          goto LABEL_32;
      }
    }
    else
    {
      switch((_DWORD)v2)
      {
        case 0x18:
          v5 = 0;
          break;
        case 0x20:
          v5 = 2;
          break;
        case 0x32344247:
          v5 = 1;
          break;
        default:
          goto LABEL_32;
      }
    }
  }
  else if ((int)v2 <= 1380410944)
  {
    switch((_DWORD)v2)
    {
      case 0x41424752:
        v5 = 4;
        break;
      case 0x42475241:
        v5 = 3;
        break;
      case 0x52474241:
        v5 = 5;
        break;
      default:
        goto LABEL_32;
    }
  }
  else if ((int)v2 > 1647589489)
  {
    if ((_DWORD)v2 == 1647589490)
    {
      v5 = 7;
    }
    else
    {
      if ((_DWORD)v2 != 1647719521)
        goto LABEL_32;
      v5 = 6;
    }
  }
  else if ((_DWORD)v2 == 1380410945)
  {
    v5 = 12;
  }
  else
  {
    if ((_DWORD)v2 != 1380411457)
      goto LABEL_32;
    v5 = 11;
  }
  v4 = (char *)&v9[v5];
LABEL_32:
  if (v4 - (char *)v9 == 52)
    sub_239EC299C(v2, v3);
  v6 = sub_23979A918(a1);
  result = sub_23978E540(v6);
  if ((_DWORD)result != 4)
    sub_239EC29C8(result, v8);
  return result;
}

_DWORD *sub_23978F57C(_DWORD *result, uint64_t a2, _BYTE ***a3, _BYTE *a4)
{
  unsigned int v4;
  _BYTE *v5;
  unsigned int v6;
  unsigned int v7;

  if (result[5])
  {
    v4 = 0;
    do
    {
      *(_QWORD *)a2 = a4;
      v5 = a4;
      if (result[3])
      {
        v6 = 0;
        v5 = a4;
        do
        {
          *(_QWORD *)a2 = v5;
          *v5 = ***a3;
          *(_BYTE *)(*(_QWORD *)a2 + 1) = ***a3;
          *(_BYTE *)(*(_QWORD *)a2 + 2) = ***a3;
          *(_BYTE *)(*(_QWORD *)a2 + 3) = ***a3;
          v5 += result[4];
          ++v6;
        }
        while (v6 < result[3]);
      }
      *(_QWORD *)a2 = v5;
      *v5 = ***a3;
      *(_BYTE *)(*(_QWORD *)a2 + 1) = ***a3;
      *(_BYTE *)(*(_QWORD *)a2 + 2) = ***a3;
      *(_BYTE *)(*(_QWORD *)a2 + 3) = ***a3;
      a4 += result[6];
      ++v4;
    }
    while (v4 < result[5]);
  }
  *(_QWORD *)a2 = a4;
  if (result[3])
  {
    v7 = 0;
    do
    {
      *(_QWORD *)a2 = a4;
      *a4 = ***a3;
      *(_BYTE *)(*(_QWORD *)a2 + 1) = ***a3;
      *(_BYTE *)(*(_QWORD *)a2 + 2) = ***a3;
      *(_BYTE *)(*(_QWORD *)a2 + 3) = ***a3;
      a4 += result[4];
      ++v7;
    }
    while (v7 < result[3]);
  }
  *(_QWORD *)a2 = a4;
  *a4 = ***a3;
  *(_BYTE *)(*(_QWORD *)a2 + 1) = ***a3;
  *(_BYTE *)(*(_QWORD *)a2 + 2) = ***a3;
  *(_BYTE *)(*(_QWORD *)a2 + 3) = ***a3;
  return result;
}

void sub_23978F738(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  BOOL v4;
  int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  size_t v11;

  v1 = *(_DWORD **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v6 = v1[6];
    if (v6 == *(_DWORD *)(v2 + 24))
    {
      v7 = v1[2];
      if (v6 == v7)
      {
        sub_23978EAB4((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = v1[2];
    }
    v11 = v7;
    if (v7)
      v8 = v1[3] == 0;
    else
      v8 = 1;
    if (!v8 && v1[4] != 0)
      sub_23978EC98(&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (v1[2])
      v4 = v1[3] == 0;
    else
      v4 = 1;
    if (!v4 && v1[4] != 0)
    {
      v11 = (size_t)&v10;
      sub_23978F7EC((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

void sub_23978F7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  int v20;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 24);
    v9 = *(unsigned int *)(a3 + 24);
    v10 = *(_BYTE **)a2;
    v11 = *(_BYTE **)a3;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (v7)
      {
        v15 = 0;
        v16 = v11 + 3;
        v17 = v10 + 1;
        do
        {
          v18 = v17;
          v19 = v16;
          v20 = v7;
          do
          {
            *(v19 - 3) = *(v18 - 1);
            *(v19 - 2) = *v18;
            *(v19 - 1) = v18[1];
            *v19 = v18[2];
            v19 += v9;
            v18 += v8;
            --v20;
          }
          while (v20);
          *(v19 - 3) = *(v18 - 1);
          *(v19 - 2) = *v18;
          *(v19 - 1) = v18[1];
          *v19 = v18[2];
          v10 += v14;
          v11 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    *v11 = *v10;
    v11[1] = v10[1];
    v11[2] = v10[2];
    v11[3] = v10[3];
  }
}

_QWORD *sub_23978F93C(_QWORD *result, uint64_t a2)
{
  const __int16 *v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  BOOL v10;
  __int16 *v11;
  uint64_t v12;
  int16x8_t v13;
  int16x8_t *v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[3];
  _DWORD v23[5];
  _QWORD v24[2];

  v3 = *result;
  v2 = (const __int16 *)result[1];
  v4 = *(_DWORD *)(*result + 8);
  v6 = *(_DWORD *)(*result + 16);
  v5 = *(_DWORD *)(*result + 20);
  if (v5 == v6 * v4)
  {
    v7 = (*(_DWORD *)(v3 + 12) * v4);
    v8 = *(_QWORD *)v3;
    if ((_DWORD)v7)
      v9 = v8 == 0;
    else
      v9 = 0;
    if (v9)
      sub_239EBF50C((uint64_t)result, a2);
    if ((_DWORD)v7)
    {
      if (v7 < 0x10
        || (v8 < (unint64_t)(v2 + 1) ? (v10 = v8 + 2 * v7 > (unint64_t)v2) : (v10 = 0), v10))
      {
        v11 = *(__int16 **)v3;
        v12 = v7;
      }
      else
      {
        v11 = (__int16 *)(v8 + 2 * (v7 & 0xFFFFFFF0));
        v12 = v7 & 0xF;
        v13 = vld1q_dup_s16(v2);
        v14 = (int16x8_t *)(v8 + 16);
        v15 = v7 & 0xFFFFFFF0;
        do
        {
          v14[-1] = v13;
          *v14 = v13;
          v14 += 2;
          v15 -= 16;
        }
        while (v15);
        if ((v7 & 0xFFFFFFF0) == v7)
          return result;
      }
      v19 = v12 + 1;
      do
      {
        *v11++ = *v2;
        --v19;
      }
      while (v19 > 1);
    }
  }
  else
  {
    v20 = *(unsigned int *)(*result + 8);
    v22[0] = &v21;
    v22[1] = &v20;
    v22[2] = v2;
    v16 = *(_DWORD *)(v3 + 12);
    if (v4)
      v17 = v16 == 0;
    else
      v17 = 1;
    if (!v17)
    {
      v23[0] = 0;
      v23[1] = v4 - 1;
      v23[2] = v6;
      v23[3] = v16 - 1;
      v23[4] = v5;
      v18 = *(_QWORD *)v3;
      v24[0] = 0;
      v24[1] = 0;
      return sub_23978FA58(v23, (uint64_t)v24, (uint64_t)v22, v18);
    }
  }
  return result;
}

_DWORD *sub_23978FA58(_DWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  int v5;
  const __int16 *v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  __int16 *v10;
  int v11;
  __int16 *v12;
  uint64_t v13;
  int16x8_t v14;
  int16x8_t *v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  __int16 *v19;
  uint64_t v20;
  int16x8_t v21;
  int16x8_t *v22;
  unint64_t v23;
  unint64_t v24;

  v4 = result[2];
  *(_QWORD *)a2 = a4;
  *(_DWORD *)(a2 + 8) = v4;
  v5 = result[3];
  v6 = *(const __int16 **)(a3 + 16);
  v7 = **(_QWORD **)(a3 + 8);
  if (v5)
  {
    if (v7 >= 1)
    {
      if ((unint64_t)v7 >= 0x10)
      {
        v11 = 0;
        while (a4)
        {
          if (a4 < (unint64_t)(v6 + 1))
          {
            v12 = (__int16 *)a4;
            v13 = v7;
            if ((unint64_t)v6 < a4 + 2 * v7)
              goto LABEL_22;
          }
          v12 = (__int16 *)(a4 + 2 * (v7 & 0xFFFFFFFFFFFFFFF0));
          v14 = vld1q_dup_s16(v6);
          v15 = (int16x8_t *)(a4 + 16);
          v16 = v7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v15[-1] = v14;
            *v15 = v14;
            v15 += 2;
            v16 -= 16;
          }
          while (v16);
          v13 = v7 & 0xF;
          if (v7 != (v7 & 0xFFFFFFFFFFFFFFF0))
          {
LABEL_22:
            v17 = v13 + 1;
            do
            {
              *v12++ = *v6;
              --v17;
            }
            while (v17 > 1);
          }
          a4 += 2 * result[4];
          if (++v11 == v5)
            goto LABEL_26;
        }
      }
      else
      {
        v8 = 0;
        while (a4)
        {
          v9 = v7 + 1;
          v10 = (__int16 *)a4;
          do
          {
            *v10++ = *v6;
            --v9;
          }
          while (v9 > 1);
          a4 += 2 * result[4];
          if (++v8 == v5)
            goto LABEL_26;
        }
      }
      goto LABEL_43;
    }
    if (v7)
    {
      while (a4)
      {
        a4 += 2 * result[4];
        if (!--v5)
          goto LABEL_26;
      }
LABEL_43:
      sub_239EBF5BC((_QWORD *)a2, a2);
    }
    a4 += (2 * (v5 - 1) + 2) * result[4];
  }
LABEL_26:
  *(_QWORD *)a2 = a4;
  if (!a4 && v7)
    sub_239EBF50C((uint64_t)result, a2);
  if (v7 >= 1)
  {
    if ((unint64_t)v7 < 0x10
      || (a4 < (unint64_t)(v6 + 1) ? (v18 = (unint64_t)v6 >= a4 + 2 * v7) : (v18 = 1), !v18))
    {
      v19 = (__int16 *)a4;
      v20 = v7;
LABEL_40:
      v24 = v20 + 1;
      do
      {
        *v19++ = *v6;
        --v24;
      }
      while (v24 > 1);
      return result;
    }
    v19 = (__int16 *)(a4 + 2 * (v7 & 0xFFFFFFFFFFFFFFF0));
    v20 = v7 & 0xF;
    v21 = vld1q_dup_s16(v6);
    v22 = (int16x8_t *)(a4 + 16);
    v23 = v7 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v22[-1] = v21;
      *v22 = v21;
      v22 += 2;
      v23 -= 16;
    }
    while (v23);
    if (v7 != (v7 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_40;
  }
  return result;
}

_QWORD *sub_23978FC2C(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  char *v7;
  BOOL v8;
  int v9;
  BOOL v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  _OWORD v19[2];

  v2 = *result;
  v1 = result[1];
  v3 = *(unsigned int *)(*result + 20);
  v4 = *(unsigned int *)(v1 + 20);
  if ((_DWORD)v3 == (_DWORD)v4)
  {
    v5 = *(_DWORD *)(v2 + 8);
    if ((_DWORD)v3 == *(_DWORD *)(v2 + 16) * v5)
    {
      v6 = *(_DWORD *)(v2 + 12) * v5;
      v7 = *(char **)v2;
      if ((_DWORD)v6)
        v8 = v7 == 0;
      else
        v8 = 0;
      if (v8)
        sub_239EBF50C((uint64_t)result, (uint64_t)v7);
      if ((_DWORD)v6)
        return memmove(*(void **)v1, v7, 2 * v6);
      return result;
    }
  }
  else
  {
    v5 = *(_DWORD *)(v2 + 8);
  }
  v13 = v5;
  v9 = *(_DWORD *)(v2 + 12);
  if (v5)
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v14 = 0;
    v15 = v5 - 1;
    v16 = *(unsigned int *)(v2 + 16) | ((unint64_t)*(unsigned int *)(v1 + 16) << 32);
    v17 = v9 - 1;
    v18 = v3 | (v4 << 32);
    v11 = *(char **)v2;
    v12 = *(char **)v1;
    memset(v19, 0, sizeof(v19));
    return sub_23978FD08(&v14, (uint64_t)v19, &v13, v11, v12);
  }
  return result;
}

_DWORD *sub_23978FD08(_DWORD *result, uint64_t a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  int v9;
  int v10;
  unsigned int v11;
  _DWORD *v12;
  unsigned int i;
  uint64_t v14;
  uint64_t v15;

  v5 = __dst;
  v6 = __src;
  v9 = result[3];
  v10 = result[4];
  *(_QWORD *)a2 = __src;
  *(_DWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = __dst;
  *(_DWORD *)(a2 + 24) = v10;
  v11 = result[5];
  if (v11)
  {
    v12 = result;
    for (i = 0; i < v11; ++i)
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 16) = v5;
      v14 = *a3;
      if (!v6 && v14)
        sub_239EBF50C((uint64_t)result, a2);
      if (v14)
      {
        result = memmove(v5, v6, 2 * v14);
        v11 = v12[5];
      }
      v6 += 2 * v12[6];
      v5 += 2 * v12[7];
    }
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 16) = v5;
  v15 = *a3;
  if (!v6 && v15)
    sub_239EBF50C((uint64_t)result, a2);
  if (v15)
    return memmove(v5, v6, 2 * v15);
  return result;
}

unsigned int *sub_23978FDF0(unsigned int *result, uint64_t a2)
{
  const __int16 *v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  BOOL v10;
  __int16 *v11;
  uint64_t v12;
  int16x8_t v13;
  int16x8_t *v14;
  uint64_t v15;
  int v16;
  int v17;
  BOOL v18;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[3];
  unsigned int v25[7];
  _QWORD v26[3];

  v3 = *(_QWORD *)result;
  v2 = (const __int16 *)*((_QWORD *)result + 1);
  v4 = *(_DWORD *)(*(_QWORD *)result + 12);
  v6 = *(_DWORD *)(*(_QWORD *)result + 24);
  v5 = *(_DWORD *)(*(_QWORD *)result + 28);
  if (v5 == v6 * v4)
  {
    v7 = (v4 * *(_DWORD *)(v3 + 8) * *(_DWORD *)(v3 + 16));
    v8 = *(_QWORD *)v3;
    if ((_DWORD)v7)
      v9 = v8 == 0;
    else
      v9 = 0;
    if (v9)
      sub_239EBF50C((uint64_t)result, a2);
    if ((_DWORD)v7)
    {
      if (v7 < 0x10
        || (v8 < (unint64_t)(v2 + 1) ? (v10 = v8 + 2 * v7 > (unint64_t)v2) : (v10 = 0), v10))
      {
        v11 = *(__int16 **)v3;
        v12 = v7;
      }
      else
      {
        v11 = (__int16 *)(v8 + 2 * (v7 & 0xFFFFFFF0));
        v12 = v7 & 0xF;
        v13 = vld1q_dup_s16(v2);
        v14 = (int16x8_t *)(v8 + 16);
        v15 = v7 & 0xFFFFFFF0;
        do
        {
          v14[-1] = v13;
          *v14 = v13;
          v14 += 2;
          v15 -= 16;
        }
        while (v15);
        if ((v7 & 0xFFFFFFF0) == v7)
          return result;
      }
      v21 = v12 + 1;
      do
      {
        *v11++ = *v2;
        --v21;
      }
      while (v21 > 1);
    }
  }
  else
  {
    v16 = *(_DWORD *)(v3 + 8);
    v22 = (v4 * v16);
    v24[0] = &v23;
    v24[1] = &v22;
    v24[2] = v2;
    v17 = *(_DWORD *)(v3 + 16);
    if (v16)
      v18 = v4 == 0;
    else
      v18 = 1;
    if (!v18 && v17 != 0)
    {
      v25[0] = 0;
      v25[1] = v16 - 1;
      v25[2] = *(_DWORD *)(v3 + 20);
      v25[3] = v4 - 1;
      v25[4] = v6;
      v25[5] = v17 - 1;
      v25[6] = v5;
      v20 = *(_QWORD *)v3;
      memset(v26, 0, sizeof(v26));
      return sub_23978FF30(v25, (uint64_t)v26, (uint64_t)v24, v20);
    }
  }
  return result;
}

unsigned int *sub_23978FF30(unsigned int *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  const __int16 *v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  __int16 *v11;
  int v12;
  __int16 *v13;
  uint64_t v14;
  int16x8_t v15;
  int16x8_t *v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  __int16 *v20;
  uint64_t v21;
  int16x8_t v22;
  int16x8_t *v23;
  unint64_t v24;
  unint64_t v25;

  v4 = result[4];
  v5 = result[2] | (unint64_t)(v4 << 32);
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_DWORD *)(a2 + 16) = v4;
  v6 = result[5];
  v7 = *(const __int16 **)(a3 + 16);
  v8 = **(_QWORD **)(a3 + 8);
  if (v6)
  {
    if (v8 >= 1)
    {
      if ((unint64_t)v8 >= 0x10)
      {
        v12 = 0;
        while (a4)
        {
          if (a4 < (unint64_t)(v7 + 1))
          {
            v13 = (__int16 *)a4;
            v14 = v8;
            if ((unint64_t)v7 < a4 + 2 * v8)
              goto LABEL_22;
          }
          v13 = (__int16 *)(a4 + 2 * (v8 & 0xFFFFFFFFFFFFFFF0));
          v15 = vld1q_dup_s16(v7);
          v16 = (int16x8_t *)(a4 + 16);
          v17 = v8 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v16[-1] = v15;
            *v16 = v15;
            v16 += 2;
            v17 -= 16;
          }
          while (v17);
          v14 = v8 & 0xF;
          if (v8 != (v8 & 0xFFFFFFFFFFFFFFF0))
          {
LABEL_22:
            v18 = v14 + 1;
            do
            {
              *v13++ = *v7;
              --v18;
            }
            while (v18 > 1);
          }
          a4 += 2 * result[6];
          if (++v12 == v6)
            goto LABEL_26;
        }
      }
      else
      {
        v9 = 0;
        while (a4)
        {
          v10 = v8 + 1;
          v11 = (__int16 *)a4;
          do
          {
            *v11++ = *v7;
            --v10;
          }
          while (v10 > 1);
          a4 += 2 * result[6];
          if (++v9 == v6)
            goto LABEL_26;
        }
      }
      goto LABEL_43;
    }
    if (v8)
    {
      while (a4)
      {
        a4 += 2 * result[6];
        if (!--v6)
          goto LABEL_26;
      }
LABEL_43:
      sub_239EBF5BC((_QWORD *)a2, a2);
    }
    a4 += (2 * (v6 - 1) + 2) * result[6];
  }
LABEL_26:
  *(_QWORD *)a2 = a4;
  if (!a4 && v8)
    sub_239EBF50C((uint64_t)result, a2);
  if (v8 >= 1)
  {
    if ((unint64_t)v8 < 0x10
      || (a4 < (unint64_t)(v7 + 1) ? (v19 = (unint64_t)v7 >= a4 + 2 * v8) : (v19 = 1), !v19))
    {
      v20 = (__int16 *)a4;
      v21 = v8;
LABEL_40:
      v25 = v21 + 1;
      do
      {
        *v20++ = *v7;
        --v25;
      }
      while (v25 > 1);
      return result;
    }
    v20 = (__int16 *)(a4 + 2 * (v8 & 0xFFFFFFFFFFFFFFF0));
    v21 = v8 & 0xF;
    v22 = vld1q_dup_s16(v7);
    v23 = (int16x8_t *)(a4 + 16);
    v24 = v8 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v23[-1] = v22;
      *v23 = v22;
      v23 += 2;
      v24 -= 16;
    }
    while (v24);
    if (v8 != (v8 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_40;
  }
  return result;
}

uint64_t sub_23979010C(uint64_t result, unint64_t *a2, uint64_t a3, unint64_t a4)
{
  int v4;
  const __int16 *v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  __int16 *v9;
  int v10;
  __int16 *v11;
  uint64_t v12;
  int16x8_t v13;
  int16x8_t *v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  __int16 *v18;
  uint64_t v19;
  int16x8_t v20;
  int16x8_t *v21;
  unint64_t v22;
  unint64_t v23;

  *a2 = a4;
  v4 = *(_DWORD *)(result + 12);
  v5 = *(const __int16 **)(a3 + 16);
  v6 = **(_QWORD **)(a3 + 8);
  if (v4)
  {
    if (v6 >= 1)
    {
      if ((unint64_t)v6 >= 0x10)
      {
        v10 = 0;
        while (a4)
        {
          if (a4 < (unint64_t)(v5 + 1))
          {
            v11 = (__int16 *)a4;
            v12 = v6;
            if ((unint64_t)v5 < a4 + 2 * v6)
              goto LABEL_22;
          }
          v11 = (__int16 *)(a4 + 2 * (v6 & 0xFFFFFFFFFFFFFFF0));
          v13 = vld1q_dup_s16(v5);
          v14 = (int16x8_t *)(a4 + 16);
          v15 = v6 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v14[-1] = v13;
            *v14 = v13;
            v14 += 2;
            v15 -= 16;
          }
          while (v15);
          v12 = v6 & 0xF;
          if (v6 != (v6 & 0xFFFFFFFFFFFFFFF0))
          {
LABEL_22:
            v16 = v12 + 1;
            do
            {
              *v11++ = *v5;
              --v16;
            }
            while (v16 > 1);
          }
          a4 += 2 * *(unsigned int *)(result + 16);
          if (++v10 == v4)
            goto LABEL_26;
        }
      }
      else
      {
        v7 = 0;
        while (a4)
        {
          v8 = v6 + 1;
          v9 = (__int16 *)a4;
          do
          {
            *v9++ = *v5;
            --v8;
          }
          while (v8 > 1);
          a4 += 2 * *(unsigned int *)(result + 16);
          if (++v7 == v4)
            goto LABEL_26;
        }
      }
      goto LABEL_43;
    }
    if (v6)
    {
      while (a4)
      {
        a4 += 2 * *(unsigned int *)(result + 16);
        if (!--v4)
          goto LABEL_26;
      }
LABEL_43:
      sub_239EBF5BC(a2, (uint64_t)a2);
    }
    a4 += (2 * (v4 - 1) + 2) * *(unsigned int *)(result + 16);
  }
LABEL_26:
  *a2 = a4;
  if (!a4 && v6)
    sub_239EBF50C(result, (uint64_t)a2);
  if (v6 >= 1)
  {
    if ((unint64_t)v6 < 0x10
      || (a4 < (unint64_t)(v5 + 1) ? (v17 = (unint64_t)v5 >= a4 + 2 * v6) : (v17 = 1), !v17))
    {
      v18 = (__int16 *)a4;
      v19 = v6;
LABEL_40:
      v23 = v19 + 1;
      do
      {
        *v18++ = *v5;
        --v23;
      }
      while (v23 > 1);
      return result;
    }
    v18 = (__int16 *)(a4 + 2 * (v6 & 0xFFFFFFFFFFFFFFF0));
    v19 = v6 & 0xF;
    v20 = vld1q_dup_s16(v5);
    v21 = (int16x8_t *)(a4 + 16);
    v22 = v6 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v21[-1] = v20;
      *v21 = v20;
      v21 += 2;
      v22 -= 16;
    }
    while (v22);
    if (v6 != (v6 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_40;
  }
  return result;
}

_QWORD **sub_2397902D8(_QWORD **result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v6;
  uint64_t v7;
  _WORD *v8;
  int v9;
  uint64_t v10;
  _WORD *v11;
  int v12;
  _QWORD **v13;
  int v14;

  v2 = *(_DWORD *)(a2 + 12);
  v3 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v6 = v2 - 1;
    v7 = *(unsigned int *)(a2 + 24);
    v8 = *(_WORD **)a2;
    v9 = v3 - 1;
    if (v3 == 1)
    {
      v11 = (_WORD *)**result;
      if (!v6)
      {
LABEL_19:
        *v8 = *v11;
        v8[1] = *v11;
        v8[2] = *v11;
        return result;
      }
    }
    else
    {
      v10 = *(unsigned int *)(a2 + 28);
      v11 = (_WORD *)**result;
      if (!v6)
      {
        do
        {
          *v8 = *v11;
          v8[1] = *v11;
          v8[2] = *v11;
          v8 += v10;
          --v9;
        }
        while (v9);
        goto LABEL_19;
      }
      v12 = 0;
      v13 = (_QWORD **)(v8 + 2);
      do
      {
        result = v13;
        v14 = v6;
        do
        {
          *((_WORD *)result - 2) = *v11;
          *((_WORD *)result - 1) = *v11;
          *(_WORD *)result = *v11;
          result = (_QWORD **)((char *)result + 2 * v7);
          --v14;
        }
        while (v14);
        *((_WORD *)result - 2) = *v11;
        *((_WORD *)result - 1) = *v11;
        *(_WORD *)result = *v11;
        v8 += v10;
        ++v12;
        v13 = (_QWORD **)((char *)v13 + 2 * v10);
      }
      while (v12 != v9);
    }
    do
    {
      *v8 = *v11;
      v8[1] = *v11;
      v8[2] = *v11;
      v8 += v7;
      --v6;
    }
    while (v6);
    goto LABEL_19;
  }
  return result;
}

void sub_239790400(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  BOOL v4;
  int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  char *v11;

  v1 = *(_DWORD **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v6 = v1[6];
    if (v6 == *(_DWORD *)(v2 + 24))
    {
      v7 = v1[2];
      if (v6 == v7)
      {
        sub_2397904B4((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = v1[2];
    }
    v11 = (char *)v7;
    if (v7)
      v8 = v1[3] == 0;
    else
      v8 = 1;
    if (!v8 && v1[4] != 0)
      sub_2397906A4((uint64_t *)&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (v1[2])
      v4 = v1[3] == 0;
    else
      v4 = 1;
    if (!v4 && v1[4] != 0)
    {
      v11 = &v10;
      sub_23979086C((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

unsigned int *sub_2397904B4(unsigned int *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _OWORD v25[3];

  v2 = *(_QWORD *)result;
  v1 = *((_QWORD *)result + 1);
  v3 = *(unsigned int *)(*(_QWORD *)result + 28);
  v4 = *(unsigned int *)(v1 + 28);
  v5 = *(_DWORD *)(*(_QWORD *)result + 12);
  if ((_DWORD)v3 == (_DWORD)v4 && (_DWORD)v3 == *(_DWORD *)(v2 + 24) * v5)
  {
    v6 = (v5 * *(_DWORD *)(v2 + 8) * *(_DWORD *)(v2 + 16));
    v7 = *(char **)v2;
    if ((_DWORD)v6)
      v8 = v7 == 0;
    else
      v8 = 0;
    if (v8)
      sub_239EBF50C((uint64_t)result, (uint64_t)v7);
    if ((_DWORD)v6)
      return (unsigned int *)memmove(*(void **)v1, v7, 2 * v6);
  }
  else
  {
    v9 = *(_DWORD *)(v2 + 8);
    v17 = (v5 * v9);
    v10 = *(_DWORD *)(v2 + 16);
    if (v9)
      v11 = v5 == 0;
    else
      v11 = 1;
    if (!v11 && v10 != 0)
    {
      v19 = v9 - 1;
      v13 = *(unsigned int *)(v2 + 24);
      v14 = *(unsigned int *)(v1 + 24);
      v20 = *(unsigned int *)(v2 + 20) | ((unint64_t)*(unsigned int *)(v1 + 20) << 32);
      v18 = 0;
      v21 = v5 - 1;
      v22 = v13 | (v14 << 32);
      v23 = v10 - 1;
      v24 = v3 | (v4 << 32);
      v15 = *(char **)v2;
      v16 = *(char **)v1;
      memset(v25, 0, sizeof(v25));
      return sub_2397905B0((unsigned int *)&v18, (uint64_t)v25, &v17, v15, v16);
    }
  }
  return result;
}

unsigned int *sub_2397905B0(unsigned int *result, uint64_t a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int i;
  uint64_t v16;
  uint64_t v17;

  v5 = __dst;
  v6 = __src;
  v9 = result[6];
  v10 = result[7];
  v11 = result[3] | (unint64_t)(v9 << 32);
  v12 = result[4] | (unint64_t)(v10 << 32);
  *(_QWORD *)a2 = __src;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = __dst;
  *(_QWORD *)(a2 + 32) = v12;
  *(_DWORD *)(a2 + 40) = v10;
  v13 = result[8];
  if (v13)
  {
    v14 = result;
    for (i = 0; i < v13; ++i)
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 24) = v5;
      v16 = *a3;
      if (!v6 && v16)
        sub_239EBF50C((uint64_t)result, a2);
      if (v16)
      {
        result = (unsigned int *)memmove(v5, v6, 2 * v16);
        v13 = v14[8];
      }
      v6 += 2 * v14[9];
      v5 += 2 * v14[10];
    }
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 24) = v5;
  v17 = *a3;
  if (!v6 && v17)
    sub_239EBF50C((uint64_t)result, a2);
  if (v17)
    return (unsigned int *)memmove(v5, v6, 2 * v17);
  return result;
}

uint64_t *sub_2397906A4(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  _OWORD v21[2];

  v4 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v8 = result;
    v15 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 24);
    v10 = *(unsigned int *)(a3 + 24);
    v16 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v14 = 0;
    v17 = v3 - 1;
    v18 = v9 | (v10 << 32);
    v20 = *(unsigned int *)(a2 + 28) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v11 = *(char **)a2;
    v12 = *(char **)a3;
    memset(v21, 0, sizeof(v21));
    v19 = v5 - 1;
    if (v5 != 1)
    {
      v13 = 0;
      do
      {
        sub_239790790(&v14, (char **)v21, v8, v11, v12);
        v11 += 2 * v20;
        v12 += 2 * HIDWORD(v20);
        ++v13;
      }
      while (v13 < v19);
    }
    return (uint64_t *)sub_239790790(&v14, (char **)v21, v8, v11, v12);
  }
  return result;
}

_DWORD *sub_239790790(_DWORD *result, char **a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  unsigned int v9;
  _DWORD *v10;
  unsigned int i;
  uint64_t v12;
  uint64_t v13;

  v5 = __dst;
  v6 = __src;
  *a2 = __src;
  a2[2] = __dst;
  v9 = result[5];
  if (v9)
  {
    v10 = result;
    for (i = 0; i < v9; ++i)
    {
      *a2 = v6;
      a2[2] = v5;
      v12 = *a3;
      if (!v6 && v12)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      if (v12)
      {
        result = memmove(v5, v6, 2 * v12);
        v9 = v10[5];
      }
      v6 += 2 * v10[6];
      v5 += 2 * v10[7];
    }
  }
  *a2 = v6;
  a2[2] = v5;
  v13 = *a3;
  if (!v6 && v13)
    sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  if (v13)
    return memmove(v5, v6, 2 * v13);
  return result;
}

void sub_23979086C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  _WORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 24);
    v9 = *(unsigned int *)(a3 + 24);
    v10 = *(_WORD **)a2;
    v11 = *(_WORD **)a3;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (!v7)
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        *v11 = *v10;
        v11[1] = v10[1];
        v11[2] = v10[2];
        return;
      }
      v15 = 0;
      v16 = v11 + 2;
      v17 = v10 + 2;
      do
      {
        v18 = v17;
        v19 = v16;
        v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *v19 = *v18;
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
}

uint64_t sub_2397909BC(uint64_t result, uint64_t a2, _DWORD *a3)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  if (a3[1])
    v3 = *a3 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a3;
  if (v3)
    v4 = 0;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  LODWORD(v6) = v5 * v4;
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  LODWORD(v7) = 1;
  *(_QWORD *)((char *)&v7 + 4) = v5 | (v6 << 32);
  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = __PAIR64__(v4, 3);
  *(_DWORD *)(result + 16) = HIDWORD(v4);
  *(_QWORD *)(result + 20) = v7;
  *(_DWORD *)(result + 28) = v6;
  *(_QWORD *)(result + 32) = v4;
  *(_QWORD *)(result + 40) = *(_QWORD *)((char *)&v7 + 4);
  if ((_DWORD)v6 * HIDWORD(v4) == -1)
    sub_239EBFBC4(result, a2);
  return result;
}

uint64_t sub_239790A98(uint64_t result, uint64_t a2, _DWORD *a3)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  if (a3[1])
    v3 = *a3 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a3;
  if (v3)
    v4 = 0;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  LODWORD(v6) = v5 * v4;
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  LODWORD(v7) = 1;
  *(_QWORD *)((char *)&v7 + 4) = v5 | (v6 << 32);
  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = __PAIR64__(v4, 3);
  *(_DWORD *)(result + 16) = HIDWORD(v4);
  *(_QWORD *)(result + 20) = v7;
  *(_DWORD *)(result + 28) = v6;
  *(_QWORD *)(result + 32) = v4;
  *(_QWORD *)(result + 40) = *(_QWORD *)((char *)&v7 + 4);
  if ((_DWORD)v6 * HIDWORD(v4) == -1)
    sub_239EBFBC4(result, a2);
  return result;
}

unsigned int *sub_239790B74(uint64_t a1, uint64_t a2)
{
  unsigned int *result;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  BOOL v8;
  unsigned int v10;
  uint64_t v11;
  uint64_t *v12;
  _WORD *v13;
  _DWORD v14[7];

  result = *(unsigned int **)a1;
  v4 = result[5];
  if (v4 == 1)
  {
    if (result[6] == result[2])
      return sub_23978FDF0((unsigned int *)a1, a2);
    else
      return (unsigned int *)sub_239790C30((uint64_t)result, *(_QWORD *)(a1 + 8));
  }
  else
  {
    v11 = *(_QWORD *)(a1 + 8);
    v6 = result[2];
    v5 = result[3];
    v7 = result[4];
    if (v6)
      v8 = v5 == 0;
    else
      v8 = 1;
    if (!v8 && v7 != 0)
    {
      v12 = &v11;
      v14[0] = 0;
      v14[1] = v6 - 1;
      v14[2] = v4;
      v14[3] = v5 - 1;
      v10 = result[7];
      v14[4] = result[6];
      v14[5] = v7 - 1;
      v14[6] = v10;
      v13 = *(_WORD **)result;
      return sub_239790CEC(v14, &v12, &v13);
    }
  }
  return result;
}

uint64_t sub_239790C30(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  BOOL v5;
  int v7;
  unsigned int v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  _QWORD v13[3];
  _DWORD v14[5];
  unsigned int v15;
  unsigned int v16;
  unint64_t v17[2];

  v2 = *(unsigned int *)(result + 8);
  v3 = *(_DWORD *)(result + 12);
  v11 = v2;
  v13[0] = &v12;
  v13[1] = &v11;
  v13[2] = a2;
  v4 = *(_DWORD *)(result + 16);
  if ((_DWORD)v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v14[0] = 0;
    v14[1] = v2 - 1;
    v7 = *(_DWORD *)(result + 24);
    v14[2] = *(_DWORD *)(result + 20);
    v14[3] = v3 - 1;
    v8 = *(_DWORD *)(result + 28);
    v9 = *(_QWORD *)result;
    v17[0] = 0;
    v17[1] = 0;
    v14[4] = v7;
    v15 = v4 - 1;
    v16 = v8;
    if (v4 != 1)
    {
      v10 = 0;
      do
      {
        sub_23979010C((uint64_t)v14, v17, (uint64_t)v13, v9);
        v9 += 2 * v16;
        ++v10;
      }
      while (v10 < v15);
    }
    return sub_23979010C((uint64_t)v14, v17, (uint64_t)v13, v9);
  }
  return result;
}

_DWORD *sub_239790CEC(_DWORD *result, _QWORD **a2, _WORD **a3)
{
  _WORD *v3;
  int v4;
  int v5;
  _WORD *v6;
  uint64_t v7;
  int v8;
  _WORD *v9;
  uint64_t v10;
  _WORD *v11;
  int v12;
  uint64_t v13;

  v3 = *a3;
  v4 = result[5];
  if (!v4)
  {
    v5 = result[3];
    v6 = (_WORD *)**a2;
    if (!v5)
      goto LABEL_13;
    goto LABEL_9;
  }
  v5 = result[3];
  v6 = (_WORD *)**a2;
  v7 = result[6];
  if (v5)
  {
    v8 = 0;
    v9 = v3 + 2;
    v10 = 2 * result[4];
    do
    {
      v11 = v9;
      v12 = v5;
      do
      {
        *(v11 - 2) = *v6;
        *(v11 - 1) = *v6;
        *v11 = *v6;
        v11[1] = *v6;
        v11 = (_WORD *)((char *)v11 + v10);
        --v12;
      }
      while (v12);
      *(v11 - 2) = *v6;
      *(v11 - 1) = *v6;
      *v11 = *v6;
      v11[1] = *v6;
      v3 += v7;
      ++v8;
      v9 += v7;
    }
    while (v8 != v4);
LABEL_9:
    v13 = 2 * result[4];
    do
    {
      *v3 = *v6;
      v3[1] = *v6;
      v3[2] = *v6;
      v3[3] = *v6;
      v3 = (_WORD *)((char *)v3 + v13);
      --v5;
    }
    while (v5);
    goto LABEL_13;
  }
  do
  {
    *v3 = *v6;
    v3[1] = *v6;
    v3[2] = *v6;
    v3[3] = *v6;
    v3 += v7;
    --v4;
  }
  while (v4);
LABEL_13:
  *v3 = *v6;
  v3[1] = *v6;
  v3[2] = *v6;
  v3[3] = *v6;
  return result;
}

void sub_239790E2C(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  BOOL v4;
  int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  char *v11;

  v1 = *(_DWORD **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v6 = v1[6];
    if (v6 == *(_DWORD *)(v2 + 24))
    {
      v7 = v1[2];
      if (v6 == v7)
      {
        sub_2397904B4((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = v1[2];
    }
    v11 = (char *)v7;
    if (v7)
      v8 = v1[3] == 0;
    else
      v8 = 1;
    if (!v8 && v1[4] != 0)
      sub_2397906A4((uint64_t *)&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (v1[2])
      v4 = v1[3] == 0;
    else
      v4 = 1;
    if (!v4 && v1[4] != 0)
    {
      v11 = &v10;
      sub_239790EE0((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

void sub_239790EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  _WORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 24);
    v9 = *(unsigned int *)(a3 + 24);
    v10 = *(_WORD **)a2;
    v11 = *(_WORD **)a3;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (!v7)
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        *v11 = *v10;
        v11[1] = v10[1];
        v11[2] = v10[2];
        v11[3] = v10[3];
        return;
      }
      v15 = 0;
      v16 = v11 + 2;
      v17 = v10 + 2;
      do
      {
        v18 = v17;
        v19 = v16;
        v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19[1] = v18[1];
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *v19 = *v18;
        v19[1] = v18[1];
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
}

unsigned __int16 sub_239791058@<H0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  const __int16 *v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  __int16 *v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[3];
  _DWORD v24[5];
  _QWORD v25[2];

  v4 = *a1;
  v3 = (const __int16 *)a1[1];
  v5 = *(_DWORD *)(*a1 + 8);
  v7 = *(_DWORD *)(*a1 + 16);
  v6 = *(_DWORD *)(*a1 + 20);
  if (v6 == v7 * v5)
  {
    v8 = (*(_DWORD *)(v4 + 12) * v5);
    v9 = *(_QWORD *)v4;
    if ((_DWORD)v8)
      v10 = v9 == 0;
    else
      v10 = 0;
    if (v10)
      sub_239EBF50C((uint64_t)a1, a2);
    if ((_DWORD)v8)
    {
      if (v8 < 0x10
        || (v9 < (unint64_t)(v3 + 1) ? (v11 = v9 + 2 * v8 > (unint64_t)v3) : (v11 = 0), v11))
      {
        v12 = *(__int16 **)v4;
        v13 = v8;
      }
      else
      {
        v12 = (__int16 *)(v9 + 2 * (v8 & 0xFFFFFFF0));
        v13 = v8 & 0xF;
        a3 = (__n128)vld1q_dup_s16(v3);
        v14 = (__n128 *)(v9 + 16);
        v15 = v8 & 0xFFFFFFF0;
        do
        {
          v14[-1] = a3;
          *v14 = a3;
          v14 += 2;
          v15 -= 16;
        }
        while (v15);
        if ((v8 & 0xFFFFFFF0) == v8)
          return a3.n128_u16[0];
      }
      v19 = v13 + 1;
      do
      {
        a3.n128_u16[0] = *v3;
        *v12++ = *v3;
        --v19;
      }
      while (v19 > 1);
    }
  }
  else
  {
    v21 = *(unsigned int *)(*a1 + 8);
    v23[0] = &v22;
    v23[1] = &v21;
    v23[2] = v3;
    v16 = *(_DWORD *)(v4 + 12);
    if (v5)
      v17 = v16 == 0;
    else
      v17 = 1;
    if (!v17)
    {
      v24[0] = 0;
      v24[1] = v5 - 1;
      v24[2] = v7;
      v24[3] = v16 - 1;
      v24[4] = v6;
      v18 = *(_QWORD *)v4;
      v25[0] = 0;
      v25[1] = 0;
      a3.n128_u16[0] = sub_239791174(v24, (uint64_t)v25, (uint64_t)v23, v18, a3);
    }
  }
  return a3.n128_u16[0];
}

unsigned __int16 sub_239791174@<H0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, __n128 a5@<Q0>)
{
  int v5;
  unsigned int v6;
  unsigned int i;
  const __int16 *v8;
  uint64_t v9;
  __int16 *v10;
  BOOL v11;
  __n128 *v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  const __int16 *v16;
  uint64_t v17;
  BOOL v18;
  __int16 *v19;
  uint64_t v20;
  __n128 *v21;
  unint64_t v22;
  unint64_t v23;

  v5 = a1[2];
  *(_QWORD *)a2 = a4;
  *(_DWORD *)(a2 + 8) = v5;
  v6 = a1[3];
  if (v6)
  {
    for (i = 0; i < v6; ++i)
    {
      *(_QWORD *)a2 = a4;
      v8 = *(const __int16 **)(a3 + 16);
      v9 = **(_QWORD **)(a3 + 8);
      if (!a4 && v9)
        sub_239EBF50C((uint64_t)a1, a2);
      if (v9 < 1)
        goto LABEL_4;
      if ((unint64_t)v9 >= 0x10)
      {
        v11 = a4 >= (unint64_t)(v8 + 1) || (unint64_t)v8 >= a4 + 2 * v9;
        v10 = (__int16 *)a4;
        if (v11)
        {
          v10 = (__int16 *)(a4 + 2 * (v9 & 0xFFFFFFFFFFFFFFF0));
          a5 = (__n128)vld1q_dup_s16(v8);
          v12 = (__n128 *)(a4 + 16);
          v13 = v9 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v12[-1] = a5;
            *v12 = a5;
            v12 += 2;
            v13 -= 16;
          }
          while (v13);
          v14 = v9 == (v9 & 0x7FFFFFFFFFFFFFF0);
          v9 &= 0xFu;
          if (v14)
            goto LABEL_3;
        }
      }
      else
      {
        v10 = (__int16 *)a4;
      }
      v15 = v9 + 1;
      do
      {
        a5.n128_u16[0] = *v8;
        *v10++ = *v8;
        --v15;
      }
      while (v15 > 1);
LABEL_3:
      v6 = a1[3];
LABEL_4:
      a4 += 2 * a1[4];
    }
  }
  *(_QWORD *)a2 = a4;
  v16 = *(const __int16 **)(a3 + 16);
  v17 = **(_QWORD **)(a3 + 8);
  if (!a4 && v17)
    sub_239EBF50C((uint64_t)a1, a2);
  if (v17 >= 1)
  {
    if ((unint64_t)v17 < 0x10
      || (a4 < (unint64_t)(v16 + 1) ? (v18 = (unint64_t)v16 >= a4 + 2 * v17) : (v18 = 1), !v18))
    {
      v19 = (__int16 *)a4;
      v20 = **(_QWORD **)(a3 + 8);
LABEL_35:
      v23 = v20 + 1;
      do
      {
        a5.n128_u16[0] = *v16;
        *v19++ = *v16;
        --v23;
      }
      while (v23 > 1);
      return a5.n128_u16[0];
    }
    v19 = (__int16 *)(a4 + 2 * (v17 & 0xFFFFFFFFFFFFFFF0));
    v20 = **(_QWORD **)(a3 + 8) & 0xFLL;
    a5 = (__n128)vld1q_dup_s16(v16);
    v21 = (__n128 *)(a4 + 16);
    v22 = v17 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v21[-1] = a5;
      *v21 = a5;
      v21 += 2;
      v22 -= 16;
    }
    while (v22);
    if (v17 != (v17 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_35;
  }
  return a5.n128_u16[0];
}

double sub_2397912E0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  _WORD *v10;
  unint64_t v11;
  __int16 *v12;
  unint64_t v13;
  unint64_t v14;
  _WORD *v15;
  __int128 *v16;
  _OWORD *v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  __int16 *v25;
  __int16 v26;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unint64_t v31;
  int v32;
  uint64_t v33;
  _OWORD v34[2];

  v2 = *a1;
  v3 = a1[1];
  v4 = *(unsigned int *)(*a1 + 20);
  v5 = *(unsigned int *)(v3 + 20);
  if ((_DWORD)v4 != (_DWORD)v5)
  {
    v6 = *(_DWORD *)(v2 + 8);
LABEL_15:
    v28 = v6;
    v21 = *(_DWORD *)(v2 + 12);
    if (v6)
      v22 = v21 == 0;
    else
      v22 = 1;
    if (!v22)
    {
      v29 = 0;
      v30 = v6 - 1;
      v31 = *(unsigned int *)(v2 + 16) | ((unint64_t)*(unsigned int *)(v3 + 16) << 32);
      v32 = v21 - 1;
      v33 = v4 | (v5 << 32);
      v23 = *(_QWORD *)v2;
      v24 = *(_QWORD *)v3;
      memset(v34, 0, sizeof(v34));
      *(_QWORD *)&v19 = sub_239791438(&v29, (uint64_t)v34, &v28, v23, v24);
    }
    return *(double *)&v19;
  }
  v6 = *(_DWORD *)(v2 + 8);
  if ((_DWORD)v4 != *(_DWORD *)(v2 + 16) * v6)
    goto LABEL_15;
  v7 = *(_DWORD *)(v2 + 12) * v6;
  v8 = *(_QWORD *)v2;
  if ((_DWORD)v7)
    v9 = v8 == 0;
  else
    v9 = 0;
  if (v9)
    sub_239EBF50C((uint64_t)a1, a2);
  if ((_DWORD)v7)
  {
    v10 = *(_WORD **)v3;
    v11 = (v7 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v11 < 0xF)
    {
      v12 = (__int16 *)v8;
    }
    else
    {
      v12 = (__int16 *)v8;
      if ((unint64_t)v10 - v8 >= 0x20)
      {
        v13 = v11 + 1;
        v14 = v13 & 0xFFFFFFFFFFFFFFF0;
        v15 = &v10[v14];
        v12 = (__int16 *)(v8 + v14 * 2);
        v16 = (__int128 *)(v8 + 16);
        v17 = v10 + 8;
        v18 = v13 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v19 = *(v16 - 1);
          v20 = *v16;
          *(v17 - 1) = v19;
          *v17 = v20;
          v16 += 2;
          v17 += 2;
          v18 -= 16;
        }
        while (v18);
        v10 = v15;
        if (v13 == (v13 & 0xFFFFFFFFFFFFFFF0))
          return *(double *)&v19;
      }
    }
    v25 = (__int16 *)(v8 + 2 * v7);
    do
    {
      v26 = *v12++;
      LOWORD(v19) = v26;
      *v10++ = v26;
    }
    while (v12 != v25);
  }
  return *(double *)&v19;
}

__int16 sub_239791438@<H0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>)
{
  int v5;
  int v6;
  unsigned int v7;
  unsigned int i;
  uint64_t v9;
  unint64_t v10;
  _WORD *v11;
  __int16 *v12;
  unint64_t v13;
  unint64_t v14;
  __int128 *v15;
  _OWORD *v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int16 *v20;
  __int16 v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _WORD *v26;
  __int16 *v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  __int16 *v32;
  __int16 v33;

  v5 = a1[3];
  v6 = a1[4];
  *(_QWORD *)a2 = a4;
  *(_DWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = a5;
  *(_DWORD *)(a2 + 24) = v6;
  v7 = a1[5];
  if (v7)
  {
    for (i = 0; i < v7; ++i)
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v9 = *a3;
      if (!a4 && v9)
        sub_239EBF50C((uint64_t)a1, a2);
      if (v9)
      {
        v10 = (v9 - 1) & 0x7FFFFFFFFFFFFFFFLL;
        v11 = (_WORD *)a5;
        v12 = (__int16 *)a4;
        if (v10 < 0xF)
          goto LABEL_13;
        v11 = (_WORD *)a5;
        v12 = (__int16 *)a4;
        if ((unint64_t)(a5 - a4) < 0x20)
          goto LABEL_13;
        v13 = v10 + 1;
        v14 = 2 * (v13 & 0xFFFFFFFFFFFFFFF0);
        v11 = (_WORD *)(a5 + v14);
        v12 = (__int16 *)(a4 + v14);
        v15 = (__int128 *)(a4 + 16);
        v16 = (_OWORD *)(a5 + 16);
        v17 = v13 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v18 = *(v15 - 1);
          v19 = *v15;
          *(v16 - 1) = v18;
          *v16 = v19;
          v15 += 2;
          v16 += 2;
          v17 -= 16;
        }
        while (v17);
        if (v13 != (v13 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_13:
          v20 = (__int16 *)(a4 + 2 * v9);
          do
          {
            v21 = *v12++;
            LOWORD(v18) = v21;
            *v11++ = v21;
          }
          while (v12 != v20);
        }
        v7 = a1[5];
      }
      a4 += 2 * a1[6];
      a5 += 2 * a1[7];
    }
  }
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  v22 = *a3;
  if (!a4 && v22)
    sub_239EBF50C((uint64_t)a1, a2);
  if (v22)
  {
    v23 = (v22 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v23 < 0xF || (unint64_t)(a5 - a4) < 0x20)
    {
      v26 = (_WORD *)a5;
      v27 = (__int16 *)a4;
    }
    else
    {
      v24 = v23 + 1;
      v25 = (v23 + 1) & 0xFFFFFFFFFFFFFFF0;
      v26 = (_WORD *)(a5 + 2 * v25);
      v27 = (__int16 *)(a4 + 2 * v25);
      v28 = (__int128 *)(a4 + 16);
      v29 = (_OWORD *)(a5 + 16);
      v30 = v25;
      do
      {
        v18 = *(v28 - 1);
        v31 = *v28;
        *(v29 - 1) = v18;
        *v29 = v31;
        v28 += 2;
        v29 += 2;
        v30 -= 16;
      }
      while (v30);
      if (v24 == v25)
        return v18;
    }
    v32 = (__int16 *)(a4 + 2 * v22);
    do
    {
      v33 = *v27++;
      LOWORD(v18) = v33;
      *v26++ = v33;
    }
    while (v27 != v32);
  }
  return v18;
}

unsigned __int16 sub_2397915C0@<H0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  const __int16 *v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  __int16 *v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  int v16;
  int v17;
  BOOL v18;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  char v24;
  _QWORD v25[3];
  unsigned int v26[7];
  _QWORD v27[3];

  v4 = *a1;
  v3 = (const __int16 *)a1[1];
  v5 = *(_DWORD *)(*a1 + 12);
  v7 = *(_DWORD *)(*a1 + 24);
  v6 = *(_DWORD *)(*a1 + 28);
  if (v6 == v7 * v5)
  {
    v8 = (v5 * *(_DWORD *)(v4 + 8) * *(_DWORD *)(v4 + 16));
    v9 = *(_QWORD *)v4;
    if ((_DWORD)v8)
      v10 = v9 == 0;
    else
      v10 = 0;
    if (v10)
      sub_239EBF50C((uint64_t)a1, a2);
    if ((_DWORD)v8)
    {
      if (v8 < 0x10
        || (v9 < (unint64_t)(v3 + 1) ? (v11 = v9 + 2 * v8 > (unint64_t)v3) : (v11 = 0), v11))
      {
        v12 = *(__int16 **)v4;
        v13 = v8;
      }
      else
      {
        v12 = (__int16 *)(v9 + 2 * (v8 & 0xFFFFFFF0));
        v13 = v8 & 0xF;
        a3 = (__n128)vld1q_dup_s16(v3);
        v14 = (__n128 *)(v9 + 16);
        v15 = v8 & 0xFFFFFFF0;
        do
        {
          v14[-1] = a3;
          *v14 = a3;
          v14 += 2;
          v15 -= 16;
        }
        while (v15);
        if ((v8 & 0xFFFFFFF0) == v8)
          return a3.n128_u16[0];
      }
      v21 = v13 + 1;
      do
      {
        a3.n128_u16[0] = *v3;
        *v12++ = *v3;
        --v21;
      }
      while (v21 > 1);
    }
  }
  else
  {
    v16 = *(_DWORD *)(v4 + 8);
    v23 = (v5 * v16);
    v25[0] = &v24;
    v25[1] = &v23;
    v25[2] = v3;
    v17 = *(_DWORD *)(v4 + 16);
    if (v16)
      v18 = v5 == 0;
    else
      v18 = 1;
    if (!v18 && v17 != 0)
    {
      v26[0] = 0;
      v26[1] = v16 - 1;
      v26[2] = *(_DWORD *)(v4 + 20);
      v26[3] = v5 - 1;
      v26[4] = v7;
      v26[5] = v17 - 1;
      v26[6] = v6;
      v20 = *(_QWORD *)v4;
      memset(v27, 0, sizeof(v27));
      a3.n128_u16[0] = sub_239791700(v26, (uint64_t)v27, (uint64_t)v25, v20, a3);
    }
  }
  return a3.n128_u16[0];
}

unsigned __int16 sub_239791700@<H0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, __n128 a5@<Q0>)
{
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  unsigned int i;
  const __int16 *v9;
  uint64_t v10;
  __int16 *v11;
  BOOL v12;
  __n128 *v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  const __int16 *v17;
  uint64_t v18;
  BOOL v19;
  __int16 *v20;
  uint64_t v21;
  __n128 *v22;
  unint64_t v23;
  unint64_t v24;

  v5 = a1[4];
  v6 = a1[2] | (unint64_t)(v5 << 32);
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_DWORD *)(a2 + 16) = v5;
  v7 = a1[5];
  if (v7)
  {
    for (i = 0; i < v7; ++i)
    {
      *(_QWORD *)a2 = a4;
      v9 = *(const __int16 **)(a3 + 16);
      v10 = **(_QWORD **)(a3 + 8);
      if (!a4 && v10)
        sub_239EBF50C((uint64_t)a1, a2);
      if (v10 < 1)
        goto LABEL_4;
      if ((unint64_t)v10 >= 0x10)
      {
        v12 = a4 >= (unint64_t)(v9 + 1) || (unint64_t)v9 >= a4 + 2 * v10;
        v11 = (__int16 *)a4;
        if (v12)
        {
          v11 = (__int16 *)(a4 + 2 * (v10 & 0xFFFFFFFFFFFFFFF0));
          a5 = (__n128)vld1q_dup_s16(v9);
          v13 = (__n128 *)(a4 + 16);
          v14 = v10 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v13[-1] = a5;
            *v13 = a5;
            v13 += 2;
            v14 -= 16;
          }
          while (v14);
          v15 = v10 == (v10 & 0x7FFFFFFFFFFFFFF0);
          v10 &= 0xFu;
          if (v15)
            goto LABEL_3;
        }
      }
      else
      {
        v11 = (__int16 *)a4;
      }
      v16 = v10 + 1;
      do
      {
        a5.n128_u16[0] = *v9;
        *v11++ = *v9;
        --v16;
      }
      while (v16 > 1);
LABEL_3:
      v7 = a1[5];
LABEL_4:
      a4 += 2 * a1[6];
    }
  }
  *(_QWORD *)a2 = a4;
  v17 = *(const __int16 **)(a3 + 16);
  v18 = **(_QWORD **)(a3 + 8);
  if (!a4 && v18)
    sub_239EBF50C((uint64_t)a1, a2);
  if (v18 >= 1)
  {
    if ((unint64_t)v18 < 0x10
      || (a4 < (unint64_t)(v17 + 1) ? (v19 = (unint64_t)v17 >= a4 + 2 * v18) : (v19 = 1), !v19))
    {
      v20 = (__int16 *)a4;
      v21 = **(_QWORD **)(a3 + 8);
LABEL_35:
      v24 = v21 + 1;
      do
      {
        a5.n128_u16[0] = *v17;
        *v20++ = *v17;
        --v24;
      }
      while (v24 > 1);
      return a5.n128_u16[0];
    }
    v20 = (__int16 *)(a4 + 2 * (v18 & 0xFFFFFFFFFFFFFFF0));
    v21 = **(_QWORD **)(a3 + 8) & 0xFLL;
    a5 = (__n128)vld1q_dup_s16(v17);
    v22 = (__n128 *)(a4 + 16);
    v23 = v18 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v22[-1] = a5;
      *v22 = a5;
      v22 += 2;
      v23 -= 16;
    }
    while (v23);
    if (v18 != (v18 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_35;
  }
  return a5.n128_u16[0];
}

unsigned __int16 sub_239791874@<H0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, __n128 a5@<Q0>)
{
  unsigned int v5;
  unsigned int i;
  const __int16 *v7;
  uint64_t v8;
  __int16 *v9;
  BOOL v10;
  __n128 *v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  const __int16 *v15;
  uint64_t v16;
  BOOL v17;
  __int16 *v18;
  uint64_t v19;
  __n128 *v20;
  unint64_t v21;
  unint64_t v22;

  *a2 = a4;
  v5 = *(_DWORD *)(a1 + 12);
  if (v5)
  {
    for (i = 0; i < v5; ++i)
    {
      *a2 = a4;
      v7 = *(const __int16 **)(a3 + 16);
      v8 = **(_QWORD **)(a3 + 8);
      if (!a4 && v8)
        sub_239EBF50C(a1, (uint64_t)a2);
      if (v8 < 1)
        goto LABEL_4;
      if ((unint64_t)v8 >= 0x10)
      {
        v10 = a4 >= (unint64_t)(v7 + 1) || (unint64_t)v7 >= a4 + 2 * v8;
        v9 = (__int16 *)a4;
        if (v10)
        {
          v9 = (__int16 *)(a4 + 2 * (v8 & 0xFFFFFFFFFFFFFFF0));
          a5 = (__n128)vld1q_dup_s16(v7);
          v11 = (__n128 *)(a4 + 16);
          v12 = v8 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v11[-1] = a5;
            *v11 = a5;
            v11 += 2;
            v12 -= 16;
          }
          while (v12);
          v13 = v8 == (v8 & 0x7FFFFFFFFFFFFFF0);
          v8 &= 0xFu;
          if (v13)
            goto LABEL_3;
        }
      }
      else
      {
        v9 = (__int16 *)a4;
      }
      v14 = v8 + 1;
      do
      {
        a5.n128_u16[0] = *v7;
        *v9++ = *v7;
        --v14;
      }
      while (v14 > 1);
LABEL_3:
      v5 = *(_DWORD *)(a1 + 12);
LABEL_4:
      a4 += 2 * *(unsigned int *)(a1 + 16);
    }
  }
  *a2 = a4;
  v15 = *(const __int16 **)(a3 + 16);
  v16 = **(_QWORD **)(a3 + 8);
  if (!a4 && v16)
    sub_239EBF50C(a1, (uint64_t)a2);
  if (v16 >= 1)
  {
    if ((unint64_t)v16 < 0x10
      || (a4 < (unint64_t)(v15 + 1) ? (v17 = (unint64_t)v15 >= a4 + 2 * v16) : (v17 = 1), !v17))
    {
      v18 = (__int16 *)a4;
      v19 = **(_QWORD **)(a3 + 8);
LABEL_35:
      v22 = v19 + 1;
      do
      {
        a5.n128_u16[0] = *v15;
        *v18++ = *v15;
        --v22;
      }
      while (v22 > 1);
      return a5.n128_u16[0];
    }
    v18 = (__int16 *)(a4 + 2 * (v16 & 0xFFFFFFFFFFFFFFF0));
    v19 = **(_QWORD **)(a3 + 8) & 0xFLL;
    a5 = (__n128)vld1q_dup_s16(v15);
    v20 = (__n128 *)(a4 + 16);
    v21 = v16 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v20[-1] = a5;
      *v20 = a5;
      v20 += 2;
      v21 -= 16;
    }
    while (v21);
    if (v16 != (v16 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_35;
  }
  return a5.n128_u16[0];
}

__int16 sub_2397919D8@<H0>(uint64_t *a1@<X0>)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  _WORD *v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  _WORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  double v24;
  BOOL v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v1 = *a1;
  v2 = a1[1];
  if (*(_DWORD *)(*a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v22 = *(_DWORD *)(v1 + 24);
    if (v22 == *(_DWORD *)(v2 + 24))
    {
      v23 = *(_DWORD *)(v1 + 8);
      if (v22 == v23)
      {
        v24 = sub_239791B78(a1, v1);
        return LOWORD(v24);
      }
    }
    else
    {
      v23 = *(_DWORD *)(v1 + 8);
    }
    v30 = v23;
    if (v23)
      v25 = *(_DWORD *)(v1 + 12) == 0;
    else
      v25 = 1;
    if (!v25 && *(_DWORD *)(v1 + 16) != 0)
      v24 = sub_239791E84(&v30, v1, v2);
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 12);
    v5 = *(_DWORD *)(v1 + 16);
    if (*(_DWORD *)(v1 + 8))
      v6 = v4 == 0;
    else
      v6 = 1;
    if (!v6 && v5 != 0)
    {
      v8 = v4 - 1;
      v9 = *(_WORD **)v1;
      v10 = *(_WORD **)v2;
      v11 = 2 * *(unsigned int *)(v1 + 24);
      v12 = 2 * *(unsigned int *)(v2 + 24);
      v13 = v5 - 1;
      if (v13)
      {
        v14 = *(unsigned int *)(v2 + 28);
        v15 = *(unsigned int *)(v1 + 28);
        if (v8)
        {
          v16 = 0;
          v17 = v9 + 1;
          v18 = v10 + 1;
          do
          {
            v19 = v18;
            v20 = v17;
            v21 = v8;
            do
            {
              *(v19 - 1) = *(v20 - 1);
              *v19 = *v20;
              v20 = (_WORD *)((char *)v20 + v11);
              v19 = (_WORD *)((char *)v19 + v12);
              --v21;
            }
            while (v21);
            *(v19 - 1) = *(v20 - 1);
            *v19 = *v20;
            v9 += v15;
            v10 += v14;
            ++v16;
            v17 += v15;
            v18 += v14;
          }
          while (v16 != v13);
        }
        else
        {
          v27 = 2 * v15;
          v28 = 2 * v14;
          do
          {
            *v10 = *v9;
            v10[1] = v9[1];
            v9 = (_WORD *)((char *)v9 + v27);
            v10 = (_WORD *)((char *)v10 + v28);
            --v13;
          }
          while (v13);
        }
      }
      for (; v8; --v8)
      {
        *v10 = *v9;
        v10[1] = v9[1];
        v9 = (_WORD *)((char *)v9 + v11);
        v10 = (_WORD *)((char *)v10 + v12);
      }
      *v10 = *v9;
      LOWORD(v24) = v9[1];
      v10[1] = LOWORD(v24);
    }
  }
  return LOWORD(v24);
}

double sub_239791B78(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  _WORD *v10;
  unint64_t v11;
  __int16 *v12;
  unint64_t v13;
  unint64_t v14;
  _WORD *v15;
  __int128 *v16;
  _OWORD *v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  int v21;
  int v22;
  BOOL v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  __int16 v30;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  _OWORD v40[3];

  v2 = *a1;
  v3 = a1[1];
  v4 = *(unsigned int *)(*a1 + 28);
  v5 = *(unsigned int *)(v3 + 28);
  v6 = *(_DWORD *)(*a1 + 12);
  if ((_DWORD)v4 == (_DWORD)v5 && (_DWORD)v4 == *(_DWORD *)(v2 + 24) * v6)
  {
    v7 = (v6 * *(_DWORD *)(v2 + 8) * *(_DWORD *)(v2 + 16));
    v8 = *(_QWORD *)v2;
    if ((_DWORD)v7)
      v9 = v8 == 0;
    else
      v9 = 0;
    if (v9)
      sub_239EBF50C((uint64_t)a1, a2);
    if ((_DWORD)v7)
    {
      v10 = *(_WORD **)v3;
      v11 = (v7 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      if (v11 < 0xF)
      {
        v12 = (__int16 *)v8;
      }
      else
      {
        v12 = (__int16 *)v8;
        if ((unint64_t)v10 - v8 >= 0x20)
        {
          v13 = v11 + 1;
          v14 = v13 & 0xFFFFFFFFFFFFFFF0;
          v15 = &v10[v14];
          v12 = (__int16 *)(v8 + v14 * 2);
          v16 = (__int128 *)(v8 + 16);
          v17 = v10 + 8;
          v18 = v13 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v19 = *(v16 - 1);
            v20 = *v16;
            *(v17 - 1) = v19;
            *v17 = v20;
            v16 += 2;
            v17 += 2;
            v18 -= 16;
          }
          while (v18);
          v10 = v15;
          if (v13 == (v13 & 0xFFFFFFFFFFFFFFF0))
            return *(double *)&v19;
        }
      }
      v29 = (__int16 *)(v8 + 2 * v7);
      do
      {
        v30 = *v12++;
        LOWORD(v19) = v30;
        *v10++ = v30;
      }
      while (v12 != v29);
    }
  }
  else
  {
    v21 = *(_DWORD *)(v2 + 8);
    v32 = (v6 * v21);
    v22 = *(_DWORD *)(v2 + 16);
    if (v21)
      v23 = v6 == 0;
    else
      v23 = 1;
    if (!v23 && v22 != 0)
    {
      v34 = v21 - 1;
      v25 = *(unsigned int *)(v2 + 24);
      v26 = *(unsigned int *)(v3 + 24);
      v35 = *(unsigned int *)(v2 + 20) | ((unint64_t)*(unsigned int *)(v3 + 20) << 32);
      v33 = 0;
      v36 = v6 - 1;
      v37 = v25 | (v26 << 32);
      v38 = v22 - 1;
      v39 = v4 | (v5 << 32);
      v27 = *(_QWORD *)v2;
      v28 = *(_QWORD *)v3;
      memset(v40, 0, sizeof(v40));
      *(_QWORD *)&v19 = sub_239791CF0((unsigned int *)&v33, (uint64_t)v40, &v32, v27, v28);
    }
  }
  return *(double *)&v19;
}

__int16 sub_239791CF0@<H0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int i;
  uint64_t v11;
  unint64_t v12;
  _WORD *v13;
  __int16 *v14;
  unint64_t v15;
  unint64_t v16;
  __int128 *v17;
  _OWORD *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int16 *v22;
  __int16 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _WORD *v28;
  __int16 *v29;
  __int128 *v30;
  _OWORD *v31;
  unint64_t v32;
  __int128 v33;
  __int16 *v34;
  __int16 v35;

  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[3] | (unint64_t)(v5 << 32);
  v8 = a1[4] | (unint64_t)(v6 << 32);
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 8) = v7;
  *(_DWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = a5;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = v6;
  v9 = a1[8];
  if (v9)
  {
    for (i = 0; i < v9; ++i)
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 24) = a5;
      v11 = *a3;
      if (!a4 && v11)
        sub_239EBF50C((uint64_t)a1, a2);
      if (v11)
      {
        v12 = (v11 - 1) & 0x7FFFFFFFFFFFFFFFLL;
        v13 = (_WORD *)a5;
        v14 = (__int16 *)a4;
        if (v12 < 0xF)
          goto LABEL_13;
        v13 = (_WORD *)a5;
        v14 = (__int16 *)a4;
        if ((unint64_t)(a5 - a4) < 0x20)
          goto LABEL_13;
        v15 = v12 + 1;
        v16 = 2 * (v15 & 0xFFFFFFFFFFFFFFF0);
        v13 = (_WORD *)(a5 + v16);
        v14 = (__int16 *)(a4 + v16);
        v17 = (__int128 *)(a4 + 16);
        v18 = (_OWORD *)(a5 + 16);
        v19 = v15 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v20 = *(v17 - 1);
          v21 = *v17;
          *(v18 - 1) = v20;
          *v18 = v21;
          v17 += 2;
          v18 += 2;
          v19 -= 16;
        }
        while (v19);
        if (v15 != (v15 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_13:
          v22 = (__int16 *)(a4 + 2 * v11);
          do
          {
            v23 = *v14++;
            LOWORD(v20) = v23;
            *v13++ = v23;
          }
          while (v14 != v22);
        }
        v9 = a1[8];
      }
      a4 += 2 * a1[9];
      a5 += 2 * a1[10];
    }
  }
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 24) = a5;
  v24 = *a3;
  if (!a4 && v24)
    sub_239EBF50C((uint64_t)a1, a2);
  if (v24)
  {
    v25 = (v24 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v25 < 0xF || (unint64_t)(a5 - a4) < 0x20)
    {
      v28 = (_WORD *)a5;
      v29 = (__int16 *)a4;
    }
    else
    {
      v26 = v25 + 1;
      v27 = (v25 + 1) & 0xFFFFFFFFFFFFFFF0;
      v28 = (_WORD *)(a5 + 2 * v27);
      v29 = (__int16 *)(a4 + 2 * v27);
      v30 = (__int128 *)(a4 + 16);
      v31 = (_OWORD *)(a5 + 16);
      v32 = v27;
      do
      {
        v20 = *(v30 - 1);
        v33 = *v30;
        *(v31 - 1) = v20;
        *v31 = v33;
        v30 += 2;
        v31 += 2;
        v32 -= 16;
      }
      while (v32);
      if (v26 == v27)
        return v20;
    }
    v34 = (__int16 *)(a4 + 2 * v24);
    do
    {
      v35 = *v29++;
      LOWORD(v20) = v35;
      *v28++ = v35;
    }
    while (v29 != v34);
  }
  return v20;
}

double sub_239791E84(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  double result;
  uint64_t v15;
  int v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  _OWORD v22[2];

  v4 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v16 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 24);
    v10 = *(unsigned int *)(a3 + 24);
    v17 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v15 = 0;
    v18 = v3 - 1;
    v19 = v9 | (v10 << 32);
    v21 = *(unsigned int *)(a2 + 28) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v11 = *(_QWORD *)a2;
    v12 = *(_QWORD *)a3;
    memset(v22, 0, sizeof(v22));
    v20 = v5 - 1;
    if (v5 != 1)
    {
      v13 = 0;
      do
      {
        sub_239791F70(&v15, v22, a1, v11, v12);
        v11 += 2 * v21;
        v12 += 2 * HIDWORD(v21);
        ++v13;
      }
      while (v13 < v20);
    }
    *(_QWORD *)&result = sub_239791F70(&v15, v22, a1, v11, v12);
  }
  return result;
}

__int16 sub_239791F70@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>)
{
  unsigned int v5;
  unsigned int i;
  uint64_t v7;
  unint64_t v8;
  _WORD *v9;
  __int16 *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 *v13;
  _OWORD *v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  __int16 *v18;
  __int16 v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _WORD *v24;
  __int16 *v25;
  __int128 *v26;
  _OWORD *v27;
  unint64_t v28;
  __int128 v29;
  __int16 *v30;
  __int16 v31;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  if (v5)
  {
    for (i = 0; i < v5; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = *a3;
      if (!a4 && v7)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      if (v7)
      {
        v8 = (v7 - 1) & 0x7FFFFFFFFFFFFFFFLL;
        v9 = (_WORD *)a5;
        v10 = (__int16 *)a4;
        if (v8 < 0xF)
          goto LABEL_13;
        v9 = (_WORD *)a5;
        v10 = (__int16 *)a4;
        if ((unint64_t)(a5 - a4) < 0x20)
          goto LABEL_13;
        v11 = v8 + 1;
        v12 = 2 * (v11 & 0xFFFFFFFFFFFFFFF0);
        v9 = (_WORD *)(a5 + v12);
        v10 = (__int16 *)(a4 + v12);
        v13 = (__int128 *)(a4 + 16);
        v14 = (_OWORD *)(a5 + 16);
        v15 = v11 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v16 = *(v13 - 1);
          v17 = *v13;
          *(v14 - 1) = v16;
          *v14 = v17;
          v13 += 2;
          v14 += 2;
          v15 -= 16;
        }
        while (v15);
        if (v11 != (v11 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_13:
          v18 = (__int16 *)(a4 + 2 * v7);
          do
          {
            v19 = *v10++;
            LOWORD(v16) = v19;
            *v9++ = v19;
          }
          while (v10 != v18);
        }
        v5 = a1[5];
      }
      a4 += 2 * a1[6];
      a5 += 2 * a1[7];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v20 = *a3;
  if (!a4 && v20)
    sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
  if (v20)
  {
    v21 = (v20 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v21 < 0xF || (unint64_t)(a5 - a4) < 0x20)
    {
      v24 = (_WORD *)a5;
      v25 = (__int16 *)a4;
    }
    else
    {
      v22 = v21 + 1;
      v23 = (v21 + 1) & 0xFFFFFFFFFFFFFFF0;
      v24 = (_WORD *)(a5 + 2 * v23);
      v25 = (__int16 *)(a4 + 2 * v23);
      v26 = (__int128 *)(a4 + 16);
      v27 = (_OWORD *)(a5 + 16);
      v28 = v23;
      do
      {
        v16 = *(v26 - 1);
        v29 = *v26;
        *(v27 - 1) = v16;
        *v27 = v29;
        v26 += 2;
        v27 += 2;
        v28 -= 16;
      }
      while (v28);
      if (v22 == v23)
        return v16;
    }
    v30 = (__int16 *)(a4 + 2 * v20);
    do
    {
      v31 = *v25++;
      LOWORD(v16) = v31;
      *v24++ = v31;
    }
    while (v25 != v30);
  }
  return v16;
}

unsigned __int16 sub_2397920EC@<H0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  BOOL v9;
  int v11;
  __int16 *v12;
  uint64_t v14;
  __int16 **v15;
  _DWORD v16[7];
  _QWORD v17[2];

  v4 = *a1;
  v5 = *(_DWORD *)(v4 + 20);
  if (v5 == 1)
  {
    if (*(_DWORD *)(v4 + 24) == *(_DWORD *)(v4 + 8))
      a3.n128_u16[0] = sub_2397915C0(a1, a2, a3);
    else
      a3.n128_u16[0] = sub_2397921A8(v4, a1[1], a3);
  }
  else
  {
    v14 = a1[1];
    v7 = *(_DWORD *)(v4 + 8);
    v6 = *(_DWORD *)(v4 + 12);
    v8 = *(_DWORD *)(v4 + 16);
    if (v7)
      v9 = v6 == 0;
    else
      v9 = 1;
    if (!v9 && v8 != 0)
    {
      v15 = (__int16 **)&v14;
      v16[0] = 0;
      v16[1] = v7 - 1;
      v16[2] = v5;
      v16[3] = v6 - 1;
      v11 = *(_DWORD *)(v4 + 28);
      v16[4] = *(_DWORD *)(v4 + 24);
      v16[5] = v8 - 1;
      v16[6] = v11;
      v12 = *(__int16 **)v4;
      v17[0] = 0;
      v17[1] = 0;
      a3.n128_u16[0] = sub_239792264(v16, (uint64_t)v17, &v15, v12);
    }
  }
  return a3.n128_u16[0];
}

unsigned __int16 sub_2397921A8@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v3;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  unsigned int v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v13;
  char v14;
  _QWORD v15[3];
  _DWORD v16[5];
  unsigned int v17;
  unsigned int v18;
  unint64_t v19[2];

  v3 = *(unsigned int *)(a1 + 8);
  v4 = *(_DWORD *)(a1 + 12);
  v13 = v3;
  v15[0] = &v14;
  v15[1] = &v13;
  v15[2] = a2;
  v5 = *(_DWORD *)(a1 + 16);
  if ((_DWORD)v3)
    v6 = v4 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v16[0] = 0;
    v16[1] = v3 - 1;
    v8 = *(_DWORD *)(a1 + 24);
    v16[2] = *(_DWORD *)(a1 + 20);
    v16[3] = v4 - 1;
    v9 = *(_DWORD *)(a1 + 28);
    v10 = *(_QWORD *)a1;
    v19[0] = 0;
    v19[1] = 0;
    v16[4] = v8;
    v17 = v5 - 1;
    v18 = v9;
    if (v5 != 1)
    {
      v11 = 0;
      do
      {
        a3.n128_u64[0] = sub_239791874((uint64_t)v16, v19, (uint64_t)v15, v10, a3);
        v10 += 2 * v18;
        ++v11;
      }
      while (v11 < v17);
    }
    a3.n128_u16[0] = sub_239791874((uint64_t)v16, v19, (uint64_t)v15, v10, a3);
  }
  return a3.n128_u16[0];
}

__int16 sub_239792264@<H0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, __int16 ***a3@<X2>, __int16 *a4@<X3>)
{
  unsigned int v4;
  __int16 *v5;
  unsigned int v6;
  unsigned int v7;
  __int16 *v8;
  __int16 result;

  if (a1[5])
  {
    v4 = 0;
    do
    {
      *(_QWORD *)a2 = a4;
      v5 = a4;
      if (a1[3])
      {
        v6 = 0;
        v5 = a4;
        do
        {
          *(_QWORD *)a2 = v5;
          *v5 = ***a3;
          *(_WORD *)(*(_QWORD *)a2 + 2) = ***a3;
          *(_WORD *)(*(_QWORD *)a2 + 4) = ***a3;
          *(_WORD *)(*(_QWORD *)a2 + 6) = ***a3;
          v5 += a1[4];
          ++v6;
        }
        while (v6 < a1[3]);
      }
      *(_QWORD *)a2 = v5;
      *v5 = ***a3;
      *(_WORD *)(*(_QWORD *)a2 + 2) = ***a3;
      *(_WORD *)(*(_QWORD *)a2 + 4) = ***a3;
      *(_WORD *)(*(_QWORD *)a2 + 6) = ***a3;
      a4 += a1[6];
      ++v4;
    }
    while (v4 < a1[5]);
  }
  *(_QWORD *)a2 = a4;
  if (a1[3])
  {
    v7 = 0;
    do
    {
      *(_QWORD *)a2 = a4;
      *a4 = ***a3;
      *(_WORD *)(*(_QWORD *)a2 + 2) = ***a3;
      *(_WORD *)(*(_QWORD *)a2 + 4) = ***a3;
      *(_WORD *)(*(_QWORD *)a2 + 6) = ***a3;
      a4 += a1[4];
      ++v7;
    }
    while (v7 < a1[3]);
  }
  *(_QWORD *)a2 = a4;
  *a4 = ***a3;
  *(_WORD *)(*(_QWORD *)a2 + 2) = ***a3;
  *(_WORD *)(*(_QWORD *)a2 + 4) = ***a3;
  v8 = **a3;
  result = *v8;
  *(_WORD *)(*(_QWORD *)a2 + 6) = *v8;
  return result;
}

double sub_239792420(_QWORD *a1)
{
  _DWORD *v1;
  uint64_t v2;
  BOOL v4;
  double result;
  int v7;
  unsigned int v8;
  BOOL v9;
  char v11;
  char *v12;

  v1 = (_DWORD *)*a1;
  v2 = a1[1];
  if (*(_DWORD *)(*a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v7 = v1[6];
    if (v7 == *(_DWORD *)(v2 + 24))
    {
      v8 = v1[2];
      if (v7 == v8)
        return sub_239791B78(a1, (uint64_t)v1);
    }
    else
    {
      v8 = v1[2];
    }
    v12 = (char *)v8;
    if (v8)
      v9 = v1[3] == 0;
    else
      v9 = 1;
    if (!v9 && v1[4] != 0)
      return sub_239791E84((uint64_t *)&v12, (uint64_t)v1, v2);
  }
  else
  {
    if (v1[2])
      v4 = v1[3] == 0;
    else
      v4 = 1;
    if (!v4 && v1[4] != 0)
    {
      v12 = &v11;
      *(_QWORD *)&result = sub_2397924D4((uint64_t)&v12, (uint64_t)v1, v2);
    }
  }
  return result;
}

__int16 sub_2397924D4@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  _WORD *v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  __int16 result;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(_WORD **)a2;
    v9 = *(_WORD **)a3;
    v10 = 2 * *(unsigned int *)(a2 + 24);
    v11 = 2 * *(unsigned int *)(a3 + 24);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (v7)
      {
        v15 = 0;
        v16 = v9 + 2;
        v17 = v8 + 2;
        do
        {
          v18 = v17;
          v19 = v16;
          v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *v19 = *v18;
            v19[1] = v18[1];
            v19 = (_WORD *)((char *)v19 + v11);
            v18 = (_WORD *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19[1] = v18[1];
          v8 += v14;
          v9 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        v21 = 2 * v13;
        v22 = 2 * v14;
        do
        {
          *v9 = *v8;
          v9[1] = v8[1];
          v9[2] = v8[2];
          v9[3] = v8[3];
          v9 = (_WORD *)((char *)v9 + v21);
          v8 = (_WORD *)((char *)v8 + v22);
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *v9 = *v8;
      v9[1] = v8[1];
      v9[2] = v8[2];
      v9[3] = v8[3];
      v8 = (_WORD *)((char *)v8 + v10);
      v9 = (_WORD *)((char *)v9 + v11);
    }
    *v9 = *v8;
    v9[1] = v8[1];
    v9[2] = v8[2];
    result = v8[3];
    v9[3] = result;
  }
  return result;
}

float sub_23979263C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  float result;
  int v5;
  int v6;
  BOOL v7;
  _DWORD *v9;
  int v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  uint64_t v14;
  int v15;
  _DWORD *v16;
  _DWORD *v17;
  int v18;

  v3 = *a1;
  if (*(_DWORD *)(v3 + 20) == 1)
  {
    if (*(_DWORD *)(v3 + 24) == *(_DWORD *)(v3 + 8))
      sub_23979275C((unsigned int *)a1, a2);
    else
      sub_239792AB0(v3, a1[1]);
    return result;
  }
  v5 = *(_DWORD *)(v3 + 12);
  v6 = *(_DWORD *)(v3 + 16);
  if (*(_DWORD *)(v3 + 8))
    v7 = v5 == 0;
  else
    v7 = 1;
  if (!v7 && v6 != 0)
  {
    v9 = (_DWORD *)a1[1];
    v10 = v5 - 1;
    v11 = *(unsigned int *)(v3 + 24);
    v12 = *(_DWORD **)v3;
    v13 = v6 - 1;
    if (v13)
    {
      v14 = *(unsigned int *)(v3 + 28);
      if (!v10)
      {
        do
        {
          *v12 = *v9;
          v12[1] = *v9;
          v12 += v14;
          --v13;
        }
        while (v13);
LABEL_22:
        *v12 = *v9;
        result = *(float *)v9;
        v12[1] = *v9;
        return result;
      }
      v15 = 0;
      v16 = v12 + 1;
      do
      {
        v17 = v16;
        v18 = v10;
        do
        {
          *(v17 - 1) = *v9;
          *v17 = *v9;
          v17 += v11;
          --v18;
        }
        while (v18);
        *(v17 - 1) = *v9;
        *v17 = *v9;
        v12 += v14;
        ++v15;
        v16 += v14;
      }
      while (v15 != v13);
    }
    for (; v10; --v10)
    {
      *v12 = *v9;
      v12[1] = *v9;
      v12 += v11;
    }
    goto LABEL_22;
  }
  return result;
}

unsigned int *sub_23979275C(unsigned int *result, uint64_t a2)
{
  const float *v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  BOOL v10;
  _DWORD *v11;
  uint64_t v12;
  float32x4_t v13;
  float32x4_t *v14;
  uint64_t v15;
  int v16;
  int v17;
  BOOL v18;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[3];
  unsigned int v25[7];
  _QWORD v26[3];

  v3 = *(_QWORD *)result;
  v2 = (const float *)*((_QWORD *)result + 1);
  v4 = *(_DWORD *)(*(_QWORD *)result + 12);
  v6 = *(_DWORD *)(*(_QWORD *)result + 24);
  v5 = *(_DWORD *)(*(_QWORD *)result + 28);
  if (v5 == v6 * v4)
  {
    v7 = (v4 * *(_DWORD *)(v3 + 8) * *(_DWORD *)(v3 + 16));
    v8 = *(_QWORD *)v3;
    if ((_DWORD)v7)
      v9 = v8 == 0;
    else
      v9 = 0;
    if (v9)
      sub_239EBF50C((uint64_t)result, a2);
    if ((_DWORD)v7)
    {
      if (v7 < 8
        || (v8 < (unint64_t)(v2 + 1) ? (v10 = v8 + 4 * v7 > (unint64_t)v2) : (v10 = 0), v10))
      {
        v11 = *(_DWORD **)v3;
        v12 = v7;
      }
      else
      {
        v11 = (_DWORD *)(v8 + 4 * (v7 & 0xFFFFFFF8));
        v12 = v7 & 7;
        v13 = vld1q_dup_f32(v2);
        v14 = (float32x4_t *)(v8 + 16);
        v15 = v7 & 0xFFFFFFF8;
        do
        {
          v14[-1] = v13;
          *v14 = v13;
          v14 += 2;
          v15 -= 8;
        }
        while (v15);
        if ((v7 & 0xFFFFFFF8) == v7)
          return result;
      }
      v21 = v12 + 1;
      do
      {
        *v11++ = *(_DWORD *)v2;
        --v21;
      }
      while (v21 > 1);
    }
  }
  else
  {
    v16 = *(_DWORD *)(v3 + 8);
    v22 = (v4 * v16);
    v24[0] = &v23;
    v24[1] = &v22;
    v24[2] = v2;
    v17 = *(_DWORD *)(v3 + 16);
    if (v16)
      v18 = v4 == 0;
    else
      v18 = 1;
    if (!v18 && v17 != 0)
    {
      v25[0] = 0;
      v25[1] = v16 - 1;
      v25[2] = *(_DWORD *)(v3 + 20);
      v25[3] = v4 - 1;
      v25[4] = v6;
      v25[5] = v17 - 1;
      v25[6] = v5;
      v20 = *(_QWORD *)v3;
      memset(v26, 0, sizeof(v26));
      return sub_23979289C(v25, (uint64_t)v26, (uint64_t)v24, v20);
    }
  }
  return result;
}

unsigned int *sub_23979289C(unsigned int *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  const float *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  _DWORD *v16;
  int v17;
  _DWORD *v18;
  uint64_t v19;
  float32x4_t v20;
  float32x4_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  unint64_t v28;
  float32x4_t v29;
  float32x4_t *v30;
  unint64_t v31;

  v4 = result[4];
  v5 = result[2] | (unint64_t)(v4 << 32);
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_DWORD *)(a2 + 16) = v4;
  v6 = result[5];
  v7 = *(const float **)(a3 + 16);
  v8 = **(_QWORD **)(a3 + 8);
  if (v6)
  {
    if (v8 >= 1)
    {
      v9 = v8 & 0x3FFFFFFFFFFFFFFFLL;
      v10 = 4 * v8;
      if ((v8 & 0x3FFFFFFFFFFFFFFFLL) != 0)
      {
        v11 = 1;
      }
      else
      {
        v10 = 4;
        v11 = 0;
      }
      v12 = v9 - v11 + 1;
      if (v12 >= 8)
      {
        v17 = 0;
        while (a4)
        {
          if (a4 < (unint64_t)(v7 + 1))
          {
            v18 = (_DWORD *)a4;
            v19 = v8 & 0x3FFFFFFFFFFFFFFFLL;
            if ((unint64_t)v7 < a4 + v10)
              goto LABEL_25;
          }
          v18 = (_DWORD *)(a4 + 4 * (v12 & 0xFFFFFFFFFFFFFFF8));
          v20 = vld1q_dup_f32(v7);
          v21 = (float32x4_t *)(a4 + 16);
          v22 = v12 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v21[-1] = v20;
            *v21 = v20;
            v21 += 2;
            v22 -= 8;
          }
          while (v22);
          v19 = v9 - (v12 & 0xFFFFFFFFFFFFFFF8);
          if (v12 != (v12 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_25:
            v23 = v19 + 1;
            do
            {
              *v18++ = *(_DWORD *)v7;
              --v23;
            }
            while (v23 > 1);
          }
          a4 += 4 * result[6];
          if (++v17 == v6)
            goto LABEL_29;
        }
      }
      else
      {
        v13 = 0;
        v14 = v9 + 1;
        while (a4)
        {
          v15 = v14;
          v16 = (_DWORD *)a4;
          do
          {
            *v16++ = *(_DWORD *)v7;
            --v15;
          }
          while (v15 > 1);
          a4 += 4 * result[6];
          if (++v13 == v6)
            goto LABEL_29;
        }
      }
      goto LABEL_45;
    }
    if (v8)
    {
      while (a4)
      {
        a4 += 4 * result[6];
        if (!--v6)
          goto LABEL_29;
      }
LABEL_45:
      sub_239EBF5BC((_QWORD *)a2, a2);
    }
    a4 += (4 * (v6 - 1) + 4) * result[6];
  }
LABEL_29:
  *(_QWORD *)a2 = a4;
  if (!a4 && v8)
    sub_239EBF50C((uint64_t)result, a2);
  if (v8 >= 1)
  {
    v24 = v8 & 0x3FFFFFFFFFFFFFFFLL;
    v25 = v24 - (v24 != 0) + 1;
    if (v25 < 0x10)
      goto LABEL_37;
    v26 = 4 * v24;
    if (!v24)
      v26 = 4;
    if (a4 < (unint64_t)(v7 + 1) && (unint64_t)v7 < a4 + v26)
    {
LABEL_37:
      v27 = (_DWORD *)a4;
LABEL_38:
      v28 = v24 + 1;
      do
      {
        *v27++ = *(_DWORD *)v7;
        --v28;
      }
      while (v28 > 1);
      return result;
    }
    v27 = (_DWORD *)(a4 + 4 * (v25 & 0xFFFFFFFFFFFFFFF8));
    v24 -= v25 & 0xFFFFFFFFFFFFFFF8;
    v29 = vld1q_dup_f32(v7);
    v30 = (float32x4_t *)(a4 + 16);
    v31 = v25 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v30[-1] = v29;
      *v30 = v29;
      v30 += 2;
      v31 -= 8;
    }
    while (v31);
    if (v25 != (v25 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_38;
  }
  return result;
}

uint64_t sub_239792AB0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  BOOL v5;
  int v7;
  unsigned int v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  _QWORD v13[3];
  _DWORD v14[5];
  unsigned int v15;
  unsigned int v16;
  unint64_t v17[2];

  v2 = *(unsigned int *)(result + 8);
  v3 = *(_DWORD *)(result + 12);
  v11 = v2;
  v13[0] = &v12;
  v13[1] = &v11;
  v13[2] = a2;
  v4 = *(_DWORD *)(result + 16);
  if ((_DWORD)v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v14[0] = 0;
    v14[1] = v2 - 1;
    v7 = *(_DWORD *)(result + 24);
    v14[2] = *(_DWORD *)(result + 20);
    v14[3] = v3 - 1;
    v8 = *(_DWORD *)(result + 28);
    v9 = *(_QWORD *)result;
    v17[0] = 0;
    v17[1] = 0;
    v14[4] = v7;
    v15 = v4 - 1;
    v16 = v8;
    if (v4 != 1)
    {
      v10 = 0;
      do
      {
        sub_239792B6C((uint64_t)v14, v17, (uint64_t)v13, v9);
        v9 += 4 * v16;
        ++v10;
      }
      while (v10 < v15);
    }
    return sub_239792B6C((uint64_t)v14, v17, (uint64_t)v13, v9);
  }
  return result;
}

uint64_t sub_239792B6C(uint64_t result, unint64_t *a2, uint64_t a3, unint64_t a4)
{
  int v4;
  const float *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  _DWORD *v14;
  int v15;
  _DWORD *v16;
  uint64_t v17;
  float32x4_t v18;
  float32x4_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  unint64_t v26;
  float32x4_t v27;
  float32x4_t *v28;
  unint64_t v29;

  *a2 = a4;
  v4 = *(_DWORD *)(result + 12);
  v5 = *(const float **)(a3 + 16);
  v6 = **(_QWORD **)(a3 + 8);
  if (v4)
  {
    if (v6 >= 1)
    {
      v7 = v6 & 0x3FFFFFFFFFFFFFFFLL;
      v8 = 4 * v6;
      if ((v6 & 0x3FFFFFFFFFFFFFFFLL) != 0)
      {
        v9 = 1;
      }
      else
      {
        v8 = 4;
        v9 = 0;
      }
      v10 = v7 - v9 + 1;
      if (v10 >= 8)
      {
        v15 = 0;
        while (a4)
        {
          if (a4 < (unint64_t)(v5 + 1))
          {
            v16 = (_DWORD *)a4;
            v17 = v6 & 0x3FFFFFFFFFFFFFFFLL;
            if ((unint64_t)v5 < a4 + v8)
              goto LABEL_25;
          }
          v16 = (_DWORD *)(a4 + 4 * (v10 & 0xFFFFFFFFFFFFFFF8));
          v18 = vld1q_dup_f32(v5);
          v19 = (float32x4_t *)(a4 + 16);
          v20 = v10 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v19[-1] = v18;
            *v19 = v18;
            v19 += 2;
            v20 -= 8;
          }
          while (v20);
          v17 = v7 - (v10 & 0xFFFFFFFFFFFFFFF8);
          if (v10 != (v10 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_25:
            v21 = v17 + 1;
            do
            {
              *v16++ = *(_DWORD *)v5;
              --v21;
            }
            while (v21 > 1);
          }
          a4 += 4 * *(unsigned int *)(result + 16);
          if (++v15 == v4)
            goto LABEL_29;
        }
      }
      else
      {
        v11 = 0;
        v12 = v7 + 1;
        while (a4)
        {
          v13 = v12;
          v14 = (_DWORD *)a4;
          do
          {
            *v14++ = *(_DWORD *)v5;
            --v13;
          }
          while (v13 > 1);
          a4 += 4 * *(unsigned int *)(result + 16);
          if (++v11 == v4)
            goto LABEL_29;
        }
      }
      goto LABEL_45;
    }
    if (v6)
    {
      while (a4)
      {
        a4 += 4 * *(unsigned int *)(result + 16);
        if (!--v4)
          goto LABEL_29;
      }
LABEL_45:
      sub_239EBF5BC(a2, (uint64_t)a2);
    }
    a4 += (4 * (v4 - 1) + 4) * *(unsigned int *)(result + 16);
  }
LABEL_29:
  *a2 = a4;
  if (!a4 && v6)
    sub_239EBF50C(result, (uint64_t)a2);
  if (v6 >= 1)
  {
    v22 = v6 & 0x3FFFFFFFFFFFFFFFLL;
    v23 = v22 - (v22 != 0) + 1;
    if (v23 < 0x10)
      goto LABEL_37;
    v24 = 4 * v22;
    if (!v22)
      v24 = 4;
    if (a4 < (unint64_t)(v5 + 1) && (unint64_t)v5 < a4 + v24)
    {
LABEL_37:
      v25 = (_DWORD *)a4;
LABEL_38:
      v26 = v22 + 1;
      do
      {
        *v25++ = *(_DWORD *)v5;
        --v26;
      }
      while (v26 > 1);
      return result;
    }
    v25 = (_DWORD *)(a4 + 4 * (v23 & 0xFFFFFFFFFFFFFFF8));
    v22 -= v23 & 0xFFFFFFFFFFFFFFF8;
    v27 = vld1q_dup_f32(v5);
    v28 = (float32x4_t *)(a4 + 16);
    v29 = v23 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v28[-1] = v27;
      *v28 = v27;
      v28 += 2;
      v29 -= 8;
    }
    while (v29);
    if (v23 != (v23 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_38;
  }
  return result;
}

float sub_239792D70(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  float *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  float result;
  BOOL v25;
  uint64_t v27;

  v1 = *a1;
  v2 = a1[1];
  if (*(_DWORD *)(*a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v22 = *(_DWORD *)(v1 + 24);
    if (v22 == *(_DWORD *)(v2 + 24))
    {
      v23 = *(_DWORD *)(v1 + 8);
      if (v22 == v23)
      {
        sub_239792F18((unsigned int *)a1);
        return result;
      }
    }
    else
    {
      v23 = *(_DWORD *)(v1 + 8);
    }
    v27 = v23;
    if (v23)
      v25 = *(_DWORD *)(v1 + 12) == 0;
    else
      v25 = 1;
    if (!v25 && *(_DWORD *)(v1 + 16) != 0)
      sub_239793108(&v27, v1, v2);
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 12);
    v5 = *(_DWORD *)(v1 + 16);
    if (*(_DWORD *)(v1 + 8))
      v6 = v4 == 0;
    else
      v6 = 1;
    if (!v6 && v5 != 0)
    {
      v8 = v4 - 1;
      v9 = *(unsigned int *)(v1 + 24);
      v10 = *(unsigned int *)(v2 + 24);
      v11 = *(float **)v1;
      v12 = *(float **)v2;
      v13 = v5 - 1;
      if (v13)
      {
        v14 = *(unsigned int *)(v2 + 28);
        v15 = *(unsigned int *)(v1 + 28);
        if (!v8)
        {
          do
          {
            *v12 = *v11;
            v12[1] = v11[1];
            v11 += v15;
            v12 += v14;
            --v13;
          }
          while (v13);
LABEL_35:
          *v12 = *v11;
          result = v11[1];
          v12[1] = result;
          return result;
        }
        v16 = 0;
        v17 = v11 + 1;
        v18 = v12 + 1;
        do
        {
          v19 = v18;
          v20 = v17;
          v21 = v8;
          do
          {
            *(v19 - 1) = *(v20 - 1);
            *v19 = *v20;
            v20 += v9;
            v19 += v10;
            --v21;
          }
          while (v21);
          *(v19 - 1) = *(v20 - 1);
          *v19 = *v20;
          v11 += v15;
          v12 += v14;
          ++v16;
          v17 += v15;
          v18 += v14;
        }
        while (v16 != v13);
      }
      for (; v8; --v8)
      {
        *v12 = *v11;
        v12[1] = v11[1];
        v11 += v9;
        v12 += v10;
      }
      goto LABEL_35;
    }
  }
  return result;
}

unsigned int *sub_239792F18(unsigned int *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _OWORD v25[3];

  v2 = *(_QWORD *)result;
  v1 = *((_QWORD *)result + 1);
  v3 = *(unsigned int *)(*(_QWORD *)result + 28);
  v4 = *(unsigned int *)(v1 + 28);
  v5 = *(_DWORD *)(*(_QWORD *)result + 12);
  if ((_DWORD)v3 == (_DWORD)v4 && (_DWORD)v3 == *(_DWORD *)(v2 + 24) * v5)
  {
    v6 = (v5 * *(_DWORD *)(v2 + 8) * *(_DWORD *)(v2 + 16));
    v7 = *(char **)v2;
    if ((_DWORD)v6)
      v8 = v7 == 0;
    else
      v8 = 0;
    if (v8)
      sub_239EBF50C((uint64_t)result, (uint64_t)v7);
    if ((_DWORD)v6)
      return (unsigned int *)memmove(*(void **)v1, v7, 4 * v6);
  }
  else
  {
    v9 = *(_DWORD *)(v2 + 8);
    v17 = (v5 * v9);
    v10 = *(_DWORD *)(v2 + 16);
    if (v9)
      v11 = v5 == 0;
    else
      v11 = 1;
    if (!v11 && v10 != 0)
    {
      v19 = v9 - 1;
      v13 = *(unsigned int *)(v2 + 24);
      v14 = *(unsigned int *)(v1 + 24);
      v20 = *(unsigned int *)(v2 + 20) | ((unint64_t)*(unsigned int *)(v1 + 20) << 32);
      v18 = 0;
      v21 = v5 - 1;
      v22 = v13 | (v14 << 32);
      v23 = v10 - 1;
      v24 = v3 | (v4 << 32);
      v15 = *(char **)v2;
      v16 = *(char **)v1;
      memset(v25, 0, sizeof(v25));
      return sub_239793014((unsigned int *)&v18, (uint64_t)v25, &v17, v15, v16);
    }
  }
  return result;
}

unsigned int *sub_239793014(unsigned int *result, uint64_t a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int i;
  uint64_t v16;
  uint64_t v17;

  v5 = __dst;
  v6 = __src;
  v9 = result[6];
  v10 = result[7];
  v11 = result[3] | (unint64_t)(v9 << 32);
  v12 = result[4] | (unint64_t)(v10 << 32);
  *(_QWORD *)a2 = __src;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = __dst;
  *(_QWORD *)(a2 + 32) = v12;
  *(_DWORD *)(a2 + 40) = v10;
  v13 = result[8];
  if (v13)
  {
    v14 = result;
    for (i = 0; i < v13; ++i)
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 24) = v5;
      v16 = *a3;
      if (!v6 && v16)
        sub_239EBF50C((uint64_t)result, a2);
      if (v16)
      {
        result = (unsigned int *)memmove(v5, v6, 4 * v16);
        v13 = v14[8];
      }
      v6 += 4 * v14[9];
      v5 += 4 * v14[10];
    }
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 24) = v5;
  v17 = *a3;
  if (!v6 && v17)
    sub_239EBF50C((uint64_t)result, a2);
  if (v17)
    return (unsigned int *)memmove(v5, v6, 4 * v17);
  return result;
}

uint64_t *sub_239793108(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  _OWORD v21[2];

  v4 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v8 = result;
    v15 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 24);
    v10 = *(unsigned int *)(a3 + 24);
    v16 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v14 = 0;
    v17 = v3 - 1;
    v18 = v9 | (v10 << 32);
    v20 = *(unsigned int *)(a2 + 28) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v11 = *(char **)a2;
    v12 = *(char **)a3;
    memset(v21, 0, sizeof(v21));
    v19 = v5 - 1;
    if (v5 != 1)
    {
      v13 = 0;
      do
      {
        sub_2397931F4(&v14, (char **)v21, v8, v11, v12);
        v11 += 4 * v20;
        v12 += 4 * HIDWORD(v20);
        ++v13;
      }
      while (v13 < v19);
    }
    return (uint64_t *)sub_2397931F4(&v14, (char **)v21, v8, v11, v12);
  }
  return result;
}

_DWORD *sub_2397931F4(_DWORD *result, char **a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  unsigned int v9;
  _DWORD *v10;
  unsigned int i;
  uint64_t v12;
  uint64_t v13;

  v5 = __dst;
  v6 = __src;
  *a2 = __src;
  a2[2] = __dst;
  v9 = result[5];
  if (v9)
  {
    v10 = result;
    for (i = 0; i < v9; ++i)
    {
      *a2 = v6;
      a2[2] = v5;
      v12 = *a3;
      if (!v6 && v12)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      if (v12)
      {
        result = memmove(v5, v6, 4 * v12);
        v9 = v10[5];
      }
      v6 += 4 * v10[6];
      v5 += 4 * v10[7];
    }
  }
  *a2 = v6;
  a2[2] = v5;
  v13 = *a3;
  if (!v6 && v13)
    sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  if (v13)
    return memmove(v5, v6, 4 * v13);
  return result;
}

void sub_2397932D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  BOOL v8;
  int v10;
  uint64_t v11;
  uint64_t *v12;
  _DWORD *v13;
  _DWORD v14[7];

  v3 = *a1;
  v4 = *(_DWORD *)(v3 + 20);
  if (v4 == 1)
  {
    if (*(_DWORD *)(v3 + 24) == *(_DWORD *)(v3 + 8))
      sub_23979275C((unsigned int *)a1, a2);
    else
      sub_239792AB0(v3, a1[1]);
  }
  else
  {
    v11 = a1[1];
    v6 = *(_DWORD *)(v3 + 8);
    v5 = *(_DWORD *)(v3 + 12);
    v7 = *(_DWORD *)(v3 + 16);
    if (v6)
      v8 = v5 == 0;
    else
      v8 = 1;
    if (!v8 && v7 != 0)
    {
      v12 = &v11;
      v14[0] = 0;
      v14[1] = v6 - 1;
      v14[2] = v4;
      v14[3] = v5 - 1;
      v10 = *(_DWORD *)(v3 + 28);
      v14[4] = *(_DWORD *)(v3 + 24);
      v14[5] = v7 - 1;
      v14[6] = v10;
      v13 = *(_DWORD **)v3;
      sub_23979338C(v14, &v12, &v13);
    }
  }
}

float sub_23979338C(_DWORD *a1, _QWORD **a2, _DWORD **a3)
{
  _DWORD *v3;
  int v4;
  int v5;
  _DWORD *v6;
  uint64_t v7;
  int v8;
  _DWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  int v12;
  uint64_t v13;
  float result;

  v3 = *a3;
  v4 = a1[5];
  if (!v4)
  {
    v5 = a1[3];
    v6 = (_DWORD *)**a2;
    if (!v5)
      goto LABEL_13;
    goto LABEL_9;
  }
  v5 = a1[3];
  v6 = (_DWORD *)**a2;
  v7 = a1[6];
  if (v5)
  {
    v8 = 0;
    v9 = v3 + 2;
    v10 = 4 * a1[4];
    do
    {
      v11 = v9;
      v12 = v5;
      do
      {
        *(v11 - 2) = *v6;
        *(v11 - 1) = *v6;
        *v11 = *v6;
        v11[1] = *v6;
        v11 = (_DWORD *)((char *)v11 + v10);
        --v12;
      }
      while (v12);
      *(v11 - 2) = *v6;
      *(v11 - 1) = *v6;
      *v11 = *v6;
      v11[1] = *v6;
      v3 += v7;
      ++v8;
      v9 += v7;
    }
    while (v8 != v4);
LABEL_9:
    v13 = 4 * a1[4];
    do
    {
      *v3 = *v6;
      v3[1] = *v6;
      v3[2] = *v6;
      v3[3] = *v6;
      v3 = (_DWORD *)((char *)v3 + v13);
      --v5;
    }
    while (v5);
    goto LABEL_13;
  }
  do
  {
    *v3 = *v6;
    v3[1] = *v6;
    v3[2] = *v6;
    v3[3] = *v6;
    v3 += v7;
    --v4;
  }
  while (v4);
LABEL_13:
  *v3 = *v6;
  v3[1] = *v6;
  v3[2] = *v6;
  result = *(float *)v6;
  v3[3] = *v6;
  return result;
}

void sub_2397934CC(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  BOOL v4;
  int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  char *v11;

  v1 = *(_DWORD **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v6 = v1[6];
    if (v6 == *(_DWORD *)(v2 + 24))
    {
      v7 = v1[2];
      if (v6 == v7)
      {
        sub_239792F18((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = v1[2];
    }
    v11 = (char *)v7;
    if (v7)
      v8 = v1[3] == 0;
    else
      v8 = 1;
    if (!v8 && v1[4] != 0)
      sub_239793108((uint64_t *)&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (v1[2])
      v4 = v1[3] == 0;
    else
      v4 = 1;
    if (!v4 && v1[4] != 0)
    {
      v11 = &v10;
      sub_239793580((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

float sub_239793580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  float *v10;
  float *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  int v20;
  float result;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 24);
    v9 = *(unsigned int *)(a3 + 24);
    v10 = *(float **)a2;
    v11 = *(float **)a3;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (!v7)
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        *v11 = *v10;
        v11[1] = v10[1];
        v11[2] = v10[2];
        result = v10[3];
        v11[3] = result;
        return result;
      }
      v15 = 0;
      v16 = v11 + 2;
      v17 = v10 + 2;
      do
      {
        v18 = v17;
        v19 = v16;
        v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19[1] = v18[1];
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *v19 = *v18;
        v19[1] = v18[1];
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
  return result;
}

void sub_2397936F4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239793718(uint64_t a1, int a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a3;
  v3[1] = v3;
  sub_239793778(a2);
}

void sub_239793744(uint64_t a1, int a2, uint64_t a3)
{
  char v3;
  _QWORD v4[3];

  v4[0] = a3;
  v4[1] = v4;
  v4[2] = &v3;
  sub_23979546C(a2);
}

void sub_239793778(int a1)
{
  __asm { BR              X10 }
}

void sub_2397937A8(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239793A0C(*a2, (uint64_t)&v3);
  *v2 = v3;
}

void sub_2397937CC(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239793B80(*a2, (uint64_t)&v3);
  *v2 = v3;
}

void sub_2397937F0(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239793CF4(*a2, (uint64_t)&v3);
  *v2 = v3;
}

void sub_239793814(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239793E68(*a2, (uint64_t)&v3);
  *v2 = v3;
}

void sub_239793838(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239793FDC(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_23979385C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2397941EC(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_239793880(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2397943FC(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_2397938A4(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23979460C(*a2, &v3);
  *v2 = v3;
}

void sub_2397938C8(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239794814(*a2, &v3);
  *v2 = v3;
}

void sub_2397938EC(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239794A1C(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_239793910(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239794C2C(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_239793934(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239794E3C(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_239793958(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23979504C(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_23979397C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23979525C(*a2, (unint64_t)&v3);
  *v2 = v3;
}

double sub_239793A0C@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  void (**v11)();
  int v12;
  _BYTE v13[24];
  unsigned int v14;
  __int128 v15;
  _QWORD v16[2];

  v2 = (_QWORD *)a2;
  LODWORD(a2) = *a1;
  v3 = a1[1];
  v4 = *a1 != 0;
  if (*a1 <= 0x20u)
    LODWORD(a2) = 32;
  v5 = *(_QWORD *)a1;
  v11 = (void (**)())off_250AE7568;
  if (v3)
    a2 = a2;
  else
    a2 = 32;
  v16[0] = v5;
  v16[1] = v4 | (a2 << 32);
  sub_239769A74((uint64_t)&v11, 0, 1, (unsigned int *)v16, 0);
  v11 = (void (**)())off_250AE7568;
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_250AE6E18;
  v8 = v14;
  *(_DWORD *)(v6 + 8) = v12;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    *(_OWORD *)(v6 + 48) = v15;
    *(_QWORD *)v6 = off_250AE7568;
    *v2 = v6;
    v11 = off_250AE6E18;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_250AE8068[v8])(v16, v6 + 16, v13);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v14;
    *(_OWORD *)(v7 + 48) = v15;
    *(_QWORD *)v7 = off_250AE7568;
    *v2 = v7;
    v11 = off_250AE6E18;
    if ((_DWORD)v9 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_250AE8048[v9])(v16, v13);
  }
  v14 = -1;
  *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
  return result;
}

void sub_239793B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239778CCC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239793B80@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  void (**v11)();
  int v12;
  _BYTE v13[24];
  unsigned int v14;
  __int128 v15;
  _QWORD v16[2];

  v2 = (_QWORD *)a2;
  LODWORD(a2) = *a1;
  v3 = a1[1];
  v4 = *a1 != 0;
  if (*a1 <= 0x10u)
    LODWORD(a2) = 16;
  v5 = *(_QWORD *)a1;
  v11 = (void (**)())off_250AE75F8;
  if (v3)
    a2 = a2;
  else
    a2 = 16;
  v16[0] = v5;
  v16[1] = v4 | (a2 << 32);
  sub_23976E4A8((uint64_t)&v11, 0, 2, (unsigned int *)v16, 0);
  v11 = (void (**)())off_250AE75F8;
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_250AE7058;
  v8 = v14;
  *(_DWORD *)(v6 + 8) = v12;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    *(_OWORD *)(v6 + 48) = v15;
    *(_QWORD *)v6 = off_250AE75F8;
    *v2 = v6;
    v11 = off_250AE7058;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_250AE8068[v8])(v16, v6 + 16, v13);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v14;
    *(_OWORD *)(v7 + 48) = v15;
    *(_QWORD *)v7 = off_250AE75F8;
    *v2 = v7;
    v11 = off_250AE7058;
    if ((_DWORD)v9 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_250AE8048[v9])(v16, v13);
  }
  v14 = -1;
  *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
  return result;
}

void sub_239793CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239779A1C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239793CF4@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  void (**v11)();
  int v12;
  _BYTE v13[24];
  unsigned int v14;
  __int128 v15;
  _QWORD v16[2];

  v2 = (_QWORD *)a2;
  LODWORD(a2) = *a1;
  v3 = a1[1];
  v4 = *a1 != 0;
  if (*a1 <= 0x10u)
    LODWORD(a2) = 16;
  v5 = *(_QWORD *)a1;
  v11 = (void (**)())off_250AE7688;
  if (v3)
    a2 = a2;
  else
    a2 = 16;
  v16[0] = v5;
  v16[1] = v4 | (a2 << 32);
  sub_239771D80((uint64_t)&v11, 0, 3, (unsigned int *)v16, 0);
  v11 = (void (**)())off_250AE7688;
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_250AE7208;
  v8 = v14;
  *(_DWORD *)(v6 + 8) = v12;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    *(_OWORD *)(v6 + 48) = v15;
    *(_QWORD *)v6 = off_250AE7688;
    *v2 = v6;
    v11 = off_250AE7208;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_250AE8068[v8])(v16, v6 + 16, v13);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v14;
    *(_OWORD *)(v7 + 48) = v15;
    *(_QWORD *)v7 = off_250AE7688;
    *v2 = v7;
    v11 = off_250AE7208;
    if ((_DWORD)v9 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_250AE8048[v9])(v16, v13);
  }
  v14 = -1;
  *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
  return result;
}

void sub_239793E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23977A78C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239793E68@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  void (**v11)();
  int v12;
  _BYTE v13[24];
  unsigned int v14;
  __int128 v15;
  _QWORD v16[2];

  v2 = (_QWORD *)a2;
  LODWORD(a2) = *a1;
  v3 = a1[1];
  v4 = *a1 != 0;
  if (*a1 <= 8u)
    LODWORD(a2) = 8;
  v5 = *(_QWORD *)a1;
  v11 = (void (**)())off_250AE7718;
  if (v3)
    a2 = a2;
  else
    a2 = 8;
  v16[0] = v5;
  v16[1] = v4 | (a2 << 32);
  sub_2397758F0((uint64_t)&v11, 0, 4, (unsigned int *)v16, 0.0);
  v11 = (void (**)())off_250AE7718;
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_250AE73B8;
  v8 = v14;
  *(_DWORD *)(v6 + 8) = v12;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    *(_OWORD *)(v6 + 48) = v15;
    *(_QWORD *)v6 = off_250AE7718;
    *v2 = v6;
    v11 = off_250AE73B8;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_250AE8068[v8])(v16, v6 + 16, v13);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v14;
    *(_OWORD *)(v7 + 48) = v15;
    *(_QWORD *)v7 = off_250AE7718;
    *v2 = v7;
    v11 = off_250AE73B8;
    if ((_DWORD)v9 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_250AE8048[v9])(v16, v13);
  }
  v14 = -1;
  *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
  return result;
}

void sub_239793FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23977B4F4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239793FDC@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  double result;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _DWORD v21[3];
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v2 = (_QWORD *)a2;
  v26[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  v4 = 2 * (*a1 != 0);
  LODWORD(a2) = v4 * *a1;
  if (a2 <= 0x20)
    LODWORD(a2) = 32;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  v14 = (void (**)())off_250AE77A8;
  if (v3)
    a2 = a2;
  else
    a2 = 32;
  v21[0] = 2;
  v21[1] = v5;
  v21[2] = v6;
  LODWORD(v26[0]) = 1;
  *(_QWORD *)((char *)v26 + 4) = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  v22 = v26[0];
  v23 = a2;
  v24 = v5;
  v25 = *(_QWORD *)((char *)v26 + 4);
  sub_23976AD84((uint64_t)&v14, 0, 5, (uint64_t)v21, 0);
  v14 = (void (**)())off_250AE77A8;
  v7 = operator new();
  v8 = v7;
  *(_QWORD *)v7 = off_250AE6EA8;
  v9 = v17;
  *(_DWORD *)(v7 + 8) = v15;
  *(_BYTE *)(v7 + 16) = 0;
  *(_DWORD *)(v7 + 40) = -1;
  if ((_DWORD)v9 == -1)
  {
    v12 = v19;
    *(_OWORD *)(v7 + 48) = v18;
    *(_OWORD *)(v7 + 64) = v12;
    *(_QWORD *)(v7 + 80) = v20;
    *(_QWORD *)v7 = off_250AE77A8;
    *v2 = v7;
    v14 = off_250AE6EA8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v9])(v21, v7 + 16, v16);
    *(_DWORD *)(v8 + 40) = v9;
    v10 = v17;
    v11 = v19;
    *(_OWORD *)(v8 + 48) = v18;
    *(_OWORD *)(v8 + 64) = v11;
    *(_QWORD *)(v8 + 80) = v20;
    *(_QWORD *)v8 = off_250AE77A8;
    *v2 = v8;
    v14 = off_250AE6EA8;
    if ((_DWORD)v10 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v10])(v21, v16);
  }
  v17 = -1;
  *(_QWORD *)&result = nullsub_4(&v14).n128_u64[0];
  return result;
}

void sub_2397941B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_2397941EC@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  double result;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _DWORD v21[3];
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v2 = (_QWORD *)a2;
  v26[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  v4 = 2 * (*a1 != 0);
  LODWORD(a2) = v4 * *a1;
  if (a2 <= 0x10)
    LODWORD(a2) = 16;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  v14 = (void (**)())off_250AE7838;
  if (v3)
    a2 = a2;
  else
    a2 = 16;
  v21[0] = 2;
  v21[1] = v5;
  v21[2] = v6;
  LODWORD(v26[0]) = 1;
  *(_QWORD *)((char *)v26 + 4) = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  v22 = v26[0];
  v23 = a2;
  v24 = v5;
  v25 = *(_QWORD *)((char *)v26 + 4);
  sub_23977327C((uint64_t)&v14, 0, 7, (uint64_t)v21, 0);
  v14 = (void (**)())off_250AE7838;
  v7 = operator new();
  v8 = v7;
  *(_QWORD *)v7 = off_250AE7298;
  v9 = v17;
  *(_DWORD *)(v7 + 8) = v15;
  *(_BYTE *)(v7 + 16) = 0;
  *(_DWORD *)(v7 + 40) = -1;
  if ((_DWORD)v9 == -1)
  {
    v12 = v19;
    *(_OWORD *)(v7 + 48) = v18;
    *(_OWORD *)(v7 + 64) = v12;
    *(_QWORD *)(v7 + 80) = v20;
    *(_QWORD *)v7 = off_250AE7838;
    *v2 = v7;
    v14 = off_250AE7298;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v9])(v21, v7 + 16, v16);
    *(_DWORD *)(v8 + 40) = v9;
    v10 = v17;
    v11 = v19;
    *(_OWORD *)(v8 + 48) = v18;
    *(_OWORD *)(v8 + 64) = v11;
    *(_QWORD *)(v8 + 80) = v20;
    *(_QWORD *)v8 = off_250AE7838;
    *v2 = v8;
    v14 = off_250AE7298;
    if ((_DWORD)v10 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v10])(v21, v16);
  }
  v17 = -1;
  *(_QWORD *)&result = nullsub_4(&v14).n128_u64[0];
  return result;
}

void sub_2397943C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_2397943FC@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  double result;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _DWORD v21[3];
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v2 = (_QWORD *)a2;
  v26[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  v4 = 2 * (*a1 != 0);
  LODWORD(a2) = v4 * *a1;
  if (a2 <= 8)
    LODWORD(a2) = 8;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  v14 = (void (**)())off_250AE78C8;
  if (v3)
    a2 = a2;
  else
    a2 = 8;
  v21[0] = 2;
  v21[1] = v5;
  v21[2] = v6;
  LODWORD(v26[0]) = 1;
  *(_QWORD *)((char *)v26 + 4) = v4 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  v22 = v26[0];
  v23 = a2;
  v24 = v5;
  v25 = *(_QWORD *)((char *)v26 + 4);
  sub_239776D1C((uint64_t)&v14, 0, 8, (uint64_t)v21, 0.0);
  v14 = (void (**)())off_250AE78C8;
  v7 = operator new();
  v8 = v7;
  *(_QWORD *)v7 = off_250AE7448;
  v9 = v17;
  *(_DWORD *)(v7 + 8) = v15;
  *(_BYTE *)(v7 + 16) = 0;
  *(_DWORD *)(v7 + 40) = -1;
  if ((_DWORD)v9 == -1)
  {
    v12 = v19;
    *(_OWORD *)(v7 + 48) = v18;
    *(_OWORD *)(v7 + 64) = v12;
    *(_QWORD *)(v7 + 80) = v20;
    *(_QWORD *)v7 = off_250AE78C8;
    *v2 = v7;
    v14 = off_250AE7448;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v9])(v21, v7 + 16, v16);
    *(_DWORD *)(v8 + 40) = v9;
    v10 = v17;
    v11 = v19;
    *(_OWORD *)(v8 + 48) = v18;
    *(_OWORD *)(v8 + 64) = v11;
    *(_QWORD *)(v8 + 80) = v20;
    *(_QWORD *)v8 = off_250AE78C8;
    *v2 = v8;
    v14 = off_250AE7448;
    if ((_DWORD)v10 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v10])(v21, v16);
  }
  v17 = -1;
  *(_QWORD *)&result = nullsub_4(&v14).n128_u64[0];
  return result;
}

void sub_2397945D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_23979460C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  double result;
  void (**v15)();
  int v16;
  _BYTE v17[24];
  unsigned int v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _DWORD v22[3];
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];

  v27[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  if (*a1)
    v4 = 3;
  else
    v4 = 0;
  LODWORD(v5) = v4 * *a1;
  if (v5 <= 0x20)
    LODWORD(v5) = 32;
  v6 = *(_QWORD *)a1;
  v7 = HIDWORD(*(_QWORD *)a1);
  v15 = (void (**)())off_250AE7958;
  if (v3)
    v5 = v5;
  else
    v5 = 32;
  v22[0] = 3;
  v22[1] = v6;
  v22[2] = v7;
  LODWORD(v27[0]) = 1;
  *(_QWORD *)((char *)v27 + 4) = v4 | (v5 << 32);
  v23 = v27[0];
  v24 = v5;
  v25 = v6;
  v26 = *(_QWORD *)((char *)v27 + 4);
  sub_23976C024((uint64_t)&v15, 0, 21, (uint64_t)v22, 0);
  v15 = (void (**)())off_250AE7958;
  v8 = operator new();
  v9 = v8;
  *(_QWORD *)v8 = off_250AE6F38;
  v10 = v18;
  *(_DWORD *)(v8 + 8) = v16;
  *(_BYTE *)(v8 + 16) = 0;
  *(_DWORD *)(v8 + 40) = -1;
  if ((_DWORD)v10 == -1)
  {
    v13 = v20;
    *(_OWORD *)(v8 + 48) = v19;
    *(_OWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 80) = v21;
    *(_QWORD *)v8 = off_250AE7958;
    *a2 = v8;
    v15 = off_250AE6F38;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v10])(v22, v8 + 16, v17);
    *(_DWORD *)(v9 + 40) = v10;
    v11 = v18;
    v12 = v20;
    *(_OWORD *)(v9 + 48) = v19;
    *(_OWORD *)(v9 + 64) = v12;
    *(_QWORD *)(v9 + 80) = v21;
    *(_QWORD *)v9 = off_250AE7958;
    *a2 = v9;
    v15 = off_250AE6F38;
    if ((_DWORD)v11 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v11])(v22, v17);
  }
  v18 = -1;
  *(_QWORD *)&result = nullsub_4(&v15).n128_u64[0];
  return result;
}

void sub_2397947E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239794814@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  double result;
  void (**v15)();
  int v16;
  _BYTE v17[24];
  unsigned int v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _DWORD v22[3];
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];

  v27[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  if (*a1)
    v4 = 3;
  else
    v4 = 0;
  LODWORD(v5) = v4 * *a1;
  if (v5 <= 0x10)
    LODWORD(v5) = 16;
  v6 = *(_QWORD *)a1;
  v7 = HIDWORD(*(_QWORD *)a1);
  v15 = (void (**)())off_250AE79E8;
  if (v3)
    v5 = v5;
  else
    v5 = 16;
  v22[0] = 3;
  v22[1] = v6;
  v22[2] = v7;
  LODWORD(v27[0]) = 1;
  *(_QWORD *)((char *)v27 + 4) = v4 | (v5 << 32);
  v23 = v27[0];
  v24 = v5;
  v25 = v6;
  v26 = *(_QWORD *)((char *)v27 + 4);
  sub_23976F8A4((uint64_t)&v15, 0, 22, (uint64_t)v22, 0);
  v15 = (void (**)())off_250AE79E8;
  v8 = operator new();
  v9 = v8;
  *(_QWORD *)v8 = off_250AE70E8;
  v10 = v18;
  *(_DWORD *)(v8 + 8) = v16;
  *(_BYTE *)(v8 + 16) = 0;
  *(_DWORD *)(v8 + 40) = -1;
  if ((_DWORD)v10 == -1)
  {
    v13 = v20;
    *(_OWORD *)(v8 + 48) = v19;
    *(_OWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 80) = v21;
    *(_QWORD *)v8 = off_250AE79E8;
    *a2 = v8;
    v15 = off_250AE70E8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v10])(v22, v8 + 16, v17);
    *(_DWORD *)(v9 + 40) = v10;
    v11 = v18;
    v12 = v20;
    *(_OWORD *)(v9 + 48) = v19;
    *(_OWORD *)(v9 + 64) = v12;
    *(_QWORD *)(v9 + 80) = v21;
    *(_QWORD *)v9 = off_250AE79E8;
    *a2 = v9;
    v15 = off_250AE70E8;
    if ((_DWORD)v11 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v11])(v22, v17);
  }
  v18 = -1;
  *(_QWORD *)&result = nullsub_4(&v15).n128_u64[0];
  return result;
}

void sub_2397949E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239794A1C@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  double result;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _DWORD v21[3];
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v2 = (_QWORD *)a2;
  v26[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  v4 = 4 * (*a1 != 0);
  LODWORD(a2) = v4 * *a1;
  if (a2 <= 0x20)
    LODWORD(a2) = 32;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  v14 = (void (**)())off_250AE7A78;
  if (v3)
    a2 = a2;
  else
    a2 = 32;
  v21[0] = 4;
  v21[1] = v5;
  v21[2] = v6;
  LODWORD(v26[0]) = 1;
  *(_QWORD *)((char *)v26 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  v22 = v26[0];
  v23 = a2;
  v24 = v5;
  v25 = *(_QWORD *)((char *)v26 + 4);
  sub_23976D170((uint64_t)&v14, 0, 25, (uint64_t)v21, 0);
  v14 = (void (**)())off_250AE7A78;
  v7 = operator new();
  v8 = v7;
  *(_QWORD *)v7 = off_250AE6FC8;
  v9 = v17;
  *(_DWORD *)(v7 + 8) = v15;
  *(_BYTE *)(v7 + 16) = 0;
  *(_DWORD *)(v7 + 40) = -1;
  if ((_DWORD)v9 == -1)
  {
    v12 = v19;
    *(_OWORD *)(v7 + 48) = v18;
    *(_OWORD *)(v7 + 64) = v12;
    *(_QWORD *)(v7 + 80) = v20;
    *(_QWORD *)v7 = off_250AE7A78;
    *v2 = v7;
    v14 = off_250AE6FC8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v9])(v21, v7 + 16, v16);
    *(_DWORD *)(v8 + 40) = v9;
    v10 = v17;
    v11 = v19;
    *(_OWORD *)(v8 + 48) = v18;
    *(_OWORD *)(v8 + 64) = v11;
    *(_QWORD *)(v8 + 80) = v20;
    *(_QWORD *)v8 = off_250AE7A78;
    *v2 = v8;
    v14 = off_250AE6FC8;
    if ((_DWORD)v10 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v10])(v21, v16);
  }
  v17 = -1;
  *(_QWORD *)&result = nullsub_4(&v14).n128_u64[0];
  return result;
}

void sub_239794BF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239794C2C@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  double result;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _DWORD v21[3];
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v2 = (_QWORD *)a2;
  v26[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  v4 = 4 * (*a1 != 0);
  LODWORD(a2) = v4 * *a1;
  if (a2 <= 0x10)
    LODWORD(a2) = 16;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  v14 = (void (**)())off_250AE7B08;
  if (v3)
    a2 = a2;
  else
    a2 = 16;
  v21[0] = 4;
  v21[1] = v5;
  v21[2] = v6;
  LODWORD(v26[0]) = 1;
  *(_QWORD *)((char *)v26 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  v22 = v26[0];
  v23 = a2;
  v24 = v5;
  v25 = *(_QWORD *)((char *)v26 + 4);
  sub_239774664((uint64_t)&v14, 0, 31, (uint64_t)v21, 0);
  v14 = (void (**)())off_250AE7B08;
  v7 = operator new();
  v8 = v7;
  *(_QWORD *)v7 = off_250AE7328;
  v9 = v17;
  *(_DWORD *)(v7 + 8) = v15;
  *(_BYTE *)(v7 + 16) = 0;
  *(_DWORD *)(v7 + 40) = -1;
  if ((_DWORD)v9 == -1)
  {
    v12 = v19;
    *(_OWORD *)(v7 + 48) = v18;
    *(_OWORD *)(v7 + 64) = v12;
    *(_QWORD *)(v7 + 80) = v20;
    *(_QWORD *)v7 = off_250AE7B08;
    *v2 = v7;
    v14 = off_250AE7328;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v9])(v21, v7 + 16, v16);
    *(_DWORD *)(v8 + 40) = v9;
    v10 = v17;
    v11 = v19;
    *(_OWORD *)(v8 + 48) = v18;
    *(_OWORD *)(v8 + 64) = v11;
    *(_QWORD *)(v8 + 80) = v20;
    *(_QWORD *)v8 = off_250AE7B08;
    *v2 = v8;
    v14 = off_250AE7328;
    if ((_DWORD)v10 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v10])(v21, v16);
  }
  v17 = -1;
  *(_QWORD *)&result = nullsub_4(&v14).n128_u64[0];
  return result;
}

void sub_239794E08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239794E3C@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  double result;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _DWORD v21[3];
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v2 = (_QWORD *)a2;
  v26[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  v4 = 4 * (*a1 != 0);
  LODWORD(a2) = v4 * *a1;
  if (a2 <= 8)
    LODWORD(a2) = 8;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  v14 = (void (**)())off_250AE7B98;
  if (v3)
    a2 = a2;
  else
    a2 = 8;
  v21[0] = 4;
  v21[1] = v5;
  v21[2] = v6;
  LODWORD(v26[0]) = 1;
  *(_QWORD *)((char *)v26 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  v22 = v26[0];
  v23 = a2;
  v24 = v5;
  v25 = *(_QWORD *)((char *)v26 + 4);
  sub_239777F2C((uint64_t)&v14, 0, 32, (uint64_t)v21, 0.0);
  v14 = (void (**)())off_250AE7B98;
  v7 = operator new();
  v8 = v7;
  *(_QWORD *)v7 = off_250AE74D8;
  v9 = v17;
  *(_DWORD *)(v7 + 8) = v15;
  *(_BYTE *)(v7 + 16) = 0;
  *(_DWORD *)(v7 + 40) = -1;
  if ((_DWORD)v9 == -1)
  {
    v12 = v19;
    *(_OWORD *)(v7 + 48) = v18;
    *(_OWORD *)(v7 + 64) = v12;
    *(_QWORD *)(v7 + 80) = v20;
    *(_QWORD *)v7 = off_250AE7B98;
    *v2 = v7;
    v14 = off_250AE74D8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v9])(v21, v7 + 16, v16);
    *(_DWORD *)(v8 + 40) = v9;
    v10 = v17;
    v11 = v19;
    *(_OWORD *)(v8 + 48) = v18;
    *(_OWORD *)(v8 + 64) = v11;
    *(_QWORD *)(v8 + 80) = v20;
    *(_QWORD *)v8 = off_250AE7B98;
    *v2 = v8;
    v14 = off_250AE74D8;
    if ((_DWORD)v10 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v10])(v21, v16);
  }
  v17 = -1;
  *(_QWORD *)&result = nullsub_4(&v14).n128_u64[0];
  return result;
}

void sub_239795018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_23979504C@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  double result;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _DWORD v21[3];
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v2 = (_QWORD *)a2;
  v26[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  v4 = 4 * (*a1 != 0);
  LODWORD(a2) = v4 * *a1;
  if (a2 <= 0x20)
    LODWORD(a2) = 32;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  v14 = (void (**)())off_250AE7C28;
  if (v3)
    a2 = a2;
  else
    a2 = 32;
  v21[0] = 4;
  v21[1] = v5;
  v21[2] = v6;
  LODWORD(v26[0]) = 1;
  *(_QWORD *)((char *)v26 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  v22 = v26[0];
  v23 = a2;
  v24 = v5;
  v25 = *(_QWORD *)((char *)v26 + 4);
  sub_23976D170((uint64_t)&v14, 0, 37, (uint64_t)v21, 0);
  v14 = (void (**)())off_250AE7C28;
  v7 = operator new();
  v8 = v7;
  *(_QWORD *)v7 = off_250AE6FC8;
  v9 = v17;
  *(_DWORD *)(v7 + 8) = v15;
  *(_BYTE *)(v7 + 16) = 0;
  *(_DWORD *)(v7 + 40) = -1;
  if ((_DWORD)v9 == -1)
  {
    v12 = v19;
    *(_OWORD *)(v7 + 48) = v18;
    *(_OWORD *)(v7 + 64) = v12;
    *(_QWORD *)(v7 + 80) = v20;
    *(_QWORD *)v7 = off_250AE7C28;
    *v2 = v7;
    v14 = off_250AE6FC8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v9])(v21, v7 + 16, v16);
    *(_DWORD *)(v8 + 40) = v9;
    v10 = v17;
    v11 = v19;
    *(_OWORD *)(v8 + 48) = v18;
    *(_OWORD *)(v8 + 64) = v11;
    *(_QWORD *)(v8 + 80) = v20;
    *(_QWORD *)v8 = off_250AE7C28;
    *v2 = v8;
    v14 = off_250AE6FC8;
    if ((_DWORD)v10 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v10])(v21, v16);
  }
  v17 = -1;
  *(_QWORD *)&result = nullsub_4(&v14).n128_u64[0];
  return result;
}

void sub_239795228(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_23979525C@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  double result;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _DWORD v21[3];
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v2 = (_QWORD *)a2;
  v26[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  v4 = 4 * (*a1 != 0);
  LODWORD(a2) = v4 * *a1;
  if (a2 <= 0x10)
    LODWORD(a2) = 16;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  v14 = (void (**)())off_250AE7CB8;
  if (v3)
    a2 = a2;
  else
    a2 = 16;
  v21[0] = 4;
  v21[1] = v5;
  v21[2] = v6;
  LODWORD(v26[0]) = 1;
  *(_QWORD *)((char *)v26 + 4) = v4 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  v22 = v26[0];
  v23 = a2;
  v24 = v5;
  v25 = *(_QWORD *)((char *)v26 + 4);
  sub_239770B0C((uint64_t)&v14, 0, 38, (uint64_t)v21, 0);
  v14 = (void (**)())off_250AE7CB8;
  v7 = operator new();
  v8 = v7;
  *(_QWORD *)v7 = off_250AE7178;
  v9 = v17;
  *(_DWORD *)(v7 + 8) = v15;
  *(_BYTE *)(v7 + 16) = 0;
  *(_DWORD *)(v7 + 40) = -1;
  if ((_DWORD)v9 == -1)
  {
    v12 = v19;
    *(_OWORD *)(v7 + 48) = v18;
    *(_OWORD *)(v7 + 64) = v12;
    *(_QWORD *)(v7 + 80) = v20;
    *(_QWORD *)v7 = off_250AE7CB8;
    *v2 = v7;
    v14 = off_250AE7178;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v9])(v21, v7 + 16, v16);
    *(_DWORD *)(v8 + 40) = v9;
    v10 = v17;
    v11 = v19;
    *(_OWORD *)(v8 + 48) = v18;
    *(_OWORD *)(v8 + 64) = v11;
    *(_QWORD *)(v8 + 80) = v20;
    *(_QWORD *)v8 = off_250AE7CB8;
    *v2 = v8;
    v14 = off_250AE7178;
    if ((_DWORD)v10 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v10])(v21, v16);
  }
  v17 = -1;
  *(_QWORD *)&result = nullsub_4(&v14).n128_u64[0];
  return result;
}

void sub_239795438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_23979546C(int a1)
{
  __asm { BR              X10 }
}

void sub_23979549C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239795700(*a2, &v3);
  *v2 = v3;
}

void sub_2397954C0(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23979585C(*a2, &v3);
  *v2 = v3;
}

void sub_2397954E4(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2397959B8(*a2, &v3);
  *v2 = v3;
}

void sub_239795508(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239795B14(*a2, &v3);
  *v2 = v3;
}

void sub_23979552C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239795C70(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_239795550(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239795E68(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_239795574(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239796060(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_239795598(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239796258(*a2, &v3);
  *v2 = v3;
}

void sub_2397955BC(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239796448(*a2, &v3);
  *v2 = v3;
}

void sub_2397955E0(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239796638(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_239795604(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239796830(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_239795628(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239796A28(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_23979564C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239796C20(*a2, (unint64_t)&v3);
  *v2 = v3;
}

void sub_239795670(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239796E18(*a2, (unint64_t)&v3);
  *v2 = v3;
}

double sub_239795700@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  void (**v9)();
  int v10;
  _BYTE v11[24];
  unsigned int v12;
  __int128 v13;
  _QWORD v14[2];

  v2 = a2;
  LODWORD(a2) = *a1;
  v3 = *a1 != 0;
  if (a1[1])
    a2 = (uint64_t *)a2;
  else
    a2 = 0;
  v14[0] = *(_QWORD *)a1;
  v14[1] = v3 | ((_QWORD)a2 << 32);
  sub_239778ADC((uint64_t)&v9, (uint64_t)v14);
  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = off_250AE6E18;
  v6 = v12;
  *(_DWORD *)(v4 + 8) = v10;
  *(_BYTE *)(v4 + 16) = 0;
  *(_DWORD *)(v4 + 40) = -1;
  if ((_DWORD)v6 == -1)
  {
    *(_OWORD *)(v4 + 48) = v13;
    *(_QWORD *)v4 = off_250AE7568;
    *v2 = v4;
    v9 = off_250AE6E18;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_250AE8068[v6])(v14, v4 + 16, v11);
    *(_DWORD *)(v5 + 40) = v6;
    v7 = v12;
    *(_OWORD *)(v5 + 48) = v13;
    *(_QWORD *)v5 = off_250AE7568;
    *v2 = v5;
    v9 = off_250AE6E18;
    if ((_DWORD)v7 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_250AE8048[v7])(v14, v11);
  }
  v12 = -1;
  *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  return result;
}

void sub_239795848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239778CCC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_23979585C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  void (**v9)();
  int v10;
  _BYTE v11[24];
  unsigned int v12;
  __int128 v13;
  _QWORD v14[2];

  v2 = a2;
  LODWORD(a2) = *a1;
  v3 = *a1 != 0;
  if (a1[1])
    a2 = (uint64_t *)a2;
  else
    a2 = 0;
  v14[0] = *(_QWORD *)a1;
  v14[1] = v3 | ((_QWORD)a2 << 32);
  sub_23977982C((uint64_t)&v9, (uint64_t)v14);
  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = off_250AE7058;
  v6 = v12;
  *(_DWORD *)(v4 + 8) = v10;
  *(_BYTE *)(v4 + 16) = 0;
  *(_DWORD *)(v4 + 40) = -1;
  if ((_DWORD)v6 == -1)
  {
    *(_OWORD *)(v4 + 48) = v13;
    *(_QWORD *)v4 = off_250AE75F8;
    *v2 = v4;
    v9 = off_250AE7058;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_250AE8068[v6])(v14, v4 + 16, v11);
    *(_DWORD *)(v5 + 40) = v6;
    v7 = v12;
    *(_OWORD *)(v5 + 48) = v13;
    *(_QWORD *)v5 = off_250AE75F8;
    *v2 = v5;
    v9 = off_250AE7058;
    if ((_DWORD)v7 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_250AE8048[v7])(v14, v11);
  }
  v12 = -1;
  *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  return result;
}

void sub_2397959A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239779A1C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_2397959B8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  void (**v9)();
  int v10;
  _BYTE v11[24];
  unsigned int v12;
  __int128 v13;
  _QWORD v14[2];

  v2 = a2;
  LODWORD(a2) = *a1;
  v3 = *a1 != 0;
  if (a1[1])
    a2 = (uint64_t *)a2;
  else
    a2 = 0;
  v14[0] = *(_QWORD *)a1;
  v14[1] = v3 | ((_QWORD)a2 << 32);
  sub_23977A59C((uint64_t)&v9, (uint64_t)v14);
  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = off_250AE7208;
  v6 = v12;
  *(_DWORD *)(v4 + 8) = v10;
  *(_BYTE *)(v4 + 16) = 0;
  *(_DWORD *)(v4 + 40) = -1;
  if ((_DWORD)v6 == -1)
  {
    *(_OWORD *)(v4 + 48) = v13;
    *(_QWORD *)v4 = off_250AE7688;
    *v2 = v4;
    v9 = off_250AE7208;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_250AE8068[v6])(v14, v4 + 16, v11);
    *(_DWORD *)(v5 + 40) = v6;
    v7 = v12;
    *(_OWORD *)(v5 + 48) = v13;
    *(_QWORD *)v5 = off_250AE7688;
    *v2 = v5;
    v9 = off_250AE7208;
    if ((_DWORD)v7 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_250AE8048[v7])(v14, v11);
  }
  v12 = -1;
  *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  return result;
}

void sub_239795B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23977A78C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239795B14@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  void (**v9)();
  int v10;
  _BYTE v11[24];
  unsigned int v12;
  __int128 v13;
  _QWORD v14[2];

  v2 = a2;
  LODWORD(a2) = *a1;
  v3 = *a1 != 0;
  if (a1[1])
    a2 = (uint64_t *)a2;
  else
    a2 = 0;
  v14[0] = *(_QWORD *)a1;
  v14[1] = v3 | ((_QWORD)a2 << 32);
  sub_23977B304((uint64_t)&v9, (uint64_t)v14);
  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = off_250AE73B8;
  v6 = v12;
  *(_DWORD *)(v4 + 8) = v10;
  *(_BYTE *)(v4 + 16) = 0;
  *(_DWORD *)(v4 + 40) = -1;
  if ((_DWORD)v6 == -1)
  {
    *(_OWORD *)(v4 + 48) = v13;
    *(_QWORD *)v4 = off_250AE7718;
    *v2 = v4;
    v9 = off_250AE73B8;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_250AE8068[v6])(v14, v4 + 16, v11);
    *(_DWORD *)(v5 + 40) = v6;
    v7 = v12;
    *(_OWORD *)(v5 + 48) = v13;
    *(_QWORD *)v5 = off_250AE7718;
    *v2 = v5;
    v9 = off_250AE73B8;
    if ((_DWORD)v7 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_250AE8048[v7])(v14, v11);
  }
  v12 = -1;
  *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  return result;
}

void sub_239795C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23977B4F4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239795C70@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  double result;
  void (**v12)();
  int v13;
  _BYTE v14[24];
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _DWORD v19[3];
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  v2 = (uint64_t *)a2;
  v24[2] = *MEMORY[0x24BDAC8D0];
  v3 = 2 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1])
    a2 = a2;
  else
    a2 = 0;
  v19[0] = 2;
  v4 = *(_QWORD *)a1;
  v19[1] = *(_QWORD *)a1;
  v19[2] = HIDWORD(v4);
  LODWORD(v24[0]) = 1;
  *(_QWORD *)((char *)v24 + 4) = v3 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  v20 = v24[0];
  v21 = a2;
  v22 = v4;
  v23 = *(_QWORD *)((char *)v24 + 4);
  sub_23977C074((uint64_t)&v12, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_250AE6EA8;
  v7 = v15;
  *(_DWORD *)(v5 + 8) = v13;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    v10 = v17;
    *(_OWORD *)(v5 + 48) = v16;
    *(_OWORD *)(v5 + 64) = v10;
    *(_QWORD *)(v5 + 80) = v18;
    *(_QWORD *)v5 = off_250AE77A8;
    *v2 = v5;
    v12 = off_250AE6EA8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v7])(v19, v5 + 16, v14);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v15;
    v9 = v17;
    *(_OWORD *)(v6 + 48) = v16;
    *(_OWORD *)(v6 + 64) = v9;
    *(_QWORD *)(v6 + 80) = v18;
    *(_QWORD *)v6 = off_250AE77A8;
    *v2 = v6;
    v12 = off_250AE6EA8;
    if ((_DWORD)v8 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v8])(v19, v14);
  }
  v15 = -1;
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239795E34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239795E68@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  double result;
  void (**v12)();
  int v13;
  _BYTE v14[24];
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _DWORD v19[3];
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  v2 = (uint64_t *)a2;
  v24[2] = *MEMORY[0x24BDAC8D0];
  v3 = 2 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1])
    a2 = a2;
  else
    a2 = 0;
  v19[0] = 2;
  v4 = *(_QWORD *)a1;
  v19[1] = *(_QWORD *)a1;
  v19[2] = HIDWORD(v4);
  LODWORD(v24[0]) = 1;
  *(_QWORD *)((char *)v24 + 4) = v3 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  v20 = v24[0];
  v21 = a2;
  v22 = v4;
  v23 = *(_QWORD *)((char *)v24 + 4);
  sub_23977CF0C((uint64_t)&v12, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_250AE7298;
  v7 = v15;
  *(_DWORD *)(v5 + 8) = v13;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    v10 = v17;
    *(_OWORD *)(v5 + 48) = v16;
    *(_OWORD *)(v5 + 64) = v10;
    *(_QWORD *)(v5 + 80) = v18;
    *(_QWORD *)v5 = off_250AE7838;
    *v2 = v5;
    v12 = off_250AE7298;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v7])(v19, v5 + 16, v14);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v15;
    v9 = v17;
    *(_OWORD *)(v6 + 48) = v16;
    *(_OWORD *)(v6 + 64) = v9;
    *(_QWORD *)(v6 + 80) = v18;
    *(_QWORD *)v6 = off_250AE7838;
    *v2 = v6;
    v12 = off_250AE7298;
    if ((_DWORD)v8 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v8])(v19, v14);
  }
  v15 = -1;
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23979602C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239796060@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  double result;
  void (**v12)();
  int v13;
  _BYTE v14[24];
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _DWORD v19[3];
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  v2 = (uint64_t *)a2;
  v24[2] = *MEMORY[0x24BDAC8D0];
  v3 = 2 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1])
    a2 = a2;
  else
    a2 = 0;
  v19[0] = 2;
  v4 = *(_QWORD *)a1;
  v19[1] = *(_QWORD *)a1;
  v19[2] = HIDWORD(v4);
  LODWORD(v24[0]) = 1;
  *(_QWORD *)((char *)v24 + 4) = v3 & 0x1FFFFFFFFLL | ((unint64_t)(a2 >> 1) << 33);
  v20 = v24[0];
  v21 = a2;
  v22 = v4;
  v23 = *(_QWORD *)((char *)v24 + 4);
  sub_23977DDA4((uint64_t)&v12, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_250AE7448;
  v7 = v15;
  *(_DWORD *)(v5 + 8) = v13;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    v10 = v17;
    *(_OWORD *)(v5 + 48) = v16;
    *(_OWORD *)(v5 + 64) = v10;
    *(_QWORD *)(v5 + 80) = v18;
    *(_QWORD *)v5 = off_250AE78C8;
    *v2 = v5;
    v12 = off_250AE7448;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v7])(v19, v5 + 16, v14);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v15;
    v9 = v17;
    *(_OWORD *)(v6 + 48) = v16;
    *(_OWORD *)(v6 + 64) = v9;
    *(_QWORD *)(v6 + 80) = v18;
    *(_QWORD *)v6 = off_250AE78C8;
    *v2 = v6;
    v12 = off_250AE7448;
    if ((_DWORD)v8 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v8])(v19, v14);
  }
  v15 = -1;
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239796224(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239796258@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  double result;
  void (**v13)();
  int v14;
  _BYTE v15[24];
  unsigned int v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _DWORD v20[3];
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];

  v25[2] = *MEMORY[0x24BDAC8D0];
  if (*a1)
    v3 = 3;
  else
    v3 = 0;
  LODWORD(v4) = v3 * *a1;
  if (a1[1])
    v4 = v4;
  else
    v4 = 0;
  v20[0] = 3;
  v5 = *(_QWORD *)a1;
  v20[1] = *(_QWORD *)a1;
  v20[2] = HIDWORD(v5);
  LODWORD(v25[0]) = 1;
  *(_QWORD *)((char *)v25 + 4) = v3 | (v4 << 32);
  v21 = v25[0];
  v22 = v4;
  v23 = v5;
  v24 = *(_QWORD *)((char *)v25 + 4);
  sub_23977EC3C((uint64_t)&v13, (uint64_t)v20);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_250AE6F38;
  v8 = v16;
  *(_DWORD *)(v6 + 8) = v14;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v18;
    *(_OWORD *)(v6 + 48) = v17;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v19;
    *(_QWORD *)v6 = off_250AE7958;
    *a2 = v6;
    v13 = off_250AE6F38;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v8])(v20, v6 + 16, v15);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v16;
    v10 = v18;
    *(_OWORD *)(v7 + 48) = v17;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v19;
    *(_QWORD *)v7 = off_250AE7958;
    *a2 = v7;
    v13 = off_250AE6F38;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v9])(v20, v15);
  }
  v16 = -1;
  *(_QWORD *)&result = nullsub_4(&v13).n128_u64[0];
  return result;
}

void sub_239796414(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239796448@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  double result;
  void (**v13)();
  int v14;
  _BYTE v15[24];
  unsigned int v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _DWORD v20[3];
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];

  v25[2] = *MEMORY[0x24BDAC8D0];
  if (*a1)
    v3 = 3;
  else
    v3 = 0;
  LODWORD(v4) = v3 * *a1;
  if (a1[1])
    v4 = v4;
  else
    v4 = 0;
  v20[0] = 3;
  v5 = *(_QWORD *)a1;
  v20[1] = *(_QWORD *)a1;
  v20[2] = HIDWORD(v5);
  LODWORD(v25[0]) = 1;
  *(_QWORD *)((char *)v25 + 4) = v3 | (v4 << 32);
  v21 = v25[0];
  v22 = v4;
  v23 = v5;
  v24 = *(_QWORD *)((char *)v25 + 4);
  sub_23977F994((uint64_t)&v13, (uint64_t)v20);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_250AE70E8;
  v8 = v16;
  *(_DWORD *)(v6 + 8) = v14;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v18;
    *(_OWORD *)(v6 + 48) = v17;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v19;
    *(_QWORD *)v6 = off_250AE79E8;
    *a2 = v6;
    v13 = off_250AE70E8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v8])(v20, v6 + 16, v15);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v16;
    v10 = v18;
    *(_OWORD *)(v7 + 48) = v17;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v19;
    *(_QWORD *)v7 = off_250AE79E8;
    *a2 = v7;
    v13 = off_250AE70E8;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v9])(v20, v15);
  }
  v16 = -1;
  *(_QWORD *)&result = nullsub_4(&v13).n128_u64[0];
  return result;
}

void sub_239796604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239796638@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  double result;
  void (**v12)();
  int v13;
  _BYTE v14[24];
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _DWORD v19[3];
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  v2 = (uint64_t *)a2;
  v24[2] = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1])
    a2 = a2;
  else
    a2 = 0;
  v19[0] = 4;
  v4 = *(_QWORD *)a1;
  v19[1] = *(_QWORD *)a1;
  v19[2] = HIDWORD(v4);
  LODWORD(v24[0]) = 1;
  *(_QWORD *)((char *)v24 + 4) = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  v20 = v24[0];
  v21 = a2;
  v22 = v4;
  v23 = *(_QWORD *)((char *)v24 + 4);
  sub_2397806EC((uint64_t)&v12, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_250AE6FC8;
  v7 = v15;
  *(_DWORD *)(v5 + 8) = v13;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    v10 = v17;
    *(_OWORD *)(v5 + 48) = v16;
    *(_OWORD *)(v5 + 64) = v10;
    *(_QWORD *)(v5 + 80) = v18;
    *(_QWORD *)v5 = off_250AE7A78;
    *v2 = v5;
    v12 = off_250AE6FC8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v7])(v19, v5 + 16, v14);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v15;
    v9 = v17;
    *(_OWORD *)(v6 + 48) = v16;
    *(_OWORD *)(v6 + 64) = v9;
    *(_QWORD *)(v6 + 80) = v18;
    *(_QWORD *)v6 = off_250AE7A78;
    *v2 = v6;
    v12 = off_250AE6FC8;
    if ((_DWORD)v8 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v8])(v19, v14);
  }
  v15 = -1;
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397967FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239796830@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  double result;
  void (**v12)();
  int v13;
  _BYTE v14[24];
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _DWORD v19[3];
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  v2 = (uint64_t *)a2;
  v24[2] = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1])
    a2 = a2;
  else
    a2 = 0;
  v19[0] = 4;
  v4 = *(_QWORD *)a1;
  v19[1] = *(_QWORD *)a1;
  v19[2] = HIDWORD(v4);
  LODWORD(v24[0]) = 1;
  *(_QWORD *)((char *)v24 + 4) = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  v20 = v24[0];
  v21 = a2;
  v22 = v4;
  v23 = *(_QWORD *)((char *)v24 + 4);
  sub_239781584((uint64_t)&v12, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_250AE7328;
  v7 = v15;
  *(_DWORD *)(v5 + 8) = v13;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    v10 = v17;
    *(_OWORD *)(v5 + 48) = v16;
    *(_OWORD *)(v5 + 64) = v10;
    *(_QWORD *)(v5 + 80) = v18;
    *(_QWORD *)v5 = off_250AE7B08;
    *v2 = v5;
    v12 = off_250AE7328;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v7])(v19, v5 + 16, v14);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v15;
    v9 = v17;
    *(_OWORD *)(v6 + 48) = v16;
    *(_OWORD *)(v6 + 64) = v9;
    *(_QWORD *)(v6 + 80) = v18;
    *(_QWORD *)v6 = off_250AE7B08;
    *v2 = v6;
    v12 = off_250AE7328;
    if ((_DWORD)v8 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v8])(v19, v14);
  }
  v15 = -1;
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2397969F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239796A28@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  double result;
  void (**v12)();
  int v13;
  _BYTE v14[24];
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _DWORD v19[3];
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  v2 = (uint64_t *)a2;
  v24[2] = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1])
    a2 = a2;
  else
    a2 = 0;
  v19[0] = 4;
  v4 = *(_QWORD *)a1;
  v19[1] = *(_QWORD *)a1;
  v19[2] = HIDWORD(v4);
  LODWORD(v24[0]) = 1;
  *(_QWORD *)((char *)v24 + 4) = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  v20 = v24[0];
  v21 = a2;
  v22 = v4;
  v23 = *(_QWORD *)((char *)v24 + 4);
  sub_23978241C((uint64_t)&v12, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_250AE74D8;
  v7 = v15;
  *(_DWORD *)(v5 + 8) = v13;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    v10 = v17;
    *(_OWORD *)(v5 + 48) = v16;
    *(_OWORD *)(v5 + 64) = v10;
    *(_QWORD *)(v5 + 80) = v18;
    *(_QWORD *)v5 = off_250AE7B98;
    *v2 = v5;
    v12 = off_250AE74D8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v7])(v19, v5 + 16, v14);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v15;
    v9 = v17;
    *(_OWORD *)(v6 + 48) = v16;
    *(_OWORD *)(v6 + 64) = v9;
    *(_QWORD *)(v6 + 80) = v18;
    *(_QWORD *)v6 = off_250AE7B98;
    *v2 = v6;
    v12 = off_250AE74D8;
    if ((_DWORD)v8 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v8])(v19, v14);
  }
  v15 = -1;
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239796BEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239796C20@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  double result;
  void (**v12)();
  int v13;
  _BYTE v14[24];
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _DWORD v19[3];
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  v2 = (uint64_t *)a2;
  v24[2] = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1])
    a2 = a2;
  else
    a2 = 0;
  v19[0] = 4;
  v4 = *(_QWORD *)a1;
  v19[1] = *(_QWORD *)a1;
  v19[2] = HIDWORD(v4);
  LODWORD(v24[0]) = 1;
  *(_QWORD *)((char *)v24 + 4) = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  v20 = v24[0];
  v21 = a2;
  v22 = v4;
  v23 = *(_QWORD *)((char *)v24 + 4);
  sub_2397832B4((uint64_t)&v12, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_250AE6FC8;
  v7 = v15;
  *(_DWORD *)(v5 + 8) = v13;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    v10 = v17;
    *(_OWORD *)(v5 + 48) = v16;
    *(_OWORD *)(v5 + 64) = v10;
    *(_QWORD *)(v5 + 80) = v18;
    *(_QWORD *)v5 = off_250AE7C28;
    *v2 = v5;
    v12 = off_250AE6FC8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v7])(v19, v5 + 16, v14);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v15;
    v9 = v17;
    *(_OWORD *)(v6 + 48) = v16;
    *(_OWORD *)(v6 + 64) = v9;
    *(_QWORD *)(v6 + 80) = v18;
    *(_QWORD *)v6 = off_250AE7C28;
    *v2 = v6;
    v12 = off_250AE6FC8;
    if ((_DWORD)v8 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v8])(v19, v14);
  }
  v15 = -1;
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239796DE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_239796E18@<D0>(_DWORD *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  double result;
  void (**v12)();
  int v13;
  _BYTE v14[24];
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _DWORD v19[3];
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  v2 = (uint64_t *)a2;
  v24[2] = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  LODWORD(a2) = v3 * *a1;
  if (a1[1])
    a2 = a2;
  else
    a2 = 0;
  v19[0] = 4;
  v4 = *(_QWORD *)a1;
  v19[1] = *(_QWORD *)a1;
  v19[2] = HIDWORD(v4);
  LODWORD(v24[0]) = 1;
  *(_QWORD *)((char *)v24 + 4) = v3 & 0x3FFFFFFFFLL | ((unint64_t)(a2 >> 2) << 34);
  v20 = v24[0];
  v21 = a2;
  v22 = v4;
  v23 = *(_QWORD *)((char *)v24 + 4);
  sub_23978414C((uint64_t)&v12, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_250AE7178;
  v7 = v15;
  *(_DWORD *)(v5 + 8) = v13;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    v10 = v17;
    *(_OWORD *)(v5 + 48) = v16;
    *(_OWORD *)(v5 + 64) = v10;
    *(_QWORD *)(v5 + 80) = v18;
    *(_QWORD *)v5 = off_250AE7CB8;
    *v2 = v5;
    v12 = off_250AE7178;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_250AE8068[v7])(v19, v5 + 16, v14);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v15;
    v9 = v17;
    *(_OWORD *)(v6 + 48) = v16;
    *(_OWORD *)(v6 + 64) = v9;
    *(_QWORD *)(v6 + 80) = v18;
    *(_QWORD *)v6 = off_250AE7CB8;
    *v2 = v6;
    v12 = off_250AE7178;
    if ((_DWORD)v8 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_250AE8048[v8])(v19, v14);
  }
  v15 = -1;
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239796FDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

__int128 *sub_239797010()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E58))
    return &xmmword_256931E40;
  v2 = sub_2397970EC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931E40, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931E50 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931E40 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931E40, &dword_23940C000);
  __cxa_guard_release(&qword_256931E58);
  return &xmmword_256931E40;
}

void sub_2397970D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931E58);
  _Unwind_Resume(a1);
}

std::string *sub_2397970EC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931E78);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931E78))
    return &stru_256931E60;
  sub_2397971DC((uint64_t)__p);
  sub_239423580((uint64_t)__p, &stru_256931E60);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931E60, &dword_23940C000);
  __cxa_guard_release(&qword_256931E78);
  return &stru_256931E60;
}

void sub_23979719C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931E78);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931E78);
  _Unwind_Resume(a1);
}

void sub_2397971DC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931E98);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931E98))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Gray8u>]", qword_256931E80);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931E80, &dword_23940C000);
    __cxa_guard_release(&qword_256931E98);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931EB8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931EB8))
  {
    v5 = sub_239423A18(qword_256931E80, "<", 0);
    sub_239423914(qword_256931E80, 0, v5, qword_256931EA0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931EA0, &dword_23940C000);
    __cxa_guard_release(&qword_256931EB8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931ED8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931ED8))
  {
    sub_239A44118((std::string::size_type)qword_256931EA0, (std::string *)&xmmword_256931EC0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931EC0, &dword_23940C000);
    __cxa_guard_release(&qword_256931ED8);
  }
  if (byte_256931ED7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931EC0, *((unint64_t *)&xmmword_256931EC0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931EC0;
    *(_QWORD *)(a1 + 16) = unk_256931ED0;
  }
}

void sub_239797378(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931ED8);
  _Unwind_Resume(a1);
}

void sub_239797390(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931EB8);
  _Unwind_Resume(a1);
}

void sub_2397973A8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931E98);
  _Unwind_Resume(a1);
}

__int128 *sub_2397973C0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931F18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931F18))
    return &xmmword_256931F00;
  v2 = sub_23979749C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931F00, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931F10 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931F00 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931F00, &dword_23940C000);
  __cxa_guard_release(&qword_256931F18);
  return &xmmword_256931F00;
}

void sub_239797484(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931F18);
  _Unwind_Resume(a1);
}

std::string *sub_23979749C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931F38);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931F38))
    return &stru_256931F20;
  sub_23979758C((uint64_t)__p);
  sub_239731068((uint64_t)__p, &stru_256931F20);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931F20, &dword_23940C000);
  __cxa_guard_release(&qword_256931F38);
  return &stru_256931F20;
}

void sub_23979754C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931F38);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931F38);
  _Unwind_Resume(a1);
}

void sub_23979758C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931F58);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931F58))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Gray16u>]", qword_256931F40);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931F40, &dword_23940C000);
    __cxa_guard_release(&qword_256931F58);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931F78);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931F78))
  {
    v5 = sub_239423A18(qword_256931F40, "<", 0);
    sub_239423914(qword_256931F40, 0, v5, qword_256931F60);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931F60, &dword_23940C000);
    __cxa_guard_release(&qword_256931F78);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931F98);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931F98))
  {
    sub_239A44118((std::string::size_type)qword_256931F60, (std::string *)&xmmword_256931F80);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931F80, &dword_23940C000);
    __cxa_guard_release(&qword_256931F98);
  }
  if (byte_256931F97 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931F80, *((unint64_t *)&xmmword_256931F80 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931F80;
    *(_QWORD *)(a1 + 16) = unk_256931F90;
  }
}

void sub_239797728(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931F98);
  _Unwind_Resume(a1);
}

void sub_239797740(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931F78);
  _Unwind_Resume(a1);
}

void sub_239797758(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931F58);
  _Unwind_Resume(a1);
}

__int128 *sub_239797770()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931FD8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931FD8))
    return &xmmword_256931FC0;
  v2 = sub_23979784C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931FC0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931FD0 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931FC0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931FC0, &dword_23940C000);
  __cxa_guard_release(&qword_256931FD8);
  return &xmmword_256931FC0;
}

void sub_239797834(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931FD8);
  _Unwind_Resume(a1);
}

std::string *sub_23979784C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931FF8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931FF8))
    return &stru_256931FE0;
  sub_23979793C((uint64_t)__p);
  sub_239761E64((uint64_t)__p, &stru_256931FE0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931FE0, &dword_23940C000);
  __cxa_guard_release(&qword_256931FF8);
  return &stru_256931FE0;
}

void sub_2397978FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931FF8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931FF8);
  _Unwind_Resume(a1);
}

void sub_23979793C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256932018);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256932018))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Gray16f>]", qword_256932000);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932000, &dword_23940C000);
    __cxa_guard_release(&qword_256932018);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256932038);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256932038))
  {
    v5 = sub_239423A18(qword_256932000, "<", 0);
    sub_239423914(qword_256932000, 0, v5, qword_256932020);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932020, &dword_23940C000);
    __cxa_guard_release(&qword_256932038);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256932058);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932058))
  {
    sub_239A44118((std::string::size_type)qword_256932020, (std::string *)&xmmword_256932040);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932040, &dword_23940C000);
    __cxa_guard_release(&qword_256932058);
  }
  if (byte_256932057 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256932040, *((unint64_t *)&xmmword_256932040 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256932040;
    *(_QWORD *)(a1 + 16) = unk_256932050;
  }
}

void sub_239797AD8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932058);
  _Unwind_Resume(a1);
}

void sub_239797AF0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932038);
  _Unwind_Resume(a1);
}

void sub_239797B08(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932018);
  _Unwind_Resume(a1);
}

__int128 *sub_239797B20()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932098);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932098))
    return &xmmword_256932080;
  v2 = sub_239797BFC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256932080, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256932090 = v2->__r_.__value_.__r.__words[2];
    xmmword_256932080 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932080, &dword_23940C000);
  __cxa_guard_release(&qword_256932098);
  return &xmmword_256932080;
}

void sub_239797BE4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932098);
  _Unwind_Resume(a1);
}

std::string *sub_239797BFC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569320B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569320B8))
    return &stru_2569320A0;
  sub_239797CEC((uint64_t)__p);
  sub_239546EB4((uint64_t)__p, &stru_2569320A0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569320A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569320B8);
  return &stru_2569320A0;
}

void sub_239797CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2569320B8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2569320B8);
  _Unwind_Resume(a1);
}

void sub_239797CEC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569320D8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569320D8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Gray32f>]", qword_2569320C0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569320C0, &dword_23940C000);
    __cxa_guard_release(&qword_2569320D8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569320F8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569320F8))
  {
    v5 = sub_239423A18(qword_2569320C0, "<", 0);
    sub_239423914(qword_2569320C0, 0, v5, qword_2569320E0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569320E0, &dword_23940C000);
    __cxa_guard_release(&qword_2569320F8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256932118);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932118))
  {
    sub_239A44118((std::string::size_type)qword_2569320E0, (std::string *)&xmmword_256932100);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932100, &dword_23940C000);
    __cxa_guard_release(&qword_256932118);
  }
  if (byte_256932117 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256932100, *((unint64_t *)&xmmword_256932100 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256932100;
    *(_QWORD *)(a1 + 16) = unk_256932110;
  }
}

void sub_239797E88(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932118);
  _Unwind_Resume(a1);
}

void sub_239797EA0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569320F8);
  _Unwind_Resume(a1);
}

void sub_239797EB8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569320D8);
  _Unwind_Resume(a1);
}

__int128 *sub_239797ED0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932158);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932158))
    return &xmmword_256932140;
  v2 = sub_239797FAC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256932140, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256932150 = v2->__r_.__value_.__r.__words[2];
    xmmword_256932140 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932140, &dword_23940C000);
  __cxa_guard_release(&qword_256932158);
  return &xmmword_256932140;
}

void sub_239797F94(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932158);
  _Unwind_Resume(a1);
}

std::string *sub_239797FAC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932178);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932178))
    return &stru_256932160;
  sub_23979824C((uint64_t)__p);
  sub_23979809C((uint64_t)__p, &stru_256932160);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932160, &dword_23940C000);
  __cxa_guard_release(&qword_256932178);
  return &stru_256932160;
}

void sub_23979805C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256932178);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256932178);
  _Unwind_Resume(a1);
}

void sub_23979809C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256930658);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256930658))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two8u]", &xmmword_256930640);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256930640, &dword_23940C000);
    __cxa_guard_release(&qword_256930658);
  }
  if (byte_256930657 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256930640, *((unint64_t *)&xmmword_256930640 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256930640;
    v13 = unk_256930650;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239798204(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256930658);
  _Unwind_Resume(a1);
}

void sub_239798220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_23979824C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256932198);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256932198))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Two8u>]", qword_256932180);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932180, &dword_23940C000);
    __cxa_guard_release(&qword_256932198);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569321B8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569321B8))
  {
    v5 = sub_239423A18(qword_256932180, "<", 0);
    sub_239423914(qword_256932180, 0, v5, qword_2569321A0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569321A0, &dword_23940C000);
    __cxa_guard_release(&qword_2569321B8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569321D8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569321D8))
  {
    sub_239A44118((std::string::size_type)qword_2569321A0, (std::string *)&xmmword_2569321C0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569321C0, &dword_23940C000);
    __cxa_guard_release(&qword_2569321D8);
  }
  if (byte_2569321D7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_2569321C0, *((unint64_t *)&xmmword_2569321C0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2569321C0;
    *(_QWORD *)(a1 + 16) = unk_2569321D0;
  }
}

void sub_2397983E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569321D8);
  _Unwind_Resume(a1);
}

void sub_239798400(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569321B8);
  _Unwind_Resume(a1);
}

void sub_239798418(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932198);
  _Unwind_Resume(a1);
}

__int128 *sub_239798430()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932218);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932218))
    return &xmmword_256932200;
  v2 = sub_23979850C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256932200, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256932210 = v2->__r_.__value_.__r.__words[2];
    xmmword_256932200 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932200, &dword_23940C000);
  __cxa_guard_release(&qword_256932218);
  return &xmmword_256932200;
}

void sub_2397984F4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932218);
  _Unwind_Resume(a1);
}

std::string *sub_23979850C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932238);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932238))
    return &stru_256932220;
  sub_2397987AC((uint64_t)__p);
  sub_2397985FC((uint64_t)__p, &stru_256932220);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932220, &dword_23940C000);
  __cxa_guard_release(&qword_256932238);
  return &stru_256932220;
}

void sub_2397985BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256932238);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256932238);
  _Unwind_Resume(a1);
}

void sub_2397985FC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_2569328B8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569328B8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two16f]", &xmmword_2569328A0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569328A0, &dword_23940C000);
    __cxa_guard_release(&qword_2569328B8);
  }
  if (byte_2569328B7 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_2569328A0, *((unint64_t *)&xmmword_2569328A0 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_2569328A0;
    v13 = unk_2569328B0;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239798764(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569328B8);
  _Unwind_Resume(a1);
}

void sub_239798780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2397987AC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256932258);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256932258))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Two16f>]", qword_256932240);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932240, &dword_23940C000);
    __cxa_guard_release(&qword_256932258);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256932278);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256932278))
  {
    v5 = sub_239423A18(qword_256932240, "<", 0);
    sub_239423914(qword_256932240, 0, v5, qword_256932260);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932260, &dword_23940C000);
    __cxa_guard_release(&qword_256932278);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256932298);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932298))
  {
    sub_239A44118((std::string::size_type)qword_256932260, (std::string *)&xmmword_256932280);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932280, &dword_23940C000);
    __cxa_guard_release(&qword_256932298);
  }
  if (byte_256932297 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256932280, *((unint64_t *)&xmmword_256932280 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256932280;
    *(_QWORD *)(a1 + 16) = unk_256932290;
  }
}

void sub_239798948(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932298);
  _Unwind_Resume(a1);
}

void sub_239798960(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932278);
  _Unwind_Resume(a1);
}

void sub_239798978(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932258);
  _Unwind_Resume(a1);
}

__int128 *sub_239798990()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569322D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569322D8))
    return &xmmword_2569322C0;
  v2 = sub_239798A6C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_2569322C0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569322D0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2569322C0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569322C0, &dword_23940C000);
  __cxa_guard_release(&qword_2569322D8);
  return &xmmword_2569322C0;
}

void sub_239798A54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569322D8);
  _Unwind_Resume(a1);
}

std::string *sub_239798A6C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569322F8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569322F8))
    return &stru_2569322E0;
  sub_239798D0C((uint64_t)__p);
  sub_239798B5C((uint64_t)__p, &stru_2569322E0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569322E0, &dword_23940C000);
  __cxa_guard_release(&qword_2569322F8);
  return &stru_2569322E0;
}

void sub_239798B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2569322F8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2569322F8);
  _Unwind_Resume(a1);
}

void sub_239798B5C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_2569328D8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569328D8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two32f]", &xmmword_2569328C0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569328C0, &dword_23940C000);
    __cxa_guard_release(&qword_2569328D8);
  }
  if (byte_2569328D7 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_2569328C0, *((unint64_t *)&xmmword_2569328C0 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_2569328C0;
    v13 = unk_2569328D0;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239798CC4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569328D8);
  _Unwind_Resume(a1);
}

void sub_239798CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239798D0C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256932318);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256932318))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Two32f>]", qword_256932300);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932300, &dword_23940C000);
    __cxa_guard_release(&qword_256932318);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256932338);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256932338))
  {
    v5 = sub_239423A18(qword_256932300, "<", 0);
    sub_239423914(qword_256932300, 0, v5, qword_256932320);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932320, &dword_23940C000);
    __cxa_guard_release(&qword_256932338);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256932358);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932358))
  {
    sub_239A44118((std::string::size_type)qword_256932320, (std::string *)&xmmword_256932340);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932340, &dword_23940C000);
    __cxa_guard_release(&qword_256932358);
  }
  if (byte_256932357 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256932340, *((unint64_t *)&xmmword_256932340 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256932340;
    *(_QWORD *)(a1 + 16) = unk_256932350;
  }
}

void sub_239798EA8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932358);
  _Unwind_Resume(a1);
}

void sub_239798EC0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932338);
  _Unwind_Resume(a1);
}

void sub_239798ED8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932318);
  _Unwind_Resume(a1);
}

__int128 *sub_239798EF0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932398);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932398))
    return &xmmword_256932380;
  v2 = sub_239798FCC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256932380, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256932390 = v2->__r_.__value_.__r.__words[2];
    xmmword_256932380 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932380, &dword_23940C000);
  __cxa_guard_release(&qword_256932398);
  return &xmmword_256932380;
}

void sub_239798FB4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932398);
  _Unwind_Resume(a1);
}

std::string *sub_239798FCC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569323B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569323B8))
    return &stru_2569323A0;
  sub_2397990BC((uint64_t)__p);
  sub_23949CF28((uint64_t)__p, &stru_2569323A0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569323A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569323B8);
  return &stru_2569323A0;
}

void sub_23979907C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2569323B8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2569323B8);
  _Unwind_Resume(a1);
}

void sub_2397990BC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569323D8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569323D8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Rgb8u>]", qword_2569323C0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569323C0, &dword_23940C000);
    __cxa_guard_release(&qword_2569323D8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569323F8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569323F8))
  {
    v5 = sub_239423A18(qword_2569323C0, "<", 0);
    sub_239423914(qword_2569323C0, 0, v5, qword_2569323E0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569323E0, &dword_23940C000);
    __cxa_guard_release(&qword_2569323F8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256932418);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932418))
  {
    sub_239A44118((std::string::size_type)qword_2569323E0, (std::string *)&xmmword_256932400);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932400, &dword_23940C000);
    __cxa_guard_release(&qword_256932418);
  }
  if (byte_256932417 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256932400, *((unint64_t *)&xmmword_256932400 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256932400;
    *(_QWORD *)(a1 + 16) = unk_256932410;
  }
}

void sub_239799258(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932418);
  _Unwind_Resume(a1);
}

void sub_239799270(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569323F8);
  _Unwind_Resume(a1);
}

void sub_239799288(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569323D8);
  _Unwind_Resume(a1);
}

__int128 *sub_2397992A0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932458);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932458))
    return &xmmword_256932440;
  v2 = sub_23979937C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256932440, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256932450 = v2->__r_.__value_.__r.__words[2];
    xmmword_256932440 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932440, &dword_23940C000);
  __cxa_guard_release(&qword_256932458);
  return &xmmword_256932440;
}

void sub_239799364(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932458);
  _Unwind_Resume(a1);
}

std::string *sub_23979937C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932478);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932478))
    return &stru_256932460;
  sub_23979946C((uint64_t)__p);
  sub_239762EF0((uint64_t)__p, &stru_256932460);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932460, &dword_23940C000);
  __cxa_guard_release(&qword_256932478);
  return &stru_256932460;
}

void sub_23979942C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256932478);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256932478);
  _Unwind_Resume(a1);
}

void sub_23979946C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256932498);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256932498))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Rgb16u>]", qword_256932480);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932480, &dword_23940C000);
    __cxa_guard_release(&qword_256932498);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569324B8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569324B8))
  {
    v5 = sub_239423A18(qword_256932480, "<", 0);
    sub_239423914(qword_256932480, 0, v5, qword_2569324A0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569324A0, &dword_23940C000);
    __cxa_guard_release(&qword_2569324B8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569324D8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569324D8))
  {
    sub_239A44118((std::string::size_type)qword_2569324A0, (std::string *)&xmmword_2569324C0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569324C0, &dword_23940C000);
    __cxa_guard_release(&qword_2569324D8);
  }
  if (byte_2569324D7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_2569324C0, *((unint64_t *)&xmmword_2569324C0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2569324C0;
    *(_QWORD *)(a1 + 16) = unk_2569324D0;
  }
}

void sub_239799608(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569324D8);
  _Unwind_Resume(a1);
}

void sub_239799620(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569324B8);
  _Unwind_Resume(a1);
}

void sub_239799638(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932498);
  _Unwind_Resume(a1);
}

__int128 *sub_239799650()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932518);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932518))
    return &xmmword_256932500;
  v2 = sub_23979972C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256932500, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256932510 = v2->__r_.__value_.__r.__words[2];
    xmmword_256932500 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932500, &dword_23940C000);
  __cxa_guard_release(&qword_256932518);
  return &xmmword_256932500;
}

void sub_239799714(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932518);
  _Unwind_Resume(a1);
}

std::string *sub_23979972C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932538);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932538))
    return &stru_256932520;
  sub_23979981C((uint64_t)__p);
  sub_23970AB44((uint64_t)__p, &stru_256932520);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932520, &dword_23940C000);
  __cxa_guard_release(&qword_256932538);
  return &stru_256932520;
}

void sub_2397997DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256932538);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256932538);
  _Unwind_Resume(a1);
}

void sub_23979981C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256932558);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256932558))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Bgra8u>]", qword_256932540);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932540, &dword_23940C000);
    __cxa_guard_release(&qword_256932558);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256932578);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256932578))
  {
    v5 = sub_239423A18(qword_256932540, "<", 0);
    sub_239423914(qword_256932540, 0, v5, qword_256932560);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932560, &dword_23940C000);
    __cxa_guard_release(&qword_256932578);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256932598);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932598))
  {
    sub_239A44118((std::string::size_type)qword_256932560, (std::string *)&xmmword_256932580);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932580, &dword_23940C000);
    __cxa_guard_release(&qword_256932598);
  }
  if (byte_256932597 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256932580, *((unint64_t *)&xmmword_256932580 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256932580;
    *(_QWORD *)(a1 + 16) = unk_256932590;
  }
}

void sub_2397999B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932598);
  _Unwind_Resume(a1);
}

void sub_2397999D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932578);
  _Unwind_Resume(a1);
}

void sub_2397999E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932558);
  _Unwind_Resume(a1);
}

__int128 *sub_239799A00()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569325D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569325D8))
    return &xmmword_2569325C0;
  v2 = sub_239799ADC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_2569325C0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569325D0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2569325C0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569325C0, &dword_23940C000);
  __cxa_guard_release(&qword_2569325D8);
  return &xmmword_2569325C0;
}

void sub_239799AC4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569325D8);
  _Unwind_Resume(a1);
}

std::string *sub_239799ADC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569325F8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569325F8))
    return &stru_2569325E0;
  sub_239799BCC((uint64_t)__p);
  sub_23961B920((uint64_t)__p, &stru_2569325E0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569325E0, &dword_23940C000);
  __cxa_guard_release(&qword_2569325F8);
  return &stru_2569325E0;
}

void sub_239799B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2569325F8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2569325F8);
  _Unwind_Resume(a1);
}

void sub_239799BCC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256932618);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256932618))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Rgba16f>]", qword_256932600);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932600, &dword_23940C000);
    __cxa_guard_release(&qword_256932618);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256932638);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256932638))
  {
    v5 = sub_239423A18(qword_256932600, "<", 0);
    sub_239423914(qword_256932600, 0, v5, qword_256932620);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932620, &dword_23940C000);
    __cxa_guard_release(&qword_256932638);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256932658);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932658))
  {
    sub_239A44118((std::string::size_type)qword_256932620, (std::string *)&xmmword_256932640);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932640, &dword_23940C000);
    __cxa_guard_release(&qword_256932658);
  }
  if (byte_256932657 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256932640, *((unint64_t *)&xmmword_256932640 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256932640;
    *(_QWORD *)(a1 + 16) = unk_256932650;
  }
}

void sub_239799D68(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932658);
  _Unwind_Resume(a1);
}

void sub_239799D80(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932638);
  _Unwind_Resume(a1);
}

void sub_239799D98(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932618);
  _Unwind_Resume(a1);
}

__int128 *sub_239799DB0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932698);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932698))
    return &xmmword_256932680;
  v2 = sub_239799E8C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256932680, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256932690 = v2->__r_.__value_.__r.__words[2];
    xmmword_256932680 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932680, &dword_23940C000);
  __cxa_guard_release(&qword_256932698);
  return &xmmword_256932680;
}

void sub_239799E74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932698);
  _Unwind_Resume(a1);
}

std::string *sub_239799E8C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569326B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569326B8))
    return &stru_2569326A0;
  sub_239799F7C((uint64_t)__p);
  sub_23961A650((uint64_t)__p, &stru_2569326A0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569326A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569326B8);
  return &stru_2569326A0;
}

void sub_239799F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2569326B8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2569326B8);
  _Unwind_Resume(a1);
}

void sub_239799F7C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569326D8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569326D8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Rgba32f>]", qword_2569326C0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569326C0, &dword_23940C000);
    __cxa_guard_release(&qword_2569326D8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569326F8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569326F8))
  {
    v5 = sub_239423A18(qword_2569326C0, "<", 0);
    sub_239423914(qword_2569326C0, 0, v5, qword_2569326E0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569326E0, &dword_23940C000);
    __cxa_guard_release(&qword_2569326F8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256932718);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932718))
  {
    sub_239A44118((std::string::size_type)qword_2569326E0, (std::string *)&xmmword_256932700);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932700, &dword_23940C000);
    __cxa_guard_release(&qword_256932718);
  }
  if (byte_256932717 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256932700, *((unint64_t *)&xmmword_256932700 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256932700;
    *(_QWORD *)(a1 + 16) = unk_256932710;
  }
}

void sub_23979A118(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932718);
  _Unwind_Resume(a1);
}

void sub_23979A130(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569326F8);
  _Unwind_Resume(a1);
}

void sub_23979A148(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569326D8);
  _Unwind_Resume(a1);
}

__int128 *sub_23979A160()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932758);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932758))
    return &xmmword_256932740;
  v2 = sub_23979A23C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256932740, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256932750 = v2->__r_.__value_.__r.__words[2];
    xmmword_256932740 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932740, &dword_23940C000);
  __cxa_guard_release(&qword_256932758);
  return &xmmword_256932740;
}

void sub_23979A224(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932758);
  _Unwind_Resume(a1);
}

std::string *sub_23979A23C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932778);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932778))
    return &stru_256932760;
  sub_23979A32C((uint64_t)__p);
  sub_239709F7C((uint64_t)__p, &stru_256932760);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932760, &dword_23940C000);
  __cxa_guard_release(&qword_256932778);
  return &stru_256932760;
}

void sub_23979A2EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256932778);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256932778);
  _Unwind_Resume(a1);
}

void sub_23979A32C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256932798);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256932798))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Argb8u>]", qword_256932780);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932780, &dword_23940C000);
    __cxa_guard_release(&qword_256932798);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569327B8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569327B8))
  {
    v5 = sub_239423A18(qword_256932780, "<", 0);
    sub_239423914(qword_256932780, 0, v5, qword_2569327A0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569327A0, &dword_23940C000);
    __cxa_guard_release(&qword_2569327B8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569327D8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569327D8))
  {
    sub_239A44118((std::string::size_type)qword_2569327A0, (std::string *)&xmmword_2569327C0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569327C0, &dword_23940C000);
    __cxa_guard_release(&qword_2569327D8);
  }
  if (byte_2569327D7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_2569327C0, *((unint64_t *)&xmmword_2569327C0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2569327C0;
    *(_QWORD *)(a1 + 16) = unk_2569327D0;
  }
}

void sub_23979A4C8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569327D8);
  _Unwind_Resume(a1);
}

void sub_23979A4E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569327B8);
  _Unwind_Resume(a1);
}

void sub_23979A4F8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932798);
  _Unwind_Resume(a1);
}

__int128 *sub_23979A510()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932818);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932818))
    return &xmmword_256932800;
  v2 = sub_23979A5EC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256932800, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256932810 = v2->__r_.__value_.__r.__words[2];
    xmmword_256932800 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932800, &dword_23940C000);
  __cxa_guard_release(&qword_256932818);
  return &xmmword_256932800;
}

void sub_23979A5D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932818);
  _Unwind_Resume(a1);
}

std::string *sub_23979A5EC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256932838);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932838))
    return &stru_256932820;
  sub_23979A6DC((uint64_t)__p);
  sub_239766B18((uint64_t)__p, &stru_256932820);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932820, &dword_23940C000);
  __cxa_guard_release(&qword_256932838);
  return &stru_256932820;
}

void sub_23979A69C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256932838);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256932838);
  _Unwind_Resume(a1);
}

void sub_23979A6DC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256932858);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256932858))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVImageBuffer<img::Format::Argb16u>]", qword_256932840);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932840, &dword_23940C000);
    __cxa_guard_release(&qword_256932858);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256932878);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256932878))
  {
    v5 = sub_239423A18(qword_256932840, "<", 0);
    sub_239423914(qword_256932840, 0, v5, qword_256932860);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256932860, &dword_23940C000);
    __cxa_guard_release(&qword_256932878);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256932898);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932898))
  {
    sub_239A44118((std::string::size_type)qword_256932860, (std::string *)&xmmword_256932880);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932880, &dword_23940C000);
    __cxa_guard_release(&qword_256932898);
  }
  if (byte_256932897 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256932880, *((unint64_t *)&xmmword_256932880 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256932880;
    *(_QWORD *)(a1 + 16) = unk_256932890;
  }
}

void sub_23979A878(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932898);
  _Unwind_Resume(a1);
}

void sub_23979A890(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932878);
  _Unwind_Resume(a1);
}

void sub_23979A8A8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932858);
  _Unwind_Resume(a1);
}

void sub_23979A8C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 971, a3, a4);
}

void sub_23979A8C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 331, a3, a4);
}

void sub_23979A8D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 325, a3, a4);
}

void sub_23979A8D8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 343, a3, a4);
}

void sub_23979A8E0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 674, a3, a4);
}

void sub_23979A8E8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 704, a3, a4);
}

void sub_23979A8F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 693, a3, a4);
}

void sub_23979A8F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 691, a3, a4);
}

void sub_23979A900(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 689, a3, a4);
}

void sub_23979A908(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 707, a3, a4);
}

void sub_23979A910(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 706, a3, a4);
}

uint64_t sub_23979A918(uint64_t a1)
{
  uint64_t *v1;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(uint64_t **)(a1 + 8);
  if (!v1)
    goto LABEL_19;
  v4 = *v1;
  v3 = (std::__shared_weak_count *)v1[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
LABEL_19:
    sub_239EC2A50();
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetPixelFormatType(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetPixelFormatType(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetPixelFormatType(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetPixelFormatType(v9);
}

BOOL sub_23979AA14(uint64_t a1)
{
  uint64_t *v1;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(uint64_t **)(a1 + 8);
  if (!v1)
    goto LABEL_18;
  v4 = *v1;
  v3 = (std::__shared_weak_count *)v1[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
LABEL_18:
    sub_239EC2A80();
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = *(__CVBuffer **)v8;
    v10 = *(std::__shared_weak_count **)(v8 + 8);
    if (v10)
    {
      v11 = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      do
        v13 = __ldaxr(v11);
      while (__stlxr(v13 - 1, v11));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  else
  {
    v9 = 0;
  }
  return CVPixelBufferIsPlanar(v9) != 0;
}

size_t sub_23979AAF8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, size_t a3@<X2>, unsigned __int8 a4@<W3>, unint64_t *a5@<X8>)
{
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  size_t result;

  v9 = a4;
  if (a4)
    v10 = a3;
  else
    v10 = 0;
  v11 = sub_23979AD1C(a1, v10);
  if (v9)
  {
    v12 = sub_23979C9CC(a1, a3);
    v13 = sub_23979CBD4(a1, a3);
    result = sub_23979CDDC(a1, a3);
  }
  else
  {
    v12 = sub_23979C8D0(a1);
    v13 = sub_23979CAD8(a1);
    result = sub_23979CCE0(a1);
  }
  *a5 = v12 | ((unint64_t)v13 << 32);
  a5[1] = a2 | (result << 32);
  a5[2] = v11;
  return result;
}

size_t sub_23979ABAC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, size_t a3@<X2>, unsigned __int8 a4@<W3>, unint64_t *a5@<X8>)
{
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  size_t result;

  v9 = a4;
  if (a4)
    v10 = a3;
  else
    v10 = 0;
  v11 = sub_23979AD1C(a1, v10);
  if (v9)
  {
    v12 = sub_23979C9CC(a1, a3);
    v13 = sub_23979CBD4(a1, a3);
    result = sub_23979CDDC(a1, a3);
  }
  else
  {
    v12 = sub_23979C8D0(a1);
    v13 = sub_23979CAD8(a1);
    result = sub_23979CCE0(a1);
  }
  *a5 = v12 | ((unint64_t)v13 << 32);
  a5[1] = a2 | ((unint64_t)(result >> 1) << 32);
  a5[2] = v11;
  return result;
}

size_t sub_23979AC64@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, size_t a3@<X2>, unsigned __int8 a4@<W3>, unint64_t *a5@<X8>)
{
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  size_t result;

  v9 = a4;
  if (a4)
    v10 = a3;
  else
    v10 = 0;
  v11 = sub_23979AD1C(a1, v10);
  if (v9)
  {
    v12 = sub_23979C9CC(a1, a3);
    v13 = sub_23979CBD4(a1, a3);
    result = sub_23979CDDC(a1, a3);
  }
  else
  {
    v12 = sub_23979C8D0(a1);
    v13 = sub_23979CAD8(a1);
    result = sub_23979CCE0(a1);
  }
  *a5 = v12 | ((unint64_t)v13 << 32);
  a5[1] = a2 | ((unint64_t)(result >> 2) << 32);
  a5[2] = v11;
  return result;
}

uint64_t sub_23979AD1C(uint64_t a1, unsigned int a2)
{
  uint64_t *v2;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t **v16;
  uint64_t *v17;

  v2 = *(uint64_t **)(a1 + 8);
  if (!v2)
    goto LABEL_15;
  v6 = *v2;
  v5 = (std::__shared_weak_count *)v2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (!v6)
LABEL_15:
    sub_239EC2AB0();
  v15 = *(_QWORD *)(a1 + 8);
  v10 = v15;
  v11 = atomic_load((unint64_t *)(v15 + 104));
  if (v11 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v15 + 104), &v16, (void (__cdecl *)(void *))sub_23979FA1C);
  }
  if (a2 >= (unint64_t)((uint64_t)(*(_QWORD *)(v10 + 120) - *(_QWORD *)(v10 + 112)) >> 3))
    sub_239EC2AE0();
  v12 = *(_QWORD *)(a1 + 8);
  v15 = v12;
  v13 = atomic_load((unint64_t *)(v12 + 104));
  if (v13 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v12 + 104), &v16, (void (__cdecl *)(void *))sub_23979FA1C);
  }
  return *(_QWORD *)(*(_QWORD *)(v12 + 112) + 8 * a2);
}

unint64_t sub_23979AE34(uint64_t a1, int a2, int a3, size_t planeIndex, char a5)
{
  unsigned int v7;
  unsigned int v8;

  if (a5)
  {
    v7 = sub_23979C9CC(a1, planeIndex);
    v8 = sub_23979CBD4(a1, planeIndex);
    sub_23979CDDC(a1, planeIndex);
  }
  else
  {
    v7 = sub_23979C8D0(a1);
    v8 = sub_23979CAD8(a1);
    sub_23979CCE0(a1);
  }
  return v7 | ((unint64_t)v8 << 32);
}

_QWORD *sub_23979AED8(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_250AE94F0;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_250AE94B0;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_2397A11CC(a1[1]);
  }
  return a1;
}

void sub_23979AF9C(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  if (v1[2])
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

_QWORD *sub_23979AFB8(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_250AE94F0;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_250AE94B0;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_2397A11CC(a1[1]);
  }
  return a1;
}

void sub_23979B07C(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  if (v1[2])
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

uint64_t sub_23979B098(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    if (v6)
      sub_2397A13A8(*(_QWORD *)(a1 + 8));
  }
  v10 = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = v10;
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

_QWORD *sub_23979B178(_QWORD *a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = (uint64_t *)a1[1];
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
        if (!v4)
          goto LABEL_9;
        goto LABEL_8;
      }
    }
    if (v4)
LABEL_8:
      sub_2397A13A8(a1[1]);
  }
LABEL_9:
  *a1 = &off_250AE94F0;
  v8 = (std::__shared_weak_count *)a1[2];
  if (!v8)
    return a1;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    return a1;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_23979B264(_QWORD *a1)
{
  sub_23979B178(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23979B288(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_250AE94F0;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_250AE94D0;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_2397A12BC(a1[1]);
  }
  return a1;
}

void sub_23979B34C(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  if (v1[2])
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

_QWORD *sub_23979B368(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_250AE94F0;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_250AE94D0;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_2397A12BC(a1[1]);
  }
  return a1;
}

void sub_23979B42C(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  if (v1[2])
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

uint64_t sub_23979B448(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    if (v6)
      sub_2397A1498(*(_QWORD *)(a1 + 8));
  }
  v10 = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = v10;
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

_QWORD *sub_23979B528(_QWORD *a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = (uint64_t *)a1[1];
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
        if (!v4)
          goto LABEL_9;
        goto LABEL_8;
      }
    }
    if (v4)
LABEL_8:
      sub_2397A1498(a1[1]);
  }
LABEL_9:
  *a1 = &off_250AE94F0;
  v8 = (std::__shared_weak_count *)a1[2];
  if (!v8)
    return a1;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    return a1;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_23979B614(_QWORD *a1)
{
  sub_23979B528(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_23979B63C(__CVBuffer **a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  __CVBuffer *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  size_t PlaneCount;
  unint64_t v9;
  char *v10;
  size_t v11;
  unint64_t *v12;
  unint64_t v13;

  v5 = *a1;
  v4 = (std::__shared_weak_count *)a1[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  if (!v5)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    if (!v4)
      return;
    goto LABEL_14;
  }
  PlaneCount = CVPixelBufferGetPlaneCount(v5);
  if (PlaneCount <= 1)
    v9 = 1;
  else
    v9 = PlaneCount;
  sub_2397A11CC((uint64_t)a1);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  if (v9 >> 61)
    sub_2394189F8();
  v10 = (char *)operator new(8 * v9);
  *a2 = v10;
  a2[2] = &v10[8 * v9];
  bzero(v10, 8 * v9);
  v11 = 0;
  a2[1] = &v10[8 * v9];
  do
  {
    *(_QWORD *)&v10[8 * v11] = CVPixelBufferGetBaseAddressOfPlane(v5, v11);
    ++v11;
  }
  while (v9 != v11);
  sub_2397A13A8((uint64_t)a1);
  if (v4)
  {
LABEL_14:
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_23979B784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  void *v10;

  *(_QWORD *)(v9 + 8) = v10;
  operator delete(v10);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23979B7D0(CVPixelBufferRef *a1@<X0>, _QWORD *a2@<X8>)
{
  IOSurfaceRef IOSurface;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  IOSurfaceRef v8;
  std::__shared_weak_count *v9;

  IOSurface = CVPixelBufferGetIOSurface(*a1);
  sub_23979B88C(&v8, IOSurface);
  if (v8)
    sub_239910424(&v8, a2);
  else
    sub_23979B63C(a1, a2);
  v5 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_23979B878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_23979B88C(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    j__CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_250AE9568;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_23979B8EC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23979B904(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

std::__shared_weak_count_vtbl **sub_23979B918(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_23979FB2C(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE9608;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_23979B9F4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23979BA0C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_23979BA20(_QWORD *a1, std::__shared_weak_count_vtbl *a2, int a3, int a4)
{
  std::__shared_weak_count *v6;
  std::__shared_weak_count_vtbl *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count_vtbl *v26;
  std::__shared_weak_count *v27;
  std::__shared_weak_count_vtbl *v28;
  std::__shared_weak_count *v29;

  sub_23979B918(&v26, a2, a3);
  v7 = v26;
  v6 = v27;
  v28 = v26;
  v29 = v27;
  if (v27)
  {
    p_shared_owners = (unint64_t *)&v27->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  *a1 = &off_250AE94F0;
  v10 = (char *)operator new(0xA0uLL);
  v11 = v10;
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_250AE95B8;
  v12 = v10 + 24;
  if (v6)
  {
    v13 = (unint64_t *)&v6->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    *((_QWORD *)v10 + 3) = v7;
    *((_QWORD *)v10 + 4) = v6;
    do
      v15 = __ldxr(v13);
    while (__stxr(v15 + 1, v13));
  }
  else
  {
    *((_QWORD *)v10 + 3) = v7;
    *((_QWORD *)v10 + 4) = 0;
  }
  *((_DWORD *)v10 + 10) = a4;
  *((_QWORD *)v10 + 6) = a4 == 1;
  *((_QWORD *)v10 + 7) = a4 == 2;
  *((_QWORD *)v10 + 8) = 850045863;
  v16 = 0uLL;
  *(_OWORD *)(v10 + 72) = 0u;
  *(_OWORD *)(v10 + 88) = 0u;
  *(_OWORD *)(v10 + 104) = 0u;
  *((_QWORD *)v10 + 15) = 0;
  if (v6)
  {
    v17 = (unint64_t *)&v6->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      v16 = 0uLL;
    }
  }
  *((_OWORD *)v11 + 8) = v16;
  *((_OWORD *)v11 + 9) = v16;
  a1[1] = v12;
  a1[2] = v11;
  v19 = v29;
  if (v29)
  {
    v20 = (unint64_t *)&v29->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v22 = v27;
  if (v27)
  {
    v23 = (unint64_t *)&v27->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  return a1;
}

void sub_23979BBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23979BBE8(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  std::runtime_error *exception;
  uint64_t v8;
  std::string v9;
  uint64_t (**v10)(_QWORD);
  __int128 v11;
  char v12;

  sub_23979D4CC(a2, a3, a4, a5, (uint64_t)&v10);
  if (!v12)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v8 = sub_23979C3C0((uint64_t)&v10);
    sub_23979E190("Failed to create CVPixelBuffer: ", v8, &v9);
    std::runtime_error::runtime_error(exception, &v9);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *(_QWORD *)a1 = &off_250AE94F0;
  *(_OWORD *)(a1 + 8) = v11;
  v11 = 0uLL;
  return (*v10)(&v10);
}

void sub_23979BCB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
    {
LABEL_6:
      sub_2396231B8((uint64_t)&a15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

_QWORD *sub_23979BCF4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_250AE94F0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_23979BD68(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t a4, unsigned int a5)
{
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _BYTE v13[16];
  __int128 v14;
  _BYTE v15[8];
  __int128 v16;

  v13[0] = 0;
  v13[8] = 0;
  sub_2397A0854(&v14, a2, a3, a4, a5, (uint64_t)v13);
  sub_23979BBE8((uint64_t)v15, a2, a3, a4, (uint64_t)&v14);
  *(_QWORD *)a1 = &off_250AE94F0;
  *(_OWORD *)(a1 + 8) = v16;
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (!*((_QWORD *)&v14 + 1))
    return a1;
  v10 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_23979BE34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23979BE48(unsigned int *a1@<X0>, OSType a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  std::string::size_type size;
  std::string *p_p;
  uint64_t v14;
  uint64_t *v15;
  int v16;
  BOOL v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  CVReturn v23;
  CVReturn v24;
  std::string::size_type v25;
  std::string *v26;
  uint64_t v27;
  uint64_t *v28;
  CVReturn v29;
  BOOL v30;
  uint64_t *v31;
  std::string::size_type v32;
  unsigned __int8 v33;
  uint64_t v34;
  CVPixelBufferRef v35;
  std::__shared_weak_count *v36;
  unint64_t *p_shared_owners;
  char *v38;
  char *v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  CVPixelBufferRef v47;
  std::string __p;
  CVPixelBufferRef v49;
  std::string v50;
  OSType pixelFormatType;
  std::string *v52;
  std::string::size_type v53;
  _QWORD v54[3];

  v54[2] = *MEMORY[0x24BDAC8D0];
  pixelFormatType = a2;
  if (sub_23978DF18(a2) >= 2)
  {
    sub_23979DC9C("unknown function", " cannot be used to create a planar view CVPixelBufferRef, but given format is planar ", &pixelFormatType, &__p);
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = __p.__r_.__value_.__l.__size_;
    LODWORD(v49) = -6661;
    v52 = p_p;
    v53 = size;
    sub_23979E5E0();
    v14 = qword_25693C7C0;
    if (!qword_25693C7C0)
      goto LABEL_17;
    v15 = &qword_25693C7C0;
    do
    {
      v16 = *(_DWORD *)(v14 + 32);
      v17 = v16 < -6661;
      if (v16 >= -6661)
        v18 = (uint64_t *)v14;
      else
        v18 = (uint64_t *)(v14 + 8);
      if (!v17)
        v15 = (uint64_t *)v14;
      v14 = *v18;
    }
    while (*v18);
    if (v15 != &qword_25693C7C0 && *((int *)v15 + 8) < -6660)
    {
      sub_23979E5E0();
      sub_23979F0DC((uint64_t)&v52, ": ", (uint64_t)(v15 + 5), &v50);
    }
    else
    {
LABEL_17:
      sub_23979E5E0();
      sub_23979EFF8((uint64_t)&v52, &v50);
    }
LABEL_49:
    v54[0] = v50.__r_.__value_.__l.__size_;
    v32 = v50.__r_.__value_.__r.__words[0];
    *(_QWORD *)((char *)v54 + 7) = *(std::string::size_type *)((char *)&v50.__r_.__value_.__r.__words[1] + 7);
    v33 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
    memset(&v50, 0, sizeof(v50));
    *(_DWORD *)a6 = (_DWORD)v49;
    v34 = v54[0];
    *(_QWORD *)(a6 + 8) = v32;
    *(_QWORD *)(a6 + 16) = v34;
    *(_QWORD *)(a6 + 23) = *(_QWORD *)((char *)v54 + 7);
    *(_WORD *)(a6 + 31) = v33;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    return;
  }
  v47 = 0;
  if ((a4 & 0xFF00000000) != 0)
  {
    if (*(_BYTE *)(a5 + 32))
      goto LABEL_20;
LABEL_29:
    v23 = CVPixelBufferCreateWithBytes((CFAllocatorRef)*MEMORY[0x24BDBD240], *a1, a1[1], a2, a3, a4, 0, 0, 0, &v47);
    goto LABEL_32;
  }
  v21 = *a1;
  LODWORD(a4) = sub_23978E540(a2) * v21;
  v22 = sub_23979F69C(a2) - 1;
  if (v22 > 2)
  {
    if (!*(_BYTE *)(a5 + 32))
      goto LABEL_29;
  }
  else
  {
    LODWORD(a4) = a4 * dword_239EEF7D4[(char)v22];
    if (!*(_BYTE *)(a5 + 32))
      goto LABEL_29;
  }
LABEL_20:
  v19 = (_QWORD *)operator new();
  v20 = *(_QWORD *)(a5 + 24);
  if (v20)
  {
    if (v20 == a5)
    {
      v19[3] = v19;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a5 + 24))(a5, v19);
      goto LABEL_31;
    }
    v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 16))(v20);
  }
  v19[3] = v20;
LABEL_31:
  v23 = CVPixelBufferCreateWithBytes((CFAllocatorRef)*MEMORY[0x24BDBD240], *a1, a1[1], pixelFormatType, a3, a4, (CVPixelBufferReleaseBytesCallback)sub_23979F8DC, v19, 0, &v47);
LABEL_32:
  v24 = v23;
  if (v23)
  {
    sub_23979DE78("unknown function", " for format ", &pixelFormatType, " and size ", a1, &__p);
    v25 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = &__p;
    else
      v26 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v25 = __p.__r_.__value_.__l.__size_;
    LODWORD(v49) = v24;
    v52 = v26;
    v53 = v25;
    sub_23979E5E0();
    v27 = qword_25693C7C0;
    if (!qword_25693C7C0)
      goto LABEL_48;
    v28 = &qword_25693C7C0;
    do
    {
      v29 = *(_DWORD *)(v27 + 32);
      v30 = v29 < v24;
      if (v29 >= v24)
        v31 = (uint64_t *)v27;
      else
        v31 = (uint64_t *)(v27 + 8);
      if (!v30)
        v28 = (uint64_t *)v27;
      v27 = *v31;
    }
    while (*v31);
    if (v28 != &qword_25693C7C0 && *((_DWORD *)v28 + 8) <= v24)
    {
      sub_23979E5E0();
      sub_23979F0DC((uint64_t)&v52, ": ", (uint64_t)(v28 + 5), &v50);
    }
    else
    {
LABEL_48:
      sub_23979E5E0();
      sub_23979EFF8((uint64_t)&v52, &v50);
    }
    goto LABEL_49;
  }
  v35 = v47;
  v49 = v47;
  v36 = (std::__shared_weak_count *)operator new();
  v36->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v36->__shared_owners_;
  v36->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE9608;
  v36->__shared_weak_owners_ = 0;
  v36[1].__vftable = (std::__shared_weak_count_vtbl *)v35;
  v50.__r_.__value_.__r.__words[0] = (std::string::size_type)v36;
  v38 = (char *)operator new(0xA0uLL);
  v39 = v38;
  *((_QWORD *)v38 + 1) = 0;
  *((_QWORD *)v38 + 2) = 0;
  *(_QWORD *)v38 = &off_250AE95B8;
  v40 = v38 + 24;
  do
    v41 = __ldxr(p_shared_owners);
  while (__stxr(v41 + 1, p_shared_owners));
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v36;
  do
    v42 = __ldxr(p_shared_owners);
  while (__stxr(v42 + 1, p_shared_owners));
  *((_DWORD *)v38 + 10) = 0;
  *((_QWORD *)v38 + 6) = 0;
  *((_QWORD *)v38 + 7) = 0;
  *((_QWORD *)v38 + 8) = 850045863;
  *(_OWORD *)(v38 + 72) = 0u;
  *(_OWORD *)(v38 + 88) = 0u;
  *(_OWORD *)(v38 + 104) = 0u;
  *((_QWORD *)v38 + 15) = 0;
  do
    v43 = __ldaxr(p_shared_owners);
  while (__stlxr(v43 - 1, p_shared_owners));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
    std::__shared_weak_count::__release_weak(v36);
  }
  *((_OWORD *)v39 + 8) = 0u;
  *((_OWORD *)v39 + 9) = 0u;
  *(_QWORD *)a6 = &off_250AE94F0;
  *(_QWORD *)(a6 + 8) = v40;
  *(_QWORD *)(a6 + 16) = v39;
  *(_BYTE *)(a6 + 32) = 1;
  v44 = (std::__shared_weak_count *)v50.__r_.__value_.__r.__words[0];
  if (v50.__r_.__value_.__r.__words[0])
  {
    v45 = (unint64_t *)(v50.__r_.__value_.__r.__words[0] + 8);
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_23979C324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23979C338(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  const void *v17;

  if (a2)
  {
    __cxa_begin_catch(exception_object);
    if (v17)
      j__CFRelease(v17);
    __cxa_rethrow();
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23979C3C0(uint64_t result)
{
  _QWORD *exception;

  if (*(_BYTE *)(result + 32))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_250ADD7A8;
    __cxa_throw(exception, (struct type_info *)&unk_250ADD780, (void (*)(void *))std::exception::~exception);
  }
  return result;
}

void sub_23979C400(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AE94F0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23979C474(uint64_t a1)
{
  uint64_t *v1;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;

  v1 = *(uint64_t **)(a1 + 8);
  if (v1)
  {
    v4 = *v1;
    v3 = (std::__shared_weak_count *)v1[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        return *(unsigned int *)(*(_QWORD *)(a1 + 8) + 16);
    }
    else
    {
LABEL_7:
      if (v4)
        return *(unsigned int *)(*(_QWORD *)(a1 + 8) + 16);
    }
  }
  return 0;
}

_QWORD *sub_23979C50C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23979AED8(a2, a1);
}

_QWORD *sub_23979C518@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23979B288(a2, a1);
}

void sub_23979C524(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_weak_owners;
  unint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
    do
      v6 = __ldxr(p_shared_weak_owners);
    while (__stxr(v6 + 1, p_shared_weak_owners));
    do
      v7 = __ldxr(p_shared_weak_owners);
    while (__stxr(v7 + 1, p_shared_weak_owners));
    std::__shared_weak_count::__release_weak(v3);
  }
  *a2 = v4;
  a2[1] = v3;
}

uint64_t sub_23979C580(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;

  v1 = *(uint64_t **)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *v1;
  v3 = (std::__shared_weak_count *)v1[1];
  if (!v3)
    return v2;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldxr(p_shared_owners);
  while (__stxr(v5 + 1, p_shared_owners));
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
    return v2;
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return v2;
}

unint64_t sub_23979C610(uint64_t a1)
{
  uint64_t *v1;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int Width;
  uint64_t v15;
  __CVBuffer *v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;

  v1 = *(uint64_t **)(a1 + 8);
  if (!v1)
    goto LABEL_26;
  v4 = *v1;
  v3 = (std::__shared_weak_count *)v1[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
LABEL_26:
    sub_239EC0070();
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = *(__CVBuffer **)v8;
    v10 = *(std::__shared_weak_count **)(v8 + 8);
    if (v10)
    {
      v11 = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      do
        v13 = __ldaxr(v11);
      while (__stlxr(v13 - 1, v11));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    Width = CVPixelBufferGetWidth(v9);
    v15 = *(_QWORD *)(a1 + 8);
    if (v15)
      goto LABEL_17;
LABEL_24:
    v16 = 0;
    return Width | ((unint64_t)CVPixelBufferGetHeight(v16) << 32);
  }
  Width = CVPixelBufferGetWidth(0);
  v15 = *(_QWORD *)(a1 + 8);
  if (!v15)
    goto LABEL_24;
LABEL_17:
  v16 = *(__CVBuffer **)v15;
  v17 = *(std::__shared_weak_count **)(v15 + 8);
  if (v17)
  {
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return Width | ((unint64_t)CVPixelBufferGetHeight(v16) << 32);
}

unint64_t sub_23979C768(uint64_t a1, size_t planeIndex)
{
  uint64_t *v2;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int WidthOfPlane;
  uint64_t v17;
  __CVBuffer *v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;

  v2 = *(uint64_t **)(a1 + 8);
  if (!v2)
    goto LABEL_26;
  v6 = *v2;
  v5 = (std::__shared_weak_count *)v2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (!v6)
LABEL_26:
    sub_239EC1ABC();
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = *(__CVBuffer **)v10;
    v12 = *(std::__shared_weak_count **)(v10 + 8);
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    WidthOfPlane = CVPixelBufferGetWidthOfPlane(v11, planeIndex);
    v17 = *(_QWORD *)(a1 + 8);
    if (v17)
      goto LABEL_17;
LABEL_24:
    v18 = 0;
    return WidthOfPlane | ((unint64_t)CVPixelBufferGetHeightOfPlane(v18, planeIndex) << 32);
  }
  WidthOfPlane = CVPixelBufferGetWidthOfPlane(0, planeIndex);
  v17 = *(_QWORD *)(a1 + 8);
  if (!v17)
    goto LABEL_24;
LABEL_17:
  v18 = *(__CVBuffer **)v17;
  v19 = *(std::__shared_weak_count **)(v17 + 8);
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  return WidthOfPlane | ((unint64_t)CVPixelBufferGetHeightOfPlane(v18, planeIndex) << 32);
}

size_t sub_23979C8D0(uint64_t a1)
{
  uint64_t *v1;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(uint64_t **)(a1 + 8);
  if (!v1)
    goto LABEL_19;
  v4 = *v1;
  v3 = (std::__shared_weak_count *)v1[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
LABEL_19:
    sub_239EC2B10();
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetWidth(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetWidth(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetWidth(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetWidth(v9);
}

size_t sub_23979C9CC(uint64_t a1, size_t planeIndex)
{
  uint64_t *v2;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;

  v2 = *(uint64_t **)(a1 + 8);
  if (!v2)
    goto LABEL_19;
  v6 = *v2;
  v5 = (std::__shared_weak_count *)v2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (!v6)
LABEL_19:
    sub_239EC2B40();
  v10 = *(_QWORD *)(a1 + 8);
  if (!v10)
    return CVPixelBufferGetWidthOfPlane(0, planeIndex);
  v11 = *(__CVBuffer **)v10;
  v12 = *(std::__shared_weak_count **)(v10 + 8);
  if (!v12)
    return CVPixelBufferGetWidthOfPlane(v11, planeIndex);
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
    return CVPixelBufferGetWidthOfPlane(v11, planeIndex);
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return CVPixelBufferGetWidthOfPlane(v11, planeIndex);
}

size_t sub_23979CAD8(uint64_t a1)
{
  uint64_t *v1;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(uint64_t **)(a1 + 8);
  if (!v1)
    goto LABEL_19;
  v4 = *v1;
  v3 = (std::__shared_weak_count *)v1[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
LABEL_19:
    sub_239EC2B70();
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetHeight(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetHeight(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetHeight(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetHeight(v9);
}

size_t sub_23979CBD4(uint64_t a1, size_t planeIndex)
{
  uint64_t *v2;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;

  v2 = *(uint64_t **)(a1 + 8);
  if (!v2)
    goto LABEL_19;
  v6 = *v2;
  v5 = (std::__shared_weak_count *)v2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (!v6)
LABEL_19:
    sub_239EC2BA0();
  v10 = *(_QWORD *)(a1 + 8);
  if (!v10)
    return CVPixelBufferGetHeightOfPlane(0, planeIndex);
  v11 = *(__CVBuffer **)v10;
  v12 = *(std::__shared_weak_count **)(v10 + 8);
  if (!v12)
    return CVPixelBufferGetHeightOfPlane(v11, planeIndex);
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
    return CVPixelBufferGetHeightOfPlane(v11, planeIndex);
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return CVPixelBufferGetHeightOfPlane(v11, planeIndex);
}

size_t sub_23979CCE0(uint64_t a1)
{
  uint64_t *v1;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(uint64_t **)(a1 + 8);
  if (!v1)
    goto LABEL_19;
  v4 = *v1;
  v3 = (std::__shared_weak_count *)v1[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v4)
LABEL_19:
    sub_239EC2BD0();
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetBytesPerRow(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetBytesPerRow(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetBytesPerRow(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetBytesPerRow(v9);
}

size_t sub_23979CDDC(uint64_t a1, size_t planeIndex)
{
  uint64_t *v2;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;

  v2 = *(uint64_t **)(a1 + 8);
  if (!v2)
    goto LABEL_19;
  v6 = *v2;
  v5 = (std::__shared_weak_count *)v2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (!v6)
LABEL_19:
    sub_239EC2C00();
  v10 = *(_QWORD *)(a1 + 8);
  if (!v10)
    return CVPixelBufferGetBytesPerRowOfPlane(0, planeIndex);
  v11 = *(__CVBuffer **)v10;
  v12 = *(std::__shared_weak_count **)(v10 + 8);
  if (!v12)
    return CVPixelBufferGetBytesPerRowOfPlane(v11, planeIndex);
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
    return CVPixelBufferGetBytesPerRowOfPlane(v11, planeIndex);
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return CVPixelBufferGetBytesPerRowOfPlane(v11, planeIndex);
}

uint64_t sub_23979CEE8(uint64_t a1, unsigned int a2)
{
  uint64_t *v2;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t **v16;
  uint64_t *v17;

  v2 = *(uint64_t **)(a1 + 8);
  if (!v2)
    goto LABEL_15;
  v6 = *v2;
  v5 = (std::__shared_weak_count *)v2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (!v6)
LABEL_15:
    sub_239EC0BCC();
  v15 = *(_QWORD *)(a1 + 8);
  v10 = v15;
  v11 = atomic_load((unint64_t *)(v15 + 104));
  if (v11 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v15 + 104), &v16, (void (__cdecl *)(void *))sub_23979FA1C);
  }
  if (a2 >= (unint64_t)((uint64_t)(*(_QWORD *)(v10 + 120) - *(_QWORD *)(v10 + 112)) >> 3))
    sub_239EBEF40();
  v12 = *(_QWORD *)(a1 + 8);
  v15 = v12;
  v13 = atomic_load((unint64_t *)(v12 + 104));
  if (v13 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v12 + 104), &v16, (void (__cdecl *)(void *))sub_23979FA1C);
  }
  return *(_QWORD *)(*(_QWORD *)(v12 + 112) + 8 * a2);
}

_QWORD *sub_23979D000@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *IOSurface;

  v3 = *(uint64_t **)(a1 + 8);
  if (!v3)
    goto LABEL_18;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (!v6)
LABEL_18:
    sub_239EC2C30();
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = *(__CVBuffer **)v10;
    v12 = *(std::__shared_weak_count **)(v10 + 8);
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  else
  {
    v11 = 0;
  }
  IOSurface = (std::__shared_weak_count_vtbl *)CVPixelBufferGetIOSurface(v11);
  return sub_23991061C(a2, IOSurface, 1, 0);
}

uint64_t sub_23979D0F0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  v2 = *(uint64_t **)(result + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = v2[1];
    *a2 = v4;
    a2[1] = v3;
    if (v3)
    {
      v5 = (unint64_t *)(v3 + 8);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

BOOL sub_23979D124(uint64_t a1, CFTypeRef cf2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  const void **v11;
  const void *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  const void *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;

  v3 = *(uint64_t **)(a1 + 8);
  if (!v3)
  {
    v17 = 0;
    v10 = cf2 != 0;
    return (v17 == 0) & ~v10;
  }
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v10 = cf2 != 0;
    v11 = *(const void ***)(a1 + 8);
    if (!cf2)
    {
LABEL_18:
      if (v11)
      {
        v17 = *v11;
        v18 = (std::__shared_weak_count *)v11[1];
        if (v18)
        {
          v19 = (unint64_t *)&v18->__shared_owners_;
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
          do
            v21 = __ldaxr(v19);
          while (__stlxr(v21 - 1, v19));
          if (!v21)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
      }
      else
      {
        v17 = 0;
      }
      return (v17 == 0) & ~v10;
    }
  }
  else
  {
LABEL_7:
    v10 = cf2 != 0;
    v11 = *(const void ***)(a1 + 8);
    if (!cf2)
      goto LABEL_18;
  }
  if (!v6)
    goto LABEL_18;
  if (v11)
  {
    v12 = *v11;
    v13 = (std::__shared_weak_count *)v11[1];
    if (v13)
    {
      v14 = (unint64_t *)&v13->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }
  else
  {
    v12 = 0;
  }
  return CFEqual(v12, cf2) != 0;
}

void sub_23979D2AC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v4 = (std::__shared_weak_count *)a1[1];
  if (v4 && (v5 = std::__shared_weak_count::lock(v4)) != 0)
  {
    v6 = v5;
    v7 = *a1;
    *a2 = &off_250AE94F0;
    if (v7)
    {
      a2[1] = v7;
      a2[2] = v5;
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }
    else
    {
      a2[1] = 0;
      a2[2] = 0;
    }
    v10 = (unint64_t *)&v5->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  else
  {
    a2[1] = 0;
    a2[2] = 0;
    *a2 = &off_250AE94F0;
  }
}

void sub_23979D37C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  int64x2_t v4;
  int8x16_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  void *v10;
  char v11;
  void *v12;
  char *v13;
  unint64_t v14;
  void *__p[2];
  char *v16;

  v12 = 0;
  v13 = 0;
  v14 = 0;
  v13 = sub_239583C68(&v12, "{");
  LOBYTE(__p[0]) = 1;
  __p[1] = &v12;
  v16 = &v11;
  sub_23979FBB8(a1, (uint64_t)__p);
  v6 = v13;
  if ((unint64_t)v13 >= v14)
  {
    v7 = sub_239583C68(&v12, "}");
  }
  else
  {
    v13[23] = 1;
    *(_WORD *)v6 = 125;
    v7 = v6 + 24;
  }
  v13 = v7;
  HIBYTE(v16) = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v12, (uint64_t)v7, (uint64_t)__p, a2, v4, v5);
  if (SHIBYTE(v16) < 0)
    operator delete(__p[0]);
  v8 = (char *)v12;
  if (v12)
  {
    v9 = v13;
    v10 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*(v9 - 1) < 0)
          operator delete(*((void **)v9 - 3));
        v9 -= 24;
      }
      while (v9 != v8);
      v10 = v12;
    }
    v13 = v8;
    operator delete(v10);
  }
}

void sub_23979D494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_23941A260(&a11);
    _Unwind_Resume(a1);
  }
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_23979D4CC(unsigned int *a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  const __CFAllocator *v12;
  size_t v13;
  size_t v14;
  OSType v15;
  CVReturn v16;
  CVReturn v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::string::size_type v21;
  std::string *v22;
  uint64_t v23;
  uint64_t *v24;
  CVReturn v25;
  BOOL v26;
  uint64_t *v27;
  std::string::size_type v28;
  unsigned __int8 v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  void *__p;
  std::string v35;
  std::string v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  CVPixelBufferRef pixelBufferOut;
  OSType v40;
  _QWORD v41[2];
  _QWORD v42[3];

  v42[2] = *MEMORY[0x24BDAC8D0];
  v40 = a2;
  pixelBufferOut = 0;
  sub_23979F58C(&v37, a4);
  sub_2397A08C0((uint64_t)&v37, &v36);
  if (v36.__r_.__value_.__s.__data_[16])
  {
    sub_239910CD4((uint64_t)&v36, (std::string *)&__p);
    if (v35.__r_.__value_.__s.__data_[16])
    {
      if (v35.__r_.__value_.__s.__data_[15] < 0)
        operator delete(__p);
    }
    else
    {
      sub_239910D98((uint64_t)&v36, a3);
    }
    if (v36.__r_.__value_.__s.__data_[16])
    {
      size = (std::__shared_weak_count *)v36.__r_.__value_.__l.__size_;
      if (v36.__r_.__value_.__l.__size_)
      {
        v10 = (unint64_t *)(v36.__r_.__value_.__l.__size_ + 8);
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
          std::__shared_weak_count::__release_weak(size);
        }
      }
    }
  }
  v12 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v13 = *a1;
  v14 = a1[1];
  v15 = v40;
  sub_2397A08A0((uint64_t)&v37, &__p);
  v16 = CVPixelBufferCreate(v12, v13, v14, v15, (CFDictionaryRef)__p, &pixelBufferOut);
  v17 = v16;
  v18 = (std::__shared_weak_count *)v35.__r_.__value_.__r.__words[0];
  if (v35.__r_.__value_.__r.__words[0])
  {
    v19 = (unint64_t *)(v35.__r_.__value_.__r.__words[0] + 8);
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (v17)
        goto LABEL_17;
LABEL_36:
      sub_23979BA20(&__p, (std::__shared_weak_count_vtbl *)pixelBufferOut, 0, 0);
      *(_QWORD *)a5 = &off_250AE94F0;
      *(_OWORD *)(a5 + 8) = *(_OWORD *)&v35.__r_.__value_.__l.__data_;
      *(_BYTE *)(a5 + 32) = 1;
      goto LABEL_37;
    }
  }
  if (!v16)
    goto LABEL_36;
LABEL_17:
  sub_23979D870("unknown function", " for format ", &v40, " and size ", a1, ", used attributes:\n", a4, &v36);
  v21 = HIBYTE(v36.__r_.__value_.__r.__words[2]);
  if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v22 = &v36;
  else
    v22 = (std::string *)v36.__r_.__value_.__r.__words[0];
  if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v21 = v36.__r_.__value_.__l.__size_;
  LODWORD(__p) = v17;
  v41[0] = v22;
  v41[1] = v21;
  sub_23979E5E0();
  v23 = qword_25693C7C0;
  if (!qword_25693C7C0)
    goto LABEL_32;
  v24 = &qword_25693C7C0;
  do
  {
    v25 = *(_DWORD *)(v23 + 32);
    v26 = v25 < v17;
    if (v25 >= v17)
      v27 = (uint64_t *)v23;
    else
      v27 = (uint64_t *)(v23 + 8);
    if (!v26)
      v24 = (uint64_t *)v23;
    v23 = *v27;
  }
  while (*v27);
  if (v24 != &qword_25693C7C0 && *((_DWORD *)v24 + 8) <= v17)
  {
    sub_23979E5E0();
    sub_23979F0DC((uint64_t)v41, ": ", (uint64_t)(v24 + 5), &v35);
  }
  else
  {
LABEL_32:
    sub_23979E5E0();
    sub_23979EFF8((uint64_t)v41, &v35);
  }
  v42[0] = v35.__r_.__value_.__l.__size_;
  v28 = v35.__r_.__value_.__r.__words[0];
  *(_QWORD *)((char *)v42 + 7) = *(std::string::size_type *)((char *)&v35.__r_.__value_.__r.__words[1] + 7);
  v29 = HIBYTE(v35.__r_.__value_.__r.__words[2]);
  memset(&v35, 0, sizeof(v35));
  *(_DWORD *)a5 = (_DWORD)__p;
  v30 = v42[0];
  *(_QWORD *)(a5 + 8) = v28;
  *(_QWORD *)(a5 + 16) = v30;
  *(_QWORD *)(a5 + 23) = *(_QWORD *)((char *)v42 + 7);
  *(_WORD *)(a5 + 31) = v29;
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v36.__r_.__value_.__l.__data_);
LABEL_37:
  v31 = v38;
  if (v38)
  {
    p_shared_owners = (unint64_t *)&v38->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
}

void sub_23979D7F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_239600F8C((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_23979D818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_23979D84C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0)
    operator delete(__p);
  sub_239416DA0((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_23979D870(const char *a1@<X0>, const char *a2@<X1>, unsigned int *a3@<X2>, const char *a4@<X3>, unsigned int *a5@<X4>, const char *a6@<X5>, uint64_t a7@<X6>, std::string *a8@<X8>)
{
  char *v15;
  const char *v16;
  uint64_t v17;
  size_t v18;
  size_t v19;
  std::string *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  size_t v26;
  size_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  unint64_t v34;
  char *v35;
  size_t v36;
  size_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int64x2_t v42;
  int8x16_t v43;
  void *v44;
  unint64_t v45;
  void *v46;
  unsigned int *v47;
  char v48;
  void *v49;
  unint64_t v50;
  unint64_t v51;
  void *__p[2];
  uint64_t v53;

  v49 = 0;
  v50 = 0;
  v51 = 0;
  v15 = sub_23979FE68(&v49, a1);
  v50 = (unint64_t)v15;
  if ((unint64_t)v15 >= v51)
  {
    v22 = sub_2397A0094(&v49, a2);
    goto LABEL_12;
  }
  v47 = a5;
  v16 = a6;
  v17 = a7;
  v18 = strlen(a2);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = v18;
  v20 = a8;
  if (v18 >= 0x17)
  {
    v23 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v23 = v18 | 7;
    v24 = v23 + 1;
    v21 = operator new(v23 + 1);
    *((_QWORD *)v15 + 1) = v19;
    *((_QWORD *)v15 + 2) = v24 | 0x8000000000000000;
    *(_QWORD *)v15 = v21;
  }
  else
  {
    v15[23] = v18;
    v21 = v15;
    if (!v18)
      goto LABEL_11;
  }
  memmove(v21, a2, v19);
LABEL_11:
  *((_BYTE *)v21 + v19) = 0;
  v22 = v15 + 24;
  a8 = v20;
  a7 = v17;
  a6 = v16;
  a5 = v47;
LABEL_12:
  v50 = (unint64_t)v22;
  sub_23978D910((uint64_t)&v48, (uint64_t)&v49, a3);
  v25 = (char *)v50;
  if (v50 >= v51)
  {
    v29 = sub_239729540(&v49, a4);
    goto LABEL_23;
  }
  v26 = strlen(a4);
  if (v26 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v27 = v26;
  if (v26 >= 0x17)
  {
    v30 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v30 = v26 | 7;
    v31 = v30 + 1;
    v28 = operator new(v30 + 1);
    *((_QWORD *)v25 + 1) = v27;
    *((_QWORD *)v25 + 2) = v31 | 0x8000000000000000;
    *(_QWORD *)v25 = v28;
  }
  else
  {
    *(_BYTE *)(v50 + 23) = v26;
    v28 = v25;
    if (!v26)
      goto LABEL_22;
  }
  memmove(v28, a4, v27);
LABEL_22:
  *((_BYTE *)v28 + v27) = 0;
  v29 = v25 + 24;
LABEL_23:
  v50 = (unint64_t)v29;
  sub_2397A02C0(a5);
  v32 = (_OWORD *)v50;
  if (v50 < v51)
  {
    v33 = *(_OWORD *)__p;
    *(_QWORD *)(v50 + 16) = v53;
    *v32 = v33;
    v34 = (unint64_t)v32 + 24;
    v50 = (unint64_t)v32 + 24;
    if ((unint64_t)v32 + 24 >= v51)
      goto LABEL_38;
LABEL_28:
    v36 = strlen(a6);
    if (v36 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v37 = v36;
    if (v36 >= 0x17)
    {
      v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v36 | 7) != 0x17)
        v39 = v36 | 7;
      v40 = v39 + 1;
      v38 = operator new(v39 + 1);
      *(_QWORD *)(v34 + 8) = v37;
      *(_QWORD *)(v34 + 16) = v40 | 0x8000000000000000;
      *(_QWORD *)v34 = v38;
    }
    else
    {
      *(_BYTE *)(v34 + 23) = v36;
      v38 = (void *)v34;
      if (!v36)
        goto LABEL_36;
    }
    memmove(v38, a6, v37);
LABEL_36:
    *((_BYTE *)v38 + v37) = 0;
    v41 = (char *)(v34 + 24);
    goto LABEL_39;
  }
  v35 = sub_23941ACDC(&v49, (uint64_t)__p);
  v34 = (unint64_t)v35;
  v50 = (unint64_t)v35;
  if (SHIBYTE(v53) < 0)
  {
    operator delete(__p[0]);
    v34 = v50;
    if (v50 < v51)
      goto LABEL_28;
  }
  else if ((unint64_t)v35 < v51)
  {
    goto LABEL_28;
  }
LABEL_38:
  v41 = sub_2397355AC(&v49, a6);
LABEL_39:
  v50 = (unint64_t)v41;
  sub_23979FD94((uint64_t)__p, (uint64_t)&v49, a7);
  HIBYTE(v53) = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v49, v50, (uint64_t)__p, a8, v42, v43);
  if (SHIBYTE(v53) < 0)
    operator delete(__p[0]);
  v44 = v49;
  if (v49)
  {
    v45 = v50;
    v46 = v49;
    if ((void *)v50 != v49)
    {
      do
      {
        if (*(char *)(v45 - 1) < 0)
          operator delete(*(void **)(v45 - 24));
        v45 -= 24;
      }
      while ((void *)v45 != v44);
      v46 = v49;
    }
    v50 = (unint64_t)v44;
    operator delete(v46);
  }
}

void sub_23979DC00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_23979DC9C(const char *a1@<X0>, const char *a2@<X1>, unsigned int *a3@<X2>, std::string *a4@<X8>)
{
  char *v7;
  size_t v8;
  size_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64x2_t v14;
  int8x16_t v15;
  char *v16;
  void **v17;
  void *v18;
  void *v19;
  char *v20;
  unint64_t v21;
  void *__p[2];
  char v23;

  v19 = 0;
  v20 = 0;
  v21 = 0;
  v7 = sub_23979FE68(&v19, a1);
  v20 = v7;
  if ((unint64_t)v7 >= v21)
  {
    v11 = sub_2397A0390(&v19, a2);
    goto LABEL_12;
  }
  v8 = strlen(a2);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v9 = v8;
  if (v8 >= 0x17)
  {
    v12 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v12 = v8 | 7;
    v13 = v12 + 1;
    v10 = operator new(v12 + 1);
    *((_QWORD *)v7 + 1) = v9;
    *((_QWORD *)v7 + 2) = v13 | 0x8000000000000000;
    *(_QWORD *)v7 = v10;
  }
  else
  {
    v7[23] = v8;
    v10 = v7;
    if (!v8)
      goto LABEL_11;
  }
  memmove(v10, a2, v9);
LABEL_11:
  *((_BYTE *)v10 + v9) = 0;
  v11 = v7 + 24;
LABEL_12:
  v20 = v11;
  sub_23978D910((uint64_t)__p, (uint64_t)&v19, a3);
  v23 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v19, (uint64_t)v20, (uint64_t)__p, a4, v14, v15);
  if (v23 < 0)
    operator delete(__p[0]);
  v16 = (char *)v19;
  if (v19)
  {
    v17 = (void **)v20;
    v18 = v19;
    if (v20 != v19)
    {
      do
      {
        if (*((char *)v17 - 1) < 0)
          operator delete(*(v17 - 3));
        v17 -= 3;
      }
      while (v17 != (void **)v16);
      v18 = v19;
    }
    v20 = v16;
    operator delete(v18);
  }
}

void sub_23979DE20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_23979DE78(const char *a1@<X0>, const char *a2@<X1>, unsigned int *a3@<X2>, const char *a4@<X3>, unsigned int *a5@<X4>, std::string *a6@<X8>)
{
  char *v11;
  size_t v12;
  size_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  size_t v19;
  size_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int64x2_t v25;
  int8x16_t v26;
  _OWORD *v27;
  __int128 v28;
  char *v29;
  char *v30;
  void **v31;
  void *v32;
  char v33;
  void *v34;
  char *v35;
  unint64_t v36;
  void *__p[2];
  uint64_t v38;

  v34 = 0;
  v35 = 0;
  v36 = 0;
  v11 = sub_23979FE68(&v34, a1);
  v35 = v11;
  if ((unint64_t)v11 >= v36)
  {
    v15 = sub_2397A0094(&v34, a2);
    goto LABEL_12;
  }
  v12 = strlen(a2);
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v13 = v12;
  if (v12 >= 0x17)
  {
    v16 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v16 = v12 | 7;
    v17 = v16 + 1;
    v14 = operator new(v16 + 1);
    *((_QWORD *)v11 + 1) = v13;
    *((_QWORD *)v11 + 2) = v17 | 0x8000000000000000;
    *(_QWORD *)v11 = v14;
  }
  else
  {
    v11[23] = v12;
    v14 = v11;
    if (!v12)
      goto LABEL_11;
  }
  memmove(v14, a2, v13);
LABEL_11:
  *((_BYTE *)v14 + v13) = 0;
  v15 = v11 + 24;
LABEL_12:
  v35 = v15;
  sub_23978D910((uint64_t)&v33, (uint64_t)&v34, a3);
  v18 = v35;
  if ((unint64_t)v35 >= v36)
  {
    v22 = sub_239729540(&v34, a4);
    goto LABEL_23;
  }
  v19 = strlen(a4);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v20 = v19;
  if (v19 >= 0x17)
  {
    v23 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v23 = v19 | 7;
    v24 = v23 + 1;
    v21 = operator new(v23 + 1);
    *((_QWORD *)v18 + 1) = v20;
    *((_QWORD *)v18 + 2) = v24 | 0x8000000000000000;
    *(_QWORD *)v18 = v21;
  }
  else
  {
    v35[23] = v19;
    v21 = v18;
    if (!v19)
      goto LABEL_22;
  }
  memmove(v21, a4, v20);
LABEL_22:
  *((_BYTE *)v21 + v20) = 0;
  v22 = v18 + 24;
LABEL_23:
  v35 = v22;
  sub_239627F08(a5);
  v27 = v35;
  if ((unint64_t)v35 >= v36)
  {
    v29 = sub_23941ACDC(&v34, (uint64_t)__p);
    v35 = v29;
    if (SHIBYTE(v38) < 0)
    {
      operator delete(__p[0]);
      v29 = v35;
    }
  }
  else
  {
    v28 = *(_OWORD *)__p;
    *((_QWORD *)v35 + 2) = v38;
    *v27 = v28;
    v29 = (char *)v27 + 24;
    v35 = (char *)v27 + 24;
  }
  HIBYTE(v38) = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v34, (uint64_t)v29, (uint64_t)__p, a6, v25, v26);
  if (SHIBYTE(v38) < 0)
    operator delete(__p[0]);
  v30 = (char *)v34;
  if (v34)
  {
    v31 = (void **)v35;
    v32 = v34;
    if (v35 != v34)
    {
      do
      {
        if (*((char *)v31 - 1) < 0)
          operator delete(*(v31 - 3));
        v31 -= 3;
      }
      while (v31 != (void **)v30);
      v32 = v34;
    }
    v35 = v30;
    operator delete(v32);
  }
}

void sub_23979E114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_23941A260(&a11);
    _Unwind_Resume(a1);
  }
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_23979E190(const char *a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  int64x2_t v5;
  int8x16_t v6;
  _OWORD *v7;
  __int128 v8;
  char *v9;
  char *v10;
  char *v11;
  void *v12;
  void *v13;
  char *v14;
  unint64_t v15;
  void *__p[2];
  uint64_t v17;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  v14 = sub_23979E2DC(&v13, a1);
  sub_23979E508(a2);
  v7 = v14;
  if ((unint64_t)v14 >= v15)
  {
    v9 = sub_23941ACDC(&v13, (uint64_t)__p);
    v14 = v9;
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      v9 = v14;
    }
  }
  else
  {
    v8 = *(_OWORD *)__p;
    *((_QWORD *)v14 + 2) = v17;
    *v7 = v8;
    v9 = (char *)v7 + 24;
    v14 = (char *)v7 + 24;
  }
  HIBYTE(v17) = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v13, (uint64_t)v9, (uint64_t)__p, a3, v5, v6);
  if (SHIBYTE(v17) < 0)
    operator delete(__p[0]);
  v10 = (char *)v13;
  if (v13)
  {
    v11 = v14;
    v12 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*(v11 - 1) < 0)
          operator delete(*((void **)v11 - 3));
        v11 -= 24;
      }
      while (v11 != v10);
      v12 = v13;
    }
    v14 = v10;
    operator delete(v12);
  }
}

void sub_23979E29C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

char *sub_23979E2DC(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23979E4F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_23979E508(uint64_t a1)
{
  _QWORD *v2;
  std::string *p_p;
  std::string::size_type size;
  uint64_t v6;
  _QWORD v7[2];
  std::string __p;

  sub_239A43D24(&v6);
  v2 = (_QWORD *)sub_239A43E64(&v6);
  v7[0] = a1;
  v7[1] = a1 + 8;
  sub_23979D37C((uint64_t)v7, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_239458500(v2, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  sub_239A43E70();
  return sub_239A43DB8(&v6);
}

void sub_23979E5A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_239A43DB8(&a9);
    _Unwind_Resume(a1);
  }
  sub_239A43DB8(&a9);
  _Unwind_Resume(a1);
}

void sub_23979E5E0()
{
  unsigned __int8 v0;
  int v1;
  void *v2;
  __int128 v3;
  int v4;
  void *v5;
  __int128 v6;
  int v7;
  void *v8;
  __int128 v9;
  int v10;
  void *__p;
  __int128 v12;
  int v13;
  void *v14[3];
  int v15;
  char *v16;
  __int128 v17;
  int v18;
  char *v19;
  __int128 v20;
  int v21;
  char *v22;
  __int128 v23;
  int v24;
  char *v25;
  __int128 v26;
  void *v27[3];
  char v28;
  int v29;
  char *v30;
  __int128 v31;
  void *v32[3];
  char v33;
  int v34;
  char *v35;
  __int128 v36;
  int v37;
  char *v38;
  __int128 v39;
  int v40;
  char *v41;
  __int128 v42;
  int v43;
  char *v44;
  __int128 v45;
  int v46;
  char *v47;
  __int128 v48;
  int v49;
  char *v50;
  __int128 v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25693C7B0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25693C7B0))
  {
    v1 = 0;
    v2 = operator new(0x48uLL);
    v3 = xmmword_239EEF490;
    strcpy((char *)v2, "kCVReturnSuccess: Function executed successfully without errors.");
    v4 = -6660;
    v5 = operator new(0x38uLL);
    v6 = xmmword_239EC9590;
    strcpy((char *)v5, "kCVReturnError: Function executed with unknown error.");
    v7 = -6661;
    v8 = operator new(0x78uLL);
    v9 = xmmword_239EEF4A0;
    strcpy((char *)v8, "kCVReturnInvalidArgument: At least one of the arguments passed in is not valid. Either out of range or the wrong type.");
    v10 = -6662;
    __p = operator new(0x78uLL);
    v12 = xmmword_239EEF4B0;
    strcpy((char *)__p, "kCVReturnAllocationFailed: The allocation for a buffer or buffer pool failed. Most likely because of lack of resources.");
    v13 = -6663;
    HIBYTE(v14[2]) = 20;
    strcpy((char *)v14, "kCVReturnUnsupported");
    v15 = -6670;
    v16 = (char *)operator new(0x58uLL);
    v17 = xmmword_239EEF4C0;
    strcpy(v16, "kCVReturnInvalidDisplay: A CVDisplayLink cannot be created for the given DisplayRef.");
    v18 = -6671;
    v19 = (char *)operator new(0x58uLL);
    v20 = xmmword_239EEF4D0;
    strcpy(v19, "kCVReturnDisplayLinkAlreadyRunning: The CVDisplayLink is already started and running.");
    v21 = -6672;
    v22 = (char *)operator new(0x48uLL);
    v23 = xmmword_239EEF4E0;
    strcpy(v22, "kCVReturnDisplayLinkNotRunning: The CVDisplayLink has not been started.");
    v24 = -6673;
    v25 = (char *)operator new(0x48uLL);
    v26 = xmmword_239EEF4F0;
    strcpy(v25, "kCVReturnDisplayLinkCallbacksNotSet: The output callback is not set.");
    sub_23979F334((uint64_t)v27, -6680, "kCVReturnInvalidPixelFormat: The requested pixelformat is not supported for the CVBuffer type.");
    v29 = -6681;
    v30 = (char *)operator new(0x68uLL);
    v31 = xmmword_239EEF500;
    strcpy(v30, "kCVReturnInvalidSize: The requested size (most likely too big) is not supported for the CVBuffer type.");
    sub_23979F334((uint64_t)v32, -6682, "kCVReturnInvalidPixelBufferAttributes: A CVBuffer cannot be created with the given attributes.");
    v34 = -6683;
    v35 = (char *)operator new(0xA0uLL);
    v36 = xmmword_239EEF510;
    strcpy(v35, "kCVReturnPixelBufferNotOpenGLCompatible: The Buffer cannot be used with OpenGL as either its size, pixelformat or attributes are not supported by OpenGL.");
    v37 = -6684;
    v38 = (char *)operator new(0x98uLL);
    v39 = xmmword_239EEF520;
    strcpy(v38, "kCVReturnPixelBufferNotMetalCompatible: The Buffer cannot be used with Metal as either its size, pixelformat or attributes are not supported by Metal.");
    v40 = -6689;
    v41 = (char *)operator new(0xB8uLL);
    v42 = xmmword_239EEF530;
    strcpy(v41, "kCVReturnWouldExceedAllocationThreshold: The allocation request failed because it would have exceeded a specified allocation threshold (see kCVPixelBufferPoolAllocationThresholdKey).");
    v43 = -6690;
    v44 = (char *)operator new(0xA0uLL);
    v45 = xmmword_239EC64A0;
    strcpy(v44, "kCVReturnPoolAllocationFailed: The allocation for the buffer pool failed. Most likely because of lack of resources. Check if your parameters are in range.");
    v46 = -6691;
    v47 = (char *)operator new(0x60uLL);
    v48 = xmmword_239EEF540;
    strcpy(v47, "kCVReturnInvalidPoolAttributes: A CVBufferPool cannot be created with the given attributes.");
    v49 = -6692;
    v50 = (char *)operator new(0x88uLL);
    v51 = xmmword_239EEF550;
    strcpy(v50, "kCVReturnRetry: a scan hasn't completely traversed the CVBufferPool due to a concurrent operation. The client can retry the scan.");
    sub_23979F3E8((uint64_t)&unk_25693C7B8, &v1, 18);
    if (SHIBYTE(v51) < 0)
    {
      operator delete(v50);
      if ((SHIBYTE(v48) & 0x80000000) == 0)
      {
LABEL_6:
        if ((SHIBYTE(v45) & 0x80000000) == 0)
          goto LABEL_7;
        goto LABEL_25;
      }
    }
    else if ((SHIBYTE(v48) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v47);
    if ((SHIBYTE(v45) & 0x80000000) == 0)
    {
LABEL_7:
      if ((SHIBYTE(v42) & 0x80000000) == 0)
        goto LABEL_8;
      goto LABEL_26;
    }
LABEL_25:
    operator delete(v44);
    if ((SHIBYTE(v42) & 0x80000000) == 0)
    {
LABEL_8:
      if ((SHIBYTE(v39) & 0x80000000) == 0)
        goto LABEL_9;
      goto LABEL_27;
    }
LABEL_26:
    operator delete(v41);
    if ((SHIBYTE(v39) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(v36) & 0x80000000) == 0)
        goto LABEL_10;
      goto LABEL_28;
    }
LABEL_27:
    operator delete(v38);
    if ((SHIBYTE(v36) & 0x80000000) == 0)
    {
LABEL_10:
      if ((v33 & 0x80000000) == 0)
        goto LABEL_11;
      goto LABEL_29;
    }
LABEL_28:
    operator delete(v35);
    if ((v33 & 0x80000000) == 0)
    {
LABEL_11:
      if ((SHIBYTE(v31) & 0x80000000) == 0)
        goto LABEL_12;
      goto LABEL_30;
    }
LABEL_29:
    operator delete(v32[1]);
    if ((SHIBYTE(v31) & 0x80000000) == 0)
    {
LABEL_12:
      if ((v28 & 0x80000000) == 0)
        goto LABEL_13;
      goto LABEL_31;
    }
LABEL_30:
    operator delete(v30);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v26) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_32;
    }
LABEL_31:
    operator delete(v27[1]);
    if ((SHIBYTE(v26) & 0x80000000) == 0)
    {
LABEL_14:
      if ((SHIBYTE(v23) & 0x80000000) == 0)
        goto LABEL_15;
      goto LABEL_33;
    }
LABEL_32:
    operator delete(v25);
    if ((SHIBYTE(v23) & 0x80000000) == 0)
    {
LABEL_15:
      if ((SHIBYTE(v20) & 0x80000000) == 0)
        goto LABEL_16;
      goto LABEL_34;
    }
LABEL_33:
    operator delete(v22);
    if ((SHIBYTE(v20) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v17) & 0x80000000) == 0)
        goto LABEL_17;
      goto LABEL_35;
    }
LABEL_34:
    operator delete(v19);
    if ((SHIBYTE(v17) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(v14[2]) & 0x80000000) == 0)
        goto LABEL_18;
      goto LABEL_36;
    }
LABEL_35:
    operator delete(v16);
    if ((SHIBYTE(v14[2]) & 0x80000000) == 0)
    {
LABEL_18:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_19;
      goto LABEL_37;
    }
LABEL_36:
    operator delete(v14[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_19:
      if ((SHIBYTE(v9) & 0x80000000) == 0)
        goto LABEL_20;
      goto LABEL_38;
    }
LABEL_37:
    operator delete(__p);
    if ((SHIBYTE(v9) & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v6) & 0x80000000) == 0)
        goto LABEL_21;
      goto LABEL_39;
    }
LABEL_38:
    operator delete(v8);
    if ((SHIBYTE(v6) & 0x80000000) == 0)
    {
LABEL_21:
      if ((SHIBYTE(v3) & 0x80000000) == 0)
      {
LABEL_22:
        __cxa_atexit((void (*)(void *))sub_23979F464, &unk_25693C7B8, &dword_23940C000);
        __cxa_guard_release(&qword_25693C7B0);
        return;
      }
LABEL_40:
      operator delete(v2);
      goto LABEL_22;
    }
LABEL_39:
    operator delete(v5);
    if ((SHIBYTE(v3) & 0x80000000) == 0)
      goto LABEL_22;
    goto LABEL_40;
  }
}

void sub_23979EDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  char a72;
  char a73;
  char a74;
  char a75;
  char a76;
  char a77;
  char a78;
  void **v78;

  if (SLOBYTE(STACK[0x247]) < 0)
  {
    operator delete(v78[69]);
    if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_22;
    }
  }
  else if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v78[65]);
  if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
  {
LABEL_4:
    if ((a78 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_23;
  }
LABEL_22:
  operator delete(v78[61]);
  if ((a78 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a77 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_24;
  }
LABEL_23:
  operator delete(v78[57]);
  if ((a77 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a76 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_24:
  operator delete(v78[53]);
  if ((a76 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a75 & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  operator delete(v78[49]);
  if ((a75 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a74 & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  operator delete(v78[45]);
  if ((a74 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a73 & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_27:
  operator delete(v78[41]);
  if ((a73 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a72 & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  operator delete(v78[37]);
  if ((a72 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a65 & 0x80000000) == 0)
      goto LABEL_12;
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v78[33]);
  if ((a65 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a58 & 0x80000000) == 0)
      goto LABEL_13;
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v78[29]);
  if ((a58 & 0x80000000) == 0)
  {
LABEL_13:
    if ((a51 & 0x80000000) == 0)
      goto LABEL_14;
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v78[25]);
  if ((a51 & 0x80000000) == 0)
  {
LABEL_14:
    if ((a44 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_33;
  }
LABEL_32:
  operator delete(v78[21]);
  if ((a44 & 0x80000000) == 0)
  {
LABEL_15:
    if ((a37 & 0x80000000) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_33:
  operator delete(v78[17]);
  if ((a37 & 0x80000000) == 0)
  {
LABEL_16:
    if ((a30 & 0x80000000) == 0)
      goto LABEL_17;
    goto LABEL_35;
  }
LABEL_34:
  operator delete(__p);
  if ((a30 & 0x80000000) == 0)
  {
LABEL_17:
    if ((a23 & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_36;
  }
LABEL_35:
  operator delete(a25);
  if ((a23 & 0x80000000) == 0)
  {
LABEL_18:
    if ((a16 & 0x80000000) == 0)
    {
LABEL_38:
      __cxa_guard_abort(&qword_25693C7B0);
      _Unwind_Resume(a1);
    }
LABEL_37:
    operator delete(a11);
    __cxa_guard_abort(&qword_25693C7B0);
    _Unwind_Resume(a1);
  }
LABEL_36:
  operator delete(a18);
  if ((a16 & 0x80000000) == 0)
    goto LABEL_38;
  goto LABEL_37;
}

void sub_23979EFF8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *v8;
  void **v9;
  uint64_t v10;
  void *__p[2];
  char v12;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  sub_23965DEA4((uint64_t)__p, (uint64_t)&v8, a1);
  v12 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v8, (uint64_t)v9, (uint64_t)__p, a2, v3, v4);
  if (v12 < 0)
    operator delete(__p[0]);
  v5 = (void **)v8;
  if (v8)
  {
    v6 = v9;
    v7 = v8;
    if (v9 != v8)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = v8;
    }
    v9 = v5;
    operator delete(v7);
  }
}

void sub_23979F0A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_23979F0DC(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  char *v7;
  size_t v8;
  int64x2_t v9;
  int8x16_t v10;
  size_t v11;
  void *v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void *v20;
  void *v21;
  char *v22;
  unint64_t v23;
  void *__p[2];
  char v25;

  v21 = 0;
  v22 = 0;
  v23 = 0;
  sub_23965DEA4((uint64_t)__p, (uint64_t)&v21, a1);
  v7 = v22;
  if ((unint64_t)v22 >= v23)
  {
    v13 = sub_239583E94(&v21, a2);
    v22 = v13;
    if ((unint64_t)v13 >= v23)
      goto LABEL_6;
    goto LABEL_8;
  }
  v8 = strlen(a2);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v8;
  if (v8 >= 0x17)
  {
    v16 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v16 = v8 | 7;
    v17 = v16 + 1;
    v12 = operator new(v16 + 1);
    *((_QWORD *)v7 + 1) = v11;
    *((_QWORD *)v7 + 2) = v17 | 0x8000000000000000;
    *(_QWORD *)v7 = v12;
LABEL_13:
    memmove(v12, a2, v11);
    *((_BYTE *)v12 + v11) = 0;
    v13 = v7 + 24;
    v22 = v7 + 24;
    if ((unint64_t)(v7 + 24) >= v23)
      goto LABEL_6;
    goto LABEL_8;
  }
  v22[23] = v8;
  v12 = v7;
  if (v8)
    goto LABEL_13;
  *v7 = 0;
  v13 = v7 + 24;
  v22 = v7 + 24;
  if ((unint64_t)(v7 + 24) >= v23)
  {
LABEL_6:
    v14 = sub_23941A624((char **)&v21, a3);
    goto LABEL_17;
  }
LABEL_8:
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v13, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    v15 = *(_OWORD *)a3;
    *((_QWORD *)v13 + 2) = *(_QWORD *)(a3 + 16);
    *(_OWORD *)v13 = v15;
  }
  v14 = v13 + 24;
LABEL_17:
  v22 = v14;
  v25 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v21, (uint64_t)v14, (uint64_t)__p, a4, v9, v10);
  if (v25 < 0)
    operator delete(__p[0]);
  v18 = (char *)v21;
  if (v21)
  {
    v19 = v22;
    v20 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*(v19 - 1) < 0)
          operator delete(*((void **)v19 - 3));
        v19 -= 24;
      }
      while (v19 != v18);
      v20 = v21;
    }
    v22 = v18;
    operator delete(v20);
  }
}

void sub_23979F2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_23941A260(&a9);
  _Unwind_Resume(a1);
}

void sub_23979F2DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23979F334(uint64_t a1, int a2, char *__s)
{
  void *v5;
  size_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = a2;
  v5 = (void *)(a1 + 8);
  v6 = strlen(__s);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v7 = v6;
  if (v6 >= 0x17)
  {
    v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v8 = v6 | 7;
    v9 = v8 + 1;
    v5 = operator new(v8 + 1);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v9 | 0x8000000000000000;
    *(_QWORD *)(a1 + 8) = v5;
  }
  else
  {
    *(_BYTE *)(a1 + 31) = v6;
    if (!v6)
      goto LABEL_9;
  }
  memmove(v5, __s, v7);
LABEL_9:
  *((_BYTE *)v5 + v7) = 0;
  return a1;
}

uint64_t sub_23979F3E8(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v6;

  *(_QWORD *)(a1 + 8) = 0;
  v4 = (uint64_t *)(a1 + 8);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  if (a3)
  {
    v6 = 32 * a3;
    do
    {
      sub_23979F48C((_QWORD **)a1, v4, a2, (uint64_t)a2);
      a2 += 8;
      v6 -= 32;
    }
    while (v6);
  }
  return a1;
}

void sub_23979F44C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23958B6B4(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_23979F464(uint64_t a1)
{
  sub_23958B6B4(a1, *(char **)(a1 + 8));
  return a1;
}

char *sub_23979F48C(_QWORD **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;

  v6 = sub_239587504(a1, a2, &v15, &v14, a3);
  if (*v6)
    return (char *)*v6;
  v8 = v6;
  v9 = (char *)operator new(0x40uLL);
  *((_DWORD *)v9 + 8) = *(_DWORD *)a4;
  v10 = v9 + 40;
  if (*(char *)(a4 + 31) < 0)
  {
    sub_23941A7F8(v10, *(void **)(a4 + 8), *(_QWORD *)(a4 + 16));
  }
  else
  {
    *(_OWORD *)v10 = *(_OWORD *)(a4 + 8);
    *((_QWORD *)v9 + 7) = *(_QWORD *)(a4 + 24);
  }
  v11 = v15;
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = v11;
  *v8 = (uint64_t)v9;
  v12 = (_QWORD *)**a1;
  v13 = (uint64_t *)v9;
  if (v12)
  {
    *a1 = v12;
    v13 = (uint64_t *)*v8;
  }
  sub_2394213B8(a1[1], v13);
  a1[2] = (_QWORD *)((char *)a1[2] + 1);
  return v9;
}

void sub_23979F578(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_23979F58C(_QWORD *a1, uint64_t a2)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v4 = *(const void **)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 8);
  v17 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_23962C1EC(&v18, v4);
  v8 = v19;
  *a1 = v18;
  a1[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    v11 = v19;
    if (v19)
    {
      v12 = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (!v17)
    return a1;
  v14 = (unint64_t *)&v17->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return a1;
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  return a1;
}

void sub_23979F688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23979F69C(int a1)
{
  int v1;
  int v2;
  int v4;

  if (a1 <= 1278226533)
  {
    if (a1 > 875704421)
    {
      if (a1 <= 875836533)
      {
        if (a1 == 875704422 || a1 == 875704438)
          return 0;
        v1 = 875836518;
      }
      else
      {
        if (a1 <= 1111970368)
        {
          if (a1 != 875836534)
          {
            v1 = 1094862674;
            goto LABEL_38;
          }
          return 0;
        }
        if (a1 == 1111970369)
          return 0;
        v1 = 1278226488;
      }
LABEL_38:
      if (a1 == v1)
        return 0;
LABEL_44:
      sub_239EC2C60();
    }
    if (a1 <= 843264055)
    {
      if (a1 == 24 || a1 == 32)
        return 0;
      v1 = 842285639;
      goto LABEL_38;
    }
    if (a1 == 843264056)
      return 0;
    if (a1 != 843264102)
    {
      v4 = 843264104;
      goto LABEL_42;
    }
    return 3;
  }
  if (a1 > 1647392358)
  {
    if (a1 > 1717855599)
    {
      if (a1 > 1751410031)
      {
        if (a1 == 1751410032)
          return 2;
        v4 = 1751411059;
        goto LABEL_42;
      }
      if (a1 != 1717855600 && a1 != 1717856627)
        goto LABEL_44;
      return 3;
    }
    if (a1 == 1647392359 || a1 == 1647589490)
      return 1;
    v2 = 1647719521;
LABEL_27:
    if (a1 != v2)
      goto LABEL_44;
    return 1;
  }
  if (a1 <= 1380401728)
  {
    if (a1 == 1278226534)
      return 3;
    if (a1 == 1278226536)
      return 2;
    v2 = 1278226742;
    goto LABEL_27;
  }
  if (a1 == 1380401729)
    return 0;
  if (a1 == 1380410945)
    return 3;
  v4 = 1380411457;
LABEL_42:
  if (a1 != v4)
    goto LABEL_44;
  return 2;
}

uint64_t sub_23979F8DC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;

  v7 = a2;
  v3 = a1[3];
  if (!v3)
    sub_2394172E0();
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v3 + 48))(v3, &v7);
  v4 = (_QWORD *)a1[3];
  if (v4 == a1)
  {
    v5 = 4;
    v4 = a1;
    goto LABEL_6;
  }
  if (v4)
  {
    v5 = 5;
LABEL_6:
    (*(void (**)(void))(*v4 + 8 * v5))();
  }
  return MEMORY[0x23B83E31C](a1, 0x1020C40A5B76CDFLL);
}

void sub_23979F968(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_23979F98C(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    j__CFRelease(v1);
}

uint64_t sub_23979F9AC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_23979FA1C(uint64_t ***a1)
{
  uint64_t v1;
  void *v2;
  double result;
  __int128 v4;
  uint64_t v5;

  v1 = ***a1;
  sub_23979B7D0((CVPixelBufferRef *)v1, &v4);
  v2 = *(void **)(v1 + 112);
  if (v2)
  {
    *(_QWORD *)(v1 + 120) = v2;
    operator delete(v2);
  }
  result = *(double *)&v4;
  *(_OWORD *)(v1 + 112) = v4;
  *(_QWORD *)(v1 + 128) = v5;
  return result;
}

void sub_23979FA74(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE95B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23979FA84(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE95B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_23979FAB4(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *(void **)(a1 + 136);
  if (v2)
  {
    *(_QWORD *)(a1 + 144) = v2;
    operator delete(v2);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 64));
  v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

_QWORD *sub_23979FB2C(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    j__CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_250AE9608;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_23979FB8C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23979FBA4(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

char *sub_23979FBB8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  char *result;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  std::string v21;

  v4 = *(int **)a1;
  if (!*(_BYTE *)a2)
  {
    v5 = *(_QWORD *)(a2 + 8);
    v6 = *(_QWORD *)(v5 + 8);
    if (v6 >= *(_QWORD *)(v5 + 16))
    {
      v7 = sub_239583C68(*(void ***)(a2 + 8), ",");
    }
    else
    {
      *(_BYTE *)(v6 + 23) = 1;
      *(_WORD *)v6 = 44;
      v7 = (char *)(v6 + 24);
      *(_QWORD *)(v5 + 8) = v6 + 24;
    }
    *(_QWORD *)(v5 + 8) = v7;
  }
  *(_BYTE *)a2 = 0;
  v8 = *(_QWORD *)(a2 + 8);
  std::to_string(&v21, *v4);
  v9 = *(_QWORD *)(v8 + 8);
  if (v9 >= *(_QWORD *)(v8 + 16))
  {
    v12 = sub_23941ACDC((void **)v8, (uint64_t)&v21);
    v13 = SHIBYTE(v21.__r_.__value_.__r.__words[2]);
    *(_QWORD *)(v8 + 8) = v12;
    if (v13 < 0)
    {
      operator delete(v21.__r_.__value_.__l.__data_);
      v11 = *(_QWORD *)(a1 + 8);
      if (!*(_BYTE *)a2)
        goto LABEL_17;
    }
    else
    {
      v11 = *(_QWORD *)(a1 + 8);
      if (!*(_BYTE *)a2)
        goto LABEL_17;
    }
  }
  else
  {
    v10 = *(_OWORD *)&v21.__r_.__value_.__l.__data_;
    *(_QWORD *)(v9 + 16) = *((_QWORD *)&v21.__r_.__value_.__l + 2);
    *(_OWORD *)v9 = v10;
    *(_QWORD *)(v8 + 8) = v9 + 24;
    v11 = *(_QWORD *)(a1 + 8);
    if (!*(_BYTE *)a2)
    {
LABEL_17:
      v18 = *(_QWORD *)(a2 + 8);
      v19 = *(_QWORD *)(v18 + 8);
      if (v19 >= *(_QWORD *)(v18 + 16))
      {
        v20 = sub_239583C68(*(void ***)(a2 + 8), ",");
      }
      else
      {
        *(_BYTE *)(v19 + 23) = 1;
        *(_WORD *)v19 = 44;
        v20 = (char *)(v19 + 24);
        *(_QWORD *)(v18 + 8) = v19 + 24;
      }
      *(_QWORD *)(v18 + 8) = v20;
      *(_BYTE *)a2 = 0;
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(_QWORD *)(v14 + 8);
      if (v15 >= *(_QWORD *)(v14 + 16))
        goto LABEL_21;
      goto LABEL_12;
    }
  }
  *(_BYTE *)a2 = 0;
  v14 = *(_QWORD *)(a2 + 8);
  v15 = *(_QWORD *)(v14 + 8);
  if (v15 >= *(_QWORD *)(v14 + 16))
  {
LABEL_21:
    result = sub_23941A624((char **)v14, v11);
    *(_QWORD *)(v14 + 8) = result;
    return result;
  }
LABEL_12:
  if (*(char *)(v11 + 23) < 0)
  {
    sub_23941A7F8((_BYTE *)v15, *(void **)v11, *(_QWORD *)(v11 + 8));
  }
  else
  {
    v16 = *(_OWORD *)v11;
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v11 + 16);
    *(_OWORD *)v15 = v16;
  }
  result = (char *)(v15 + 24);
  *(_QWORD *)(v14 + 8) = v15 + 24;
  *(_QWORD *)(v14 + 8) = v15 + 24;
  return result;
}

void sub_23979FD70(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_23979FD78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23979FD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v11;
  uint64_t v12;

  sub_239A43D24(&v12);
  v5 = (_QWORD *)sub_239A43E64(&v12);
  sub_2397A0A14(v5, a3);
  sub_239A43E70();
  sub_239A43DB8(&v12);
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
    v8 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v9 = SHIBYTE(v11);
    *(_QWORD *)(a2 + 8) = v8;
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v11;
    *(_OWORD *)v6 = v7;
    *(_QWORD *)(a2 + 8) = v6 + 24;
  }
}

void sub_23979FE38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_23979FE68(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_2397A0080(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_2397A0094(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_2397A02AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397A02C0(unsigned int *a1)
{
  _QWORD *v2;
  std::string *p_p;
  std::string::size_type size;
  uint64_t v6;
  std::string __p;

  sub_239A43D24(&v6);
  v2 = (_QWORD *)sub_239A43E64(&v6);
  sub_239627FD8(a1, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_239458500(v2, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  sub_239A43E70();
  return sub_239A43DB8(&v6);
}

void sub_2397A0358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    sub_239A43DB8(&a9);
    _Unwind_Resume(a1);
  }
  sub_239A43DB8(&a9);
  _Unwind_Resume(a1);
}

char *sub_2397A0390(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_2397A05A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397A05C0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_2397A05E4(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    j__CFRelease(v1);
}

uint64_t sub_2397A0604(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2397A0674(unsigned int *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  int v16;

  v16 = a2;
  sub_23962C714(a6);
  sub_2397A0D98((uint64_t)a6, (const void *)*MEMORY[0x24BDC56B8], &v16);
  *(_QWORD *)&v14 = *a1;
  sub_2397A0F04((uint64_t)a6, (const void *)*MEMORY[0x24BDC5708], (uint64_t)&v14);
  v15 = a1[1];
  sub_2397A0F04((uint64_t)a6, (const void *)*MEMORY[0x24BDC5650], (uint64_t)&v15);
  if (a4 > 1)
    goto LABEL_9;
  sub_23962C714(&v14);
  sub_239910D98((uint64_t)&v14, a3);
  sub_2397A1068((uint64_t)a6, (const void *)*MEMORY[0x24BDC5668], (uint64_t)&v14);
  v11 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_6;
  v12 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
  {
LABEL_6:
    if (a4)
      goto LABEL_9;
    goto LABEL_7;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!a4)
  {
LABEL_7:
    *(_QWORD *)&v14 = 0x4000;
    sub_2397A0F04((uint64_t)a6, (const void *)*MEMORY[0x24BDC56C8], (uint64_t)&v14);
  }
LABEL_9:
  if (*(_BYTE *)(a5 + 8))
    sub_2397A0F04((uint64_t)a6, (const void *)*MEMORY[0x24BDC55D0], a5);
}

void sub_2397A07D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_2397A07E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_2397A07FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0(v9);
  _Unwind_Resume(a1);
}

void sub_2397A0818(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_2397A082C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_2397A0840(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

_OWORD *sub_2397A0854(_OWORD *a1, unsigned int *a2, int a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  __int128 v8;

  sub_2397A0674(a2, a3, a4, a5, a6, &v8);
  *a1 = v8;
  return a1;
}

_QWORD *sub_2397A08A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2397A0AB4(a2, a1);
}

void sub_2397A08C0(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  std::__shared_weak_count *v4;
  const __CFDictionary *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  const void *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  _BYTE v14[8];
  std::__shared_weak_count *v15;
  char v16;

  v5 = *(const __CFDictionary **)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      if (v5)
        goto LABEL_7;
LABEL_13:
      v14[0] = 0;
      v16 = 0;
LABEL_14:
      *a2 = 0;
      a2[16] = 0;
      if (!v16)
        return;
      goto LABEL_15;
    }
  }
  if (!v5)
    goto LABEL_13;
LABEL_7:
  v9 = (const void *)*MEMORY[0x24BDC5668];
  *(_QWORD *)&v13 = 0;
  if (!v9 || !sub_23962C8C0(*(const __CFDictionary **)a1, v9, (const void **)&v13))
    goto LABEL_13;
  sub_2397A0C4C((const void *)v13, (uint64_t)v14);
  if (!v16)
    goto LABEL_14;
  sub_239910CD0(&v13, (uint64_t)v14);
  *(_OWORD *)a2 = v13;
  a2[16] = 1;
  if (!v16)
    return;
LABEL_15:
  v10 = v15;
  if (v15)
  {
    v11 = (unint64_t *)&v15->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_2397A0A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239600F8C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397A0A14(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  CFTypeRef cf;
  std::__shared_weak_count *v8;

  sub_2397A0AB4(&cf, a2);
  sub_239628DD4(a1, cf);
  v3 = v8;
  if (!v8)
    return a1;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return a1;
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2397A0A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397A0AB4(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  CFTypeRef v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v3 = *(std::__shared_weak_count **)(a2 + 8);
  v16 = *(CFTypeRef *)a2;
  v17 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2397A0BC0(&v18, &v16);
  v6 = v19;
  *a1 = v18;
  a1[1] = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    v9 = v19;
    if (v19)
    {
      v10 = (unint64_t *)&v19->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  v12 = v17;
  if (!v17)
    return a1;
  v13 = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_2397A0BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397A0BC0(_QWORD *a1, CFTypeRef *a2)
{
  CFTypeRef v3;
  _QWORD *v4;

  v3 = *a2;
  if (*a2)
    j__CFRetain(*a2);
  *a1 = v3;
  v4 = (_QWORD *)operator new();
  *v4 = &off_250AE0880;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = v3;
  a1[1] = v4;
  return a1;
}

void sub_2397A0C20(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_2397A0C38(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2397A0C4C(const void *a1@<X0>, uint64_t a2@<X8>)
{
  CFTypeID TypeID;
  std::__shared_weak_count_vtbl *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  std::__shared_weak_count_vtbl *v13;
  std::__shared_weak_count *v14;
  CFTypeRef cf;

  cf = a1;
  if (a1 && (TypeID = j__CFDictionaryGetTypeID(), sub_239628DA8(&cf, TypeID)) && sub_23962BB30(&cf))
  {
    sub_23962C1EC(&v13, cf);
    v4 = v13;
    v5 = v14;
    v12 = v14;
    if (v14)
    {
      p_shared_owners = (unint64_t *)&v14->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
    }
    sub_23962C784((std::__shared_weak_count_vtbl **)a2, v4, 1);
    *(_BYTE *)(a2 + 16) = 1;
    if (v5)
    {
      v8 = (unint64_t *)&v5->__shared_owners_;
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    if (v12)
    {
      v10 = (unint64_t *)&v12->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  else
  {
    *(_BYTE *)a2 = 0;
    *(_BYTE *)(a2 + 16) = 0;
  }
}

void sub_2397A0D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  sub_239416DA0((uint64_t)&a12);
  sub_239600F8C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_2397A0D98(uint64_t a1, const void *a2, int *a3)
{
  std::__shared_weak_count *v6;
  CFMutableDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  const void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL8 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  const void *v21;
  std::__shared_weak_count *v22;
  int v23;

  v7 = *(CFMutableDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (v7)
        goto LABEL_7;
      return 0;
    }
  }
  if (!v7)
    return 0;
LABEL_7:
  v23 = *a3;
  sub_2396298C4(&v21, &v23);
  v12 = v21;
  v11 = v22;
  if (v22)
  {
    v13 = (unint64_t *)&v22->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      v16 = v12 != 0;
      if (!v12)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  v16 = v12 != 0;
  if (v12)
LABEL_13:
    sub_23962C8B8((CFMutableDictionaryRef *)a1, a2, v21);
LABEL_14:
  v17 = v22;
  if (v22)
  {
    v18 = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return v16;
}

void sub_2397A0EF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2397A0F04(uint64_t a1, const void *a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CFMutableDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  const void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL8 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  const void *v21;
  std::__shared_weak_count *v22;

  v7 = *(CFMutableDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (v7)
        goto LABEL_7;
      return 0;
    }
  }
  if (!v7)
    return 0;
LABEL_7:
  sub_2396299CC(&v21, a3);
  v12 = v21;
  v11 = v22;
  if (v22)
  {
    v13 = (unint64_t *)&v22->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      v16 = v12 != 0;
      if (!v12)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  v16 = v12 != 0;
  if (v12)
LABEL_13:
    sub_23962C8B8((CFMutableDictionaryRef *)a1, a2, v21);
LABEL_14:
  v17 = v22;
  if (v22)
  {
    v18 = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return v16;
}

void sub_2397A1054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_2397A1068(uint64_t a1, const void *a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CFMutableDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  const void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL8 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  const void *v21;
  std::__shared_weak_count *v22;

  v7 = *(CFMutableDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (v7)
        goto LABEL_7;
      return 0;
    }
  }
  if (!v7)
    return 0;
LABEL_7:
  sub_2399116FC(a3, &v21);
  v12 = v21;
  v11 = v22;
  if (v22)
  {
    v13 = (unint64_t *)&v22->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      v16 = v12 != 0;
      if (!v12)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  v16 = v12 != 0;
  if (v12)
LABEL_13:
    sub_23962C8B8((CFMutableDictionaryRef *)a1, a2, v21);
LABEL_14:
  v17 = v22;
  if (v22)
  {
    v18 = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return v16;
}

void sub_2397A11B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397A11CC(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v5;
  CVPixelBufferLockFlags v6;
  int v7;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 24) + 1;
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      if (v3 && !*(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 1;
    }
    else
    {
      if (v4 != 2 || *(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v5);
    *(_DWORD *)(a1 + 16) = 0;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v6 = 0;
    v7 = 2;
LABEL_16:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = v7;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v6 = 1;
    v7 = 1;
    goto LABEL_16;
  }
LABEL_5:
  std::mutex::unlock(v2);
}

void sub_2397A1294(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2397A12A8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2397A12BC(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v6;
  CVPixelBufferLockFlags v7;
  int v8;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32) + 1;
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      v6 = 1;
      if (*(_QWORD *)(a1 + 24) && !v3)
        goto LABEL_7;
    }
    else
    {
      if (v4 != 2 || v3 != 0)
        goto LABEL_7;
      v6 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = 0;
    v3 = *(_QWORD *)(a1 + 32);
  }
  if (v3)
  {
    v7 = 0;
    v8 = 2;
LABEL_18:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v7);
    *(_DWORD *)(a1 + 16) = v8;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v7 = 1;
    v8 = 1;
    goto LABEL_18;
  }
LABEL_7:
  std::mutex::unlock(v2);
}

void sub_2397A1380(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2397A1394(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2397A13A8(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v5;
  CVPixelBufferLockFlags v6;
  int v7;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 24) - 1;
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      if (v3 && !*(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 1;
    }
    else
    {
      if (v4 != 2 || *(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v5);
    *(_DWORD *)(a1 + 16) = 0;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v6 = 0;
    v7 = 2;
LABEL_16:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = v7;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v6 = 1;
    v7 = 1;
    goto LABEL_16;
  }
LABEL_5:
  std::mutex::unlock(v2);
}

void sub_2397A1470(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2397A1484(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2397A1498(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v6;
  CVPixelBufferLockFlags v7;
  int v8;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32) - 1;
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      v6 = 1;
      if (*(_QWORD *)(a1 + 24) && !v3)
        goto LABEL_7;
    }
    else
    {
      if (v4 != 2 || v3 != 0)
        goto LABEL_7;
      v6 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = 0;
    v3 = *(_QWORD *)(a1 + 32);
  }
  if (v3)
  {
    v7 = 0;
    v8 = 2;
LABEL_18:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v7);
    *(_DWORD *)(a1 + 16) = v8;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v7 = 1;
    v8 = 1;
    goto LABEL_18;
  }
LABEL_7:
  std::mutex::unlock(v2);
}

void sub_2397A155C(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2397A1570(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

pthread_rwlock_t *sub_2397A1588(pthread_rwlock_t *a1)
{
  pthread_rwlock_init(a1, 0);
  return a1;
}

pthread_rwlock_t *sub_2397A15B0(pthread_rwlock_t *a1)
{
  pthread_rwlock_destroy(a1);
  return a1;
}

_DWORD *sub_2397A15E0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_2397A15E8(os_unfair_lock_s *a1)
{
  os_unfair_lock_lock(a1);
  return 1;
}

uint64_t sub_2397A1600(os_unfair_lock_s *a1)
{
  os_unfair_lock_unlock(a1);
  return 1;
}

pthread_mutex_t *sub_2397A1618(pthread_mutex_t *a1)
{
  sub_2397A1AEC(a1);
  return a1;
}

pthread_mutex_t *sub_2397A163C(pthread_mutex_t *a1)
{
  if (pthread_mutex_destroy(a1))
  {
    sub_239A444D4((uint64_t)"unknown file", 295, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  return a1;
}

uint64_t sub_2397A1694(pthread_mutex_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = pthread_mutex_lock(a1);
  if ((_DWORD)v1)
    sub_239EC2C90(v1, v2);
  return 1;
}

uint64_t sub_2397A16B4(pthread_mutex_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = pthread_mutex_unlock(a1);
  if ((_DWORD)v1)
    sub_239EC2CBC(v1, v2);
  return 1;
}

uint64_t sub_2397A16D4(uint64_t a1)
{
  qos_class_t v2;

  *(_QWORD *)a1 = off_250AE9658;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  pthread_rwlock_init((pthread_rwlock_t *)(a1 + 24), 0);
  *(_QWORD *)(a1 + 224) = 0;
  v2 = qos_class_self();
  *(_QWORD *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 255) = 0;
  *(_DWORD *)(a1 + 256) = v2;
  return a1;
}

void sub_2397A1728(_Unwind_Exception *a1)
{
  pthread_rwlock_t *v1;

  pthread_rwlock_destroy(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397A1740(uint64_t a1)
{
  qos_class_t v2;

  *(_QWORD *)a1 = off_250AE9658;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  pthread_rwlock_init((pthread_rwlock_t *)(a1 + 24), 0);
  *(_QWORD *)(a1 + 224) = 0;
  v2 = qos_class_self();
  *(_QWORD *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 255) = 0;
  *(_DWORD *)(a1 + 256) = v2;
  return a1;
}

void sub_2397A1794(_Unwind_Exception *a1)
{
  pthread_rwlock_t *v1;

  pthread_rwlock_destroy(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397A17AC(uint64_t a1, __int128 *a2)
{
  _BYTE *v4;
  __int128 v5;

  *(_QWORD *)a1 = off_250AE9658;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  pthread_rwlock_init((pthread_rwlock_t *)(a1 + 24), 0);
  *(_QWORD *)(a1 + 224) = 0;
  v4 = (_BYTE *)(a1 + 232);
  if (*((char *)a2 + 23) < 0)
  {
    sub_23941A7F8(v4, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    *(_QWORD *)(a1 + 248) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v4 = v5;
  }
  *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 6);
  return a1;
}

void sub_2397A182C(_Unwind_Exception *a1)
{
  pthread_rwlock_t *v1;

  pthread_rwlock_destroy(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397A1844(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 224);
  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
  return 0;
}

uint64_t sub_2397A186C(int a1)
{
  return usleep(1000 * a1);
}

uint64_t sub_2397A1878(pthread_t *a1)
{
  uint64_t v2;
  pthread_attr_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  pthread_attr_init(&v4);
  pthread_attr_setdetachstate(&v4, 1);
  v2 = pthread_create(a1 + 1, &v4, (void *(__cdecl *)(void *))sub_2397A1904, a1);
  pthread_attr_destroy(&v4);
  return v2;
}

uint64_t sub_2397A1904(uint64_t a1)
{
  const char *v2;

  v2 = (const char *)(a1 + 232);
  if ((*(char *)(a1 + 255) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(a1 + 255))
      goto LABEL_7;
    goto LABEL_6;
  }
  if (*(_QWORD *)(a1 + 240))
  {
    v2 = *(const char **)v2;
LABEL_6:
    pthread_setname_np(v2);
  }
LABEL_7:
  pthread_set_qos_class_self_np(*(qos_class_t *)(a1 + 256), 0);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
}

uint64_t sub_2397A195C(uint64_t a1)
{
  _opaque_pthread_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_opaque_pthread_t **)(a1 + 8);
  if (!v2)
  {
    v3 = 0;
    v4 = *(_QWORD *)(a1 + 224);
    if (!v4)
      return v3;
    goto LABEL_3;
  }
  v3 = pthread_join(v2, 0);
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *(_QWORD *)(a1 + 224);
  if (v4)
  {
LABEL_3:
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    *(_QWORD *)(a1 + 224) = 0;
  }
  return v3;
}

uint64_t sub_2397A19BC(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_250AE9658;
  v2 = *(_QWORD *)(a1 + 224);
  if (v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    *(_QWORD *)(a1 + 224) = 0;
  }
  if (*(char *)(a1 + 255) < 0)
    operator delete(*(void **)(a1 + 232));
  pthread_rwlock_destroy((pthread_rwlock_t *)(a1 + 24));
  return a1;
}

uint64_t sub_2397A1A1C(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_250AE9658;
  v2 = *(_QWORD *)(a1 + 224);
  if (v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    *(_QWORD *)(a1 + 224) = 0;
  }
  if (*(char *)(a1 + 255) < 0)
    operator delete(*(void **)(a1 + 232));
  pthread_rwlock_destroy((pthread_rwlock_t *)(a1 + 24));
  return a1;
}

void sub_2397A1A7C(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_250AE9658;
  v2 = *(_QWORD *)(a1 + 224);
  if (v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    *(_QWORD *)(a1 + 224) = 0;
  }
  if (*(char *)(a1 + 255) < 0)
    operator delete(*(void **)(a1 + 232));
  pthread_rwlock_destroy((pthread_rwlock_t *)(a1 + 24));
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397A1AEC(pthread_mutex_t *a1)
{
  uint64_t result;
  pthread_mutexattr_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  if (pthread_mutexattr_init(&v3))
    sub_239EC2D78();
  if (pthread_mutexattr_settype(&v3, 1))
    sub_239EC2C60();
  if (pthread_mutexattr_setprotocol(&v3, 0))
    sub_239EC2D48();
  if (pthread_mutex_init(a1, &v3))
    sub_239EC2D18();
  result = pthread_mutexattr_destroy(&v3);
  if ((_DWORD)result)
    sub_239EC2CE8();
  return result;
}

BOOL sub_2397A1B98(pthread_mutex_t *a1)
{
  return pthread_mutex_trylock(a1) != 16;
}

uint64_t sub_2397A1BB4(uint64_t a1)
{
  _BYTE *v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  _opaque_pthread_t *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)(a1 + 216);
  v2 = *(_BYTE **)(a1 + 224);
  if (v2 == (_BYTE *)v3)
  {
    v3 = *(_QWORD **)(a1 + 224);
  }
  else
  {
    v4 = 0;
    do
    {
      v5 = v3[v4];
      if (v5)
      {
        v6 = *(_opaque_pthread_t **)(v5 + 8);
        if (v6)
        {
          pthread_join(v6, 0);
          *(_QWORD *)(v5 + 8) = 0;
        }
        v7 = *(_QWORD *)(v5 + 224);
        if (v7)
        {
          (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
          *(_QWORD *)(v5 + 224) = 0;
        }
        v8 = v3[v4];
        if (v8)
          (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
        v3[v4] = 0;
        v3 = *(_QWORD **)(a1 + 216);
        v2 = *(_BYTE **)(a1 + 224);
      }
      ++v4;
    }
    while (v4 < (v2 - (_BYTE *)v3) >> 3);
  }
  *(_QWORD *)(a1 + 224) = v3;
  if (v3)
    operator delete(v3);
  pthread_rwlock_destroy((pthread_rwlock_t *)(a1 + 16));
  return a1;
}

uint64_t sub_2397A1C7C(uint64_t a1, uint64_t a2)
{
  qos_class_t v4;

  v4 = qos_class_self();
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 39) = 0;
  *(_DWORD *)(a1 + 40) = v4;
  if (!a2)
    *(_QWORD *)a1 = (int)std::thread::hardware_concurrency();
  return a1;
}

uint64_t *sub_2397A1CD4(uint64_t *a1, __int128 *a2)
{
  uint64_t *v4;
  __int128 v5;
  uint64_t v6;

  v4 = a1 + 2;
  *a1 = 0;
  a1[1] = 0;
  if (*((char *)a2 + 23) < 0)
  {
    sub_23941A7F8(v4, *(void **)a2, *((_QWORD *)a2 + 1));
    v6 = *a1;
    *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 6);
    if (v6)
      return a1;
  }
  else
  {
    v5 = *a2;
    v4[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)v4 = v5;
    *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 6);
  }
  *a1 = (int)std::thread::hardware_concurrency();
  return a1;
}

uint64_t *sub_2397A1D58(uint64_t *a1, uint64_t a2, __int128 *a3)
{
  uint64_t *v5;
  __int128 v6;
  uint64_t v8;

  *a1 = a2;
  a1[1] = 0;
  v5 = a1 + 2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_23941A7F8(v5, *(void **)a3, *((_QWORD *)a3 + 1));
    v8 = *a1;
    *((_DWORD *)a1 + 10) = *((_DWORD *)a3 + 6);
    if (v8)
      return a1;
  }
  else
  {
    v6 = *a3;
    v5[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)v5 = v6;
    *((_DWORD *)a1 + 10) = *((_DWORD *)a3 + 6);
    if (a2)
      return a1;
  }
  *a1 = (int)std::thread::hardware_concurrency();
  return a1;
}

uint64_t sub_2397A1DD8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _QWORD *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 16), *(void **)(a2 + 16), *(_QWORD *)(a2 + 24));
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = v4;
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  pthread_rwlock_init((pthread_rwlock_t *)(a1 + 48), 0);
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 344) = 0;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  v5 = operator new(0x108uLL);
  v5[1] = 0;
  v5[2] = 0;
  *v5 = &off_250AE9680;
  v6 = sub_2397A3CBC((uint64_t)(v5 + 3), 0x7FFFFFFF);
  v7 = *(std::__shared_weak_count **)(a1 + 296);
  *(_QWORD *)(a1 + 288) = v6;
  *(_QWORD *)(a1 + 296) = v5;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = operator new(0x108uLL);
  v10[2] = 0;
  *v10 = &off_250AE9680;
  v10[1] = 0;
  v11 = sub_2397A3CBC((uint64_t)(v10 + 3), 0x7FFFFFFF);
  v12 = *(std::__shared_weak_count **)(a1 + 312);
  *(_QWORD *)(a1 + 304) = v11;
  *(_QWORD *)(a1 + 312) = v10;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  sub_2397A1FC8(a1);
  return a1;
}

void sub_2397A1F44(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  pthread_rwlock_t *v3;
  void **v4;

  sub_2394631DC(v4 + 9);
  sub_239416DA0((uint64_t)(v4 + 7));
  sub_239416DA0((uint64_t)(v4 + 5));
  sub_239416DA0((uint64_t)(v4 + 3));
  sub_2394631DC(v4);
  pthread_rwlock_destroy(v3);
  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2397A1FC8(uint64_t a1)
{
  pthread_rwlock_t *v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  char *v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  size_t v39;
  unint64_t v40;
  std::string *p_dst;
  int v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  const void *v46;
  std::string *v47;
  std::string::size_type size;
  std::string *v49;
  unint64_t v50;
  void *v51;
  int v52;
  int v53;
  _OWORD *v54;
  char *v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  void *sig;
  char *v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  _opaque_pthread_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t *v81;
  unint64_t v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t *v86;
  unint64_t v87;
  unint64_t *v88;
  unint64_t v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t v93;
  unsigned int *v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  char **v102;
  __int128 v103;
  std::__shared_weak_count *v104;
  std::__shared_weak_count *v105;
  std::string v106;
  std::string __dst;
  _DWORD v108[2];
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  std::__shared_weak_count *v112;
  uint64_t v113;
  std::__shared_weak_count *v114;
  pthread_attr_t v115;
  uint64_t v116;

  v116 = *MEMORY[0x24BDAC8D0];
  sub_2397A2D24(a1);
  v2 = (pthread_rwlock_t *)(a1 + 48);
  pthread_rwlock_wrlock((pthread_rwlock_t *)(a1 + 48));
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 && (v4 = *(_QWORD *)a1 * v3, v4 <= 0xFFFFFFFE))
  {
    v5 = operator new(0x108uLL);
    v5[1] = 0;
    v5[2] = 0;
    *v5 = &off_250AE9790;
    v6 = sub_2397A477C((uint64_t)(v5 + 3), v4);
    v7 = *(std::__shared_weak_count **)(a1 + 280);
    *(_QWORD *)(a1 + 272) = v6;
    *(_QWORD *)(a1 + 280) = v5;
    if (!v7)
      goto LABEL_11;
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
  }
  else
  {
    v10 = operator new(0x108uLL);
    v10[1] = 0;
    v10[2] = 0;
    *v10 = &off_250AE9790;
    v11 = sub_2397A477C((uint64_t)(v10 + 3), 0x7FFFFFFF);
    v7 = *(std::__shared_weak_count **)(a1 + 280);
    *(_QWORD *)(a1 + 272) = v11;
    *(_QWORD *)(a1 + 280) = v10;
    if (!v7)
      goto LABEL_11;
    v12 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(v12);
    while (__stlxr(v9 - 1, v12));
  }
  if (v9)
  {
LABEL_11:
    if (*(_QWORD *)(a1 + 320) != *(_QWORD *)(a1 + 328))
      goto LABEL_12;
    goto LABEL_17;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  if (*(_QWORD *)(a1 + 320) != *(_QWORD *)(a1 + 328))
  {
LABEL_12:
    if (*(_QWORD *)a1)
    {
      v13 = 0;
      do
      {
        v14 = *(unsigned int **)(a1 + 288);
        LOBYTE(v115.__sig) = 1;
        sub_2395BFE44(v14, &v115);
        ++v13;
      }
      while (v13 < *(_QWORD *)a1);
    }
    return pthread_rwlock_unlock(v2);
  }
LABEL_17:
  v15 = *(_QWORD *)(a1 + 288);
  v16 = *(std::__shared_weak_count **)(a1 + 296);
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  v19 = *(_QWORD *)(a1 + 304);
  v20 = *(std::__shared_weak_count **)(a1 + 312);
  if (v20)
  {
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
  }
  v110 = a1 + 272;
  v111 = v15;
  v112 = v16;
  if (v16)
  {
    v23 = (unint64_t *)&v16->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  v113 = v19;
  v114 = v20;
  if (!v20)
    goto LABEL_31;
  v25 = (unint64_t *)&v20->__shared_owners_;
  do
    v26 = __ldxr(v25);
  while (__stxr(v26 + 1, v25));
  do
    v27 = __ldaxr(v25);
  while (__stlxr(v27 - 1, v25));
  if (!v27)
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
    if (!v16)
      goto LABEL_35;
  }
  else
  {
LABEL_31:
    if (!v16)
      goto LABEL_35;
  }
  v28 = (unint64_t *)&v16->__shared_owners_;
  do
    v29 = __ldaxr(v28);
  while (__stlxr(v29 - 1, v28));
  if (!v29)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if (!*(_QWORD *)a1)
      goto LABEL_153;
    goto LABEL_36;
  }
LABEL_35:
  if (!*(_QWORD *)a1)
    goto LABEL_153;
LABEL_36:
  v30 = 0;
  do
  {
    v31 = operator new(0x20uLL);
    v31[1] = 0;
    v31[2] = 0;
    v31[3] = v30;
    *v31 = &off_250AE97C8;
    v115.__sig = (uint64_t)(v31 + 3);
    *(_QWORD *)v115.__opaque = v31;
    v32 = *(_QWORD **)(a1 + 328);
    if ((unint64_t)v32 < *(_QWORD *)(a1 + 336))
    {
      *v32 = v31 + 3;
      v32[1] = v31;
      *(_QWORD *)(a1 + 328) = v32 + 2;
    }
    else
    {
      v33 = sub_2394E46BC((char **)(a1 + 320), (uint64_t)&v115);
      v34 = *(std::__shared_weak_count **)v115.__opaque;
      *(_QWORD *)(a1 + 328) = v33;
      if (v34)
      {
        v35 = (unint64_t *)&v34->__shared_owners_;
        do
          v36 = __ldaxr(v35);
        while (__stlxr(v36 - 1, v35));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
    }
    ++v30;
  }
  while (v30 < *(_QWORD *)a1);
  if (*(_QWORD *)a1)
  {
    v37 = 0;
    v102 = (char **)(a1 + 248);
    while (1)
    {
      v38 = *(_BYTE *)(a1 + 39);
      if (v38 < 0)
      {
        if (*(_QWORD *)(a1 + 24))
        {
LABEL_50:
          if (v38 >= 0)
            v39 = *(unsigned __int8 *)(a1 + 39);
          else
            v39 = *(_QWORD *)(a1 + 24);
          v40 = v39 + 1;
          if (v39 + 1 >= 0x7FFFFFFFFFFFFFF8)
            sub_23941A5AC();
          if (v40 >= 0x17)
          {
            v44 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v40 | 7) != 0x17)
              v44 = v40 | 7;
            v45 = v44 + 1;
            p_dst = (std::string *)operator new(v44 + 1);
            __dst.__r_.__value_.__l.__size_ = v39 + 1;
            __dst.__r_.__value_.__r.__words[2] = v45 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          }
          else
          {
            memset(&__dst, 0, sizeof(__dst));
            p_dst = &__dst;
            *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v39 + 1;
            if (!v39)
              goto LABEL_68;
          }
          if (v38 >= 0)
            v46 = (const void *)(a1 + 16);
          else
            v46 = *(const void **)(a1 + 16);
          memmove(p_dst, v46, v39);
LABEL_68:
          *(_WORD *)((char *)&p_dst->__r_.__value_.__l.__data_ + v39) = 58;
          std::to_string(&v106, v37);
          if ((v106.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v47 = &v106;
          else
            v47 = (std::string *)v106.__r_.__value_.__r.__words[0];
          if ((v106.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            size = HIBYTE(v106.__r_.__value_.__r.__words[2]);
          else
            size = v106.__r_.__value_.__l.__size_;
          v49 = std::string::append(&__dst, (const std::string::value_type *)v47, size);
          v51 = (void *)v49->__r_.__value_.__r.__words[0];
          v50 = v49->__r_.__value_.__l.__size_;
          v108[0] = v49->__r_.__value_.__r.__words[2];
          *(_DWORD *)((char *)v108 + 3) = *(_DWORD *)((char *)&v49->__r_.__value_.__r.__words[2] + 3);
          v52 = SHIBYTE(v49->__r_.__value_.__r.__words[2]);
          v49->__r_.__value_.__l.__size_ = 0;
          v49->__r_.__value_.__r.__words[2] = 0;
          v49->__r_.__value_.__r.__words[0] = 0;
          v53 = *(_DWORD *)(a1 + 40);
          if (v52 < 0)
          {
            sub_23941A7F8(&v115, v51, v50);
          }
          else
          {
            v115.__sig = (uint64_t)v51;
            *(_QWORD *)v115.__opaque = v50;
            *(_DWORD *)&v115.__opaque[8] = v108[0];
            *(_DWORD *)&v115.__opaque[11] = *(_DWORD *)((char *)v108 + 3);
            v115.__opaque[15] = v52;
          }
          *(_DWORD *)&v115.__opaque[16] = v53;
          sub_2397A4BCC((uint64_t)&v115, &v109);
          v54 = *(_OWORD **)(a1 + 256);
          if ((unint64_t)v54 >= *(_QWORD *)(a1 + 264))
          {
            v55 = sub_2394E46BC(v102, (uint64_t)&v109);
            v56 = (std::__shared_weak_count *)*((_QWORD *)&v109 + 1);
            *(_QWORD *)(a1 + 256) = v55;
            if (!v56)
              goto LABEL_87;
            v57 = (unint64_t *)&v56->__shared_owners_;
            do
              v58 = __ldaxr(v57);
            while (__stlxr(v58 - 1, v57));
            if (!v58)
            {
              ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
              std::__shared_weak_count::__release_weak(v56);
              if ((v115.__opaque[15] & 0x80000000) == 0)
                goto LABEL_88;
            }
            else
            {
LABEL_87:
              if ((v115.__opaque[15] & 0x80000000) == 0)
                goto LABEL_88;
            }
LABEL_79:
            operator delete((void *)v115.__sig);
            if (v52 < 0)
              goto LABEL_80;
LABEL_89:
            if ((SHIBYTE(v106.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_90;
LABEL_81:
            operator delete(v106.__r_.__value_.__l.__data_);
            if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_99;
          }
          else
          {
            *v54 = v109;
            v109 = 0uLL;
            *(_QWORD *)(a1 + 256) = v54 + 1;
            if (v115.__opaque[15] < 0)
              goto LABEL_79;
LABEL_88:
            if ((v52 & 0x80000000) == 0)
              goto LABEL_89;
LABEL_80:
            operator delete(v51);
            if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_81;
LABEL_90:
            if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_99;
          }
          sig = (void *)__dst.__r_.__value_.__r.__words[0];
          goto LABEL_98;
        }
      }
      else if (*(_BYTE *)(a1 + 39))
      {
        goto LABEL_50;
      }
      v42 = *(_DWORD *)(a1 + 40);
      LOBYTE(v115.__sig) = 0;
      v115.__opaque[15] = 0;
      *(_DWORD *)&v115.__opaque[16] = v42;
      sub_2397A4BCC((uint64_t)&v115, &__dst);
      v43 = *(_OWORD **)(a1 + 256);
      if ((unint64_t)v43 < *(_QWORD *)(a1 + 264))
      {
        *v43 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
        *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = 0uLL;
        *(_QWORD *)(a1 + 256) = v43 + 1;
        if ((v115.__opaque[15] & 0x80000000) == 0)
          goto LABEL_99;
        goto LABEL_97;
      }
      v60 = sub_2394E46BC(v102, (uint64_t)&__dst);
      v61 = (std::__shared_weak_count *)__dst.__r_.__value_.__l.__size_;
      *(_QWORD *)(a1 + 256) = v60;
      if (!v61)
        goto LABEL_96;
      v62 = (unint64_t *)&v61->__shared_owners_;
      do
        v63 = __ldaxr(v62);
      while (__stlxr(v63 - 1, v62));
      if (v63)
      {
LABEL_96:
        if ((v115.__opaque[15] & 0x80000000) == 0)
          goto LABEL_99;
LABEL_97:
        sig = (void *)v115.__sig;
LABEL_98:
        operator delete(sig);
        goto LABEL_99;
      }
      ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
      std::__shared_weak_count::__release_weak(v61);
      if (v115.__opaque[15] < 0)
        goto LABEL_97;
LABEL_99:
      v64 = *(_QWORD *)(*(_QWORD *)(a1 + 256) - 16);
      *(_QWORD *)&v103 = a1;
      *((_QWORD *)&v103 + 1) = v37;
      v66 = v110;
      v65 = v111;
      v67 = v112;
      v104 = v112;
      if (v112)
      {
        v68 = (unint64_t *)&v112->__shared_owners_;
        do
          v69 = __ldxr(v68);
        while (__stxr(v69 + 1, v68));
      }
      v70 = v113;
      v71 = v114;
      v105 = v114;
      if (v114)
      {
        v72 = (unint64_t *)&v114->__shared_owners_;
        do
          v73 = __ldxr(v72);
        while (__stxr(v73 + 1, v72));
      }
      pthread_rwlock_wrlock((pthread_rwlock_t *)(v64 + 24));
      *(_BYTE *)(v64 + 16) = 1;
      pthread_rwlock_unlock((pthread_rwlock_t *)(v64 + 24));
      v74 = *(_opaque_pthread_t **)(v64 + 8);
      if (v74)
      {
        pthread_join(v74, 0);
        *(_QWORD *)(v64 + 8) = 0;
      }
      v75 = *(_QWORD *)(v64 + 224);
      if (v75)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v75 + 8))(v75);
        *(_QWORD *)(v64 + 224) = 0;
      }
      v76 = operator new();
      *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v103;
      if (v67)
      {
        v77 = (unint64_t *)&v67->__shared_owners_;
        do
          v78 = __ldxr(v77);
        while (__stxr(v78 + 1, v77));
      }
      if (v71)
      {
        v79 = (unint64_t *)&v71->__shared_owners_;
        do
          v80 = __ldxr(v79);
        while (__stxr(v80 + 1, v79));
      }
      *(_QWORD *)v76 = &off_250AE9838;
      *(_OWORD *)(v76 + 8) = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *(_QWORD *)(v76 + 24) = v66;
      *(_QWORD *)(v76 + 32) = v65;
      *(_QWORD *)(v76 + 40) = v67;
      if (v67)
      {
        v81 = (unint64_t *)&v67->__shared_owners_;
        do
          v82 = __ldxr(v81);
        while (__stxr(v82 + 1, v81));
      }
      *(_QWORD *)(v76 + 48) = v70;
      *(_QWORD *)(v76 + 56) = v71;
      if (v71)
      {
        v83 = (unint64_t *)&v71->__shared_owners_;
        do
          v84 = __ldxr(v83);
        while (__stxr(v84 + 1, v83));
        *(_QWORD *)(v64 + 224) = v76;
        do
          v85 = __ldaxr(v83);
        while (__stlxr(v85 - 1, v83));
        if (!v85)
        {
          ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
          std::__shared_weak_count::__release_weak(v71);
        }
      }
      else
      {
        *(_QWORD *)(v64 + 224) = v76;
      }
      if (v67)
      {
        v86 = (unint64_t *)&v67->__shared_owners_;
        do
          v87 = __ldaxr(v86);
        while (__stlxr(v87 - 1, v86));
        if (!v87)
        {
          ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
          std::__shared_weak_count::__release_weak(v67);
        }
      }
      pthread_attr_init(&v115);
      pthread_attr_setdetachstate(&v115, 1);
      pthread_create((pthread_t *)(v64 + 8), &v115, (void *(__cdecl *)(void *))sub_2397A1904, (void *)v64);
      pthread_attr_destroy(&v115);
      if (!v105)
        goto LABEL_135;
      v88 = (unint64_t *)&v105->__shared_owners_;
      do
        v89 = __ldaxr(v88);
      while (__stlxr(v89 - 1, v88));
      if (!v89)
      {
        ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
        std::__shared_weak_count::__release_weak(v105);
        v90 = v104;
        if (v104)
        {
LABEL_136:
          v91 = (unint64_t *)&v90->__shared_owners_;
          do
            v92 = __ldaxr(v91);
          while (__stlxr(v92 - 1, v91));
          if (!v92)
          {
            ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
            std::__shared_weak_count::__release_weak(v90);
          }
        }
      }
      else
      {
LABEL_135:
        v90 = v104;
        if (v104)
          goto LABEL_136;
      }
      if (++v37 >= *(_QWORD *)a1)
      {
        v2 = (pthread_rwlock_t *)(a1 + 48);
        if (*(_QWORD *)a1)
        {
          v93 = 0;
          do
          {
            v94 = *(unsigned int **)(a1 + 288);
            LOBYTE(v115.__sig) = 1;
            sub_2395BFE44(v94, &v115);
            ++v93;
          }
          while (v93 < *(_QWORD *)a1);
        }
        break;
      }
    }
  }
LABEL_153:
  v95 = v114;
  if (v114)
  {
    v96 = (unint64_t *)&v114->__shared_owners_;
    do
      v97 = __ldaxr(v96);
    while (__stlxr(v97 - 1, v96));
    if (!v97)
    {
      ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
      std::__shared_weak_count::__release_weak(v95);
    }
  }
  v98 = v112;
  if (v112)
  {
    v99 = (unint64_t *)&v112->__shared_owners_;
    do
      v100 = __ldaxr(v99);
    while (__stlxr(v100 - 1, v99));
    if (!v100)
    {
      ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
      std::__shared_weak_count::__release_weak(v98);
    }
  }
  return pthread_rwlock_unlock(v2);
}

void sub_2397A28F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, pthread_rwlock_t *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,char a33,uint64_t a34,char a35)
{
  std::__shared_weak_count *v35;
  pthread_rwlock_t *v36;
  void *v38;

  std::__shared_weak_count::~__shared_weak_count(v35);
  operator delete(v38);
  pthread_rwlock_unlock(v36);
  _Unwind_Resume(a1);
}

uint64_t sub_2397A2A50(uint64_t a1, unsigned int a2, uint64_t a3)
{
  _QWORD v6[4];
  char v7;
  qos_class_t v8;

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = 0;
  v7 = 0;
  v8 = qos_class_self();
  if (!a2)
    v6[0] = (int)std::thread::hardware_concurrency();
  return sub_2397A1DD8(a1, (uint64_t)v6);
}

uint64_t sub_2397A2AB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _opaque_pthread_t *v28;
  uint64_t v29;

  if (!*(_QWORD *)(a1 + 344))
  {
    sub_2397A2D24(a1);
    sub_2395C2A4C(*(_QWORD *)(a1 + 288));
    sub_2395C2A4C(*(_QWORD *)(a1 + 304));
    v24 = *(_QWORD *)(a1 + 248);
    if (*(_QWORD *)(a1 + 256) != v24)
    {
      v25 = 0;
      v26 = 0;
      do
      {
        v27 = *(_QWORD *)(v24 + v25);
        v28 = *(_opaque_pthread_t **)(v27 + 8);
        if (v28)
        {
          pthread_join(v28, 0);
          *(_QWORD *)(v27 + 8) = 0;
        }
        v29 = *(_QWORD *)(v27 + 224);
        if (v29)
        {
          (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
          *(_QWORD *)(v27 + 224) = 0;
        }
        ++v26;
        v24 = *(_QWORD *)(a1 + 248);
        v25 += 16;
      }
      while (v26 < (*(_QWORD *)(a1 + 256) - v24) >> 4);
    }
  }
  v2 = *(_QWORD *)(a1 + 320);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 328);
    v4 = *(void **)(a1 + 320);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
        {
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 320);
    }
    *(_QWORD *)(a1 + 328) = v2;
    operator delete(v4);
  }
  v8 = *(std::__shared_weak_count **)(a1 + 312);
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = *(std::__shared_weak_count **)(a1 + 296);
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = *(std::__shared_weak_count **)(a1 + 280);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(_QWORD *)(a1 + 248);
  if (v17)
  {
    v18 = *(_QWORD *)(a1 + 256);
    v19 = *(void **)(a1 + 248);
    if (v18 != v17)
    {
      do
      {
        v20 = *(std::__shared_weak_count **)(v18 - 8);
        if (v20)
        {
          v21 = (unint64_t *)&v20->__shared_owners_;
          do
            v22 = __ldaxr(v21);
          while (__stlxr(v22 - 1, v21));
          if (!v22)
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
        }
        v18 -= 16;
      }
      while (v18 != v17);
      v19 = *(void **)(a1 + 248);
    }
    *(_QWORD *)(a1 + 256) = v17;
    operator delete(v19);
  }
  pthread_rwlock_destroy((pthread_rwlock_t *)(a1 + 48));
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  return a1;
}

uint64_t sub_2397A2D24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  do
  {
    v1 = a1;
    a1 = *(_QWORD *)(a1 + 344);
  }
  while (a1);
  pthread_rwlock_wrlock((pthread_rwlock_t *)(v1 + 48));
  v2 = *(_QWORD *)(v1 + 272);
  if (v2)
  {
    sub_2397A3A14(v2);
    v3 = sub_2395BFB54(*(unsigned int **)(v1 + 304));
    v4 = BYTE1(v3);
    if (BYTE1(v3))
    {
      v5 = 0;
      do
      {
        if (v5 >= *(_QWORD *)v1)
          break;
        if (++v5 < *(_QWORD *)v1)
          v4 = ((unsigned __int16)sub_2395BFB54(*(unsigned int **)(v1 + 304)) >> 8);
      }
      while (v4);
    }
    v6 = *(std::__shared_weak_count **)(v1 + 280);
    *(_QWORD *)(v1 + 272) = 0;
    *(_QWORD *)(v1 + 280) = 0;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
  return pthread_rwlock_unlock((pthread_rwlock_t *)(v1 + 48));
}

void sub_2397A2DF0(_Unwind_Exception *a1)
{
  pthread_rwlock_t *v1;

  pthread_rwlock_unlock(v1);
  _Unwind_Resume(a1);
}

unint64_t *sub_2397A2E18(unint64_t *result, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  unint64_t v7;
  _QWORD *v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t **v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  _QWORD *v26;
  _OWORD *v27;
  _BYTE *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  _QWORD v33[3];
  _QWORD *v34;
  _QWORD v35[3];
  unint64_t *v36;
  uint64_t v37;
  _BYTE v38[24];
  _BYTE *v39;
  _BYTE v40[24];
  unint64_t *v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v7 = result[43];
  if (!v7)
  {
    v9 = result;
    if (!result[34])
      sub_239EC2DA8();
    if (a4)
    {
      if (a4 <= 1)
        v10 = 1;
      else
        v10 = a4;
      if (a4 < 2)
      {
LABEL_11:
        if (!a2)
          return result;
        v11 = 0;
        while (1)
        {
          v13 = (unsigned int *)v9[34];
          v14 = (_QWORD *)a3[3];
          if (v14)
          {
            if (v14 == a3)
            {
              v36 = v35;
              (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v35);
            }
            else
            {
              v36 = (unint64_t *)(*(uint64_t (**)(_QWORD *))(*v14 + 16))(v14);
            }
          }
          else
          {
            v36 = 0;
          }
          v37 = v11;
          v39 = 0;
          v15 = operator new(0x38uLL);
          v16 = v15;
          *v15 = &off_250AE96B8;
          if (!v36)
            break;
          if (v36 != v35)
          {
            v15[5] = v36;
            v17 = &v36;
LABEL_25:
            *v17 = 0;
            v18 = v11;
            goto LABEL_27;
          }
          v15[5] = v15 + 2;
          (*(void (**)(_QWORD *))(v35[0] + 24))(v35);
          v18 = v37;
LABEL_27:
          v16[6] = v18;
          v39 = v16;
          sub_2394D0CC4(v13, (uint64_t)v38);
          v19 = v39;
          if (v39 == v38)
          {
            v19 = v38;
            v20 = 4;
          }
          else
          {
            if (!v39)
              goto LABEL_32;
            v20 = 5;
          }
          (*(void (**)(void))(*v19 + 8 * v20))();
LABEL_32:
          result = v36;
          if (v36 == v35)
          {
            result = v35;
            v12 = 4;
          }
          else
          {
            if (!v36)
              goto LABEL_15;
            v12 = 5;
          }
          result = (unint64_t *)(*(uint64_t (**)(void))(*result + 8 * v12))();
LABEL_15:
          if (a2 == ++v11)
            return result;
        }
        v17 = (unint64_t **)(v15 + 5);
        goto LABEL_25;
      }
    }
    else
    {
      v22 = vcvtpd_u64_f64((double)a2 / ((double)*result + (double)*result));
      if (v22 <= 1)
        v10 = 1;
      else
        v10 = v22;
      if (v22 < 2)
        goto LABEL_11;
    }
    if (!a2)
      return result;
    v23 = 0;
    while (1)
    {
      v25 = (unsigned int *)v9[34];
      *(_QWORD *)&v32 = v23;
      *((_QWORD *)&v32 + 1) = a2;
      v26 = (_QWORD *)a3[3];
      if (v26)
      {
        if (v26 == a3)
        {
          v34 = v33;
          (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v33);
        }
        else
        {
          v34 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v26 + 16))(v26);
        }
      }
      else
      {
        v34 = 0;
      }
      v39 = 0;
      v27 = operator new(0x48uLL);
      v28 = v27;
      *(_QWORD *)v27 = &off_250AE9700;
      v27[1] = v32;
      v29 = v34;
      *((_QWORD *)v27 + 4) = v10;
      if (v29)
      {
        if (v29 == v33)
        {
          *((_QWORD *)v27 + 8) = (char *)v27 + 40;
          (*(void (**)(_QWORD *))(v33[0] + 24))(v33);
        }
        else
        {
          *((_QWORD *)v27 + 8) = v29;
          v34 = 0;
        }
      }
      else
      {
        *((_QWORD *)v27 + 8) = 0;
      }
      v39 = v28;
      sub_2394D0CC4(v25, (uint64_t)v38);
      v30 = v39;
      if (v39 == v38)
      {
        v30 = v38;
        v31 = 4;
      }
      else
      {
        if (!v39)
          goto LABEL_67;
        v31 = 5;
      }
      (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_67:
      result = v34;
      if (v34 == v33)
      {
        result = v33;
        v24 = 4;
      }
      else
      {
        if (!v34)
          goto LABEL_51;
        v24 = 5;
      }
      result = (unint64_t *)(*(uint64_t (**)(void))(*result + 8 * v24))();
LABEL_51:
      v23 += v10;
      if (v23 >= a2)
        return result;
    }
  }
  v8 = (_QWORD *)a3[3];
  if (v8)
  {
    if (v8 == a3)
    {
      v41 = (unint64_t *)v40;
      (*(void (**)(_QWORD *, _BYTE *))(*a3 + 24))(a3, v40);
    }
    else
    {
      v41 = (unint64_t *)(*(uint64_t (**)(_QWORD *))(*v8 + 16))(v8);
    }
  }
  else
  {
    v41 = 0;
  }
  sub_2397A2E18(v7, a2, v40, a4);
  result = v41;
  if (v41 == (unint64_t *)v40)
  {
    v21 = 4;
    result = (unint64_t *)v40;
  }
  else
  {
    if (!v41)
      return result;
    v21 = 5;
  }
  return (unint64_t *)(*(uint64_t (**)(void))(*result + 8 * v21))();
}

void sub_2397A3208(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v29 = *(_QWORD *)(v27 - 104);
  if (v29 == v26)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v27 - 128) + 32))(v27 - 128);
    _Unwind_Resume(exception_object);
  }
  if (v29)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 40))(v29);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2397A3340(unint64_t *a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  unint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD v15[3];
  _QWORD *v16;
  _QWORD v17[3];
  _QWORD *v18;
  _BYTE v19[24];
  _BYTE *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v7 = a1[43];
  v8 = (_QWORD *)a3[3];
  if (!v7)
  {
    if (v8)
    {
      if (v8 == a3)
      {
        v16 = v15;
        (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v15);
      }
      else
      {
        v16 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v8 + 16))(v8);
      }
    }
    else
    {
      v16 = 0;
    }
    v18 = 0;
    v11 = operator new(0x28uLL);
    v12 = v11;
    *v11 = &off_250AE9748;
    if (v16)
    {
      if (v16 == v15)
      {
        v11[4] = v11 + 1;
        (*(void (**)(_QWORD *))(v15[0] + 24))(v15);
      }
      else
      {
        v11[4] = v16;
        v16 = 0;
      }
    }
    else
    {
      v11[4] = 0;
    }
    v18 = v12;
    sub_2397A2E18(a1, a2, v17, a4);
    v13 = v18;
    if (v18 == v17)
    {
      v14 = 4;
      v13 = v17;
    }
    else
    {
      if (!v18)
        goto LABEL_24;
      v14 = 5;
    }
    (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_24:
    result = v16;
    if (v16 == v15)
    {
      v10 = 4;
      result = v15;
      return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
    }
    goto LABEL_25;
  }
  if (v8)
  {
    if (v8 == a3)
    {
      v20 = v19;
      (*(void (**)(_QWORD *, _BYTE *))(*a3 + 24))(a3, v19);
    }
    else
    {
      v20 = (_BYTE *)(*(uint64_t (**)(_QWORD *))(*v8 + 16))(v8);
    }
  }
  else
  {
    v20 = 0;
  }
  sub_2397A3340(v7, a2, v19, a4);
  result = v20;
  if (v20 == v19)
  {
    v10 = 4;
    result = v19;
    return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
  }
LABEL_25:
  if (!result)
    return result;
  v10 = 5;
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
}

void sub_2397A353C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2397A35C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;

  if (a21 == v21)
  {
    (*(void (**)(void))(a18 + 32))();
    _Unwind_Resume(a1);
  }
  if (a21)
    JUMPOUT(0x2397A35F0);
  JUMPOUT(0x2397A35B8);
}

uint64_t sub_2397A3608(unint64_t *a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  _QWORD *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v7 = (_QWORD *)a3[3];
  if (v7)
  {
    if (v7 == a3)
    {
      v13 = v12;
      (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v12);
    }
    else
    {
      v13 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v7 + 16))(v7);
    }
  }
  else
  {
    v13 = 0;
  }
  sub_2397A2E18(a1, a2, v12, a4);
  v8 = v13;
  if (v13 == v12)
  {
    v9 = 4;
    v8 = v12;
  }
  else
  {
    if (!v13)
      goto LABEL_11;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
  do
  {
LABEL_11:
    v10 = (uint64_t)a1;
    a1 = (unint64_t *)a1[43];
  }
  while (a1);
  return sub_2397A1FC8(v10);
}

void sub_2397A3704(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397A3758(uint64_t a1)
{
  uint64_t v1;

  do
  {
    v1 = a1;
    a1 = *(_QWORD *)(a1 + 344);
  }
  while (a1);
  return sub_2397A1FC8(v1);
}

uint64_t sub_2397A376C(unint64_t *a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  _QWORD *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v7 = (_QWORD *)a3[3];
  if (v7)
  {
    if (v7 == a3)
    {
      v13 = v12;
      (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v12);
    }
    else
    {
      v13 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v7 + 16))(v7);
    }
  }
  else
  {
    v13 = 0;
  }
  sub_2397A3340(a1, a2, v12, a4);
  v8 = v13;
  if (v13 == v12)
  {
    v9 = 4;
    v8 = v12;
  }
  else
  {
    if (!v13)
      goto LABEL_11;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
  do
  {
LABEL_11:
    v10 = (uint64_t)a1;
    a1 = (unint64_t *)a1[43];
  }
  while (a1);
  return sub_2397A1FC8(v10);
}

void sub_2397A3868(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397A38BC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(std::__shared_weak_count **)(a1 + 32);
      if (v5)
        goto LABEL_6;
      return a1;
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 32);
  if (!v5)
    return a1;
LABEL_6:
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (v7)
    return a1;
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

uint64_t sub_2397A3968(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      if (v5)
        goto LABEL_6;
      return a1;
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    return a1;
LABEL_6:
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (v7)
    return a1;
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

uint64_t sub_2397A3A14(uint64_t a1)
{
  pthread_mutex_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = (pthread_mutex_t *)(a1 + 176);
  v3 = pthread_mutex_lock((pthread_mutex_t *)(a1 + 176));
  if ((_DWORD)v3)
    sub_239EC2C90(v3, v4);
  *(_BYTE *)(a1 + 56) = 1;
  if (pthread_mutex_unlock(v2))
  {
    sub_239A444D4((uint64_t)"unknown file", 335, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v5 = pthread_mutex_lock(v2);
  if ((_DWORD)v5)
    sub_239EC2C90(v5, v6);
  while (1)
  {
    v7 = *(_QWORD *)(a1 + 64);
    v8 = pthread_mutex_unlock(v2);
    if (v7 < 1)
      break;
    if ((_DWORD)v8)
      sub_239EC2CBC(v8, v9);
    if (pthread_cond_signal((pthread_cond_t *)(a1 + 80)))
      sub_239EC0734();
    v10 = pthread_mutex_lock(v2);
    if ((_DWORD)v10)
      sub_239EC2C90(v10, v11);
  }
  if ((_DWORD)v8)
    sub_239EC2CBC(v8, v9);
  v12 = pthread_mutex_lock(v2);
  if ((_DWORD)v12)
    sub_239EC2C90(v12, v13);
  while (*(_QWORD *)(a1 + 48) && *(uint64_t *)(a1 + 72) >= 1)
  {
    if (pthread_cond_wait((pthread_cond_t *)(a1 + 80), v2))
    {
      sub_239A444D4((uint64_t)"unknown file", 277, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  if (pthread_mutex_unlock(v2))
  {
    sub_239A444D4((uint64_t)"unknown file", 335, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v14 = pthread_mutex_lock(v2);
  if ((_DWORD)v14)
    sub_239EC2C90(v14, v15);
  while (1)
  {
    v16 = *(_QWORD *)(a1 + 72);
    v17 = pthread_mutex_unlock(v2);
    if (v16 < 1)
      break;
    if ((_DWORD)v17)
      sub_239EC2CBC(v17, v18);
    if (pthread_cond_signal((pthread_cond_t *)(a1 + 128)))
      sub_239EC0704();
    v19 = pthread_mutex_lock(v2);
    if ((_DWORD)v19)
      sub_239EC2C90(v19, v20);
  }
  if ((_DWORD)v17)
    sub_239EC2CBC(v17, v18);
  return 1;
}

void sub_2397A3BEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397A3C14((pthread_mutex_t **)va);
  _Unwind_Resume(a1);
}

void sub_2397A3C00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397A3C14((pthread_mutex_t **)va);
  _Unwind_Resume(a1);
}

pthread_mutex_t **sub_2397A3C14(pthread_mutex_t **a1)
{
  if (pthread_mutex_unlock(*a1))
  {
    sub_239A444D4((uint64_t)"unknown file", 335, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  return a1;
}

void sub_2397A3C70(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE9680;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2397A3C80(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE9680;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397A3CB0(uint64_t a1)
{
  return sub_2395C29C4(a1 + 24);
}

uint64_t sub_2397A3CBC(uint64_t a1, int a2)
{
  unsigned int v3;

  *(_DWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_2397A1AEC((pthread_mutex_t *)(a1 + 176));
  v3 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 >= 0x7FFFFFFFu)
  {
    *(_DWORD *)a1 = 0x7FFFFFFF;
    v3 = 0x7FFFFFFF;
  }
  else if (v3 < 2)
  {
    v3 = 1;
  }
  *(_DWORD *)a1 = v3;
  pthread_cond_init((pthread_cond_t *)(a1 + 80), 0);
  pthread_cond_init((pthread_cond_t *)(a1 + 128), 0);
  return a1;
}

void sub_2397A3D54(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1);
  _Unwind_Resume(a1);
}

void sub_2397A3D68(_Unwind_Exception *a1)
{
  uint64_t v1;
  pthread_mutex_t *v2;

  if (!pthread_mutex_destroy(v2))
  {
    sub_239596DB0(v1);
    _Unwind_Resume(a1);
  }
  sub_239A444D4((uint64_t)"unknown file", 295, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

_QWORD *sub_2397A3DB8(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AE96B8;
  v2 = a1 + 2;
  v3 = (_QWORD *)a1[5];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_2397A3E14(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AE96B8;
  v1 = a1 + 2;
  v2 = (_QWORD *)a1[5];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2397A3E80(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x38uLL);
  *v2 = &off_250AE96B8;
  v3 = v2 + 2;
  v4 = *(_QWORD *)(a1 + 40);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 16)
  {
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
LABEL_4:
    v5 = *(_QWORD *)(a1 + 48);
    v2[5] = v4;
    v2[6] = v5;
    return v2;
  }
  v2[5] = v3;
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  v2[6] = *(_QWORD *)(a1 + 48);
  return v2;
}

void sub_2397A3F0C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397A3F20(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AE96B8;
  v4 = a2 + 2;
  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    if (result == a1 + 16)
    {
      a2[5] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 40) + 24))(*(_QWORD *)(a1 + 40));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[5] = result;
    }
    a2[6] = *(_QWORD *)(a1 + 48);
  }
  else
  {
    a2[5] = 0;
    a2[6] = *(_QWORD *)(a1 + 48);
  }
  return result;
}

uint64_t sub_2397A3FB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 16;
  result = *(_QWORD *)(a1 + 40);
  if (result == v1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

void sub_2397A3FF4(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 16;
  v3 = (char *)*((_QWORD *)__p + 5);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

uint64_t sub_2397A4044(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = a1 + 40;
  v2 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(v3 + 8);
  if (!v2)
    sub_2394172E0();
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)v2 + 48))(v2, &v5, a2);
}

_QWORD *sub_2397A4080(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AE9700;
  v2 = a1 + 5;
  v3 = (_QWORD *)a1[8];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_2397A40DC(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AE9700;
  v1 = a1 + 5;
  v2 = (_QWORD *)a1[8];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_OWORD *sub_2397A4148(uint64_t a1)
{
  _OWORD *v2;
  uint64_t v3;

  v2 = operator new(0x48uLL);
  *(_QWORD *)v2 = &off_250AE9700;
  v2[1] = *(_OWORD *)(a1 + 16);
  *((_QWORD *)v2 + 4) = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 64);
  if (!v3)
    goto LABEL_4;
  if (v3 != a1 + 40)
  {
    v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
LABEL_4:
    *((_QWORD *)v2 + 8) = v3;
    return v2;
  }
  *((_QWORD *)v2 + 8) = (char *)v2 + 40;
  (*(void (**)(uint64_t))(*(_QWORD *)v3 + 24))(v3);
  return v2;
}

void sub_2397A41D8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397A41EC(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;

  *a2 = &off_250AE9700;
  a2[2] = result[2];
  a2[3] = result[3];
  a2[4] = result[4];
  v3 = (_QWORD *)result[8];
  if (v3)
  {
    if (v3 == result + 5)
    {
      a2[8] = a2 + 5;
      return (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)result[8] + 24))(result[8]);
    }
    else
    {
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v3 + 16))(result[8]);
      a2[8] = result;
    }
  }
  else
  {
    a2[8] = 0;
  }
  return result;
}

uint64_t sub_2397A4284(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 40;
  result = *(_QWORD *)(a1 + 64);
  if (result == v1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

void sub_2397A42C0(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 40;
  v3 = (char *)*((_QWORD *)__p + 8);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_2397A4310(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  unint64_t v10;
  _BYTE v11[24];
  _BYTE *v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = (_QWORD *)a1[8];
  if (v6)
  {
    v7 = a1 + 5;
    if (v6 == v7)
    {
      v12 = v11;
      (*(void (**)(_QWORD *, _BYTE *))(*v7 + 24))(v7, v11);
    }
    else
    {
      v12 = (_BYTE *)(*(uint64_t (**)(_QWORD *))(*v6 + 16))(v6);
    }
  }
  else
  {
    v12 = 0;
  }
  if (v5 + v3 < v4)
    v4 = v5 + v3;
  if (v4 > v3)
  {
    do
    {
      v10 = v3;
      if (!v12)
        sub_2394172E0();
      (*(void (**)(_BYTE *, unint64_t *, uint64_t))(*(_QWORD *)v12 + 48))(v12, &v10, a2);
      ++v3;
    }
    while (v4 != v3);
  }
  result = v12;
  if (v12 == v11)
  {
    v9 = 4;
    result = v11;
  }
  else
  {
    if (!v12)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8 * v9))(result);
}

void sub_2397A4438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13)
{
  if (a13 == &a10)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (!a13)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*a13 + 40))();
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2397A4490(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AE9748;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_2397A44EC(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AE9748;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2397A4558(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x28uLL);
  *v2 = &off_250AE9748;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  return v2;
}

void sub_2397A45D8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397A45EC(uint64_t result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;

  *a2 = &off_250AE9748;
  v3 = a2 + 1;
  v4 = *(_QWORD *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(result + 32) + 24))(*(_QWORD *)(result + 32));
    }
    else
    {
      result = (*(uint64_t (**)(_QWORD, _QWORD *))(*(_QWORD *)v4 + 16))(*(_QWORD *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_2397A4668(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 8;
  result = *(_QWORD *)(a1 + 32);
  if (result == v1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

void sub_2397A46A4(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

uint64_t sub_2397A46F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 32);
  v4 = *a2;
  if (!v2)
    sub_2394172E0();
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(_QWORD *)v2 + 48))(v2, &v4);
}

void sub_2397A4730(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE9790;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2397A4740(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE9790;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397A4770(uint64_t a1)
{
  return sub_2397A4A0C(a1 + 24);
}

uint64_t sub_2397A477C(uint64_t a1, int a2)
{
  unsigned int v3;

  *(_DWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_2397A1AEC((pthread_mutex_t *)(a1 + 176));
  v3 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 >= 0x7FFFFFFFu)
  {
    *(_DWORD *)a1 = 0x7FFFFFFF;
    v3 = 0x7FFFFFFF;
  }
  else if (v3 < 2)
  {
    v3 = 1;
  }
  *(_DWORD *)a1 = v3;
  pthread_cond_init((pthread_cond_t *)(a1 + 80), 0);
  pthread_cond_init((pthread_cond_t *)(a1 + 128), 0);
  return a1;
}

void sub_2397A4814(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2397A4878(v1);
  _Unwind_Resume(a1);
}

void sub_2397A4828(_Unwind_Exception *a1)
{
  uint64_t v1;
  pthread_mutex_t *v2;

  if (!pthread_mutex_destroy(v2))
  {
    sub_2397A4878(v1);
    _Unwind_Resume(a1);
  }
  sub_239A444D4((uint64_t)"unknown file", 295, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

uint64_t sub_2397A4878(uint64_t a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  if (v3 == v2)
  {
    v3 = *(void ***)(a1 + 8);
    *(_QWORD *)(a1 + 40) = 0;
    v12 = 0;
    goto LABEL_15;
  }
  v4 = *(_QWORD *)(a1 + 32);
  v5 = &v2[v4 >> 7];
  v6 = (uint64_t)*v5;
  v7 = (uint64_t)*v5 + 32 * (v4 & 0x7F);
  v8 = *(uint64_t *)((char *)v2 + (((*(_QWORD *)(a1 + 40) + v4) >> 4) & 0xFFFFFFFFFFFFFF8))
     + 32 * ((*(_QWORD *)(a1 + 40) + v4) & 0x7F);
  if (v7 == v8)
    goto LABEL_13;
  do
  {
    v9 = *(_QWORD **)(v7 + 24);
    if (v9 == (_QWORD *)v7)
    {
      v9 = (_QWORD *)v7;
      v10 = 4;
    }
    else
    {
      if (!v9)
        goto LABEL_10;
      v10 = 5;
    }
    (*(void (**)(void))(*v9 + 8 * v10))();
    v6 = (uint64_t)*v5;
LABEL_10:
    v7 += 32;
    if (v7 - v6 == 4096)
    {
      v11 = (uint64_t)v5[1];
      ++v5;
      v6 = v11;
      v7 = v11;
    }
  }
  while (v7 != v8);
  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
LABEL_13:
  *(_QWORD *)(a1 + 40) = 0;
  v12 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = *(void ***)(a1 + 16);
      v2 = (void **)(*(_QWORD *)(a1 + 8) + 8);
      *(_QWORD *)(a1 + 8) = v2;
      v12 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
LABEL_15:
  v13 = v12 >> 3;
  if (v13 == 1)
  {
    v14 = 64;
LABEL_20:
    *(_QWORD *)(a1 + 32) = v14;
  }
  else if (v13 == 2)
  {
    v14 = 128;
    goto LABEL_20;
  }
  if (v2 != v3)
  {
    do
    {
      v15 = *v2++;
      operator delete(v15);
    }
    while (v2 != v3);
    v17 = *(_QWORD *)(a1 + 8);
    v16 = *(_QWORD *)(a1 + 16);
    if (v16 != v17)
      *(_QWORD *)(a1 + 16) = v16 + ((v17 - v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_2397A4A0C(uint64_t a1)
{
  if (!sub_2397A4B0C(a1))
    sub_2397A3A14(a1);
  if (pthread_mutex_lock((pthread_mutex_t *)(a1 + 176)))
  {
    sub_239A444D4((uint64_t)"unknown file", 317, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (pthread_mutex_unlock((pthread_mutex_t *)(a1 + 176)))
  {
    sub_239A444D4((uint64_t)"unknown file", 335, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  pthread_cond_destroy((pthread_cond_t *)(a1 + 80));
  pthread_cond_destroy((pthread_cond_t *)(a1 + 128));
  if (pthread_mutex_destroy((pthread_mutex_t *)(a1 + 176)))
  {
    sub_239A444D4((uint64_t)"unknown file", 295, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_2397A4878(a1 + 8);
  return a1;
}

BOOL sub_2397A4B0C(uint64_t a1)
{
  pthread_mutex_t *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v2 = (pthread_mutex_t *)(a1 + 176);
  v3 = pthread_mutex_lock((pthread_mutex_t *)(a1 + 176));
  if ((_DWORD)v3)
    sub_239EC2C90(v3, v4);
  v5 = *(unsigned __int8 *)(a1 + 56);
  if (pthread_mutex_unlock(v2))
  {
    sub_239A444D4((uint64_t)"unknown file", 335, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  return v5 != 0;
}

void sub_2397A4B84(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE97C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2397A4B94(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE97C8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

_BYTE *sub_2397A4BCC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  char *v4;
  _BYTE *result;

  v4 = (char *)operator new(0x120uLL);
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = &off_250AE9800;
  *((_QWORD *)v4 + 3) = off_250AE9658;
  *((_QWORD *)v4 + 4) = 0;
  v4[40] = 0;
  pthread_rwlock_init((pthread_rwlock_t *)(v4 + 48), 0);
  *((_QWORD *)v4 + 31) = 0;
  result = v4 + 256;
  if (*(char *)(a1 + 23) < 0)
  {
    result = sub_23941A7F8(result, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)result = *(_OWORD *)a1;
    *((_QWORD *)v4 + 34) = *(_QWORD *)(a1 + 16);
  }
  *((_DWORD *)v4 + 70) = *(_DWORD *)(a1 + 24);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_2397A4C78(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  pthread_rwlock_t *v2;
  void *v4;

  pthread_rwlock_destroy(v2);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_2397A4CA4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE9800;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2397A4CB4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE9800;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397A4CE4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

_QWORD *sub_2397A4CF4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *a1 = &off_250AE9838;
  v2 = (std::__shared_weak_count *)a1[7];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (std::__shared_weak_count *)a1[5];
      if (v5)
        goto LABEL_6;
      return a1;
    }
  }
  v5 = (std::__shared_weak_count *)a1[5];
  if (!v5)
    return a1;
LABEL_6:
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (v7)
    return a1;
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_2397A4DAC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *a1 = &off_250AE9838;
  v2 = (std::__shared_weak_count *)a1[7];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[5];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[5];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

void sub_2397A4E64(_QWORD *a1)
{
  unsigned int *v1;
  unsigned int **v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unsigned int *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned __int16 v15;
  _BYTE *v16;
  BOOL v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  int v21;
  _QWORD *v22;
  uint64_t v23;
  unsigned __int16 v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  std::__shared_weak_count *v35;
  _QWORD v36[3];
  _QWORD *v37;
  unsigned __int8 v38;
  _BYTE v39[24];
  _BYTE *v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)a1[3];
  v1 = (unsigned int *)a1[4];
  v3 = (std::__shared_weak_count *)a1[5];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v7 = (unsigned int *)a1[6];
  v6 = (std::__shared_weak_count *)a1[7];
  if (v6)
  {
    v8 = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = (uint64_t *)(*(_QWORD *)(a1[1] + 320) + 16 * a1[2]);
  v12 = *v10;
  v11 = (std::__shared_weak_count *)v10[1];
  if (v11)
  {
    v13 = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v33 = v11;
  v34 = v6;
  v35 = v3;
  v15 = sub_2395BFB54(v1);
  if (v15 >= 0x100u && (_BYTE)v15)
  {
    do
    {
      sub_2397A5274(*v2, (uint64_t)v39);
      v16 = v40;
      if (v40)
        v17 = v41 == 0;
      else
        v17 = 1;
      if (!v17)
      {
        do
        {
          (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)v16 + 48))(v16, v12);
          sub_2397A5274(*v2, (uint64_t)v36);
          v18 = v40;
          v40 = 0;
          if (v18 == v39)
          {
            v18 = v39;
            v19 = 4;
          }
          else
          {
            if (!v18)
              goto LABEL_21;
            v19 = 5;
          }
          (*(void (**)(void))(*(_QWORD *)v18 + 8 * v19))();
LABEL_21:
          v20 = &v40;
          if (!v37)
            goto LABEL_24;
          if (v37 != v36)
          {
            v40 = v37;
            v20 = &v37;
LABEL_24:
            *v20 = 0;
            goto LABEL_26;
          }
          v40 = v39;
          (*(void (**)(_QWORD *, _BYTE *))(v36[0] + 24))(v36, v39);
LABEL_26:
          v21 = v38;
          v41 = v38;
          v22 = v37;
          if (v37 == v36)
          {
            v22 = v36;
            v23 = 4;
          }
          else
          {
            if (!v37)
              goto LABEL_31;
            v23 = 5;
          }
          (*(void (**)(void))(*v22 + 8 * v23))();
          v21 = v41;
LABEL_31:
          v16 = v40;
        }
        while (v40 && v21);
      }
      LOBYTE(v36[0]) = 1;
      sub_2395BFE44(v7, v36);
      v24 = sub_2395BFB54(v1);
      v25 = v40;
      if (v40 == v39)
      {
        v25 = v39;
        v26 = 4;
      }
      else
      {
        if (!v40)
          continue;
        v26 = 5;
      }
      (*(void (**)(void))(*v25 + 8 * v26))();
    }
    while (v24 >= 0x100u && (_BYTE)v24);
  }
  if (v33)
  {
    v27 = (unint64_t *)&v33->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  if (v34)
  {
    v29 = (unint64_t *)&v34->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  if (v35)
  {
    v31 = (unint64_t *)&v35->__shared_owners_;
    do
      v32 = __ldaxr(v31);
    while (__stlxr(v32 - 1, v31));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_2397A5164(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::__shared_weak_count *a9, std::__shared_weak_count *a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;

  if (a9)
  {
    p_shared_owners = (unint64_t *)&a9->__shared_owners_;
    do
      v22 = __ldaxr(p_shared_owners);
    while (__stlxr(v22 - 1, p_shared_owners));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a9->__on_zero_shared)(a9);
      std::__shared_weak_count::__release_weak(a9);
    }
  }
  if (a10)
  {
    v23 = (unint64_t *)&a10->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  if (a11)
  {
    v25 = (unint64_t *)&a11->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397A5274@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  pthread_mutex_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;
  pthread_mutex_t *v18;
  _QWORD v19[3];
  _QWORD *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = (pthread_mutex_t *)(a1 + 44);
  v18 = (pthread_mutex_t *)(a1 + 44);
  v5 = pthread_mutex_lock((pthread_mutex_t *)(a1 + 44));
  if ((_DWORD)v5)
    sub_239EC2C90(v5, v6);
  if (!*((_QWORD *)a1 + 6))
  {
    while (!*((_BYTE *)a1 + 56))
    {
      ++*((_QWORD *)a1 + 9);
      pthread_cond_wait((pthread_cond_t *)(a1 + 32), v4);
      --*((_QWORD *)a1 + 9);
      if (*((_QWORD *)a1 + 6))
        goto LABEL_5;
    }
    *(_QWORD *)(a2 + 24) = 0;
    *(_BYTE *)(a2 + 32) = 0;
    goto LABEL_30;
  }
LABEL_5:
  v7 = *(_QWORD *)(*((_QWORD *)a1 + 2) + ((*((_QWORD *)a1 + 5) >> 4) & 0xFFFFFFFFFFFFFF8))
     + 32 * (*((_QWORD *)a1 + 5) & 0x7FLL);
  v8 = *(_QWORD *)(v7 + 24);
  if (!v8)
    goto LABEL_8;
  if (v8 != v7)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
LABEL_8:
    v20 = (_QWORD *)v8;
    goto LABEL_11;
  }
  v20 = v19;
  (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v7 + 24) + 24))(*(_QWORD *)(v7 + 24), v19);
LABEL_11:
  v9 = *((_QWORD *)a1 + 5);
  v10 = *(_QWORD *)(*((_QWORD *)a1 + 2) + ((v9 >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * (v9 & 0x7F);
  v11 = *(_QWORD **)(v10 + 24);
  if (v11 == (_QWORD *)v10)
  {
    v12 = 4;
    v11 = (_QWORD *)(*(_QWORD *)(*((_QWORD *)a1 + 2) + ((*((_QWORD *)a1 + 5) >> 4) & 0xFFFFFFFFFFFFFF8))
                   + 32 * (*((_QWORD *)a1 + 5) & 0x7FLL));
    goto LABEL_15;
  }
  if (v11)
  {
    v12 = 5;
LABEL_15:
    (*(void (**)(void))(*v11 + 8 * v12))();
    v9 = *((_QWORD *)a1 + 5);
  }
  v13 = *((_QWORD *)a1 + 6) - 1;
  v14 = v9 + 1;
  *((_QWORD *)a1 + 5) = v14;
  *((_QWORD *)a1 + 6) = v13;
  if (v14 >= 0x100)
  {
    operator delete(**((void ***)a1 + 2));
    *((_QWORD *)a1 + 2) += 8;
    v13 = *((_QWORD *)a1 + 6);
    *((_QWORD *)a1 + 5) -= 128;
  }
  if (v13 < *a1)
    pthread_cond_signal((pthread_cond_t *)(a1 + 20));
  if (!v20)
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_BYTE *)(a2 + 32) = 1;
    goto LABEL_30;
  }
  if (v20 == v19)
  {
    *(_QWORD *)(a2 + 24) = a2;
    (*(void (**)(_QWORD *, uint64_t))(v19[0] + 24))(v19, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 24) = (*(uint64_t (**)(void))(*v20 + 16))();
  }
  v15 = v20;
  *(_BYTE *)(a2 + 32) = 1;
  if (v15 == v19)
  {
    v16 = 4;
    v15 = v19;
  }
  else
  {
    if (!v15)
      goto LABEL_30;
    v16 = 5;
  }
  (*(void (**)(void))(*v15 + 8 * v16))();
  v4 = v18;
LABEL_30:
  result = pthread_mutex_unlock(v4);
  if ((_DWORD)result)
  {
    sub_239A444D4((uint64_t)"unknown file", 335, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  return result;
}

void sub_2397A54F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, pthread_mutex_t *a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v14;
  uint64_t v15;

  v14 = a13;
  if (a13 == &a10)
  {
    v15 = 4;
    v14 = &a10;
  }
  else
  {
    if (!a13)
    {
      sub_2397A3C14(&a9);
      _Unwind_Resume(a1);
    }
    v15 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v14 + 8 * v15))();
  sub_2397A3C14(&a9);
  _Unwind_Resume(a1);
}

void sub_2397A5570(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 317, a3, a4);
}

void sub_2397A5578(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 335, a3, a4);
}

BOOL sub_2397A5580(_QWORD *a1, uint64_t a2)
{
  char *v4;
  char *i;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  _BOOL8 v23;
  unint64_t v24;
  char *v25;
  char *v26;
  void *v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  void *__p;
  char *v33;
  __int128 v34;

  v4 = *(char **)a2;
  for (i = *(char **)(a2 + 8); i != v4; i -= 32)
  {
    v6 = (std::__shared_weak_count *)*((_QWORD *)i - 1);
    if (!v6)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      v9 = (std::__shared_weak_count *)*((_QWORD *)i - 3);
      if (!v9)
        continue;
    }
    else
    {
LABEL_8:
      v9 = (std::__shared_weak_count *)*((_QWORD *)i - 3);
      if (!v9)
        continue;
    }
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_QWORD *)(a2 + 8) = v4;
  sub_2397A585C((char **)a2, (uint64_t)(a1[1] - *a1) >> 3);
  sub_2397A98A4(&__p);
  v12 = v33;
  if (v33 == __p)
  {
LABEL_31:
    v23 = 0;
    if (!v12)
      return v23;
    goto LABEL_39;
  }
  v14 = (_QWORD *)*a1;
  v13 = (_QWORD *)a1[1];
  if (v13 != (_QWORD *)*a1)
  {
    v15 = (char *)__p + 16 * *v14;
    while (1)
    {
      v12 = (char *)__p;
      if (*v14 >= (unint64_t)((v33 - (_BYTE *)__p) >> 4))
        goto LABEL_31;
      sub_23946D5E0(&v34, (uint64_t)__p + 16 * *v14);
      v16 = v34;
      v34 = 0uLL;
      v17 = (std::__shared_weak_count *)*((_QWORD *)v15 + 1);
      *(_OWORD *)v15 = v16;
      if (!v17)
        goto LABEL_24;
      v18 = (unint64_t *)&v17->__shared_owners_;
      do
        v19 = __ldaxr(v18);
      while (__stlxr(v19 - 1, v18));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
        v20 = (std::__shared_weak_count *)*((_QWORD *)&v34 + 1);
        if (*((_QWORD *)&v34 + 1))
        {
LABEL_25:
          v21 = (unint64_t *)&v20->__shared_owners_;
          do
            v22 = __ldaxr(v21);
          while (__stlxr(v22 - 1, v21));
          if (!v22)
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
        }
      }
      else
      {
LABEL_24:
        v20 = (std::__shared_weak_count *)*((_QWORD *)&v34 + 1);
        if (*((_QWORD *)&v34 + 1))
          goto LABEL_25;
      }
      if (++v14 == v13)
      {
        v24 = *(_QWORD *)(a2 + 8);
        if (v24 >= *(_QWORD *)(a2 + 16))
        {
          v25 = sub_2397A5D14((void **)a2, (uint64_t)v15);
        }
        else
        {
          sub_2397A9E70(*(_QWORD **)(a2 + 8), (uint64_t)v15);
          v25 = (char *)(v24 + 32);
          *(_QWORD *)(a2 + 8) = v24 + 32;
        }
        *(_QWORD *)(a2 + 8) = v25;
        v23 = &v25[-*(_QWORD *)a2] == (char *)32;
        v12 = (char *)__p;
        if (!__p)
          return v23;
        goto LABEL_39;
      }
    }
  }
  v23 = 0;
  v12 = (char *)__p;
  if (__p)
  {
LABEL_39:
    v26 = v33;
    v27 = v12;
    if (v33 != v12)
    {
      do
      {
        v28 = (std::__shared_weak_count *)*((_QWORD *)v26 - 1);
        if (v28)
        {
          v29 = (unint64_t *)&v28->__shared_owners_;
          do
            v30 = __ldaxr(v29);
          while (__stlxr(v30 - 1, v29));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        v26 -= 16;
      }
      while (v26 != v12);
      v27 = __p;
    }
    v33 = v12;
    operator delete(v27);
  }
  return v23;
}

void sub_2397A581C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2394631DC((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A5830(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  *(_QWORD *)(v2 + 8) = v3;
  sub_2394631DC((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A5848(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2394631DC((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A585C(char **a1, unint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  __int128 v10;
  char *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;

  v2 = *a1;
  if (a2 <= (a1[2] - *a1) >> 5)
    return;
  if (a2 >> 59)
    sub_2394189F8();
  v4 = a1[1];
  v5 = 32 * a2;
  v6 = (char *)operator new(32 * a2);
  v7 = &v6[v5];
  v8 = &v6[v4 - v2];
  if (v4 == v2)
  {
    *a1 = v8;
    a1[1] = v8;
    a1[2] = v7;
    if (v2)
      goto LABEL_22;
    return;
  }
  v9 = &v6[v4 - v2];
  do
  {
    v10 = *((_OWORD *)v4 - 2);
    v4 -= 32;
    *((_OWORD *)v9 - 2) = v10;
    v9 -= 32;
    *(_QWORD *)v4 = 0;
    *((_QWORD *)v4 + 1) = 0;
    *((_OWORD *)v9 + 1) = *((_OWORD *)v4 + 1);
    *((_QWORD *)v4 + 2) = 0;
    *((_QWORD *)v4 + 3) = 0;
  }
  while (v4 != v2);
  v11 = *a1;
  v2 = a1[1];
  *a1 = v9;
  a1[1] = v8;
  a1[2] = v7;
  if (v2 != v11)
  {
    while (1)
    {
      v12 = (std::__shared_weak_count *)*((_QWORD *)v2 - 1);
      if (!v12)
        goto LABEL_13;
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
        v15 = (std::__shared_weak_count *)*((_QWORD *)v2 - 3);
        if (v15)
        {
LABEL_14:
          v16 = (unint64_t *)&v15->__shared_owners_;
          do
            v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }
      }
      else
      {
LABEL_13:
        v15 = (std::__shared_weak_count *)*((_QWORD *)v2 - 3);
        if (v15)
          goto LABEL_14;
      }
      v2 -= 32;
      if (v2 == v11)
      {
        v2 = v11;
        break;
      }
    }
  }
  if (v2)
LABEL_22:
    operator delete(v2);
}

BOOL sub_2397A59B4(uint64_t a1)
{
  char *v2;
  char *i;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  void *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  void *__p;
  char *v30;
  __int128 v31;

  v2 = *(char **)a1;
  for (i = *(char **)(a1 + 8); i != v2; i -= 32)
  {
    v4 = (std::__shared_weak_count *)*((_QWORD *)i - 1);
    if (!v4)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      v7 = (std::__shared_weak_count *)*((_QWORD *)i - 3);
      if (!v7)
        continue;
    }
    else
    {
LABEL_8:
      v7 = (std::__shared_weak_count *)*((_QWORD *)i - 3);
      if (!v7)
        continue;
    }
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *(_QWORD *)(a1 + 8) = v2;
  sub_2397A585C((char **)a1, 1uLL);
  sub_2397A98A4(&__p);
  v10 = (char *)__p;
  v11 = v30;
  if (v30 == __p)
  {
    v22 = v30;
    if (v30)
      goto LABEL_35;
    return v11 != v10;
  }
  v12 = (char *)__p;
  while (2)
  {
    sub_23946D5E0(&v31, (uint64_t)v12);
    v13 = v31;
    v31 = 0uLL;
    v14 = (std::__shared_weak_count *)*((_QWORD *)v10 + 1);
    *(_OWORD *)v10 = v13;
    if (!v14)
      goto LABEL_22;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
      v17 = (std::__shared_weak_count *)*((_QWORD *)&v31 + 1);
      if (*((_QWORD *)&v31 + 1))
      {
LABEL_23:
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
    }
    else
    {
LABEL_22:
      v17 = (std::__shared_weak_count *)*((_QWORD *)&v31 + 1);
      if (*((_QWORD *)&v31 + 1))
        goto LABEL_23;
    }
    v12 += 16;
    if (v12 != v11)
      continue;
    break;
  }
  v20 = *(_QWORD *)(a1 + 8);
  if (v20 >= *(_QWORD *)(a1 + 16))
  {
    v21 = sub_2397A5D14((void **)a1, (uint64_t)v10);
  }
  else
  {
    sub_2397A9E70(*(_QWORD **)(a1 + 8), (uint64_t)v10);
    v21 = (char *)(v20 + 32);
    *(_QWORD *)(a1 + 8) = v20 + 32;
  }
  *(_QWORD *)(a1 + 8) = v21;
  v22 = (char *)__p;
  if (__p)
  {
LABEL_35:
    v23 = v30;
    v24 = v22;
    if (v30 != v22)
    {
      do
      {
        v25 = (std::__shared_weak_count *)*((_QWORD *)v23 - 1);
        if (v25)
        {
          v26 = (unint64_t *)&v25->__shared_owners_;
          do
            v27 = __ldaxr(v26);
          while (__stlxr(v27 - 1, v26));
          if (!v27)
          {
            ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
            std::__shared_weak_count::__release_weak(v25);
          }
        }
        v23 -= 16;
      }
      while (v23 != v22);
      v24 = __p;
    }
    v30 = v22;
    operator delete(v24);
  }
  return v11 != v10;
}

void sub_2397A5C04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2394631DC((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A5C18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  *(_QWORD *)(v2 + 8) = v3;
  sub_2394631DC((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A5C30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2394631DC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397A5C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;

  v2 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v2; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 32;
    v4 = *(std::__shared_weak_count **)(i - 8);
    if (!v4)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      v7 = *(std::__shared_weak_count **)(i - 24);
      if (!v7)
        continue;
    }
    else
    {
LABEL_8:
      v7 = *(std::__shared_weak_count **)(i - 24);
      if (!v7)
        continue;
    }
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

char *sub_2397A5D14(void **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;

  v3 = ((_BYTE *)a1[1] - (_BYTE *)*a1) >> 5;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59)
    sub_2394189F8();
  v6 = (_BYTE *)a1[2] - (_BYTE *)*a1;
  if (v6 >> 4 > v4)
    v4 = v6 >> 4;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFE0)
    v7 = 0x7FFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  if (v7)
  {
    if (v7 >> 59)
      sub_239418A80();
    v8 = (char *)operator new(32 * v7);
  }
  else
  {
    v8 = 0;
  }
  v21 = &v8[32 * v3];
  v23 = &v8[32 * v7];
  sub_2397A9E70(v21, a2);
  v9 = v21;
  v10 = (char *)*a1;
  v11 = (char *)a1[1];
  if (v11 == *a1)
  {
    v13 = (char *)a1[1];
  }
  else
  {
    do
    {
      v12 = *((_OWORD *)v11 - 2);
      v11 -= 32;
      *((_OWORD *)v9 - 2) = v12;
      v9 -= 32;
      *(_QWORD *)v11 = 0;
      *((_QWORD *)v11 + 1) = 0;
      *((_OWORD *)v9 + 1) = *((_OWORD *)v11 + 1);
      *((_QWORD *)v11 + 2) = 0;
      *((_QWORD *)v11 + 3) = 0;
    }
    while (v11 != v10);
    v13 = (char *)*a1;
    v11 = (char *)a1[1];
  }
  *a1 = v9;
  a1[1] = v21 + 32;
  a1[2] = v23;
  if (v11 == v13)
  {
    if (v11)
      goto LABEL_17;
    return v21 + 32;
  }
  do
  {
    v22 = v11 - 32;
    v15 = (std::__shared_weak_count *)*((_QWORD *)v11 - 1);
    if (!v15)
      goto LABEL_24;
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      v18 = (std::__shared_weak_count *)*((_QWORD *)v11 - 3);
      if (!v18)
        goto LABEL_19;
    }
    else
    {
LABEL_24:
      v18 = (std::__shared_weak_count *)*((_QWORD *)v11 - 3);
      if (!v18)
        goto LABEL_19;
    }
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
LABEL_19:
    v11 -= 32;
  }
  while (v22 != v13);
  v11 = v13;
  if (!v13)
    return v21 + 32;
LABEL_17:
  operator delete(v11);
  return v21 + 32;
}

void sub_2397A5EDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397A5C44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397A5EF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t i;
  uint64_t v7;
  void *v8;

  v2 = a1[2];
  v3 = a1[3];
  if (v2 == v3)
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    do
    {
      sub_2397A9494(v2);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v4 += objc_msgSend(v5, "length");

      v2 += 16;
    }
    while (v2 != v3);
  }
  v7 = a1[5];
  for (i = a1[6]; v7 != i; v7 += 16)
  {
    sub_2397A9494(v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v4 += objc_msgSend(v8, "allocatedSize");

  }
  return v4;
}

void sub_2397A5F94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2397A5FA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2397A5FB4(_QWORD *a1, uint64_t *a2, uint64_t *a3)
{
  char *v5;
  char *v6;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t j;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  __int128 v46;
  unint64_t v47;

  if (a2[1] == *a2)
  {
    v17 = a1[2];
    for (i = a1[3]; i != v17; i -= 16)
    {
      v19 = *(std::__shared_weak_count **)(i - 8);
      if (v19)
      {
        p_shared_owners = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldaxr(p_shared_owners);
        while (__stlxr(v21 - 1, p_shared_owners));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
    }
    a1[3] = v17;
    goto LABEL_36;
  }
  v47 = 0;
  v46 = 0u;
  v5 = (char *)a1[2];
  v6 = (char *)a1[3];
  if (v5 == v6)
  {
    v14 = (char *)a1[2];
    *((_OWORD *)a1 + 1) = 0uLL;
    *(_QWORD *)&v46 = v5;
    *((_QWORD *)&v46 + 1) = v5;
    v22 = a1[4];
    a1[4] = 0;
    v47 = v22;
    if (!v5)
      goto LABEL_36;
    goto LABEL_26;
  }
  do
  {
    v9 = *a2;
    v10 = a2[1];
    if (*a2 != v10)
    {
      while (1)
      {
        sub_2397A9494(v9);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        sub_2397A9494((uint64_t)v5);
        v12 = (void *)objc_claimAutoreleasedReturnValue();

        if (v11 == v12)
          break;
        v9 += 16;
        if (v9 == v10)
        {
          v9 = v10;
          break;
        }
      }
      if (v9 != a2[1])
      {
        v13 = *((_QWORD *)&v46 + 1);
        if (*((_QWORD *)&v46 + 1) >= v47)
        {
          v8 = sub_23971D9E0((char **)&v46, (uint64_t)v5);
        }
        else
        {
          sub_23946D5E0(*((_QWORD **)&v46 + 1), (uint64_t)v5);
          v8 = (char *)(v13 + 16);
        }
        *((_QWORD *)&v46 + 1) = v8;
      }
    }
    v5 += 16;
  }
  while (v5 != v6);
  v14 = (char *)a1[2];
  v5 = (char *)a1[3];
  v15 = v47;
  *((_OWORD *)a1 + 1) = v46;
  *(_QWORD *)&v46 = v14;
  *((_QWORD *)&v46 + 1) = v5;
  v16 = a1[4];
  a1[4] = v15;
  v47 = v16;
  if (v14)
  {
LABEL_26:
    if (v5 != v14)
    {
      do
      {
        v23 = (std::__shared_weak_count *)*((_QWORD *)v5 - 1);
        if (v23)
        {
          v24 = (unint64_t *)&v23->__shared_owners_;
          do
            v25 = __ldaxr(v24);
          while (__stlxr(v25 - 1, v24));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
            std::__shared_weak_count::__release_weak(v23);
          }
        }
        v5 -= 16;
      }
      while (v5 != v14);
      v5 = (char *)v46;
    }
    *((_QWORD *)&v46 + 1) = v14;
    operator delete(v5);
  }
LABEL_36:
  if (a3[1] == *a3)
  {
    v41 = a1[5];
    for (j = a1[6]; j != v41; j -= 16)
    {
      v43 = *(std::__shared_weak_count **)(j - 8);
      if (v43)
      {
        v44 = (unint64_t *)&v43->__shared_owners_;
        do
          v45 = __ldaxr(v44);
        while (__stlxr(v45 - 1, v44));
        if (!v45)
        {
          ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
          std::__shared_weak_count::__release_weak(v43);
        }
      }
    }
    a1[6] = v41;
  }
  else
  {
    v47 = 0;
    v46 = 0u;
    v26 = (char *)a1[5];
    v27 = (char *)a1[6];
    if (v26 == v27)
    {
      v28 = (char *)a1[5];
      *(_OWORD *)(a1 + 5) = 0uLL;
      *(_QWORD *)&v46 = v26;
      *((_QWORD *)&v46 + 1) = v26;
      v29 = a1[7];
      a1[7] = 0;
      v47 = v29;
      if (!v26)
        return;
      goto LABEL_51;
    }
    do
    {
      v31 = *a3;
      v32 = a3[1];
      if (*a3 == v32)
        goto LABEL_48;
      while (1)
      {
        sub_2397A9494(v31);
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        sub_2397A9494((uint64_t)v26);
        v34 = (void *)objc_claimAutoreleasedReturnValue();

        if (v33 == v34)
          break;
        v31 += 16;
        if (v31 == v32)
        {
          v31 = v32;
          break;
        }
      }
      if (v31 == a3[1])
      {
LABEL_48:
        v35 = *((_QWORD *)&v46 + 1);
        if (*((_QWORD *)&v46 + 1) >= v47)
        {
          v30 = sub_2397A7B98((char **)&v46, (uint64_t)v26);
        }
        else
        {
          sub_23946D5E0(*((_QWORD **)&v46 + 1), (uint64_t)v26);
          v30 = (char *)(v35 + 16);
        }
        *((_QWORD *)&v46 + 1) = v30;
      }
      v26 += 16;
    }
    while (v26 != v27);
    v28 = (char *)a1[5];
    v26 = (char *)a1[6];
    v36 = v47;
    *(_OWORD *)(a1 + 5) = v46;
    *(_QWORD *)&v46 = v28;
    *((_QWORD *)&v46 + 1) = v26;
    v37 = a1[7];
    a1[7] = v36;
    v47 = v37;
    if (v28)
    {
LABEL_51:
      if (v26 != v28)
      {
        do
        {
          v38 = (std::__shared_weak_count *)*((_QWORD *)v26 - 1);
          if (v38)
          {
            v39 = (unint64_t *)&v38->__shared_owners_;
            do
              v40 = __ldaxr(v39);
            while (__stlxr(v40 - 1, v39));
            if (!v40)
            {
              ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
              std::__shared_weak_count::__release_weak(v38);
            }
          }
          v26 -= 16;
        }
        while (v26 != v28);
        v26 = (char *)v46;
      }
      *((_QWORD *)&v46 + 1) = v28;
      operator delete(v26);
    }
  }
}

void sub_2397A637C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_2394631DC(&a9);
  _Unwind_Resume(a1);
}

void sub_2397A6394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_2394631DC(&a9);
  _Unwind_Resume(a1);
}

void sub_2397A63A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_2394631DC(&a9);
  _Unwind_Resume(a1);
}

void sub_2397A63C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_2394631DC(&a9);
  _Unwind_Resume(a1);
}

void sub_2397A63D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_2394631DC(&a9);
  _Unwind_Resume(a1);
}

void sub_2397A63EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_2394631DC(&a9);
  _Unwind_Resume(a1);
}

void sub_2397A6400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  sub_2394631DC(&a9);
  _Unwind_Resume(a1);
}

void sub_2397A6418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_2394631DC(&a9);
  _Unwind_Resume(a1);
}

void sub_2397A642C(_QWORD *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  void *__p;
  char *v26;
  unint64_t v27;
  void *v28;
  char *v29;
  unint64_t v30;

  v28 = 0;
  v29 = 0;
  v30 = 0;
  v5 = *a2;
  v6 = a2[1];
  if (*a2 != v6)
  {
    v7 = 0;
    do
    {
      while (1)
      {
        v8 = *(_QWORD *)(v5 + 16);
        if ((unint64_t)v7 < v30)
          break;
        v7 = sub_23971D9E0((char **)&v28, v8);
        v29 = v7;
        v5 += 24;
        if (v5 == v6)
          goto LABEL_6;
      }
      sub_23946D5E0(v7, v8);
      v7 += 16;
      v29 = v7;
      v5 += 24;
    }
    while (v5 != v6);
  }
LABEL_6:
  __p = 0;
  v26 = 0;
  v27 = 0;
  v9 = *a3;
  v10 = a3[1];
  if (*a3 != v10)
  {
    v11 = 0;
    do
    {
      v12 = *(_QWORD *)(v9 + 48);
      if ((unint64_t)v11 >= v27)
      {
        v11 = sub_2397A7B98((char **)&__p, v12);
      }
      else
      {
        sub_23946D5E0(v11, v12);
        v11 += 16;
      }
      v26 = v11;
      v9 += 56;
    }
    while (v9 != v10);
  }
  sub_2397A5FB4(a1, (uint64_t *)&v28, (uint64_t *)&__p);
  v13 = (char *)__p;
  if (__p)
  {
    v14 = v26;
    v15 = __p;
    if (v26 != __p)
    {
      do
      {
        v16 = (std::__shared_weak_count *)*((_QWORD *)v14 - 1);
        if (v16)
        {
          p_shared_owners = (unint64_t *)&v16->__shared_owners_;
          do
            v18 = __ldaxr(p_shared_owners);
          while (__stlxr(v18 - 1, p_shared_owners));
          if (!v18)
          {
            ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
            std::__shared_weak_count::__release_weak(v16);
          }
        }
        v14 -= 16;
      }
      while (v14 != v13);
      v15 = __p;
    }
    v26 = v13;
    operator delete(v15);
  }
  v19 = (char *)v28;
  if (v28)
  {
    v20 = v29;
    v21 = v28;
    if (v29 != v28)
    {
      do
      {
        v22 = (std::__shared_weak_count *)*((_QWORD *)v20 - 1);
        if (v22)
        {
          v23 = (unint64_t *)&v22->__shared_owners_;
          do
            v24 = __ldaxr(v23);
          while (__stlxr(v24 - 1, v23));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
        v20 -= 16;
      }
      while (v20 != v19);
      v21 = v28;
    }
    v29 = v19;
    operator delete(v21);
  }
}

void sub_2397A6614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
  sub_2394631DC(&a9);
  sub_2394631DC(&a12);
  _Unwind_Resume(a1);
}

void sub_2397A6640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2394631DC((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A6658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2394631DC((void **)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397A666C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 v33;
  _QWORD *v34;
  _OWORD *v35;
  _QWORD *v36;
  char *v37;
  std::__shared_weak_count *v39;
  unint64_t *p_shared_owners;
  unint64_t v41;
  __int128 v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;

  v3 = a3;
  v5 = (_QWORD *)*a1;
  v6 = a1[1];
  v7 = a2 - *a1;
  v8 = (_QWORD *)(*a1 + (v7 & 0xFFFFFFFFFFFFFFF0));
  v9 = a1[2];
  if (v6 >= v9)
  {
    v24 = ((uint64_t)(v6 - (_QWORD)v5) >> 4) + 1;
    if (v24 >> 60)
      sub_2394189F8();
    v25 = v9 - (_QWORD)v5;
    v26 = v25 >> 3;
    if (v25 >> 3 <= v24)
      v26 = v24;
    if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF0)
      v27 = 0xFFFFFFFFFFFFFFFLL;
    else
      v27 = v26;
    v45 = a1 + 2;
    if (v27)
    {
      if (v27 >> 60)
        sub_239418A80();
      v28 = (char *)operator new(16 * v27);
    }
    else
    {
      v28 = 0;
    }
    *(_QWORD *)&v42 = v28;
    *((_QWORD *)&v42 + 1) = &v28[16 * (v7 >> 4)];
    v43 = (_QWORD *)*((_QWORD *)&v42 + 1);
    v44 = &v28[16 * v27];
    sub_2397A7D20((uint64_t)&v42, v3);
    v29 = *((_QWORD *)&v42 + 1);
    v30 = (_QWORD *)*a1;
    v31 = *((_QWORD *)&v42 + 1);
    if ((_QWORD *)*a1 != v8)
    {
      v31 = *((_QWORD *)&v42 + 1);
      v32 = v8;
      do
      {
        v33 = *((_OWORD *)v32 - 1);
        v32 -= 2;
        *(_OWORD *)(v31 - 16) = v33;
        v31 -= 16;
        *v32 = 0;
        v32[1] = 0;
      }
      while (v32 != v30);
    }
    *((_QWORD *)&v42 + 1) = v31;
    v34 = (_QWORD *)a1[1];
    v35 = v43;
    if (v34 != v8)
    {
      do
      {
        *v35++ = *(_OWORD *)v8;
        *v8 = 0;
        v8[1] = 0;
        v8 += 2;
      }
      while (v8 != v34);
      v31 = *((_QWORD *)&v42 + 1);
      v8 = (_QWORD *)a1[1];
    }
    v36 = (_QWORD *)*a1;
    *a1 = v31;
    a1[1] = v35;
    v37 = (char *)a1[2];
    a1[2] = v44;
    v43 = v8;
    v44 = v37;
    *(_QWORD *)&v42 = v36;
    *((_QWORD *)&v42 + 1) = v36;
    if (v8 == v36)
    {
      if (!v8)
        return (_QWORD *)v29;
    }
    else
    {
      do
      {
        v43 = v8 - 2;
        v39 = (std::__shared_weak_count *)*(v8 - 1);
        if (v39)
        {
          p_shared_owners = (unint64_t *)&v39->__shared_owners_;
          do
            v41 = __ldaxr(p_shared_owners);
          while (__stlxr(v41 - 1, p_shared_owners));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
            std::__shared_weak_count::__release_weak(v39);
          }
        }
        v8 = v43;
      }
      while (v43 != v36);
      v8 = (_QWORD *)v42;
      if (!(_QWORD)v42)
        return (_QWORD *)v29;
    }
    operator delete(v8);
    return (_QWORD *)v29;
  }
  if (v8 == (_QWORD *)v6)
  {
    sub_23946D5E0((_QWORD *)(*a1 + (v7 & 0xFFFFFFFFFFFFFFF0)), a3);
    a1[1] = v8 + 2;
  }
  else
  {
    v10 = (_QWORD *)(v6 - 16);
    v11 = (_OWORD *)a1[1];
    if (v6 >= 0x10)
    {
      v12 = v6 - 16;
      v11 = (_OWORD *)a1[1];
      do
      {
        *v11++ = *(_OWORD *)v12;
        *(_QWORD *)v12 = 0;
        *(_QWORD *)(v12 + 8) = 0;
        v12 += 16;
      }
      while (v12 < v6);
    }
    a1[1] = v11;
    if ((_QWORD *)v6 != v8 + 2)
    {
      do
      {
        v20 = *((_OWORD *)v10 - 1);
        v10 -= 2;
        *v10 = 0;
        v10[1] = 0;
        v21 = *(std::__shared_weak_count **)(v6 - 8);
        *(_OWORD *)(v6 - 16) = v20;
        v6 -= 16;
        if (v21)
        {
          v22 = (unint64_t *)&v21->__shared_owners_;
          do
            v23 = __ldaxr(v22);
          while (__stlxr(v23 - 1, v22));
          if (!v23)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
      }
      while (v10 != v8);
    }
    if ((unint64_t)v8 <= v3)
      v3 += 16 * (a1[1] > v3);
    sub_23946D5E0(&v42, v3);
    v13 = v42;
    v42 = 0uLL;
    v14 = (std::__shared_weak_count *)v8[1];
    *(_OWORD *)v8 = v13;
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    v17 = (std::__shared_weak_count *)*((_QWORD *)&v42 + 1);
    if (*((_QWORD *)&v42 + 1))
    {
      v18 = (unint64_t *)(*((_QWORD *)&v42 + 1) + 8);
      do
        v19 = __ldaxr(v18);
      while (__stlxr(v19 - 1, v18));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
  }
  return v8;
}

void sub_2397A6988(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = v1;
  _Unwind_Resume(a1);
}

void sub_2397A6990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23946D7C8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_2397A69A4(_QWORD *a1, uint64_t *a2, void ***a3)
{
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  _BOOL8 v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void **v29;
  void **v30;
  void **v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  unint64_t v40;
  unint64_t v41;
  void **v42;
  void **v43;
  void *v44;
  void **v45;
  uint64_t v46;
  __int128 v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  void *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  __int128 v65;
  std::__shared_weak_count *v66;
  unint64_t *p_shared_owners;
  unint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  unint64_t v75;
  unsigned int v76;
  _QWORD *v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  BOOL v84;
  _QWORD *v85;
  _QWORD *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t v94;
  id v96;
  std::__shared_weak_count_vtbl *v97;
  std::__shared_weak_count *v98;
  id v99;
  void *__p;
  _QWORD *v101;
  unint64_t v102;
  void *v103;
  uint64_t *v104;
  uint64_t *v105;
  __int128 v106;

  v5 = (void *)MEMORY[0x23B83EC40]();
  v6 = (_QWORD *)*a2;
  v7 = (_QWORD *)a2[1];
  if ((_QWORD *)*a2 == v7)
  {
    sub_2397A969C();
  }
  else
  {
    v8 = 0;
    do
    {
      if (*v6 > 0xFFFFFFFEuLL)
        goto LABEL_6;
      v8 += *v6;
      v6 += 3;
    }
    while (v6 != v7);
    if (sub_2397A969C() < v8)
    {
LABEL_6:
      v9 = 0;
      goto LABEL_114;
    }
  }
  v91 = v5;
  v92 = a2;
  v103 = 0;
  v104 = 0;
  v105 = 0;
  v10 = (uint64_t *)*a2;
  v11 = (uint64_t *)a2[1];
  if (v10 == v11)
  {
    v16 = 0;
    v15 = 0;
    goto LABEL_30;
  }
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = v104;
  do
  {
    while (v12 < v13)
    {
      *v12 = v14;
      v17 = *v10;
      v10 += 3;
      *((_DWORD *)v12 + 2) = v17;
      v16 = v12 + 2;
      ++v14;
      v12 += 2;
      if (v10 == v11)
        goto LABEL_28;
    }
    v18 = ((char *)v12 - (char *)v15) >> 4;
    v19 = v18 + 1;
    if ((unint64_t)(v18 + 1) >> 60)
    {
      v104 = v16;
      v105 = v13;
      v103 = v15;
      sub_2394189F8();
    }
    if (v13 - v15 > v19)
      v19 = v13 - v15;
    if ((unint64_t)((char *)v13 - (char *)v15) >= 0x7FFFFFFFFFFFFFF0)
      v20 = 0xFFFFFFFFFFFFFFFLL;
    else
      v20 = v19;
    if (v20 >> 60)
    {
      v104 = v16;
      v105 = v13;
      v103 = v15;
      sub_239418A80();
    }
    v21 = (char *)operator new(16 * v20);
    v22 = &v21[16 * v18];
    *(_QWORD *)v22 = v14;
    *((_DWORD *)v22 + 2) = *v10;
    if (v12 == v15)
    {
      v24 = &v21[16 * v18];
      v13 = (uint64_t *)&v21[16 * v20];
      v16 = (uint64_t *)(v22 + 16);
      if (v15)
        goto LABEL_23;
    }
    else
    {
      v23 = &v21[16 * v18];
      do
      {
        v24 = v23 - 16;
        *((_OWORD *)v23 - 1) = *((_OWORD *)v12 - 1);
        v12 -= 2;
        v23 -= 16;
      }
      while (v12 != v15);
      v13 = (uint64_t *)&v21[16 * v20];
      v16 = (uint64_t *)(v22 + 16);
      if (v15)
LABEL_23:
        operator delete(v15);
    }
    v15 = (uint64_t *)v24;
    v10 += 3;
    ++v14;
    v12 = v16;
  }
  while (v10 != v11);
LABEL_28:
  v104 = v16;
  v105 = v13;
LABEL_30:
  v25 = 126 - 2 * __clz(((char *)v16 - (char *)v15) >> 4);
  v103 = v15;
  if (v16 == v15)
    v26 = 0;
  else
    v26 = v25;
  sub_2397A7EF4(v15, v16, v26, 1);
  __p = 0;
  v101 = 0;
  v102 = 0;
  v27 = (uint64_t *)v103;
  v93 = v104;
  if (v103 == v104)
    goto LABEL_98;
  while (2)
  {
    while (2)
    {
      v94 = *(_QWORD *)(*v92 + 24 * *v27 + 8);
      v28 = a1[2];
      if (v28 == a1[3])
      {
LABEL_70:
        v57 = sub_2397A5EF0(a1);
        v58 = *((unsigned int *)v27 + 2);
        if (v57 + v58 > (unint64_t)sub_2397A969C())
          sub_2397A7204((uint64_t)a1, (id **)&__p);
        sub_2397A9494((uint64_t)a1);
        v59 = (void *)objc_claimAutoreleasedReturnValue();
        v99 = (id)objc_msgSend(v59, "newBufferWithLength:options:", *((unsigned int *)v27 + 2), v94);

        v60 = v99;
        if (!v99)
        {
          sub_2397A7204((uint64_t)a1, (id **)&__p);
          sub_2397A9494((uint64_t)a1);
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          v62 = (void *)objc_msgSend(v61, "newBufferWithLength:options:", *((unsigned int *)v27 + 2), v94);
          v63 = v99;
          v99 = v62;

          v60 = v99;
        }
        sub_2397A9468(&v97, v60);
        v64 = *(_QWORD *)(*v92 + 24 * *v27 + 16);
        sub_23946D5E0(&v106, (uint64_t)&v97);
        v65 = v106;
        v106 = 0uLL;
        v66 = *(std::__shared_weak_count **)(v64 + 8);
        *(_OWORD *)v64 = v65;
        if (!v66)
          goto LABEL_78;
        p_shared_owners = (unint64_t *)&v66->__shared_owners_;
        do
          v68 = __ldaxr(p_shared_owners);
        while (__stlxr(v68 - 1, p_shared_owners));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
          std::__shared_weak_count::__release_weak(v66);
          v69 = (std::__shared_weak_count *)*((_QWORD *)&v106 + 1);
          if (*((_QWORD *)&v106 + 1))
          {
LABEL_79:
            v70 = (unint64_t *)&v69->__shared_owners_;
            do
              v71 = __ldaxr(v70);
            while (__stlxr(v71 - 1, v70));
            if (!v71)
            {
              ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
              std::__shared_weak_count::__release_weak(v69);
            }
          }
        }
        else
        {
LABEL_78:
          v69 = (std::__shared_weak_count *)*((_QWORD *)&v106 + 1);
          if (*((_QWORD *)&v106 + 1))
            goto LABEL_79;
        }
        v73 = a1[2];
        v72 = a1[3];
        if (v73 != v72)
        {
          while (1)
          {
            sub_2397A9494(v73);
            v74 = (void *)objc_claimAutoreleasedReturnValue();
            v75 = objc_msgSend(v74, "length");
            v76 = sub_2397A9DB4((uint64_t)&v97);

            if (v75 < v76)
              break;
            v73 += 16;
            if (v73 == v72)
            {
              v73 = v72;
              break;
            }
          }
        }
        sub_2397A666C(a1 + 2, v73, (uint64_t)&v97);
        v77 = v101;
        if ((unint64_t)v101 >= v102)
        {
          v101 = sub_239516238(&__p, &v99);
          v78 = v98;
          if (!v98)
            goto LABEL_35;
        }
        else
        {
          *v77 = v99;
          v101 = v77 + 1;
          v78 = v98;
          if (!v98)
            goto LABEL_35;
        }
        v79 = (unint64_t *)&v78->__shared_owners_;
        do
          v80 = __ldaxr(v79);
        while (__stlxr(v80 - 1, v79));
        if (!v80)
        {
          ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
          std::__shared_weak_count::__release_weak(v78);
        }
LABEL_35:

        v27 += 2;
        if (v27 == v93)
          goto LABEL_98;
        continue;
      }
      break;
    }
    while (1)
    {
LABEL_40:
      v30 = (void **)__p;
      v31 = (void **)v101;
      sub_2397A9494(v28);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      if (v30 != v31)
      {
        while (*v30 != v32)
        {
          if (++v30 == v31)
          {
            v30 = v31;
            break;
          }
        }
      }
      v29 = (void **)v101;

      if (v30 != v29)
        goto LABEL_39;
      v33 = *v27;
      v34 = *v92;
      sub_2397A9494(v28);
      v35 = (id)objc_claimAutoreleasedReturnValue();
      v36 = *(_QWORD *)(v34 + 24 * v33 + 8);
      v37 = objc_msgSend(v35, "storageMode");
      v38 = *(_QWORD *)(v34 + 24 * v33);
      if (v38 <= objc_msgSend(v35, "length"))
        break;

      v28 += 16;
      if (v28 == a1[3])
        goto LABEL_70;
    }

    if ((v36 & 0x20) != 0)
    {
      if (v37 == 2)
        goto LABEL_51;
LABEL_39:
      v28 += 16;
      if (v28 == a1[3])
        goto LABEL_70;
      goto LABEL_40;
    }
    if (v37)
      goto LABEL_39;
LABEL_51:
    sub_2397A9494(v28);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = objc_msgSend(v39, "length");
    v41 = *((unsigned int *)v27 + 2);

    if (v40 < v41)
      goto LABEL_70;
    v42 = *a3;
    v43 = a3[1];
    sub_2397A9494(v28);
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    if (v42 != v43)
    {
      while (*v42 != v44)
      {
        if (++v42 == v43)
        {
          v42 = v43;
          break;
        }
      }
    }
    v45 = a3[1];

    if (v42 != v45)
      goto LABEL_39;
    if (v28 == a1[3])
      goto LABEL_70;
    v46 = *(_QWORD *)(*v92 + 24 * *v27 + 16);
    sub_23946D5E0(&v106, v28);
    v47 = v106;
    v106 = 0uLL;
    v48 = *(std::__shared_weak_count **)(v46 + 8);
    *(_OWORD *)v46 = v47;
    if (v48)
    {
      v49 = (unint64_t *)&v48->__shared_owners_;
      do
        v50 = __ldaxr(v49);
      while (__stlxr(v50 - 1, v49));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
        std::__shared_weak_count::__release_weak(v48);
      }
    }
    v51 = (std::__shared_weak_count *)*((_QWORD *)&v106 + 1);
    if (*((_QWORD *)&v106 + 1))
    {
      v52 = (unint64_t *)(*((_QWORD *)&v106 + 1) + 8);
      do
        v53 = __ldaxr(v52);
      while (__stlxr(v53 - 1, v52));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
        std::__shared_weak_count::__release_weak(v51);
      }
    }
    sub_2397A9494(v28);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    v96 = v54;
    v55 = v101;
    if ((unint64_t)v101 >= v102)
    {
      v56 = sub_2397A8FBC(&__p, (uint64_t *)&v96);
    }
    else
    {
      v96 = 0;
      *v101 = v54;
      v56 = v55 + 1;
    }
    v101 = v56;

    v27 += 2;
    if (v27 != v93)
      continue;
    break;
  }
LABEL_98:
  v81 = v92[1];
  if (*v92 == v81)
  {
    v9 = 1;
    v5 = v91;
    v85 = __p;
    if (!__p)
      goto LABEL_112;
LABEL_106:
    v86 = v101;
    v87 = v85;
    if (v101 != v85)
    {
      do
      {
        v88 = (void *)*--v86;

      }
      while (v86 != v85);
      v87 = __p;
    }
    v101 = v85;
    operator delete(v87);
    v89 = v103;
    if (v103)
LABEL_113:
      operator delete(v89);
  }
  else
  {
    v82 = *v92 + 24;
    v5 = v91;
    do
    {
      sub_2397A9494(*(_QWORD *)(v82 - 8));
      v83 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v83 != 0;

      if (v83)
        v84 = v82 == v81;
      else
        v84 = 1;
      v82 += 24;
    }
    while (!v84);
    v85 = __p;
    if (__p)
      goto LABEL_106;
LABEL_112:
    v89 = v103;
    if (v103)
      goto LABEL_113;
  }
LABEL_114:
  objc_autoreleasePoolPop(v5);
  return v9;
}

void sub_2397A7134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24)
{

  sub_239513590(&a19);
  if (__p)
  {
    a23 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2397A7204(uint64_t a1, id **a2)
{
  uint64_t v4;
  uint64_t i;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  id *v9;
  id *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  unsigned int v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  void *context;
  std::__shared_weak_count_vtbl *v21;
  std::__shared_weak_count *v22;

  context = (void *)MEMORY[0x23B83EC40]();
  v4 = *(_QWORD *)(a1 + 16);
  for (i = *(_QWORD *)(a1 + 24); i != v4; i -= 16)
  {
    v6 = *(std::__shared_weak_count **)(i - 8);
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
  *(_QWORD *)(a1 + 24) = v4;
  v9 = *a2;
  v10 = a2[1];
  while (v9 != v10)
  {
    v11 = *v9;
    sub_2397A9468(&v21, v11);
    v13 = *(_QWORD *)(a1 + 16);
    v12 = *(_QWORD *)(a1 + 24);
    if (v13 != v12)
    {
      while (1)
      {
        sub_2397A9494(v13);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = objc_msgSend(v14, "length");
        v16 = sub_2397A9DB4((uint64_t)&v21);

        if (v15 < v16)
          break;
        v13 += 16;
        if (v13 == v12)
        {
          v13 = v12;
          break;
        }
      }
    }
    sub_2397A666C((_QWORD *)(a1 + 16), v13, (uint64_t)&v21);
    v17 = v22;
    if (v22)
    {
      v18 = (unint64_t *)&v22->__shared_owners_;
      do
        v19 = __ldaxr(v18);
      while (__stlxr(v19 - 1, v18));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }

    ++v9;
  }
  objc_autoreleasePoolPop(context);
}

void sub_2397A737C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_2397A73A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void *v3;
  void *v4;
  va_list va;

  va_start(va, a3);

  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2397A73C4(uint64_t a1, unsigned int **a2)
{
  uint64_t v4;
  void *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  BOOL v9;
  uint64_t i;
  void **v11;
  void **v12;
  void *v13;
  void **v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  void *v32;
  void **v33;
  void **v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  void *v38;
  void *v39;
  uint64_t v40;
  __int128 v41;
  std::__shared_weak_count *v42;
  unint64_t *p_shared_owners;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  void **v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unsigned int *v54;
  uint64_t v55;
  void *v56;
  _BOOL8 v57;
  BOOL v58;
  void **v59;
  void **v60;
  void *v61;
  void *v62;
  void *v64;
  id v65;
  std::__shared_weak_count_vtbl *v66;
  std::__shared_weak_count *v67;
  id v68;
  void *__p;
  void **v70;
  unint64_t v71;
  __int128 v72;

  v4 = MEMORY[0x23B83EC40]();
  v5 = (void *)v4;
  v6 = *a2;
  v7 = a2[1];
  if (*a2 == v7)
  {
    v59 = 0;
    __p = 0;
    v70 = 0;
    v57 = 1;
    v71 = 0;
    goto LABEL_79;
  }
  v8 = *a2;
  do
  {
    if (*v8)
      v9 = v8[1] == 0;
    else
      v9 = 1;
    if (v9)
    {
      v57 = 0;
      goto LABEL_84;
    }
    v8 += 14;
  }
  while (v8 != v7);
  __p = 0;
  v70 = 0;
  v71 = 0;
  if (v6 == v7)
  {
    v59 = 0;
    v57 = 1;
    goto LABEL_79;
  }
  v64 = (void *)v4;
  while (2)
  {
    while (2)
    {
      for (i = *(_QWORD *)(a1 + 40); ; i += 16)
      {
        if (i == *(_QWORD *)(a1 + 48))
          goto LABEL_39;
        v11 = (void **)__p;
        v12 = v70;
        sub_2397A9494(i);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11 != v12)
        {
          while (*v11 != v13)
          {
            if (++v11 == v12)
            {
              v11 = v12;
              break;
            }
          }
        }
        v14 = v70;

        if (v11 == v14)
        {
          sub_2397A9494(i);
          v15 = (id)objc_claimAutoreleasedReturnValue();
          v16 = *v6;
          if (objc_msgSend(v15, "width") < v16
            || (v17 = v6[1], objc_msgSend(v15, "height") < v17)
            || (v18 = *((_QWORD *)v6 + 3), v18 != objc_msgSend(v15, "pixelFormat"))
            || (v19 = *((_QWORD *)v6 + 4), v19 != objc_msgSend(v15, "storageMode"))
            || (v20 = *((_QWORD *)v6 + 2), v20 != objc_msgSend(v15, "textureType"))
            || (v21 = *((_QWORD *)v6 + 5), v21 != objc_msgSend(v15, "usage")))
          {

            continue;
          }
          v22 = v6[2];
          v23 = objc_msgSend(v15, "arrayLength");

          if (v23 == v22)
            break;
        }
      }
      if (i == *(_QWORD *)(a1 + 48))
      {
LABEL_39:
        v35 = sub_2397A5EF0((_QWORD *)a1);
        v36 = *v6;
        v37 = v6[1];
        if (v35 + (unint64_t)(16 * v36 * v37) > sub_2397A969C())
          sub_2397A7A68(a1, (id **)&__p);
        v38 = (void *)objc_opt_new();
        objc_msgSend(v38, "setWidth:", *v6);
        objc_msgSend(v38, "setHeight:", v6[1]);
        objc_msgSend(v38, "setArrayLength:", v6[2]);
        objc_msgSend(v38, "setTextureType:", *((_QWORD *)v6 + 2));
        objc_msgSend(v38, "setStorageMode:", *((_QWORD *)v6 + 4));
        objc_msgSend(v38, "setPixelFormat:", *((_QWORD *)v6 + 3));
        objc_msgSend(v38, "setUsage:", *((_QWORD *)v6 + 5));
        sub_2397A9494(a1);
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        v68 = (id)objc_msgSend(v39, "newTextureWithDescriptor:", v38);

        sub_2397A9468(&v66, v68);
        v40 = *((_QWORD *)v6 + 6);
        sub_23946D5E0(&v72, (uint64_t)&v66);
        v41 = v72;
        v72 = 0uLL;
        v42 = *(std::__shared_weak_count **)(v40 + 8);
        *(_OWORD *)v40 = v41;
        if (!v42)
          goto LABEL_45;
        p_shared_owners = (unint64_t *)&v42->__shared_owners_;
        do
          v44 = __ldaxr(p_shared_owners);
        while (__stlxr(v44 - 1, p_shared_owners));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
          v45 = (std::__shared_weak_count *)*((_QWORD *)&v72 + 1);
          if (!*((_QWORD *)&v72 + 1))
            goto LABEL_51;
        }
        else
        {
LABEL_45:
          v45 = (std::__shared_weak_count *)*((_QWORD *)&v72 + 1);
          if (!*((_QWORD *)&v72 + 1))
            goto LABEL_51;
        }
        v46 = (unint64_t *)&v45->__shared_owners_;
        do
          v47 = __ldaxr(v46);
        while (__stlxr(v47 - 1, v46));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
LABEL_51:
        v48 = *(_QWORD *)(a1 + 48);
        if (v48 >= *(_QWORD *)(a1 + 56))
        {
          v49 = sub_2397A9158((char **)(a1 + 40), (uint64_t)&v66);
        }
        else
        {
          sub_23946D5E0(*(_QWORD **)(a1 + 48), (uint64_t)&v66);
          v49 = (char *)(v48 + 16);
          *(_QWORD *)(a1 + 48) = v48 + 16;
        }
        *(_QWORD *)(a1 + 48) = v49;
        v50 = v70;
        if ((unint64_t)v70 >= v71)
        {
          v70 = (void **)sub_239516238(&__p, &v68);
          v51 = v67;
          if (!v67)
            goto LABEL_62;
        }
        else
        {
          *v50 = v68;
          v70 = v50 + 1;
          v51 = v67;
          if (!v67)
            goto LABEL_62;
        }
        v52 = (unint64_t *)&v51->__shared_owners_;
        do
          v53 = __ldaxr(v52);
        while (__stlxr(v53 - 1, v52));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
LABEL_62:

        v6 += 14;
        if (v6 != v7)
          continue;
        goto LABEL_66;
      }
      break;
    }
    v24 = *((_QWORD *)v6 + 6);
    sub_23946D5E0(&v72, i);
    v25 = v72;
    v72 = 0uLL;
    v26 = *(std::__shared_weak_count **)(v24 + 8);
    *(_OWORD *)v24 = v25;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    v29 = (std::__shared_weak_count *)*((_QWORD *)&v72 + 1);
    if (*((_QWORD *)&v72 + 1))
    {
      v30 = (unint64_t *)(*((_QWORD *)&v72 + 1) + 8);
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    sub_2397A9494(i);
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    v65 = v32;
    v33 = v70;
    if ((unint64_t)v70 >= v71)
    {
      v34 = (void **)sub_2397A8FBC(&__p, (uint64_t *)&v65);
    }
    else
    {
      v65 = 0;
      *v70 = v32;
      v34 = v33 + 1;
    }
    v70 = v34;

    v6 += 14;
    if (v6 != v7)
      continue;
    break;
  }
LABEL_66:
  v54 = a2[1];
  if (*a2 == v54)
  {
    v57 = 1;
  }
  else
  {
    v55 = (uint64_t)(*a2 + 14);
    do
    {
      sub_2397A9494(*(_QWORD *)(v55 - 8));
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      v57 = v56 != 0;

      if (v56)
        v58 = v55 == (_QWORD)v54;
      else
        v58 = 1;
      v55 += 56;
    }
    while (!v58);
  }
  v59 = (void **)__p;
  v5 = v64;
LABEL_79:
  if (v59)
  {
    v60 = v70;
    v61 = v59;
    if (v70 != v59)
    {
      do
      {
        v62 = *--v60;

      }
      while (v60 != v59);
      v61 = __p;
    }
    v70 = v59;
    operator delete(v61);
  }
LABEL_84:
  objc_autoreleasePoolPop(v5);
  return v57;
}

void sub_2397A791C(_Unwind_Exception *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);

  sub_239513590((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A7938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_239513590((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A794C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  id v10;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, id);
  *(_QWORD *)(v3 + 48) = v5;
  sub_239416DA0((uint64_t)va);

  sub_239513590((void **)va1);
  _Unwind_Resume(a1);
}

void sub_2397A7A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  void *v6;
  va_list va;

  va_start(va, a6);

  sub_239513590((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A7A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_239513590((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A7A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  void *v6;
  va_list va;

  va_start(va, a6);

  sub_239513590((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A7A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_239513590((void **)va);
  _Unwind_Resume(a1);
}

void sub_2397A7A68(uint64_t a1, id **a2)
{
  void *v4;
  uint64_t v5;
  uint64_t i;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  id *v10;
  id *v11;
  std::__shared_weak_count_vtbl **v12;
  id v13;
  unint64_t v14;
  void *v15;

  v4 = (void *)MEMORY[0x23B83EC40]();
  v5 = *(_QWORD *)(a1 + 40);
  for (i = *(_QWORD *)(a1 + 48); i != v5; i -= 16)
  {
    v7 = *(std::__shared_weak_count **)(i - 8);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  *(_QWORD *)(a1 + 48) = v5;
  v10 = *a2;
  v11 = a2[1];
  while (v10 != v11)
  {
    v13 = *v10;
    v15 = v13;
    v14 = *(_QWORD *)(a1 + 48);
    if (v14 >= *(_QWORD *)(a1 + 56))
    {
      v12 = sub_2397A92E0((std::__shared_weak_count_vtbl ***)(a1 + 40), &v15);
    }
    else
    {
      sub_2397A9468(*(std::__shared_weak_count_vtbl ***)(a1 + 48), v13);
      v12 = (std::__shared_weak_count_vtbl **)(v14 + 16);
      *(_QWORD *)(a1 + 48) = v14 + 16;
    }
    *(_QWORD *)(a1 + 48) = v12;

    ++v10;
  }
  objc_autoreleasePoolPop(v4);
}

void sub_2397A7B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 48) = v11;

  _Unwind_Resume(a1);
}

void sub_2397A7B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

char *sub_2397A7B98(char **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  char *v18;
  char *v19;
  char *v20;

  v3 = (a1[1] - *a1) >> 4;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60)
    sub_2394189F8();
  v6 = a1[2] - *a1;
  if (v6 >> 3 > v4)
    v4 = v6 >> 3;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFF0)
    v7 = 0xFFFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  if (v7)
  {
    if (v7 >> 60)
      sub_239418A80();
    v8 = (char *)operator new(16 * v7);
  }
  else
  {
    v8 = 0;
  }
  v18 = &v8[16 * v3];
  v20 = &v8[16 * v7];
  sub_23946D5E0(v18, a2);
  v9 = v18;
  v11 = *a1;
  v10 = a1[1];
  if (v10 == *a1)
  {
    v13 = a1[1];
  }
  else
  {
    do
    {
      v12 = *((_OWORD *)v10 - 1);
      v10 -= 16;
      *((_OWORD *)v9 - 1) = v12;
      v9 -= 16;
      *(_QWORD *)v10 = 0;
      *((_QWORD *)v10 + 1) = 0;
    }
    while (v10 != v11);
    v13 = *a1;
    v10 = a1[1];
  }
  *a1 = v9;
  a1[1] = v18 + 16;
  a1[2] = v20;
  if (v10 == v13)
  {
    if (v10)
LABEL_17:
      operator delete(v10);
  }
  else
  {
    do
    {
      v19 = v10 - 16;
      v15 = (std::__shared_weak_count *)*((_QWORD *)v10 - 1);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      v10 = v19;
    }
    while (v19 != v13);
    v10 = v13;
    if (v13)
      goto LABEL_17;
  }
  return v18 + 16;
}

void sub_2397A7D0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946D7C8((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397A7D20(uint64_t a1, uint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  _QWORD *result;

  v4 = *(char **)(a1 + 16);
  if (v4 == *(char **)(a1 + 24))
  {
    v5 = *(char **)a1;
    v6 = *(char **)(a1 + 8);
    if ((unint64_t)v6 <= *(_QWORD *)a1)
    {
      v16 = (v4 - v5) >> 3;
      if (v4 == v5)
        v16 = 1;
      if (v16 >> 60)
        sub_239418A80();
      v17 = v16 >> 2;
      v18 = 16 * v16;
      v19 = (char *)operator new(16 * v16);
      v20 = &v19[16 * v17];
      v21 = &v19[v18];
      v22 = v4 - v6;
      if (v4 == v6)
      {
        *(_QWORD *)a1 = v19;
        *(_QWORD *)(a1 + 8) = v20;
        *(_QWORD *)(a1 + 16) = v20;
        *(_QWORD *)(a1 + 24) = v21;
      }
      else
      {
        v23 = v22 >> 4;
        v24 = &v20[v22 & 0xFFFFFFFFFFFFFFF0];
        v25 = 16 * v17;
        v26 = 16 * v23;
        do
        {
          *(_OWORD *)&v19[v25] = *(_OWORD *)v6;
          *(_QWORD *)v6 = 0;
          *((_QWORD *)v6 + 1) = 0;
          v6 += 16;
          v25 += 16;
          v26 -= 16;
        }
        while (v26);
        v5 = *(char **)a1;
        v27 = *(_QWORD *)(a1 + 8);
        v28 = *(_QWORD *)(a1 + 16);
        *(_QWORD *)a1 = v19;
        *(_QWORD *)(a1 + 8) = v20;
        *(_QWORD *)(a1 + 16) = v24;
        *(_QWORD *)(a1 + 24) = v21;
        while (v28 != v27)
        {
          v29 = *(std::__shared_weak_count **)(v28 - 8);
          if (v29)
          {
            p_shared_owners = (unint64_t *)&v29->__shared_owners_;
            do
              v31 = __ldaxr(p_shared_owners);
            while (__stlxr(v31 - 1, p_shared_owners));
            if (!v31)
            {
              ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
              std::__shared_weak_count::__release_weak(v29);
            }
          }
          v28 -= 16;
        }
      }
      if (v5)
        operator delete(v5);
      v4 = *(char **)(a1 + 16);
    }
    else
    {
      v7 = (uint64_t)&v6[-*(_QWORD *)a1] >> 4;
      if (v7 >= -1)
        v8 = v7 + 1;
      else
        v8 = v7 + 2;
      v9 = v8 >> 1;
      v10 = -v9;
      v11 = &v6[-16 * v9];
      if (v6 != v4)
      {
        do
        {
          v12 = *(_OWORD *)v6;
          *(_QWORD *)v6 = 0;
          *((_QWORD *)v6 + 1) = 0;
          v13 = (std::__shared_weak_count *)*((_QWORD *)v11 + 1);
          *(_OWORD *)v11 = v12;
          if (v13)
          {
            v14 = (unint64_t *)&v13->__shared_owners_;
            do
              v15 = __ldaxr(v14);
            while (__stlxr(v15 - 1, v14));
            if (!v15)
            {
              ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
              std::__shared_weak_count::__release_weak(v13);
            }
          }
          v6 += 16;
          v11 += 16;
        }
        while (v6 != v4);
        v4 = *(char **)(a1 + 8);
      }
      *(_QWORD *)(a1 + 8) = &v4[16 * v10];
      *(_QWORD *)(a1 + 16) = v11;
      v4 = v11;
    }
  }
  result = sub_23946D5E0(v4, a2);
  *(_QWORD *)(a1 + 16) += 16;
  return result;
}

uint64_t *sub_2397A7EF4(uint64_t *result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  unint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  unint64_t v43;
  unint64_t v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  uint64_t v63;
  unsigned int v64;
  unint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  unsigned int v68;
  uint64_t *v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int v73;
  unsigned int v74;
  BOOL v75;
  unint64_t v76;
  unsigned int v77;
  unint64_t v78;
  unsigned int v79;
  uint64_t *v80;
  uint64_t *v81;
  unsigned int v82;
  uint64_t v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  uint64_t v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int v94;
  uint64_t v95;
  unsigned int v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int v100;
  uint64_t v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t *v104;
  BOOL v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  unsigned int v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  int64_t v116;
  BOOL v117;
  uint64_t v118;
  unint64_t v119;
  unsigned int v120;
  unsigned int v121;
  unint64_t v122;
  unsigned int v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int v138;
  unsigned int v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int v147;
  unsigned int v148;
  uint64_t v149;
  unsigned int *v150;
  unsigned int v151;
  unsigned int v152;
  uint64_t v153;
  unsigned int *v154;
  unsigned int *v155;
  unsigned int v156;
  unsigned int v157;

  v7 = (uint64_t)result;
LABEL_2:
  v8 = v7;
  while (2)
  {
    v7 = v8;
    v9 = (uint64_t)a2 - v8;
    v10 = (uint64_t)((uint64_t)a2 - v8) >> 4;
    switch(v10)
    {
      case 0:
      case 1:
        return result;
      case 2:
        v86 = *((_DWORD *)a2 - 2);
        v87 = *(_DWORD *)(v8 + 8);
        if (v86 > v87)
        {
          v88 = *(_QWORD *)v8;
          *(_QWORD *)v8 = *(a2 - 2);
          *(a2 - 2) = v88;
          *(_DWORD *)(v8 + 8) = v86;
          *((_DWORD *)a2 - 2) = v87;
        }
        return result;
      case 3:
        v89 = *(_DWORD *)(v8 + 24);
        v90 = *(_DWORD *)(v8 + 8);
        v91 = *((_DWORD *)a2 - 2);
        if (v89 <= v90)
        {
          if (v91 > v89)
          {
            v146 = *(_QWORD *)(v8 + 16);
            *(_QWORD *)(v8 + 16) = *(a2 - 2);
            *(a2 - 2) = v146;
            *(_DWORD *)(v8 + 24) = v91;
            *((_DWORD *)a2 - 2) = v89;
            v147 = *(_DWORD *)(v8 + 24);
            v148 = *(_DWORD *)(v8 + 8);
            if (v147 > v148)
            {
              v149 = *(_QWORD *)v8;
              *(_QWORD *)v8 = *(_QWORD *)(v8 + 16);
              *(_QWORD *)(v8 + 16) = v149;
              *(_DWORD *)(v8 + 8) = v147;
              *(_DWORD *)(v8 + 24) = v148;
            }
          }
        }
        else
        {
          v92 = *(_QWORD *)v8;
          if (v91 <= v89)
          {
            *(_QWORD *)v8 = *(_QWORD *)(v8 + 16);
            *(_QWORD *)(v8 + 16) = v92;
            *(_DWORD *)(v8 + 8) = v89;
            *(_DWORD *)(v8 + 24) = v90;
            v157 = *((_DWORD *)a2 - 2);
            if (v157 <= v90)
              return result;
            *(_QWORD *)(v8 + 16) = *(a2 - 2);
            *(a2 - 2) = v92;
            *(_DWORD *)(v8 + 24) = v157;
          }
          else
          {
            *(_QWORD *)v8 = *(a2 - 2);
            *(a2 - 2) = v92;
            *(_DWORD *)(v8 + 8) = v91;
          }
          *((_DWORD *)a2 - 2) = v90;
        }
        return result;
      case 4:
        return sub_2397A8E68((uint64_t *)v8, (uint64_t *)(v8 + 16), (uint64_t *)(v8 + 32), a2 - 2);
      case 5:
        result = sub_2397A8E68((uint64_t *)v8, (uint64_t *)(v8 + 16), (uint64_t *)(v8 + 32), (uint64_t *)(v8 + 48));
        v93 = *((_DWORD *)a2 - 2);
        v94 = *(_DWORD *)(v8 + 56);
        if (v93 > v94)
        {
          v95 = *(_QWORD *)(v8 + 48);
          *(_QWORD *)(v8 + 48) = *(a2 - 2);
          *(a2 - 2) = v95;
          *(_DWORD *)(v8 + 56) = v93;
          *((_DWORD *)a2 - 2) = v94;
          v96 = *(_DWORD *)(v8 + 56);
          v97 = *(_DWORD *)(v8 + 40);
          if (v96 > v97)
          {
            v98 = *(_QWORD *)(v8 + 32);
            v99 = *(_QWORD *)(v8 + 48);
            *(_QWORD *)(v8 + 32) = v99;
            *(_QWORD *)(v8 + 48) = v98;
            *(_DWORD *)(v8 + 40) = v96;
            *(_DWORD *)(v8 + 56) = v97;
            v100 = *(_DWORD *)(v8 + 24);
            if (v96 > v100)
            {
              v101 = *(_QWORD *)(v8 + 16);
              *(_QWORD *)(v8 + 16) = v99;
              *(_QWORD *)(v8 + 32) = v101;
              *(_DWORD *)(v8 + 24) = v96;
              *(_DWORD *)(v8 + 40) = v100;
              v102 = *(_DWORD *)(v8 + 8);
              if (v96 > v102)
              {
                v103 = *(_QWORD *)v8;
                *(_QWORD *)v8 = v99;
                *(_QWORD *)(v8 + 16) = v103;
                *(_DWORD *)(v8 + 8) = v96;
                *(_DWORD *)(v8 + 24) = v102;
              }
            }
          }
        }
        return result;
      default:
        if (v9 <= 383)
        {
          v104 = (uint64_t *)(v8 + 16);
          v106 = (uint64_t *)v8 == a2 || v104 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v106)
            {
              v107 = 0;
              v108 = (uint64_t *)v8;
              do
              {
                v110 = *((_DWORD *)v108 + 6);
                v111 = *((_DWORD *)v108 + 2);
                v108 = v104;
                if (v110 > v111)
                {
                  v112 = *v104;
                  v113 = v107;
                  do
                  {
                    v114 = v8 + v113;
                    *(_QWORD *)(v114 + 16) = *(_QWORD *)(v8 + v113);
                    *(_DWORD *)(v114 + 24) = *(_DWORD *)(v8 + v113 + 8);
                    if (!v113)
                    {
                      v109 = v8;
                      goto LABEL_121;
                    }
                    v113 -= 16;
                  }
                  while (v110 > *(_DWORD *)(v114 - 8));
                  v109 = v8 + v113 + 16;
LABEL_121:
                  *(_QWORD *)v109 = v112;
                  *(_DWORD *)(v109 + 8) = v110;
                }
                v104 = v108 + 2;
                v107 += 16;
              }
              while (v108 + 2 != a2);
            }
          }
          else if (!v106)
          {
            v150 = (unsigned int *)(v8 + 24);
            do
            {
              v151 = *(_DWORD *)(v7 + 24);
              v152 = *(_DWORD *)(v7 + 8);
              v7 = (uint64_t)v104;
              if (v151 > v152)
              {
                v153 = *v104;
                v154 = v150;
                do
                {
                  v155 = v154;
                  *((_QWORD *)v154 - 1) = *((_QWORD *)v154 - 3);
                  v156 = *(v154 - 4);
                  v154 -= 4;
                  *v155 = v156;
                }
                while (v151 > *(v155 - 8));
                *((_QWORD *)v154 - 1) = v153;
                *v154 = v151;
              }
              v104 = (uint64_t *)(v7 + 16);
              v150 += 4;
            }
            while ((uint64_t *)(v7 + 16) != a2);
          }
          return result;
        }
        if (!a3)
        {
          if ((uint64_t *)v8 != a2)
          {
            v115 = (unint64_t)(v10 - 2) >> 1;
            v116 = v115;
            do
            {
              if (v115 >= v116)
              {
                v118 = (2 * v116) | 1;
                v119 = v8 + 16 * v118;
                if (2 * v116 + 2 < v10)
                {
                  v120 = *(_DWORD *)(v119 + 8);
                  v121 = *(_DWORD *)(v119 + 24);
                  v119 += 16 * (v120 > v121);
                  if (v120 > v121)
                    v118 = 2 * v116 + 2;
                }
                v122 = v8 + 16 * v116;
                v123 = *(_DWORD *)(v122 + 8);
                if (*(_DWORD *)(v119 + 8) <= v123)
                {
                  v124 = *(_QWORD *)v122;
                  do
                  {
                    v125 = v122;
                    v122 = v119;
                    *(_QWORD *)v125 = *(_QWORD *)v119;
                    *(_DWORD *)(v125 + 8) = *(_DWORD *)(v119 + 8);
                    if (v115 < v118)
                      break;
                    v126 = (2 * v118) | 1;
                    v119 = v8 + 16 * v126;
                    v127 = 2 * v118 + 2;
                    if (v127 < v10)
                    {
                      v128 = *(_DWORD *)(v119 + 8);
                      v129 = *(_DWORD *)(v119 + 24);
                      v119 += 16 * (v128 > v129);
                      if (v128 > v129)
                        v126 = v127;
                    }
                    result = (uint64_t *)*(unsigned int *)(v119 + 8);
                    v118 = v126;
                  }
                  while (result <= v123);
                  *(_QWORD *)v122 = v124;
                  *(_DWORD *)(v122 + 8) = v123;
                }
              }
              v117 = v116-- <= 0;
            }
            while (!v117);
            v130 = (unint64_t)v9 >> 4;
            do
            {
              v131 = 0;
              v132 = *(_QWORD *)v8;
              v133 = *(_DWORD *)(v8 + 8);
              v134 = v8;
              do
              {
                v135 = v134 + 16 * v131 + 16;
                v136 = (2 * v131) | 1;
                v137 = 2 * v131 + 2;
                if (v137 < v130)
                {
                  v138 = *(_DWORD *)(v135 + 8);
                  v139 = *(_DWORD *)(v135 + 24);
                  v135 += 16 * (v138 > v139);
                  if (v138 > v139)
                    v136 = v137;
                }
                *(_QWORD *)v134 = *(_QWORD *)v135;
                *(_DWORD *)(v134 + 8) = *(_DWORD *)(v135 + 8);
                v134 = v135;
                v131 = v136;
              }
              while (v136 <= (uint64_t)((unint64_t)(v130 - 2) >> 1));
              if ((uint64_t *)v135 == a2 - 2)
              {
                *(_QWORD *)v135 = v132;
                *(_DWORD *)(v135 + 8) = v133;
              }
              else
              {
                *(_QWORD *)v135 = *(a2 - 2);
                *(_DWORD *)(v135 + 8) = *((_DWORD *)a2 - 2);
                *(a2 - 2) = v132;
                *((_DWORD *)a2 - 2) = v133;
                v140 = v135 - v8 + 16;
                if (v140 >= 17)
                {
                  v141 = (((unint64_t)v140 >> 4) - 2) >> 1;
                  v142 = v8 + 16 * v141;
                  v143 = *(_DWORD *)(v135 + 8);
                  if (*(_DWORD *)(v142 + 8) > v143)
                  {
                    v144 = *(_QWORD *)v135;
                    do
                    {
                      v145 = v135;
                      v135 = v142;
                      *(_QWORD *)v145 = *(_QWORD *)v142;
                      *(_DWORD *)(v145 + 8) = *(_DWORD *)(v142 + 8);
                      if (!v141)
                        break;
                      v141 = (v141 - 1) >> 1;
                      v142 = v8 + 16 * v141;
                    }
                    while (*(_DWORD *)(v142 + 8) > v143);
                    *(_QWORD *)v135 = v144;
                    *(_DWORD *)(v135 + 8) = v143;
                  }
                }
              }
              a2 -= 2;
              v117 = v130-- <= 2;
            }
            while (!v117);
          }
          return result;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = v8 + 16 * ((unint64_t)v10 >> 1);
        v13 = *((_DWORD *)a2 - 2);
        if ((unint64_t)v9 < 0x801)
        {
          v17 = *(_DWORD *)(v8 + 8);
          v18 = *(_DWORD *)(v12 + 8);
          if (v17 <= v18)
          {
            if (v13 > v17)
            {
              v24 = *(_QWORD *)v8;
              *(_QWORD *)v8 = *(a2 - 2);
              *(a2 - 2) = v24;
              *(_DWORD *)(v8 + 8) = v13;
              *((_DWORD *)a2 - 2) = v17;
              v25 = *(_DWORD *)(v8 + 8);
              v26 = *(_DWORD *)(v12 + 8);
              if (v25 > v26)
              {
                v27 = *(_QWORD *)v12;
                *(_QWORD *)v12 = *(_QWORD *)v8;
                *(_QWORD *)v8 = v27;
                *(_DWORD *)(v12 + 8) = v25;
                *(_DWORD *)(v8 + 8) = v26;
                --a3;
                if ((a4 & 1) != 0)
                  goto LABEL_33;
                goto LABEL_57;
              }
            }
          }
          else
          {
            v19 = *(_QWORD *)v12;
            if (v13 <= v17)
            {
              *(_QWORD *)v12 = *(_QWORD *)v8;
              *(_QWORD *)v8 = v19;
              *(_DWORD *)(v12 + 8) = v17;
              *(_DWORD *)(v8 + 8) = v18;
              v39 = *((_DWORD *)a2 - 2);
              if (v39 <= v18)
                goto LABEL_32;
              *(_QWORD *)v8 = *(a2 - 2);
              *(a2 - 2) = v19;
              *(_DWORD *)(v8 + 8) = v39;
            }
            else
            {
              *(_QWORD *)v12 = *(a2 - 2);
              *(a2 - 2) = v19;
              *(_DWORD *)(v12 + 8) = v13;
            }
            *((_DWORD *)a2 - 2) = v18;
          }
LABEL_32:
          --a3;
          if ((a4 & 1) != 0)
            goto LABEL_33;
LABEL_57:
          v41 = *(_DWORD *)(v8 + 8);
          v40 = *(_QWORD *)v8;
          if (*(_DWORD *)(v8 - 8) > v41)
            goto LABEL_58;
          if (v41 <= *((_DWORD *)a2 - 2))
          {
            v78 = v8 + 16;
            do
            {
              v8 = v78;
              if (v78 >= (unint64_t)a2)
                break;
              v79 = *(_DWORD *)(v78 + 8);
              v78 += 16;
            }
            while (v41 <= v79);
          }
          else
          {
            v76 = v8;
            do
            {
              v8 = v76 + 16;
              v77 = *(_DWORD *)(v76 + 24);
              v76 += 16;
            }
            while (v41 <= v77);
          }
          v80 = a2;
          if (v8 < (unint64_t)a2)
          {
            v81 = a2;
            do
            {
              v80 = v81 - 2;
              v82 = *((_DWORD *)v81 - 2);
              v81 -= 2;
            }
            while (v41 > v82);
          }
          while (v8 < (unint64_t)v80)
          {
            v83 = *(_QWORD *)v8;
            *(_QWORD *)v8 = *v80;
            *v80 = v83;
            LODWORD(v83) = *(_DWORD *)(v8 + 8);
            *(_DWORD *)(v8 + 8) = *((_DWORD *)v80 + 2);
            *((_DWORD *)v80 + 2) = v83;
            do
            {
              v84 = *(_DWORD *)(v8 + 24);
              v8 += 16;
            }
            while (v41 <= v84);
            do
            {
              v85 = *((_DWORD *)v80 - 2);
              v80 -= 2;
            }
            while (v41 > v85);
          }
          if (v8 - 16 != v7)
          {
            *(_QWORD *)v7 = *(_QWORD *)(v8 - 16);
            *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 - 8);
          }
          a4 = 0;
          *(_QWORD *)(v8 - 16) = v40;
          *(_DWORD *)(v8 - 8) = v41;
          continue;
        }
        v14 = *(_DWORD *)(v12 + 8);
        v15 = *(_DWORD *)(v8 + 8);
        if (v14 <= v15)
        {
          if (v13 > v14)
          {
            v20 = *(_QWORD *)v12;
            *(_QWORD *)v12 = *(a2 - 2);
            *(a2 - 2) = v20;
            *(_DWORD *)(v12 + 8) = v13;
            *((_DWORD *)a2 - 2) = v14;
            v21 = *(_DWORD *)(v12 + 8);
            v22 = *(_DWORD *)(v8 + 8);
            if (v21 > v22)
            {
              v23 = *(_QWORD *)v8;
              *(_QWORD *)v8 = *(_QWORD *)v12;
              *(_QWORD *)v12 = v23;
              *(_DWORD *)(v8 + 8) = v21;
              *(_DWORD *)(v12 + 8) = v22;
            }
          }
        }
        else
        {
          v16 = *(_QWORD *)v8;
          if (v13 > v14)
          {
            *(_QWORD *)v8 = *(a2 - 2);
            *(a2 - 2) = v16;
            *(_DWORD *)(v8 + 8) = v13;
            goto LABEL_22;
          }
          *(_QWORD *)v8 = *(_QWORD *)v12;
          *(_QWORD *)v12 = v16;
          *(_DWORD *)(v8 + 8) = v14;
          *(_DWORD *)(v12 + 8) = v15;
          v28 = *((_DWORD *)a2 - 2);
          if (v28 > v15)
          {
            *(_QWORD *)v12 = *(a2 - 2);
            *(a2 - 2) = v16;
            *(_DWORD *)(v12 + 8) = v28;
LABEL_22:
            *((_DWORD *)a2 - 2) = v15;
          }
        }
        v29 = v8 + 16 * v11;
        v30 = v29 - 16;
        v31 = *(_DWORD *)(v29 - 8);
        v32 = *(_DWORD *)(v8 + 24);
        v33 = *((_DWORD *)a2 - 6);
        if (v31 <= v32)
        {
          if (v33 > v31)
          {
            v35 = *(_QWORD *)v30;
            *(_QWORD *)v30 = *(a2 - 4);
            *(a2 - 4) = v35;
            *(_DWORD *)(v30 + 8) = v33;
            *((_DWORD *)a2 - 6) = v31;
            v36 = *(_DWORD *)(v30 + 8);
            v37 = *(_DWORD *)(v8 + 24);
            if (v36 > v37)
            {
              v38 = *(_QWORD *)(v8 + 16);
              *(_QWORD *)(v8 + 16) = *(_QWORD *)v30;
              *(_QWORD *)v30 = v38;
              *(_DWORD *)(v8 + 24) = v36;
              *(_DWORD *)(v30 + 8) = v37;
            }
          }
        }
        else
        {
          v34 = *(_QWORD *)(v8 + 16);
          if (v33 > v31)
          {
            *(_QWORD *)(v8 + 16) = *(a2 - 4);
            *(a2 - 4) = v34;
            *(_DWORD *)(v8 + 24) = v33;
            goto LABEL_36;
          }
          *(_QWORD *)(v8 + 16) = *(_QWORD *)v30;
          *(_QWORD *)v30 = v34;
          *(_DWORD *)(v8 + 24) = v31;
          *(_DWORD *)(v30 + 8) = v32;
          v42 = *((_DWORD *)a2 - 6);
          if (v42 > v32)
          {
            *(_QWORD *)v30 = *(a2 - 4);
            *(a2 - 4) = v34;
            *(_DWORD *)(v30 + 8) = v42;
LABEL_36:
            *((_DWORD *)a2 - 6) = v32;
          }
        }
        v43 = v8 + 16 * v11;
        v44 = v43 + 16;
        v45 = *(_DWORD *)(v43 + 24);
        v46 = *(_DWORD *)(v8 + 40);
        v47 = *((_DWORD *)a2 - 10);
        if (v45 <= v46)
        {
          if (v47 > v45)
          {
            v49 = *(_QWORD *)v44;
            *(_QWORD *)v44 = *(a2 - 6);
            *(a2 - 6) = v49;
            *(_DWORD *)(v44 + 8) = v47;
            *((_DWORD *)a2 - 10) = v45;
            v50 = *(_DWORD *)(v44 + 8);
            v51 = *(_DWORD *)(v8 + 40);
            if (v50 > v51)
            {
              v52 = *(_QWORD *)(v8 + 32);
              *(_QWORD *)(v8 + 32) = *(_QWORD *)v44;
              *(_QWORD *)v44 = v52;
              *(_DWORD *)(v8 + 40) = v50;
              *(_DWORD *)(v44 + 8) = v51;
            }
          }
        }
        else
        {
          v48 = *(_QWORD *)(v8 + 32);
          if (v47 > v45)
          {
            *(_QWORD *)(v8 + 32) = *(a2 - 6);
            *(a2 - 6) = v48;
            *(_DWORD *)(v8 + 40) = v47;
            goto LABEL_45;
          }
          *(_QWORD *)(v8 + 32) = *(_QWORD *)v44;
          *(_QWORD *)v44 = v48;
          *(_DWORD *)(v8 + 40) = v45;
          *(_DWORD *)(v44 + 8) = v46;
          v53 = *((_DWORD *)a2 - 10);
          if (v53 > v46)
          {
            *(_QWORD *)v44 = *(a2 - 6);
            *(a2 - 6) = v48;
            *(_DWORD *)(v44 + 8) = v53;
LABEL_45:
            *((_DWORD *)a2 - 10) = v46;
          }
        }
        v54 = *(_DWORD *)(v12 + 8);
        v55 = *(_DWORD *)(v30 + 8);
        v56 = *(_DWORD *)(v44 + 8);
        if (v54 <= v55)
        {
          v57 = *(_QWORD *)v12;
          if (v56 <= v54)
          {
            v55 = *(_DWORD *)(v12 + 8);
          }
          else
          {
            v58 = *(_QWORD *)v44;
            *(_QWORD *)v12 = *(_QWORD *)v44;
            *(_QWORD *)v44 = v57;
            *(_DWORD *)(v12 + 8) = v56;
            *(_DWORD *)(v44 + 8) = v54;
            if (v56 <= v55)
            {
              v55 = v56;
              v57 = v58;
            }
            else
            {
              v57 = *(_QWORD *)v30;
              *(_QWORD *)v30 = v58;
              *(_QWORD *)v12 = v57;
              *(_DWORD *)(v30 + 8) = v56;
              *(_DWORD *)(v12 + 8) = v55;
            }
          }
        }
        else
        {
          v57 = *(_QWORD *)v30;
          if (v56 <= v54)
          {
            *(_QWORD *)v30 = *(_QWORD *)v12;
            *(_QWORD *)v12 = v57;
            *(_DWORD *)(v30 + 8) = v54;
            *(_DWORD *)(v12 + 8) = v55;
            if (v56 > v55)
            {
              v59 = *(_QWORD *)v44;
              *(_QWORD *)v12 = *(_QWORD *)v44;
              *(_QWORD *)v44 = v57;
              *(_DWORD *)(v12 + 8) = v56;
              *(_DWORD *)(v44 + 8) = v55;
              v55 = v56;
              v57 = v59;
            }
          }
          else
          {
            *(_QWORD *)v30 = *(_QWORD *)v44;
            *(_QWORD *)v44 = v57;
            *(_DWORD *)(v30 + 8) = v56;
            *(_DWORD *)(v44 + 8) = v55;
            v57 = *(_QWORD *)v12;
            v55 = v54;
          }
        }
        v60 = *(_QWORD *)v8;
        *(_QWORD *)v8 = v57;
        *(_QWORD *)v12 = v60;
        v61 = v8 + 16 * v11;
        v62 = *(_DWORD *)(v8 + 8);
        *(_DWORD *)(v8 + 8) = v55;
        *(_DWORD *)(v61 + 8) = v62;
        --a3;
        if ((a4 & 1) == 0)
          goto LABEL_57;
LABEL_33:
        v40 = *(_QWORD *)v8;
        v41 = *(_DWORD *)(v8 + 8);
LABEL_58:
        v63 = 0;
        do
        {
          v64 = *(_DWORD *)(v8 + v63 + 24);
          v63 += 16;
        }
        while (v64 > v41);
        v65 = v8 + v63;
        v66 = a2;
        if (v63 == 16)
        {
          v69 = a2;
          while (v65 < (unint64_t)v69)
          {
            v67 = v69 - 2;
            v70 = *((_DWORD *)v69 - 2);
            v69 -= 2;
            if (v70 > v41)
              goto LABEL_66;
          }
          v67 = v69;
          v8 = v65;
        }
        else
        {
          do
          {
            v67 = v66 - 2;
            v68 = *((_DWORD *)v66 - 2);
            v66 -= 2;
          }
          while (v68 <= v41);
LABEL_66:
          v8 = v65;
          if (v65 < (unint64_t)v67)
          {
            v71 = (unint64_t)v67;
            do
            {
              v72 = *(_QWORD *)v8;
              *(_QWORD *)v8 = *(_QWORD *)v71;
              *(_QWORD *)v71 = v72;
              LODWORD(v72) = *(_DWORD *)(v8 + 8);
              *(_DWORD *)(v8 + 8) = *(_DWORD *)(v71 + 8);
              *(_DWORD *)(v71 + 8) = v72;
              do
              {
                v73 = *(_DWORD *)(v8 + 24);
                v8 += 16;
              }
              while (v73 > v41);
              do
              {
                v74 = *(_DWORD *)(v71 - 8);
                v71 -= 16;
              }
              while (v74 <= v41);
            }
            while (v8 < v71);
          }
        }
        if (v8 - 16 != v7)
        {
          *(_QWORD *)v7 = *(_QWORD *)(v8 - 16);
          *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 - 8);
        }
        *(_QWORD *)(v8 - 16) = v40;
        *(_DWORD *)(v8 - 8) = v41;
        if (v65 < (unint64_t)v67)
        {
LABEL_77:
          result = (uint64_t *)sub_2397A7EF4(v7, v8 - 16, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v75 = sub_2397A8AC0(v7, (uint64_t *)(v8 - 16));
        result = (uint64_t *)sub_2397A8AC0(v8, a2);
        if (!(_DWORD)result)
        {
          if (v75)
            continue;
          goto LABEL_77;
        }
        a2 = (uint64_t *)(v8 - 16);
        if (!v75)
          goto LABEL_2;
        return result;
    }
  }
}

BOOL sub_2397A8AC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t *v38;
  uint64_t v39;
  int v40;
  uint64_t *v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = ((uint64_t)a2 - a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *((_DWORD *)a2 - 2);
      v7 = *(_DWORD *)(a1 + 8);
      if (v6 > v7)
      {
        v8 = *(_QWORD *)a1;
        *(_QWORD *)a1 = *(a2 - 2);
        *(a2 - 2) = v8;
        *(_DWORD *)(a1 + 8) = v6;
        *((_DWORD *)a2 - 2) = v7;
      }
      return result;
    case 3:
      v9 = *(_DWORD *)(a1 + 24);
      v10 = *(_DWORD *)(a1 + 8);
      v11 = *((_DWORD *)a2 - 2);
      if (v9 <= v10)
      {
        if (v11 > v9)
        {
          v30 = *(_QWORD *)(a1 + 16);
          *(_QWORD *)(a1 + 16) = *(a2 - 2);
          *(a2 - 2) = v30;
          *(_DWORD *)(a1 + 24) = v11;
          *((_DWORD *)a2 - 2) = v9;
          v31 = *(_DWORD *)(a1 + 24);
          v32 = *(_DWORD *)(a1 + 8);
          if (v31 > v32)
          {
            v33 = *(_QWORD *)a1;
            *(_QWORD *)a1 = *(_QWORD *)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v33;
            *(_DWORD *)(a1 + 8) = v31;
            *(_DWORD *)(a1 + 24) = v32;
          }
        }
      }
      else
      {
        v12 = *(_QWORD *)a1;
        if (v11 <= v9)
        {
          *(_QWORD *)a1 = *(_QWORD *)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 8) = v9;
          *(_DWORD *)(a1 + 24) = v10;
          v37 = *((_DWORD *)a2 - 2);
          if (v37 > v10)
          {
            *(_QWORD *)(a1 + 16) = *(a2 - 2);
            *(a2 - 2) = v12;
            *(_DWORD *)(a1 + 24) = v37;
            *((_DWORD *)a2 - 2) = v10;
          }
        }
        else
        {
          *(_QWORD *)a1 = *(a2 - 2);
          *(a2 - 2) = v12;
          *(_DWORD *)(a1 + 8) = v11;
          *((_DWORD *)a2 - 2) = v10;
        }
      }
      return result;
    case 4:
      sub_2397A8E68((uint64_t *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), a2 - 2);
      return 1;
    case 5:
      sub_2397A8E68((uint64_t *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (uint64_t *)(a1 + 48));
      v19 = *((_DWORD *)a2 - 2);
      v20 = *(_DWORD *)(a1 + 56);
      if (v19 <= v20)
        return 1;
      v21 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 48) = *(a2 - 2);
      *(a2 - 2) = v21;
      *(_DWORD *)(a1 + 56) = v19;
      *((_DWORD *)a2 - 2) = v20;
      v22 = *(_DWORD *)(a1 + 56);
      v23 = *(_DWORD *)(a1 + 40);
      if (v22 <= v23)
        return 1;
      v24 = *(_QWORD *)(a1 + 32);
      v25 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 32) = v25;
      *(_QWORD *)(a1 + 48) = v24;
      *(_DWORD *)(a1 + 40) = v22;
      *(_DWORD *)(a1 + 56) = v23;
      v26 = *(_DWORD *)(a1 + 24);
      if (v22 <= v26)
        return 1;
      v27 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v25;
      *(_QWORD *)(a1 + 32) = v27;
      *(_DWORD *)(a1 + 24) = v22;
      *(_DWORD *)(a1 + 40) = v26;
      v28 = *(_DWORD *)(a1 + 8);
      if (v22 <= v28)
        return 1;
      v29 = *(_QWORD *)a1;
      *(_QWORD *)a1 = v25;
      *(_QWORD *)(a1 + 16) = v29;
      *(_DWORD *)(a1 + 8) = v22;
      *(_DWORD *)(a1 + 24) = v28;
      return 1;
    default:
      v13 = *(_DWORD *)(a1 + 8);
      v14 = (unsigned int *)(a1 + 24);
      v15 = *(_DWORD *)(a1 + 24);
      v16 = *(_DWORD *)(a1 + 40);
      if (v15 > v13)
      {
        v17 = *(_QWORD *)a1;
        if (v16 <= v15)
        {
          *(_QWORD *)a1 = *(_QWORD *)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v17;
          *(_DWORD *)(a1 + 8) = v15;
          *(_DWORD *)(a1 + 24) = v13;
          if (v16 <= v13)
            goto LABEL_30;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v17;
          v18 = (unsigned int *)(a1 + 24);
        }
        else
        {
          *(_QWORD *)a1 = *(_QWORD *)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v17;
          v18 = (unsigned int *)(a1 + 8);
        }
        v14 = (unsigned int *)(a1 + 40);
        goto LABEL_29;
      }
      if (v16 > v15)
      {
        v34 = *(_QWORD *)(a1 + 16);
        v35 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)(a1 + 16) = v35;
        *(_QWORD *)(a1 + 32) = v34;
        *(_DWORD *)(a1 + 24) = v16;
        *(_DWORD *)(a1 + 40) = v15;
        if (v16 > v13)
        {
          v36 = *(_QWORD *)a1;
          *(_QWORD *)a1 = v35;
          *(_QWORD *)(a1 + 16) = v36;
          v18 = (unsigned int *)(a1 + 8);
LABEL_29:
          *v18 = v16;
          *v14 = v13;
        }
      }
LABEL_30:
      v38 = (uint64_t *)(a1 + 48);
      if ((uint64_t *)(a1 + 48) == a2)
        return 1;
      v39 = 0;
      v40 = 0;
      v41 = (uint64_t *)(a1 + 32);
      while (1)
      {
        v42 = *((_DWORD *)v38 + 2);
        if (v42 > *((_DWORD *)v41 + 2))
          break;
LABEL_39:
        v41 = v38;
        v39 += 16;
        v38 += 2;
        if (v38 == a2)
          return 1;
      }
      v43 = *v38;
      v44 = v39;
      do
      {
        v45 = a1 + v44;
        *(_QWORD *)(v45 + 48) = *(_QWORD *)(a1 + v44 + 32);
        *(_DWORD *)(v45 + 56) = *(_DWORD *)(a1 + v44 + 40);
        if (v44 == -32)
        {
          *(_QWORD *)a1 = v43;
          *(_DWORD *)(a1 + 8) = v42;
          if (++v40 != 8)
            goto LABEL_39;
          return v38 + 2 == a2;
        }
        v44 -= 16;
      }
      while (v42 > *(_DWORD *)(v45 + 24));
      v46 = a1 + v44;
      *(_QWORD *)(v46 + 48) = v43;
      *(_DWORD *)(v46 + 56) = v42;
      if (++v40 != 8)
        goto LABEL_39;
      return v38 + 2 == a2;
  }
}

uint64_t *sub_2397A8E68(uint64_t *result, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;

  v4 = *((_DWORD *)a2 + 2);
  v5 = *((_DWORD *)result + 2);
  v6 = *((_DWORD *)a3 + 2);
  if (v4 > v5)
  {
    v7 = *result;
    if (v6 <= v4)
    {
      *result = *a2;
      *a2 = v7;
      *((_DWORD *)result + 2) = v4;
      *((_DWORD *)a2 + 2) = v5;
      v4 = *((_DWORD *)a3 + 2);
      if (v4 <= v5)
        goto LABEL_11;
      *a2 = *a3;
      *a3 = v7;
      *((_DWORD *)a2 + 2) = v4;
    }
    else
    {
      *result = *a3;
      *a3 = v7;
      *((_DWORD *)result + 2) = v6;
    }
    *((_DWORD *)a3 + 2) = v5;
    v4 = v5;
LABEL_11:
    v12 = *((_DWORD *)a4 + 2);
    if (v12 <= v4)
      return result;
    goto LABEL_14;
  }
  if (v6 <= v4)
  {
    v4 = *((_DWORD *)a3 + 2);
    v12 = *((_DWORD *)a4 + 2);
    if (v12 <= v6)
      return result;
    goto LABEL_14;
  }
  v8 = *a2;
  *a2 = *a3;
  *a3 = v8;
  *((_DWORD *)a2 + 2) = v6;
  *((_DWORD *)a3 + 2) = v4;
  v9 = *((_DWORD *)a2 + 2);
  v10 = *((_DWORD *)result + 2);
  if (v9 <= v10)
    goto LABEL_11;
  v11 = *result;
  *result = *a2;
  *a2 = v11;
  *((_DWORD *)result + 2) = v9;
  *((_DWORD *)a2 + 2) = v10;
  v4 = *((_DWORD *)a3 + 2);
  v12 = *((_DWORD *)a4 + 2);
  if (v12 <= v4)
    return result;
LABEL_14:
  v13 = *a3;
  *a3 = *a4;
  *a4 = v13;
  *((_DWORD *)a3 + 2) = v12;
  *((_DWORD *)a4 + 2) = v4;
  v14 = *((_DWORD *)a3 + 2);
  v15 = *((_DWORD *)a2 + 2);
  if (v14 > v15)
  {
    v16 = *a2;
    *a2 = *a3;
    *a3 = v16;
    *((_DWORD *)a2 + 2) = v14;
    *((_DWORD *)a3 + 2) = v15;
    v17 = *((_DWORD *)a2 + 2);
    v18 = *((_DWORD *)result + 2);
    if (v17 > v18)
    {
      v19 = *result;
      *result = *a2;
      *a2 = v19;
      *((_DWORD *)result + 2) = v17;
      *((_DWORD *)a2 + 2) = v18;
    }
  }
  return result;
}

_QWORD *sub_2397A8FBC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  void *v27;

  v3 = a1[1] - *a1;
  v4 = v3 >> 3;
  v5 = (v3 >> 3) + 1;
  if (v5 >> 61)
    sub_2394189F8();
  v7 = a1[2] - *a1;
  if (v7 >> 2 > v5)
    v5 = v7 >> 2;
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8)
    v8 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v8 = v5;
  if (v8)
  {
    if (v8 >> 61)
      sub_239418A80();
    v9 = (char *)operator new(8 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[8 * v4];
  v11 = &v9[8 * v8];
  v12 = *a2;
  *a2 = 0;
  *(_QWORD *)v10 = v12;
  v13 = v10 + 8;
  v14 = (char *)*a1;
  v15 = (char *)a1[1];
  if (v15 == (char *)*a1)
  {
    *a1 = v10;
    a1[1] = v13;
    a1[2] = v11;
    if (!v15)
      return v13;
    goto LABEL_23;
  }
  v16 = (unint64_t)&v15[-*a1 - 8];
  if (v16 < 0x78 || &v15[-(v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v10 && &v9[v3 - (v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v15)
    goto LABEL_31;
  v17 = (v16 >> 3) + 1;
  v18 = 8 * (v17 & 0x3FFFFFFFFFFFFFFCLL);
  v10 -= v18;
  v19 = &v15[-v18];
  v20 = v15 - 16;
  v21 = &v9[8 * v4 - 16];
  v22 = v17 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    v24 = *((_OWORD *)v20 - 1);
    v23 = *(_OWORD *)v20;
    *((_OWORD *)v20 - 1) = 0uLL;
    *(_OWORD *)v20 = 0uLL;
    *((_OWORD *)v21 - 1) = v24;
    *(_OWORD *)v21 = v23;
    v20 -= 32;
    v21 -= 32;
    v22 -= 4;
  }
  while (v22);
  v15 = v19;
  if (v17 != (v17 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_31:
    do
    {
      v25 = *((_QWORD *)v15 - 1);
      v15 -= 8;
      *(_QWORD *)v15 = 0;
      *((_QWORD *)v10 - 1) = v25;
      v10 -= 8;
    }
    while (v15 != v14);
  }
  v26 = (char *)*a1;
  v15 = (char *)a1[1];
  *a1 = v10;
  a1[1] = v13;
  a1[2] = v11;
  if (v15 != v26)
  {
    do
    {
      v27 = (void *)*((_QWORD *)v15 - 1);
      v15 -= 8;

    }
    while (v15 != v26);
    v15 = v26;
  }
  if (v15)
LABEL_23:
    operator delete(v15);
  return v13;
}

char *sub_2397A9158(char **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  char *v18;
  char *v19;
  char *v20;

  v3 = (a1[1] - *a1) >> 4;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60)
    sub_2394189F8();
  v6 = a1[2] - *a1;
  if (v6 >> 3 > v4)
    v4 = v6 >> 3;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFF0)
    v7 = 0xFFFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  if (v7)
  {
    if (v7 >> 60)
      sub_239418A80();
    v8 = (char *)operator new(16 * v7);
  }
  else
  {
    v8 = 0;
  }
  v18 = &v8[16 * v3];
  v20 = &v8[16 * v7];
  sub_23946D5E0(v18, a2);
  v9 = v18;
  v11 = *a1;
  v10 = a1[1];
  if (v10 == *a1)
  {
    v13 = a1[1];
  }
  else
  {
    do
    {
      v12 = *((_OWORD *)v10 - 1);
      v10 -= 16;
      *((_OWORD *)v9 - 1) = v12;
      v9 -= 16;
      *(_QWORD *)v10 = 0;
      *((_QWORD *)v10 + 1) = 0;
    }
    while (v10 != v11);
    v13 = *a1;
    v10 = a1[1];
  }
  *a1 = v9;
  a1[1] = v18 + 16;
  a1[2] = v20;
  if (v10 == v13)
  {
    if (v10)
LABEL_17:
      operator delete(v10);
  }
  else
  {
    do
    {
      v19 = v10 - 16;
      v15 = (std::__shared_weak_count *)*((_QWORD *)v10 - 1);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      v10 = v19;
    }
    while (v19 != v13);
    v10 = v13;
    if (v13)
      goto LABEL_17;
  }
  return v18 + 16;
}

void sub_2397A92CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946D7C8((uint64_t)va);
  _Unwind_Resume(a1);
}

std::__shared_weak_count_vtbl **sub_2397A92E0(std::__shared_weak_count_vtbl ***a1, void **a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  std::__shared_weak_count_vtbl **v9;
  std::__shared_weak_count_vtbl **v10;
  std::__shared_weak_count_vtbl **v11;
  __int128 v12;
  std::__shared_weak_count_vtbl **v13;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count_vtbl **v18;
  std::__shared_weak_count_vtbl **v19;
  char *v20;

  v3 = ((char *)a1[1] - (char *)*a1) >> 4;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60)
    sub_2394189F8();
  v6 = (char *)a1[2] - (char *)*a1;
  if (v6 >> 3 > v4)
    v4 = v6 >> 3;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFF0)
    v7 = 0xFFFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  if (v7)
  {
    if (v7 >> 60)
      sub_239418A80();
    v8 = (char *)operator new(16 * v7);
  }
  else
  {
    v8 = 0;
  }
  v18 = (std::__shared_weak_count_vtbl **)&v8[16 * v3];
  v20 = &v8[16 * v7];
  sub_2397A9468(v18, *a2);
  v9 = v18;
  v11 = *a1;
  v10 = a1[1];
  if (v10 == *a1)
  {
    v13 = a1[1];
  }
  else
  {
    do
    {
      v12 = *((_OWORD *)v10 - 1);
      v10 -= 2;
      *((_OWORD *)v9 - 1) = v12;
      v9 -= 2;
      *v10 = 0;
      v10[1] = 0;
    }
    while (v10 != v11);
    v13 = *a1;
    v10 = a1[1];
  }
  *a1 = v9;
  a1[1] = v18 + 2;
  a1[2] = (std::__shared_weak_count_vtbl **)v20;
  if (v10 == v13)
  {
    if (v10)
LABEL_17:
      operator delete(v10);
  }
  else
  {
    do
    {
      v19 = v10 - 2;
      v15 = (std::__shared_weak_count *)*(v10 - 1);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      v10 = v19;
    }
    while (v19 != v13);
    v10 = v13;
    if (v13)
      goto LABEL_17;
  }
  return v18 + 2;
}

void sub_2397A9454(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946D7C8((uint64_t)va);
  _Unwind_Resume(a1);
}

std::__shared_weak_count_vtbl **sub_2397A9468(std::__shared_weak_count_vtbl **a1, void *a2)
{
  return sub_239639CC0(a1, (std::__shared_weak_count_vtbl *)a2, 0);
}

id sub_2397A9494(uint64_t a1)
{
  std::__shared_weak_count *v2;
  id v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;

  v3 = *(id *)a1;
  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      if (v3)
        return *(id *)a1;
      return 0;
    }
  }
  if (!v3)
    return 0;
  return *(id *)a1;
}

uint64_t sub_2397A9524(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  id v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;

  v2 = (void *)MEMORY[0x23B83EC40]();
  v4 = *(id *)a1;
  v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_7;
LABEL_9:
      v8 = 0;
      goto LABEL_10;
    }
  }
  if (!v4)
    goto LABEL_9;
LABEL_7:
  v8 = *(id *)a1;
LABEL_10:
  v9 = objc_msgSend(v8, "areBarycentricCoordsSupported");

  objc_autoreleasePoolPop(v2);
  return v9;
}

void sub_2397A95D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_2397A95E0(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  id v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;

  v2 = (void *)MEMORY[0x23B83EC40]();
  v4 = *(id *)a1;
  v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_7;
LABEL_9:
      v8 = 0;
      goto LABEL_10;
    }
  }
  if (!v4)
    goto LABEL_9;
LABEL_7:
  v8 = *(id *)a1;
LABEL_10:
  v9 = objc_msgSend(v8, "supportsRaytracing");

  objc_autoreleasePoolPop(v2);
  return v9;
}

void sub_2397A968C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_2397A969C()
{
  void *v0;
  void *v1;
  uint64_t v2;

  v0 = (void *)MEMORY[0x23B83EC40]();
  objc_msgSend(MEMORY[0x24BDD1760], "processInfo");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "physicalMemory");

  objc_autoreleasePoolPop(v0);
  return v2;
}

void sub_2397A96F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2397A9700(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  std::__shared_weak_count *v5;
  id v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  const char *v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = (void *)MEMORY[0x23B83EC40]();
  v6 = *(id *)a1;
  v5 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v5)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (v6)
      goto LABEL_7;
  }
  else
  {
LABEL_6:
    if (v6)
    {
LABEL_7:
      v10 = *(id *)a1;
      goto LABEL_10;
    }
  }
  v10 = 0;
LABEL_10:
  objc_msgSend(v10, "name");
  v11 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v12 = (const char *)objc_msgSend(v11, "UTF8String");
  v13 = strlen(v12);
  if (v13 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v14 = v13;
  if (v13 >= 0x17)
  {
    v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v15 = v13 | 7;
    v16 = v15 + 1;
    v17 = operator new(v15 + 1);
    a2[1] = v14;
    a2[2] = v16 | 0x8000000000000000;
    *a2 = v17;
    a2 = v17;
  }
  else
  {
    *((_BYTE *)a2 + 23) = v13;
    if (!v13)
      goto LABEL_18;
  }
  memmove(a2, v12, v14);
LABEL_18:
  *((_BYTE *)a2 + v14) = 0;

  objc_autoreleasePoolPop(v4);
}

void sub_2397A9844(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2397A9854(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2397A9868(std::__shared_weak_count_vtbl **a1@<X8>)
{
  void *v2;
  std::__shared_weak_count_vtbl *v3;

  v2 = (void *)MEMORY[0x23B83EC40]();
  v3 = (std::__shared_weak_count_vtbl *)MTLCreateSystemDefaultDevice();
  sub_239639CC0(a1, v3, 0);
  objc_autoreleasePoolPop(v2);
}

void sub_2397A98A4(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  std::__shared_weak_count_vtbl *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count_vtbl *v8;
  std::__shared_weak_count *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)MEMORY[0x23B83EC40]();
  v3 = (void *)MEMORY[0x23B83EC40]();
  v4 = (std::__shared_weak_count_vtbl *)MTLCreateSystemDefaultDevice();
  sub_239639CC0(&v8, v4, 0);
  objc_autoreleasePoolPop(v3);
  sub_2397A9F58(a1, (uint64_t)&v8, 1uLL);
  v5 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  objc_autoreleasePoolPop(v2);
}

void sub_2397A9978(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

id sub_2397A9990(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  id v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  std::__shared_weak_count *v10;
  id v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  id v15;

  v2 = (void *)MEMORY[0x23B83EC40]();
  v4 = *(id *)a1;
  v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v3)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!v4)
      goto LABEL_21;
  }
  else
  {
LABEL_6:
    if (!v4)
      goto LABEL_21;
  }
  v8 = *(id *)a1;
  if (v8)
  {
    v9 = v8;
    v11 = *(id *)a1;
    v10 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v10)
      goto LABEL_13;
    v12 = (unint64_t *)&v10->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (v11)
        goto LABEL_14;
    }
    else
    {
LABEL_13:
      if (v11)
      {
LABEL_14:
        v15 = *(id *)a1;
LABEL_20:
        v4 = (id)objc_msgSend(v15, "code");

        goto LABEL_21;
      }
    }
    v15 = 0;
    goto LABEL_20;
  }
  v4 = 0;
LABEL_21:
  objc_autoreleasePoolPop(v2);
  return v4;
}

void sub_2397A9AB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2397A9AC8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, std::__shared_weak_count_vtbl **a4@<X8>)
{
  void *v8;
  uint64_t *v9;
  void *v10;
  void *v11;
  std::__shared_weak_count *v12;
  id v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  id v18;
  __int128 v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count_vtbl *v26;
  __int128 v27;
  id v28;

  v8 = (void *)MEMORY[0x23B83EC40]();
  if (*((char *)a2 + 23) >= 0)
    v9 = a2;
  else
    v9 = (uint64_t *)*a2;
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDBCF48], "fileURLWithPath:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = *(id *)a1;
  v12 = *(std::__shared_weak_count **)(a1 + 8);
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v13)
    v13 = *(id *)a1;
  v28 = 0;
  v17 = (void *)objc_msgSend(v13, "newLibraryWithURL:error:", v11, &v28);
  v18 = v28;

  if (a3 && v18)
  {
    sub_239639CC0((std::__shared_weak_count_vtbl **)&v27, (std::__shared_weak_count_vtbl *)v18, 0);
    v19 = v27;
    v27 = 0uLL;
    v20 = *(std::__shared_weak_count **)(a3 + 8);
    *(_OWORD *)a3 = v19;
    if (v20)
    {
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    v23 = (std::__shared_weak_count *)*((_QWORD *)&v27 + 1);
    if (*((_QWORD *)&v27 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v27 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
  }
  v26 = v17;
  sub_239639CC0(a4, v26, 0);

  objc_autoreleasePoolPop(v8);
}

void sub_2397A9C9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_2397A9CC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2397A9CD8(uint64_t a1@<X0>, std::__shared_weak_count_vtbl **a2@<X8>)
{
  void *v4;
  std::__shared_weak_count *v5;
  id v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  id v10;

  v4 = (void *)MEMORY[0x23B83EC40]();
  v6 = *(id *)a1;
  v5 = *(std::__shared_weak_count **)(a1 + 8);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_7;
LABEL_9:
      v10 = 0;
      goto LABEL_10;
    }
  }
  if (!v6)
    goto LABEL_9;
LABEL_7:
  v10 = *(id *)a1;
LABEL_10:
  sub_239639CC0(a2, (std::__shared_weak_count_vtbl *)objc_msgSend(v10, "newCommandQueue"), 0);

  objc_autoreleasePoolPop(v4);
}

void sub_2397A9D94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2397A9DA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_2397A9DB4(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  id v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;

  v2 = (void *)MEMORY[0x23B83EC40]();
  v4 = *(id *)a1;
  v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_7;
LABEL_9:
      v8 = 0;
      goto LABEL_10;
    }
  }
  if (!v4)
    goto LABEL_9;
LABEL_7:
  v8 = *(id *)a1;
LABEL_10:
  v9 = objc_msgSend(v8, "length");

  objc_autoreleasePoolPop(v2);
  return v9;
}

void sub_2397A9E60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_2397A9E70(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count_vtbl **v4;

  v4 = (std::__shared_weak_count_vtbl **)sub_23946D5E0(a1, a2);
  sub_2397A9CD8(a2, v4 + 2);
  return a1;
}

void sub_2397A9EA4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
    sub_239EC2DD8(v3);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2397A9EBC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;

  v5 = sub_23946D5E0(a1, a2);
  sub_23946D5E0(v5 + 2, a3);
  return a1;
}

void sub_2397A9EF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2397A9F04(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;

  v5 = sub_23946D5E0(a1, a2);
  sub_23946D5E0(v5 + 2, a3);
  return a1;
}

void sub_2397A9F38(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
    sub_239EC2DD8(v3);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2397A9F50(uint64_t a1)
{
  return a1 + 16;
}

_QWORD *sub_2397A9F58(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >> 60)
      sub_2394189F8();
    v5 = 16 * a3;
    v6 = (char *)operator new(16 * a3);
    v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[v5];
    do
    {
      sub_23946D5E0(&v6[v7], a2 + v7);
      v7 += 16;
    }
    while (v5 != v7);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_2397A9FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_23971D6EC(&a9);
  _Unwind_Resume(a1);
}

void sub_2397AA010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (v11)
    sub_239EC2E14(v10 + v11, v10);
  *(_QWORD *)(v9 + 8) = v10;
  sub_23971D6EC(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2397AA038()
{
  return 131076;
}

uint64_t sub_2397AA044(_DWORD *a1, _DWORD *a2)
{
  uint64_t v3;
  _DWORD *v5;

  if (a1[6] != a2[6] || a1[7] != a2[7])
    sub_239EC2E78();
  v3 = a1[12];
  if ((_DWORD)v3 != a2[12])
    sub_239EC1468();
  v5 = a2;
  return sub_2397B399C(v3, (uint64_t *)&v5, (uint64_t)a1);
}

double sub_2397AA0A4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397AA10C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397AA178()
{
  return 6;
}

uint64_t sub_2397AA180(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397AA188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397AA1A4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397AA228(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397AA4F8(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 2;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397AA4AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397AA4F8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397AA570();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397AA570()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569328F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569328F8))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397AA844();
    sub_2397AA774((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397AA774((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569328E0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569328E0, &dword_23940C000);
          __cxa_guard_release(&qword_2569328F8);
          return &stru_2569328E0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569328E0;
}

void sub_2397AA6C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569328F8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569328F8);
  _Unwind_Resume(a1);
}

void sub_2397AA774(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397AA808(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397AA844()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932918);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932918))
    return &xmmword_256932900;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two16u]", &xmmword_256932900);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932900, &dword_23940C000);
  __cxa_guard_release(&qword_256932918);
  return &xmmword_256932900;
}

void sub_2397AA8D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932918);
  _Unwind_Resume(a1);
}

double sub_2397AA8EC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397AA954(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397AA9C0()
{
  return 7;
}

uint64_t sub_2397AA9C8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397AA9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397AA9EC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397AAA70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397AAD40(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 2;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397AACF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397AAD40(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397AADB8();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397AADB8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932938);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932938))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_23978507C();
    sub_2397AAFBC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397AAFBC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932920, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932920, &dword_23940C000);
          __cxa_guard_release(&qword_256932938);
          return &stru_256932920;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932920;
}

void sub_2397AAF08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932938);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932938);
  _Unwind_Resume(a1);
}

void sub_2397AAFBC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397AB050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_2397AB08C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397AB35C(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 2;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397AB310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397AB35C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397AB3D4();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397AB3D4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932958);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932958))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_239785124();
    sub_2397AB5D8((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397AB5D8((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932940, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932940, &dword_23940C000);
          __cxa_guard_release(&qword_256932958);
          return &stru_256932940;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932940;
}

void sub_2397AB524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932958);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932958);
  _Unwind_Resume(a1);
}

void sub_2397AB5D8(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397AB66C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_2397AB6A8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397AB710(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397AB77C()
{
  return 9;
}

uint64_t sub_2397AB784(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397AB78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2397AB7A8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397AB82C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 9)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397ABAF8(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v15;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * (_DWORD)v18 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397ABAAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397ABAF8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397ABB70();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397ABB70()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932978);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932978))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397ABE44();
    sub_2397ABD74((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397ABD74((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932960, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932960, &dword_23940C000);
          __cxa_guard_release(&qword_256932978);
          return &stru_256932960;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932960;
}

void sub_2397ABCC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932978);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932978);
  _Unwind_Resume(a1);
}

void sub_2397ABD74(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397ABE08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397ABE44()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932998);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932998))
    return &xmmword_256932980;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three8u]", &xmmword_256932980);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932980, &dword_23940C000);
  __cxa_guard_release(&qword_256932998);
  return &xmmword_256932980;
}

void sub_2397ABED4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932998);
  _Unwind_Resume(a1);
}

double sub_2397ABEEC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397ABF54(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397ABFC0()
{
  return 10;
}

uint64_t sub_2397ABFC8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397ABFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397ABFEC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397AC070(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 10)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397AC340(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397AC2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397AC340(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397AC3B8();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397AC3B8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569329B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569329B8))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397AC68C();
    sub_2397AC5BC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397AC5BC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569329A0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569329A0, &dword_23940C000);
          __cxa_guard_release(&qword_2569329B8);
          return &stru_2569329A0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569329A0;
}

void sub_2397AC508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569329B8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569329B8);
  _Unwind_Resume(a1);
}

void sub_2397AC5BC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397AC650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397AC68C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569329D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569329D8))
    return &xmmword_2569329C0;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three16u]", &xmmword_2569329C0);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569329C0, &dword_23940C000);
  __cxa_guard_release(&qword_2569329D8);
  return &xmmword_2569329C0;
}

void sub_2397AC71C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569329D8);
  _Unwind_Resume(a1);
}

double sub_2397AC734(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397AC79C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397AC808()
{
  return 11;
}

uint64_t sub_2397AC810(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397AC818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397AC834(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397AC8B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 11)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397ACB88(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397ACB3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397ACB88(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397ACC00();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397ACC00()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569329F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569329F8))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397ACED4();
    sub_2397ACE04((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397ACE04((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569329E0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569329E0, &dword_23940C000);
          __cxa_guard_release(&qword_2569329F8);
          return &stru_2569329E0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569329E0;
}

void sub_2397ACD50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569329F8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569329F8);
  _Unwind_Resume(a1);
}

void sub_2397ACE04(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397ACE98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397ACED4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932A18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932A18))
    return &xmmword_256932A00;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three16f]", &xmmword_256932A00);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932A00, &dword_23940C000);
  __cxa_guard_release(&qword_256932A18);
  return &xmmword_256932A00;
}

void sub_2397ACF64(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932A18);
  _Unwind_Resume(a1);
}

double sub_2397ACF7C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397ACFE4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397AD050()
{
  return 12;
}

uint64_t sub_2397AD058(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397AD060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2397AD07C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397AD100(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 12)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397AD3D0(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397AD384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397AD3D0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397AD448();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397AD448()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932A38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932A38))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397AD71C();
    sub_2397AD64C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397AD64C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932A20, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932A20, &dword_23940C000);
          __cxa_guard_release(&qword_256932A38);
          return &stru_256932A20;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932A20;
}

void sub_2397AD598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932A38);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932A38);
  _Unwind_Resume(a1);
}

void sub_2397AD64C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397AD6E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397AD71C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932A58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932A58))
    return &xmmword_256932A40;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three32f]", &xmmword_256932A40);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932A40, &dword_23940C000);
  __cxa_guard_release(&qword_256932A58);
  return &xmmword_256932A40;
}

void sub_2397AD7AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932A58);
  _Unwind_Resume(a1);
}

void sub_2397AD7C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 13)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397ADA90(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397ADA44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397ADA90(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397ADB08();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397ADB08()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932A78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932A78))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397ADDDC();
    sub_2397ADD0C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397ADD0C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932A60, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932A60, &dword_23940C000);
          __cxa_guard_release(&qword_256932A78);
          return &stru_256932A60;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932A60;
}

void sub_2397ADC58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932A78);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932A78);
  _Unwind_Resume(a1);
}

void sub_2397ADD0C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397ADDA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397ADDDC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932A98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932A98))
    return &xmmword_256932A80;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four8u]", &xmmword_256932A80);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932A80, &dword_23940C000);
  __cxa_guard_release(&qword_256932A98);
  return &xmmword_256932A80;
}

void sub_2397ADE6C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932A98);
  _Unwind_Resume(a1);
}

double sub_2397ADE84(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397ADEEC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397ADF58()
{
  return 14;
}

uint64_t sub_2397ADF60(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397ADF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397ADF84(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397AE008(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 14)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397AE2D8(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397AE28C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397AE2D8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397AE350();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397AE350()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932AB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932AB8))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397AE624();
    sub_2397AE554((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397AE554((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932AA0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932AA0, &dword_23940C000);
          __cxa_guard_release(&qword_256932AB8);
          return &stru_256932AA0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932AA0;
}

void sub_2397AE4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932AB8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932AB8);
  _Unwind_Resume(a1);
}

void sub_2397AE554(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397AE5E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397AE624()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932AD8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932AD8))
    return &xmmword_256932AC0;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four16u]", &xmmword_256932AC0);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932AC0, &dword_23940C000);
  __cxa_guard_release(&qword_256932AD8);
  return &xmmword_256932AC0;
}

void sub_2397AE6B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932AD8);
  _Unwind_Resume(a1);
}

double sub_2397AE6CC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397AE734(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397AE7A0()
{
  return 15;
}

uint64_t sub_2397AE7A8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397AE7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397AE7CC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397AE850(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 15)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397AEB20(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397AEAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397AEB20(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397AEB98();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397AEB98()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932AF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932AF8))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397AEE6C();
    sub_2397AED9C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397AED9C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932AE0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932AE0, &dword_23940C000);
          __cxa_guard_release(&qword_256932AF8);
          return &stru_256932AE0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932AE0;
}

void sub_2397AECE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932AF8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932AF8);
  _Unwind_Resume(a1);
}

void sub_2397AED9C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397AEE30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397AEE6C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932B18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932B18))
    return &xmmword_256932B00;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four16f]", &xmmword_256932B00);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932B00, &dword_23940C000);
  __cxa_guard_release(&qword_256932B18);
  return &xmmword_256932B00;
}

void sub_2397AEEFC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932B18);
  _Unwind_Resume(a1);
}

double sub_2397AEF14(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397AEF7C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397AEFE8()
{
  return 16;
}

uint64_t sub_2397AEFF0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397AEFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2397AF014(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397AF098(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 16)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397AF368(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397AF31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397AF368(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397AF3E0();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397AF3E0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932B38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932B38))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397AF6B4();
    sub_2397AF5E4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397AF5E4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932B20, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932B20, &dword_23940C000);
          __cxa_guard_release(&qword_256932B38);
          return &stru_256932B20;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932B20;
}

void sub_2397AF530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932B38);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932B38);
  _Unwind_Resume(a1);
}

void sub_2397AF5E4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397AF678(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397AF6B4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932B58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932B58))
    return &xmmword_256932B40;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four32f]", &xmmword_256932B40);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932B40, &dword_23940C000);
  __cxa_guard_release(&qword_256932B58);
  return &xmmword_256932B40;
}

void sub_2397AF744(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932B58);
  _Unwind_Resume(a1);
}

double sub_2397AF75C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397AF7C4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397AF830()
{
  return 18;
}

uint64_t sub_2397AF838(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397AF840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397AF85C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397AF8E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 18)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397AFBB0(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397AFB64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397AFBB0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397AFC28();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397AFC28()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932B78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932B78))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397AFEFC();
    sub_2397AFE2C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397AFE2C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932B60, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932B60, &dword_23940C000);
          __cxa_guard_release(&qword_256932B78);
          return &stru_256932B60;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932B60;
}

void sub_2397AFD78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932B78);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932B78);
  _Unwind_Resume(a1);
}

void sub_2397AFE2C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397AFEC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397AFEFC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932B98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932B98))
    return &xmmword_256932B80;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr16u]", &xmmword_256932B80);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932B80, &dword_23940C000);
  __cxa_guard_release(&qword_256932B98);
  return &xmmword_256932B80;
}

void sub_2397AFF8C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932B98);
  _Unwind_Resume(a1);
}

double sub_2397AFFA4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397B000C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397B0078()
{
  return 19;
}

uint64_t sub_2397B0080(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397B0088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397B00A4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397B0128(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 19)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B03F8(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B03AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B03F8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B0470();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B0470()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932BB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932BB8))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397B0744();
    sub_2397B0674((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B0674((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932BA0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932BA0, &dword_23940C000);
          __cxa_guard_release(&qword_256932BB8);
          return &stru_256932BA0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932BA0;
}

void sub_2397B05C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932BB8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932BB8);
  _Unwind_Resume(a1);
}

void sub_2397B0674(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B0708(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397B0744()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932BD8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932BD8))
    return &xmmword_256932BC0;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr16f]", &xmmword_256932BC0);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932BC0, &dword_23940C000);
  __cxa_guard_release(&qword_256932BD8);
  return &xmmword_256932BC0;
}

void sub_2397B07D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932BD8);
  _Unwind_Resume(a1);
}

double sub_2397B07EC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397B0854(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397B08C0()
{
  return 20;
}

uint64_t sub_2397B08C8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397B08D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2397B08EC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397B0970(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 20)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B0C40(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B0BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B0C40(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B0CB8();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B0CB8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932BF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932BF8))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397B0F8C();
    sub_2397B0EBC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B0EBC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932BE0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932BE0, &dword_23940C000);
          __cxa_guard_release(&qword_256932BF8);
          return &stru_256932BE0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932BE0;
}

void sub_2397B0E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932BF8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932BF8);
  _Unwind_Resume(a1);
}

void sub_2397B0EBC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B0F50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397B0F8C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932C18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932C18))
    return &xmmword_256932C00;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr32f]", &xmmword_256932C00);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932C00, &dword_23940C000);
  __cxa_guard_release(&qword_256932C18);
  return &xmmword_256932C00;
}

void sub_2397B101C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932C18);
  _Unwind_Resume(a1);
}

double sub_2397B1034(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397B109C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397B1108()
{
  return 26;
}

uint64_t sub_2397B1110(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397B1118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397B1134(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397B11B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 26)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B1488(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B143C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B1488(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B1500();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B1500()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932C38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932C38))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397B17D4();
    sub_2397B1704((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B1704((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932C20, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932C20, &dword_23940C000);
          __cxa_guard_release(&qword_256932C38);
          return &stru_256932C20;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932C20;
}

void sub_2397B1650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932C38);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932C38);
  _Unwind_Resume(a1);
}

void sub_2397B1704(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B1798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397B17D4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932C58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932C58))
    return &xmmword_256932C40;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra16u]", &xmmword_256932C40);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932C40, &dword_23940C000);
  __cxa_guard_release(&qword_256932C58);
  return &xmmword_256932C40;
}

void sub_2397B1864(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932C58);
  _Unwind_Resume(a1);
}

double sub_2397B187C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397B18E4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397B1950()
{
  return 27;
}

uint64_t sub_2397B1958(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397B1960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397B197C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397B1A00(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 27)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B1CD0(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B1C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B1CD0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B1D48();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B1D48()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932C78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932C78))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397B201C();
    sub_2397B1F4C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B1F4C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932C60, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932C60, &dword_23940C000);
          __cxa_guard_release(&qword_256932C78);
          return &stru_256932C60;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932C60;
}

void sub_2397B1E98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932C78);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932C78);
  _Unwind_Resume(a1);
}

void sub_2397B1F4C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B1FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397B201C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932C98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932C98))
    return &xmmword_256932C80;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra16f]", &xmmword_256932C80);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932C80, &dword_23940C000);
  __cxa_guard_release(&qword_256932C98);
  return &xmmword_256932C80;
}

void sub_2397B20AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932C98);
  _Unwind_Resume(a1);
}

double sub_2397B20C4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397B212C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397B2198()
{
  return 34;
}

uint64_t sub_2397B21A0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397B21A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397B21C4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397B2248(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 34)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B2518(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B24CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B2518(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B2590();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B2590()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932CB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932CB8))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397B2864();
    sub_2397B2794((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B2794((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932CA0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932CA0, &dword_23940C000);
          __cxa_guard_release(&qword_256932CB8);
          return &stru_256932CA0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932CA0;
}

void sub_2397B26E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932CB8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932CB8);
  _Unwind_Resume(a1);
}

void sub_2397B2794(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B2828(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397B2864()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932CD8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932CD8))
    return &xmmword_256932CC0;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr16u]", &xmmword_256932CC0);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932CC0, &dword_23940C000);
  __cxa_guard_release(&qword_256932CD8);
  return &xmmword_256932CC0;
}

void sub_2397B28F4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932CD8);
  _Unwind_Resume(a1);
}

double sub_2397B290C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397B2974(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397B29E0()
{
  return 35;
}

uint64_t sub_2397B29E8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397B29F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397B2A0C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397B2A90(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 35)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B2D60(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B2D14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B2D60(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B2DD8();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B2DD8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932CF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932CF8))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397B30AC();
    sub_2397B2FDC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B2FDC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932CE0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932CE0, &dword_23940C000);
          __cxa_guard_release(&qword_256932CF8);
          return &stru_256932CE0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932CE0;
}

void sub_2397B2F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932CF8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932CF8);
  _Unwind_Resume(a1);
}

void sub_2397B2FDC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B3070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397B30AC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932D18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932D18))
    return &xmmword_256932D00;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr16f]", &xmmword_256932D00);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932D00, &dword_23940C000);
  __cxa_guard_release(&qword_256932D18);
  return &xmmword_256932D00;
}

void sub_2397B313C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932D18);
  _Unwind_Resume(a1);
}

double sub_2397B3154(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397B31BC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397B3228()
{
  return 36;
}

uint64_t sub_2397B3230(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397B3238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2397B3254(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397B32D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 36)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397B35A8(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397B355C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397B35A8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397B3620();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397B3620()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256932D38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256932D38))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397B38F4();
    sub_2397B3824((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397B3824((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256932D20, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256932D20, &dword_23940C000);
          __cxa_guard_release(&qword_256932D38);
          return &stru_256932D20;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256932D20;
}

void sub_2397B3770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256932D38);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256932D38);
  _Unwind_Resume(a1);
}

void sub_2397B3824(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397B38B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397B38F4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256932D58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256932D58))
    return &xmmword_256932D40;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr32f]", &xmmword_256932D40);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932D40, &dword_23940C000);
  __cxa_guard_release(&qword_256932D58);
  return &xmmword_256932D40;
}

void sub_2397B3984(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932D58);
  _Unwind_Resume(a1);
}

uint64_t sub_2397B399C(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  __n128 v17;
  __n128 v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t *v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t *v54;
  uint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  __n128 v61;
  __n128 v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t *v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t *v71;
  uint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t *v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t *v81;
  uint64_t v82;
  __n128 v83;
  __n128 v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  unint64_t *v88;
  uint64_t v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t *v93;
  uint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  unint64_t *v98;
  uint64_t v99;
  std::__shared_weak_count *v100;
  unint64_t *v101;
  unint64_t v102;
  unint64_t *v103;
  uint64_t v104;
  __n128 v105;
  __n128 v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  unint64_t *v110;
  uint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  unint64_t *v115;
  uint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  unint64_t *v120;
  uint64_t v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  unint64_t *v125;
  uint64_t v126;
  __n128 v127;
  __n128 v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  unint64_t *v132;
  uint64_t v133;
  std::__shared_weak_count *v134;
  unint64_t *v135;
  unint64_t v136;
  unint64_t *v137;
  uint64_t v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  unint64_t *v142;
  uint64_t v143;
  std::__shared_weak_count *v144;
  unint64_t *v145;
  unint64_t v146;
  unint64_t *v147;
  uint64_t v148;
  __n128 v149;
  __n128 v150;
  std::__shared_weak_count *v151;
  unint64_t *v152;
  unint64_t v153;
  unint64_t *v154;
  uint64_t v155;
  std::__shared_weak_count *v156;
  unint64_t *v157;
  unint64_t v158;
  unint64_t *v159;
  uint64_t v160;
  std::__shared_weak_count *v161;
  unint64_t *v162;
  unint64_t v163;
  unint64_t *v164;
  uint64_t v165;
  std::__shared_weak_count *v166;
  unint64_t *v167;
  unint64_t v168;
  unint64_t *v169;
  uint64_t v170;
  __n128 v171;
  __n128 v172;
  std::__shared_weak_count *v173;
  unint64_t *v174;
  unint64_t v175;
  unint64_t *v176;
  uint64_t v177;
  std::__shared_weak_count *v178;
  unint64_t *v179;
  unint64_t v180;
  unint64_t *v181;
  uint64_t v182;
  std::__shared_weak_count *v183;
  unint64_t *v184;
  unint64_t v185;
  unint64_t *v186;
  uint64_t v187;
  std::__shared_weak_count *v188;
  unint64_t *v189;
  unint64_t v190;
  unint64_t *v191;
  uint64_t v192;
  __n128 v193;
  __n128 v194;
  std::__shared_weak_count *v195;
  unint64_t *v196;
  unint64_t v197;
  unint64_t *v198;
  uint64_t v199;
  std::__shared_weak_count *v200;
  unint64_t *v201;
  unint64_t v202;
  unint64_t *v203;
  uint64_t v204;
  std::__shared_weak_count *v205;
  unint64_t *v206;
  unint64_t v207;
  unint64_t *v208;
  uint64_t v209;
  std::__shared_weak_count *v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t *v213;
  uint64_t v214;
  __n128 v215;
  __n128 v216;
  std::__shared_weak_count *v217;
  unint64_t *v218;
  unint64_t v219;
  unint64_t *v220;
  uint64_t v221;
  std::__shared_weak_count *v222;
  unint64_t *v223;
  unint64_t v224;
  unint64_t *v225;
  uint64_t (**v226)();
  uint64_t v227;
  std::__shared_weak_count *v228;
  uint64_t (**v229)();
  uint64_t v230;
  std::__shared_weak_count *v231;

  switch((int)result)
  {
    case 0:
      sub_239EC23F4(result, (uint64_t)a2);
    case 1:
      v226 = &off_250ADB350;
      sub_2394949FC(a3, (uint64_t)&v227);
      v4 = *a2;
      v229 = &off_250ADB3D0;
      sub_239419AD8(v4, (uint64_t)&v230);
      sub_23949F44C((uint64_t)&v226, (uint64_t)&v229);
      v5 = v231;
      if (v231)
      {
        p_shared_owners = (unint64_t *)&v231->__shared_owners_;
        do
          v7 = __ldaxr(p_shared_owners);
        while (__stlxr(v7 - 1, p_shared_owners));
        if (!v7)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v9 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      break;
    case 2:
      v226 = &off_250AE3D30;
      sub_23970E070(a3, (uint64_t)&v227);
      v11 = *a2;
      v229 = &off_250AE4080;
      sub_23972FE3C(v11, (uint64_t)&v230);
      sub_2397B60F0((uint64_t)&v226, (uint64_t)&v229);
      v12 = v231;
      if (v231)
      {
        v13 = (unint64_t *)&v231->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v15 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v15);
      while (__stlxr(v10 - 1, v15));
      break;
    case 3:
      v226 = &off_250AE1C58;
      sub_23964D014(a3, (uint64_t)&v227);
      v16 = *a2;
      v229 = &off_250AE1970;
      sub_239746F80(v16, (uint64_t)&v230);
      v18.n128_u64[0] = sub_2397B6520((uint64_t)&v226, (uint64_t)&v229, v17);
      v19 = v231;
      if (v231)
      {
        v20 = (unint64_t *)&v231->__shared_owners_;
        do
          v21 = __ldaxr(v20);
        while (__stlxr(v21 - 1, v20));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v19->__on_zero_shared)(v19, v18);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v22 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v22);
      while (__stlxr(v10 - 1, v22));
      break;
    case 4:
      v226 = &off_250ADED08;
      sub_23964D668(a3, (uint64_t)&v227);
      v23 = *a2;
      v229 = &off_250AE1F40;
      sub_2397493A0(v23, (uint64_t)&v230);
      sub_2397B69C0((uint64_t)&v226, (uint64_t)&v229);
      v24 = v231;
      if (v231)
      {
        v25 = (unint64_t *)&v231->__shared_owners_;
        do
          v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v27 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v27);
      while (__stlxr(v10 - 1, v27));
      break;
    case 5:
      v226 = &off_250ADB390;
      sub_23964B3D0(a3, (uint64_t)&v227);
      v28 = *a2;
      v229 = &off_250ADB428;
      sub_23941BCC8(v28, (uint64_t)&v230);
      sub_2397B6DF0((uint64_t)&v226, (uint64_t)&v229);
      v29 = v231;
      if (v231)
      {
        v30 = (unint64_t *)&v231->__shared_owners_;
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v32 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v32);
      while (__stlxr(v10 - 1, v32));
      break;
    case 6:
      v226 = &off_250AE9860;
      sub_2397AA228(a3, (uint64_t)&v227);
      v33 = *a2;
      v229 = &off_250AEA8D8;
      sub_2397B77E4(v33, (uint64_t)&v230);
      sub_2397B7228((uint64_t)&v226, (uint64_t)&v229);
      v34 = v231;
      if (v231)
      {
        v35 = (unint64_t *)&v231->__shared_owners_;
        do
          v36 = __ldaxr(v35);
        while (__stlxr(v36 - 1, v35));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v37 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v37);
      while (__stlxr(v10 - 1, v37));
      break;
    case 7:
      v226 = &off_250AE9958;
      sub_2397AAA70(a3, (uint64_t)&v227);
      v38 = *a2;
      v229 = &off_250AE9278;
      sub_2397B82A8(v38, (uint64_t)&v230);
      v40.n128_u64[0] = sub_2397B7E00((uint64_t)&v226, (uint64_t)&v229, v39);
      v41 = v231;
      if (v231)
      {
        v42 = (unint64_t *)&v231->__shared_owners_;
        do
          v43 = __ldaxr(v42);
        while (__stlxr(v43 - 1, v42));
        if (!v43)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v41->__on_zero_shared)(v41, v40);
          std::__shared_weak_count::__release_weak(v41);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v44 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v44);
      while (__stlxr(v10 - 1, v44));
      break;
    case 8:
      v226 = &off_250AE4A08;
      sub_2397AB08C(a3, (uint64_t)&v227);
      v45 = *a2;
      v229 = &off_250AE9370;
      sub_2397B8CFC(v45, (uint64_t)&v230);
      sub_2397B88C4((uint64_t)&v226, (uint64_t)&v229);
      v46 = v231;
      if (v231)
      {
        v47 = (unint64_t *)&v231->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v49 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v49);
      while (__stlxr(v10 - 1, v49));
      break;
    case 9:
      v226 = &off_250AE9A50;
      sub_2397AB82C(a3, (uint64_t)&v227);
      v50 = *a2;
      v229 = &off_250AEA9D0;
      sub_2397B98D4(v50, (uint64_t)&v230);
      sub_2397B9318((uint64_t)&v226, (uint64_t)&v229);
      v51 = v231;
      if (v231)
      {
        v52 = (unint64_t *)&v231->__shared_owners_;
        do
          v53 = __ldaxr(v52);
        while (__stlxr(v53 - 1, v52));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v54 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v54);
      while (__stlxr(v10 - 1, v54));
      break;
    case 10:
      v226 = &off_250AE9B48;
      sub_2397AC070(a3, (uint64_t)&v227);
      v55 = *a2;
      v229 = &off_250AEAAC8;
      sub_2397BA4A8(v55, (uint64_t)&v230);
      sub_2397B9EEC((uint64_t)&v226, (uint64_t)&v229);
      v56 = v231;
      if (v231)
      {
        v57 = (unint64_t *)&v231->__shared_owners_;
        do
          v58 = __ldaxr(v57);
        while (__stlxr(v58 - 1, v57));
        if (!v58)
        {
          ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
          std::__shared_weak_count::__release_weak(v56);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v59 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v59);
      while (__stlxr(v10 - 1, v59));
      break;
    case 11:
      v226 = &off_250AE9C40;
      sub_2397AC8B8(a3, (uint64_t)&v227);
      v60 = *a2;
      v229 = &off_250AEABC0;
      sub_2397BB0F0(v60, (uint64_t)&v230);
      v62.n128_u64[0] = sub_2397BAAC4((uint64_t)&v226, (uint64_t)&v229, v61);
      v63 = v231;
      if (v231)
      {
        v64 = (unint64_t *)&v231->__shared_owners_;
        do
          v65 = __ldaxr(v64);
        while (__stlxr(v65 - 1, v64));
        if (!v65)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v63->__on_zero_shared)(v63, v62);
          std::__shared_weak_count::__release_weak(v63);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v66 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v66);
      while (__stlxr(v10 - 1, v66));
      break;
    case 12:
      v226 = &off_250AE9D38;
      sub_2397AD100(a3, (uint64_t)&v227);
      v67 = *a2;
      v229 = &off_250AEACB8;
      sub_2397BBCC8(v67, (uint64_t)&v230);
      sub_2397BB70C((uint64_t)&v226, (uint64_t)&v229);
      v68 = v231;
      if (v231)
      {
        v69 = (unint64_t *)&v231->__shared_owners_;
        do
          v70 = __ldaxr(v69);
        while (__stlxr(v70 - 1, v69));
        if (!v70)
        {
          ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
          std::__shared_weak_count::__release_weak(v68);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v71 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v71);
      while (__stlxr(v10 - 1, v71));
      break;
    case 13:
      v226 = &off_250AE4B90;
      sub_2397AD7C4(a3, (uint64_t)&v227);
      v72 = *a2;
      v229 = &off_250AEADB0;
      sub_2397BC8A0(v72, (uint64_t)&v230);
      sub_2397BC2E4((uint64_t)&v226, (uint64_t)&v229);
      v73 = v231;
      if (v231)
      {
        v74 = (unint64_t *)&v231->__shared_owners_;
        do
          v75 = __ldaxr(v74);
        while (__stlxr(v75 - 1, v74));
        if (!v75)
        {
          ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
          std::__shared_weak_count::__release_weak(v73);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v76 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v76);
      while (__stlxr(v10 - 1, v76));
      break;
    case 14:
      v226 = &off_250AE9E30;
      sub_2397AE008(a3, (uint64_t)&v227);
      v77 = *a2;
      v229 = &off_250AEAEA8;
      sub_2397BD474(v77, (uint64_t)&v230);
      sub_2397BCEB8((uint64_t)&v226, (uint64_t)&v229);
      v78 = v231;
      if (v231)
      {
        v79 = (unint64_t *)&v231->__shared_owners_;
        do
          v80 = __ldaxr(v79);
        while (__stlxr(v80 - 1, v79));
        if (!v80)
        {
          ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
          std::__shared_weak_count::__release_weak(v78);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v81 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v81);
      while (__stlxr(v10 - 1, v81));
      break;
    case 15:
      v226 = &off_250AE9F28;
      sub_2397AE850(a3, (uint64_t)&v227);
      v82 = *a2;
      v229 = &off_250AEAFA0;
      sub_2397BE0BC(v82, (uint64_t)&v230);
      v84.n128_u64[0] = sub_2397BDA90((uint64_t)&v226, (uint64_t)&v229, v83);
      v85 = v231;
      if (v231)
      {
        v86 = (unint64_t *)&v231->__shared_owners_;
        do
          v87 = __ldaxr(v86);
        while (__stlxr(v87 - 1, v86));
        if (!v87)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v85->__on_zero_shared)(v85, v84);
          std::__shared_weak_count::__release_weak(v85);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v88 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v88);
      while (__stlxr(v10 - 1, v88));
      break;
    case 16:
      v226 = &off_250AEA020;
      sub_2397AF098(a3, (uint64_t)&v227);
      v89 = *a2;
      v229 = &off_250AEB098;
      sub_2397BEC94(v89, (uint64_t)&v230);
      sub_2397BE6D8((uint64_t)&v226, (uint64_t)&v229);
      v90 = v231;
      if (v231)
      {
        v91 = (unint64_t *)&v231->__shared_owners_;
        do
          v92 = __ldaxr(v91);
        while (__stlxr(v92 - 1, v91));
        if (!v92)
        {
          ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
          std::__shared_weak_count::__release_weak(v90);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v93 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v93);
      while (__stlxr(v10 - 1, v93));
      break;
    case 17:
      v226 = &off_250AE3C30;
      sub_23970C364(a3, (uint64_t)&v227);
      v94 = *a2;
      v229 = &off_250AEB190;
      sub_2397BF86C(v94, (uint64_t)&v230);
      sub_2397BF2B0((uint64_t)&v226, (uint64_t)&v229);
      v95 = v231;
      if (v231)
      {
        v96 = (unint64_t *)&v231->__shared_owners_;
        do
          v97 = __ldaxr(v96);
        while (__stlxr(v97 - 1, v96));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
          std::__shared_weak_count::__release_weak(v95);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v98 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v98);
      while (__stlxr(v10 - 1, v98));
      break;
    case 18:
      v226 = &off_250AEA118;
      sub_2397AF8E0(a3, (uint64_t)&v227);
      v99 = *a2;
      v229 = &off_250AEB288;
      sub_2397C0440(v99, (uint64_t)&v230);
      sub_2397BFE84((uint64_t)&v226, (uint64_t)&v229);
      v100 = v231;
      if (v231)
      {
        v101 = (unint64_t *)&v231->__shared_owners_;
        do
          v102 = __ldaxr(v101);
        while (__stlxr(v102 - 1, v101));
        if (!v102)
        {
          ((void (*)(std::__shared_weak_count *))v100->__on_zero_shared)(v100);
          std::__shared_weak_count::__release_weak(v100);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v103 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v103);
      while (__stlxr(v10 - 1, v103));
      break;
    case 19:
      v226 = &off_250AEA210;
      sub_2397B0128(a3, (uint64_t)&v227);
      v104 = *a2;
      v229 = &off_250AEB380;
      sub_2397C1088(v104, (uint64_t)&v230);
      v106.n128_u64[0] = sub_2397C0A5C((uint64_t)&v226, (uint64_t)&v229, v105);
      v107 = v231;
      if (v231)
      {
        v108 = (unint64_t *)&v231->__shared_owners_;
        do
          v109 = __ldaxr(v108);
        while (__stlxr(v109 - 1, v108));
        if (!v109)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v107->__on_zero_shared)(v107, v106);
          std::__shared_weak_count::__release_weak(v107);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v110 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v110);
      while (__stlxr(v10 - 1, v110));
      break;
    case 20:
      v226 = &off_250AEA308;
      sub_2397B0970(a3, (uint64_t)&v227);
      v111 = *a2;
      v229 = &off_250AEB478;
      sub_2397C1C60(v111, (uint64_t)&v230);
      sub_2397C16A4((uint64_t)&v226, (uint64_t)&v229);
      v112 = v231;
      if (v231)
      {
        v113 = (unint64_t *)&v231->__shared_owners_;
        do
          v114 = __ldaxr(v113);
        while (__stlxr(v114 - 1, v113));
        if (!v114)
        {
          ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
          std::__shared_weak_count::__release_weak(v112);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v115 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v115);
      while (__stlxr(v10 - 1, v115));
      break;
    case 21:
      v226 = &off_250ADB468;
      sub_239494110(a3, (uint64_t)&v227);
      v116 = *a2;
      v229 = &off_250ADCAF8;
      sub_2397303E8(v116, (uint64_t)&v230);
      sub_23949DFEC((uint64_t)&v226, (uint64_t)&v229);
      v117 = v231;
      if (v231)
      {
        v118 = (unint64_t *)&v231->__shared_owners_;
        do
          v119 = __ldaxr(v118);
        while (__stlxr(v119 - 1, v118));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
          std::__shared_weak_count::__release_weak(v117);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v120 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v120);
      while (__stlxr(v10 - 1, v120));
      break;
    case 22:
      v226 = &off_250AE3D70;
      sub_23970E7C4(a3, (uint64_t)&v227);
      v121 = *a2;
      v229 = &off_250AE4D98;
      sub_23974CDB0(v121, (uint64_t)&v230);
      sub_2397C227C((uint64_t)&v226, (uint64_t)&v229);
      v122 = v231;
      if (v231)
      {
        v123 = (unint64_t *)&v231->__shared_owners_;
        do
          v124 = __ldaxr(v123);
        while (__stlxr(v124 - 1, v123));
        if (!v124)
        {
          ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
          std::__shared_weak_count::__release_weak(v122);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v125 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v125);
      while (__stlxr(v10 - 1, v125));
      break;
    case 23:
      v226 = &off_250AE3DF0;
      sub_23970F74C(a3, (uint64_t)&v227);
      v126 = *a2;
      v229 = &off_250AE4F20;
      sub_23974EDB8(v126, (uint64_t)&v230);
      v128.n128_u64[0] = sub_2397C26B4((uint64_t)&v226, (uint64_t)&v229, v127);
      v129 = v231;
      if (v231)
      {
        v130 = (unint64_t *)&v231->__shared_owners_;
        do
          v131 = __ldaxr(v130);
        while (__stlxr(v131 - 1, v130));
        if (!v131)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v129->__on_zero_shared)(v129, v128);
          std::__shared_weak_count::__release_weak(v129);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v132 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v132);
      while (__stlxr(v10 - 1, v132));
      break;
    case 24:
      v226 = &off_250AE3CF0;
      sub_23970D954(a3, (uint64_t)&v227);
      v133 = *a2;
      v229 = &off_250AE50A8;
      sub_239750B70(v133, (uint64_t)&v230);
      sub_2397C2B5C((uint64_t)&v226, (uint64_t)&v229);
      v134 = v231;
      if (v231)
      {
        v135 = (unint64_t *)&v231->__shared_owners_;
        do
          v136 = __ldaxr(v135);
        while (__stlxr(v136 - 1, v135));
        if (!v136)
        {
          ((void (*)(std::__shared_weak_count *))v134->__on_zero_shared)(v134);
          std::__shared_weak_count::__release_weak(v134);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v137 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v137);
      while (__stlxr(v10 - 1, v137));
      break;
    case 25:
      v226 = &off_250AE1B60;
      sub_23964DC14(a3, (uint64_t)&v227);
      v138 = *a2;
      v229 = &off_250AE1878;
      sub_239751F44(v138, (uint64_t)&v230);
      sub_2397C2F94((uint64_t)&v226, (uint64_t)&v229);
      v139 = v231;
      if (v231)
      {
        v140 = (unint64_t *)&v231->__shared_owners_;
        do
          v141 = __ldaxr(v140);
        while (__stlxr(v141 - 1, v140));
        if (!v141)
        {
          ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
          std::__shared_weak_count::__release_weak(v139);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v142 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v142);
      while (__stlxr(v10 - 1, v142));
      break;
    case 26:
      v226 = &off_250AEA400;
      sub_2397B11B8(a3, (uint64_t)&v227);
      v143 = *a2;
      v229 = &off_250AEB570;
      sub_2397C3988(v143, (uint64_t)&v230);
      sub_2397C33CC((uint64_t)&v226, (uint64_t)&v229);
      v144 = v231;
      if (v231)
      {
        v145 = (unint64_t *)&v231->__shared_owners_;
        do
          v146 = __ldaxr(v145);
        while (__stlxr(v146 - 1, v145));
        if (!v146)
        {
          ((void (*)(std::__shared_weak_count *))v144->__on_zero_shared)(v144);
          std::__shared_weak_count::__release_weak(v144);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v147 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v147);
      while (__stlxr(v10 - 1, v147));
      break;
    case 27:
      v226 = &off_250AEA4F8;
      sub_2397B1A00(a3, (uint64_t)&v227);
      v148 = *a2;
      v229 = &off_250AEB668;
      sub_2397C45D0(v148, (uint64_t)&v230);
      v150.n128_u64[0] = sub_2397C3FA4((uint64_t)&v226, (uint64_t)&v229, v149);
      v151 = v231;
      if (v231)
      {
        v152 = (unint64_t *)&v231->__shared_owners_;
        do
          v153 = __ldaxr(v152);
        while (__stlxr(v153 - 1, v152));
        if (!v153)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v151->__on_zero_shared)(v151, v150);
          std::__shared_weak_count::__release_weak(v151);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v154 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v154);
      while (__stlxr(v10 - 1, v154));
      break;
    case 28:
      v226 = &off_250AE2130;
      sub_23964E2D4(a3, (uint64_t)&v227);
      v155 = *a2;
      v229 = &off_250AE1E48;
      sub_2397C5024(v155, (uint64_t)&v230);
      sub_2397C4BEC((uint64_t)&v226, (uint64_t)&v229);
      v156 = v231;
      if (v231)
      {
        v157 = (unint64_t *)&v231->__shared_owners_;
        do
          v158 = __ldaxr(v157);
        while (__stlxr(v158 - 1, v157));
        if (!v158)
        {
          ((void (*)(std::__shared_weak_count *))v156->__on_zero_shared)(v156);
          std::__shared_weak_count::__release_weak(v156);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v159 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v159);
      while (__stlxr(v10 - 1, v159));
      break;
    case 29:
      v226 = &off_250AE1A68;
      sub_23964E998(a3, (uint64_t)&v227);
      v160 = *a2;
      v229 = &off_250AE1760;
      sub_2397539F0(v160, (uint64_t)&v230);
      sub_2397C5640((uint64_t)&v226, (uint64_t)&v229);
      v161 = v231;
      if (v231)
      {
        v162 = (unint64_t *)&v231->__shared_owners_;
        do
          v163 = __ldaxr(v162);
        while (__stlxr(v163 - 1, v162));
        if (!v163)
        {
          ((void (*)(std::__shared_weak_count *))v161->__on_zero_shared)(v161);
          std::__shared_weak_count::__release_weak(v161);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v164 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v164);
      while (__stlxr(v10 - 1, v164));
      break;
    case 30:
      v226 = &off_250AE3DB0;
      sub_23970EF88(a3, (uint64_t)&v227);
      v165 = *a2;
      v229 = &off_250AE5350;
      sub_23975567C(v165, (uint64_t)&v230);
      sub_2397C5A78((uint64_t)&v226, (uint64_t)&v229);
      v166 = v231;
      if (v231)
      {
        v167 = (unint64_t *)&v231->__shared_owners_;
        do
          v168 = __ldaxr(v167);
        while (__stlxr(v168 - 1, v167));
        if (!v168)
        {
          ((void (*)(std::__shared_weak_count *))v166->__on_zero_shared)(v166);
          std::__shared_weak_count::__release_weak(v166);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v169 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v169);
      while (__stlxr(v10 - 1, v169));
      break;
    case 31:
      v226 = &off_250AE3E30;
      sub_23970FE68(a3, (uint64_t)&v227);
      v170 = *a2;
      v229 = &off_250AE54D8;
      sub_2397570F8(v170, (uint64_t)&v230);
      v172.n128_u64[0] = sub_2397C5EB0((uint64_t)&v226, (uint64_t)&v229, v171);
      v173 = v231;
      if (v231)
      {
        v174 = (unint64_t *)&v231->__shared_owners_;
        do
          v175 = __ldaxr(v174);
        while (__stlxr(v175 - 1, v174));
        if (!v175)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v173->__on_zero_shared)(v173, v172);
          std::__shared_weak_count::__release_weak(v173);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v176 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v176);
      while (__stlxr(v10 - 1, v176));
      break;
    case 32:
      v226 = &off_250AE2038;
      sub_23964EFB0(a3, (uint64_t)&v227);
      v177 = *a2;
      v229 = &off_250AE1D50;
      sub_239758938(v177, (uint64_t)&v230);
      sub_2397C6358((uint64_t)&v226, (uint64_t)&v229);
      v178 = v231;
      if (v231)
      {
        v179 = (unint64_t *)&v231->__shared_owners_;
        do
          v180 = __ldaxr(v179);
        while (__stlxr(v180 - 1, v179));
        if (!v180)
        {
          ((void (*)(std::__shared_weak_count *))v178->__on_zero_shared)(v178);
          std::__shared_weak_count::__release_weak(v178);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v181 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v181);
      while (__stlxr(v10 - 1, v181));
      break;
    case 33:
      v226 = &off_250AE3CB0;
      sub_23970D194(a3, (uint64_t)&v227);
      v182 = *a2;
      v229 = &off_250AE56F0;
      sub_23975A10C(v182, (uint64_t)&v230);
      sub_2397C6790((uint64_t)&v226, (uint64_t)&v229);
      v183 = v231;
      if (v231)
      {
        v184 = (unint64_t *)&v231->__shared_owners_;
        do
          v185 = __ldaxr(v184);
        while (__stlxr(v185 - 1, v184));
        if (!v185)
        {
          ((void (*)(std::__shared_weak_count *))v183->__on_zero_shared)(v183);
          std::__shared_weak_count::__release_weak(v183);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v186 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v186);
      while (__stlxr(v10 - 1, v186));
      break;
    case 34:
      v226 = &off_250AEA5F0;
      sub_2397B2248(a3, (uint64_t)&v227);
      v187 = *a2;
      v229 = &off_250AEB760;
      sub_2397C7184(v187, (uint64_t)&v230);
      sub_2397C6BC8((uint64_t)&v226, (uint64_t)&v229);
      v188 = v231;
      if (v231)
      {
        v189 = (unint64_t *)&v231->__shared_owners_;
        do
          v190 = __ldaxr(v189);
        while (__stlxr(v190 - 1, v189));
        if (!v190)
        {
          ((void (*)(std::__shared_weak_count *))v188->__on_zero_shared)(v188);
          std::__shared_weak_count::__release_weak(v188);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v191 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v191);
      while (__stlxr(v10 - 1, v191));
      break;
    case 35:
      v226 = &off_250AEA6E8;
      sub_2397B2A90(a3, (uint64_t)&v227);
      v192 = *a2;
      v229 = &off_250AEB858;
      sub_2397C7DCC(v192, (uint64_t)&v230);
      v194.n128_u64[0] = sub_2397C77A0((uint64_t)&v226, (uint64_t)&v229, v193);
      v195 = v231;
      if (v231)
      {
        v196 = (unint64_t *)&v231->__shared_owners_;
        do
          v197 = __ldaxr(v196);
        while (__stlxr(v197 - 1, v196));
        if (!v197)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v195->__on_zero_shared)(v195, v194);
          std::__shared_weak_count::__release_weak(v195);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v198 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v198);
      while (__stlxr(v10 - 1, v198));
      break;
    case 36:
      v226 = &off_250AEA7E0;
      sub_2397B32D8(a3, (uint64_t)&v227);
      v199 = *a2;
      v229 = &off_250AEB950;
      sub_2397C89A4(v199, (uint64_t)&v230);
      sub_2397C83E8((uint64_t)&v226, (uint64_t)&v229);
      v200 = v231;
      if (v231)
      {
        v201 = (unint64_t *)&v231->__shared_owners_;
        do
          v202 = __ldaxr(v201);
        while (__stlxr(v202 - 1, v201));
        if (!v202)
        {
          ((void (*)(std::__shared_weak_count *))v200->__on_zero_shared)(v200);
          std::__shared_weak_count::__release_weak(v200);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v203 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v203);
      while (__stlxr(v10 - 1, v203));
      break;
    case 37:
      v226 = &off_250AE3C70;
      sub_23970CA7C(a3, (uint64_t)&v227);
      v204 = *a2;
      v229 = &off_250AE5878;
      sub_23975B8DC(v204, (uint64_t)&v230);
      sub_2397C8FC0((uint64_t)&v226, (uint64_t)&v229);
      v205 = v231;
      if (v231)
      {
        v206 = (unint64_t *)&v231->__shared_owners_;
        do
          v207 = __ldaxr(v206);
        while (__stlxr(v207 - 1, v206));
        if (!v207)
        {
          ((void (*)(std::__shared_weak_count *))v205->__on_zero_shared)(v205);
          std::__shared_weak_count::__release_weak(v205);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v208 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v208);
      while (__stlxr(v10 - 1, v208));
      break;
    case 38:
      v226 = &off_250AE4570;
      sub_239740360(a3, (uint64_t)&v227);
      v209 = *a2;
      v229 = &off_250AE5A00;
      sub_23975D568(v209, (uint64_t)&v230);
      sub_2397C93F8((uint64_t)&v226, (uint64_t)&v229);
      v210 = v231;
      if (v231)
      {
        v211 = (unint64_t *)&v231->__shared_owners_;
        do
          v212 = __ldaxr(v211);
        while (__stlxr(v212 - 1, v211));
        if (!v212)
        {
          ((void (*)(std::__shared_weak_count *))v210->__on_zero_shared)(v210);
          std::__shared_weak_count::__release_weak(v210);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v213 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v213);
      while (__stlxr(v10 - 1, v213));
      break;
    case 39:
      v226 = &off_250AE4668;
      sub_239740BA8(a3, (uint64_t)&v227);
      v214 = *a2;
      v229 = &off_250AE5B88;
      sub_23975F260(v214, (uint64_t)&v230);
      v216.n128_u64[0] = sub_2397C9830((uint64_t)&v226, (uint64_t)&v229, v215);
      v217 = v231;
      if (v231)
      {
        v218 = (unint64_t *)&v231->__shared_owners_;
        do
          v219 = __ldaxr(v218);
        while (__stlxr(v219 - 1, v218));
        if (!v219)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v217->__on_zero_shared)(v217, v216);
          std::__shared_weak_count::__release_weak(v217);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v220 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v220);
      while (__stlxr(v10 - 1, v220));
      break;
    case 40:
      v226 = &off_250AE4760;
      sub_2397413F0(a3, (uint64_t)&v227);
      v221 = *a2;
      v229 = &off_250AE5D10;
      sub_239760EA0(v221, (uint64_t)&v230);
      sub_2397C9CD8((uint64_t)&v226, (uint64_t)&v229);
      v222 = v231;
      if (v231)
      {
        v223 = (unint64_t *)&v231->__shared_owners_;
        do
          v224 = __ldaxr(v223);
        while (__stlxr(v224 - 1, v223));
        if (!v224)
        {
          ((void (*)(std::__shared_weak_count *))v222->__on_zero_shared)(v222);
          std::__shared_weak_count::__release_weak(v222);
        }
      }
      nullsub_4(&v229);
      v8 = v228;
      if (!v228)
        return nullsub_4(&v226);
      v225 = (unint64_t *)&v228->__shared_owners_;
      do
        v10 = __ldaxr(v225);
      while (__stlxr(v10 - 1, v225));
      break;
    default:
      return result;
  }
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  return nullsub_4(&v226);
}

void sub_2397B60DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void *sub_2397B60F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 44);
  if (v5 == *(_DWORD *)(a2 + 44) && v5 == v4)
  {
    v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v4;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = *(unsigned int *)(a1 + 32);
    return (void *)sub_2397B6290(a1, a2, &v21);
  }
  return result;
}

uint64_t sub_2397B6290(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_239745600(a3, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397B64BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397B6520@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 32);
  v6 = *(_DWORD *)(a1 + 44);
  if (v6 != *(_DWORD *)(a2 + 44) || v6 != v5)
  {
    v33 = *(unsigned int *)(a1 + 32);
    sub_2397B6730(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v5;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

