float32x4_t *sub_2396F55B0(float32x4_t *result, unint64_t a2, double a3)
{
  float v3;
  unint64_t v4;
  float32x4_t *v5;
  float32x4_t v6;
  int8x16_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  float *v11;
  unint64_t v12;
  unint64_t v13;
  float *v14;
  float v15;
  float v16;
  float v17;
  float v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  float32x4_t v22;
  float32x4_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  float32x4_t *v27;
  unint64_t v28;
  float32x4_t v29;
  unint64_t v30;
  float *v31;

  if (a2 < 5)
  {
    v8 = 0;
    v3 = 0.0;
    v9 = a2;
    if (!a2)
      goto LABEL_14;
LABEL_7:
    if (v9 >= 2)
    {
      v10 = v8 + (v9 & 0xFFFFFFFFFFFFFFFELL);
      v11 = &result->f32[v8 + 1];
      v12 = v9 & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        v3 = (float)(v3 + (float)(*(v11 - 1) * *(v11 - 1))) + (float)(*v11 * *v11);
        v11 += 2;
        v12 -= 2;
      }
      while (v12);
      if (v9 == (v9 & 0xFFFFFFFFFFFFFFFELL))
        goto LABEL_14;
    }
    else
    {
      v10 = v8;
    }
    v13 = a2 - v10;
    v14 = &result->f32[v10];
    do
    {
      v15 = *v14++;
      v3 = v3 + (float)(v15 * v15);
      --v13;
    }
    while (v13);
    goto LABEL_14;
  }
  v3 = 0.0;
  v4 = 4;
  v5 = result;
  do
  {
    v6 = *v5++;
    v7 = (int8x16_t)vmulq_f32(v6, v6);
    v3 = v3 + vaddv_f32(vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)));
    v4 += 4;
  }
  while (v4 < a2);
  v8 = ((a2 - 5) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  v9 = a2 - v8;
  if (a2 > v8)
    goto LABEL_7;
LABEL_14:
  v16 = sqrtf(v3);
  v17 = fabsf(v16);
  v18 = 1.0 / v16;
  v19 = v16 < 0.0;
  LODWORD(a3) = -8388609;
  if (!v19)
    *(float *)&a3 = 3.4028e38;
  if (v17 >= 0.00000011921)
    *(float *)&a3 = v18;
  if (a2 >= 4)
  {
    v21 = 0;
    v22 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a3, 0);
    v23 = result;
    do
    {
      *v23 = vmlaq_f32((float32x4_t)0, v22, *v23);
      ++v23;
      v20 = v21 + 4;
      v24 = v21 + 8;
      v21 += 4;
    }
    while (v24 <= a2);
  }
  else
  {
    v20 = 0;
  }
  v25 = a2 - v20;
  if (a2 > v20)
  {
    if (v25 < 8)
    {
      v26 = v20;
LABEL_28:
      v30 = a2 - v26;
      v31 = &result->f32[v26];
      do
      {
        *v31 = *(float *)&a3 * *v31;
        ++v31;
        --v30;
      }
      while (v30);
      return result;
    }
    v26 = v20 + (v25 & 0xFFFFFFFFFFFFFFF8);
    v27 = (float32x4_t *)((char *)result + 4 * v20 + 16);
    v28 = v25 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v29 = vmulq_n_f32(*v27, *(float *)&a3);
      v27[-1] = vmulq_n_f32(v27[-1], *(float *)&a3);
      *v27 = v29;
      v27 += 2;
      v28 -= 8;
    }
    while (v28);
    if (v25 != (v25 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_28;
  }
  return result;
}

float32x4_t *sub_2396F5754(float32x4_t *result, uint64_t a2, unint64_t a3, double a4)
{
  float v4;
  unint64_t v5;
  float32x4_t *v6;
  float32x4_t v7;
  int8x16_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  float *v12;
  unint64_t v13;
  unint64_t v14;
  float *v15;
  float v16;
  float v17;
  float v18;
  float v19;
  BOOL v20;
  float v21;
  unint64_t v22;
  uint64_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t *v27;
  float32x4_t v28;
  int16x8_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  float *v35;
  float v36;
  float v37;
  float v38;
  float v39;
  unint64_t v40;
  float32x4_t *v41;
  int8x16_t *v42;
  float32x4_t v43;
  float32x4_t v44;
  unint64_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  unint64_t v54;
  uint64_t v55;
  float32x4_t *v56;
  int8x8_t *v57;
  float32x4_t v58;
  float32x4_t v59;
  float32x4_t v60;
  float32x4_t v61;
  float32x4_t v62;
  float32x4_t v63;

  if (a3 < 5)
  {
    v9 = 0;
    v4 = 0.0;
    v10 = a3;
    if (!a3)
      goto LABEL_14;
LABEL_7:
    if (v10 >= 2)
    {
      v11 = v9 + (v10 & 0xFFFFFFFFFFFFFFFELL);
      v12 = &result->f32[v9 + 1];
      v13 = v10 & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        v4 = (float)(v4 + (float)(*(v12 - 1) * *(v12 - 1))) + (float)(*v12 * *v12);
        v12 += 2;
        v13 -= 2;
      }
      while (v13);
      if (v10 == (v10 & 0xFFFFFFFFFFFFFFFELL))
        goto LABEL_14;
    }
    else
    {
      v11 = v9;
    }
    v14 = a3 - v11;
    v15 = &result->f32[v11];
    do
    {
      v16 = *v15++;
      v4 = v4 + (float)(v16 * v16);
      --v14;
    }
    while (v14);
    goto LABEL_14;
  }
  v4 = 0.0;
  v5 = 4;
  v6 = result;
  do
  {
    v7 = *v6++;
    v8 = (int8x16_t)vmulq_f32(v7, v7);
    v4 = v4 + vaddv_f32(vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)));
    v5 += 4;
  }
  while (v5 < a3);
  v9 = ((a3 - 5) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  v10 = a3 - v9;
  if (a3 > v9)
    goto LABEL_7;
LABEL_14:
  v17 = sqrtf(v4);
  v18 = fabsf(v17);
  v19 = 1.0 / v17;
  v20 = v17 < 0.0;
  v21 = -3.4028e38;
  if (!v20)
    v21 = 3.4028e38;
  if (v18 >= 0.00000011921)
    v21 = v19;
  *(float *)&a4 = v21 * *(float *)&a4;
  if (a3 >= 4)
  {
    v23 = 0;
    v24 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a4, 0);
    v25.i64[0] = 0xC3000000C3000000;
    v25.i64[1] = 0xC3000000C3000000;
    v26 = (float32x4_t)vdupq_n_s32(0x42FE0000u);
    v27 = result;
    do
    {
      v28 = *v27++;
      v29 = (int16x8_t)vcvtq_s32_f32(vminnmq_f32(vmaxnmq_f32(vrndaq_f32(vmlaq_f32((float32x4_t)0, v24, v28)), v25), v26));
      *(int16x4_t *)v29.i8 = vmovn_s32((int32x4_t)v29);
      *(_DWORD *)(a2 + v23) = vmovn_s16(v29).u32[0];
      v22 = v23 + 4;
      v30 = v23 + 8;
      v23 += 4;
    }
    while (v30 <= a3);
  }
  else
  {
    v22 = 0;
  }
  v31 = a3 - v22;
  if (a3 > v22)
  {
    if (v31 < 8
      || a2 + v22 < (unint64_t)result->u64 + 4 * a3 && (unint64_t)result->u64 + 4 * v22 < a2 + a3)
    {
      v32 = v22;
      goto LABEL_27;
    }
    if (v31 >= 0x10)
    {
      v40 = v31 & 0xFFFFFFFFFFFFFFF0;
      v41 = (float32x4_t *)((char *)result + 4 * v22);
      v42 = (int8x16_t *)(a2 + v22);
      v43.i64[0] = 0xC3000000C3000000;
      v43.i64[1] = 0xC3000000C3000000;
      v44 = (float32x4_t)vdupq_n_s32(0x42FE0000u);
      v45 = v31 & 0xFFFFFFFFFFFFFFF0;
      do
      {
        v47 = v41[2];
        v46 = v41[3];
        v48 = *v41;
        v49 = v41[1];
        v41 += 4;
        v50 = vrndaq_f32(vmulq_n_f32(v46, *(float *)&a4));
        v51 = vrndaq_f32(vmulq_n_f32(v47, *(float *)&a4));
        v52 = vrndaq_f32(vmulq_n_f32(v48, *(float *)&a4));
        v53 = vrndaq_f32(vmulq_n_f32(v49, *(float *)&a4));
        *(int16x4_t *)v52.f32 = vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v43, v52), (int8x16_t)v43, vbslq_s8((int8x16_t)vcgtq_f32(v52, v44), (int8x16_t)v44, (int8x16_t)v52))));
        *(int16x4_t *)&v52.u32[2] = vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v43, v53), (int8x16_t)v43, vbslq_s8((int8x16_t)vcgtq_f32(v53, v44), (int8x16_t)v44, (int8x16_t)v53))));
        *(int16x4_t *)v51.f32 = vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v43, v51), (int8x16_t)v43, vbslq_s8((int8x16_t)vcgtq_f32(v51, v44), (int8x16_t)v44, (int8x16_t)v51))));
        *(int16x4_t *)&v51.u32[2] = vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v43, v50), (int8x16_t)v43, vbslq_s8((int8x16_t)vcgtq_f32(v50, v44), (int8x16_t)v44, (int8x16_t)v50))));
        *v42++ = vuzp1q_s8((int8x16_t)v52, (int8x16_t)v51);
        v45 -= 16;
      }
      while (v45);
      if (v31 == v40)
        return result;
      if ((v31 & 8) == 0)
      {
        v32 = v22 + v40;
LABEL_27:
        v33 = a3 - v32;
        v34 = (_BYTE *)(a2 + v32);
        v35 = &result->f32[v32];
        do
        {
          v36 = *v35++;
          v37 = roundf(*(float *)&a4 * v36);
          v38 = 127.0;
          if (v37 <= 127.0)
            v38 = v37;
          if (v37 >= -128.0)
            v39 = v38;
          else
            v39 = -128.0;
          *v34++ = (int)v39;
          --v33;
        }
        while (v33);
        return result;
      }
    }
    else
    {
      v40 = 0;
    }
    v32 = v22 + (v31 & 0xFFFFFFFFFFFFFFF8);
    v54 = v40 - (v31 & 0xFFFFFFFFFFFFFFF8);
    v55 = v40 + v22;
    v56 = (float32x4_t *)((char *)result + 4 * v55);
    v57 = (int8x8_t *)(a2 + v55);
    v58.i64[0] = 0xC3000000C3000000;
    v58.i64[1] = 0xC3000000C3000000;
    v59 = (float32x4_t)vdupq_n_s32(0x42FE0000u);
    do
    {
      v60 = *v56;
      v61 = v56[1];
      v56 += 2;
      v62 = vrndaq_f32(vmulq_n_f32(v60, *(float *)&a4));
      v63 = vrndaq_f32(vmulq_n_f32(v61, *(float *)&a4));
      *v57++ = vuzp1_s8((int8x8_t)vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v58, v62), (int8x16_t)v58, vbslq_s8((int8x16_t)vcgtq_f32(v62, v59), (int8x16_t)v59, (int8x16_t)v62)))), (int8x8_t)vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v58, v63), (int8x16_t)v58, vbslq_s8((int8x16_t)vcgtq_f32(v63, v59), (int8x16_t)v59, (int8x16_t)v63)))));
      v54 += 8;
    }
    while (v54);
    if (v31 == (v31 & 0xFFFFFFFFFFFFFFF8))
      return result;
    goto LABEL_27;
  }
  return result;
}

float32x4_t *sub_2396F5A90(float32x4_t *result, unint64_t a2, unint64_t a3, float a4)
{
  unint64_t v4;
  unint64_t v5;
  _BYTE *v6;
  float *v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float32x4_t v12;
  float32x4_t v13;
  unint64_t v14;
  int8x16_t *v15;
  float32x4_t *v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  unint64_t v25;
  float32x4_t *v26;
  int8x8_t *v27;
  unint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;

  if (!a3)
    return result;
  if (a3 >= 8 && ((unint64_t)result->u64 + 4 * a3 <= a2 || a2 + a3 <= (unint64_t)result))
  {
    if (a3 >= 0x10)
    {
      v4 = a3 & 0xFFFFFFFFFFFFFFF0;
      v12.i64[0] = 0xC3000000C3000000;
      v12.i64[1] = 0xC3000000C3000000;
      v13 = (float32x4_t)vdupq_n_s32(0x42FE0000u);
      v14 = a3 & 0xFFFFFFFFFFFFFFF0;
      v15 = (int8x16_t *)a2;
      v16 = result;
      do
      {
        v18 = v16[2];
        v17 = v16[3];
        v19 = *v16;
        v20 = v16[1];
        v16 += 4;
        v21 = vrndaq_f32(vmulq_n_f32(v17, a4));
        v22 = vrndaq_f32(vmulq_n_f32(v18, a4));
        v23 = vrndaq_f32(vmulq_n_f32(v19, a4));
        v24 = vrndaq_f32(vmulq_n_f32(v20, a4));
        *(int16x4_t *)v23.f32 = vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v12, v23), (int8x16_t)v12, vbslq_s8((int8x16_t)vcgtq_f32(v23, v13), (int8x16_t)v13, (int8x16_t)v23))));
        *(int16x4_t *)&v23.u32[2] = vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v12, v24), (int8x16_t)v12, vbslq_s8((int8x16_t)vcgtq_f32(v24, v13), (int8x16_t)v13, (int8x16_t)v24))));
        *(int16x4_t *)v22.f32 = vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v12, v22), (int8x16_t)v12, vbslq_s8((int8x16_t)vcgtq_f32(v22, v13), (int8x16_t)v13, (int8x16_t)v22))));
        *(int16x4_t *)&v22.u32[2] = vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v12, v21), (int8x16_t)v12, vbslq_s8((int8x16_t)vcgtq_f32(v21, v13), (int8x16_t)v13, (int8x16_t)v21))));
        *v15++ = vuzp1q_s8((int8x16_t)v23, (int8x16_t)v22);
        v14 -= 16;
      }
      while (v14);
      if (v4 == a3)
        return result;
      if ((a3 & 8) == 0)
        goto LABEL_6;
    }
    else
    {
      v4 = 0;
    }
    v25 = v4;
    v4 = a3 & 0xFFFFFFFFFFFFFFF8;
    v26 = (float32x4_t *)((char *)result + 4 * v25);
    v27 = (int8x8_t *)(a2 + v25);
    v28 = v25 - (a3 & 0xFFFFFFFFFFFFFFF8);
    v29.i64[0] = 0xC3000000C3000000;
    v29.i64[1] = 0xC3000000C3000000;
    v30 = (float32x4_t)vdupq_n_s32(0x42FE0000u);
    do
    {
      v31 = *v26;
      v32 = v26[1];
      v26 += 2;
      v33 = vrndaq_f32(vmulq_n_f32(v31, a4));
      v34 = vrndaq_f32(vmulq_n_f32(v32, a4));
      *v27++ = vuzp1_s8((int8x8_t)vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v29, v33), (int8x16_t)v29, vbslq_s8((int8x16_t)vcgtq_f32(v33, v30), (int8x16_t)v30, (int8x16_t)v33)))), (int8x8_t)vmovn_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v29, v34), (int8x16_t)v29, vbslq_s8((int8x16_t)vcgtq_f32(v34, v30), (int8x16_t)v30, (int8x16_t)v34)))));
      v28 += 8;
    }
    while (v28);
    if (v4 == a3)
      return result;
  }
  else
  {
    v4 = 0;
  }
LABEL_6:
  v5 = a3 - v4;
  v6 = (_BYTE *)(a2 + v4);
  v7 = &result->f32[v4];
  do
  {
    v8 = *v7++;
    v9 = roundf(v8 * a4);
    v10 = 127.0;
    if (v9 <= 127.0)
      v10 = v9;
    if (v9 >= -128.0)
      v11 = v10;
    else
      v11 = -128.0;
    *v6++ = (int)v11;
    --v5;
  }
  while (v5);
  return result;
}

double sub_2396F5C58@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  BOOL v11;
  uint64_t *v12;
  int v13;
  int v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  unint64_t v19;
  char *v20;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v23;

  *(_QWORD *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + 56) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 64) = 1;
  *(std::chrono::system_clock::time_point *)a3 = std::chrono::system_clock::now();
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(a3 + 28) = (float)((float)v23 * 0.00097656) * 0.00097656;
  *(_BYTE *)(a3 + 64) = 1;
  v7 = *a2;
  v8 = a2[1];
  v9 = a1[1];
  if (*a1 >= *a2)
  {
    v10 = a2;
  }
  else
  {
    v7 = *a1;
    v10 = a1;
  }
  v11 = v8 < v9;
  if (v8 <= v9)
    v8 = a1[1];
  if (v11)
    v12 = a1;
  else
    v12 = a2;
  v13 = *((_DWORD *)v12 + 8);
  LODWORD(result) = *((_DWORD *)a1 + 6);
  if (*(float *)&result <= *((float *)a2 + 6))
    LODWORD(result) = *((_DWORD *)a2 + 6);
  v14 = *((_DWORD *)v10 + 7);
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v8;
  *(_DWORD *)(a3 + 28) = v14;
  *(_DWORD *)(a3 + 32) = v13;
  *(_DWORD *)(a3 + 24) = LODWORD(result);
  *(_BYTE *)(a3 + 64) = (*((unsigned __int8 *)a1 + 64) | *((unsigned __int8 *)a2 + 64)) != 0;
  v16 = (int *)a1[5];
  v15 = (int *)a1[6];
  v17 = (int *)a2[5];
  v18 = (int *)a2[6];
  v19 = v18 - v17 + v15 - v16;
  if (v19)
  {
    if (v19 >> 62)
      sub_2394189F8();
    v20 = (char *)operator new(4 * v19);
    *(_QWORD *)(a3 + 40) = v20;
    *(_QWORD *)(a3 + 48) = v20;
    *(_QWORD *)(a3 + 56) = &v20[4 * v19];
  }
  if (v16 != v15)
  {
    do
      sub_2394202DC((_QWORD *)a3, *v16++);
    while (v16 != v15);
    v17 = (int *)a2[5];
    v18 = (int *)a2[6];
  }
  while (v17 != v18)
    sub_2394202DC((_QWORD *)a3, *v17++);
  if (!*(_BYTE *)(a3 + 64))
  {
    result = (double)(uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) / 1000000.0;
    *(double *)(a3 + 16) = result;
  }
  return result;
}

void sub_2396F5E1C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 48) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2396F5E40()
{
  size_t v1;
  uint64_t v2;
  int v3[2];
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v2 = 0;
  *(_QWORD *)v3 = 0x1800000006;
  v1 = 8;
  if (sysctl(v3, 2u, &v2, &v1, 0, 0) >= 0)
    return v2;
  else
    return 0;
}

uint64_t sub_2396F5EC0(int a1)
{
  uint64_t v1;

  if ((a1 - 1) < 4)
    return 1;
  if ((a1 - 5) < 4)
    return 2;
  if ((a1 - 9) >= 0x10 || ((0xFF0Fu >> (a1 - 9)) & 1) == 0)
  {
    v1 = 4;
    if ((a1 - 13) >= 4 && (a1 - 25) >= 0x10)
    {
      if (!a1)
        sub_239EC1BBC();
      sub_239EC1BEC();
    }
    return v1;
  }
  return 3;
}

uint64_t sub_2396F5F50()
{
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  uint64_t v3;

  task_info_outCnt = 93;
  if (task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    return 0;
  else
    return v3;
}

uint64_t sub_2396F5FA0(uint64_t a1, _QWORD *a2, float64x2_t a3, double a4, float64x2_t a5, double a6, float64x2_t a7, double a8, float64x2_t a9)
{
  int64x2_t v11;
  int8x16_t v12;
  float64x2_t v13;
  int8x16_t v14;
  int64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;
  int8x16_t v18;
  unint64_t v19;
  float64x2_t v22;
  unint64_t v23;
  unint64_t v24;
  float64_t v25;
  float64_t v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;
  unint64_t v31;
  float64x2_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *i;
  uint64_t *j;
  float64x2_t v37;
  double v38;
  float64x2_t v40;
  float32x2_t *v45;
  __int128 v46;
  float64x2_t *v47;
  float64x2_t v48;
  float64x2_t v49;
  float64x2_t v50;
  float64x2_t v51;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  float64_t v56;
  uint64_t v57;
  float64_t v58;
  uint64_t v59;
  float64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  float64x2_t v65;
  float64x2_t v66;
  float64x2_t v67;
  float64x2_t v68;
  float64x2_t v69;
  float64x2_t v70;
  float64x2_t v71;
  float64x2_t v72;
  float64x2_t v73;
  float64x2_t v74;
  float64x2_t v75;
  float64x2_t v76;
  float64x2_t v77;
  float64x2_t v78;
  float64x2_t v79;
  float64x2_t v80;

  a3.f64[0] = *(float64_t *)(a1 + 24);
  a5.f64[0] = *(float64_t *)(a1 + 48);
  a7.f64[0] = *(float64_t *)(a1 + 72);
  v17 = *(float64x2_t *)(a1 + 56);
  a9.f64[0] = *(float64_t *)a1;
  v11 = (int64x2_t)vmulq_f64(a3, a9);
  v12 = (int8x16_t)vmulq_n_f64(*(float64x2_t *)(a1 + 8), *(double *)a1);
  v13 = (float64x2_t)vextq_s8(v12, v12, 8uLL);
  v14 = (int8x16_t)vmulq_f64(a5, a9);
  v15 = (int64x2_t)vmulq_n_f64(*(float64x2_t *)(a1 + 32), *(double *)a1);
  *(_QWORD *)&a7.f64[0] = *(_OWORD *)&vmulq_f64(a7, a9);
  v16 = vmulq_n_f64(v17, *(double *)a1);
  v17.f64[0] = *(float64_t *)(a1 + 96);
  v18 = *(int8x16_t *)(a1 + 80);
  v19 = vextq_s8(v18, v18, 8uLL).u64[0];
  _Q2 = (float64x2_t)vceqq_f64(v13, (float64x2_t)xmmword_239EC6850);
  _Q0 = (float64x2_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)_Q2, (int32x4_t)vceqzq_f64((float64x2_t)vzip1q_s64(v11, v15))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8((int8x16_t)v15, v14, 8uLL), (float64x2_t)xmmword_239EC6840), (int32x4_t)vceqzq_f64(v16))));
  *(int8x8_t *)&_Q0.f64[0] = vmovn_s16((int16x8_t)_Q0);
  LOBYTE(_Q0.f64[0]) = vmaxv_u8(*(uint8x8_t *)&_Q0.f64[0]);
  v63 = v14.i64[0];
  v64 = v11.i64[0];
  v61 = v12.i64[0];
  v62 = *(_QWORD *)&a7.f64[0];
  v59 = v15.i64[0];
  v60 = v17.f64[0];
  v57 = v18.i64[0];
  v58 = v16.f64[0];
  v55 = v19;
  v56 = v13.f64[0];
  v53 = vextq_s8((int8x16_t)v16, (int8x16_t)v16, 8uLL).u64[0];
  v54 = vextq_s8((int8x16_t)v15, (int8x16_t)v15, 8uLL).u64[0];
  if ((LOBYTE(_Q0.f64[0]) & 1) != 0 || (_Q0.f64[0] = 1.0, a7.f64[0] != 1.0))
  {
    for (i = (_QWORD *)a2[11]; i; i = (_QWORD *)*i)
      _Q0.f64[0] = sub_2396F774C((uint64_t)(i + 3), a1, (int64x2_t)_Q0);
    for (j = (uint64_t *)a2[6]; j; j = (uint64_t *)*j)
    {
      _Q2.f64[0] = *(float64_t *)(a1 + 48);
      v37 = *(float64x2_t *)(a1 + 32);
      v38 = *((double *)j + 5);
      _Q7 = *(float64x2_t *)(j + 3);
      v40 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(*(float64x2_t *)(a1 + 8), _Q7.f64[0]), v37, _Q7, 1), *(float64x2_t *)(a1 + 56), v38);
      __asm { FMLA            D0, D2, V7.D[1] }
      _Q0.f64[0] = _Q0.f64[0] + *(double *)(a1 + 72) * v38;
      _Q2.f64[0] = *(float64_t *)a1;
      v37.f64[0] = *(float64_t *)(a1 + 96);
      *(float64x2_t *)(j + 3) = vmlaq_n_f64(*(float64x2_t *)(a1 + 80), v40, *(double *)a1);
      j[5] = *(_OWORD *)&vmlaq_f64(v37, _Q0, _Q2);
    }
    v45 = (float32x2_t *)a2[101];
    v34 = v63;
    v33 = v64;
    *(_QWORD *)&v32.f64[0] = v61;
    v31 = v62;
    *(_QWORD *)&v30.f64[0] = v59;
    v29.f64[0] = v60;
    *(_QWORD *)&v28.f64[0] = v57;
    v27.f64[0] = v58;
    v26 = *(double *)&v55;
    v25 = v56;
    v24 = v53;
    v23 = v54;
    if (v45)
    {
      v46 = *(_OWORD *)a1;
      do
      {
        v45[9] = vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(v45[9]), *(double *)&v46));
        v45 = (float32x2_t *)*v45;
      }
      while (v45);
    }
  }
  else
  {
    *(_QWORD *)&v22.f64[0] = v18.i64[0];
    *(_QWORD *)&v22.f64[1] = v19;
    v73 = vnegq_f64(v22);
    *(_QWORD *)&v74.f64[0] = *(_OWORD *)&vnegq_f64(v17);
    sub_2396F62C4((uint64_t)a2, (uint64_t)&v73, 0, v73, v74.f64[0], (int8x16_t)_Q2);
    v24 = v53;
    v23 = v54;
    v26 = *(double *)&v55;
    v25 = v56;
    *(_QWORD *)&v28.f64[0] = v57;
    v27.f64[0] = v58;
    *(_QWORD *)&v30.f64[0] = v59;
    v29.f64[0] = v60;
    *(_QWORD *)&v32.f64[0] = v61;
    v31 = v62;
    v34 = v63;
    v33 = v64;
  }
  *(_QWORD *)&v27.f64[1] = v24;
  *(_QWORD *)&v30.f64[1] = v23;
  v32.f64[1] = v25;
  v28.f64[1] = v26;
  v29.f64[1] = 1.0;
  v47 = (float64x2_t *)(a2 + 67);
  v65 = *v47;
  v66 = v47[1];
  v67 = v47[2];
  v68 = v47[3];
  v69 = v47[4];
  v70 = v47[5];
  v71 = v47[6];
  v72 = v47[7];
  v47[2] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v32, v67.f64[0]), v30, v67, 1), v27, v68.f64[0]), v28, v68, 1);
  v47[3] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)(unint64_t)v33, v67.f64[0]), (float64x2_t)(unint64_t)v34, v67, 1), (float64x2_t)v31, v68.f64[0]), v29, v68, 1);
  *v47 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v32, v65.f64[0]), v30, v65, 1), v27, v66.f64[0]), v28, v66, 1);
  v47[1] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)(unint64_t)v33, v65.f64[0]), (float64x2_t)(unint64_t)v34, v65, 1), (float64x2_t)v31, v66.f64[0]), v29, v66, 1);
  v47[6] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v32, v71.f64[0]), v30, v71, 1), v27, v72.f64[0]), v28, v72, 1);
  v47[7] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)(unint64_t)v33, v71.f64[0]), (float64x2_t)(unint64_t)v34, v71, 1), (float64x2_t)v31, v72.f64[0]), v29, v72, 1);
  v47[4] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v32, v69.f64[0]), v30, v69, 1), v27, v70.f64[0]), v28, v70, 1);
  v47[5] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)(unint64_t)v33, v69.f64[0]), (float64x2_t)(unint64_t)v34, v69, 1), (float64x2_t)v31, v70.f64[0]), v29, v70, 1);
  sub_239A22BE8(&v73);
  v48 = v78;
  v47[12] = v77;
  v47[13] = v48;
  v49 = v80;
  v47[14] = v79;
  v47[15] = v49;
  v50 = v74;
  v47[8] = v73;
  v47[9] = v50;
  v51 = v76;
  v47[10] = v75;
  v47[11] = v51;
  return 1;
}

void sub_2396F62C4(uint64_t a1, uint64_t a2, char a3, float64x2_t _Q0, double a5, int8x16_t _Q2)
{
  float64x2_t v6;
  float64x2_t v7;
  uint64_t *v11;
  double v16;
  float64x2_t v18;
  int8x16_t v20;
  float64x2_t v21;
  float64x2_t v22;
  double v23;
  float64x2_t v25;
  float64x2_t v26;
  float64x2_t v27;
  float64x2_t v28;
  unint64_t v29;
  double v30;
  float64x2_t v31;
  int8x16_t v32;
  double v33;
  double v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t v37;
  float64x2_t v40;
  float64x2_t v43;
  int64x2_t v46;
  double v47;
  double v48;
  float64x2_t v49;
  float64x2_t v50;
  float64x2_t v51;
  float64x2_t v52;
  float64x2_t v53;
  float64x2_t v54;
  float64x2_t v55;
  float64x2_t v56;
  uint64_t *i;
  float64x2_t v58;
  float64x2_t v59;
  float64x2_t v60;
  float64x2_t v61;
  float64x2_t v62;
  float64x2_t v63;
  float64x2_t v64;
  float64x2_t v65;
  float64x2_t v66;
  _BYTE v67[32];
  int8x16_t v68;
  double v69;

  v11 = *(uint64_t **)(a1 + 88);
  if (v11)
  {
    __asm { FMOV            V0.2D, #-1.0 }
    v58 = _Q0;
    do
    {
      *(_QWORD *)&v26.f64[0] = v11[13];
      v21 = *(float64x2_t *)(v11 + 11);
      v22 = *(float64x2_t *)(v11 + 15);
      v23 = *((double *)v11 + 21);
      _Q26 = *(float64x2_t *)(v11 + 19);
      *(_QWORD *)&v7.f64[0] = v11[25];
      v25 = *(float64x2_t *)(v11 + 23);
      *(_QWORD *)&v26.f64[1] = v11[17];
      v6.f64[0] = *(float64_t *)(a2 + 16);
      v27 = *(float64x2_t *)a2;
      _Q0.f64[0] = v26.f64[0];
      v28 = v21;
      v29 = vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL).u64[0];
      v30 = v26.f64[1];
      v31 = v22;
      v32.i64[0] = vextq_s8((int8x16_t)v31, (int8x16_t)v31, 8uLL).u64[0];
      v33 = v23;
      _Q2 = (int8x16_t)_Q26;
      *(_QWORD *)&v34 = vextq_s8(_Q2, _Q2, 8uLL).u64[0];
      v66 = v21;
      *(float64_t *)v67 = v26.f64[0];
      *(float64x2_t *)&v67[8] = v22;
      *(float64_t *)&v67[24] = v26.f64[1];
      v68 = (int8x16_t)_Q26;
      v69 = v23;
      v35 = (float64x2_t)vzip1q_s64((int64x2_t)v21, (int64x2_t)v22);
      v36 = (float64x2_t)vzip2q_s64((int64x2_t)v21, (int64x2_t)v22);
      v37 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v35, v28.f64[0]), v36, v28, 1), v26, v26.f64[0]);
      _Q21 = (int64x2_t)vmulq_f64(_Q26, v21);
      _D22 = v21.f64[1];
      __asm { FMLA            D21, D22, V2.D[1] }
      *(double *)_Q21.i64 = *(double *)_Q21.i64 + v23 * v26.f64[0];
      v40 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v35, v31.f64[0]), v36, v31, 1), v26, v26.f64[1]);
      _Q23 = (int8x16_t)vmulq_f64(_Q26, v22);
      _D24 = v22.f64[1];
      __asm { FMLA            D23, D24, V2.D[1] }
      *(double *)_Q23.i64 = *(double *)_Q23.i64 + v23 * v26.f64[1];
      v43 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v35, *(double *)_Q2.i64), v36, (float64x2_t)_Q2, 1), v26, v23);
      _Q19 = vmulq_f64((float64x2_t)_Q2, (float64x2_t)_Q2);
      _D20 = _Q26.f64[1];
      __asm { FMLA            D19, D20, V2.D[1] }
      _Q19.f64[0] = _Q19.f64[0] + v69 * v69;
      v46 = (int64x2_t)vaddq_f64(v40, (float64x2_t)xmmword_239EC6830);
      *(_QWORD *)&_Q19.f64[0] = *(_OWORD *)&vabsq_f64(vaddq_f64(_Q19, v58));
      _Q19.f64[1] = NAN;
      v47 = vmaxnmvq_f64(vmaxnmq_f64(vmaxnmq_f64(vmaxnmq_f64(vabsq_f64(vaddq_f64(v37, (float64x2_t)xmmword_239EC6820)), _Q19), vabsq_f64((float64x2_t)vextq_s8((int8x16_t)v46, _Q23, 8uLL))), vmaxnmq_f64(vabsq_f64((float64x2_t)vzip1q_s64(_Q21, v46)), vabsq_f64(v43))));
      v48 = -v26.f64[1];
      if (v47 > 0.0001
        || (v49.f64[0] = v21.f64[0],
            *(_QWORD *)&v49.f64[1] = v29,
            v50.f64[0] = v34,
            v50.f64[1] = _Q26.f64[0],
            *(_QWORD *)&v51.f64[0] = v32.i64[0],
            v51.f64[1] = v22.f64[0],
            v52 = vmulq_f64(v49, vmlaq_n_f64(vmulq_n_f64(v50, v48), v51, v23)),
            fabs(v26.f64[0] * (v34 * v22.f64[0] - *(double *)v32.i64 * _Q26.f64[0])+ vsubq_f64(v52, (float64x2_t)vdupq_laneq_s64((int64x2_t)v52, 1)).f64[0]+ -1.0) > 0.0001))
      {
        v59 = v7;
        v60 = v22;
        v61 = v21;
        v62 = v27;
        v63 = v26;
        v64 = _Q26;
        v65 = v6;
        if (v47 > 0.1
          || (*(_QWORD *)&v28.f64[1] = v29,
              v53.f64[0] = v34,
              v53.f64[1] = _Q26.f64[0],
              v54 = vmulq_n_f64(v53, v48),
              *(_QWORD *)&v55.f64[0] = v32.i64[0],
              v55.f64[1] = v22.f64[0],
              v56 = vmulq_f64(v28, vmlaq_n_f64(v54, v55, v23)),
              fabs(v26.f64[0] * (v34 * v22.f64[0] - *(double *)v32.i64 * _Q26.f64[0])+ vsubq_f64(v56, (float64x2_t)vdupq_laneq_s64((int64x2_t)v56, 1)).f64[0]+ -1.0) > 0.1))
        {
          sub_239EC1C1C(a1, a2);
        }
        sub_239516070(&v66);
        v33 = v69;
        _Q2 = v68;
        v32 = *(int8x16_t *)&v67[16];
        _Q0 = *(float64x2_t *)v67;
        v28 = v66;
        *(_QWORD *)&v34 = vextq_s8(_Q2, _Q2, 8uLL).u64[0];
        *(_QWORD *)&v30 = vextq_s8(v32, v32, 8uLL).u64[0];
        *(_QWORD *)&v31.f64[0] = vextq_s8((int8x16_t)_Q0, (int8x16_t)_Q0, 8uLL).u64[0];
        v29 = vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL).u64[0];
        _Q26 = v64;
        v6 = v65;
        v27 = v62;
        v26 = v63;
        v22 = v60;
        v21 = v61;
        v7 = v59;
      }
      *(_QWORD *)&v16 = *(_OWORD *)&vsubq_f64((float64x2_t)0, v7);
      _Q18 = vsubq_f64((float64x2_t)0, v25);
      v18 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)vzip1q_s64((int64x2_t)v21, (int64x2_t)v22), _Q18.f64[0]), (float64x2_t)vzip2q_s64((int64x2_t)v21, (int64x2_t)v22), _Q18, 1), v26, v16);
      _Q20 = vmulq_f64(_Q26, _Q18);
      _Q18.f64[0] = _Q18.f64[1];
      __asm { FMLA            D20, D18, V26.D[1] }
      _Q20.f64[0] = vmlad_n_f64(_Q20.f64[0], v23, v16);
      v20 = (int8x16_t)vsubq_f64(v18, v27);
      _Q18.f64[0] = *(double *)vextq_s8(v20, v20, 8uLL).i64;
      v18.f64[0] = vsubq_f64(_Q20, v6).f64[0];
      *(double *)&_Q2.i64[1] = v34;
      *(_QWORD *)&v28.f64[1] = v29;
      *(_QWORD *)&v31.f64[1] = v32.i64[0];
      _Q0.f64[0] = _Q0.f64[0] * *(double *)v20.i64 + v30 * _Q18.f64[0] + v33 * v18.f64[0];
      _Q0 = vnegq_f64(_Q0);
      *(float64x2_t *)(v11 + 23) = vnegq_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v28, *(double *)v20.i64), v31, _Q18.f64[0]), (float64x2_t)_Q2, v18.f64[0]));
      v11[25] = *(_QWORD *)&_Q0.f64[0];
      v11 = (uint64_t *)*v11;
    }
    while (v11);
  }
  if ((a3 & 1) == 0)
  {
    for (i = *(uint64_t **)(a1 + 48); i; i = (uint64_t *)*i)
    {
      *(_QWORD *)&_Q0.f64[0] = i[5];
      _Q2.i64[0] = *(_QWORD *)(a2 + 16);
      _Q0 = vsubq_f64(_Q0, (float64x2_t)_Q2);
      *(float64x2_t *)(i + 3) = vsubq_f64(*(float64x2_t *)(i + 3), *(float64x2_t *)a2);
      i[5] = *(_QWORD *)&_Q0.f64[0];
    }
  }
}

uint64_t sub_2396F661C(uint64_t a1, _QWORD *a2, double a3, double a4, float64x2_t a5, double a6, float64x2_t a7, double a8, float64x2_t a9)
{
  float64x2_t v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  float64x2_t v17;
  float64_t v18;

  v11 = 0x3FF0000000000000;
  v16 = 0x3FF0000000000000;
  v12 = xmmword_239ED05C0;
  v13 = *(_OWORD *)algn_239ED05D0;
  v14 = xmmword_239ED05E0;
  v15 = unk_239ED05F0;
  v9 = vnegq_f64((float64x2_t)*(unint64_t *)(a1 + 16));
  v17 = vnegq_f64(*(float64x2_t *)a1);
  v18 = v9.f64[0];
  return sub_2396F5FA0((uint64_t)&v11, a2, v9, v17.f64[0], a5, a6, a7, a8, a9);
}

uint64_t sub_2396F6678(uint64_t a1, int a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  void *__p;
  _QWORD *v9;
  uint64_t v10;

  __p = 0;
  v9 = 0;
  v10 = 0;
  if (a2)
    sub_2394B5624(a1, (uint64_t)&__p, 1);
  else
    sub_239433C1C(a1, (uint64_t)&__p, 1);
  v3 = __p;
  v4 = v9;
  if (__p == v9)
  {
    v5 = 0;
    if (!__p)
      return v5;
    goto LABEL_8;
  }
  v5 = 0;
  do
  {
    v6 = sub_239470FCC(a1, *v3);
    v5 += (*((_DWORD *)v6 + 51) * *((_DWORD *)v6 + 50));
    ++v3;
  }
  while (v3 != v4);
  v3 = __p;
  if (__p)
  {
LABEL_8:
    v9 = v3;
    operator delete(v3);
  }
  return v5;
}

void sub_2396F672C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__n128 sub_2396F674C(uint64_t a1, uint64_t a2, int64x2_t a3)
{
  double v5;
  unint64_t v7;
  double v8;
  float64x2_t v9;
  double v10;
  double v11;
  double v13;
  float64x2_t v14;
  float64x2_t v15;
  float64x2_t v17;
  float64x2_t v24;
  float64x2_t v27;
  float64x2_t v29;
  float64x2_t v30;
  int64x2_t v31;
  double v33;
  double v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v40;
  float64x2_t v41;
  float64x2_t v42;
  float64x2_t v43;
  float64x2_t v44;
  int64x2_t v48;
  double v49;
  double v50;
  int64x2_t v51;
  double v52;
  float64x2_t v53;
  int64x2_t v54;
  float64x2_t v55;
  double v56;
  __n128 result;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  float64x2_t v62;
  float64x2_t v63;
  uint64_t v64;
  int64x2_t v65;
  float64_t v66;
  int64x2_t v67;
  double v68;
  float64x2_t v69;
  double v70;
  float64x2_t v71;
  double v72;
  float64x2_t v73;
  double v74;
  __n128 v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;

  v5 = *(double *)(a1 + 80);
  _Q1 = *(float64x2_t *)(a1 + 64);
  v7 = vextq_s8((int8x16_t)_Q1, (int8x16_t)_Q1, 8uLL).u64[0];
  v8 = *(double *)(a1 + 112);
  v9 = *(float64x2_t *)(a1 + 96);
  *(_QWORD *)&v10 = vextq_s8((int8x16_t)v9, (int8x16_t)v9, 8uLL).u64[0];
  v11 = *(double *)(a1 + 144);
  _Q5 = *(float64x2_t *)(a1 + 128);
  *(_QWORD *)&v13 = vextq_s8((int8x16_t)_Q5, (int8x16_t)_Q5, 8uLL).u64[0];
  v70 = v5;
  v69 = _Q1;
  v72 = v8;
  v71 = v9;
  v74 = v11;
  v73 = _Q5;
  v14 = (float64x2_t)vzip1q_s64((int64x2_t)_Q1, (int64x2_t)v9);
  v15 = (float64x2_t)vzip2q_s64((int64x2_t)_Q1, (int64x2_t)v9);
  _Q20.f64[0] = v5;
  _Q20.f64[1] = v8;
  v17 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v14, _Q1.f64[0]), v15, _Q1, 1), _Q20, v5);
  _Q21 = (int64x2_t)vmulq_f64(_Q5, _Q1);
  _D22 = _Q1.f64[1];
  __asm { FMLA            D21, D22, V5.D[1] }
  *(double *)_Q21.i64 = *(double *)_Q21.i64 + v11 * v5;
  v24 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v14, v9.f64[0]), v15, v9, 1), _Q20, v8);
  _Q23 = (int8x16_t)vmulq_f64(_Q5, v9);
  _D24 = v9.f64[1];
  __asm { FMLA            D23, D24, V5.D[1] }
  *(double *)_Q23.i64 = *(double *)_Q23.i64 + v11 * v8;
  v27 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v14, _Q5.f64[0]), v15, _Q5, 1), _Q20, v11);
  _Q19 = vmulq_f64(_Q5, _Q5);
  _Q20.f64[0] = _Q5.f64[1];
  __asm { FMLA            D19, D20, V5.D[1] }
  _Q19.f64[0] = _Q19.f64[0] + v11 * v11;
  v29 = (float64x2_t)xmmword_239EC6820;
  v30 = (float64x2_t)xmmword_239EC6830;
  v31 = (int64x2_t)vaddq_f64(v24, (float64x2_t)xmmword_239EC6830);
  __asm { FMOV            V26.2D, #-1.0 }
  *(_QWORD *)&_Q19.f64[0] = *(_OWORD *)&vabsq_f64(vaddq_f64(_Q19, _Q26));
  _Q19.f64[1] = NAN;
  v33 = vmaxnmvq_f64(vmaxnmq_f64(vmaxnmq_f64(vmaxnmq_f64(vabsq_f64(vaddq_f64(v17, (float64x2_t)xmmword_239EC6820)), _Q19), vabsq_f64((float64x2_t)vextq_s8((int8x16_t)v31, _Q23, 8uLL))), vmaxnmq_f64(vabsq_f64((float64x2_t)vzip1q_s64(_Q21, v31)), vabsq_f64(v27))));
  v34 = -v8;
  if (v33 > 0.0001)
    goto LABEL_3;
  v35.f64[0] = _Q1.f64[0];
  *(_QWORD *)&v35.f64[1] = v7;
  v36.f64[0] = v13;
  v36.f64[1] = _Q5.f64[0];
  v37.f64[0] = v10;
  v37.f64[1] = v9.f64[0];
  v38 = vmulq_f64(v35, vmlaq_n_f64(vmulq_n_f64(v36, v34), v37, v11));
  _Q20 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v38, 1);
  if (fabs(v5 * (v13 * v9.f64[0] - v10 * _Q5.f64[0]) + vsubq_f64(v38, _Q20).f64[0] + -1.0) > 0.0001)
  {
LABEL_3:
    v62 = _Q26;
    if (v33 > 0.1
      || (*(_QWORD *)&_Q1.f64[1] = v7,
          v40.f64[0] = v13,
          v40.f64[1] = _Q5.f64[0],
          v41 = vmulq_n_f64(v40, v34),
          v42.f64[0] = v10,
          v42.f64[1] = v9.f64[0],
          v43 = vmulq_f64(_Q1, vmlaq_n_f64(v41, v42, v11)),
          fabs(v5 * (v13 * v9.f64[0] - v10 * _Q5.f64[0])+ vsubq_f64(v43, (float64x2_t)vdupq_laneq_s64((int64x2_t)v43, 1)).f64[0]+ -1.0) > 0.1))
    {
      sub_239EC1C1C(a1, a2);
    }
    sub_239516070(&v69);
    v30 = (float64x2_t)xmmword_239EC6830;
    v29 = (float64x2_t)xmmword_239EC6820;
    _Q26 = v62;
  }
  a3.i64[0] = *(_QWORD *)(a2 + 16);
  v44 = *(float64x2_t *)a2;
  _Q1.f64[0] = *(float64_t *)(a2 + 40);
  _Q4 = *(float64x2_t *)(a2 + 24);
  _D5 = *(double *)(a2 + 64);
  _Q2 = *(float64x2_t *)(a2 + 48);
  v48 = vzip1q_s64(*(int64x2_t *)a2, (int64x2_t)_Q4);
  v49 = *(double *)(a2 + 8);
  v50 = *(double *)(a2 + 32);
  v51 = vzip2q_s64(*(int64x2_t *)a2, (int64x2_t)_Q4);
  v52 = *(double *)(a2 + 56);
  v64 = *(_QWORD *)(a2 + 48);
  v66 = _Q2.f64[1];
  v63 = (float64x2_t)v48;
  v65 = v51;
  v68 = _D5;
  v67 = vzip1q_s64(a3, (int64x2_t)_Q1);
  *(double *)v51.i64 = vmlad_n_f64(vmlad_n_f64(*(double *)a3.i64 * v44.f64[0], _Q1.f64[0], _Q4.f64[0]), _D5, _Q2.f64[0]);
  __asm
  {
    FMLA            D20, D1, V4.D[1]
    FMLA            D20, D5, V2.D[1]
  }
  v53 = vmulq_f64((float64x2_t)a3, (float64x2_t)a3);
  v53.f64[0] = v53.f64[0] + _Q1.f64[0] * _Q1.f64[0] + _D5 * _D5;
  v54 = (int64x2_t)vaddq_f64(vmlaq_laneq_f64(vmlaq_laneq_f64(vmulq_laneq_f64(v44, v44, 1), _Q4, _Q4, 1), _Q2, _Q2, 1), v30);
  *(_QWORD *)&v55.f64[0] = *(_OWORD *)&vabsq_f64(vaddq_f64(v53, _Q26));
  v55.f64[1] = NAN;
  v56 = vmaxnmvq_f64(vmaxnmq_f64(vmaxnmq_f64(vmaxnmq_f64(vabsq_f64(vaddq_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v44, v44.f64[0]), _Q4, _Q4.f64[0]), _Q2, _Q2.f64[0]), v29)), v55), vabsq_f64((float64x2_t)vextq_s8((int8x16_t)v54, (int8x16_t)_Q20, 8uLL))), vmaxnmq_f64(vabsq_f64((float64x2_t)vzip1q_s64(v51, v54)), vabsq_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v44, *(double *)a3.i64), _Q4, _Q1.f64[0]), _Q2, _D5)))));
  if (v56 > 0.0001
    || fabs(_Q2.f64[0] * (_Q1.f64[0] * v49 - v50 * *(double *)a3.i64)+ v44.f64[0] * (_D5 * v50 - v52 * _Q1.f64[0])- _Q4.f64[0] * (_D5 * v49 - v52 * *(double *)a3.i64)+ -1.0) > 0.0001)
  {
    if (v56 > 0.1
      || fabs(_Q2.f64[0] * (_Q1.f64[0] * v49 - v50 * *(double *)a3.i64)+ v44.f64[0] * (_D5 * v50 - v52 * _Q1.f64[0])- _Q4.f64[0] * (_D5 * v49 - v52 * *(double *)a3.i64)+ -1.0) > 0.1)
    {
      sub_239EC1C48(a1, a2);
    }
    sub_239516070(&v63);
  }
  sub_2396F7B74((uint64_t)&v69, (uint64_t)&v63, (uint64_t)&v75);
  result = v75;
  v58 = v77;
  v59 = v78;
  v60 = v79;
  v61 = v80;
  *(_QWORD *)(a1 + 80) = v76;
  *(__n128 *)(a1 + 64) = result;
  *(_QWORD *)(a1 + 112) = v59;
  *(_OWORD *)(a1 + 96) = v58;
  *(_QWORD *)(a1 + 144) = v61;
  *(_OWORD *)(a1 + 128) = v60;
  return result;
}

uint64_t sub_2396F6B1C(uint64_t a1)
{
  uint64_t v1;
  float64x2_t *v2;
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  float64x2_t v7;
  float64x2_t v8;
  float64x2_t v9;
  float64x2_t v10;
  float64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  int64x2_t v20;
  float64x2_t v21;
  int64x2_t v23;
  int64x2_t v24;
  float64x2_t v25;
  float64x2_t v26;
  int64x2_t v27;
  int64x2_t v28;
  int64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  float64x2_t v33;
  int64x2_t v34;
  int64x2_t v35;
  int64x2_t v36;
  float64x2_t v37;
  float64x2_t v38;
  int64x2_t v39;
  float64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  _QWORD *v43;
  char v44;
  uint64_t *v45;
  float64x2_t v46;
  float64x2_t v47;
  float64x2_t *v48;
  uint64_t v49;
  float64x2_t *v50;
  double v52;
  float64x2_t v55;
  int v57;
  double *v58;
  double v59;
  float64x2_t v62;
  double v63;
  double v64;
  float64x2_t v67;
  __int128 v68;
  float64x2_t v69;
  float64x2_t v70;
  double v71;
  double v72;
  double *v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  char *v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  unint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double *v97;
  double v98;
  double v99;
  uint64_t v100;
  int v101;
  _BOOL4 v102;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  float64x2_t v107;
  float64x2_t v108;
  float64x2_t v109;
  float64x2_t v110;
  float64x2_t v111;
  char *__p;
  char *v113;
  _OWORD v114[12];
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;

  v1 = a1;
  v2 = (float64x2_t *)(a1 + 536);
  if (!sub_2394AEBA4((float64x2_t *)(a1 + 536), 0.0001))
    return 0;
  v115 = 0;
  v116 = 0;
  v117 = 0;
  sub_2394B5624(v1, (uint64_t)&v115, 1);
  v4 = *v2;
  v3 = v2[1];
  v6 = v2[2];
  v5 = v2[3];
  v8 = v2[4];
  v7 = v2[5];
  v10 = v2[6];
  v9 = v2[7];
  __asm { FMOV            V5.2D, #-0.5 }
  v16 = vmulq_f64(*v2, _Q5);
  v17 = vmlaq_f64(v16, _Q5, v6);
  v18 = vmulq_f64(v3, _Q5);
  v19 = vmlaq_f64(v18, _Q5, v5);
  v20 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v19, _Q5, v7));
  v21 = vdivq_f64(vaddq_f64(v10, vmlaq_f64(v17, _Q5, v8)), (float64x2_t)vdupq_laneq_s64(v20, 1));
  __asm { FMOV            V7.2D, #0.5 }
  v23 = (int64x2_t)vaddq_f64(v10, vmlaq_f64(v17, _Q7, v8));
  v24 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v19, _Q7, v7));
  v114[0] = v21;
  v114[1] = vdivq_f64((float64x2_t)vzip1q_s64(v20, v23), (float64x2_t)vzip2q_s64(v20, v24));
  v25 = vmlaq_f64(v16, _Q7, v6);
  v26 = vmlaq_f64(v18, _Q7, v5);
  v27 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v26, _Q5, v7));
  v114[2] = vdivq_f64((float64x2_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 8uLL), (float64x2_t)vdupq_laneq_s64(v24, 1));
  v114[3] = vdivq_f64(vaddq_f64(v10, vmlaq_f64(v25, _Q5, v8)), (float64x2_t)vdupq_laneq_s64(v27, 1));
  v28 = (int64x2_t)vaddq_f64(v10, vmlaq_f64(v25, _Q7, v8));
  v29 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v26, _Q7, v7));
  v114[4] = vdivq_f64((float64x2_t)vzip1q_s64(v27, v28), (float64x2_t)vzip2q_s64(v27, v29));
  v114[5] = vdivq_f64((float64x2_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 8uLL), (float64x2_t)vdupq_laneq_s64(v29, 1));
  v30 = vmulq_f64(v4, _Q7);
  v31 = vmlaq_f64(v30, _Q5, v6);
  v32 = vmulq_f64(v3, _Q7);
  v33 = vmlaq_f64(v32, _Q5, v5);
  v34 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v33, _Q5, v7));
  v114[6] = vdivq_f64(vaddq_f64(v10, vmlaq_f64(v31, _Q5, v8)), (float64x2_t)vdupq_laneq_s64(v34, 1));
  v35 = (int64x2_t)vaddq_f64(v10, vmlaq_f64(v31, _Q7, v8));
  v36 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v33, _Q7, v7));
  v114[7] = vdivq_f64((float64x2_t)vzip1q_s64(v34, v35), (float64x2_t)vzip2q_s64(v34, v36));
  v114[8] = vdivq_f64((float64x2_t)vextq_s8((int8x16_t)v35, (int8x16_t)v36, 8uLL), (float64x2_t)vdupq_laneq_s64(v36, 1));
  v37 = vmlaq_f64(v30, _Q7, v6);
  v38 = vmlaq_f64(v32, _Q7, v5);
  v39 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v38, _Q5, v7));
  v40 = vdivq_f64(vaddq_f64(v10, vmlaq_f64(v37, _Q5, v8)), (float64x2_t)vdupq_laneq_s64(v39, 1));
  v41 = (int64x2_t)vaddq_f64(v10, vmlaq_f64(v37, _Q7, v8));
  v42 = (int64x2_t)vaddq_f64(v9, vmlaq_f64(v38, _Q7, v7));
  v114[9] = v40;
  v114[10] = vdivq_f64((float64x2_t)vzip1q_s64(v39, v41), (float64x2_t)vzip2q_s64(v39, v42));
  v114[11] = vdivq_f64((float64x2_t)vextq_s8((int8x16_t)v41, (int8x16_t)v42, 8uLL), (float64x2_t)vdupq_laneq_s64(v42, 1));
  v43 = v115;
  v105 = v116;
  if (v115 == v116)
  {
    v100 = 0;
    if (v115)
      goto LABEL_90;
    return v100;
  }
  v104 = v1;
  while (2)
  {
    v106 = v43;
    v45 = sub_239470FCC(v1, *v43);
    v48 = 0;
    v49 = 0;
    __p = 0;
    v113 = 0;
    do
    {
      v50 = (float64x2_t *)((char *)v114 + 24 * v49);
      _D2 = v45[14];
      v52 = v50[1].f64[0];
      _Q7 = *v50;
      __asm { FMLA            D0, D2, V7.D[1] }
      v46.f64[0] = _D0 + *((double *)v45 + 18) * v52;
      *(_QWORD *)&v47.f64[0] = v45[22];
      v55 = vaddq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(*((float64x2_t *)v45 + 4), v50->f64[0]), *((float64x2_t *)v45 + 6), *v50, 1), *((float64x2_t *)v45 + 8), v52), *((float64x2_t *)v45 + 10));
      _Q20 = vdivq_f64(v55, (float64x2_t)vdupq_lane_s64(*(_OWORD *)&vaddq_f64(v46, v47), 0));
      v57 = *((unsigned __int8 *)v45 + 32);
      if (v57 == 2)
      {
        v71 = vmlad_n_f64(COERCE_DOUBLE(*(_QWORD *)&vmulq_f64(_Q20, _Q20).f64[1]), _Q20.f64[0], _Q20.f64[0]);
        v72 = 1.0;
        if (v71 >= 0.0000000149011612)
        {
          v73 = (double *)v45[5];
          v74 = *v73;
          v75 = v73[1];
          v76 = v73[2];
          v77 = v73[3];
          v78 = sqrt(v71);
          v108 = v47;
          v109 = v46;
          v107 = _Q20;
          v79 = atan2(v78, 1.0);
          _Q20 = v107;
          v47 = v108;
          v46 = v109;
          if (v79 > 1.57079633)
            goto LABEL_21;
          v72 = (v79
               + v74 * (v79 * (v79 * v79))
               + v75 * (v79 * v79 * (v79 * (v79 * v79)))
               + v76 * (v79 * v79 * (v79 * v79 * (v79 * (v79 * v79))))
               + v77 * (v79 * v79 * (v79 * v79 * (v79 * v79 * (v79 * (v79 * v79))))))
              / v78;
        }
        _Q20 = vmulq_n_f64(_Q20, v72);
LABEL_21:
        *(double *)&v68 = v46.f64[0] + v47.f64[0];
        v69 = *(float64x2_t *)v45;
        v70 = vmlaq_f64(*((float64x2_t *)v45 + 1), *(float64x2_t *)v45, _Q20);
        if (v46.f64[0] + v47.f64[0] <= 0.0)
          goto LABEL_40;
        goto LABEL_22;
      }
      if (v57 != 1)
        goto LABEL_21;
      v58 = (double *)v45[5];
      v55.f64[0] = v58[3];
      v59 = v58[4];
      _D3 = _Q20.f64[1];
      __asm { FMLA            D2, D3, V20.D[1] }
      v62 = vmulq_n_f64(_Q20, *v58 * _D2 + 1.0 + v58[1] * (_D2 * _D2) + v58[2] * (_D2 * (_D2 * _D2)));
      if (sqrt(vmulq_f64(v55, v55).f64[0] + v59 * v59) <= 2.22507386e-308)
      {
        *(double *)&v68 = v46.f64[0] + v47.f64[0];
        v69 = *(float64x2_t *)v45;
        v70 = vmlaq_f64(*((float64x2_t *)v45 + 1), *(float64x2_t *)v45, v62);
        if (v46.f64[0] + v47.f64[0] <= 0.0)
        {
LABEL_40:
          if (v48 < (float64x2_t *)v113)
          {
            *v48 = v70;
            LOBYTE(v48[1].f64[0]) = 0;
LABEL_10:
            v48 = (float64x2_t *)((char *)v48 + 24);
            goto LABEL_11;
          }
          v80 = __p;
          v88 = 0xAAAAAAAAAAAAAAABLL * (((char *)v48 - __p) >> 3) + 1;
          if (v88 > 0xAAAAAAAAAAAAAAALL)
            sub_2394189F8();
          v111 = v70;
          if (0x5555555555555556 * ((v113 - __p) >> 3) > v88)
            v88 = 0x5555555555555556 * ((v113 - __p) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * ((v113 - __p) >> 3) >= 0x555555555555555)
            v83 = 0xAAAAAAAAAAAAAAALL;
          else
            v83 = v88;
          if (v83 > 0xAAAAAAAAAAAAAAALL)
            sub_239418A80();
          v84 = (char *)operator new(24 * v83);
          v85 = &v84[8 * (((char *)v48 - __p) >> 3)];
          DWORD1(v68) = HIDWORD(v111.f64[0]);
          *(float64x2_t *)v85 = v111;
          v85[16] = 0;
          if (v48 == (float64x2_t *)__p)
          {
            v87 = &v84[8 * (((char *)v48 - __p) >> 3)];
          }
          else
          {
            v89 = &v84[8 * (((char *)v48 - __p) >> 3)];
            do
            {
              v87 = v89 - 24;
              v68 = *(__int128 *)((char *)&v48[-2] + 8);
              *(_OWORD *)(v89 - 24) = v68;
              *(v89 - 8) = LOBYTE(v48[-1].f64[1]);
              v48 = (float64x2_t *)((char *)v48 - 24);
              v89 -= 24;
            }
            while (v48 != (float64x2_t *)__p);
          }
LABEL_53:
          v48 = (float64x2_t *)(v85 + 24);
          __p = v87;
          v113 = &v84[24 * v83];
          if (!v80)
            goto LABEL_11;
LABEL_54:
          operator delete(v80);
          goto LABEL_11;
        }
      }
      else
      {
        v63 = vmuld_lane_f64(_Q20.f64[0], _Q20, 1);
        v64 = vmlad_n_f64(_D2, _Q20.f64[0] + _Q20.f64[0], _Q20.f64[0]) * v59 + (v55.f64[0] + v55.f64[0]) * v63;
        _D3 = _Q20.f64[1] + _Q20.f64[1];
        __asm { FMLA            D2, D3, V20.D[1] }
        v67.f64[0] = v62.f64[0] + v64;
        v67.f64[1] = v62.f64[1] + v63 * (v59 + v59) + v55.f64[0] * _D2;
        *(double *)&v68 = v46.f64[0] + v47.f64[0];
        v69 = *(float64x2_t *)v45;
        v70 = vmlaq_f64(*((float64x2_t *)v45 + 1), *(float64x2_t *)v45, v67);
        if (v46.f64[0] + v47.f64[0] <= 0.0)
          goto LABEL_40;
      }
LABEL_22:
      if (v70.f64[0] >= 0.0)
      {
        LODWORD(v68) = *((_DWORD *)v45 + 50);
        *(double *)&v68 = (double)(unint64_t)v68;
        if (v70.f64[0] < *(double *)&v68)
        {
          DWORD1(v68) = HIDWORD(v70.f64[1]);
          if (v70.f64[1] >= 0.0)
          {
            LODWORD(v69.f64[0]) = *((_DWORD *)v45 + 51);
            if (v70.f64[1] < (double)*(unint64_t *)&v69.f64[0])
            {
              v101 = 0;
              v100 = 1;
              v90 = __p;
              goto LABEL_79;
            }
          }
        }
      }
      if (v48 < (float64x2_t *)v113)
      {
        *v48 = v70;
        LOBYTE(v48[1].f64[0]) = 1;
        goto LABEL_10;
      }
      v80 = __p;
      v81 = 0xAAAAAAAAAAAAAAABLL * (((char *)v48 - __p) >> 3);
      v82 = v81 + 1;
      if (v81 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_2394189F8();
      v110 = v70;
      if (0x5555555555555556 * ((v113 - __p) >> 3) > v82)
        v82 = 0x5555555555555556 * ((v113 - __p) >> 3);
      if (0xAAAAAAAAAAAAAAABLL * ((v113 - __p) >> 3) >= 0x555555555555555)
        v83 = 0xAAAAAAAAAAAAAAALL;
      else
        v83 = v82;
      if (v83 > 0xAAAAAAAAAAAAAAALL)
        sub_239418A80();
      v84 = (char *)operator new(24 * v83);
      v85 = &v84[8 * (((char *)v48 - __p) >> 3)];
      DWORD1(v68) = HIDWORD(v110.f64[0]);
      *(float64x2_t *)v85 = v110;
      v85[16] = 1;
      if (v48 != (float64x2_t *)__p)
      {
        v86 = &v84[8 * (((char *)v48 - __p) >> 3)];
        do
        {
          v87 = v86 - 24;
          v68 = *(__int128 *)((char *)&v48[-2] + 8);
          *(_OWORD *)(v86 - 24) = v68;
          *(v86 - 8) = LOBYTE(v48[-1].f64[1]);
          v48 = (float64x2_t *)((char *)v48 - 24);
          v86 -= 24;
        }
        while (v48 != (float64x2_t *)__p);
        goto LABEL_53;
      }
      v48 = (float64x2_t *)(v85 + 24);
      __p = &v84[24 * v81];
      v113 = &v84[24 * v83];
      if (v80)
        goto LABEL_54;
LABEL_11:
      ++v49;
    }
    while (v49 != 8);
    v90 = __p;
    if (__p == (char *)v48)
    {
      v100 = 0;
      v101 = 3;
LABEL_79:
      v1 = v104;
      goto LABEL_80;
    }
    v91 = 0;
    LODWORD(v68) = *((_DWORD *)v45 + 50);
    LODWORD(v70.f64[0]) = *((_DWORD *)v45 + 51);
    v92 = (double)(unint64_t)v68;
    v93 = (double)*(unint64_t *)&v70.f64[0];
    v94 = 0.0;
    v70.f64[0] = (double)*(unint64_t *)&v70.f64[0];
    v95 = v92;
    v96 = 0.0;
    v97 = (double *)__p;
    do
    {
      v91 += *((unsigned __int8 *)v97 + 16);
      v98 = *v97;
      v99 = v97[1];
      v97 += 3;
      if (v98 > v96)
        v96 = v98;
      if (v98 < v95)
        v95 = v98;
      if (v99 > v94)
        v94 = v99;
      if (v99 < v70.f64[0])
        v70.f64[0] = v99;
    }
    while (v97 != (double *)v48);
    v100 = 0;
    v101 = 3;
    v1 = v104;
    if (v91 && v96 >= 0.0)
    {
      v102 = v95 > v92;
      if (v94 < 0.0)
        v102 = 1;
      if (v70.f64[0] > v93)
        v102 = 1;
      v100 = !v102;
      if (v102)
        v101 = 3;
      else
        v101 = 2;
    }
LABEL_80:
    if (v90)
      operator delete(v90);
    if (v101 == 3 || !v101)
    {
      v43 = v106 + 1;
      if (v106 + 1 == v105)
        v44 = 1;
      else
        v44 = v100;
      if ((v44 & 1) != 0)
      {
        if (v106 + 1 == v105)
          v100 = v100;
        else
          v100 = 1;
        break;
      }
      continue;
    }
    break;
  }
  v43 = v115;
  if (v115)
  {
LABEL_90:
    v116 = v43;
    operator delete(v43);
  }
  return v100;
}

void sub_2396F72B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  uint64_t v21;
  void *v23;

  v23 = *(void **)(v21 - 168);
  if (!v23)
    _Unwind_Resume(exception_object);
  *(_QWORD *)(v21 - 160) = v23;
  operator delete(v23);
  _Unwind_Resume(exception_object);
}

void sub_2396F730C(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t **v4;
  double v7;
  uint64_t v8;
  float64x2_t v10;
  int8x16_t v17;
  int8x16_t v18;
  float64x2_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _OWORD *v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  float64x2_t v39;
  double v40;
  float64x2_t v41;
  double v42;
  float64x2_t v43;
  double v44;

  v4 = *(uint64_t ***)(a2 + 16);
  if (v4)
  {
    v7 = a4;
    while (1)
    {
      sub_239A22B38((uint64_t)&v39);
      _Q3 = vmlaq_f64(vmlaq_f64(v41, v39, (float64x2_t)0), (float64x2_t)0, v43);
      v10.f64[0] = v42 + v40 * 0.0 + v44 * 0.0;
      _Q1 = vmulq_f64(_Q3, _Q3);
      _D2 = _Q3.f64[1];
      __asm { FMLA            D1, D2, V3.D[1] }
      _Q1.f64[0] = 1.0 / sqrt(_Q1.f64[0] + v10.f64[0] * v10.f64[0]);
      v17 = (int8x16_t)vmulq_f64(v10, _Q1);
      v18 = (int8x16_t)vmulq_n_f64(_Q3, _Q1.f64[0]);
      v19 = vmulq_f64(*(float64x2_t *)(a1 + 8), (float64x2_t)vextq_s8(v18, v17, 8uLL));
      if (acos(v19.f64[1] + *(double *)a1 * *(double *)v18.i64 + v19.f64[0]) * 180.0 / 3.14159265 >= v7)
        goto LABEL_5;
      v21 = *(char **)(a3 + 8);
      v20 = *(_QWORD *)(a3 + 16);
      if ((unint64_t)v21 >= v20)
        break;
      *(_QWORD *)v21 = *((unsigned int *)v4 + 4);
      v8 = (uint64_t)(v21 + 8);
LABEL_4:
      *(_QWORD *)(a3 + 8) = v8;
LABEL_5:
      v4 = (uint64_t **)*v4;
      if (!v4)
        return;
    }
    v22 = *(char **)a3;
    v23 = (uint64_t)&v21[-*(_QWORD *)a3];
    v24 = v23 >> 3;
    v25 = (v23 >> 3) + 1;
    if (v25 >> 61)
      sub_2394189F8();
    v26 = v20 - (_QWORD)v22;
    if (v26 >> 2 > v25)
      v25 = v26 >> 2;
    if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFF8)
      v27 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v27 = v25;
    if (v27)
    {
      if (v27 >> 61)
        sub_239418A80();
      v28 = operator new(8 * v27);
      v29 = &v28[8 * v24];
      *v29 = *((unsigned int *)v4 + 4);
      v8 = (uint64_t)(v29 + 1);
      if (v21 == v22)
        goto LABEL_25;
    }
    else
    {
      v28 = 0;
      v29 = (_QWORD *)(8 * v24);
      *(_QWORD *)(8 * v24) = *((unsigned int *)v4 + 4);
      v8 = 8 * v24 + 8;
      if (v21 == v22)
      {
LABEL_25:
        *(_QWORD *)a3 = v29;
        *(_QWORD *)(a3 + 8) = v8;
        *(_QWORD *)(a3 + 16) = &v28[8 * v27];
        if (v22)
          operator delete(v22);
        goto LABEL_4;
      }
    }
    v30 = v21 - 8 - v22;
    if (v30 < 0x58)
      goto LABEL_32;
    if ((unint64_t)(v21 - &v28[v23]) < 0x20)
      goto LABEL_32;
    v31 = (v30 >> 3) + 1;
    v32 = 8 * (v31 & 0x3FFFFFFFFFFFFFFCLL);
    v33 = &v21[-v32];
    v29 = (_QWORD *)((char *)v29 - v32);
    v34 = &v28[8 * v24 - 16];
    v35 = v21 - 16;
    v36 = v31 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v37 = *(_OWORD *)v35;
      *(v34 - 1) = *((_OWORD *)v35 - 1);
      *v34 = v37;
      v34 -= 2;
      v35 -= 32;
      v36 -= 4;
    }
    while (v36);
    v21 = v33;
    if (v31 != (v31 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_32:
      do
      {
        v38 = *((_QWORD *)v21 - 1);
        v21 -= 8;
        *--v29 = v38;
      }
      while (v21 != v22);
    }
    goto LABEL_25;
  }
}

uint64_t sub_2396F759C(uint64_t a1, float64x2_t a2, double a3, double a4, double a5, double a6, double a7, float64x2_t a8)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t *v12;
  double v13;
  double v20;
  double v22;
  unint64_t v24;
  int8x16_t v25;
  float64x2_t v26;
  float64x2_t v27;
  double v28;
  float64x2_t v29;
  double v30;
  float64x2_t v31;
  float64x2_t v32;

  v8 = *(uint64_t **)(a1 + 16);
  if (!v8)
    return 0;
  v9 = 0;
  v10 = *(uint64_t **)(a1 + 16);
  do
  {
    *(_QWORD *)&a2.f64[0] = v10[5];
    v32 = a2;
    v30 = *((double *)v10 + 9);
    v31 = *(float64x2_t *)(v10 + 3);
    v28 = *((double *)v10 + 13);
    v29 = *(float64x2_t *)(v10 + 7);
    *(_QWORD *)&a2.f64[0] = v10[17];
    v26 = a2;
    v27 = *(float64x2_t *)(v10 + 11);
    v25 = *(int8x16_t *)(v10 + 15);
    a2 = (float64x2_t)vextq_s8(v25, v25, 8uLL);
    v24 = *(_QWORD *)&a2.f64[0];
    v11 = *((_DWORD *)v10 + 4);
    v12 = v8;
    while (*((_DWORD *)v12 + 4) != v11)
    {
      *(_QWORD *)&a2.f64[0] = v12[5];
      *(_QWORD *)&a8.f64[0] = v12[17];
      *(_QWORD *)&v13 = *(_OWORD *)&vsubq_f64(v26, a8);
      *(_QWORD *)&_Q16.f64[0] = v25.i64[0];
      *(_QWORD *)&_Q16.f64[1] = v24;
      _D17 = vsubq_f64(_Q16, *(float64x2_t *)(v12 + 120)).f64[1];
      __asm { FMLA            D16, D17, V7.D[1] }
      v20 = sqrt(vmlad_n_f64(_Q16.f64[0], v13, v13));
      a2.f64[0] = (vmulq_f64(v32, a2).f64[0]
                 + v30 * *((double *)v12 + 9)
                 + v28 * *((double *)v12 + 13)
                 + vaddq_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v31, *((double *)v12 + 3)), v29, *((double *)v12 + 7)), v27, *((double *)v12 + 11)), (float64x2_t)vdupq_laneq_s64((int64x2_t)vmlaq_laneq_f64(vmlaq_laneq_f64(vmulq_laneq_f64(v31, *(float64x2_t *)(v12 + 3), 1), v29, *(float64x2_t *)(v12 + 7), 1), v27, *(float64x2_t *)(v12 + 11), 1), 1)).f64[0]+ -1.0)* 0.5;
      if (a2.f64[0] > 1.0)
        a2.f64[0] = 1.0;
      if (a2.f64[0] < -1.0)
        a2.f64[0] = -1.0;
      if (acos(a2.f64[0]) <= 2.0 && v20 <= 0.0199999996)
        v22 = 1.0;
      else
        v22 = 0.0;
      if (v22 == 0.0)
      {
        v12 = (uint64_t *)*v12;
        if (v12)
          continue;
      }
      goto LABEL_4;
    }
    v9 = (v9 + 1);
LABEL_4:
    v10 = (uint64_t *)*v10;
  }
  while (v10);
  return v9;
}

double sub_2396F774C(uint64_t a1, uint64_t a2, int64x2_t a3)
{
  double v5;
  unint64_t v7;
  double v8;
  float64x2_t v9;
  double v10;
  double v11;
  double v13;
  float64x2_t v14;
  float64x2_t v15;
  float64x2_t v17;
  float64x2_t v24;
  float64x2_t v27;
  float64x2_t v29;
  float64x2_t v30;
  int64x2_t v31;
  double v33;
  double v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v40;
  float64x2_t v41;
  float64x2_t v42;
  float64x2_t v43;
  float64x2_t v44;
  double v48;
  double v49;
  int64x2_t v50;
  double v51;
  float64x2_t v52;
  int64x2_t v53;
  float64x2_t v54;
  double v55;
  double v56;
  uint64_t v58;
  float64x2_t v60;
  double v61;
  float64x2_t v62;
  float64x2_t v63;
  float64x2_t v65;
  float64x2_t v66;
  double result;
  float64x2_t v68;
  float64x2_t v69;
  int64x2_t v70;
  uint64_t v71;
  int64x2_t v72;
  float64_t v73;
  int64x2_t v74;
  double v75;
  float64x2_t v76;
  double v77;
  float64x2_t v78;
  double v79;
  float64x2_t v80;
  double v81;
  float64x2_t v82;
  uint64_t v83;
  float64x2_t v84;
  uint64_t v85;
  float64x2_t v86;
  double v87;

  v5 = *(double *)(a1 + 80);
  _Q1 = *(float64x2_t *)(a1 + 64);
  v7 = vextq_s8((int8x16_t)_Q1, (int8x16_t)_Q1, 8uLL).u64[0];
  v8 = *(double *)(a1 + 112);
  v9 = *(float64x2_t *)(a1 + 96);
  *(_QWORD *)&v10 = vextq_s8((int8x16_t)v9, (int8x16_t)v9, 8uLL).u64[0];
  v11 = *(double *)(a1 + 144);
  _Q5 = *(float64x2_t *)(a1 + 128);
  *(_QWORD *)&v13 = vextq_s8((int8x16_t)_Q5, (int8x16_t)_Q5, 8uLL).u64[0];
  v77 = v5;
  v76 = _Q1;
  v79 = v8;
  v78 = v9;
  v81 = v11;
  v80 = _Q5;
  v14 = (float64x2_t)vzip1q_s64((int64x2_t)_Q1, (int64x2_t)v9);
  v15 = (float64x2_t)vzip2q_s64((int64x2_t)_Q1, (int64x2_t)v9);
  _Q20.f64[0] = v5;
  _Q20.f64[1] = v8;
  v17 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v14, _Q1.f64[0]), v15, _Q1, 1), _Q20, v5);
  _Q21 = (int64x2_t)vmulq_f64(_Q5, _Q1);
  _D22 = _Q1.f64[1];
  __asm { FMLA            D21, D22, V5.D[1] }
  *(double *)_Q21.i64 = *(double *)_Q21.i64 + v11 * v5;
  v24 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v14, v9.f64[0]), v15, v9, 1), _Q20, v8);
  _Q23 = (int8x16_t)vmulq_f64(_Q5, v9);
  _D24 = v9.f64[1];
  __asm { FMLA            D23, D24, V5.D[1] }
  *(double *)_Q23.i64 = *(double *)_Q23.i64 + v11 * v8;
  v27 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v14, _Q5.f64[0]), v15, _Q5, 1), _Q20, v11);
  _Q19 = vmulq_f64(_Q5, _Q5);
  _Q20.f64[0] = _Q5.f64[1];
  __asm { FMLA            D19, D20, V5.D[1] }
  _Q19.f64[0] = _Q19.f64[0] + v11 * v11;
  v29 = (float64x2_t)xmmword_239EC6820;
  v30 = (float64x2_t)xmmword_239EC6830;
  v31 = (int64x2_t)vaddq_f64(v24, (float64x2_t)xmmword_239EC6830);
  __asm { FMOV            V26.2D, #-1.0 }
  *(_QWORD *)&_Q19.f64[0] = *(_OWORD *)&vabsq_f64(vaddq_f64(_Q19, _Q26));
  _Q19.f64[1] = NAN;
  v33 = vmaxnmvq_f64(vmaxnmq_f64(vmaxnmq_f64(vmaxnmq_f64(vabsq_f64(vaddq_f64(v17, (float64x2_t)xmmword_239EC6820)), _Q19), vabsq_f64((float64x2_t)vextq_s8((int8x16_t)v31, _Q23, 8uLL))), vmaxnmq_f64(vabsq_f64((float64x2_t)vzip1q_s64(_Q21, v31)), vabsq_f64(v27))));
  v34 = -v8;
  if (v33 > 0.0001)
    goto LABEL_3;
  v35.f64[0] = _Q1.f64[0];
  *(_QWORD *)&v35.f64[1] = v7;
  v36.f64[0] = v13;
  v36.f64[1] = _Q5.f64[0];
  v37.f64[0] = v10;
  v37.f64[1] = v9.f64[0];
  v38 = vmulq_f64(v35, vmlaq_n_f64(vmulq_n_f64(v36, v34), v37, v11));
  _Q20 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v38, 1);
  if (fabs(v5 * (v13 * v9.f64[0] - v10 * _Q5.f64[0]) + vsubq_f64(v38, _Q20).f64[0] + -1.0) > 0.0001)
  {
LABEL_3:
    v69 = _Q26;
    if (v33 > 0.1
      || (*(_QWORD *)&_Q1.f64[1] = v7,
          v40.f64[0] = v13,
          v40.f64[1] = _Q5.f64[0],
          v41 = vmulq_n_f64(v40, v34),
          v42.f64[0] = v10,
          v42.f64[1] = v9.f64[0],
          v43 = vmulq_f64(_Q1, vmlaq_n_f64(v41, v42, v11)),
          fabs(v5 * (v13 * v9.f64[0] - v10 * _Q5.f64[0])+ vsubq_f64(v43, (float64x2_t)vdupq_laneq_s64((int64x2_t)v43, 1)).f64[0]+ -1.0) > 0.1))
    {
      sub_239EC1C1C(a1, a2);
    }
    sub_239516070(&v76);
    v30 = (float64x2_t)xmmword_239EC6830;
    v29 = (float64x2_t)xmmword_239EC6820;
    _Q26 = v69;
  }
  a3.i64[0] = *(_QWORD *)(a2 + 24);
  v44 = *(float64x2_t *)(a2 + 8);
  _Q1.f64[0] = *(float64_t *)(a2 + 48);
  _Q4 = *(float64x2_t *)(a2 + 32);
  _D5 = *(double *)(a2 + 72);
  _Q2 = *(float64x2_t *)(a2 + 56);
  v48 = *(double *)(a2 + 16);
  v49 = *(double *)(a2 + 40);
  v50 = vzip2q_s64((int64x2_t)v44, (int64x2_t)_Q4);
  v51 = *(double *)(a2 + 64);
  v71 = *(_QWORD *)(a2 + 56);
  v73 = _Q2.f64[1];
  v70 = vzip1q_s64((int64x2_t)v44, (int64x2_t)_Q4);
  v72 = v50;
  v75 = _D5;
  v74 = vzip1q_s64(a3, (int64x2_t)_Q1);
  *(double *)v50.i64 = vmlad_n_f64(vmlad_n_f64(*(double *)a3.i64 * v44.f64[0], _Q1.f64[0], _Q4.f64[0]), _D5, _Q2.f64[0]);
  __asm
  {
    FMLA            D20, D1, V4.D[1]
    FMLA            D20, D5, V2.D[1]
  }
  v52 = vmulq_f64((float64x2_t)a3, (float64x2_t)a3);
  v52.f64[0] = v52.f64[0] + _Q1.f64[0] * _Q1.f64[0] + _D5 * _D5;
  v53 = (int64x2_t)vaddq_f64(vmlaq_laneq_f64(vmlaq_laneq_f64(vmulq_laneq_f64(v44, v44, 1), _Q4, _Q4, 1), _Q2, _Q2, 1), v30);
  *(_QWORD *)&v54.f64[0] = *(_OWORD *)&vabsq_f64(vaddq_f64(v52, _Q26));
  v54.f64[1] = NAN;
  v55 = vmaxnmvq_f64(vmaxnmq_f64(vmaxnmq_f64(vmaxnmq_f64(vabsq_f64(vaddq_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v44, v44.f64[0]), _Q4, _Q4.f64[0]), _Q2, _Q2.f64[0]), v29)), v54), vabsq_f64((float64x2_t)vextq_s8((int8x16_t)v53, (int8x16_t)_Q20, 8uLL))), vmaxnmq_f64(vabsq_f64((float64x2_t)vzip1q_s64(v50, v53)), vabsq_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v44, *(double *)a3.i64), _Q4, _Q1.f64[0]), _Q2, _D5)))));
  if (v55 > 0.0001
    || fabs(_Q2.f64[0] * (_Q1.f64[0] * v48 - v49 * *(double *)a3.i64)+ v44.f64[0] * (_D5 * v49 - v51 * _Q1.f64[0])- _Q4.f64[0] * (_D5 * v48 - v51 * *(double *)a3.i64)+ -1.0) > 0.0001)
  {
    if (v55 > 0.1
      || fabs(_Q2.f64[0] * (_Q1.f64[0] * v48 - v49 * *(double *)a3.i64)+ v44.f64[0] * (_D5 * v49 - v51 * _Q1.f64[0])- _Q4.f64[0] * (_D5 * v48 - v51 * *(double *)a3.i64)+ -1.0) > 0.1)
    {
      sub_239EC1C48(a1, a2);
    }
    sub_239516070((float64x2_t *)&v70);
  }
  sub_2396F7B74((uint64_t)&v76, (uint64_t)&v70, (uint64_t)&v82);
  v56 = *(double *)(a2 + 96);
  _Q1 = *(float64x2_t *)(a2 + 80);
  v58 = v83;
  _D4 = v85;
  v60 = v84;
  v61 = v87;
  v62 = v86;
  v63 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v82, _Q1.f64[0]), v84, _Q1, 1), v86, v56);
  __asm { FMLA            D17, D4, V1.D[1] }
  v65.f64[0] = _D17 + v87 * v56;
  _Q1.f64[0] = *(float64_t *)a2;
  v66.f64[0] = *(float64_t *)(a1 + 176);
  *(_QWORD *)&result = *(_OWORD *)&vsubq_f64(vmulq_f64(v66, _Q1), v65);
  v68 = vsubq_f64(vmulq_n_f64(*(float64x2_t *)(a1 + 160), *(double *)a2), v63);
  *(float64x2_t *)(a1 + 64) = v82;
  *(_QWORD *)(a1 + 80) = v58;
  *(_QWORD *)(a1 + 88) = 0;
  *(float64x2_t *)(a1 + 96) = v60;
  *(_QWORD *)(a1 + 112) = _D4;
  *(_QWORD *)(a1 + 120) = 0;
  *(float64x2_t *)(a1 + 128) = v62;
  *(double *)(a1 + 144) = v61;
  *(_QWORD *)(a1 + 152) = 0;
  *(float64x2_t *)(a1 + 160) = v68;
  *(double *)(a1 + 176) = result;
  *(_QWORD *)(a1 + 184) = 0x3FF0000000000000;
  return result;
}

void sub_2396F7B74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  float64x2_t v6;
  double v7;
  float64x2_t v8;
  double v9;
  double v11;
  float64x2_t v14;
  double v20;
  double v23;
  double v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  float64x2_t v31;
  float64x2_t v34;
  float64x2_t v36;
  float64x2_t v37;
  int64x2_t v38;
  float64x2_t v40;
  __int128 v42;
  float64x2_t v43;
  double v44;
  float64x2_t v45;
  unint64_t v46;
  double v47;
  float64x2_t v48;
  double v49;
  double v50;
  double v52;
  float64x2_t v53;
  float64x2_t v54;
  float64x2_t v56;
  float64x2_t v59;
  float64x2_t v62;
  int64x2_t v64;
  double v65;
  double v66;
  float64x2_t v67;
  float64x2_t v68;
  float64x2_t v69;
  float64x2_t v70;
  float64x2_t v71;
  float64x2_t v72;
  float64x2_t v73;
  float64x2_t v74;
  float64x2_t v75;
  float64x2_t v76;
  _BYTE v77[32];
  float64x2_t v78;
  double v79;

  _D6 = *(_QWORD *)(a1 + 40);
  v6 = *(float64x2_t *)(a1 + 24);
  v7 = *(double *)(a1 + 64);
  v8 = *(float64x2_t *)(a1 + 48);
  v9 = *(double *)(a2 + 16);
  _Q1 = *(_OWORD *)a2;
  v11 = *(double *)(a2 + 40);
  _Q18 = *(float64x2_t *)(a2 + 24);
  _Q19.i64[0] = *(_QWORD *)(a2 + 64);
  _Q20 = *(float64x2_t *)(a2 + 48);
  v14 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(*(float64x2_t *)a1, *(double *)a2), v6, *(float64x2_t *)a2, 1), v8, v9);
  __asm { FMLA            D21, D6, V1.D[1] }
  v20 = _D21 + v7 * v9;
  _Q1 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(*(float64x2_t *)a1, _Q18.f64[0]), v6, _Q18, 1), v8, v11);
  __asm { FMLA            D21, D6, V18.D[1] }
  v23 = _D21 + v7 * v11;
  _Q3 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(*(float64x2_t *)a1, _Q20.f64[0]), v6, _Q20, 1), v8, *(double *)_Q19.i64);
  __asm { FMLA            D5, D6, V20.D[1] }
  v26 = _D5 + v7 * *(double *)_Q19.i64;
  v76 = v14;
  *(double *)v77 = v20;
  *(float64x2_t *)&v77[8] = _Q1;
  *(double *)&v77[24] = v23;
  v78 = _Q3;
  v79 = v26;
  v27 = (float64x2_t)vzip1q_s64((int64x2_t)v14, (int64x2_t)_Q1);
  v28 = (float64x2_t)vzip2q_s64((int64x2_t)v14, (int64x2_t)_Q1);
  _Q18.f64[0] = v20;
  _Q18.f64[1] = v23;
  v29 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v27, v14.f64[0]), v28, v14, 1), _Q18, v20);
  _Q19.i64[0] = *(_QWORD *)&v14.f64[1];
  __asm { FMLA            D6, D19, V3.D[1] }
  *(double *)_Q19.i64 = _D6 + v26 * v20;
  v31 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v27, _Q1.f64[0]), v28, _Q1, 1), _Q18, v23);
  _Q21 = (int8x16_t)vmulq_f64(_Q3, _Q1);
  _D6 = _Q1.f64[1];
  __asm { FMLA            D21, D6, V3.D[1] }
  *(double *)_Q21.i64 = *(double *)_Q21.i64 + v26 * v23;
  v34 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v27, _Q3.f64[0]), v28, _Q3, 1), _Q18, v26);
  _Q17 = vmulq_f64(_Q3, _Q3);
  _Q18.f64[0] = _Q3.f64[1];
  __asm { FMLA            D17, D18, V3.D[1] }
  _Q17.f64[0] = _Q17.f64[0] + v26 * v26;
  v36 = (float64x2_t)xmmword_239EC6820;
  v37 = (float64x2_t)xmmword_239EC6830;
  v38 = (int64x2_t)vaddq_f64(v31, (float64x2_t)xmmword_239EC6830);
  __asm { FMOV            V27.2D, #-1.0 }
  *(_QWORD *)&_Q17.f64[0] = *(_OWORD *)&vabsq_f64(vaddq_f64(_Q17, _Q27));
  _Q17.f64[1] = NAN;
  if (vmaxnmvq_f64(vmaxnmq_f64(vmaxnmq_f64(vmaxnmq_f64(vabsq_f64(vaddq_f64(v29, (float64x2_t)xmmword_239EC6820)), _Q17), vabsq_f64((float64x2_t)vextq_s8((int8x16_t)v38, _Q21, 8uLL))), vmaxnmq_f64(vabsq_f64((float64x2_t)vzip1q_s64(_Q19, v38)), vabsq_f64(v34)))) > 0.0001)goto LABEL_3;
  v40 = vmulq_f64((float64x2_t)vextq_s8((int8x16_t)v14, (int8x16_t)v14, 8uLL), vmlaq_n_f64(vmulq_n_f64(_Q3, -v23), _Q1, v26));
  __asm { FMLA            D4, D1, V3.D[1] }
  if (fabs(v20 * _D4 + vsubq_f64((float64x2_t)vdupq_laneq_s64((int64x2_t)v40, 1), v40).f64[0] + -1.0) > 0.0001)
  {
LABEL_3:
    v75 = _Q27;
    sub_239516070(&v76);
    _Q27 = v75;
    v37 = (float64x2_t)xmmword_239EC6830;
    v36 = (float64x2_t)xmmword_239EC6820;
  }
  v42 = *(_OWORD *)v77;
  *(float64x2_t *)a3 = v76;
  *(_OWORD *)(a3 + 16) = v42;
  *(double *)(a3 + 64) = v79;
  v43 = v78;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)&v77[16];
  *(float64x2_t *)(a3 + 48) = v43;
  v44 = *(double *)(a3 + 16);
  v45 = *(float64x2_t *)a3;
  v46 = vextq_s8((int8x16_t)v45, (int8x16_t)v45, 8uLL).u64[0];
  v47 = *(double *)(a3 + 40);
  v48 = *(float64x2_t *)(a3 + 24);
  *(_QWORD *)&v49 = vextq_s8((int8x16_t)v48, (int8x16_t)v48, 8uLL).u64[0];
  v50 = *(double *)(a3 + 64);
  _Q5 = *(float64x2_t *)(a3 + 48);
  *(_QWORD *)&v52 = vextq_s8((int8x16_t)_Q5, (int8x16_t)_Q5, 8uLL).u64[0];
  v53 = (float64x2_t)vzip1q_s64(*(int64x2_t *)a3, (int64x2_t)v48);
  v54 = (float64x2_t)vzip2q_s64(*(int64x2_t *)a3, (int64x2_t)v48);
  _Q20.f64[0] = v44;
  _Q20.f64[1] = v47;
  v56 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v53, *(double *)a3), v54, *(float64x2_t *)a3, 1), _Q20, v44);
  _Q21 = (int64x2_t)vmulq_f64(_Q5, *(float64x2_t *)a3);
  _D22 = *(_QWORD *)(a3 + 8);
  __asm { FMLA            D21, D22, V5.D[1] }
  *(double *)_Q21.i64 = *(double *)_Q21.i64 + v50 * v44;
  v59 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v53, v48.f64[0]), v54, v48, 1), _Q20, v47);
  _Q23 = (int8x16_t)vmulq_f64(_Q5, v48);
  _D24 = *(_QWORD *)(a3 + 32);
  __asm { FMLA            D23, D24, V5.D[1] }
  *(double *)_Q23.i64 = *(double *)_Q23.i64 + v50 * v47;
  v62 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v53, _Q5.f64[0]), v54, _Q5, 1), _Q20, v50);
  _Q19 = vmulq_f64(_Q5, _Q5);
  _Q20.f64[0] = *(float64_t *)(a3 + 56);
  __asm { FMLA            D19, D20, V5.D[1] }
  _Q19.f64[0] = _Q19.f64[0] + v50 * v50;
  v64 = (int64x2_t)vaddq_f64(v59, v37);
  *(_QWORD *)&_Q19.f64[0] = *(_OWORD *)&vabsq_f64(vaddq_f64(_Q19, _Q27));
  _Q19.f64[1] = NAN;
  v65 = vmaxnmvq_f64(vmaxnmq_f64(vmaxnmq_f64(vmaxnmq_f64(vabsq_f64(vaddq_f64(v56, v36)), _Q19), vabsq_f64((float64x2_t)vextq_s8((int8x16_t)v64, _Q23, 8uLL))), vmaxnmq_f64(vabsq_f64((float64x2_t)vzip1q_s64(_Q21, v64)), vabsq_f64(v62))));
  v66 = -v47;
  if (v65 > 0.0001
    || (v67.f64[0] = *(float64_t *)a3,
        *(_QWORD *)&v67.f64[1] = v46,
        v68.f64[0] = v52,
        v68.f64[1] = *(float64_t *)(a3 + 48),
        v69.f64[0] = v49,
        v69.f64[1] = *(float64_t *)(a3 + 24),
        v70 = vmulq_f64(v67, vmlaq_n_f64(vmulq_n_f64(v68, v66), v69, v50)),
        fabs(v44 * (v52 * v48.f64[0] - v49 * _Q5.f64[0])+ vsubq_f64(v70, (float64x2_t)vdupq_laneq_s64((int64x2_t)v70, 1)).f64[0]+ -1.0) > 0.0001))
  {
    if (v65 > 0.1
      || (*(_QWORD *)&v45.f64[1] = v46,
          v71.f64[0] = v52,
          v71.f64[1] = *(float64_t *)(a3 + 48),
          v72 = vmulq_n_f64(v71, v66),
          v73.f64[0] = v49,
          v73.f64[1] = *(float64_t *)(a3 + 24),
          v74 = vmulq_f64(v45, vmlaq_n_f64(v72, v73, v50)),
          fabs(v44 * (v52 * v48.f64[0] - v49 * _Q5.f64[0])+ vsubq_f64(v74, (float64x2_t)vdupq_laneq_s64((int64x2_t)v74, 1)).f64[0]+ -1.0) > 0.1))
    {
      sub_239EC1C48(a1, a2);
    }
    sub_239516070((float64x2_t *)a3);
  }
}

void sub_2396F7F10(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 18, a3, a4);
}

void sub_2396F7F18(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 36, a3, a4);
}

uint64_t sub_2396F7F20(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = a3;
  *(_QWORD *)(a1 + 32) = a2;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  v4 = a1 + 72;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  v5 = a1 + 120;
  *(_DWORD *)(a1 + 168) = -1;
  *(_DWORD *)(a1 + 228) = 0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_BYTE *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 248) = 0;
  v23 = a1 + 144;
  v24 = a1 + 48;
  v6 = a1 + 200;
  *(_QWORD *)(a1 + 240) = 0;
  *(_BYTE *)(a1 + 232) = 1;
  *(_QWORD *)(a1 + 344) = 0;
  *(_QWORD *)(a1 + 352) = 0;
  *(_QWORD *)(a1 + 368) = 0;
  *(_QWORD *)(a1 + 376) = 0;
  *(_QWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 400) = 0;
  *(_QWORD *)(a1 + 456) = 0;
  *(_QWORD *)(a1 + 464) = 0;
  *(_QWORD *)(a1 + 488) = 0;
  *(_QWORD *)(a1 + 496) = 0;
  *(_QWORD *)(a1 + 480) = 0;
  *(_OWORD *)(a1 + 512) = xmmword_239EC6860;
  *(_QWORD *)(a1 + 528) = 0;
  *(_QWORD *)(a1 + 536) = 0;
  *(_QWORD *)(a1 + 568) = 0;
  *(_QWORD *)(a1 + 576) = 1;
  *(_QWORD *)(a1 + 544) = 0;
  *(_QWORD *)(a1 + 552) = 0;
  *(_QWORD *)(a1 + 560) = 0;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 300) = 0u;
  *(_QWORD *)(a1 + 328) = 0;
  *(_QWORD *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 424) = 0;
  *(_QWORD *)(a1 + 592) = 0;
  *(_QWORD *)(a1 + 600) = 0;
  *(_QWORD *)(a1 + 616) = 0xA00000000;
  if (a2)
  {
    sub_2394D951C(a1 + 96, a2);
    v7 = *(_QWORD **)(a1 + 96);
    v8 = *(_QWORD **)(a1 + 104);
    while (v7 != v8)
    {
      v9 = *(_QWORD *)(a1 + 24);
      LODWORD(v25) = 0;
      v10 = (uint64_t)(v7[1] - *v7) >> 2;
      if (v9 > v10)
      {
        sub_23951A6E0((uint64_t)v7, v9 - v10, (const float *)&v25);
      }
      else if (v9 < v10)
      {
        v7[1] = *v7 + 4 * v9;
      }
      v7 += 3;
    }
  }
  v11 = *(_QWORD *)(a1 + 32);
  LODWORD(v25) = 0;
  v12 = *(_QWORD *)(a1 + 120);
  v13 = (*(_QWORD *)(a1 + 128) - v12) >> 2;
  if (v11 <= v13)
  {
    if (v11 < v13)
      *(_QWORD *)(a1 + 128) = v12 + 4 * v11;
  }
  else
  {
    sub_23951A6E0(v5, v11 - v13, (const float *)&v25);
    v11 = *(_QWORD *)(a1 + 32);
  }
  LODWORD(v25) = 0;
  v14 = *(_QWORD *)(a1 + 48);
  v15 = (*(_QWORD *)(a1 + 56) - v14) >> 2;
  if (v11 <= v15)
  {
    if (v11 < v15)
      *(_QWORD *)(a1 + 56) = v14 + 4 * v11;
  }
  else
  {
    sub_2394DE27C(v24, v11 - v15, (const float *)&v25);
    v11 = *(_QWORD *)(a1 + 32);
  }
  LODWORD(v25) = 0;
  v16 = *(_QWORD *)(a1 + 72);
  v17 = (*(_QWORD *)(a1 + 80) - v16) >> 2;
  if (v11 <= v17)
  {
    if (v11 < v17)
      *(_QWORD *)(a1 + 80) = v16 + 4 * v11;
  }
  else
  {
    sub_2394DE27C(v4, v11 - v17, (const float *)&v25);
    v11 = *(_QWORD *)(a1 + 32);
  }
  LODWORD(v25) = -1;
  v18 = *(_QWORD *)(a1 + 144);
  v19 = (*(_QWORD *)(a1 + 152) - v18) >> 2;
  if (v11 <= v19)
  {
    if (v11 < v19)
      *(_QWORD *)(a1 + 152) = v18 + 4 * v11;
  }
  else
  {
    sub_2394DE27C(v23, v11 - v19, (const float *)&v25);
    v11 = *(_QWORD *)(a1 + 32);
  }
  v25 = 0;
  v20 = *(_QWORD *)(a1 + 200);
  v21 = (*(_QWORD *)(a1 + 208) - v20) >> 3;
  if (v11 <= v21)
  {
    if (v11 < v21)
      *(_QWORD *)(a1 + 208) = v20 + 8 * v11;
  }
  else
  {
    sub_2396DA790(v6, v11 - v21, &v25);
  }
  return a1;
}

void sub_2396F81C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, void **a11)
{
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  uint64_t *v16;
  void **v17;
  uint64_t *v18;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  sub_2394B6980((uint64_t)(v16 + 1));
  sub_2396F82BC(v16);
  sub_2396F82BC(v18);
  v20 = *v17;
  if (*v17)
  {
    *(_QWORD *)(v11 + 208) = v20;
    operator delete(v20);
    sub_2396F8340(v15);
    v21 = *a10;
    if (!*a10)
    {
LABEL_3:
      v22 = *v13;
      if (!*v13)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else
  {
    sub_2396F8340(v15);
    v21 = *a10;
    if (!*a10)
      goto LABEL_3;
  }
  *(_QWORD *)(v11 + 152) = v21;
  operator delete(v21);
  v22 = *v13;
  if (!*v13)
  {
LABEL_4:
    sub_23942A16C(v14);
    v23 = *v12;
    if (!*v12)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  *(_QWORD *)(v11 + 128) = v22;
  operator delete(v22);
  sub_23942A16C(v14);
  v23 = *v12;
  if (!*v12)
  {
LABEL_5:
    v24 = *a11;
    if (!*a11)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  *(_QWORD *)(v11 + 80) = v23;
  operator delete(v23);
  v24 = *a11;
  if (!*a11)
  {
LABEL_6:
    sub_23942A16C((void **)v11);
    _Unwind_Resume(a1);
  }
LABEL_11:
  *(_QWORD *)(v11 + 56) = v24;
  operator delete(v24);
  sub_23942A16C((void **)v11);
  _Unwind_Resume(a1);
}

uint64_t *sub_2396F82BC(uint64_t *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = *(std::__shared_weak_count **)(v2 + 24);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    MEMORY[0x23B83E31C](v2, 0x10E0C4033E2FC60);
  }
  return a1;
}

void **sub_2396F8340(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  void *v5;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v5 = (void *)*((_QWORD *)v3 - 3);
        if (v5)
        {
          *((_QWORD *)v3 - 2) = v5;
          operator delete(v5);
        }
        v3 -= 40;
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void **sub_2396F83B4(void **a1)
{
  char *v2;
  char *v3;
  char *v4;
  void *v5;
  void *v6;
  char *v7;
  char *i;
  void *v9;
  _QWORD *v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  void *v23;
  char *v24;
  char *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  char *v30;
  char *v31;
  void *v32;
  char *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  char *v38;
  char *v39;
  void *v40;
  char *v41;
  void *v42;
  void *v43;

  v3 = (char *)a1[12];
  v2 = (char *)a1[13];
  if (v2 != v3)
  {
    v4 = (char *)a1[13];
    do
    {
      v6 = (void *)*((_QWORD *)v4 - 3);
      v4 -= 24;
      v5 = v6;
      if (v6)
      {
        *((_QWORD *)v2 - 2) = v5;
        operator delete(v5);
      }
      v2 = v4;
    }
    while (v4 != v3);
  }
  a1[13] = v3;
  a1[16] = a1[15];
  a1[7] = a1[6];
  v7 = (char *)a1[22];
  for (i = (char *)a1[23]; i != v7; i -= 40)
  {
    v9 = (void *)*((_QWORD *)i - 3);
    if (v9)
    {
      *((_QWORD *)i - 2) = v9;
      operator delete(v9);
    }
  }
  a1[23] = v7;
  v11 = (char *)*a1;
  v10 = a1[1];
  if (v10 != *a1)
  {
    v12 = (char *)a1[1];
    do
    {
      v14 = (void *)*((_QWORD *)v12 - 3);
      v12 -= 24;
      v13 = v14;
      if (v14)
      {
        *(v10 - 2) = v13;
        operator delete(v13);
      }
      v10 = v12;
    }
    while (v12 != v11);
  }
  a1[1] = v11;
  a1[19] = a1[18];
  a1[26] = a1[25];
  a1[10] = a1[9];
  sub_2394B6980((uint64_t)(a1 + 32));
  v15 = a1[31];
  a1[31] = 0;
  if (v15)
  {
    v16 = (std::__shared_weak_count *)*((_QWORD *)v15 + 3);
    if (v16)
    {
      p_shared_owners = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldaxr(p_shared_owners);
      while (__stlxr(v18 - 1, p_shared_owners));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    MEMORY[0x23B83E31C](v15, 0x10E0C4033E2FC60);
  }
  v19 = a1[30];
  a1[30] = 0;
  if (v19)
  {
    v20 = (std::__shared_weak_count *)*((_QWORD *)v19 + 3);
    if (v20)
    {
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    MEMORY[0x23B83E31C](v19, 0x10E0C4033E2FC60);
  }
  v23 = a1[25];
  if (v23)
  {
    a1[26] = v23;
    operator delete(v23);
  }
  v24 = (char *)a1[22];
  if (v24)
  {
    v25 = (char *)a1[23];
    v26 = a1[22];
    if (v25 != v24)
    {
      do
      {
        v27 = (void *)*((_QWORD *)v25 - 3);
        if (v27)
        {
          *((_QWORD *)v25 - 2) = v27;
          operator delete(v27);
        }
        v25 -= 40;
      }
      while (v25 != v24);
      v26 = a1[22];
    }
    a1[23] = v24;
    operator delete(v26);
  }
  v28 = a1[18];
  if (v28)
  {
    a1[19] = v28;
    operator delete(v28);
  }
  v29 = a1[15];
  if (v29)
  {
    a1[16] = v29;
    operator delete(v29);
  }
  v30 = (char *)a1[12];
  if (v30)
  {
    v31 = (char *)a1[13];
    v32 = a1[12];
    if (v31 != v30)
    {
      v33 = (char *)a1[13];
      do
      {
        v35 = (void *)*((_QWORD *)v33 - 3);
        v33 -= 24;
        v34 = v35;
        if (v35)
        {
          *((_QWORD *)v31 - 2) = v34;
          operator delete(v34);
        }
        v31 = v33;
      }
      while (v33 != v30);
      v32 = a1[12];
    }
    a1[13] = v30;
    operator delete(v32);
  }
  v36 = a1[9];
  if (v36)
  {
    a1[10] = v36;
    operator delete(v36);
  }
  v37 = a1[6];
  if (v37)
  {
    a1[7] = v37;
    operator delete(v37);
  }
  v38 = (char *)*a1;
  if (*a1)
  {
    v39 = (char *)a1[1];
    v40 = *a1;
    if (v39 != v38)
    {
      v41 = (char *)a1[1];
      do
      {
        v43 = (void *)*((_QWORD *)v41 - 3);
        v41 -= 24;
        v42 = v43;
        if (v43)
        {
          *((_QWORD *)v39 - 2) = v42;
          operator delete(v42);
        }
        v39 = v41;
      }
      while (v41 != v38);
      v40 = *a1;
    }
    a1[1] = v38;
    operator delete(v40);
  }
  return a1;
}

float sub_2396F8694(uint64_t a1)
{
  int v2;
  _BYTE *v3;
  _BYTE *v4;
  float v5;
  uint64_t v6;
  float v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  float v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  float v24;
  float *v25;
  float v26;
  float v27;
  float *v28;
  float v29;
  float v30;
  float v31;
  float v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;

  sub_2396F88C8((float *)a1);
  *(_BYTE *)(a1 + 608) = sub_2394D915C((uint64_t *)(a1 + 256), *(_DWORD *)(a1 + 32), *(_DWORD *)(a1 + 40));
  sub_2396F8AEC(a1);
  if (!*(_BYTE *)(a1 + 232))
    return sub_2396F8AEC(a1);
  v2 = *(_DWORD *)(a1 + 616);
  while (1)
  {
    if (v2 >= *(_DWORD *)(a1 + 620))
      return sub_2396F8AEC(a1);
    v3 = *(_BYTE **)(a1 + 48);
    v4 = *(_BYTE **)(a1 + 56);
    if (v4 != v3)
      memmove(*(void **)(a1 + 72), v3, v4 - v3);
    v5 = *(float *)(a1 + 228);
    *(_BYTE *)(a1 + 232) = 0;
    v6 = *(_QWORD *)(a1 + 24);
    v7 = v5;
    if (v6)
    {
      v8 = 0;
      while (1)
      {
        if (*(int *)(a1 + 616) >= 1)
        {
          v10 = *(_QWORD **)(a1 + 176);
          v9 = *(_QWORD **)(a1 + 184);
          if (v10 != v9)
            break;
        }
LABEL_8:
        sub_2396F8CD4(a1, v8++);
        if (v8 == v6)
        {
          v7 = *(float *)(a1 + 228);
          goto LABEL_23;
        }
      }
      v11 = *(_QWORD *)(a1 + 48);
      v12 = v10 + 2;
      while (1)
      {
        v20 = *((unsigned int *)v12 - 4);
        v19 = *((unsigned int *)v12 - 3);
        v18 = v12 - 2;
        v21 = *(unsigned int *)(v11 + 4 * v20);
        v22 = *(unsigned int *)(v11 + 4 * v19);
        if ((_DWORD)v21 == (_DWORD)v8 || (_DWORD)v22 == (_DWORD)v8)
          goto LABEL_14;
        v24 = *(float *)(*(_QWORD *)(*(_QWORD *)a1 + 24 * v8) + 4 * v22);
        v25 = (float *)(*v12 + 8 * v8);
        v26 = *v25;
        v27 = *v25 + *(float *)(*v12 + 8 * v22 + 4);
        v28 = v25 + 1;
        v29 = v25[1];
        if (v27 > v24)
        {
          v13 = v27 - v24;
          *v25 = v26 - v13;
          *v28 = v29 + v13;
          v14 = *(_QWORD *)(a1 + 96);
          v15 = 4 * v8;
          *(float *)(*(_QWORD *)(v14 + 24 * v20) + v15) = *(float *)(*(_QWORD *)(v14
                                                                                               + 24
                                                                                               * v20)
                                                                                   + v15)
                                                                        - v13;
          v16 = *(_QWORD *)(v14 + 24 * v19);
          v17 = v13 + *(float *)(v16 + v15);
        }
        else
        {
          v30 = *(float *)(*(_QWORD *)(*(_QWORD *)a1 + 24 * v21) + 4 * v8);
          v31 = *(float *)(*v12 + 8 * v21) + v29;
          if (v31 <= v30)
            goto LABEL_14;
          v32 = v31 - v30;
          *v25 = v26 + v32;
          *v28 = v29 - v32;
          v33 = *(_QWORD *)(a1 + 96);
          v15 = 4 * v8;
          *(float *)(*(_QWORD *)(v33 + 24 * v20) + v15) = v32
                                                                        + *(float *)(*(_QWORD *)(v33
                                                                                               + 24
                                                                                               * v20)
                                                                                   + v15);
          v16 = *(_QWORD *)(v33 + 24 * v19);
          v17 = *(float *)(v16 + v15) - v32;
        }
        *(float *)(v16 + v15) = v17;
LABEL_14:
        v12 += 5;
        if (v18 + 5 == v9)
          goto LABEL_8;
      }
    }
LABEL_23:
    if (v7 >= v5)
      break;
    v2 = *(_DWORD *)(a1 + 616) + 1;
    *(_DWORD *)(a1 + 616) = v2;
    if (!*(_BYTE *)(a1 + 232))
      return sub_2396F8AEC(a1);
  }
  v34 = *(_BYTE **)(a1 + 72);
  v35 = *(_BYTE **)(a1 + 80);
  if (v35 != v34)
  {
    memmove(*(void **)(a1 + 48), v34, v35 - v34);
    return sub_2396F8AEC(a1);
  }
  return sub_2396F8AEC(a1);
}

uint64_t sub_2396F88C8(float *a1)
{
  unsigned int *v2;
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  float *v11;
  float v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  float (*v19)(uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  float v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  float v29;
  unsigned int *v30;
  uint64_t *v31;
  float *v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  float v36;
  uint64_t v38;
  std::__shared_weak_count *v39;

  v2 = (unsigned int *)*((_QWORD *)a1 + 22);
  v3 = (unsigned int *)*((_QWORD *)a1 + 23);
  if (v2 != v3)
  {
    v4 = *((_QWORD *)a1 + 6);
    v5 = *(_QWORD *)a1;
    v6 = *((_QWORD *)a1 + 12);
    do
    {
      v7 = *v2;
      v8 = v2[1];
      v9 = *(unsigned int *)(v4 + 4 * v7);
      v10 = *(float *)(*(_QWORD *)(v5 + 24 * v9) + 4 * *(unsigned int *)(v4 + 4 * v8));
      v11 = (float *)(*((_QWORD *)v2 + 2) + 8 * v9);
      v12 = v11[1] - v10;
      *v11 = v10 + *v11;
      v11[1] = v12;
      v9 *= 4;
      *(float *)(*(_QWORD *)(v6 + 24 * v7) + v9) = v10
                                                                 + *(float *)(*(_QWORD *)(v6 + 24 * v7)
                                                                            + v9);
      *(float *)(*(_QWORD *)(v6 + 24 * v8) + v9) = *(float *)(*(_QWORD *)(v6 + 24 * v8)
                                                                            + v9)
                                                                 - v10;
      v2 += 10;
    }
    while (v2 != v3);
  }
  v13 = *((_QWORD *)a1 + 4);
  if (v13)
  {
    v14 = *((_QWORD *)a1 + 3);
    if (v14)
    {
      v15 = 0;
LABEL_7:
      for (i = 0; i != v14; ++i)
      {
        v18 = *((_QWORD *)a1 + 30);
        v19 = *(float (**)(uint64_t, uint64_t, uint64_t, uint64_t *))v18;
        v20 = *(unsigned int *)(v18 + 8);
        v22 = *(_QWORD *)(v18 + 16);
        v21 = *(std::__shared_weak_count **)(v18 + 24);
        v38 = v22;
        v39 = v21;
        if (v21)
        {
          p_shared_owners = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(p_shared_owners);
          while (__stxr(v24 + 1, p_shared_owners));
        }
        v25 = v19(v15, i, v20, &v38);
        v26 = v39;
        if (v39)
        {
          v27 = (unint64_t *)&v39->__shared_owners_;
          do
            v28 = __ldaxr(v27);
          while (__stlxr(v28 - 1, v27));
          if (!v28)
          {
            ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
            std::__shared_weak_count::__release_weak(v26);
          }
        }
        v17 = *(_QWORD *)(*((_QWORD *)a1 + 12) + 24 * v15);
        *(float *)(v17 + 4 * i) = v25 + *(float *)(v17 + 4 * i);
      }
      while (1)
      {
        v29 = *(float *)(v17 + 4 * *(unsigned int *)(*((_QWORD *)a1 + 6) + 4 * v15));
        *(float *)(*((_QWORD *)a1 + 15) + 4 * v15) = v29;
        a1[57] = v29 + a1[57];
        if (++v15 == v13)
          break;
        v14 = *((_QWORD *)a1 + 3);
        if (v14)
          goto LABEL_7;
        v17 = *(_QWORD *)(*((_QWORD *)a1 + 12) + 24 * v15);
      }
    }
    else
    {
      v30 = (unsigned int *)*((_QWORD *)a1 + 6);
      v31 = (uint64_t *)*((_QWORD *)a1 + 12);
      v32 = (float *)*((_QWORD *)a1 + 15);
      do
      {
        v34 = *v30++;
        v33 = v34;
        v35 = *v31;
        v31 += 3;
        v36 = *(float *)(v35 + 4 * v33);
        *v32++ = v36;
        a1[57] = v36 + a1[57];
        --v13;
      }
      while (v13);
    }
  }
  return 1;
}

void sub_2396F8AD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_239EBF904(a10);
  _Unwind_Resume(exception_object);
}

float sub_2396F8AEC(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  float v7;
  unsigned int *v8;
  unint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  float (*v18)(uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  float v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v29;
  std::__shared_weak_count *v30;

  if (*(_BYTE *)(a1 + 224))
  {
    v3 = *(unsigned int **)(a1 + 176);
    v2 = *(unsigned int **)(a1 + 184);
    if (v3 != v2)
      goto LABEL_3;
LABEL_6:
    v7 = 0.0;
    goto LABEL_11;
  }
  sub_2396F92E0(a1);
  v3 = *(unsigned int **)(a1 + 176);
  v2 = *(unsigned int **)(a1 + 184);
  if (v3 == v2)
    goto LABEL_6;
LABEL_3:
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)a1;
  v6 = (char *)v2 - (char *)v3 - 40;
  if (v6 < 0x28)
  {
    v7 = 0.0;
    v8 = v3;
    do
    {
LABEL_10:
      v12 = *v8;
      v13 = v8[1];
      v8 += 10;
      v7 = v7
         + *(float *)(*(_QWORD *)(v5 + 24 * *(unsigned int *)(v4 + 4 * v12)) + 4 * *(unsigned int *)(v4 + 4 * v13));
    }
    while (v8 != v2);
    goto LABEL_11;
  }
  v9 = v6 / 0x28 + 1;
  v8 = &v3[10 * (v9 & 0xFFFFFFFFFFFFFFELL)];
  v10 = v3 + 11;
  v7 = 0.0;
  v11 = v9 & 0xFFFFFFFFFFFFFFELL;
  do
  {
    v7 = (float)(v7
               + *(float *)(*(_QWORD *)(v5 + 24 * *(unsigned int *)(v4 + 4 * *(v10 - 11)))
                          + 4 * *(unsigned int *)(v4 + 4 * *(v10 - 10))))
       + *(float *)(*(_QWORD *)(v5 + 24 * *(unsigned int *)(v4 + 4 * *(v10 - 1)))
                  + 4 * *(unsigned int *)(v4 + 4 * *v10));
    v10 += 20;
    v11 -= 2;
  }
  while (v11);
  if (v9 != (v9 & 0xFFFFFFFFFFFFFFELL))
    goto LABEL_10;
LABEL_11:
  v14 = *(_QWORD *)(a1 + 32);
  if (v14)
  {
    for (i = 0; i != v14; ++i)
    {
      v16 = *(_QWORD *)(a1 + 240);
      v17 = *(unsigned int *)(*(_QWORD *)(a1 + 48) + 4 * i);
      v18 = *(float (**)(uint64_t, uint64_t, uint64_t, uint64_t *))v16;
      v19 = *(unsigned int *)(v16 + 8);
      v21 = *(_QWORD *)(v16 + 16);
      v20 = *(std::__shared_weak_count **)(v16 + 24);
      v29 = v21;
      v30 = v20;
      if (v20)
      {
        p_shared_owners = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(p_shared_owners);
        while (__stxr(v23 + 1, p_shared_owners));
      }
      v24 = v18(i, v17, v19, &v29);
      v25 = v30;
      if (v30)
      {
        v26 = (unint64_t *)&v30->__shared_owners_;
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      v7 = v7 + v24;
    }
  }
  return v7;
}

void sub_2396F8CBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_239EBF904(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2396F8CD4(uint64_t a1, unsigned int a2)
{
  int v4;
  int v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  float v9;
  float v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  unsigned int *v23;
  unsigned int *j;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  float v31;
  float *v32;
  float v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  float v53;
  float *v54;
  float v55;
  float v56;
  float v57;
  uint64_t v58;
  uint64_t v59;
  float *v60;
  float *v61;
  unint64_t v62;
  float v63;
  float *v64;
  uint64_t v65;
  float *v66;
  uint64_t v67;
  float v68;
  uint64_t v70;

  v4 = *(_DWORD *)(a1 + 168) + 1;
  *(_DWORD *)(a1 + 168) = v4;
  v5 = *(_DWORD *)(a1 + 24);
  v6 = *(_QWORD **)(a1 + 176);
  v7 = *(_QWORD **)(a1 + 184);
  if (v6 != v7)
  {
    v8 = v6 + 2;
    do
    {
      v11 = *((unsigned int *)v8 - 4);
      v12 = *((unsigned int *)v8 - 3);
      v13 = v8 - 2;
      v14 = *(_QWORD *)(a1 + 48);
      v15 = *(unsigned int *)(v14 + 4 * v11);
      v16 = *(unsigned int *)(v14 + 4 * v12);
      if ((_DWORD)v15 == a2 || (_DWORD)v16 == a2)
      {
        v9 = 0.0;
        v10 = 0.0;
      }
      else
      {
        v18 = (float *)(*v8 + 8 * a2);
        v9 = fmaxf(*(float *)(*(_QWORD *)(*(_QWORD *)a1 + 24 * a2) + 4 * v16)- (float)(*v18 + *(float *)(*v8 + 8 * v16 + 4)), 0.0);
        v10 = fmaxf(*(float *)(*(_QWORD *)(*(_QWORD *)a1 + 24 * v15) + 4 * a2)- (float)(v18[1] + *(float *)(*v8 + 8 * v15)), 0.0);
      }
      sub_2396F9274((uint64_t *)(a1 + 256), v11, v12, v9, v10);
      v8 += 5;
    }
    while (v13 + 5 != v7);
  }
  v19 = v4 - v5;
  v20 = *(_QWORD *)(a1 + 32);
  if (v20)
  {
    v21 = 0;
    for (i = 0; i != v20; ++i)
    {
      if (*(_DWORD *)(*(_QWORD *)(a1 + 144) + 4 * i) >= v19)
        sub_2396F9118(a1, i, *(float *)(*(_QWORD *)(a1 + 120) + 4 * i) - *(float *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + v21) + 4 * a2));
      v21 += 24;
    }
  }
  sub_2394D98B0((uint64_t *)(a1 + 256));
  sub_2394D9CC4(a1 + 256, 1, 0);
  v23 = *(unsigned int **)(a1 + 176);
  for (j = *(unsigned int **)(a1 + 184); v23 != j; v23 += 10)
  {
    v25 = *(_QWORD *)(a1 + 48);
    v26 = *v23;
    v27 = v23[1];
    v28 = *(_DWORD *)(v25 + 4 * v26);
    v29 = *(_DWORD *)(v25 + 4 * v27);
    if (v28 != a2 && v29 != a2)
    {
      v70 = 0;
      sub_2396F960C(a1 + 256, v26, v27, *((_QWORD *)v23 + 1), (_DWORD *)&v70 + 1, &v70);
      v31 = *((float *)&v70 + 1) - *(float *)&v70;
      v32 = (float *)(*((_QWORD *)v23 + 2) + 8 * a2);
      v33 = v32[1] - (float)(*((float *)&v70 + 1) - *(float *)&v70);
      *v32 = (float)(*((float *)&v70 + 1) - *(float *)&v70) + *v32;
      v32[1] = v33;
      v34 = *(_QWORD *)(a1 + 96);
      v35 = v23[1];
      v36 = *(_QWORD *)(v34 + 24 * *v23);
      *(float *)(v36 + 4 * a2) = v31 + *(float *)(v36 + 4 * a2);
      *(float *)(*(_QWORD *)(v34 + 24 * v35) + 4 * a2) = *(float *)(*(_QWORD *)(v34 + 24 * v35) + 4 * a2) - v31;
    }
  }
  v37 = *(_QWORD *)(a1 + 32);
  if (v37)
  {
    v38 = 0;
    v39 = 0;
    v40 = *(_QWORD *)(a1 + 256);
    do
    {
      if (*(int *)(v40 + 32 * v39 + 20) >= 1)
      {
        v41 = *(_QWORD *)(a1 + 144);
        if (*(_DWORD *)(v41 + 4 * v39) >= v19)
        {
          v42 = 4 * v39;
          *(_DWORD *)(v41 + v42) = *(_DWORD *)(a1 + 168);
          *(_DWORD *)(*(_QWORD *)(a1 + 48) + v42) = a2;
          *(_DWORD *)(*(_QWORD *)(a1 + 120) + v42) = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + v38) + 4 * a2);
          *(_BYTE *)(a1 + 232) = 1;
        }
      }
      ++v39;
      v38 += 24;
    }
    while (v37 != v39);
  }
  v44 = *(_QWORD **)(a1 + 176);
  v43 = *(_QWORD **)(a1 + 184);
  if (v44 != v43)
  {
    v45 = *(_QWORD *)(a1 + 48);
    v46 = *(_QWORD *)(a1 + 256);
    v47 = v44 + 2;
    do
    {
      v49 = *((unsigned int *)v47 - 4);
      v50 = *((unsigned int *)v47 - 3);
      v48 = v47 - 2;
      if (*(int *)(v46 + 32 * v49 + 20) > 0 || *(int *)(v46 + 32 * v50 + 20) >= 1)
      {
        v51 = *(unsigned int *)(v45 + 4 * v49);
        v52 = *(unsigned int *)(v45 + 4 * v50);
        v53 = *(float *)(*(_QWORD *)(*(_QWORD *)a1 + 24 * v51) + 4 * v52);
        v54 = (float *)(*v47 + 8 * v51);
        v55 = *v54 + *(float *)(*v47 + 8 * v52 + 4);
        if (v55 > v53)
        {
          v56 = v55 - v53;
          v57 = v56 + v54[1];
          *v54 = *v54 - v56;
          v54[1] = v57;
          v58 = *(_QWORD *)(a1 + 96);
          v59 = 4 * v51;
          *(float *)(*(_QWORD *)(v58 + 24 * v49) + v59) = *(float *)(*(_QWORD *)(v58
                                                                                               + 24
                                                                                               * v49)
                                                                                   + v59)
                                                                        - v56;
          *(float *)(*(_QWORD *)(v58 + 24 * v50) + v59) = v56
                                                                        + *(float *)(*(_QWORD *)(v58
                                                                                               + 24
                                                                                               * v50)
                                                                                   + v59);
          *(float *)(*(_QWORD *)(a1 + 120) + 4 * v49) = *(float *)(*(_QWORD *)(a1 + 120) + 4 * v49) - v56;
        }
      }
      v47 += 5;
    }
    while (v48 + 5 != v43);
  }
  sub_2396F9680(a1 + 256);
  v61 = *(float **)(a1 + 120);
  v60 = *(float **)(a1 + 128);
  if (v61 == v60)
  {
    v63 = 0.0;
    goto LABEL_44;
  }
  v62 = (char *)v60 - (char *)v61 - 4;
  if (v62 < 4)
  {
    v63 = 0.0;
    v64 = *(float **)(a1 + 120);
    do
    {
LABEL_43:
      v68 = *v64++;
      v63 = v63 + v68;
    }
    while (v64 != v60);
    goto LABEL_44;
  }
  v65 = (v62 >> 2) + 1;
  v64 = &v61[v65 & 0x7FFFFFFFFFFFFFFELL];
  v66 = v61 + 1;
  v63 = 0.0;
  v67 = v65 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v63 = (float)(v63 + *(v66 - 1)) + *v66;
    v66 += 2;
    v67 -= 2;
  }
  while (v67);
  if (v65 != (v65 & 0x7FFFFFFFFFFFFFFELL))
    goto LABEL_43;
LABEL_44:
  *(float *)(a1 + 228) = v63;
  return 1;
}

uint64_t sub_2396F9118(uint64_t a1, uint64_t a2, float a3)
{
  float v3;
  unsigned int v4;
  uint64_t v5;
  float v6;
  BOOL v7;
  float v8;
  float v9;
  float v10;
  uint64_t v12;
  float v13;
  float v14;
  BOOL v15;
  float v16;
  float v17;
  uint64_t v18;
  float v19;
  float v20;
  float v21;

  if (a3 == 0.0)
    goto LABEL_14;
  v3 = 0.0 - a3;
  if (a3 >= 0.0)
    v3 = a3;
  if (v3 <= 1.0e-12)
  {
LABEL_14:
    if (*(_DWORD *)(a1 + 312) <= a2)
      sub_239EC1C74(a1, a2);
    v12 = *(_QWORD *)(a1 + 256) + 32 * a2;
    v13 = *(float *)(v12 + 16);
    v14 = v13 + 0.0;
    v15 = v13 <= 0.0;
    if (v13 <= 0.0)
      v14 = 0.0;
    v16 = 0.0 - v13;
    if (!v15)
      v16 = 0.0;
    *(float *)(v12 + 16) = v14 - v16;
    if (v14 < v16)
      v16 = v14;
    *(float *)(a1 + 328) = *(float *)(a1 + 328) + v16;
    return 1;
  }
  else
  {
    v4 = *(_DWORD *)(a1 + 312);
    if (a3 <= 0.0)
    {
      if (v4 <= a2)
        sub_239EC1C74(a1, a2);
      v17 = -a3;
      v18 = *(_QWORD *)(a1 + 256) + 32 * a2;
      v19 = *(float *)(v18 + 16);
      v20 = v19 + 0.0;
      if (v19 > 0.0)
        v19 = 0.0;
      else
        v20 = 0.0;
      v21 = v17 - v19;
      *(float *)(v18 + 16) = v20 - v21;
      if (v20 < v21)
        v21 = v20;
      *(float *)(a1 + 328) = *(float *)(a1 + 328) + v21;
      return 1;
    }
    else
    {
      if (v4 <= a2)
        sub_239EC1C74(a1, a2);
      v5 = *(_QWORD *)(a1 + 256) + 32 * a2;
      v6 = *(float *)(v5 + 16);
      v7 = v6 <= 0.0;
      v8 = -0.0;
      if (v6 > 0.0)
        v8 = *(float *)(v5 + 16);
      v9 = v8 + a3;
      v10 = 0.0 - v6;
      if (!v7)
        v10 = 0.0;
      *(float *)(v5 + 16) = v9 - v10;
      if (v9 >= v10)
        v9 = v10;
      *(float *)(a1 + 328) = *(float *)(a1 + 328) + v9;
      return 1;
    }
  }
}

uint64_t *sub_2396F9274(uint64_t *result, unsigned int a2, unsigned int a3, float a4, float a5)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *((_DWORD *)result + 14);
  if (v5 <= a2)
    sub_239EC1CD0();
  if (v5 <= a3)
    sub_239EC1CA0();
  v6 = result[21];
  *(_DWORD *)v6 = a3;
  *(_DWORD *)(v6 + 4) = a2;
  *(float *)(v6 + 8) = a4;
  *(float *)(v6 + 12) = a5;
  result[21] = v6 + 16;
  v7 = *result;
  ++*(_DWORD *)(*result + 32 * a2 + 20);
  ++*(_DWORD *)(v7 + 32 * a3 + 20);
  return result;
}

uint64_t sub_2396F92E0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t i;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t j;
  uint64_t v16;
  float (*v17)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  float v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v28;
  std::__shared_weak_count *v29;

  if (!*(_BYTE *)(a1 + 224))
  {
    v2 = *(_QWORD *)(a1 + 24);
    v3 = *(_QWORD *)(a1 + 8);
    v4 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *(_QWORD *)a1) >> 3);
    if (v2 <= v4)
    {
      if (v2 < v4)
      {
        v5 = *(_QWORD *)a1 + 24 * v2;
        if (v3 != v5)
        {
          v6 = *(_QWORD *)(a1 + 8);
          do
          {
            v8 = *(void **)(v6 - 24);
            v6 -= 24;
            v7 = v8;
            if (v8)
            {
              *(_QWORD *)(v3 - 16) = v7;
              operator delete(v7);
            }
            v3 = v6;
          }
          while (v6 != v5);
        }
        *(_QWORD *)(a1 + 8) = v5;
      }
    }
    else
    {
      sub_2394D951C(a1, v2 - v4);
    }
    v9 = *(_QWORD *)(a1 + 24);
    if (v9)
    {
      for (i = 0; i != v9; ++i)
      {
        v11 = (_QWORD *)(*(_QWORD *)a1 + 24 * i);
        v12 = *(_QWORD *)(a1 + 24);
        v13 = (uint64_t)(v11[1] - *v11) >> 2;
        if (v12 <= v13)
        {
          if (v12 < v13)
            v11[1] = *v11 + 4 * v12;
        }
        else
        {
          sub_2394807B4((uint64_t)v11, v12 - v13);
        }
        v14 = *(_QWORD *)(a1 + 24);
        if (v14)
        {
          for (j = 0; j != v14; ++j)
          {
            v16 = *(_QWORD *)(a1 + 248);
            v17 = *(float (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t *))v16;
            v18 = *(unsigned int *)(v16 + 8);
            v20 = *(_QWORD *)(v16 + 16);
            v19 = *(std::__shared_weak_count **)(v16 + 24);
            v28 = v20;
            v29 = v19;
            if (v19)
            {
              p_shared_owners = (unint64_t *)&v19->__shared_owners_;
              do
                v22 = __ldxr(p_shared_owners);
              while (__stxr(v22 + 1, p_shared_owners));
            }
            v23 = v17(0, 0, i, j, v18, &v28);
            v24 = v29;
            if (v29)
            {
              v25 = (unint64_t *)&v29->__shared_owners_;
              do
                v26 = __ldaxr(v25);
              while (__stlxr(v26 - 1, v25));
              if (!v26)
              {
                ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
                std::__shared_weak_count::__release_weak(v24);
              }
            }
            *(float *)(*(_QWORD *)(*(_QWORD *)a1 + 24 * i) + 4 * j) = v23;
          }
        }
      }
    }
    *(_BYTE *)(a1 + 224) = 1;
  }
  return 1;
}

void sub_2396F94B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_239EBF904(a10);
  _Unwind_Resume(exception_object);
}

void sub_2396F94CC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  unint64_t v3;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  void *__p[2];
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3 <= a2)
    sub_239EC1800();
  if (v3 <= a3)
    sub_239EC1D00();
  if (a2 <= a3)
    v5 = a3;
  else
    v5 = a2;
  if (a2 >= a3)
    v6 = a3;
  else
    v6 = a2;
  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  *(_QWORD *)&v13 = __PAIR64__(v5, v6);
  *((_QWORD *)&v13 + 1) = *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8 * v6);
  v7 = *(_QWORD *)(a1 + 24);
  v12 = 0;
  if (v7)
    sub_23951A0B4((unint64_t *)__p, v7, &v12);
  v8 = *(_QWORD *)(a1 + 184);
  if (v8 >= *(_QWORD *)(a1 + 192))
  {
    v10 = sub_2396F9820((void **)(a1 + 176), (uint64_t)&v13);
    v9 = __p[0];
  }
  else
  {
    v9 = 0;
    *(_OWORD *)v8 = v13;
    *(_QWORD *)(v8 + 24) = 0;
    *(_QWORD *)(v8 + 32) = 0;
    *(_QWORD *)(v8 + 16) = 0;
    *(_OWORD *)(v8 + 16) = *(_OWORD *)__p;
    *(_QWORD *)(v8 + 32) = v15;
    __p[0] = 0;
    __p[1] = 0;
    v15 = 0;
    v10 = (char *)(v8 + 40);
  }
  *(_QWORD *)(a1 + 184) = v10;
  v11 = *(_QWORD *)(a1 + 200);
  ++*(_QWORD *)(v11 + 8 * v6);
  ++*(_QWORD *)(v11 + 8 * v5);
  ++*(_QWORD *)(a1 + 40);
  if (v9)
  {
    __p[1] = v9;
    operator delete(v9);
  }
}

void sub_2396F95EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2396F960C(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4, _DWORD *a5, _DWORD *a6)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_DWORD *)(a1 + 56);
  if (v6 <= a2)
    sub_239EC1D90();
  if (v6 <= a3)
    sub_239EC1D60();
  v7 = *(_QWORD *)(a1 + 24) + 20 * *(unsigned int *)(*(_QWORD *)a1 + 32 * a2);
  if (*(_DWORD *)(v7 + 20 * a4 + 4) != a3)
    sub_239EC1D30();
  v8 = v7 + 20 * a4;
  *a5 = *(_DWORD *)(v8 + 12);
  *a6 = *(_DWORD *)(v8 + 8);
  return 1;
}

uint64_t sub_2396F9680(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;

  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  bzero(*(void **)a1, 32 * (*(_DWORD *)(a1 + 56) + 1));
  v2 = *(void **)(a1 + 24);
  bzero(v2, *(_QWORD *)(a1 + 64));
  v3 = *(void **)(a1 + 160);
  if (!v3)
  {
    v3 = (void *)operator new[]();
    bzero(v3, 16 * *(unsigned int *)(a1 + 60));
    *(_QWORD *)(a1 + 160) = v3;
  }
  *(_QWORD *)(a1 + 168) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 344) = 0;
  v4 = *(void **)(a1 + 208);
  if (v4)
    bzero(v4, 8 * *(_QWORD *)(a1 + 232) + 8);
  *(_QWORD *)(a1 + 224) = 0;
  v5 = *(void **)(a1 + 240);
  if (v5)
    bzero(v5, 8 * *(_QWORD *)(a1 + 264) + 8);
  *(_QWORD *)(a1 + 256) = 0;
  v6 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 272);
  v7 = *(_QWORD *)(a1 + 280);
  if (v7 != v8)
  {
    v9 = *(_QWORD *)(a1 + 280);
    do
    {
      v11 = *(void **)(v9 - 24);
      v9 -= 24;
      v10 = v11;
      if (v11)
      {
        *(_QWORD *)(v7 - 16) = v10;
        operator delete(v10);
      }
      v7 = v9;
    }
    while (v9 != v8);
    v7 = *(_QWORD *)(a1 + 272);
  }
  *(_QWORD *)(a1 + 280) = v8;
  v12 = *(_QWORD *)(a1 + 320) + 1;
  v13 = 0xAAAAAAAAAAAAAAABLL * ((v8 - v7) >> 3);
  if (v12 <= v13)
  {
    if (v12 < v13)
    {
      v14 = v7 + 24 * v12;
      if (v8 != v14)
      {
        v15 = v8;
        do
        {
          v17 = *(void **)(v15 - 24);
          v15 -= 24;
          v16 = v17;
          if (v17)
          {
            *(_QWORD *)(v8 - 16) = v16;
            operator delete(v16);
          }
          v8 = v15;
        }
        while (v15 != v14);
      }
      *(_QWORD *)(a1 + 280) = v14;
    }
  }
  else
  {
    sub_2394D951C(a1 + 272, v12 - v13);
  }
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 304) = -1;
  *(_QWORD *)(a1 + 312) = v6;
  return 1;
}

char *sub_2396F9820(void **a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  __int128 v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  void *v19;

  v3 = 0xCCCCCCCCCCCCCCCDLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0x666666666666666)
    sub_2394189F8();
  if (0x999999999999999ALL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x999999999999999ALL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xCCCCCCCCCCCCCCCDLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x333333333333333)
    v5 = 0x666666666666666;
  else
    v5 = v4;
  if (v5 > 0x666666666666666)
    sub_239418A80();
  v7 = 40 * v5;
  v8 = (char *)operator new(40 * v5);
  v9 = &v8[40 * v3];
  v10 = &v8[v7];
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v9 = *(_OWORD *)a2;
  *((_OWORD *)v9 + 1) = v11;
  *((_QWORD *)v9 + 4) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  v12 = v9 + 40;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
    *a1 = v9;
    a1[1] = v12;
    a1[2] = v10;
    if (!v14)
      return v12;
    goto LABEL_18;
  }
  v15 = 0;
  do
  {
    v16 = &v9[v15];
    v17 = &v14[v15];
    *(_OWORD *)(v16 - 40) = *(_OWORD *)&v14[v15 - 40];
    *(_OWORD *)(v16 - 24) = *(_OWORD *)&v14[v15 - 24];
    *((_QWORD *)v16 - 1) = *(_QWORD *)&v14[v15 - 8];
    *((_QWORD *)v17 - 3) = 0;
    *((_QWORD *)v17 - 2) = 0;
    *((_QWORD *)v17 - 1) = 0;
    v15 -= 40;
  }
  while (&v14[v15] != v13);
  v18 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = &v9[v15];
  a1[1] = v12;
  a1[2] = v10;
  if (v14 != v18)
  {
    do
    {
      v19 = (void *)*((_QWORD *)v14 - 3);
      if (v19)
      {
        *((_QWORD *)v14 - 2) = v19;
        operator delete(v19);
      }
      v14 -= 40;
    }
    while (v14 != v18);
    v14 = v18;
  }
  if (v14)
LABEL_18:
    operator delete(v14);
  return v12;
}

void sub_2396F9994(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 11, a3, a4);
}

uint64_t sub_2396F999C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;
  _QWORD *v10;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  v3 = (_QWORD *)*a2;
  *(_QWORD *)(a1 + 48) = a2[2];
  *(_QWORD *)(a1 + 40) = a2[2];
  v4 = a2 + 1;
  if (v3 != a2 + 1)
  {
    do
    {
      v5 = v3[4];
      v10 = v3 + 4;
      sub_2395193BC(a1, v3 + 4, (uint64_t)&unk_239EC6E98, &v10)[3] = v5;
      v6 = (_QWORD *)v3[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v3[2];
          v8 = *v7 == (_QWORD)v3;
          v3 = v7;
        }
        while (!v8);
      }
      v3 = v7;
    }
    while (v7 != v4);
  }
  return a1;
}

void sub_2396F9A70(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = *(_QWORD **)(v1 + 16);
  if (v3)
  {
    do
    {
      v4 = (_QWORD *)*v3;
      operator delete(v3);
      v3 = v4;
    }
    while (v4);
  }
  sub_239EC1DC0((void **)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2396F9A9C(uint64_t a1, unint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v6;
  unint64_t *v7;

  v6 = a2;
  v7 = &v6;
  if (sub_2395193BC(a1, &v6, (uint64_t)&unk_239EC6E98, &v7)[3] != a2)
  {
    v7 = &v6;
    v3 = sub_2395193BC(a1, &v6, (uint64_t)&unk_239EC6E98, &v7);
    v4 = sub_2396F9A9C(a1, v3[3]);
    v7 = &v6;
    sub_2395193BC(a1, &v6, (uint64_t)&unk_239EC6E98, &v7)[3] = v4;
  }
  v7 = &v6;
  return sub_2395193BC(a1, &v6, (uint64_t)&unk_239EC6E98, &v7)[3];
}

BOOL sub_2396F9B74(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  unint64_t *v9;

  v5 = sub_2396F9A9C(a1, a2);
  v6 = sub_2396F9A9C(a1, a3);
  v8 = v6;
  if (v5 != v6)
  {
    v9 = &v8;
    sub_2395193BC(a1, &v8, (uint64_t)&unk_239EC6E98, &v9)[3] = v5;
    --*(_QWORD *)(a1 + 40);
  }
  return v5 != v6;
}

uint64_t sub_2396F9C04(uint64_t a1)
{
  return *(_QWORD *)(a1 + 40);
}

uint64_t sub_2396F9C0C(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int32x4_t **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int32x4_t *v20;
  unint64_t v21;
  int32x4_t v22;
  int32x4_t *v23;
  int32x4_t v24;
  int32x4_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  int v30;

  v5 = a3;
  v6 = a2;
  *(_QWORD *)a1 = a3;
  *(_QWORD *)(a1 + 8) = a2;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 64) = 1;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  v7 = a1 + 104;
  v28 = a1 + 128;
  v29 = a1 + 24;
  *(_OWORD *)(a1 + 152) = 0u;
  v8 = (int32x4_t **)(a1 + 152);
  v9 = a1 + 176;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_QWORD *)(a1 + 168) = 0;
  v10 = *(_QWORD *)(a4 + 24);
  if (!v10)
    goto LABEL_4;
  if (v10 != a4)
  {
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
LABEL_4:
    *(_QWORD *)(a1 + 200) = v10;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 200) = v9;
  (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a4 + 24) + 24))(*(_QWORD *)(a4 + 24), v9);
LABEL_6:
  *(_QWORD *)(a1 + 208) = 0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_BYTE *)(a1 + 232) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  v30 = 0;
  v11 = *(_QWORD *)(a1 + 24);
  v12 = (*(_QWORD *)(a1 + 32) - v11) >> 2;
  if (v6 <= v12)
  {
    if (v6 < v12)
      *(_QWORD *)(a1 + 32) = v11 + 4 * v6;
  }
  else
  {
    sub_23951A6E0(v29, v6 - v12, (const float *)&v30);
  }
  v30 = 0;
  v13 = *(_QWORD *)(a1 + 104);
  v14 = (*(_QWORD *)(a1 + 112) - v13) >> 2;
  if (v6 <= v14)
  {
    if (v6 < v14)
      *(_QWORD *)(a1 + 112) = v13 + 4 * v6;
  }
  else
  {
    sub_2394DE27C(v7, v6 - v14, (const float *)&v30);
  }
  v30 = -1;
  v15 = *(_QWORD *)(a1 + 128);
  v16 = (*(_QWORD *)(a1 + 136) - v15) >> 2;
  if (v6 <= v16)
  {
    if (v6 < v16)
      *(_QWORD *)(a1 + 136) = v15 + 4 * v6;
  }
  else
  {
    sub_2394DE27C(v28, v6 - v16, (const float *)&v30);
  }
  v30 = 0;
  v17 = *(_QWORD *)(a1 + 152);
  v18 = (*(_QWORD *)(a1 + 160) - v17) >> 2;
  if (v5 <= v18)
  {
    if (v5 < v18)
      *(_QWORD *)(a1 + 160) = v17 + 4 * v5;
  }
  else
  {
    sub_2394DE27C((uint64_t)v8, v5 - v18, (const float *)&v30);
  }
  v19 = *(_QWORD *)a1;
  if (*(_QWORD *)a1)
  {
    v20 = *v8;
    if (v19 >= 8)
    {
      v21 = v19 & 0xFFFFFFFFFFFFFFF8;
      v22 = (int32x4_t)xmmword_239EC6870;
      v23 = v20 + 1;
      v24.i64[0] = 0x400000004;
      v24.i64[1] = 0x400000004;
      v25.i64[0] = 0x800000008;
      v25.i64[1] = 0x800000008;
      v26 = v19 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v23[-1] = v22;
        *v23 = vaddq_s32(v22, v24);
        v22 = vaddq_s32(v22, v25);
        v23 += 2;
        v26 -= 8;
      }
      while (v26);
      goto LABEL_29;
    }
    v21 = 0;
    do
    {
      v20->i32[v21] = v21;
      ++v21;
LABEL_29:
      ;
    }
    while (v19 != v21);
  }
  return a1;
}

uint64_t **sub_2396F9F4C(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  if (*a1)
  {
    v3 = a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v6 = *(v3 - 3);
        v3 -= 3;
        v5 = v6;
        if (v6)
        {
          do
          {
            *v3 = *(_QWORD *)(v5 + 32);
            MEMORY[0x23B83E31C]();
            v5 = *v3;
          }
          while (*v3);
        }
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

_QWORD *sub_2396F9FD8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t *v14;
  uint64_t *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  void *v33;

  a1[4] = a1[3];
  a1[14] = a1[13];
  a1[17] = a1[16];
  a1[20] = a1[19];
  v2 = a1[33];
  if (v2)
  {
    v3 = a1[34];
    v4 = (void *)a1[33];
    if (v3 != v2)
    {
      v5 = a1[34];
      do
      {
        v7 = *(void **)(v5 - 24);
        v5 -= 24;
        v6 = v7;
        if (v7)
        {
          *(_QWORD *)(v3 - 16) = v6;
          operator delete(v6);
        }
        v3 = v5;
      }
      while (v5 != v2);
      v4 = (void *)a1[33];
    }
    a1[34] = v2;
    operator delete(v4);
  }
  v8 = a1[30];
  if (v8)
  {
    v9 = a1[31];
    v10 = (void *)a1[30];
    if (v9 != v8)
    {
      v11 = a1[31];
      do
      {
        v13 = *(void **)(v11 - 24);
        v11 -= 24;
        v12 = v13;
        if (v13)
        {
          *(_QWORD *)(v9 - 16) = v12;
          operator delete(v12);
        }
        v9 = v11;
      }
      while (v11 != v8);
      v10 = (void *)a1[30];
    }
    a1[31] = v8;
    operator delete(v10);
  }
  v14 = (uint64_t *)a1[26];
  if (v14)
  {
    v15 = (uint64_t *)a1[27];
    v16 = (void *)a1[26];
    if (v15 != v14)
    {
      do
      {
        v18 = *(v15 - 3);
        v15 -= 3;
        v17 = v18;
        if (v18)
        {
          do
          {
            *v15 = *(_QWORD *)(v17 + 32);
            MEMORY[0x23B83E31C]();
            v17 = *v15;
          }
          while (*v15);
        }
      }
      while (v15 != v14);
      v16 = (void *)a1[26];
    }
    a1[27] = v14;
    operator delete(v16);
  }
  v19 = (_QWORD *)a1[25];
  if (v19 == a1 + 22)
  {
    v20 = 4;
    v19 = a1 + 22;
  }
  else
  {
    if (!v19)
      goto LABEL_31;
    v20 = 5;
  }
  (*(void (**)(void))(*v19 + 8 * v20))();
LABEL_31:
  v21 = (void *)a1[19];
  if (v21)
  {
    a1[20] = v21;
    operator delete(v21);
  }
  v22 = (void *)a1[16];
  if (v22)
  {
    a1[17] = v22;
    operator delete(v22);
  }
  v23 = (void *)a1[13];
  if (v23)
  {
    a1[14] = v23;
    operator delete(v23);
  }
  v24 = (void *)a1[9];
  if (v24)
  {
    a1[10] = v24;
    operator delete(v24);
  }
  v25 = a1[7];
  a1[7] = 0;
  if (v25)
  {
    v26 = *(std::__shared_weak_count **)(v25 + 24);
    if (v26)
    {
      p_shared_owners = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(p_shared_owners);
      while (__stlxr(v28 - 1, p_shared_owners));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    MEMORY[0x23B83E31C](v25, 0x10E0C4033E2FC60);
  }
  v29 = a1[6];
  a1[6] = 0;
  if (v29)
  {
    v30 = *(std::__shared_weak_count **)(v29 + 24);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    MEMORY[0x23B83E31C](v29, 0x10E0C4033E2FC60);
  }
  v33 = (void *)a1[3];
  if (v33)
  {
    a1[4] = v33;
    operator delete(v33);
  }
  return a1;
}

void sub_2396FA254(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float (*v14)(uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  float v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  float v26;
  uint64_t v27;
  float v28;
  float v29;
  float v30;
  float v31;
  uint64_t v32;
  std::__shared_weak_count *v33;

  if (a2)
  {
    v9 = 0;
    v10 = a2;
    v11 = *a5;
    do
    {
      v12 = *(_QWORD *)(a1 + 48);
      v13 = *(unsigned int *)(v11 + 4 * v9);
      v14 = *(float (**)(uint64_t, uint64_t, uint64_t, uint64_t *))v12;
      v15 = *(unsigned int *)(v12 + 8);
      v17 = *(_QWORD *)(v12 + 16);
      v16 = *(std::__shared_weak_count **)(v12 + 24);
      v32 = v17;
      v33 = v16;
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
      }
      v22 = v14(v13, a3, v15, &v32);
      v23 = v33;
      if (v33)
      {
        v24 = (unint64_t *)&v33->__shared_owners_;
        do
          v25 = __ldaxr(v24);
        while (__stlxr(v25 - 1, v24));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      v11 = *a5;
      v26 = *(float *)(*(_QWORD *)(a1 + 24) + 4 * *(unsigned int *)(*a5 + 4 * v9));
      *(float *)(a1 + 288) = v26 + *(float *)(a1 + 288);
      if (*(_DWORD *)(a4 + 56) <= v9)
        sub_239EC1C74(v20, v21);
      v27 = *(_QWORD *)a4 + 32 * v9;
      v28 = *(float *)(v27 + 16);
      if (v28 <= 0.0)
        v29 = -0.0;
      else
        v29 = *(float *)(v27 + 16);
      v30 = v26 + v29;
      if (v28 > 0.0)
        v28 = 0.0;
      v31 = v22 - v28;
      *(float *)(v27 + 16) = v30 - v31;
      if (v30 >= v31)
        v30 = v31;
      *(float *)(a4 + 72) = *(float *)(a4 + 72) + v30;
      ++v9;
    }
    while (v9 != v10);
  }
}

void sub_2396FA3B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_239EBF904(a10);
  _Unwind_Resume(exception_object);
}

void sub_2396FA3C8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  char *v12;
  uint64_t v13;
  char **v14;
  char *v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  float (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  float v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  float (*v33)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  float v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  float (*v45)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  float v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  float (*v59)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v60;
  std::__shared_weak_count *v61;
  uint64_t v62;
  unint64_t *v63;
  unint64_t v64;
  float v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  float (*v71)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v72;
  std::__shared_weak_count *v73;
  uint64_t v74;
  unint64_t *p_shared_owners;
  unint64_t v76;
  float v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  float (*v85)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v86;
  std::__shared_weak_count *v87;
  uint64_t v88;
  unint64_t *v89;
  unint64_t v90;
  float v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  float v95;
  float v96;
  float v97;
  uint64_t v98;
  float v99;
  float v100;
  float v101;
  float v102;
  void *__p;
  void *v105;
  uint64_t v106;
  void *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  std::__shared_weak_count *v111;

  v107 = 0;
  v108 = 0;
  v109 = 0;
  __p = 0;
  v105 = 0;
  v106 = 0;
  if (a2)
  {
    v8 = a2;
    do
    {
      --v8;
      if (*(_QWORD *)(a1 + 72) == *(_QWORD *)(a1 + 80))
      {
        v108 = v107;
        v105 = __p;
      }
      else
      {
        v9 = *(unsigned int *)(*a5 + 4 * v8);
        v10 = *(_QWORD *)(a1 + 240);
        v11 = (char **)(v10 + 24 * v9);
        if (v11 != (char **)&v107)
        {
          v12 = *(char **)(v10 + 24 * v9 + 8);
          sub_23942156C(&v107, *v11, v12, (v12 - *v11) >> 2);
        }
        v13 = *(_QWORD *)(a1 + 264);
        v14 = (char **)(v13 + 24 * v9);
        if (v14 != (char **)&__p)
        {
          v15 = *(char **)(v13 + 24 * v9 + 8);
          sub_23942156C(&__p, *v14, v15, (v15 - *v14) >> 2);
        }
        v16 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8 * v9);
        if (v16)
        {
          for (i = 0; i != v16; ++i)
          {
            v18 = *((unsigned int *)v107 + i);
            v19 = *(_DWORD *)(*(_QWORD *)(a1 + 128) + 4 * v18);
            if (v19 == -1)
            {
              v69 = *(_QWORD *)(a1 + 56);
              v70 = *(unsigned int *)(*(_QWORD *)(a1 + 104) + 4 * v18);
              v71 = *(float (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))v69;
              v72 = *(unsigned int *)(v69 + 8);
              v74 = *(_QWORD *)(v69 + 16);
              v73 = *(std::__shared_weak_count **)(v69 + 24);
              v110 = v74;
              v111 = v73;
              if (v73)
              {
                p_shared_owners = (unint64_t *)&v73->__shared_owners_;
                do
                  v76 = __ldxr(p_shared_owners);
                while (__stxr(v76 + 1, p_shared_owners));
              }
              v77 = v71(v9, v18, a3, v70, v72, &v110);
              v78 = v111;
              if (v111)
              {
                v79 = (unint64_t *)&v111->__shared_owners_;
                do
                  v80 = __ldaxr(v79);
                while (__stlxr(v80 - 1, v79));
                if (!v80)
                {
                  ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
                  std::__shared_weak_count::__release_weak(v78);
                }
              }
              v81 = *(_QWORD *)(a1 + 56);
              v82 = *(_QWORD *)(a1 + 104);
              v83 = *(unsigned int *)(v82 + 4 * v9);
              v84 = *(unsigned int *)(v82 + 4 * v18);
              v85 = *(float (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))v81;
              v86 = *(unsigned int *)(v81 + 8);
              v88 = *(_QWORD *)(v81 + 16);
              v87 = *(std::__shared_weak_count **)(v81 + 24);
              v110 = v88;
              v111 = v87;
              if (v87)
              {
                v89 = (unint64_t *)&v87->__shared_owners_;
                do
                  v90 = __ldxr(v89);
                while (__stxr(v90 + 1, v89));
              }
              v91 = v85(v9, v18, v83, v84, v86, &v110);
              v92 = v111;
              if (v111)
              {
                v93 = (unint64_t *)&v111->__shared_owners_;
                do
                  v94 = __ldaxr(v93);
                while (__stlxr(v94 - 1, v93));
                if (!v94)
                {
                  ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
                  std::__shared_weak_count::__release_weak(v92);
                }
              }
              v95 = *((float *)__p + i);
              v96 = v91 * v95;
              *(float *)(a1 + 288) = (float)(v91 * v95) + *(float *)(a1 + 288);
              if (*(_DWORD *)(a4 + 56) <= v8)
              {
                sub_239A444D4((uint64_t)"unknown file", 11, (uint64_t)"", (void (*)(void *))sub_239A4463C);
                sub_239A4475C();
                abort();
              }
              v97 = v77 * v95;
              v98 = *(_QWORD *)a4 + 32 * v8;
              v99 = *(float *)(v98 + 16);
              if (v99 <= 0.0)
                v100 = -0.0;
              else
                v100 = *(float *)(v98 + 16);
              v101 = v96 + v100;
              if (v99 > 0.0)
                v99 = 0.0;
              v102 = v97 - v99;
              *(float *)(v98 + 16) = v101 - v102;
              if (v101 >= v102)
                v101 = v102;
              *(float *)(a4 + 72) = *(float *)(a4 + 72) + v101;
            }
            else if (v18 < v9)
            {
              v20 = *(_QWORD *)(a1 + 56);
              v21 = *(float (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))v20;
              v22 = *(unsigned int *)(v20 + 8);
              v24 = *(_QWORD *)(v20 + 16);
              v23 = *(std::__shared_weak_count **)(v20 + 24);
              v110 = v24;
              v111 = v23;
              if (v23)
              {
                v25 = (unint64_t *)&v23->__shared_owners_;
                do
                  v26 = __ldxr(v25);
                while (__stxr(v26 + 1, v25));
              }
              v27 = v21(v9, v18, a3, a3, v22, &v110);
              v28 = v111;
              if (v111)
              {
                v29 = (unint64_t *)&v111->__shared_owners_;
                do
                  v30 = __ldaxr(v29);
                while (__stlxr(v30 - 1, v29));
                if (!v30)
                {
                  ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
                  std::__shared_weak_count::__release_weak(v28);
                }
              }
              v31 = *(_QWORD *)(a1 + 56);
              v32 = *(unsigned int *)(*(_QWORD *)(a1 + 104) + 4 * v18);
              v33 = *(float (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))v31;
              v34 = *(unsigned int *)(v31 + 8);
              v36 = *(_QWORD *)(v31 + 16);
              v35 = *(std::__shared_weak_count **)(v31 + 24);
              v110 = v36;
              v111 = v35;
              if (v35)
              {
                v37 = (unint64_t *)&v35->__shared_owners_;
                do
                  v38 = __ldxr(v37);
                while (__stxr(v38 + 1, v37));
              }
              v39 = v33(v9, v18, a3, v32, v34, &v110);
              v40 = v111;
              if (v111)
              {
                v41 = (unint64_t *)&v111->__shared_owners_;
                do
                  v42 = __ldaxr(v41);
                while (__stlxr(v42 - 1, v41));
                if (!v42)
                {
                  ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
                  std::__shared_weak_count::__release_weak(v40);
                }
              }
              v43 = *(_QWORD *)(a1 + 56);
              v44 = *(unsigned int *)(*(_QWORD *)(a1 + 104) + 4 * v9);
              v45 = *(float (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))v43;
              v46 = *(unsigned int *)(v43 + 8);
              v48 = *(_QWORD *)(v43 + 16);
              v47 = *(std::__shared_weak_count **)(v43 + 24);
              v110 = v48;
              v111 = v47;
              if (v47)
              {
                v49 = (unint64_t *)&v47->__shared_owners_;
                do
                  v50 = __ldxr(v49);
                while (__stxr(v50 + 1, v49));
              }
              v51 = v45(v9, v18, v44, a3, v46, &v110);
              v52 = v111;
              if (v111)
              {
                v53 = (unint64_t *)&v111->__shared_owners_;
                do
                  v54 = __ldaxr(v53);
                while (__stlxr(v54 - 1, v53));
                if (!v54)
                {
                  ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
                  std::__shared_weak_count::__release_weak(v52);
                }
              }
              v55 = *(_QWORD *)(a1 + 56);
              v56 = *(_QWORD *)(a1 + 104);
              v57 = *(unsigned int *)(v56 + 4 * v9);
              v58 = *(unsigned int *)(v56 + 4 * v18);
              v59 = *(float (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))v55;
              v60 = *(unsigned int *)(v55 + 8);
              v62 = *(_QWORD *)(v55 + 16);
              v61 = *(std::__shared_weak_count **)(v55 + 24);
              v110 = v62;
              v111 = v61;
              if (v61)
              {
                v63 = (unint64_t *)&v61->__shared_owners_;
                do
                  v64 = __ldxr(v63);
                while (__stxr(v64 + 1, v63));
              }
              v65 = v59(v9, v18, v57, v58, v60, &v110);
              v66 = v111;
              if (v111)
              {
                v67 = (unint64_t *)&v111->__shared_owners_;
                do
                  v68 = __ldaxr(v67);
                while (__stlxr(v68 - 1, v67));
                if (!v68)
                {
                  ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
                  std::__shared_weak_count::__release_weak(v66);
                }
              }
              sub_2396FA9A4(a1, a4, v8, v19, v27, v39, v51, v65, *((float *)__p + i));
            }
          }
        }
      }
    }
    while (v8);
    if (__p)
    {
      v105 = __p;
      operator delete(__p);
    }
    if (v107)
    {
      v108 = v107;
      operator delete(v107);
    }
  }
}

void sub_2396FA93C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17)
{
  void *v18;

  if (__p)
  {
    operator delete(__p);
    v18 = a14;
    if (!a14)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v18 = a14;
    if (!a14)
      goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2396FA9A4(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, float a5, float a6, float a7, float a8, float a9)
{
  float v9;
  unsigned int v10;
  float v11;
  float v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  float v16;
  float v17;
  float v18;
  BOOL v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float v27;
  float v28;
  float v29;
  uint64_t v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  uint64_t v38;
  float v39;
  float v40;
  float v41;

  v9 = a8 * a9;
  *(float *)(a1 + 288) = v9 + *(float *)(a1 + 288);
  v10 = *(_DWORD *)(a2 + 56);
  if (v10 <= a3)
    sub_239EC1C74(a1, a2);
  v11 = a7 * a9;
  v12 = a6 * a9;
  v13 = *(_QWORD *)a2;
  v14 = *(_QWORD *)a2 + 32 * a3;
  v16 = *(float *)(v14 + 16);
  v15 = (float *)(v14 + 16);
  v17 = v16;
  v18 = a5 * a9;
  v19 = v16 <= 0.0;
  v20 = -0.0;
  if (v16 > 0.0)
    v20 = v17;
  v21 = v9 + v20;
  if (!v19)
    v17 = 0.0;
  v22 = v18 - v17;
  v23 = v21 - v22;
  *v15 = v21 - v22;
  if (v21 < v22)
    v22 = v21;
  v24 = *(float *)(a2 + 72) + v22;
  *(float *)(a2 + 72) = v24;
  v25 = v12 - v18;
  v26 = v11 - v9;
  if (v25 < 0.0)
  {
    v27 = v23 + 0.0;
    if (v23 > 0.0)
      v23 = 0.0;
    else
      v27 = 0.0;
    v28 = v25 - v23;
    *v15 = v27 - v28;
    if (v27 >= v28)
      v27 = v28;
    v29 = v24 + v27;
    *(float *)(a2 + 72) = v29;
    if (v10 <= a4)
      sub_239EC1C74(a1, a2);
    v30 = v13 + 32 * a4;
    v31 = *(float *)(v30 + 16);
    v32 = v31 + 0.0;
    if (v31 > 0.0)
      v31 = 0.0;
    else
      v32 = 0.0;
    v33 = (float)-v25 - v31;
    *(float *)(v30 + 16) = v32 - v33;
    if (v32 < v33)
      v33 = v32;
    *(float *)(a2 + 72) = v29 + v33;
    v26 = v25 + v26;
    v25 = 0.0;
    return sub_2396F9274((uint64_t *)a2, a3, a4, v25, v26);
  }
  if (v26 >= 0.0)
    return sub_2396F9274((uint64_t *)a2, a3, a4, v25, v26);
  v34 = 0.0;
  v35 = v23 + 0.0;
  if (v23 > 0.0)
    v23 = 0.0;
  else
    v35 = 0.0;
  v36 = (float)-v26 - v23;
  *v15 = v35 - v36;
  if (v35 < v36)
    v36 = v35;
  v37 = v24 + v36;
  *(float *)(a2 + 72) = v37;
  if (v10 <= a4)
    sub_239EC1C74(a1, a2);
  v38 = v13 + 32 * a4;
  v39 = *(float *)(v38 + 16);
  v40 = v39 + 0.0;
  if (v39 <= 0.0)
  {
    v40 = 0.0;
    v34 = *(float *)(v38 + 16);
  }
  v41 = v26 - v34;
  *(float *)(v38 + 16) = v40 - v41;
  if (v40 < v41)
    v41 = v40;
  *(float *)(a2 + 72) = v37 + v41;
  return sub_2396F9274((uint64_t *)a2, a3, a4, v25 + v26, 0.0);
}

void sub_2396FAB60(uint64_t a1, _QWORD *a2, _QWORD *a3, unsigned int a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float (*v13)(uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  float v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  std::__shared_weak_count *v24;

  if (a4)
  {
    v9 = 0;
    v10 = a4;
    do
    {
      if (*(int *)(*a2 + 32 * v9 + 20) >= 1)
      {
        v11 = *(unsigned int *)(*a3 + 4 * v9);
        *(_DWORD *)(*(_QWORD *)(a1 + 104) + 4 * v11) = a5;
        v12 = *(_QWORD *)(a1 + 48);
        v13 = *(float (**)(uint64_t, uint64_t, uint64_t, uint64_t *))v12;
        v14 = *(unsigned int *)(v12 + 8);
        v16 = *(_QWORD *)(v12 + 16);
        v15 = *(std::__shared_weak_count **)(v12 + 24);
        v23 = v16;
        v24 = v15;
        if (v15)
        {
          p_shared_owners = (unint64_t *)&v15->__shared_owners_;
          do
            v18 = __ldxr(p_shared_owners);
          while (__stxr(v18 + 1, p_shared_owners));
        }
        v19 = v13(v11, a5, v14, &v23);
        v20 = v24;
        if (v24)
        {
          v21 = (unint64_t *)&v24->__shared_owners_;
          do
            v22 = __ldaxr(v21);
          while (__stlxr(v22 - 1, v21));
          if (!v22)
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
        }
        *(float *)(*(_QWORD *)(a1 + 24) + 4 * v11) = v19;
      }
      ++v9;
    }
    while (v9 != v10);
  }
  *(_BYTE *)(a1 + 64) = 1;
}

void sub_2396FAC7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_239EBF904(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2396FAC94(uint64_t result, int a2, int a3, float a4)
{
  _QWORD *v7;
  char **v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  int v19;

  if (!*(_BYTE *)(result + 232))
  {
    v7 = (_QWORD *)result;
    v8 = (char **)(result + 208);
    if (*(_QWORD *)(result + 208) == *(_QWORD *)(result + 216))
    {
      sub_2396FAEA0(result + 208, *(_QWORD *)(result + 8));
      if (v7[1])
      {
        v9 = 0;
        do
        {
          v18 = 0;
          LOWORD(v19) = 4;
          v10 = v7[27];
          if (v10 >= v7[28])
          {
            v7[27] = sub_2396FC12C(v8, (uint64_t)&v18);
          }
          else
          {
            *(_QWORD *)v10 = 0;
            *(_QWORD *)(v10 + 8) = 0;
            *(_DWORD *)(v10 + 16) = v19;
            v7[27] = v10 + 24;
          }
          while (v18)
          {
            v18 = *(_QWORD *)(v18 + 32);
            MEMORY[0x23B83E31C]();
          }
          ++v9;
        }
        while (v9 < v7[1]);
      }
    }
    v11 = operator new();
    *(float *)(v11 + 4) = a4;
    *(_DWORD *)v11 = a3;
    v12 = (uint64_t)&(*v8)[24 * a2];
    v13 = *(_WORD *)(v12 + 16);
    if (v13 == 4)
    {
      v14 = operator new();
      v13 = 0;
      *(_QWORD *)(v14 + 32) = *(_QWORD *)v12;
      *(_QWORD *)v12 = v14;
    }
    else
    {
      v14 = *(_QWORD *)v12;
    }
    *(_QWORD *)(v14 + 8 * v13) = v11;
    *(_WORD *)(v12 + 16) = v13 + 1;
    v15 = operator new();
    *(float *)(v15 + 4) = a4;
    *(_DWORD *)v15 = a2;
    v16 = (uint64_t)&(*v8)[24 * a3];
    v17 = *(_WORD *)(v16 + 16);
    if (v17 == 4)
    {
      result = operator new();
      v17 = 0;
      *(_QWORD *)(result + 32) = *(_QWORD *)v16;
      *(_QWORD *)v16 = result;
    }
    else
    {
      result = *(_QWORD *)v16;
    }
    *(_QWORD *)(result + 8 * v17) = v15;
    *(_WORD *)(v16 + 16) = v17 + 1;
  }
  return result;
}

void sub_2396FAE84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_239EC1DE4(a10, &a10);
  _Unwind_Resume(exception_object);
}

void sub_2396FAEA0(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(char **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      sub_2394189F8();
    v4 = *(char **)(a1 + 8);
    v5 = 24 * a2;
    v6 = (char *)operator new(24 * a2);
    v7 = &v6[v5];
    v8 = &v6[v4 - v2];
    if (v4 == v2)
    {
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
    }
    else
    {
      v9 = &v6[v4 - v2];
      v10 = v4;
      do
      {
        *((_QWORD *)v9 - 3) = 0;
        *((_QWORD *)v9 - 2) = 0;
        v9 -= 24;
        *((_DWORD *)v9 + 4) = *((_DWORD *)v10 - 2);
        v10 -= 24;
      }
      while (v10 != v2);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      while (v4 != v2)
      {
        v12 = *((_QWORD *)v4 - 3);
        v4 -= 24;
        v11 = v12;
        if (v12)
        {
          do
          {
            *(_QWORD *)v4 = *(_QWORD *)(v11 + 32);
            MEMORY[0x23B83E31C]();
            v11 = *(_QWORD *)v4;
          }
          while (*(_QWORD *)v4);
        }
      }
    }
    if (v2)
      operator delete(v2);
  }
}

void sub_2396FAFAC(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  std::__shared_weak_count *v33;

  v8 = *(_QWORD *)(a1 + 48);
  if (v8)
  {
    *(_QWORD *)(a1 + 48) = 0;
    v9 = *(std::__shared_weak_count **)(v8 + 24);
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    MEMORY[0x23B83E31C](v8, 0x10E0C4033E2FC60);
  }
  v12 = *a4;
  v13 = (std::__shared_weak_count *)a4[1];
  v29 = v13;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
    v30 = a2;
    v31 = a3;
    v32 = v12;
    v33 = v13;
    do
      v16 = __ldxr(v14);
    while (__stxr(v16 + 1, v14));
  }
  else
  {
    v30 = a2;
    v31 = a3;
    v32 = *a4;
    v33 = 0;
  }
  v17 = operator new();
  *(_QWORD *)v17 = v30;
  *(_DWORD *)(v17 + 8) = v31;
  v18 = v33;
  *(_QWORD *)(v17 + 16) = v32;
  *(_QWORD *)(v17 + 24) = v33;
  if (v33)
  {
    v19 = (unint64_t *)&v33->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v17;
  if (v21)
  {
    v22 = *(std::__shared_weak_count **)(v21 + 24);
    if (v22)
    {
      v23 = (unint64_t *)&v22->__shared_owners_;
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    MEMORY[0x23B83E31C](v21, 0x10E0C4033E2FC60);
    v18 = v33;
  }
  if (v18)
  {
    v25 = (unint64_t *)&v18->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (v29)
  {
    v27 = (unint64_t *)&v29->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  *(_BYTE *)(a1 + 64) = 1;
}

void sub_2396FB1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239520518((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2396FB1CC(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  std::__shared_weak_count *v33;

  v8 = *(_QWORD *)(a1 + 56);
  if (v8)
  {
    *(_QWORD *)(a1 + 56) = 0;
    v9 = *(std::__shared_weak_count **)(v8 + 24);
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    MEMORY[0x23B83E31C](v8, 0x10E0C4033E2FC60);
  }
  v12 = *a4;
  v13 = (std::__shared_weak_count *)a4[1];
  v29 = v13;
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
    v30 = a2;
    v31 = a3;
    v32 = v12;
    v33 = v13;
    do
      v16 = __ldxr(v14);
    while (__stxr(v16 + 1, v14));
  }
  else
  {
    v30 = a2;
    v31 = a3;
    v32 = *a4;
    v33 = 0;
  }
  v17 = operator new();
  *(_QWORD *)v17 = v30;
  *(_DWORD *)(v17 + 8) = v31;
  v18 = v33;
  *(_QWORD *)(v17 + 16) = v32;
  *(_QWORD *)(v17 + 24) = v33;
  if (v33)
  {
    v19 = (unint64_t *)&v33->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v17;
  if (v21)
  {
    v22 = *(std::__shared_weak_count **)(v21 + 24);
    if (v22)
    {
      v23 = (unint64_t *)&v22->__shared_owners_;
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    MEMORY[0x23B83E31C](v21, 0x10E0C4033E2FC60);
    v18 = v33;
  }
  if (v18)
  {
    v25 = (unint64_t *)&v18->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (v29)
  {
    v27 = (unint64_t *)&v29->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  *(_BYTE *)(a1 + 64) = 1;
}

void sub_2396FB3D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239520518((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2396FB3EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float (*v8)(unint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  float v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  if (*(_BYTE *)(a1 + 64))
  {
    v4 = *(_QWORD *)(a1 + 24);
    v2 = a1 + 24;
    v3 = v4;
    *(_BYTE *)(v2 + 40) = 0;
    if (v4 == *(_QWORD *)(v2 + 8))
    {
      *(_QWORD *)(a1 + 32) = v3;
      v18 = *(_QWORD *)(a1 + 8);
      LODWORD(v19) = 0;
      if (v18)
        sub_23951A6E0(v2, v18, (const float *)&v19);
    }
    else if (*(_QWORD *)(a1 + 8))
    {
      v5 = 0;
      do
      {
        v6 = *(_QWORD *)(a1 + 48);
        v7 = *(unsigned int *)(*(_QWORD *)(a1 + 104) + 4 * v5);
        v8 = *(float (**)(unint64_t, uint64_t, uint64_t, uint64_t *))v6;
        v9 = *(unsigned int *)(v6 + 8);
        v11 = *(_QWORD *)(v6 + 16);
        v10 = *(std::__shared_weak_count **)(v6 + 24);
        v19 = v11;
        v20 = v10;
        if (v10)
        {
          p_shared_owners = (unint64_t *)&v10->__shared_owners_;
          do
            v13 = __ldxr(p_shared_owners);
          while (__stxr(v13 + 1, p_shared_owners));
        }
        v14 = v8(v5, v7, v9, &v19);
        v15 = v20;
        if (v20)
        {
          v16 = (unint64_t *)&v20->__shared_owners_;
          do
            v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }
        *(float *)(*(_QWORD *)(a1 + 24) + 4 * v5++) = v14;
      }
      while (v5 < *(_QWORD *)(a1 + 8));
    }
  }
}

void sub_2396FB4FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_239EBF904(a10);
  _Unwind_Resume(exception_object);
}

void sub_2396FB514(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _WORD *v39;
  uint64_t v40;
  _DWORD *v41;
  int v42;
  int v43;
  unint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  _DWORD *v52;
  uint64_t v53;
  unint64_t v54;
  __int128 *v55;
  _OWORD *v56;
  __int128 *v57;
  _OWORD *v58;
  unint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *__p;
  void *v68;
  uint64_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;

  if (!*(_BYTE *)(a1 + 232))
  {
    *(_BYTE *)(a1 + 232) = 1;
    v73 = 0;
    v74 = 0;
    v75 = 0;
    v2 = *(_QWORD *)(a1 + 8);
    LODWORD(v70) = 0;
    if (v2)
    {
      sub_23951A6E0((uint64_t)&v73, v2, (const float *)&v70);
      v3 = *(_QWORD *)(a1 + 8);
      v70 = 0;
      v71 = 0;
      v72 = 0;
      LODWORD(__p) = 0;
      if (v3)
      {
        sub_2394DE27C((uint64_t)&v70, v3, (const float *)&__p);
        v4 = *(_QWORD *)(a1 + 8);
      }
      else
      {
        v4 = 0;
      }
    }
    else
    {
      v4 = 0;
      v70 = 0;
      v71 = 0;
      v72 = 0;
    }
    v5 = *(_QWORD *)(a1 + 72);
    v6 = *(_QWORD *)(a1 + 80);
    v7 = (uint64_t *)(a1 + 72);
    __p = 0;
    v8 = (v6 - v5) >> 3;
    if (v4 <= v8)
    {
      if (v4 < v8)
        *(_QWORD *)(a1 + 80) = v5 + 8 * v4;
    }
    else
    {
      sub_2396DA790(a1 + 72, v4 - v8, (uint64_t *)&__p);
      v4 = *(_QWORD *)(a1 + 8);
    }
    v10 = *(_QWORD *)(a1 + 240);
    v9 = *(_QWORD *)(a1 + 248);
    __p = 0;
    v68 = 0;
    v69 = 0;
    v11 = 0xAAAAAAAAAAAAAAABLL * ((v9 - v10) >> 3);
    if (v4 <= v11)
    {
      if (v4 < v11)
      {
        v12 = v10 + 24 * v4;
        if (v9 != v12)
        {
          v13 = v9;
          do
          {
            v15 = *(void **)(v13 - 24);
            v13 -= 24;
            v14 = v15;
            if (v15)
            {
              *(_QWORD *)(v9 - 16) = v14;
              operator delete(v14);
            }
            v9 = v13;
          }
          while (v13 != v12);
        }
        *(_QWORD *)(a1 + 248) = v12;
      }
    }
    else
    {
      sub_23942D308((char **)(a1 + 240), v4 - v11, (uint64_t)&__p);
    }
    if (__p)
    {
      v68 = __p;
      operator delete(__p);
    }
    v16 = (_QWORD *)(a1 + 264);
    v17 = *(_QWORD *)(a1 + 8);
    __p = 0;
    v68 = 0;
    v69 = 0;
    v19 = *(_QWORD *)(a1 + 264);
    v18 = *(_QWORD *)(a1 + 272);
    v20 = 0xAAAAAAAAAAAAAAABLL * ((v18 - v19) >> 3);
    if (v17 <= v20)
    {
      if (v17 < v20)
      {
        v21 = v19 + 24 * v17;
        if (v18 != v21)
        {
          v22 = *(_QWORD *)(a1 + 272);
          do
          {
            v24 = *(void **)(v22 - 24);
            v22 -= 24;
            v23 = v24;
            if (v24)
            {
              *(_QWORD *)(v18 - 16) = v23;
              operator delete(v23);
            }
            v18 = v22;
          }
          while (v22 != v21);
        }
        *(_QWORD *)(a1 + 272) = v21;
      }
    }
    else
    {
      sub_2396FC298((char **)(a1 + 264), v17 - v20, (uint64_t)&__p);
    }
    if (__p)
    {
      v68 = __p;
      operator delete(__p);
    }
    v25 = *(uint64_t **)(a1 + 208);
    v26 = *(uint64_t **)(a1 + 216);
    v27 = *(_QWORD *)(a1 + 8);
    if (v25 == v26)
    {
      if (v27)
      {
        v65 = 0;
        v66 = *v7;
        do
          *(_QWORD *)(v66 + 8 * v65++) = 0;
        while (v65 < *(_QWORD *)(a1 + 8));
      }
    }
    else
    {
      if (v27)
      {
        v28 = 0;
        while (1)
        {
          v29 = *(_QWORD *)(a1 + 208);
          v30 = *(_QWORD *)(v29 + 24 * v28);
          if (!v30)
          {
            *(_QWORD *)(*v7 + 8 * v28) = 0;
            goto LABEL_37;
          }
          v31 = 0;
          v32 = 0;
          v33 = v29 + 24 * v28;
          *(_QWORD *)(v33 + 8) = v30;
          v34 = v33 + 8;
          *(_WORD *)(v34 + 10) = 0;
          do
          {
            v37 = v32;
            v38 = v29 + 24 * v28;
            v40 = *(__int16 *)(v38 + 18);
            v39 = (_WORD *)(v38 + 18);
            v41 = *(_DWORD **)(v30 + 8 * v40);
            v42 = (__int16)(v40 + 1);
            *v39 = v40 + 1;
            if (v30 == *(_QWORD *)(v29 + 24 * v28))
            {
              v43 = *(__int16 *)(v29 + 24 * v28 + 16);
              if (v42 == 4 || v42 >= v43)
              {
LABEL_40:
                *(_QWORD *)v34 = *(_QWORD *)(v30 + 32);
                *v39 = 0;
              }
            }
            else if (v42 == 4)
            {
              goto LABEL_40;
            }
            *(_DWORD *)((char *)v70 + v31) = *v41;
            *(_DWORD *)((char *)v73 + v31) = v41[1];
            MEMORY[0x23B83E31C]();
            v29 = *(_QWORD *)(a1 + 208);
            v35 = v29 + 24 * v28;
            v36 = *(_QWORD *)(v35 + 8);
            v34 = v35 + 8;
            v30 = v36;
            --v32;
            v31 += 4;
          }
          while (v36);
          v45 = 1 - v37;
          *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8 * v28) = 1 - v37;
          *(_QWORD *)(a1 + 96) -= v32;
          v46 = (_QWORD *)(*(_QWORD *)(a1 + 240) + 24 * v28);
          LODWORD(__p) = 0;
          v47 = (uint64_t)(v46[1] - *v46) >> 2;
          if (v47 >= 1 - v37)
          {
            if (v47 > -v32)
              v46[1] = *v46 + v31;
          }
          else
          {
            sub_2394DE27C((uint64_t)v46, 1 - v37 - v47, (const float *)&__p);
          }
          v48 = (_QWORD *)(*v16 + 24 * v28);
          LODWORD(__p) = 0;
          v49 = (uint64_t)(v48[1] - *v48) >> 2;
          if (v49 < v45)
          {
            sub_23951A6E0((uint64_t)v48, -(uint64_t)(v49 + v32), (const float *)&__p);
            goto LABEL_60;
          }
          if (v49 > v45)
            v48[1] = *v48 + v31;
          if (v37 != 1)
          {
LABEL_60:
            v50 = *(_QWORD *)(*(_QWORD *)(a1 + 240) + 24 * v28);
            v51 = v70;
            v52 = v73;
            v53 = *(_QWORD *)(*v16 + 24 * v28);
            if (v45 < 8)
            {
              v54 = 0;
              goto LABEL_67;
            }
            v54 = 0;
            if ((unint64_t)(v50 - (_QWORD)v70) < 0x20)
              goto LABEL_86;
            if ((unint64_t)(v53 - (_QWORD)v73) < 0x20)
              goto LABEL_86;
            v54 = v45 & 0xFFFFFFFFFFFFFFF8;
            v55 = (__int128 *)((char *)v70 + 16);
            v56 = (_OWORD *)(v50 + 16);
            v57 = (__int128 *)((char *)v73 + 16);
            v58 = (_OWORD *)(v53 + 16);
            v59 = (1 - v37) & 0xFFFFFFFFFFFFFFF8;
            do
            {
              v60 = *v55;
              *(v56 - 1) = *(v55 - 1);
              *v56 = v60;
              v61 = *v57;
              v55 += 2;
              *(v58 - 1) = *(v57 - 1);
              *v58 = v61;
              v56 += 2;
              v57 += 2;
              v58 += 2;
              v59 -= 8;
            }
            while (v59);
            if (v45 != v54)
            {
LABEL_86:
              do
              {
LABEL_67:
                v62 = 4 * v54;
                *(_DWORD *)(v50 + v62) = v51[v54];
                *(_DWORD *)(v53 + v62) = v52[v54++];
              }
              while (v37 + v54 != 1);
            }
          }
LABEL_37:
          if ((unint64_t)++v28 >= *(_QWORD *)(a1 + 8))
          {
            v25 = *(uint64_t **)(a1 + 208);
            v26 = *(uint64_t **)(a1 + 216);
            break;
          }
        }
      }
      if (v25 != v26)
      {
        do
        {
          v64 = *(v26 - 3);
          v26 -= 3;
          v63 = v64;
          if (v64)
          {
            do
            {
              *v26 = *(_QWORD *)(v63 + 32);
              MEMORY[0x23B83E31C]();
              v63 = *v26;
            }
            while (*v26);
          }
        }
        while (v26 != v25);
        *(_QWORD *)(a1 + 216) = v25;
      }
    }
    if (v70)
    {
      v71 = v70;
      operator delete(v70);
    }
    if (v73)
    {
      v74 = v73;
      operator delete(v73);
    }
  }
}

void sub_2396FBA1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  void *v17;

  if (__p)
  {
    operator delete(__p);
    v17 = a16;
    if (a16)
    {
LABEL_6:
      operator delete(v17);
      _Unwind_Resume(exception_object);
    }
  }
  else
  {
    v17 = a16;
    if (a16)
      goto LABEL_6;
  }
  _Unwind_Resume(exception_object);
}

float sub_2396FBAA0(_QWORD *a1)
{
  float v2;
  unint64_t v3;
  uint64_t v4;
  char **v5;
  char *v6;
  uint64_t v7;
  char **v8;
  char *v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  float v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float (*v18)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  float v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  float v32;
  float *v33;
  unint64_t v34;
  uint64_t v35;
  float *v36;
  float v37;
  void *__p;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;

  sub_2396FB514((uint64_t)a1);
  v42 = 0;
  v43 = 0;
  v44 = 0;
  __p = 0;
  v40 = 0;
  v41 = 0;
  v2 = 0.0;
  if (a1[1])
  {
    if (a1[9] == a1[10])
    {
      v28 = 0;
      v43 = v42;
      v40 = __p;
      do
        ++v28;
      while (v28 < a1[1]);
    }
    else
    {
      v3 = 0;
      do
      {
        if (a1[9] == a1[10])
        {
          v43 = v42;
          v40 = __p;
        }
        else
        {
          v4 = a1[30];
          v5 = (char **)(v4 + 24 * v3);
          if (v5 != (char **)&v42)
          {
            v6 = *(char **)(v4 + 24 * v3 + 8);
            sub_23942156C(&v42, *v5, v6, (v6 - *v5) >> 2);
          }
          v7 = a1[33];
          v8 = (char **)(v7 + 24 * v3);
          if (v8 != (char **)&__p)
          {
            v9 = *(char **)(v7 + 24 * v3 + 8);
            sub_23942156C(&__p, *v8, v9, (v9 - *v8) >> 2);
          }
          v10 = *(_QWORD *)(a1[9] + 8 * v3);
          if (v10)
          {
            for (i = 0; i != v10; ++i)
            {
              v12 = *((unsigned int *)v42 + i);
              if (v3 > v12)
              {
                v13 = *((float *)__p + i);
                v14 = a1[7];
                v15 = a1[13];
                v16 = *(unsigned int *)(v15 + 4 * v3);
                v17 = *(unsigned int *)(v15 + 4 * v12);
                v18 = *(float (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))v14;
                v19 = *(unsigned int *)(v14 + 8);
                v21 = *(_QWORD *)(v14 + 16);
                v20 = *(std::__shared_weak_count **)(v14 + 24);
                v45 = v21;
                v46 = v20;
                if (v20)
                {
                  p_shared_owners = (unint64_t *)&v20->__shared_owners_;
                  do
                    v23 = __ldxr(p_shared_owners);
                  while (__stxr(v23 + 1, p_shared_owners));
                }
                v24 = v18(v3, v12, v16, v17, v19, &v45);
                v25 = v46;
                if (v46)
                {
                  v26 = (unint64_t *)&v46->__shared_owners_;
                  do
                    v27 = __ldaxr(v26);
                  while (__stlxr(v27 - 1, v26));
                  if (!v27)
                  {
                    ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                    std::__shared_weak_count::__release_weak(v25);
                  }
                }
                v2 = v2 + (float)(v13 * v24);
              }
            }
          }
        }
        ++v3;
      }
      while (v3 < a1[1]);
    }
  }
  sub_2396FB3EC((uint64_t)a1);
  v29 = a1[1];
  if (!v29)
  {
    v32 = 0.0;
    goto LABEL_35;
  }
  v30 = a1[3];
  if (v29 == 1)
  {
    v31 = 0;
    v32 = 0.0;
LABEL_33:
    v35 = v29 - v31;
    v36 = (float *)(v30 + 4 * v31);
    do
    {
      v37 = *v36++;
      v32 = v32 + v37;
      --v35;
    }
    while (v35);
    goto LABEL_35;
  }
  v31 = v29 & 0xFFFFFFFFFFFFFFFELL;
  v33 = (float *)(v30 + 4);
  v32 = 0.0;
  v34 = v29 & 0xFFFFFFFFFFFFFFFELL;
  do
  {
    v32 = (float)(v32 + *(v33 - 1)) + *v33;
    v33 += 2;
    v34 -= 2;
  }
  while (v34);
  if (v29 != v31)
    goto LABEL_33;
LABEL_35:
  if (__p)
  {
    v40 = __p;
    operator delete(__p);
  }
  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  return v2 + v32;
}

void sub_2396FBD38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, char a15)
{
  void *v16;

  if (__p)
  {
    operator delete(__p);
    v16 = a12;
    if (!a12)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v16 = a12;
    if (!a12)
      goto LABEL_3;
  }
  operator delete(v16);
  _Unwind_Resume(exception_object);
}

void sub_2396FBD88(unint64_t *a1, uint64_t a2)
{
  float v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  float v10;
  float v11;
  BOOL v12;

  sub_2396FB3EC((uint64_t)a1);
  v4 = sub_2396FBAA0(a1);
  if (a2)
  {
    v5 = 0;
    do
    {
      v6 = a1[25];
      if (v6 && ((*(uint64_t (**)(unint64_t))(*(_QWORD *)v6 + 48))(v6) & 1) != 0)
        break;
      v7 = *a1;
      a1[2] = *a1;
      if (v7)
      {
        v8 = 0;
        do
        {
          v9 = a1[25];
          if (v9 && ((*(uint64_t (**)(unint64_t))(*(_QWORD *)v9 + 48))(v9) & 1) != 0)
            break;
          sub_2396FBE84((uint64_t)a1, *(unsigned int *)(a1[19] + 4 * v8++));
        }
        while (v8 < *a1);
      }
      v10 = sub_2396FBAA0(a1);
      if (v10 == v4)
        break;
      v11 = v10 - v4;
      if (v10 < v4)
        v11 = v4 - v10;
      v12 = v11 <= 0.000001 || ++v5 == a2;
      v4 = v10;
    }
    while (!v12);
  }
  a1[2] = 0;
}

BOOL sub_2396FBE84(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _BOOL8 v15;
  float v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  void *__p;
  _DWORD *v23;
  uint64_t v24;
  _QWORD v25[3];
  _QWORD *v26;
  uint64_t v27[46];

  v27[45] = *MEMORY[0x24BDAC8D0];
  sub_2396FB514(a1);
  if (!*(_QWORD *)(a1 + 16))
    *(_BYTE *)(a1 + 64) = 1;
  sub_2396FB3EC(a1);
  __p = 0;
  v23 = 0;
  v24 = 0;
  v4 = *(_QWORD *)(a1 + 8);
  LODWORD(v27[0]) = 0;
  if (!v4)
    return 0;
  sub_2394DE27C((uint64_t)&__p, v4, (const float *)v27);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = __p;
  if (!v5)
    goto LABEL_15;
  v7 = 0;
  v8 = 0;
  v9 = *(_QWORD *)(a1 + 104);
  do
  {
    if (*(_DWORD *)(v9 + 4 * v7) != (_DWORD)a2)
      v6[v8++] = v7;
    ++v7;
  }
  while (v5 != v7);
  if (!v8)
  {
LABEL_15:
    v15 = 0;
    if (!v6)
      return v15;
    goto LABEL_27;
  }
  v10 = 0;
  v11 = *(_QWORD *)(a1 + 128);
  do
  {
    *(_DWORD *)(v11 + 4 * v6[v10]) = v10;
    ++v10;
  }
  while (v8 != v10);
  v12 = *(_QWORD *)(a1 + 96);
  v26 = 0;
  sub_2394D8F38((uint64_t)v27, v8, v12, v25);
  v13 = v26;
  if (v26 == v25)
  {
    v14 = 4;
    v13 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_20;
    v14 = 5;
  }
  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_20:
  *(_DWORD *)(a1 + 288) = 0;
  sub_2396FA254(a1, v8, a2, (uint64_t)v27, (uint64_t *)&__p);
  sub_2396FA3C8(a1, v8, a2, (uint64_t)v27, &__p);
  sub_2394D98B0(v27);
  v16 = sub_2394D9CC4((uint64_t)v27, 1, 0);
  if (v16 < *(float *)(a1 + 288))
    sub_2396FAB60(a1, v27, &__p, v8, a2);
  v17 = (unsigned int *)__p;
  v18 = *(_QWORD *)(a1 + 128);
  if (v8 <= 1)
    v19 = 1;
  else
    v19 = v8;
  do
  {
    v20 = *v17++;
    *(_DWORD *)(v18 + 4 * v20) = -1;
    --v19;
  }
  while (v19);
  v15 = v16 < *(float *)(a1 + 288);
  sub_2394B6980((uint64_t)v27);
  v6 = __p;
  if (__p)
  {
LABEL_27:
    v23 = v6;
    operator delete(v6);
  }
  return v15;
}

void sub_2396FC0A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char *a16, char a17)
{
  char *v17;
  char *v19;
  uint64_t v20;
  void *v21;

  v19 = a16;
  if (a16 == v17)
  {
    v20 = 4;
    v19 = &a13;
  }
  else
  {
    if (!a16)
    {
      v21 = __p;
      if (__p)
        goto LABEL_8;
      goto LABEL_5;
    }
    v20 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v19 + 8 * v20))();
  v21 = __p;
  if (__p)
  {
LABEL_8:
    operator delete(v21);
    _Unwind_Resume(exception_object);
  }
LABEL_5:
  _Unwind_Resume(exception_object);
}

void sub_2396FC11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    JUMPOUT(0x2396FC10CLL);
  JUMPOUT(0x2396FC0D0);
}

char *sub_2396FC12C(char **a1, uint64_t a2)
{
  char *v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a1;
  v3 = a1[1];
  v5 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a1) >> 3);
  v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * ((a1[2] - v4) >> 3) > v6)
    v6 = 0x5555555555555556 * ((a1[2] - v4) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v4) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  if (v6 > 0xAAAAAAAAAAAAAAALL)
    sub_239418A80();
  v8 = 24 * v6;
  v9 = (char *)operator new(24 * v6);
  v10 = &v9[24 * v5];
  v11 = &v9[v8];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *((_DWORD *)v10 + 4) = *(_DWORD *)(a2 + 16);
  v12 = v10 + 24;
  if (v3 == v4)
  {
    *a1 = v10;
    a1[1] = v12;
    a1[2] = v11;
    if (!v3)
      return v12;
    goto LABEL_18;
  }
  v13 = 0;
  do
  {
    v14 = &v10[v13];
    *((_QWORD *)v14 - 3) = 0;
    *((_QWORD *)v14 - 2) = 0;
    *((_DWORD *)v14 - 2) = *(_DWORD *)&v3[v13 - 8];
    v13 -= 24;
  }
  while (&v3[v13] != v4);
  *a1 = &v10[v13];
  a1[1] = v12;
  a1[2] = v11;
  if (v3 != v4)
  {
    do
    {
      v16 = *((_QWORD *)v3 - 3);
      v3 -= 24;
      v15 = v16;
      if (v16)
      {
        do
        {
          *(_QWORD *)v3 = *(_QWORD *)(v15 + 32);
          MEMORY[0x23B83E31C]();
          v15 = *(_QWORD *)v3;
        }
        while (*(_QWORD *)v3);
      }
    }
    while (v3 != v4);
    v3 = v4;
  }
  if (v3)
LABEL_18:
    operator delete(v3);
  return v12;
}

void sub_2396FC298(char **a1, unint64_t a2, uint64_t a3)
{
  char *v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  const void *v17;
  int64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  const void *v26;
  int64_t v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  char *v32;
  char *v33;
  void *v34;
  void *v35;
  char *v36;

  v6 = a1[2];
  v7 = a1[1];
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      v13 = &v7[24 * a2];
      v14 = 24 * a2;
      do
      {
        *(_QWORD *)v7 = 0;
        *((_QWORD *)v7 + 1) = 0;
        *((_QWORD *)v7 + 2) = 0;
        v17 = *(const void **)a3;
        v16 = *(_QWORD *)(a3 + 8);
        v18 = v16 - *(_QWORD *)a3;
        if (v16 != *(_QWORD *)a3)
        {
          if (v18 < 0)
            sub_2394189F8();
          v19 = (char *)operator new(v16 - *(_QWORD *)a3);
          *(_QWORD *)v7 = v19;
          *((_QWORD *)v7 + 1) = v19;
          v15 = &v19[4 * (v18 >> 2)];
          *((_QWORD *)v7 + 2) = v15;
          memcpy(v19, v17, v18);
          *((_QWORD *)v7 + 1) = v15;
        }
        v7 += 24;
        v14 -= 24;
      }
      while (v14);
      v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL)
      sub_2394189F8();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((v6 - *a1) >> 3);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v9;
    if (v11)
    {
      if (v11 > 0xAAAAAAAAAAAAAAALL)
        sub_239418A80();
      v12 = (char *)operator new(24 * v11);
    }
    else
    {
      v12 = 0;
    }
    v20 = &v12[24 * v8];
    v36 = &v12[24 * v11];
    v21 = 24 * a2;
    v22 = &v20[24 * a2];
    v23 = v20;
    do
    {
      *(_QWORD *)v23 = 0;
      *((_QWORD *)v23 + 1) = 0;
      *((_QWORD *)v23 + 2) = 0;
      v26 = *(const void **)a3;
      v25 = *(_QWORD *)(a3 + 8);
      v27 = v25 - *(_QWORD *)a3;
      if (v25 != *(_QWORD *)a3)
      {
        if (v27 < 0)
          sub_2394189F8();
        v28 = (char *)operator new(v25 - *(_QWORD *)a3);
        *(_QWORD *)v23 = v28;
        *((_QWORD *)v23 + 1) = v28;
        v24 = &v28[4 * (v27 >> 2)];
        *((_QWORD *)v23 + 2) = v24;
        memcpy(v28, v26, v27);
        *((_QWORD *)v23 + 1) = v24;
      }
      v23 += 24;
      v21 -= 24;
    }
    while (v21);
    v30 = *a1;
    v29 = a1[1];
    if (v29 == *a1)
    {
      *a1 = v20;
      a1[1] = v22;
      a1[2] = v36;
    }
    else
    {
      do
      {
        *((_QWORD *)v20 - 3) = 0;
        *((_QWORD *)v20 - 2) = 0;
        v20 -= 24;
        *((_QWORD *)v20 + 2) = 0;
        v31 = *(_OWORD *)(v29 - 24);
        v29 -= 24;
        *(_OWORD *)v20 = v31;
        *((_QWORD *)v20 + 2) = *((_QWORD *)v29 + 2);
        *(_QWORD *)v29 = 0;
        *((_QWORD *)v29 + 1) = 0;
        *((_QWORD *)v29 + 2) = 0;
      }
      while (v29 != v30);
      v32 = *a1;
      v29 = a1[1];
      *a1 = v20;
      a1[1] = v22;
      a1[2] = v36;
      if (v29 != v32)
      {
        v33 = v29;
        do
        {
          v35 = (void *)*((_QWORD *)v33 - 3);
          v33 -= 24;
          v34 = v35;
          if (v35)
          {
            *((_QWORD *)v29 - 2) = v34;
            operator delete(v34);
          }
          v29 = v33;
        }
        while (v33 != v32);
        v29 = v32;
      }
    }
    if (v29)
      operator delete(v29);
  }
}

void sub_2396FC538(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_2396FC540(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;

  v4 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    *(_QWORD *)(v2 + 8) = v4;
    operator delete(v4);
  }
  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(exception_object);
}

void sub_2396FC560(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23942A5F4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2396FC578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  void *v14;

  v14 = *(void **)v12;
  if (*(_QWORD *)v12)
  {
    *(_QWORD *)(v12 + 8) = v14;
    operator delete(v14);
  }
  a12 = v12;
  sub_23942A5F4((uint64_t)&a10);
  _Unwind_Resume(a1);
}

BOOL sub_2396FC5A0(const char *a1, const char *a2)
{
  if (a1[23] < 0)
    a1 = *(const char **)a1;
  if (a2[23] < 0)
    a2 = *(const char **)a2;
  return clonefile(a1, a2, 2u) == 0;
}

uint64_t sub_2396FC5E0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, float a5)
{
  unsigned int v10;
  uint64_t v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  _QWORD *v18;
  uint64_t v19;
  float v20;
  _QWORD *v21;
  _QWORD v23[3];
  _QWORD *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  *(_DWORD *)a1 = 0x7FFFFFFF;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_2397A1618((pthread_mutex_t *)(a1 + 176));
  v10 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 >= 0x7FFFFFFFu)
  {
    v10 = 0x7FFFFFFF;
    *(_DWORD *)a1 = 0x7FFFFFFF;
  }
  else if (v10 < 2)
  {
    v10 = 1;
  }
  *(_DWORD *)a1 = v10;
  pthread_cond_init((pthread_cond_t *)(a1 + 80), 0);
  pthread_cond_init((pthread_cond_t *)(a1 + 128), 0);
  sub_2397A1740(a1 + 240);
  *(_QWORD *)(a1 + 504) = 0;
  *(_QWORD *)(a1 + 512) = a2;
  *(_QWORD *)(a1 + 520) = *a4;
  v11 = *(_QWORD *)(a3 + 24);
  if (v11)
  {
    if (v11 == a3)
    {
      *(_QWORD *)(a1 + 552) = a1 + 528;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a3 + 24) + 24))(*(_QWORD *)(a3 + 24), a1 + 528);
      goto LABEL_10;
    }
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
  }
  *(_QWORD *)(a1 + 552) = v11;
LABEL_10:
  *(_DWORD *)(a1 + 560) = 1065353216;
  v12 = *(float *)(a1 + 520);
  v13 = 0.0;
  if (v12 <= 0.0 || (v14 = 100.0, v13 = *(float *)(a1 + 520), v12 <= 100.0))
    v14 = v13;
  *(float *)(a1 + 520) = v14;
  v15 = *(float *)(a1 + 524);
  v16 = 0.0;
  if (v15 <= 0.0 || (v17 = 100.0, v16 = *(float *)(a1 + 524), v15 <= 100.0))
    v17 = v16;
  if (v17 >= v14)
    v14 = v17;
  *(float *)(a1 + 524) = v14;
  if (!*(_QWORD *)(a1 + 552))
  {
    v23[0] = &unk_250AE3730;
    v23[1] = sub_2396FC924;
    v24 = v23;
    sub_239587C2C(v23, (_QWORD *)(a1 + 528));
    v18 = v24;
    if (v24 == v23)
    {
      v19 = 4;
      v18 = v23;
    }
    else
    {
      if (!v24)
        goto LABEL_24;
      v19 = 5;
    }
    (*(void (**)(void))(*v18 + 8 * v19))();
  }
LABEL_24:
  v20 = fmaxf(a5, 0.1);
  if (v20 > 50.0)
    v20 = 50.0;
  *(float *)(a1 + 560) = v20;
  j__pthread_rwlock_wrlock((pthread_rwlock_t *)(a1 + 264));
  *(_BYTE *)(a1 + 256) = 1;
  j__pthread_rwlock_unlock((pthread_rwlock_t *)(a1 + 264));
  sub_2397A195C(a1 + 240);
  v21 = (_QWORD *)operator new();
  *v21 = &off_250AE3778;
  v21[1] = sub_2396FCA80;
  v21[2] = a1;
  *(_QWORD *)(a1 + 464) = v21;
  sub_2397A1878((pthread_t *)(a1 + 240));
  return a1;
}

void sub_2396FC878(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2397A1A1C(v2);
  sub_2396FDEDC(v1);
  _Unwind_Resume(a1);
}

void sub_2396FC894(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2396FDEDC(v1);
  _Unwind_Resume(a1);
}

void sub_2396FC8A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2396FDD50(v1);
  _Unwind_Resume(a1);
}

void sub_2396FC8BC(_Unwind_Exception *a1)
{
  uint64_t v1;
  pthread_mutex_t *v2;

  sub_2397A163C(v2);
  sub_2396FDD50(v1);
  _Unwind_Resume(a1);
}

void sub_2396FC8D8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;

  v5 = *(_QWORD **)(v1 + 552);
  if (v5 == v3)
  {
    v6 = 4;
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
    v3 = *(_QWORD **)(v1 + 552);
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v6))(v3);
LABEL_6:
  sub_2397A1A1C(v2);
  sub_2396FDEDC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2396FC924(uint64_t a1)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD v10[2];
  _QWORD v11[11];
  char v12;
  uint64_t v13;

  sub_2394988CC((uint64_t)v10);
  v2 = sub_239458500(v11, (uint64_t)"#-@-# [", 7);
  v3 = *(char *)(a1 + 23);
  if (v3 >= 0)
    v4 = a1;
  else
    v4 = *(_QWORD *)a1;
  if (v3 >= 0)
    v5 = *(unsigned __int8 *)(a1 + 23);
  else
    v5 = *(_QWORD *)(a1 + 8);
  v6 = sub_239458500(v2, v4, v5);
  sub_239458500(v6, (uint64_t)"] PROGRESS=", 11);
  v7 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v7, (uint64_t)"%", 1);
  v10[0] = *MEMORY[0x24BEDB7F0];
  v8 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v10 + *(_QWORD *)(v10[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v11[0] = v8;
  v11[1] = MEMORY[0x24BEDB848] + 16;
  if (v12 < 0)
    operator delete((void *)v11[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v13);
}

void sub_2396FCA30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239498ABC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2396FCA44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239498ABC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2396FCA58(uint64_t result, float a2)
{
  float v2;

  v2 = fmaxf(a2, 0.1);
  if (v2 > 50.0)
    v2 = 50.0;
  *(float *)(result + 560) = v2;
  return result;
}

void sub_2396FCA80(uint64_t a1)
{
  float v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  float v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  float v14;
  __int128 __p;
  uint64_t v16;
  char v17;

  sub_2396FD158((unsigned int *)a1, (uint64_t)&v14);
  if (v17)
  {
    v2 = -1.0;
    do
    {
      v4 = *(_QWORD *)(a1 + 504);
      v3 = *(_QWORD *)(a1 + 512);
      if (v4 < v3)
      {
        if (v4)
        {
          v5 = v4 + 1;
          *(_QWORD *)(a1 + 504) = v5;
          if (v5 == v3)
            goto LABEL_7;
        }
        else
        {
          v10 = *(float *)(a1 + 520);
          v7 = *(_QWORD *)(a1 + 552);
          if (!v7)
LABEL_19:
            sub_2394172E0();
          (*(void (**)(uint64_t, float *, __int128 *))(*(_QWORD *)v7 + 48))(v7, &v10, &__p);
          v2 = *(float *)(a1 + 520);
          v3 = *(_QWORD *)(a1 + 512);
          v5 = *(_QWORD *)(a1 + 504) + 1;
          *(_QWORD *)(a1 + 504) = v5;
          if (v5 == v3)
          {
LABEL_7:
            v10 = *(float *)(a1 + 524);
            v6 = *(_QWORD *)(a1 + 552);
            if (!v6)
              goto LABEL_19;
            (*(void (**)(uint64_t, float *, __int128 *))(*(_QWORD *)v6 + 48))(v6, &v10, &__p);
            goto LABEL_14;
          }
        }
        v8 = (double)(unint64_t)v5 / (double)v3 * (float)(*(float *)(a1 + 524) - *(float *)(a1 + 520))
           + *(float *)(a1 + 520);
        if ((float)(v8 - v2) > *(float *)(a1 + 560))
        {
          v10 = (double)(unint64_t)v5 / (double)v3 * (float)(*(float *)(a1 + 524) - *(float *)(a1 + 520))
              + *(float *)(a1 + 520);
          v9 = *(_QWORD *)(a1 + 552);
          if (!v9)
            sub_2394172E0();
          (*(void (**)(uint64_t, float *, __int128 *, float))(*(_QWORD *)v9 + 48))(v9, &v10, &__p, v8 - v2);
          v2 = v8;
        }
      }
LABEL_14:
      sub_2396FD158((unsigned int *)a1, (uint64_t)&v10);
      v14 = v10;
      if (SHIBYTE(v16) < 0)
        operator delete((void *)__p);
      __p = v11;
      v16 = v12;
      v17 = v13;
    }
    while (v13);
  }
  if (SHIBYTE(v16) < 0)
    operator delete((void *)__p);
}

void sub_2396FCC3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2396FCC6C(uint64_t a1, uint64_t a2)
{
  pthread_mutex_t *v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  int v8;

  v4 = (pthread_mutex_t *)(a1 + 176);
  sub_2397A1694((pthread_mutex_t *)(a1 + 176));
  v5 = *(unsigned __int8 *)(a1 + 56);
  result = sub_2397A16B4(v4);
  if (!v5)
  {
    sub_2396FCFF4(a1);
    result = sub_2397A195C(a1 + 240);
    if (*(_QWORD *)(a1 + 504) < *(_QWORD *)(a1 + 512))
    {
      v8 = *(_DWORD *)(a1 + 524);
      v7 = *(_QWORD *)(a1 + 552);
      if (!v7)
        sub_2394172E0();
      return (*(uint64_t (**)(uint64_t, int *, uint64_t))(*(_QWORD *)v7 + 48))(v7, &v8, a2);
    }
  }
  return result;
}

uint64_t sub_2396FCD14(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *__p;
  char v7;

  v7 = 0;
  LOBYTE(__p) = 0;
  sub_2396FCC6C(a1, (uint64_t)&__p);
  if ((v7 & 0x80000000) == 0)
  {
    v2 = (_QWORD *)(a1 + 528);
    v3 = *(_QWORD **)(a1 + 552);
    if (v3 != (_QWORD *)(a1 + 528))
      goto LABEL_3;
LABEL_6:
    v4 = 4;
    v3 = v2;
    goto LABEL_7;
  }
  operator delete(__p);
  v2 = (_QWORD *)(a1 + 528);
  v3 = *(_QWORD **)(a1 + 552);
  if (v3 == (_QWORD *)(a1 + 528))
    goto LABEL_6;
LABEL_3:
  if (v3)
  {
    v4 = 5;
LABEL_7:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  sub_2397A1A1C(a1 + 240);
  return sub_2396FDEDC(a1);
}

void sub_2396FCDAC(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  pthread_mutex_t *v6;
  int v7;
  int v8;
  __int128 __p;
  uint64_t v10;

  if (a3)
  {
    v3 = a3;
    v6 = (pthread_mutex_t *)(a1 + 176);
    do
    {
      sub_2397A1694(v6);
      v7 = *(unsigned __int8 *)(a1 + 56);
      sub_2397A16B4(v6);
      if (!v7)
      {
        v8 = 1;
        if (*((char *)a2 + 23) < 0)
        {
          sub_23941A7F8(&__p, *(void **)a2, *((_QWORD *)a2 + 1));
        }
        else
        {
          __p = *a2;
          v10 = *((_QWORD *)a2 + 2);
        }
        sub_2396FCE94((unsigned int *)a1, (uint64_t)&v8);
        if (SHIBYTE(v10) < 0)
          operator delete((void *)__p);
      }
      --v3;
    }
    while (v3);
  }
}

void sub_2396FCE74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2396FCE94(unsigned int *a1, uint64_t a2)
{
  pthread_mutex_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  __int128 v13;

  v4 = (pthread_mutex_t *)(a1 + 44);
  sub_2397A1694((pthread_mutex_t *)(a1 + 44));
  v5 = *((_QWORD *)a1 + 6);
  if (v5 >= *a1)
  {
    while (!*((_BYTE *)a1 + 56))
    {
      ++*((_QWORD *)a1 + 8);
      pthread_cond_wait((pthread_cond_t *)(a1 + 20), v4);
      --*((_QWORD *)a1 + 8);
      v5 = *((_QWORD *)a1 + 6);
      if (v5 < *a1)
        goto LABEL_4;
    }
    goto LABEL_5;
  }
LABEL_4:
  if (*((_BYTE *)a1 + 56))
  {
LABEL_5:
    v6 = 0;
    goto LABEL_15;
  }
  v7 = *((_QWORD *)a1 + 3);
  v8 = *((_QWORD *)a1 + 2);
  if (v7 == v8)
    v9 = 0;
  else
    v9 = 16 * (v7 - v8) - 1;
  v10 = *((_QWORD *)a1 + 5) + v5;
  if (v9 == v10)
  {
    sub_2396FE018((uint64_t)(a1 + 2));
    v8 = *((_QWORD *)a1 + 2);
    v10 = *((_QWORD *)a1 + 6) + *((_QWORD *)a1 + 5);
  }
  v11 = (_DWORD *)(*(_QWORD *)(v8 + ((v10 >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * (v10 & 0x7F));
  *v11 = *(_DWORD *)a2;
  v12 = v11 + 2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_23941A7F8(v12, *(void **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 8);
    *((_QWORD *)v12 + 2) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)v12 = v13;
  }
  ++*((_QWORD *)a1 + 6);
  pthread_cond_signal((pthread_cond_t *)(a1 + 32));
  v6 = 1;
LABEL_15:
  sub_2397A16B4(v4);
  return v6;
}

void sub_2396FCFD4(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2396FCFF4(uint64_t a1)
{
  pthread_mutex_t *v2;

  v2 = (pthread_mutex_t *)(a1 + 176);
  sub_2397A1694((pthread_mutex_t *)(a1 + 176));
  *(_BYTE *)(a1 + 56) = 1;
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 64) >= 1)
  {
    do
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 80)))
        sub_239EC0734();
      sub_2397A1694(v2);
    }
    while (*(uint64_t *)(a1 + 64) > 0);
  }
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  while (*(_QWORD *)(a1 + 48) && *(uint64_t *)(a1 + 72) >= 1)
  {
    if (pthread_cond_wait((pthread_cond_t *)(a1 + 80), v2))
    {
      sub_239A444D4((uint64_t)"unknown file", 277, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 72) >= 1)
  {
    do
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 128)))
        sub_239EC0704();
      sub_2397A1694(v2);
    }
    while (*(uint64_t *)(a1 + 72) > 0);
  }
  sub_2397A16B4(v2);
  return 1;
}

void sub_2396FD13C(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2396FD158@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  pthread_mutex_t *v4;
  unint64_t v5;
  uint64_t v6;
  void **v7;
  __int128 v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  int v16;
  int v18;
  __int128 __p;
  uint64_t v20;

  v4 = (pthread_mutex_t *)(a1 + 44);
  sub_2397A1694((pthread_mutex_t *)(a1 + 44));
  if (*((_QWORD *)a1 + 6))
  {
LABEL_4:
    v5 = *((_QWORD *)a1 + 5);
    v6 = *(_QWORD *)(*((_QWORD *)a1 + 2) + ((v5 >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * (v5 & 0x7F);
    v18 = *(_DWORD *)v6;
    v7 = (void **)(v6 + 8);
    if (*(char *)(v6 + 31) < 0)
    {
      sub_23941A7F8(&__p, *v7, *(_QWORD *)(v6 + 16));
      v11 = *(_QWORD *)(*((_QWORD *)a1 + 2) + ((*((_QWORD *)a1 + 5) >> 4) & 0xFFFFFFFFFFFFFF8))
          + 32 * (*((_QWORD *)a1 + 5) & 0x7FLL);
      if (*(char *)(v11 + 31) < 0)
      {
        operator delete(*(void **)(v11 + 8));
        v9 = *((_QWORD *)a1 + 6) - 1;
        v13 = *((_QWORD *)a1 + 5) + 1;
        *((_QWORD *)a1 + 5) = v13;
        *((_QWORD *)a1 + 6) = v9;
        if (v13 >= 0x100)
          goto LABEL_13;
      }
      else
      {
        v9 = *((_QWORD *)a1 + 6) - 1;
        v12 = *((_QWORD *)a1 + 5) + 1;
        *((_QWORD *)a1 + 5) = v12;
        *((_QWORD *)a1 + 6) = v9;
        if (v12 >= 0x100)
          goto LABEL_13;
      }
    }
    else
    {
      v8 = *(_OWORD *)v7;
      v20 = *(_QWORD *)(v6 + 24);
      __p = v8;
      v9 = *((_QWORD *)a1 + 6) - 1;
      v10 = v5 + 1;
      *((_QWORD *)a1 + 5) = v10;
      *((_QWORD *)a1 + 6) = v9;
      if (v10 >= 0x100)
      {
LABEL_13:
        operator delete(**((void ***)a1 + 2));
        *((_QWORD *)a1 + 2) += 8;
        v14 = *((_QWORD *)a1 + 6);
        *((_QWORD *)a1 + 5) -= 128;
        if (v14 >= *a1)
          goto LABEL_15;
        goto LABEL_14;
      }
    }
    if (v9 >= *a1)
    {
LABEL_15:
      *(_DWORD *)a2 = v18;
      v15 = (_BYTE *)(a2 + 8);
      if (SHIBYTE(v20) < 0)
      {
        sub_23941A7F8(v15, (void *)__p, *((unint64_t *)&__p + 1));
        v16 = SHIBYTE(v20);
        *(_BYTE *)(a2 + 32) = 1;
        if (v16 < 0)
          operator delete((void *)__p);
      }
      else
      {
        *(_OWORD *)v15 = __p;
        *(_QWORD *)(a2 + 24) = v20;
        *(_BYTE *)(a2 + 32) = 1;
      }
      return sub_2397A16B4(v4);
    }
LABEL_14:
    pthread_cond_signal((pthread_cond_t *)(a1 + 20));
    goto LABEL_15;
  }
  while (!*((_BYTE *)a1 + 56))
  {
    ++*((_QWORD *)a1 + 9);
    pthread_cond_wait((pthread_cond_t *)(a1 + 32), v4);
    --*((_QWORD *)a1 + 9);
    if (*((_QWORD *)a1 + 6))
      goto LABEL_4;
  }
  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 32) = 0;
  return sub_2397A16B4(v4);
}

void sub_2396FD358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  pthread_mutex_t *v15;

  if (a15 < 0)
    operator delete(__p);
  sub_2397A16B4(v15);
  _Unwind_Resume(a1);
}

_QWORD *sub_2396FD394(_QWORD *a1, uint64_t a2, __int128 *a3)
{
  _QWORD *v4;
  __int128 v5;

  *a1 = a2;
  v4 = a1 + 1;
  if (*((char *)a3 + 23) < 0)
  {
    sub_23941A7F8(v4, *(void **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v5 = *a3;
    v4[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)v4 = v5;
  }
  return a1;
}

uint64_t sub_2396FD3E8(uint64_t a1)
{
  void **v2;

  v2 = (void **)(a1 + 8);
  sub_2396FCDAC(*(_QWORD *)a1, (__int128 *)(a1 + 8), 1);
  if (*(char *)(a1 + 31) < 0)
    operator delete(*v2);
  return a1;
}

_QWORD *sub_2396FD440(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  char *v7;

  *a1 = a2;
  v5 = operator new(0x20uLL);
  v5[3] = 0;
  a1[1] = v5 + 3;
  v5[2] = 0;
  *v5 = &unk_250AE37A0;
  v5[1] = 0;
  a1[2] = v5;
  v6 = operator new(0x20uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &unk_250AE37A0;
  v6[3] = 0;
  a1[3] = v6 + 3;
  a1[4] = v6;
  v7 = (char *)operator new(0x58uLL);
  *((_QWORD *)v7 + 1) = 0;
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &off_250AE37D8;
  a1[5] = sub_2397A1618((pthread_mutex_t *)(v7 + 24));
  a1[6] = v7;
  *(_QWORD *)a1[1] = a3;
  *(_QWORD *)a1[3] = 0;
  return a1;
}

void sub_2396FD4F0(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_239416DA0(v1 + 16);
  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_2396FD520(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2396FD538(uint64_t a1, __int128 *a2, float a3)
{
  pthread_mutex_t *v6;
  unint64_t v7;
  unint64_t *v8;

  v6 = *(pthread_mutex_t **)(a1 + 40);
  sub_2397A1694(v6);
  v7 = **(_QWORD **)(a1 + 8);
  if (fabsf(a3 + -100.0) >= 0.00000011921)
    v7 = vcvtmd_u64_f64((float)((float)v7 * a3) / 100.0);
  v8 = *(unint64_t **)(a1 + 24);
  if (v7 > *v8)
  {
    sub_2396FCDAC(*(_QWORD *)a1, a2, v7 - *v8);
    v8 = *(unint64_t **)(a1 + 24);
  }
  *v8 = v7;
  return sub_2397A16B4(v6);
}

void sub_2396FD5E4(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2396FD600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a2 + 24);
  if (v5)
  {
    if (v5 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1);
      v6 = *(_QWORD *)(a3 + 24);
      if (!v6)
      {
LABEL_10:
        *(_QWORD *)(a1 + 56) = v6;
        return a1;
      }
    }
    else
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
      v6 = *(_QWORD *)(a3 + 24);
      if (!v6)
        goto LABEL_10;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    v6 = *(_QWORD *)(a3 + 24);
    if (!v6)
      goto LABEL_10;
  }
  if (v6 != a3)
  {
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 56) = a1 + 32;
  (*(void (**)(_QWORD))(**(_QWORD **)(a3 + 24) + 24))(*(_QWORD *)(a3 + 24));
  return a1;
}

void sub_2396FD6C0(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)v1[3];
  if (v3 == v1)
  {
    v4 = 4;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v4))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2396FD6FC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = &off_250AE3810;
  a1[1] = a2;
  a1[3] = a1;
  v4 = *(_QWORD *)(a3 + 24);
  if (!v4)
    goto LABEL_4;
  if (v4 != a3)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    a1[7] = v4;
    return a1;
  }
  a1[7] = a1 + 4;
  (*(void (**)(_QWORD))(**(_QWORD **)(a3 + 24) + 24))(*(_QWORD *)(a3 + 24));
  return a1;
}

void sub_2396FD774(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)v1[3];
  if (v3 == v1)
  {
    v4 = 4;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v4))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_2396FD7B0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

uint64_t sub_2396FD7C8(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t result;
  float v4;

  result = *(_QWORD *)(a1 + 56);
  if (result)
  {
    v4 = a3;
    return (*(uint64_t (**)(uint64_t, float *, uint64_t))(*(_QWORD *)result + 48))(result, &v4, a2);
  }
  return result;
}

_QWORD *sub_2396FD800@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  _QWORD v14[3];
  _QWORD *v15;
  _QWORD v16[3];
  _QWORD *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v4 = (_QWORD *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      v15 = v14;
      (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v14);
    }
    else
    {
      v15 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v4 + 16))(v4);
    }
  }
  else
  {
    v15 = 0;
  }
  v5 = v16;
  v6 = a1[7];
  if (!v6)
    goto LABEL_9;
  if ((_QWORD *)v6 != a1 + 4)
  {
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
LABEL_9:
    v17 = (_QWORD *)v6;
    goto LABEL_11;
  }
  v17 = v16;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v6 + 24))(v6, v16);
LABEL_11:
  *(_QWORD *)(a2 + 24) = 0;
  v7 = operator new(0x48uLL);
  *v7 = &off_250AE3858;
  v8 = v7 + 1;
  v9 = (uint64_t)v15;
  if (!v15)
  {
LABEL_14:
    v7[4] = v9;
    goto LABEL_16;
  }
  if (v15 != v14)
  {
    v9 = (*(uint64_t (**)(void))(*v15 + 16))();
    goto LABEL_14;
  }
  v7[4] = v8;
  (*(void (**)(_QWORD *, _QWORD *))(v14[0] + 24))(v14, v8);
LABEL_16:
  v10 = (uint64_t)v17;
  if (!v17)
  {
LABEL_19:
    v7[8] = v10;
    goto LABEL_21;
  }
  if (v17 != v16)
  {
    v10 = (*(uint64_t (**)(void))(*v17 + 16))();
    goto LABEL_19;
  }
  v7[8] = v7 + 5;
  (*(void (**)(_QWORD *))(v16[0] + 24))(v16);
LABEL_21:
  *(_QWORD *)(a2 + 24) = v7;
  if (v17 == v16)
  {
    v11 = 4;
  }
  else
  {
    if (!v17)
      goto LABEL_26;
    v11 = 5;
    v5 = v17;
  }
  (*(void (**)(_QWORD *))(*v5 + 8 * v11))(v5);
LABEL_26:
  result = v15;
  if (v15 == v14)
  {
    v13 = 4;
    result = v14;
  }
  else
  {
    if (!v15)
      return result;
    v13 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v13))();
}

void sub_2396FD9EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v13;
  uint64_t v14;

  v13 = (_QWORD *)v10[4];
  if (v13 == v11)
  {
    v14 = 4;
  }
  else
  {
    if (!v13)
      goto LABEL_6;
    v14 = 5;
    v11 = (_QWORD *)v10[4];
  }
  (*(void (**)(_QWORD *))(*v11 + 8 * v14))(v11);
LABEL_6:
  operator delete(v10);
  sub_23942FE80(&a10);
  _Unwind_Resume(a1);
}

void sub_2396FDA40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13)
{
  if (a13 == &a10)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (!a13)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*a13 + 40))();
  _Unwind_Resume(exception_object);
}

void sub_2396FDA94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23942FE80((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2396FDAA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  _QWORD v14[3];
  _QWORD *v15;
  _QWORD v16[3];
  _QWORD *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v4 = (_QWORD *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      v15 = v14;
      (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v14);
    }
    else
    {
      v15 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v4 + 16))(v4);
    }
  }
  else
  {
    v15 = 0;
  }
  v5 = v16;
  v6 = a1[7];
  if (!v6)
    goto LABEL_9;
  if ((_QWORD *)v6 != a1 + 4)
  {
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
LABEL_9:
    v17 = (_QWORD *)v6;
    goto LABEL_11;
  }
  v17 = v16;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v6 + 24))(v6, v16);
LABEL_11:
  *(_QWORD *)(a2 + 24) = 0;
  v7 = operator new(0x48uLL);
  *v7 = &off_250AE38A0;
  v8 = v7 + 1;
  v9 = (uint64_t)v15;
  if (!v15)
  {
LABEL_14:
    v7[4] = v9;
    goto LABEL_16;
  }
  if (v15 != v14)
  {
    v9 = (*(uint64_t (**)(void))(*v15 + 16))();
    goto LABEL_14;
  }
  v7[4] = v8;
  (*(void (**)(_QWORD *, _QWORD *))(v14[0] + 24))(v14, v8);
LABEL_16:
  v10 = (uint64_t)v17;
  if (!v17)
  {
LABEL_19:
    v7[8] = v10;
    goto LABEL_21;
  }
  if (v17 != v16)
  {
    v10 = (*(uint64_t (**)(void))(*v17 + 16))();
    goto LABEL_19;
  }
  v7[8] = v7 + 5;
  (*(void (**)(_QWORD *))(v16[0] + 24))(v16);
LABEL_21:
  *(_QWORD *)(a2 + 24) = v7;
  if (v17 == v16)
  {
    v11 = 4;
  }
  else
  {
    if (!v17)
      goto LABEL_26;
    v11 = 5;
    v5 = v17;
  }
  (*(void (**)(_QWORD *))(*v5 + 8 * v11))(v5);
LABEL_26:
  result = v15;
  if (v15 == v14)
  {
    v13 = 4;
    result = v14;
  }
  else
  {
    if (!v15)
      return result;
    v13 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v13))();
}

void sub_2396FDC94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v13;
  uint64_t v14;

  v13 = (_QWORD *)v10[4];
  if (v13 == v11)
  {
    v14 = 4;
  }
  else
  {
    if (!v13)
      goto LABEL_6;
    v14 = 5;
    v11 = (_QWORD *)v10[4];
  }
  (*(void (**)(_QWORD *))(*v11 + 8 * v14))(v11);
LABEL_6:
  operator delete(v10);
  sub_23942FE80(&a10);
  _Unwind_Resume(a1);
}

void sub_2396FDCE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13)
{
  if (a13 == &a10)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (!a13)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*a13 + 40))();
  _Unwind_Resume(exception_object);
}

void sub_2396FDD3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23942FE80((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2396FDD50(uint64_t a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  if (v3 == v2)
  {
    v3 = *(void ***)(a1 + 8);
    *(_QWORD *)(a1 + 40) = 0;
    v10 = 0;
    goto LABEL_13;
  }
  v4 = *(_QWORD *)(a1 + 32);
  v5 = &v2[v4 >> 7];
  v6 = (uint64_t)*v5;
  v7 = (uint64_t)*v5 + 32 * (v4 & 0x7F);
  v8 = *(uint64_t *)((char *)v2 + (((*(_QWORD *)(a1 + 40) + v4) >> 4) & 0xFFFFFFFFFFFFFF8))
     + 32 * ((*(_QWORD *)(a1 + 40) + v4) & 0x7F);
  if (v7 == v8)
    goto LABEL_11;
  do
  {
    if (*(char *)(v7 + 31) < 0)
    {
      operator delete(*(void **)(v7 + 8));
      v6 = (uint64_t)*v5;
      v7 += 32;
      if (v7 - (_QWORD)*v5 != 4096)
        continue;
    }
    else
    {
      v7 += 32;
      if (v7 - v6 != 4096)
        continue;
    }
    v9 = (uint64_t)v5[1];
    ++v5;
    v6 = v9;
    v7 = v9;
  }
  while (v7 != v8);
  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
LABEL_11:
  *(_QWORD *)(a1 + 40) = 0;
  v10 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = *(void ***)(a1 + 16);
      v2 = (void **)(*(_QWORD *)(a1 + 8) + 8);
      *(_QWORD *)(a1 + 8) = v2;
      v10 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
LABEL_13:
  v11 = v10 >> 3;
  if (v11 == 1)
  {
    v12 = 64;
LABEL_18:
    *(_QWORD *)(a1 + 32) = v12;
  }
  else if (v11 == 2)
  {
    v12 = 128;
    goto LABEL_18;
  }
  if (v2 != v3)
  {
    do
    {
      v13 = *v2++;
      operator delete(v13);
    }
    while (v2 != v3);
    v15 = *(_QWORD *)(a1 + 8);
    v14 = *(_QWORD *)(a1 + 16);
    if (v14 != v15)
      *(_QWORD *)(a1 + 16) = v14 + ((v15 - v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_2396FDEDC(uint64_t a1)
{
  pthread_mutex_t *v2;
  int v3;

  v2 = (pthread_mutex_t *)(a1 + 176);
  sub_2397A1694((pthread_mutex_t *)(a1 + 176));
  v3 = *(unsigned __int8 *)(a1 + 56);
  sub_2397A16B4(v2);
  if (!v3)
    sub_2396FCFF4(a1);
  sub_2397A1694(v2);
  sub_2397A16B4(v2);
  pthread_cond_destroy((pthread_cond_t *)(a1 + 80));
  pthread_cond_destroy((pthread_cond_t *)(a1 + 128));
  sub_2397A163C(v2);
  sub_2396FDD50(a1 + 8);
  return a1;
}

void sub_2396FDF68()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2396FDF7C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &unk_250AE3730;
  result[1] = v3;
  return result;
}

uint64_t sub_2396FDFB4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &unk_250AE3730;
  a2[1] = v2;
  return result;
}

uint64_t sub_2396FDFD4(uint64_t a1, float *a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, float))(a1 + 8))(a3, *a2);
}

void sub_2396FDFE8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2396FE00C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(a1 + 8))(*(_QWORD *)(a1 + 16));
}

void sub_2396FE018(uint64_t a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  char *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  void *v26;
  char *v27;
  char *v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  BOOL v37;
  int64_t v38;
  unint64_t v39;
  char *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  char *v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  size_t v58;
  unint64_t v59;
  char *v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 *v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  _OWORD *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 *v85;
  _OWORD *v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  void *v90;
  void *v91;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = v2 >= 0x80;
  v4 = v2 - 128;
  if (v3)
  {
    *(_QWORD *)(a1 + 32) = v4;
    v6 = *(_QWORD **)(a1 + 8);
    v5 = *(char **)(a1 + 16);
    v7 = (char *)(v6 + 1);
    v8 = *v6;
    *(_QWORD *)(a1 + 8) = v6 + 1;
    if (v5 != *(char **)(a1 + 24))
    {
LABEL_78:
      *(_QWORD *)v5 = v8;
      *(_QWORD *)(a1 + 16) += 8;
      return;
    }
    v9 = *(char **)a1;
    v10 = (uint64_t)&v7[-*(_QWORD *)a1];
    if ((unint64_t)v7 <= *(_QWORD *)a1)
    {
      v31 = (v5 - v9) >> 2;
      if (v5 == v9)
        v31 = 1;
      if (!(v31 >> 61))
      {
        v32 = v31 >> 2;
        v33 = 8 * v31;
        v34 = (char *)operator new(8 * v31);
        v35 = &v34[8 * v32];
        v36 = &v34[v33];
        v38 = v5 - v7;
        v37 = v5 == v7;
        v5 = v35;
        if (!v37)
        {
          v5 = &v35[v38 & 0xFFFFFFFFFFFFFFF8];
          v39 = v38 - 8;
          if ((unint64_t)(v38 - 8) >= 0x38)
          {
            v74 = &v34[8 * v32];
            v40 = v74;
            if ((unint64_t)(v74 - v7) >= 0x20)
            {
              v75 = (v39 >> 3) + 1;
              v76 = 8 * (v75 & 0x3FFFFFFFFFFFFFFCLL);
              v40 = &v35[v76];
              v7 += v76;
              v77 = (__int128 *)(v6 + 3);
              v78 = v74 + 16;
              v79 = v75 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v80 = *v77;
                *(v78 - 1) = *(v77 - 1);
                *v78 = v80;
                v77 += 2;
                v78 += 2;
                v79 -= 4;
              }
              while (v79);
              if (v75 == (v75 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_76;
            }
          }
          else
          {
            v40 = &v34[8 * v32];
          }
          do
          {
            v81 = *(_QWORD *)v7;
            v7 += 8;
            *(_QWORD *)v40 = v81;
            v40 += 8;
          }
          while (v40 != v5);
        }
        goto LABEL_76;
      }
LABEL_87:
      sub_239418A80();
    }
LABEL_5:
    v11 = v10 >> 3;
    if (v11 >= -1)
      v12 = v11 + 1;
    else
      v12 = v11 + 2;
    v13 = v12 >> 1;
    v14 = -v13;
    v15 = &v7[-8 * v13];
    v16 = v5 - v7;
    if (v5 != v7)
    {
      memmove(&v7[-8 * v13], v7, v5 - v7);
      v7 = *(char **)(a1 + 8);
    }
    v5 = &v15[v16];
    *(_QWORD *)(a1 + 8) = &v7[8 * v14];
    *(_QWORD *)(a1 + 16) = &v15[v16];
    goto LABEL_78;
  }
  v18 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 8);
  v20 = v18 - v19;
  v21 = (v18 - v19) >> 3;
  v22 = v17 - *(_QWORD *)a1;
  if (v21 < (unint64_t)(v22 >> 3))
  {
    if (v17 != v18)
    {
      v91 = operator new(0x1000uLL);
      sub_23946CE0C((char **)a1, &v91);
      return;
    }
    v91 = operator new(0x1000uLL);
    sub_23946CF98((void **)a1, &v91);
    v41 = *(_QWORD **)(a1 + 8);
    v5 = *(char **)(a1 + 16);
    v7 = (char *)(v41 + 1);
    v8 = *v41;
    *(_QWORD *)(a1 + 8) = v41 + 1;
    if (v5 != *(char **)(a1 + 24))
      goto LABEL_78;
    v9 = *(char **)a1;
    v10 = (uint64_t)&v7[-*(_QWORD *)a1];
    if ((unint64_t)v7 <= *(_QWORD *)a1)
    {
      v42 = (v5 - v9) >> 2;
      if (v5 == v9)
        v42 = 1;
      if (!(v42 >> 61))
      {
        v43 = v42 >> 2;
        v44 = 8 * v42;
        v34 = (char *)operator new(8 * v42);
        v35 = &v34[8 * v43];
        v36 = &v34[v44];
        v45 = v5 - v7;
        v37 = v5 == v7;
        v5 = v35;
        if (!v37)
        {
          v5 = &v35[v45 & 0xFFFFFFFFFFFFFFF8];
          v46 = v45 - 8;
          if ((unint64_t)(v45 - 8) >= 0x38)
          {
            v82 = &v34[8 * v43];
            v47 = v82;
            if ((unint64_t)(v82 - v7) >= 0x20)
            {
              v83 = (v46 >> 3) + 1;
              v84 = 8 * (v83 & 0x3FFFFFFFFFFFFFFCLL);
              v47 = &v35[v84];
              v7 += v84;
              v85 = (__int128 *)(v41 + 3);
              v86 = v82 + 16;
              v87 = v83 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v88 = *v85;
                *(v86 - 1) = *(v85 - 1);
                *v86 = v88;
                v85 += 2;
                v86 += 2;
                v87 -= 4;
              }
              while (v87);
              if (v83 == (v83 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_76;
            }
          }
          else
          {
            v47 = &v34[8 * v43];
          }
          do
          {
            v89 = *(_QWORD *)v7;
            v7 += 8;
            *(_QWORD *)v47 = v89;
            v47 += 8;
          }
          while (v47 != v5);
        }
LABEL_76:
        *(_QWORD *)a1 = v34;
        *(_QWORD *)(a1 + 8) = v35;
        *(_QWORD *)(a1 + 16) = v5;
        *(_QWORD *)(a1 + 24) = v36;
        if (v9)
        {
          operator delete(v9);
          v5 = *(char **)(a1 + 16);
        }
        goto LABEL_78;
      }
      goto LABEL_87;
    }
    goto LABEL_5;
  }
  v23 = v22 >> 2;
  if (v17 == *(_QWORD *)a1)
    v24 = 1;
  else
    v24 = v23;
  if (v24 >> 61)
    goto LABEL_87;
  v25 = (char *)operator new(8 * v24);
  v26 = operator new(0x1000uLL);
  v27 = &v25[8 * v21];
  v28 = &v25[8 * v24];
  if (v21 == v24)
  {
    v90 = v26;
    if (v20 < 1)
    {
      if (v18 == v19)
        v48 = 1;
      else
        v48 = v20 >> 2;
      if (v48 >> 61)
        sub_239418A80();
      v49 = (char *)operator new(8 * v48);
      v27 = &v49[8 * (v48 >> 2)];
      v28 = &v49[8 * v48];
      operator delete(v25);
      v50 = *(_QWORD *)(a1 + 8);
      v18 = *(_QWORD *)(a1 + 16);
      v25 = v49;
      *(_QWORD *)v27 = v90;
      v29 = v27 + 8;
      if (v18 == v50)
        goto LABEL_45;
    }
    else
    {
      v30 = v21 + 2;
      if (v21 >= -1)
        v30 = v21 + 1;
      v27 -= 8 * (v30 >> 1);
      *(_QWORD *)v27 = v26;
      v29 = v27 + 8;
      if (v18 == v19)
        goto LABEL_45;
    }
    do
    {
LABEL_50:
      if (v27 == v25)
      {
        if (v29 >= v28)
        {
          if (v28 == v27)
            v59 = 1;
          else
            v59 = (v28 - v27) >> 2;
          if (v59 >> 61)
            sub_239418A80();
          v60 = (char *)operator new(8 * v59);
          v25 = v60;
          v61 = (v59 + 3) >> 2;
          v53 = &v60[8 * v61];
          v62 = v29 - v27;
          v37 = v29 == v27;
          v29 = v53;
          if (!v37)
          {
            v29 = &v53[v62 & 0xFFFFFFFFFFFFFFF8];
            v63 = v62 - 8;
            v64 = &v60[8 * v61];
            v65 = v27;
            if (v63 < 0x38)
              goto LABEL_91;
            v66 = 8 * v61;
            v64 = &v60[8 * v61];
            v65 = v27;
            if ((unint64_t)(v64 - v27) < 0x20)
              goto LABEL_91;
            v67 = (v63 >> 3) + 1;
            v68 = 8 * (v67 & 0x3FFFFFFFFFFFFFFCLL);
            v64 = &v53[v68];
            v65 = &v27[v68];
            v69 = (__int128 *)(v27 + 16);
            v70 = &v60[v66 + 16];
            v71 = v67 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v72 = *v69;
              *((_OWORD *)v70 - 1) = *(v69 - 1);
              *(_OWORD *)v70 = v72;
              v69 += 2;
              v70 += 32;
              v71 -= 4;
            }
            while (v71);
            if (v67 != (v67 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_91:
              do
              {
                v73 = *(_QWORD *)v65;
                v65 += 8;
                *(_QWORD *)v64 = v73;
                v64 += 8;
              }
              while (v64 != v29);
            }
          }
          v28 = &v60[8 * v59];
          operator delete(v27);
        }
        else
        {
          v55 = (v28 - v29) >> 3;
          if (v55 >= -1)
            v56 = v55 + 1;
          else
            v56 = v55 + 2;
          v57 = &v29[8 * (v56 >> 1)];
          v53 = &v57[-(v29 - v27)];
          v58 = v29 - v27;
          v37 = v29 == v27;
          v29 = v57;
          if (!v37)
            memmove(v53, v27, v58);
          v25 = v27;
        }
      }
      else
      {
        v53 = v27;
      }
      v54 = *(_QWORD *)(v18 - 8);
      v18 -= 8;
      *((_QWORD *)v53 - 1) = v54;
      v51 = v53 - 8;
      v27 = v51;
    }
    while (v18 != *(_QWORD *)(a1 + 8));
    goto LABEL_46;
  }
  *(_QWORD *)v27 = v26;
  v29 = v27 + 8;
  if (v18 != v19)
    goto LABEL_50;
LABEL_45:
  v51 = v27;
LABEL_46:
  v52 = *(char **)a1;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v51;
  *(_QWORD *)(a1 + 16) = v29;
  *(_QWORD *)(a1 + 24) = v28;
  if (v52)
    operator delete(v52);
}

void sub_2396FE574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  void *v9;

  operator delete(__p);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_2396FE590(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_2396FE5A4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_2396FE5BC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_2396FE5D4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_250AE37A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2396FE5E8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_250AE37A0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_2396FE624(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE37D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2396FE634(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE37D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

pthread_mutex_t *sub_2396FE664(uint64_t a1)
{
  return sub_2397A163C((pthread_mutex_t *)(a1 + 24));
}

void sub_2396FE674()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2396FE688(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE3810;
  result[1] = v3;
  return result;
}

uint64_t sub_2396FE6BC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE3810;
  a2[1] = v2;
  return result;
}

uint64_t sub_2396FE6D8(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load(*(unsigned __int8 **)(a1 + 8));
  return v1 & 1;
}

_QWORD *sub_2396FE6E8(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AE3858;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_2396FE774(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AE3858;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2396FE810(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AE3858;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (!v5)
  {
LABEL_9:
    v2[8] = v5;
    return v2;
  }
  if (v5 != a1 + 40)
  {
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
    goto LABEL_9;
  }
  v2[8] = v2 + 5;
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  return v2;
}

void sub_2396FE8DC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
    {
      operator delete(v1);
      _Unwind_Resume(a1);
    }
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2396FE934(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AE3858;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_2396FEA10(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_2396FEA4C(uint64_t *a1)
{
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = a1[4];
  if ((uint64_t *)result == v2)
    return (*(uint64_t (**)(uint64_t *))(*v2 + 32))(v2);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

void sub_2396FEAE0(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

uint64_t sub_2396FEB60(uint64_t a1, int *a2)
{
  uint64_t result;
  int v3;

  result = *(_QWORD *)(a1 + 64);
  if (result)
  {
    v3 = *a2;
    return (*(uint64_t (**)(uint64_t, int *))(*(_QWORD *)result + 48))(result, &v3);
  }
  return result;
}

_QWORD *sub_2396FEB98(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AE38A0;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_2396FEC24(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AE38A0;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2396FECC0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AE38A0;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (!v5)
  {
LABEL_9:
    v2[8] = v5;
    return v2;
  }
  if (v5 != a1 + 40)
  {
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
    goto LABEL_9;
  }
  v2[8] = v2 + 5;
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  return v2;
}

void sub_2396FED8C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
    {
      operator delete(v1);
      _Unwind_Resume(a1);
    }
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2396FEDE4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AE38A0;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_2396FEEC0(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_2396FEEFC(uint64_t *a1)
{
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = a1[4];
  if ((uint64_t *)result == v2)
    return (*(uint64_t (**)(uint64_t *))(*v2 + 32))(v2);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

void sub_2396FEF90(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

uint64_t sub_2396FF010(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

uint64_t sub_2396FF028(uint64_t a1, double a2)
{
  std::chrono::system_clock::time_point v3;

  *(double *)a1 = a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (a2 < 0.0)
    sub_239EBF34C();
  v3.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)(a1 + 8) = v3;
  *(std::chrono::system_clock::time_point *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = 0;
  return a1;
}

std::chrono::system_clock::time_point sub_2396FF068(uint64_t a1, double a2)
{
  std::chrono::system_clock::time_point result;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v15;
  double v16;

  if (a2 < 0.0 || a2 > 100.0)
    sub_239EC1E20();
  result.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  v6 = a2 / 100.0;
  v7 = 1.0 - a2 / 100.0;
  v8 = fmax(v7, 0.0) * *(double *)a1;
  v9 = v8;
  if (a2 > 0.01)
  {
    v10 = (double)(result.__d_.__rep_ - *(_QWORD *)(a1 + 8)) / 1000000.0;
    v9 = v10 / v6 - v10;
  }
  v11 = v7 * v8 + v6 * v9;
  v12 = (double)(result.__d_.__rep_ - *(_QWORD *)(a1 + 16)) / 1000000.0;
  v13 = *(double *)(a1 + 24);
  v14 = v13 / 10.0;
  v15 = v12 >= v13 / 10.0 || v11 <= 10.0;
  v16 = vabdd_f64(v11, v13 - v12);
  if (v15 || v16 >= v14)
  {
    *(double *)(a1 + 24) = v11;
    *(std::chrono::system_clock::time_point *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_2396FF160@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  unsigned int *v5;
  unsigned int v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  unsigned int v19;
  _BYTE *v20;
  _BYTE *v21;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t (***v26)();
  uint64_t (**v28)();
  __int16 v29;
  std::__shared_weak_count *v30;
  uint64_t v31;
  uint64_t (**v32)();
  _QWORD v33[2];
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  int v38;
  int v39;
  char v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  if (a2 == 21)
  {
    v5 = (unsigned int *)(a1 + 56);
    v28 = &off_250AE38E8;
    sub_239708470((_DWORD *)(a1 + 56), &v29);
    v32 = &off_250ADBEA0;
    sub_239708F64((uint64_t)&v28, (uint64_t)v33);
    sub_239416DA0((uint64_t)&v29);
    nullsub_4(&v28);
    if (*(_DWORD *)(a1 + 60))
    {
      v6 = 0;
      v7 = 0;
      v8 = *(_DWORD *)(a1 + 52);
      v9 = v39;
      do
      {
        v10 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 72))
          v11 = v10 == 0;
        else
          v11 = 1;
        if (!v11)
        {
          v12 = *(_QWORD *)(a1 + 8);
          v13 = *(std::__shared_weak_count **)(a1 + 16);
          if (v13)
          {
            p_shared_owners = (unint64_t *)&v13->__shared_owners_;
            do
              v15 = __ldxr(p_shared_owners);
            while (__stxr(v15 + 1, p_shared_owners));
            do
              v16 = __ldaxr(p_shared_owners);
            while (__stlxr(v16 - 1, p_shared_owners));
            if (!v16)
            {
              ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
              std::__shared_weak_count::__release_weak(v13);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
          v10 = *(_QWORD *)(a1 + 24);
        }
        v17 = v35;
        if (v40)
          v18 = v35 == 0;
        else
          v18 = 1;
        if (!v18)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v33[0] + 88))(v33[0], 1, "unknown location");
          v17 = v35;
        }
        if (*v5)
        {
          v19 = 0;
          v20 = (_BYTE *)(v17 + (v9 * v7));
          v21 = (_BYTE *)(v10 + v6 + 2);
          do
          {
            *v20 = *v21;
            v20[1] = *(v21 - 1);
            v20[2] = *(v21 - 2);
            v20 += 2;
            ++v19;
            v21 += 2;
          }
          while (v19 < *v5);
        }
        ++v7;
        v6 += v8;
      }
      while (v7 < *(unsigned int *)(a1 + 60));
    }
    *a3 = &off_250ADB778;
    sub_239709138((uint64_t)&v32, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v33);
    v26 = &v32;
  }
  else
  {
    v28 = &off_250ADB210;
    sub_23970920C(a1, (uint64_t)&v29);
    LOBYTE(v33[0]) = 0;
    v34 = 0;
    LOBYTE(v35) = 0;
    v36 = 0;
    v37 = 1;
    v38 = 0;
    sub_23988A34C((uint64_t)&v28, a2, (uint64_t)&v32, (uint64_t)a3);
    nullsub_4(&v31);
    v23 = v30;
    if (v30)
    {
      v24 = (unint64_t *)&v30->__shared_owners_;
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    v26 = &v28;
  }
  return nullsub_4(v26);
}

void sub_2396FF428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  j_nullsub_4_89(v28);
  sub_239416DA0(a9);
  nullsub_4(&a28);
  _Unwind_Resume(a1);
}

void sub_2396FF44C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2396FF460(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2396FF474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  nullsub_4(&a28);
  sub_239416DA0(v28);
  nullsub_4(&a10);
  _Unwind_Resume(a1);
}

void sub_2396FF498(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2396FF4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  sub_239416DA0(a9);
  nullsub_4(&a28);
  _Unwind_Resume(a1);
}

double sub_2396FF4CC(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

uint64_t sub_2396FF4F4@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  float v6;
  unsigned int v7;
  unsigned int v8;
  unint64_t v9;
  int v10;
  const char *v11;
  uint64_t v12;
  const char *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  unsigned int v25;
  float v26;
  float v27;
  float v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  unsigned int v32;
  unsigned int v33;
  unint64_t v34;
  int v35;
  int8x16_t v36;
  float32x4_t v37;
  float32x4_t v38;
  int8x16_t v39;
  float32x4_t v40;
  float32x4_t v41;
  int8x16_t v45;
  int8x16_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int8 *v57;
  __int8 *v58;
  unint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  int8x16_t *v65;
  uint64_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  int v70;
  unsigned int v71;
  float v72;
  float v73;
  const char *v74;
  int8x16_t *v75;
  uint64_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  int8x16_t v85;
  unsigned int v86;
  unint64_t v87;
  int v88;
  unsigned int v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  BOOL v98;
  unsigned int v99;
  _BYTE *v100;
  _BYTE *v101;
  int8x16_t v102;
  int8x16_t v103;
  int8x16_t v104;
  unsigned int v105;
  unsigned int v106;
  unint64_t v107;
  int v108;
  unsigned int v109;
  int8x16_t v110;
  int8x16_t v111;
  float32x4_t v112;
  int8x16_t v114;
  int8x16_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  __int8 *v126;
  BOOL v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  const char *v131;
  float *v132;
  uint64_t v133;
  float32x4_t v134;
  float32x4_t v135;
  float32x4_t v136;
  float32x4_t v137;
  float32x4_t v138;
  float32x4_t v139;
  float *v140;
  float *v141;
  int v142;
  float v143;
  float v144;
  float v145;
  float v146;
  float v147;
  float v148;
  float v149;
  const char *v150;
  float *v151;
  uint64_t v152;
  float32x4_t v153;
  float32x4_t v154;
  float32x4_t v155;
  float32x4_t v156;
  int8x16_t v157;
  int8x16_t v158;
  int8x16_t v159;
  int8x16_t v160;
  float32x4_t v161;
  float32x4_t v162;
  float32x4_t v163;
  float32x4_t v164;
  float32x4_t v165;
  float *v166;
  float *v167;
  float *v168;
  unsigned int *v169;
  unsigned int v170;
  unint64_t v171;
  int v172;
  unsigned int v173;
  uint64_t v174;
  BOOL v175;
  uint64_t v176;
  std::__shared_weak_count *v177;
  unint64_t *v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  BOOL v182;
  unsigned int v183;
  _BYTE *v184;
  _BYTE *v185;
  unint64_t v186;
  int v187;
  unsigned int v188;
  uint64_t v189;
  BOOL v190;
  uint64_t v191;
  std::__shared_weak_count *v192;
  unint64_t *v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  BOOL v197;
  unsigned int v198;
  _BYTE *v199;
  _BYTE *v200;
  unint64_t v202;
  int v203;
  unsigned int v204;
  uint64_t v205;
  BOOL v206;
  uint64_t v207;
  std::__shared_weak_count *v208;
  unint64_t *v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  BOOL v213;
  unsigned int v214;
  _WORD *v215;
  _BYTE *v216;
  int8x16_t v219;
  int8x16_t v220;
  int8x16_t v221;
  unsigned int v222;
  unsigned int v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int8x16_t v227;
  int8x16_t v228;
  float32x4_t v229;
  int8x16_t v231;
  int8x16_t v232;
  const char *v233;
  uint64_t v234;
  BOOL v235;
  uint64_t v236;
  uint64_t v237;
  const char *v238;
  uint64_t v239;
  std::__shared_weak_count *v240;
  unint64_t *v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  __int8 *v247;
  BOOL v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  const char *v252;
  float *v253;
  uint64_t v254;
  float32x4_t v255;
  float32x4_t v256;
  float32x4_t v257;
  float32x4_t v258;
  float32x4_t v259;
  float32x4_t v260;
  float *v261;
  float *v262;
  int v263;
  float v264;
  float v265;
  float v266;
  float v267;
  float v268;
  float v269;
  float v270;
  const char *v271;
  float *v272;
  uint64_t v273;
  float32x4_t v274;
  float32x4_t v275;
  float32x4_t v276;
  float32x4_t v277;
  int8x16_t v278;
  float32x4_t v279;
  int8x16_t v280;
  float32x4_t v281;
  float32x4_t v282;
  int8x16_t v283;
  float32x4_t v284;
  float32x4_t v285;
  float32x4_t v286;
  float32x4_t v287;
  float *v288;
  float *v289;
  float *v290;
  std::__shared_weak_count *v291;
  unint64_t *v292;
  unint64_t v293;
  uint64_t (***v294)();
  unint64_t v295;
  int v296;
  unsigned int v297;
  uint64_t v298;
  BOOL v299;
  uint64_t v300;
  std::__shared_weak_count *v301;
  unint64_t *v302;
  unint64_t v303;
  unint64_t v304;
  uint64_t v305;
  BOOL v306;
  unsigned int v307;
  _BYTE *v308;
  _BYTE *v309;
  int v313;
  float32x4_t v314;
  float32x4_t v315;
  unsigned int v316;
  float32x4_t v317;
  float32x4_t v318;
  float32x4_t v319;
  float32x4_t v320;
  float32x4_t v321;
  float32x4_t v322;
  int v323;
  int v324;
  int v325;
  uint64_t (**v326)();
  uint64_t v327;
  std::__shared_weak_count *v328;
  uint64_t v329;
  uint64_t (**v330)();
  _QWORD v331[2];
  char v332;
  uint64_t v333;
  char v334;
  char v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  char v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  char v343;
  uint64_t v344;
  int8x16x3_t v345;
  int8x16x3_t v346;
  int8x16x3_t v347;
  float32x4x3_t v348;
  float32x4x3_t v349;
  float32x4x3_t v350;
  float32x4x3_t v351;
  float32x4x3_t v352;
  float32x4x3_t v353;
  float32x4x4_t v354;
  float32x4x4_t v355;
  float32x4x4_t v356;
  float32x4x4_t v357;
  float32x4x4_t v358;

  v344 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 1:
      v330 = &off_250ADB628;
      sub_2395793A0((_DWORD *)(a1 + 56), v331);
      if (v337)
      {
        v8 = 0;
        v9 = 0;
        v324 = *(_DWORD *)(a1 + 52);
        v10 = v338;
        v11 = "unknown location";
        v323 = v338;
        do
        {
          v12 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            _ZF = v12 == 0;
          else
            _ZF = 1;
          if (!_ZF)
          {
            v14 = v11;
            v15 = *(_QWORD *)(a1 + 8);
            v16 = *(std::__shared_weak_count **)(a1 + 16);
            if (v16)
            {
              p_shared_owners = (unint64_t *)&v16->__shared_owners_;
              do
                v18 = __ldxr(p_shared_owners);
              while (__stxr(v18 + 1, p_shared_owners));
              do
                v19 = __ldaxr(p_shared_owners);
              while (__stlxr(v19 - 1, p_shared_owners));
              if (!v19)
              {
                ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
                std::__shared_weak_count::__release_weak(v16);
              }
            }
            v11 = v14;
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, v14);
            v12 = *(_QWORD *)(a1 + 24);
            v10 = v323;
          }
          v20 = v333;
          if (v339)
            v21 = v333 == 0;
          else
            v21 = 1;
          if (!v21)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v331[0] + 88))(v331[0], 1, v11);
            v20 = v333;
          }
          if (v336)
          {
            v22 = 0;
            v23 = (_BYTE *)(v12 + (v324 * v9));
            v24 = v20 + v8;
            do
            {
              LOBYTE(v6) = *v23;
              v25 = 1050220167;
              LOBYTE(v25) = v23[1];
              LOBYTE(v7) = v23[2];
              v26 = (float)v7;
              v7 = 1038710997;
              v27 = (float)((float)((float)LODWORD(v6) * 0.299) + (float)((float)v25 * 0.587)) + (float)(v26 * 0.114);
              v28 = 255.0;
              if (v27 <= 255.0)
                v28 = v27;
              if (v27 >= 0.0)
                v6 = v28;
              else
                v6 = 0.0;
              *(_BYTE *)(v24 + v22++) = (int)v6;
              v23 += 3;
            }
            while (v22 < v336);
          }
          ++v9;
          v8 += v10;
        }
        while (v9 < v337);
      }
      *a3 = &off_250ADB778;
      sub_239709384((uint64_t)&v330, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v331);
      goto LABEL_319;
    case 4:
      v330 = &off_250ADD920;
      sub_239709458((_DWORD *)(a1 + 56), v331);
      if (!v337)
        goto LABEL_311;
      v32 = 0;
      v33 = 0;
      v34 = 0;
      v35 = *(_DWORD *)(a1 + 52);
      v325 = v338;
      v36 = (int8x16_t)xmmword_239EC7400;
      v37 = (float32x4_t)vdupq_n_s32(0x3E991687u);
      v38 = (float32x4_t)vdupq_n_s32(0x3F1645A2u);
      v39 = (int8x16_t)xmmword_239EC73F0;
      v40 = (float32x4_t)vdupq_n_s32(0x3DE978D5u);
      v41 = (float32x4_t)vdupq_n_s32(0x3B808081u);
      __asm { FMOV            V28.4S, #1.0 }
      v45 = (int8x16_t)xmmword_239EC7420;
      v46 = (int8x16_t)xmmword_239EC7410;
      v319 = v38;
      v321 = v37;
      v317 = v40;
      v314 = _Q28;
      v315 = v41;
      v313 = v35;
      do
      {
        v47 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 72))
          v48 = v47 == 0;
        else
          v48 = 1;
        if (!v48)
        {
          v49 = *(_QWORD *)(a1 + 8);
          v50 = *(std::__shared_weak_count **)(a1 + 16);
          if (v50)
          {
            v51 = (unint64_t *)&v50->__shared_owners_;
            do
              v52 = __ldxr(v51);
            while (__stxr(v52 + 1, v51));
            do
              v53 = __ldaxr(v51);
            while (__stlxr(v53 - 1, v51));
            if (!v53)
            {
              ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
              std::__shared_weak_count::__release_weak(v50);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v49 + 88))(v49, 0, "unknown location");
          v47 = *(_QWORD *)(a1 + 24);
          v35 = v313;
          v36 = (int8x16_t)xmmword_239EC7400;
          v38 = v319;
          v37 = v321;
          v40 = v317;
          v39 = (int8x16_t)xmmword_239EC73F0;
          _Q28 = v314;
          v41 = v315;
          v46 = (int8x16_t)xmmword_239EC7410;
          v45 = (int8x16_t)xmmword_239EC7420;
        }
        v54 = v333;
        if (v339 && v333)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v331[0] + 88))(v331[0], 1, "unknown location");
          v54 = v333;
          v36 = (int8x16_t)xmmword_239EC7400;
          v38 = v319;
          v37 = v321;
          v40 = v317;
          v39 = (int8x16_t)xmmword_239EC73F0;
          _Q28 = v314;
          v41 = v315;
          v46 = (int8x16_t)xmmword_239EC7410;
          v45 = (int8x16_t)xmmword_239EC7420;
        }
        v55 = v336;
        if (v336)
        {
          v56 = (v325 * v34);
          v57 = (__int8 *)(v54 + 4 * v56);
          v58 = (__int8 *)(v47 + (v35 * v34));
          if (v336 < 8
            || ((v59 = v54 + 4 * (v56 + v336 - 1) + 4, v57 < &v58[3 * v336])
              ? (_CF = (unint64_t)v58 >= v59)
              : (_CF = 1),
                !_CF))
          {
            LODWORD(v63) = 0;
            goto LABEL_61;
          }
          v61 = 4 * v32;
          if (v336 >= 0x10)
          {
            v62 = v336 & 0xFFFFFFF0;
            v74 = (const char *)(v47 + v33);
            v75 = (int8x16_t *)(v54 + v61);
            v76 = v62;
            do
            {
              v345 = vld3q_s8(v74);
              v74 += 48;
              v77 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[0], v46)), v37);
              v78 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[0], v36)), v37);
              v79 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[0], v39)), v37);
              v80 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[1], v45)), v38);
              v81 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[1], v46)), v38);
              v82 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[1], v36)), v38);
              v83 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[1], v39)), v38);
              v345.val[1] = (int8x16_t)vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[2], v46));
              v345.val[0] = (int8x16_t)vaddq_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[0], v45)), v37), v80), vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[2], v45)), v40));
              v84 = vmulq_f32(vaddq_f32(vaddq_f32(v79, v83), vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[2], v39)), v40)), v41);
              v345.val[2] = (int8x16_t)vmulq_f32(vaddq_f32(vaddq_f32(v78, v82), vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v345.val[2], v36)), v40)), v41);
              v345.val[1] = (int8x16_t)vmulq_f32(vaddq_f32(vaddq_f32(v77, v81), vmulq_f32((float32x4_t)v345.val[1], v40)), v41);
              v345.val[0] = (int8x16_t)vmulq_f32((float32x4_t)v345.val[0], v41);
              v85 = (int8x16_t)vcltzq_f32((float32x4_t)v345.val[2]);
              v31 = vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)v345.val[2], _Q28), (int8x16_t)_Q28, v345.val[2]);
              v30 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)v345.val[1], _Q28), (int8x16_t)_Q28, v345.val[1]), (int8x16_t)vcltzq_f32((float32x4_t)v345.val[1]));
              v75[2] = v30;
              v75[3] = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)v345.val[0], _Q28), (int8x16_t)_Q28, v345.val[0]), (int8x16_t)vcltzq_f32((float32x4_t)v345.val[0]));
              v29 = vbicq_s8(v31, v85);
              *v75 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v84, _Q28), (int8x16_t)_Q28, (int8x16_t)v84), (int8x16_t)vcltzq_f32(v84));
              v75[1] = v29;
              v75 += 4;
              v76 -= 16;
            }
            while (v76);
            if (v62 == v55)
              goto LABEL_32;
            if ((v55 & 8) == 0)
            {
              v58 += 3 * v62;
              v57 += 4 * v62;
              LODWORD(v63) = v55 & 0xFFFFFFF0;
LABEL_61:
              v70 = v55 - v63;
              do
              {
                v29.i8[0] = *v58;
                v31.i8[0] = v58[1];
                *(float *)&v71 = (float)v31.u32[0];
                v72 = *(float *)&v71 * 0.587;
                LOBYTE(v71) = v58[2];
                *(float *)v31.i32 = (float)v71 * 0.114;
                *(float *)v29.i32 = (float)((float)((float)((float)v29.u32[0] * 0.299) + v72) + *(float *)v31.i32)
                                  * 0.0039216;
                if (*(float *)v29.i32 <= 1.0)
                  v73 = *(float *)v29.i32;
                else
                  v73 = 1.0;
                if (*(float *)v29.i32 >= 0.0)
                  *(float *)v29.i32 = v73;
                else
                  *(float *)v29.i32 = 0.0;
                *(_DWORD *)v57 = v29.i32[0];
                v57 += 4;
                v58 += 3;
                --v70;
              }
              while (v70);
              goto LABEL_32;
            }
          }
          else
          {
            v62 = 0;
          }
          v63 = v55 & 0xFFFFFFF8;
          v57 += 4 * v63;
          v58 += 3 * v63;
          v64 = (const char *)(v47 + v33 + 3 * v62);
          v65 = (int8x16_t *)(v54 + v61 + 4 * v62);
          v66 = v62 - v63;
          do
          {
            *(int8x8x3_t *)v29.i8 = vld3_s8(v64);
            v64 += 24;
            v67 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v30, v36)), v38);
            v68 = vmulq_f32(vaddq_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v29, v39)), v37), vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v30, v39)), v38)), vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v31, v39)), v40)), v41);
            v69 = vmulq_f32(vaddq_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v29, v36)), v37), v67), vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v31, v36)), v40)), v41);
            v31 = (int8x16_t)vcltzq_f32(v69);
            v30 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v68, _Q28), (int8x16_t)_Q28, (int8x16_t)v68), (int8x16_t)vcltzq_f32(v68));
            v29 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v69, _Q28), (int8x16_t)_Q28, (int8x16_t)v69), v31);
            *v65 = v30;
            v65[1] = v29;
            v65 += 2;
            v66 += 8;
          }
          while (v66);
          if (v63 == v55)
            goto LABEL_32;
          goto LABEL_61;
        }
LABEL_32:
        ++v34;
        v33 += v35;
        v32 += v325;
      }
      while (v34 < v337);
LABEL_311:
      *a3 = &off_250ADB778;
      sub_2397096A8((uint64_t)&v330, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v331);
LABEL_319:
      v294 = &v330;
      return nullsub_4(v294);
    case 17:
      v330 = &off_250AE38E8;
      sub_239708470((_DWORD *)(a1 + 56), v331);
      if (v342)
      {
        v86 = 0;
        v87 = 0;
        v88 = *(_DWORD *)(a1 + 52);
        v89 = v340;
        do
        {
          v90 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            v91 = v90 == 0;
          else
            v91 = 1;
          if (!v91)
          {
            v92 = *(_QWORD *)(a1 + 8);
            v93 = *(std::__shared_weak_count **)(a1 + 16);
            if (v93)
            {
              v94 = (unint64_t *)&v93->__shared_owners_;
              do
                v95 = __ldxr(v94);
              while (__stxr(v95 + 1, v94));
              do
                v96 = __ldaxr(v94);
              while (__stlxr(v96 - 1, v94));
              if (!v96)
              {
                ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
                std::__shared_weak_count::__release_weak(v93);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v92 + 88))(v92, 0, "unknown location");
            v90 = *(_QWORD *)(a1 + 24);
          }
          v97 = v333;
          if (v343)
            v98 = v333 == 0;
          else
            v98 = 1;
          if (!v98)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v331[0] + 88))(v331[0], 1, "unknown location");
            v97 = v333;
          }
          if (v341)
          {
            v99 = 0;
            v100 = (_BYTE *)(v97 + v89 * v87);
            v101 = (_BYTE *)(v90 + v86 + 2);
            do
            {
              *v100 = *v101;
              v100[1] = *(v101 - 1);
              v100[2] = *(v101 - 2);
              v100 += 3;
              ++v99;
              v101 += 3;
            }
            while (v99 < v341);
          }
          ++v87;
          v86 += v88;
        }
        while (v87 < v342);
      }
      *a3 = &off_250ADB778;
      sub_23970B00C((uint64_t)&v330, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v331);
      goto LABEL_319;
    case 24:
      v330 = &off_250ADDC30;
      sub_239619E74((_DWORD *)(a1 + 56), v331);
      if (!v342)
        goto LABEL_313;
      v105 = 0;
      v106 = 0;
      v107 = 0;
      v108 = *(_DWORD *)(a1 + 52);
      v109 = v340;
      v110 = (int8x16_t)xmmword_239EC7400;
      v111 = (int8x16_t)xmmword_239EC73F0;
      v112 = (float32x4_t)vdupq_n_s32(0x3B808081u);
      __asm { FMOV            V29.4S, #1.0 }
      v114 = (int8x16_t)xmmword_239EC7420;
      v115 = (int8x16_t)xmmword_239EC7410;
      v320 = _Q29;
      v322 = v112;
      while (1)
      {
        v116 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 72))
          v117 = v116 == 0;
        else
          v117 = 1;
        if (!v117)
        {
          v118 = *(_QWORD *)(a1 + 8);
          v119 = *(std::__shared_weak_count **)(a1 + 16);
          if (v119)
          {
            v120 = (unint64_t *)&v119->__shared_owners_;
            do
              v121 = __ldxr(v120);
            while (__stxr(v121 + 1, v120));
            do
              v122 = __ldaxr(v120);
            while (__stlxr(v122 - 1, v120));
            if (!v122)
            {
              ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
              std::__shared_weak_count::__release_weak(v119);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v118 + 88))(v118, 0, "unknown location");
          v116 = *(_QWORD *)(a1 + 24);
          v111 = (int8x16_t)xmmword_239EC73F0;
          v110 = (int8x16_t)xmmword_239EC7400;
          _Q29 = v320;
          v112 = v322;
          v115 = (int8x16_t)xmmword_239EC7410;
          v114 = (int8x16_t)xmmword_239EC7420;
        }
        v123 = v333;
        if (v343 && v333)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v331[0] + 88))(v331[0], 1, "unknown location");
          v123 = v333;
          v111 = (int8x16_t)xmmword_239EC73F0;
          v110 = (int8x16_t)xmmword_239EC7400;
          _Q29 = v320;
          v112 = v322;
          v115 = (int8x16_t)xmmword_239EC7410;
          v114 = (int8x16_t)xmmword_239EC7420;
        }
        v124 = v341;
        if (!v341)
          goto LABEL_100;
        v125 = v123 + 4 * v109 * v107;
        v126 = (__int8 *)(v116 + (v108 * v107));
        if (v341 < 8
          || (v125 < (unint64_t)&v126[3 * v341]
            ? (v127 = (unint64_t)v126 >= v123
                                              + 4 * v109 * v107
                                              + 12 * (unint64_t)(v341 - 1)
                                              + 12)
            : (v127 = 1),
              !v127))
        {
          LODWORD(v130) = 0;
          goto LABEL_129;
        }
        v128 = 4 * v105;
        if (v341 >= 0x10)
        {
          v129 = v341 & 0xFFFFFFF0;
          v150 = (const char *)(v116 + v106);
          v151 = (float *)(v123 + v128);
          v152 = v129;
          do
          {
            v346 = vld3q_s8(v150);
            v150 += 48;
            v153 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[0], v114)), v112);
            v154 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[0], v115)), v112);
            v155 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[0], v110)), v112);
            v156 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[0], v111)), v112);
            v157 = (int8x16_t)vcltzq_f32(v156);
            v158 = (int8x16_t)vcltzq_f32(v154);
            v159 = vbslq_s8((int8x16_t)vcgtq_f32(v156, _Q29), (int8x16_t)_Q29, (int8x16_t)v156);
            v160 = vbslq_s8((int8x16_t)vcgtq_f32(v154, _Q29), (int8x16_t)_Q29, (int8x16_t)v154);
            v349.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v153, _Q29), (int8x16_t)_Q29, (int8x16_t)v153), (int8x16_t)vcltzq_f32(v153));
            v161 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[1], v114)), v112);
            v349.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v161, _Q29), (int8x16_t)_Q29, (int8x16_t)v161), (int8x16_t)vcltzq_f32(v161));
            v351.val[0] = (float32x4_t)vbicq_s8(v160, v158);
            v162 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[1], v115)), v112);
            v351.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v162, _Q29), (int8x16_t)_Q29, (int8x16_t)v162), (int8x16_t)vcltzq_f32(v162));
            v353.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v155, _Q29), (int8x16_t)_Q29, (int8x16_t)v155), (int8x16_t)vcltzq_f32(v155));
            v163 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[1], v110)), v112);
            v353.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v163, _Q29), (int8x16_t)_Q29, (int8x16_t)v163), (int8x16_t)vcltzq_f32(v163));
            v164 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[2], v110)), v112);
            v353.val[2] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v164, _Q29), (int8x16_t)_Q29, (int8x16_t)v164), (int8x16_t)vcltzq_f32(v164));
            v352.val[0] = (float32x4_t)vbicq_s8(v159, v157);
            v165 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[1], v111)), v112);
            v352.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v165, _Q29), (int8x16_t)_Q29, (int8x16_t)v165), (int8x16_t)vcltzq_f32(v165));
            v346.val[0] = (int8x16_t)vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[2], v111)), v112);
            v352.val[2] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)v346.val[0], _Q29), (int8x16_t)_Q29, v346.val[0]), (int8x16_t)vcltzq_f32((float32x4_t)v346.val[0]));
            v166 = v151;
            vst3q_f32(v166, v352);
            v166 += 12;
            vst3q_f32(v166, v353);
            v346.val[0] = (int8x16_t)vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[2], v115)), v112);
            v351.val[2] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)v346.val[0], _Q29), (int8x16_t)_Q29, v346.val[0]), (int8x16_t)vcltzq_f32((float32x4_t)v346.val[0]));
            v167 = v151 + 24;
            vst3q_f32(v167, v351);
            v346.val[0] = (int8x16_t)vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v346.val[2], v114)), v112);
            v103 = (int8x16_t)vcltzq_f32((float32x4_t)v346.val[0]);
            v104 = (int8x16_t)vcgtq_f32((float32x4_t)v346.val[0], _Q29);
            v168 = v151 + 36;
            v102 = vbslq_s8(v104, (int8x16_t)_Q29, v346.val[0]);
            v349.val[2] = (float32x4_t)vbicq_s8(v102, v103);
            vst3q_f32(v168, v349);
            v151 += 48;
            v152 -= 16;
          }
          while (v152);
          if (v129 == v124)
            goto LABEL_100;
          if ((v124 & 8) == 0)
          {
            v126 += 3 * v129;
            v125 += 12 * v129;
            LODWORD(v130) = v124 & 0xFFFFFFF0;
LABEL_129:
            v142 = v124 - v130;
            do
            {
              v102.i8[0] = *v126;
              *(float *)v102.i32 = (float)v102.u32[0] * 0.0039216;
              if (*(float *)v102.i32 <= 1.0)
                v143 = *(float *)v102.i32;
              else
                v143 = 1.0;
              if (*(float *)v102.i32 >= 0.0)
                v144 = v143;
              else
                v144 = 0.0;
              *(float *)v125 = v144;
              LOBYTE(v144) = v126[1];
              v145 = (float)LODWORD(v144) * 0.0039216;
              if (v145 <= 1.0)
                v146 = v145;
              else
                v146 = 1.0;
              if (v145 >= 0.0)
                v147 = v146;
              else
                v147 = 0.0;
              *(float *)(v125 + 4) = v147;
              LOBYTE(v147) = v126[2];
              v148 = (float)LODWORD(v147) * 0.0039216;
              if (v148 <= 1.0)
                v149 = v148;
              else
                v149 = 1.0;
              if (v148 >= 0.0)
                *(float *)v102.i32 = v149;
              else
                *(float *)v102.i32 = 0.0;
              *(_DWORD *)(v125 + 8) = v102.i32[0];
              v126 += 3;
              v125 += 12;
              --v142;
            }
            while (v142);
            goto LABEL_100;
          }
        }
        else
        {
          v129 = 0;
        }
        v130 = v124 & 0xFFFFFFF8;
        v125 += 12 * v130;
        v126 += 3 * v130;
        v131 = (const char *)(v116 + v106 + 3 * v129);
        v132 = (float *)(v123 + v128 + 12 * v129);
        v133 = v129 - v130;
        do
        {
          *(int8x8x3_t *)v102.i8 = vld3_s8(v131);
          v131 += 24;
          v134 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v102, v110)), v112);
          v135 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v102, v111)), v112);
          v350.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v134, _Q29), (int8x16_t)_Q29, (int8x16_t)v134), (int8x16_t)vcltzq_f32(v134));
          v136 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v103, v110)), v112);
          v350.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v136, _Q29), (int8x16_t)_Q29, (int8x16_t)v136), (int8x16_t)vcltzq_f32(v136));
          v137 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v104, v110)), v112);
          v350.val[2] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v137, _Q29), (int8x16_t)_Q29, (int8x16_t)v137), (int8x16_t)vcltzq_f32(v137));
          v348.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v135, _Q29), (int8x16_t)_Q29, (int8x16_t)v135), (int8x16_t)vcltzq_f32(v135));
          v138 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v103, v111)), v112);
          v348.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v138, _Q29), (int8x16_t)_Q29, (int8x16_t)v138), (int8x16_t)vcltzq_f32(v138));
          v139 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v104, v111)), v112);
          v103 = (int8x16_t)vcltzq_f32(v139);
          v140 = v132 + 24;
          v104 = (int8x16_t)vcgtq_f32(v139, _Q29);
          v102 = vbslq_s8(v104, (int8x16_t)_Q29, (int8x16_t)v139);
          v348.val[2] = (float32x4_t)vbicq_s8(v102, v103);
          vst3q_f32(v132, v348);
          v141 = v132 + 12;
          vst3q_f32(v141, v350);
          v132 = v140;
          v133 += 8;
        }
        while (v133);
        if (v130 != v124)
          goto LABEL_129;
LABEL_100:
        ++v107;
        v106 += v108;
        v105 += v109;
        if (v107 >= v342)
        {
LABEL_313:
          *a3 = &off_250ADB778;
          sub_23970977C((uint64_t)&v330, (uint64_t)(a3 + 1));
          sub_239416DA0((uint64_t)v331);
          goto LABEL_319;
        }
      }
    case 25:
      v169 = (unsigned int *)(a1 + 56);
      v330 = &off_250AE3B18;
      sub_23970A4EC((_DWORD *)(a1 + 56), v331);
      if (*(_DWORD *)(a1 + 60))
      {
        v170 = 0;
        v171 = 0;
        v172 = *(_DWORD *)(a1 + 52);
        v173 = v340;
        do
        {
          v174 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            v175 = v174 == 0;
          else
            v175 = 1;
          if (!v175)
          {
            v176 = *(_QWORD *)(a1 + 8);
            v177 = *(std::__shared_weak_count **)(a1 + 16);
            if (v177)
            {
              v178 = (unint64_t *)&v177->__shared_owners_;
              do
                v179 = __ldxr(v178);
              while (__stxr(v179 + 1, v178));
              do
                v180 = __ldaxr(v178);
              while (__stlxr(v180 - 1, v178));
              if (!v180)
              {
                ((void (*)(std::__shared_weak_count *))v177->__on_zero_shared)(v177);
                std::__shared_weak_count::__release_weak(v177);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v176 + 88))(v176, 0, "unknown location");
            v174 = *(_QWORD *)(a1 + 24);
          }
          v181 = v333;
          if (v343)
            v182 = v333 == 0;
          else
            v182 = 1;
          if (!v182)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v331[0] + 88))(v331[0], 1, "unknown location");
            v181 = v333;
          }
          if (*v169)
          {
            v183 = 0;
            v184 = (_BYTE *)(v181 + v173 * v171);
            v185 = (_BYTE *)(v174 + v170 + 2);
            do
            {
              *v184 = *v185;
              v184[1] = *(v185 - 1);
              v184[2] = *(v185 - 2);
              v184[3] = -1;
              v184 += 4;
              ++v183;
              v185 += 3;
            }
            while (v183 < *v169);
          }
          ++v171;
          v170 += v172;
        }
        while (v171 < *(unsigned int *)(a1 + 60));
      }
      *a3 = &off_250ADB778;
      sub_23970AF38((uint64_t)&v330, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v331);
      goto LABEL_319;
    case 29:
      v330 = &off_250AE0988;
      sub_23961950C((_DWORD *)(a1 + 56), v331);
      if (v342)
      {
        v186 = 0;
        v187 = *(_DWORD *)(a1 + 52);
        v188 = v340;
        do
        {
          v189 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            v190 = v189 == 0;
          else
            v190 = 1;
          if (!v190)
          {
            v191 = *(_QWORD *)(a1 + 8);
            v192 = *(std::__shared_weak_count **)(a1 + 16);
            if (v192)
            {
              v193 = (unint64_t *)&v192->__shared_owners_;
              do
                v194 = __ldxr(v193);
              while (__stxr(v194 + 1, v193));
              do
                v195 = __ldaxr(v193);
              while (__stlxr(v195 - 1, v193));
              if (!v195)
              {
                ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
                std::__shared_weak_count::__release_weak(v192);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v191 + 88))(v191, 0, "unknown location");
            v189 = *(_QWORD *)(a1 + 24);
          }
          v196 = v333;
          if (v343)
            v197 = v333 == 0;
          else
            v197 = 1;
          if (!v197)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v331[0] + 88))(v331[0], 1, "unknown location");
            v196 = v333;
          }
          if (v341)
          {
            v198 = 0;
            v199 = (_BYTE *)(v196 + v188 * v186);
            v200 = (_BYTE *)(v189 + (v187 * v186));
            do
            {
              *v199 = *v200;
              v199[1] = v200[1];
              v199[2] = v200[2];
              v199[3] = -1;
              v199 += 4;
              ++v198;
              v200 += 3;
            }
            while (v198 < v341);
          }
          ++v186;
        }
        while (v186 < v342);
      }
      *a3 = &off_250ADB778;
      sub_239709850((uint64_t)&v330, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v331);
      goto LABEL_319;
    case 31:
      v330 = &off_250AE0A08;
      sub_23961B3AC((_DWORD *)(a1 + 56), v331);
      if (v342)
      {
        v202 = 0;
        v203 = *(_DWORD *)(a1 + 52);
        v204 = v340;
        do
        {
          v205 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            v206 = v205 == 0;
          else
            v206 = 1;
          if (!v206)
          {
            v207 = *(_QWORD *)(a1 + 8);
            v208 = *(std::__shared_weak_count **)(a1 + 16);
            if (v208)
            {
              v209 = (unint64_t *)&v208->__shared_owners_;
              do
                v210 = __ldxr(v209);
              while (__stxr(v210 + 1, v209));
              do
                v211 = __ldaxr(v209);
              while (__stlxr(v211 - 1, v209));
              if (!v211)
              {
                ((void (*)(std::__shared_weak_count *))v208->__on_zero_shared)(v208);
                std::__shared_weak_count::__release_weak(v208);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v207 + 88))(v207, 0, "unknown location");
            v205 = *(_QWORD *)(a1 + 24);
          }
          v212 = v333;
          if (v343)
            v213 = v333 == 0;
          else
            v213 = 1;
          if (!v213)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v331[0] + 88))(v331[0], 1, "unknown location");
            v212 = v333;
          }
          if (v341)
          {
            v214 = 0;
            v215 = (_WORD *)(v212 + 2 * v204 * v202);
            v216 = (_BYTE *)(v205 + (v203 * v202));
            do
            {
              LOBYTE(_S0) = *v216;
              *(float *)&_S0 = (float)LODWORD(_S0) * 0.0039216;
              __asm { FCVT            H0, S0 }
              *v215 = _S0;
              LOBYTE(_S0) = v216[1];
              *(float *)&_S0 = (float)_S0 * 0.0039216;
              __asm { FCVT            H0, S0 }
              v215[1] = _S0;
              LOBYTE(_S0) = v216[2];
              _S0 = (float)_S0 * 0.0039216;
              __asm { FCVT            H0, S0 }
              v215[2] = LOWORD(_S0);
              v215[3] = 15360;
              ++v214;
              v216 += 3;
              v215 += 4;
            }
            while (v214 < v341);
          }
          ++v202;
        }
        while (v202 < v342);
      }
      *a3 = &off_250ADB778;
      sub_23970B0E0((uint64_t)&v330, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v331);
      goto LABEL_319;
    case 32:
      v330 = &off_250AE08B8;
      sub_23961A0DC((_DWORD *)(a1 + 56), v331);
      if (!v342)
        goto LABEL_317;
      v222 = 0;
      v223 = 0;
      v224 = 0;
      v225 = *(unsigned int *)(a1 + 52);
      v226 = v340;
      v227 = (int8x16_t)xmmword_239EC7400;
      v228 = (int8x16_t)xmmword_239EC73F0;
      v229 = (float32x4_t)vdupq_n_s32(0x3B808081u);
      __asm { FMOV            V15.4S, #1.0 }
      v231 = (int8x16_t)xmmword_239EC7420;
      v232 = (int8x16_t)xmmword_239EC7410;
      v233 = "unknown location";
      v318 = v229;
      break;
    case 37:
      v330 = &off_250AE3A00;
      sub_239709924((_DWORD *)(a1 + 56), v331);
      if (v342)
      {
        v295 = 0;
        v296 = *(_DWORD *)(a1 + 52);
        v297 = v340;
        do
        {
          v298 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            v299 = v298 == 0;
          else
            v299 = 1;
          if (!v299)
          {
            v300 = *(_QWORD *)(a1 + 8);
            v301 = *(std::__shared_weak_count **)(a1 + 16);
            if (v301)
            {
              v302 = (unint64_t *)&v301->__shared_owners_;
              do
                v303 = __ldxr(v302);
              while (__stxr(v303 + 1, v302));
              do
                v304 = __ldaxr(v302);
              while (__stlxr(v304 - 1, v302));
              if (!v304)
              {
                ((void (*)(std::__shared_weak_count *))v301->__on_zero_shared)(v301);
                std::__shared_weak_count::__release_weak(v301);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v300 + 88))(v300, 0, "unknown location");
            v298 = *(_QWORD *)(a1 + 24);
          }
          v305 = v333;
          if (v343)
            v306 = v333 == 0;
          else
            v306 = 1;
          if (!v306)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v331[0] + 88))(v331[0], 1, "unknown location");
            v305 = v333;
          }
          if (v341)
          {
            v307 = 0;
            v308 = (_BYTE *)(v305 + v297 * v295);
            v309 = (_BYTE *)(v298 + (v296 * v295));
            do
            {
              *v308 = -1;
              v308[1] = *v309;
              v308[2] = v309[1];
              v308[3] = v309[2];
              v308 += 4;
              ++v307;
              v309 += 3;
            }
            while (v307 < v341);
          }
          ++v295;
        }
        while (v295 < v342);
      }
      *a3 = &off_250ADB778;
      sub_23970A418((uint64_t)&v330, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v331);
      goto LABEL_319;
    default:
      v326 = &off_250ADB210;
      sub_23970B288(a1, (uint64_t)&v327);
      LOBYTE(v331[0]) = 0;
      v332 = 0;
      LOBYTE(v333) = 0;
      v334 = 0;
      v335 = 1;
      v336 = 0;
      sub_23988A34C((uint64_t)&v326, a2, (uint64_t)&v330, (uint64_t)a3);
      nullsub_4(&v329);
      v291 = v328;
      if (v328)
      {
        v292 = (unint64_t *)&v328->__shared_owners_;
        do
          v293 = __ldaxr(v292);
        while (__stlxr(v293 - 1, v292));
        if (!v293)
        {
          ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
          std::__shared_weak_count::__release_weak(v291);
        }
      }
      v294 = &v326;
      return nullsub_4(v294);
  }
  while (1)
  {
    v234 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v235 = v234 == 0;
    else
      v235 = 1;
    if (!v235)
    {
      v316 = v222;
      v236 = v226;
      v237 = v225;
      v238 = v233;
      v239 = *(_QWORD *)(a1 + 8);
      v240 = *(std::__shared_weak_count **)(a1 + 16);
      if (v240)
      {
        v241 = (unint64_t *)&v240->__shared_owners_;
        do
          v242 = __ldxr(v241);
        while (__stxr(v242 + 1, v241));
        do
          v243 = __ldaxr(v241);
        while (__stlxr(v243 - 1, v241));
        if (!v243)
        {
          ((void (*)(std::__shared_weak_count *))v240->__on_zero_shared)(v240);
          std::__shared_weak_count::__release_weak(v240);
        }
      }
      v233 = v238;
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v239 + 88))(v239, 0, v238);
      v234 = *(_QWORD *)(a1 + 24);
      v228 = (int8x16_t)xmmword_239EC73F0;
      v227 = (int8x16_t)xmmword_239EC7400;
      v229 = v318;
      v232 = (int8x16_t)xmmword_239EC7410;
      v231 = (int8x16_t)xmmword_239EC7420;
      v225 = v237;
      v226 = v236;
      v222 = v316;
    }
    v244 = v333;
    if (v343 && v333)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v331[0] + 88))(v331[0], 1, v233);
      v244 = v333;
      v228 = (int8x16_t)xmmword_239EC73F0;
      v227 = (int8x16_t)xmmword_239EC7400;
      v229 = v318;
      v232 = (int8x16_t)xmmword_239EC7410;
      v231 = (int8x16_t)xmmword_239EC7420;
    }
    v245 = v341;
    if (!v341)
      goto LABEL_226;
    v246 = v244 + 4 * (v226 * v224);
    v247 = (__int8 *)(v234 + (v225 * v224));
    if (v341 < 8
      || (v246 < (unint64_t)&v247[3 * v341]
        ? (v248 = (unint64_t)v247 >= v244
                                          + 4 * (v226 * v224)
                                          + 16 * (unint64_t)(v341 - 1)
                                          + 16)
        : (v248 = 1),
          !v248))
    {
      LODWORD(v251) = 0;
      goto LABEL_255;
    }
    v249 = 4 * v222;
    if (v341 >= 0x10)
    {
      v250 = v341 & 0xFFFFFFF0;
      v271 = (const char *)(v234 + v223);
      v272 = (float *)(v244 + v249);
      v273 = v250;
      do
      {
        v347 = vld3q_s8(v271);
        v271 += 48;
        v274 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[0], v231)), v229);
        v275 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[0], v232)), v229);
        v276 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[0], v227)), v229);
        v277 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[0], v228)), v229);
        v278 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v274, _Q15), (int8x16_t)_Q15, (int8x16_t)v274), (int8x16_t)vcltzq_f32(v274));
        v279 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[1], v231)), v229);
        v280 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v279, _Q15), (int8x16_t)_Q15, (int8x16_t)v279), (int8x16_t)vcltzq_f32(v279));
        v281 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[2], v231)), v229);
        v356.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v275, _Q15), (int8x16_t)_Q15, (int8x16_t)v275), (int8x16_t)vcltzq_f32(v275));
        v282 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[1], v232)), v229);
        v283 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v281, _Q15), (int8x16_t)_Q15, (int8x16_t)v281), (int8x16_t)vcltzq_f32(v281));
        v356.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v282, _Q15), (int8x16_t)_Q15, (int8x16_t)v282), (int8x16_t)vcltzq_f32(v282));
        v284 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[2], v232)), v229);
        v357.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v276, _Q15), (int8x16_t)_Q15, (int8x16_t)v276), (int8x16_t)vcltzq_f32(v276));
        v356.val[2] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v284, _Q15), (int8x16_t)_Q15, (int8x16_t)v284), (int8x16_t)vcltzq_f32(v284));
        v285 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[1], v227)), v229);
        v356.val[3] = _Q15;
        v286 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[2], v227)), v229);
        v357.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v285, _Q15), (int8x16_t)_Q15, (int8x16_t)v285), (int8x16_t)vcltzq_f32(v285));
        v358.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v277, _Q15), (int8x16_t)_Q15, (int8x16_t)v277), (int8x16_t)vcltzq_f32(v277));
        v357.val[2] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v286, _Q15), (int8x16_t)_Q15, (int8x16_t)v286), (int8x16_t)vcltzq_f32(v286));
        v287 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[1], v228)), v229);
        v357.val[3] = _Q15;
        v347.val[0] = (int8x16_t)vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v347.val[2], v228)), v229);
        v220 = (int8x16_t)vcltzq_f32((float32x4_t)v347.val[0]);
        v221 = (int8x16_t)vcgtq_f32((float32x4_t)v347.val[0], _Q15);
        v219 = vbslq_s8(v221, (int8x16_t)_Q15, v347.val[0]);
        v358.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v287, _Q15), (int8x16_t)_Q15, (int8x16_t)v287), (int8x16_t)vcltzq_f32(v287));
        v358.val[2] = (float32x4_t)vbicq_s8(v219, v220);
        v358.val[3] = _Q15;
        v288 = v272;
        v289 = v272 + 32;
        v290 = v272 + 48;
        vst4q_f32(v288, v358);
        v288 += 16;
        vst4q_f32(v289, v356);
        vst4q_f32(v290, *(float32x4x4_t *)(&_Q15 - 3));
        vst4q_f32(v288, v357);
        v232 = (int8x16_t)xmmword_239EC7410;
        v231 = (int8x16_t)xmmword_239EC7420;
        v272 += 64;
        v273 -= 16;
      }
      while (v273);
      if (v250 == v245)
        goto LABEL_226;
      if ((v245 & 8) == 0)
      {
        v247 += 3 * v250;
        v246 += 16 * v250;
        LODWORD(v251) = v245 & 0xFFFFFFF0;
LABEL_255:
        v263 = v245 - v251;
        do
        {
          v219.i8[0] = *v247;
          *(float *)v219.i32 = (float)v219.u32[0] * 0.0039216;
          if (*(float *)v219.i32 <= 1.0)
            v264 = *(float *)v219.i32;
          else
            v264 = 1.0;
          if (*(float *)v219.i32 >= 0.0)
            v265 = v264;
          else
            v265 = 0.0;
          *(float *)v246 = v265;
          LOBYTE(v265) = v247[1];
          v266 = (float)LODWORD(v265) * 0.0039216;
          if (v266 <= 1.0)
            v267 = v266;
          else
            v267 = 1.0;
          if (v266 >= 0.0)
            v268 = v267;
          else
            v268 = 0.0;
          *(float *)(v246 + 4) = v268;
          LOBYTE(v268) = v247[2];
          v269 = (float)LODWORD(v268) * 0.0039216;
          if (v269 <= 1.0)
            v270 = v269;
          else
            v270 = 1.0;
          if (v269 >= 0.0)
            *(float *)v219.i32 = v270;
          else
            *(float *)v219.i32 = 0.0;
          *(_DWORD *)(v246 + 8) = v219.i32[0];
          *(_DWORD *)(v246 + 12) = 1065353216;
          v247 += 3;
          v246 += 16;
          --v263;
        }
        while (v263);
        goto LABEL_226;
      }
    }
    else
    {
      v250 = 0;
    }
    v251 = v245 & 0xFFFFFFF8;
    v246 += 16 * v251;
    v247 += 3 * v251;
    v252 = (const char *)(v234 + v223 + 3 * v250);
    v253 = (float *)(v244 + v249 + 16 * v250);
    v254 = v250 - v251;
    do
    {
      *(int8x8x3_t *)v219.i8 = vld3_s8(v252);
      v252 += 24;
      v255 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v219, v227)), v229);
      v256 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v219, v228)), v229);
      v355.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v255, _Q15), (int8x16_t)_Q15, (int8x16_t)v255), (int8x16_t)vcltzq_f32(v255));
      v257 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v220, v227)), v229);
      v355.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v257, _Q15), (int8x16_t)_Q15, (int8x16_t)v257), (int8x16_t)vcltzq_f32(v257));
      v258 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v221, v227)), v229);
      v355.val[2] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v258, _Q15), (int8x16_t)_Q15, (int8x16_t)v258), (int8x16_t)vcltzq_f32(v258));
      v355.val[3] = _Q15;
      v354.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v256, _Q15), (int8x16_t)_Q15, (int8x16_t)v256), (int8x16_t)vcltzq_f32(v256));
      v259 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v220, v228)), v229);
      v354.val[1] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v259, _Q15), (int8x16_t)_Q15, (int8x16_t)v259), (int8x16_t)vcltzq_f32(v259));
      v260 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v221, v228)), v229);
      v220 = (int8x16_t)vcltzq_f32(v260);
      v221 = (int8x16_t)vcgtq_f32(v260, _Q15);
      v219 = vbslq_s8(v221, (int8x16_t)_Q15, (int8x16_t)v260);
      v354.val[2] = (float32x4_t)vbicq_s8(v219, v220);
      v354.val[3] = _Q15;
      v261 = v253 + 32;
      vst4q_f32(v253, v354);
      v262 = v253 + 16;
      vst4q_f32(v262, v355);
      v253 = v261;
      v254 += 8;
    }
    while (v254);
    if (v251 != v245)
      goto LABEL_255;
LABEL_226:
    ++v224;
    v223 += v225;
    v222 += v226;
    if (v224 >= v342)
    {
LABEL_317:
      *a3 = &off_250ADB778;
      sub_23970B1B4((uint64_t)&v330, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v331);
      goto LABEL_319;
    }
  }
}

void sub_239700F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;
  uint64_t v47;

  j_nullsub_4_89(v47);
  sub_239416DA0(v46);
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239700F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;

  j_nullsub_4_89(v46);
  sub_239416DA0(a17);
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239700F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;
  uint64_t v47;

  j_nullsub_4_89(v47);
  sub_239416DA0(v46);
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239700F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;
  uint64_t v47;

  j_nullsub_4_89(v47);
  sub_239416DA0(v46);
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239700FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;

  j_nullsub_4_89(v46);
  sub_239416DA0(a37);
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239700FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;

  j_nullsub_4_89(v46);
  sub_239416DA0(a19);
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239700FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;
  uint64_t v47;

  j_nullsub_4_89(v47);
  sub_239416DA0(v46);
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239701020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;

  j_nullsub_4_89(v46);
  sub_239416DA0(a10);
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239701044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;

  j_nullsub_4_89(v46);
  sub_239416DA0(a27);
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239701068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_23970107C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  sub_239416FF8((uint64_t)&a39);
  _Unwind_Resume(a1);
}

void sub_239701090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  nullsub_4(&a39);
  _Unwind_Resume(a1);
}

void sub_2397010A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_2397010B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_2397010CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_2397010E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_2397010F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239701108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_23970111C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239701130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

void sub_239701144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v46;

  sub_239416DA0(v46);
  nullsub_4(&a46);
  _Unwind_Resume(a1);
}

double sub_239701264(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

double sub_23970128C(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

uint64_t sub_2397012B4@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  unsigned int v6;
  unint64_t v7;
  int v8;
  const char *v9;
  uint64_t v10;
  const char *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  float *v21;
  uint64_t v22;
  float v23;
  float v24;
  float v25;
  float v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t (***v30)();
  unsigned int v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  float *v53;
  float *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v58;
  const float *v59;
  int8x16_t *v60;
  uint64_t v61;
  const float *v62;
  int v63;
  float v64;
  float v65;
  float v66;
  float v67;
  float v68;
  unint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  BOOL v80;
  unsigned int v81;
  _BYTE *v82;
  float *v83;
  float v84;
  float v85;
  float v86;
  float v87;
  float v88;
  float v89;
  float v90;
  float v91;
  float v92;
  unint64_t v93;
  int v94;
  int v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  BOOL v104;
  unsigned int v105;
  _WORD *v106;
  int *v107;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  unsigned int v114;
  unsigned int v115;
  unint64_t v116;
  int v117;
  int v118;
  uint64_t v120;
  BOOL v121;
  uint64_t v122;
  std::__shared_weak_count *v123;
  unint64_t *v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _DWORD *v129;
  _DWORD *v130;
  BOOL v131;
  uint64_t v132;
  const float *v133;
  float *v134;
  uint64_t v135;
  const float *v136;
  float *v137;
  int v138;
  int v142;
  float32x4_t v143;
  float32x4_t v144;
  int v145;
  float32x4_t v146;
  int v147;
  float32x4_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  float32x4_t v152;
  uint64_t (**v153)();
  uint64_t v154;
  std::__shared_weak_count *v155;
  uint64_t v156;
  uint64_t (**v157)();
  _QWORD v158[2];
  char v159;
  uint64_t v160;
  char v161;
  char v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  char v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  char v170;
  uint64_t v171;
  float32x4x3_t v172;
  float32x4x3_t v173;
  float32x4x4_t v174;

  v171 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 1:
      v157 = &off_250ADB628;
      sub_2395793A0((_DWORD *)(a1 + 56), v158);
      if (v164)
      {
        v6 = 0;
        v7 = 0;
        v147 = *(_DWORD *)(a1 + 52);
        v8 = v165;
        v9 = "unknown location";
        v145 = v165;
        do
        {
          v10 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            _ZF = v10 == 0;
          else
            _ZF = 1;
          if (!_ZF)
          {
            v12 = v9;
            v13 = *(_QWORD *)(a1 + 8);
            v14 = *(std::__shared_weak_count **)(a1 + 16);
            if (v14)
            {
              p_shared_owners = (unint64_t *)&v14->__shared_owners_;
              do
                v16 = __ldxr(p_shared_owners);
              while (__stxr(v16 + 1, p_shared_owners));
              do
                v17 = __ldaxr(p_shared_owners);
              while (__stlxr(v17 - 1, p_shared_owners));
              if (!v17)
              {
                ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
                std::__shared_weak_count::__release_weak(v14);
              }
            }
            v9 = v12;
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v13 + 88))(v13, 0, v12);
            v10 = *(_QWORD *)(a1 + 24);
            v8 = v145;
          }
          v18 = v160;
          if (v166)
            v19 = v160 == 0;
          else
            v19 = 1;
          if (!v19)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v158[0] + 88))(v158[0], 1, v9);
            v18 = v160;
          }
          if (v163)
          {
            v20 = 0;
            v21 = (float *)(v10 + 4 * (v147 * v7));
            v22 = v18 + v6;
            do
            {
              v23 = v21[2];
              v24 = 255.0;
              v25 = (float)((float)((float)(*v21 * 0.299) + (float)(v21[1] * 0.587)) + (float)(v23 * 0.114)) * 255.0;
              if (v25 <= 255.0)
                v24 = (float)((float)((float)(*v21 * 0.299) + (float)(v21[1] * 0.587)) + (float)(v23 * 0.114)) * 255.0;
              if (v25 >= 0.0)
                v26 = v24;
              else
                v26 = 0.0;
              *(_BYTE *)(v22 + v20++) = (int)v26;
              v21 += 3;
            }
            while (v20 < v163);
          }
          ++v7;
          v6 += v8;
        }
        while (v7 < v164);
      }
      *a3 = &off_250ADB778;
      sub_239709384((uint64_t)&v157, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v158);
      goto LABEL_174;
    case 4:
      v157 = &off_250ADD920;
      sub_239709458((_DWORD *)(a1 + 56), v158);
      if (!v164)
        goto LABEL_170;
      v31 = 0;
      v32 = 0;
      v33 = 0;
      v34 = *(unsigned int *)(a1 + 52);
      v35 = v165;
      v36 = (float32x4_t)vdupq_n_s32(0x3E991687u);
      v37 = (float32x4_t)vdupq_n_s32(0x3F1645A2u);
      v38 = (float32x4_t)vdupq_n_s32(0x3DE978D5u);
      __asm { FMOV            V21.4S, #1.0 }
      v146 = v37;
      v148 = v36;
      v143 = _Q21;
      v144 = v38;
      v142 = v165;
      do
      {
        v42 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 72))
          v43 = v42 == 0;
        else
          v43 = 1;
        if (!v43)
        {
          v44 = v34;
          v45 = *(_QWORD *)(a1 + 8);
          v46 = *(std::__shared_weak_count **)(a1 + 16);
          if (v46)
          {
            v47 = (unint64_t *)&v46->__shared_owners_;
            do
              v48 = __ldxr(v47);
            while (__stxr(v48 + 1, v47));
            do
              v49 = __ldaxr(v47);
            while (__stlxr(v49 - 1, v47));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
              std::__shared_weak_count::__release_weak(v46);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v45 + 88))(v45, 0, "unknown location");
          v42 = *(_QWORD *)(a1 + 24);
          v34 = v44;
          v35 = v142;
          v37 = v146;
          v36 = v148;
          _Q21 = v143;
          v38 = v144;
        }
        v50 = v160;
        if (v166 && v160)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v158[0] + 88))(v158[0], 1, "unknown location");
          v50 = v160;
          v37 = v146;
          v36 = v148;
          _Q21 = v143;
          v38 = v144;
        }
        v51 = v163;
        if (v163)
        {
          v52 = (v35 * v33);
          v53 = (float *)(v50 + 4 * v52);
          v54 = (float *)(v42 + 4 * (v34 * v33));
          if (v163 >= 8
            && ((v55 = v163 - 1,
                 v56 = v50 + 4 * (v52 + v55) + 4,
                 (unint64_t)v53 < v42
                                       + 4 * (v34 * v33)
                                       + 12 * (unint64_t)v55
                                       + 12)
              ? (_CF = (unint64_t)v54 >= v56)
              : (_CF = 1),
                _CF))
          {
            v58 = v163 & 0xFFFFFFF8;
            v53 += v58;
            v54 += 3 * v58;
            v59 = (const float *)(v42 + 4 * v32);
            v60 = (int8x16_t *)(v50 + 4 * v31 + 16);
            v61 = v58;
            do
            {
              v62 = v59;
              v59 += 24;
              v172 = vld3q_f32(v62);
              v62 += 12;
              v173 = vld3q_f32(v62);
              v172.val[0] = vaddq_f32(vaddq_f32(vmulq_f32(v172.val[0], v36), vmulq_f32(v172.val[1], v37)), vmulq_f32(v172.val[2], v38));
              v172.val[1] = vaddq_f32(vaddq_f32(vmulq_f32(v173.val[0], v36), vmulq_f32(v173.val[1], v37)), vmulq_f32(v173.val[2], v38));
              v60[-1] = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v172.val[0], _Q21), (int8x16_t)_Q21, (int8x16_t)v172.val[0]), (int8x16_t)vcltzq_f32(v172.val[0]));
              *v60 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v172.val[1], _Q21), (int8x16_t)_Q21, (int8x16_t)v172.val[1]), (int8x16_t)vcltzq_f32(v172.val[1]));
              v60 += 2;
              v61 -= 8;
            }
            while (v61);
            if (v58 == v51)
              goto LABEL_38;
          }
          else
          {
            LODWORD(v58) = 0;
          }
          v63 = v51 - v58;
          do
          {
            v64 = v54[1] * 0.587;
            v65 = v54[2] * 0.114;
            v66 = (float)((float)(*v54 * 0.299) + v64) + v65;
            if (v66 <= 1.0)
              v67 = (float)((float)(*v54 * 0.299) + v64) + v65;
            else
              v67 = 1.0;
            if (v66 >= 0.0)
              v68 = v67;
            else
              v68 = 0.0;
            *v53++ = v68;
            v54 += 3;
            --v63;
          }
          while (v63);
        }
LABEL_38:
        ++v33;
        v32 += v34;
        v31 += v35;
      }
      while (v33 < v164);
LABEL_170:
      *a3 = &off_250ADB778;
      sub_2397096A8((uint64_t)&v157, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v158);
LABEL_174:
      v30 = &v157;
      return nullsub_4(v30);
    case 21:
      v157 = &off_250ADBEA0;
      sub_2396192A4((_DWORD *)(a1 + 56), v158);
      if (v169)
      {
        v69 = 0;
        v70 = *(_DWORD *)(a1 + 52);
        v71 = v167;
        do
        {
          v72 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            v73 = v72 == 0;
          else
            v73 = 1;
          if (!v73)
          {
            v74 = *(_QWORD *)(a1 + 8);
            v75 = *(std::__shared_weak_count **)(a1 + 16);
            if (v75)
            {
              v76 = (unint64_t *)&v75->__shared_owners_;
              do
                v77 = __ldxr(v76);
              while (__stxr(v77 + 1, v76));
              do
                v78 = __ldaxr(v76);
              while (__stlxr(v78 - 1, v76));
              if (!v78)
              {
                ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
                std::__shared_weak_count::__release_weak(v75);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v74 + 88))(v74, 0, "unknown location");
            v72 = *(_QWORD *)(a1 + 24);
          }
          v79 = v160;
          if (v170)
            v80 = v160 == 0;
          else
            v80 = 1;
          if (!v80)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v158[0] + 88))(v158[0], 1, "unknown location");
            v79 = v160;
          }
          if (v168)
          {
            v81 = 0;
            v82 = (_BYTE *)(v79 + (v71 * v69));
            v83 = (float *)(v72 + 4 * (v70 * v69));
            do
            {
              v84 = 255.0;
              v85 = *v83 * 255.0;
              if (v85 <= 255.0)
                v86 = *v83 * 255.0;
              else
                v86 = 255.0;
              if (v85 >= 0.0)
                v87 = v86;
              else
                v87 = 0.0;
              *v82 = (int)v87;
              v88 = v83[1] * 255.0;
              if (v88 <= 255.0)
                v89 = v83[1] * 255.0;
              else
                v89 = 255.0;
              if (v88 >= 0.0)
                v90 = v89;
              else
                v90 = 0.0;
              v82[1] = (int)v90;
              v91 = v83[2] * 255.0;
              if (v91 <= 255.0)
                v84 = v83[2] * 255.0;
              if (v91 >= 0.0)
                v92 = v84;
              else
                v92 = 0.0;
              v82[2] = (int)v92;
              v82 += 3;
              ++v81;
              v83 += 3;
            }
            while (v81 < v168);
          }
          ++v69;
        }
        while (v69 < v169);
      }
      *a3 = &off_250ADB778;
      sub_239709138((uint64_t)&v157, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v158);
      goto LABEL_174;
    case 31:
      v157 = &off_250AE0A08;
      sub_23961B3AC((_DWORD *)(a1 + 56), v158);
      if (v169)
      {
        v93 = 0;
        v94 = *(_DWORD *)(a1 + 52);
        v95 = v167;
        do
        {
          v96 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            v97 = v96 == 0;
          else
            v97 = 1;
          if (!v97)
          {
            v98 = *(_QWORD *)(a1 + 8);
            v99 = *(std::__shared_weak_count **)(a1 + 16);
            if (v99)
            {
              v100 = (unint64_t *)&v99->__shared_owners_;
              do
                v101 = __ldxr(v100);
              while (__stxr(v101 + 1, v100));
              do
                v102 = __ldaxr(v100);
              while (__stlxr(v102 - 1, v100));
              if (!v102)
              {
                ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
                std::__shared_weak_count::__release_weak(v99);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v98 + 88))(v98, 0, "unknown location");
            v96 = *(_QWORD *)(a1 + 24);
          }
          v103 = v160;
          if (v170)
            v104 = v160 == 0;
          else
            v104 = 1;
          if (!v104)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v158[0] + 88))(v158[0], 1, "unknown location");
            v103 = v160;
          }
          if (v168)
          {
            v105 = 0;
            v106 = (_WORD *)(v103 + 2 * (v95 * v93));
            v107 = (int *)(v96 + 4 * (v94 * v93));
            do
            {
              _S0 = *v107;
              __asm { FCVT            H0, S0 }
              *v106 = _S0;
              _S0 = v107[1];
              __asm { FCVT            H0, S0 }
              v106[1] = _S0;
              _S0 = v107[2];
              __asm { FCVT            H0, S0 }
              v106[2] = _S0;
              v106[3] = 15360;
              ++v105;
              v107 += 3;
              v106 += 4;
            }
            while (v105 < v168);
          }
          ++v93;
        }
        while (v93 < v169);
      }
      *a3 = &off_250ADB778;
      sub_23970B0E0((uint64_t)&v157, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v158);
      goto LABEL_174;
    case 32:
      v157 = &off_250AE08B8;
      sub_23961A0DC((_DWORD *)(a1 + 56), v158);
      if (!v169)
        goto LABEL_173;
      v114 = 0;
      v115 = 0;
      v116 = 0;
      v117 = *(_DWORD *)(a1 + 52);
      v118 = v167;
      __asm { FMOV            V7.4S, #1.0 }
      break;
    default:
      v153 = &off_250ADB210;
      sub_23970B3E4(a1, (uint64_t)&v154);
      LOBYTE(v158[0]) = 0;
      v159 = 0;
      LOBYTE(v160) = 0;
      v161 = 0;
      v162 = 1;
      v163 = 0;
      sub_23988A34C((uint64_t)&v153, a2, (uint64_t)&v157, (uint64_t)a3);
      nullsub_4(&v156);
      v27 = v155;
      if (v155)
      {
        v28 = (unint64_t *)&v155->__shared_owners_;
        do
          v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      v30 = &v153;
      return nullsub_4(v30);
  }
  while (1)
  {
    v120 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v121 = v120 == 0;
    else
      v121 = 1;
    v149 = v111;
    v150 = v112;
    v151 = v113;
    v152 = _Q7;
    if (!v121)
    {
      v122 = *(_QWORD *)(a1 + 8);
      v123 = *(std::__shared_weak_count **)(a1 + 16);
      if (v123)
      {
        v124 = (unint64_t *)&v123->__shared_owners_;
        do
          v125 = __ldxr(v124);
        while (__stxr(v125 + 1, v124));
        do
          v126 = __ldaxr(v124);
        while (__stlxr(v126 - 1, v124));
        if (!v126)
        {
          ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
          std::__shared_weak_count::__release_weak(v123);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v122 + 88))(v122, 0, "unknown location");
      v120 = *(_QWORD *)(a1 + 24);
      v111 = v149;
      v112 = v150;
      v113 = v151;
      _Q7 = v152;
    }
    v127 = v160;
    if (v170 && v160)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v158[0] + 88))(v158[0], 1, "unknown location");
      v127 = v160;
      v111 = v149;
      v112 = v150;
      v113 = v151;
      _Q7 = v152;
    }
    v128 = v168;
    if (!v168)
      goto LABEL_139;
    v129 = (_DWORD *)(v127 + 4 * (v118 * v116));
    v130 = (_DWORD *)(v120 + 4 * (v117 * v116));
    if (v168 >= 8
      && ((unint64_t)v129 < v120 + 4 * (v117 * v116) + 12 * (unint64_t)(v168 - 1) + 12
        ? (v131 = (unint64_t)v130 >= v127
                                          + 4 * (v118 * v116)
                                          + 16 * (unint64_t)(v168 - 1)
                                          + 16)
        : (v131 = 1),
          v131))
    {
      v132 = v168 & 0xFFFFFFF8;
      v129 += 4 * v132;
      v130 += 3 * v132;
      v133 = (const float *)(v120 + 4 * v115);
      v134 = (float *)(v127 + 4 * v114 + 64);
      v135 = v132;
      do
      {
        v136 = v133;
        *(float32x4x3_t *)&v111 = vld3q_f32(v136);
        v136 += 12;
        *(float32x4x3_t *)v174.val[0].f32 = vld3q_f32(v136);
        v137 = v134 - 16;
        v174.val[3] = _Q7;
        vst4q_f32(v137, *(float32x4x4_t *)&v111);
        vst4q_f32(v134, v174);
        v133 += 24;
        v134 += 32;
        v135 -= 8;
      }
      while (v135);
      if (v132 == v128)
        goto LABEL_139;
    }
    else
    {
      LODWORD(v132) = 0;
    }
    v138 = v128 - v132;
    do
    {
      *v129 = *v130;
      v129[1] = v130[1];
      v129[2] = v130[2];
      v129[3] = 1065353216;
      v130 += 3;
      v129 += 4;
      --v138;
    }
    while (v138);
LABEL_139:
    ++v116;
    v115 += v117;
    v114 += v118;
    if (v116 >= v169)
    {
LABEL_173:
      *a3 = &off_250ADB778;
      sub_23970B1B4((uint64_t)&v157, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v158);
      goto LABEL_174;
    }
  }
}

void sub_239701E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  j_nullsub_4_89(v34);
  sub_239416DA0(a17);
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

void sub_239701E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;
  uint64_t v35;

  j_nullsub_4_89(v35);
  sub_239416DA0(v34);
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

void sub_239701E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;
  uint64_t v35;

  j_nullsub_4_89(v35);
  sub_239416DA0(v34);
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

void sub_239701E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  j_nullsub_4_89(v34);
  sub_239416DA0(a10);
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

void sub_239701EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  j_nullsub_4_89(v34);
  sub_239416DA0(a15);
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

void sub_239701EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

void sub_239701EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

void sub_239701F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

void sub_239701F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

void sub_239701F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_239416FF8((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_239701F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  nullsub_4(&a27);
  _Unwind_Resume(a1);
}

void sub_239701F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

void sub_239701F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  sub_239416DA0(a17);
  nullsub_4(&a34);
  _Unwind_Resume(a1);
}

uint64_t sub_239702010@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int8x16_t v6;
  unsigned int v7;
  unsigned int v8;
  unint64_t v9;
  int v10;
  int v11;
  int8x16_t v12;
  int8x16_t v13;
  float32x4_t v14;
  int8x16_t v18;
  int8x16_t v19;
  uint64_t v20;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float *v30;
  unsigned __int8 *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int8x16_t *v39;
  uint64_t v40;
  uint64_t v41;
  float32x4_t v42;
  float32x4_t v43;
  int v44;
  unsigned int v45;
  float v46;
  float v47;
  float v48;
  int8x16_t *v49;
  int8x16_t *v50;
  uint64_t v51;
  int8x16_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  unsigned int v57;
  unint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  _BYTE *v71;
  char v72;
  int8x16_t v73;
  unsigned int v74;
  unsigned int v75;
  unint64_t v76;
  int v77;
  int v78;
  int8x16_t v79;
  int8x16_t v80;
  float32x4_t v81;
  int8x16_t v83;
  int8x16_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  float *v94;
  unsigned __int8 *v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  float *v102;
  uint64_t v103;
  uint64_t v104;
  float32x4_t v105;
  float32x4_t v106;
  int8x16_t v107;
  int8x16_t v108;
  float *v109;
  float *v110;
  int v111;
  unsigned int v112;
  float v113;
  float v114;
  float v115;
  int8x16_t *v116;
  float *v117;
  uint64_t v118;
  int8x16_t v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x4_t v123;
  float *v124;
  int8x16_t v125;
  float *v126;
  int8x16_t v127;
  int8x16_t v128;
  float *v129;
  std::__shared_weak_count *v130;
  unint64_t *v131;
  unint64_t v132;
  uint64_t (***v133)();
  unsigned int v135;
  unsigned int v136;
  unint64_t v137;
  int v138;
  int v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  std::__shared_weak_count *v143;
  unint64_t *v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  BOOL v148;
  uint64_t v149;
  uint64_t v150;
  int16x4_t v151;
  int16x4_t v152;
  float32x4_t v155;
  float32x4_t v156;
  float32x4_t v157;
  float32x4_t v158;
  uint64_t (**v159)();
  uint64_t v160;
  std::__shared_weak_count *v161;
  uint64_t v162;
  uint64_t (**v163)();
  _QWORD v164[2];
  char v165;
  uint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  char v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  char v176;
  uint64_t v177;
  float32x4x3_t v178;
  float32x4x3_t v179;
  float32x4x3_t v180;

  v177 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 4:
      v163 = &off_250ADD920;
      sub_239709458((_DWORD *)(a1 + 32), v164);
      if (!v170)
        goto LABEL_144;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      v10 = *(_DWORD *)(a1 + 44);
      v11 = v171;
      v12 = (int8x16_t)xmmword_239EC73F0;
      v13 = (int8x16_t)xmmword_239EC7400;
      v14 = (float32x4_t)vdupq_n_s32(0x3B808081u);
      __asm { FMOV            V23.4S, #1.0 }
      v18 = (int8x16_t)xmmword_239EC7410;
      v19 = (int8x16_t)xmmword_239EC7420;
      v155 = _Q23;
      v157 = v14;
      while (1)
      {
        v20 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 48))
          _ZF = v20 == 0;
        else
          _ZF = 1;
        if (!_ZF)
        {
          v22 = *(_QWORD *)(a1 + 8);
          v23 = *(std::__shared_weak_count **)(a1 + 16);
          if (v23)
          {
            p_shared_owners = (unint64_t *)&v23->__shared_owners_;
            do
              v25 = __ldxr(p_shared_owners);
            while (__stxr(v25 + 1, p_shared_owners));
            do
              v26 = __ldaxr(p_shared_owners);
            while (__stlxr(v26 - 1, p_shared_owners));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
              std::__shared_weak_count::__release_weak(v23);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v22 + 88))(v22, 0, "unknown location");
          v20 = *(_QWORD *)(a1 + 24);
          v13 = (int8x16_t)xmmword_239EC7400;
          v12 = (int8x16_t)xmmword_239EC73F0;
          _Q23 = v155;
          v14 = v157;
          v19 = (int8x16_t)xmmword_239EC7420;
          v18 = (int8x16_t)xmmword_239EC7410;
        }
        v27 = v166;
        if (v172 && v166)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v164[0] + 88))(v164[0], 1, "unknown location");
          v27 = v166;
          v13 = (int8x16_t)xmmword_239EC7400;
          v12 = (int8x16_t)xmmword_239EC73F0;
          _Q23 = v155;
          v14 = v157;
          v19 = (int8x16_t)xmmword_239EC7420;
          v18 = (int8x16_t)xmmword_239EC7410;
        }
        v28 = v169;
        if (!v169)
          goto LABEL_4;
        v29 = (v11 * v9);
        v30 = (float *)(v27 + 4 * v29);
        v31 = (unsigned __int8 *)(v20 + (v10 * v9));
        if (v169 < 8
          || ((v32 = v169 - 1, v33 = v27 + 4 * (v29 + v32) + 4, v30 < (float *)&v31[v32 + 1])
            ? (_CF = (unint64_t)v31 >= v33)
            : (_CF = 1),
              !_CF))
        {
          LODWORD(v37) = 0;
          goto LABEL_33;
        }
        v35 = 4 * v7;
        if (v169 >= 0x10)
        {
          v36 = v169 & 0xFFFFFFF0;
          v49 = (int8x16_t *)(v20 + v8);
          v50 = (int8x16_t *)(v27 + v35);
          v51 = v36;
          do
          {
            v52 = *v49++;
            v53 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v52, v12)), v14);
            v54 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v52, v13)), v14);
            v55 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v52, v18)), v14);
            v56 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v52, v19)), v14);
            v50[2] = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v55, _Q23), (int8x16_t)_Q23, (int8x16_t)v55), (int8x16_t)vcltzq_f32(v55));
            v50[3] = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v56, _Q23), (int8x16_t)_Q23, (int8x16_t)v56), (int8x16_t)vcltzq_f32(v56));
            v6 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v54, _Q23), (int8x16_t)_Q23, (int8x16_t)v54), (int8x16_t)vcltzq_f32(v54));
            *v50 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v53, _Q23), (int8x16_t)_Q23, (int8x16_t)v53), (int8x16_t)vcltzq_f32(v53));
            v50[1] = v6;
            v50 += 4;
            v51 -= 16;
          }
          while (v51);
          if (v36 == v28)
            goto LABEL_4;
          if ((v28 & 8) == 0)
          {
            v31 += v36;
            v30 += v36;
            LODWORD(v37) = v28 & 0xFFFFFFF0;
LABEL_33:
            v44 = v28 - v37;
            do
            {
              v45 = *v31++;
              v46 = (float)v45 * 0.0039216;
              if (v46 <= 1.0)
                v47 = v46;
              else
                v47 = 1.0;
              if (v46 >= 0.0)
                v48 = v47;
              else
                v48 = 0.0;
              *v30++ = v48;
              --v44;
            }
            while (v44);
            goto LABEL_4;
          }
        }
        else
        {
          v36 = 0;
        }
        v37 = v28 & 0xFFFFFFF8;
        v30 += v37;
        v31 += v37;
        v38 = (uint64_t *)(v20 + v8 + v36);
        v39 = (int8x16_t *)(v27 + v35 + 4 * v36);
        v40 = v36 - v37;
        do
        {
          v41 = *v38++;
          v6.i64[0] = v41;
          v42 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v6, v12)), v14);
          v43 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v6, v13)), v14);
          v6 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v43, _Q23), (int8x16_t)_Q23, (int8x16_t)v43), (int8x16_t)vcltzq_f32(v43));
          *v39 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v42, _Q23), (int8x16_t)_Q23, (int8x16_t)v42), (int8x16_t)vcltzq_f32(v42));
          v39[1] = v6;
          v39 += 2;
          v40 += 8;
        }
        while (v40);
        if (v37 != v28)
          goto LABEL_33;
LABEL_4:
        ++v9;
        v8 += v10;
        v7 += v11;
        if (v9 >= v170)
        {
LABEL_144:
          *a3 = &off_250ADB778;
          sub_2397096A8((uint64_t)&v163, (uint64_t)(a3 + 1));
          sub_239416DA0((uint64_t)v164);
          goto LABEL_148;
        }
      }
    case 21:
      v163 = &off_250ADBEA0;
      sub_2396192A4((_DWORD *)(a1 + 32), v164);
      if (v175)
      {
        v57 = 0;
        v58 = 0;
        v59 = *(_DWORD *)(a1 + 44);
        v60 = v173;
        do
        {
          v61 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 48))
            v62 = v61 == 0;
          else
            v62 = 1;
          if (!v62)
          {
            v63 = *(_QWORD *)(a1 + 8);
            v64 = *(std::__shared_weak_count **)(a1 + 16);
            if (v64)
            {
              v65 = (unint64_t *)&v64->__shared_owners_;
              do
                v66 = __ldxr(v65);
              while (__stxr(v66 + 1, v65));
              do
                v67 = __ldaxr(v65);
              while (__stlxr(v67 - 1, v65));
              if (!v67)
              {
                ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
                std::__shared_weak_count::__release_weak(v64);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v63 + 88))(v63, 0, "unknown location");
            v61 = *(_QWORD *)(a1 + 24);
          }
          v68 = v166;
          if (v176)
            v69 = v166 == 0;
          else
            v69 = 1;
          if (!v69)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v164[0] + 88))(v164[0], 1, "unknown location");
            v68 = v166;
          }
          if (v174)
          {
            v70 = 0;
            v71 = (_BYTE *)(v68 + (v60 * v58));
            do
            {
              v72 = *(_BYTE *)(v61 + v57 + v70);
              *v71 = v72;
              v71[1] = v72;
              v71[2] = v72;
              ++v70;
              v71 += 3;
            }
            while (v70 < v174);
          }
          ++v58;
          v57 += v59;
        }
        while (v58 < v175);
      }
      *a3 = &off_250ADB778;
      sub_239709138((uint64_t)&v163, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v164);
      goto LABEL_148;
    case 24:
      v163 = &off_250ADDC30;
      sub_239619E74((_DWORD *)(a1 + 32), v164);
      if (!v175)
        goto LABEL_146;
      v74 = 0;
      v75 = 0;
      v76 = 0;
      v77 = *(_DWORD *)(a1 + 44);
      v78 = v173;
      v79 = (int8x16_t)xmmword_239EC7400;
      v80 = (int8x16_t)xmmword_239EC73F0;
      v81 = (float32x4_t)vdupq_n_s32(0x3B808081u);
      __asm { FMOV            V22.4S, #1.0 }
      v83 = (int8x16_t)xmmword_239EC7420;
      v84 = (int8x16_t)xmmword_239EC7410;
      v156 = _Q22;
      v158 = v81;
      break;
    case 31:
      v163 = &off_250AE0A08;
      sub_23961B3AC((_DWORD *)(a1 + 32), v164);
      if (v175)
      {
        v135 = 0;
        v136 = 0;
        v137 = 0;
        v138 = *(_DWORD *)(a1 + 44);
        v139 = v173;
        do
        {
          v140 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 48))
            v141 = v140 == 0;
          else
            v141 = 1;
          if (!v141)
          {
            v142 = *(_QWORD *)(a1 + 8);
            v143 = *(std::__shared_weak_count **)(a1 + 16);
            if (v143)
            {
              v144 = (unint64_t *)&v143->__shared_owners_;
              do
                v145 = __ldxr(v144);
              while (__stxr(v145 + 1, v144));
              do
                v146 = __ldaxr(v144);
              while (__stlxr(v146 - 1, v144));
              if (!v146)
              {
                ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
                std::__shared_weak_count::__release_weak(v143);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v142 + 88))(v142, 0, "unknown location");
            v140 = *(_QWORD *)(a1 + 24);
          }
          v147 = v166;
          if (v176)
            v148 = v166 == 0;
          else
            v148 = 1;
          if (!v148)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v164[0] + 88))(v164[0], 1, "unknown location");
            v147 = v166;
          }
          if (v174)
          {
            v149 = 0;
            v150 = v147 + 2 * v136;
            do
            {
              LOBYTE(_S0) = *(_BYTE *)(v140 + v135 + v149);
              _S0 = (float)LODWORD(_S0) / 255.0;
              __asm { FCVT            H0, S0 }
              v151.i16[1] = 15360;
              v151.i32[1] = 1006648320;
              v151.i16[0] = LOWORD(_S0);
              v152 = vzip1_s16(v151, v151);
              v152.i16[2] = LOWORD(_S0);
              *(int16x4_t *)(v150 + 8 * v149++) = v152;
            }
            while (v149 < v174);
          }
          ++v137;
          v136 += v139;
          v135 += v138;
        }
        while (v137 < v175);
      }
      *a3 = &off_250ADB778;
      sub_23970B0E0((uint64_t)&v163, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v164);
      goto LABEL_148;
    default:
      v159 = &off_250ADB210;
      sub_239417068(a1, (uint64_t)&v160);
      LOBYTE(v164[0]) = 0;
      v165 = 0;
      LOBYTE(v166) = 0;
      v167 = 0;
      v168 = 1;
      v169 = 0;
      sub_23988A34C((uint64_t)&v159, a2, (uint64_t)&v163, (uint64_t)a3);
      nullsub_4(&v162);
      v130 = v161;
      if (v161)
      {
        v131 = (unint64_t *)&v161->__shared_owners_;
        do
          v132 = __ldaxr(v131);
        while (__stlxr(v132 - 1, v131));
        if (!v132)
        {
          ((void (*)(std::__shared_weak_count *))v130->__on_zero_shared)(v130);
          std::__shared_weak_count::__release_weak(v130);
        }
      }
      v133 = &v159;
      return nullsub_4(v133);
  }
  do
  {
    v85 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v86 = v85 == 0;
    else
      v86 = 1;
    if (!v86)
    {
      v87 = *(_QWORD *)(a1 + 8);
      v88 = *(std::__shared_weak_count **)(a1 + 16);
      if (v88)
      {
        v89 = (unint64_t *)&v88->__shared_owners_;
        do
          v90 = __ldxr(v89);
        while (__stxr(v90 + 1, v89));
        do
          v91 = __ldaxr(v89);
        while (__stlxr(v91 - 1, v89));
        if (!v91)
        {
          ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
          std::__shared_weak_count::__release_weak(v88);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v87 + 88))(v87, 0, "unknown location");
      v85 = *(_QWORD *)(a1 + 24);
      v80 = (int8x16_t)xmmword_239EC73F0;
      v79 = (int8x16_t)xmmword_239EC7400;
      _Q22 = v156;
      v81 = v158;
      v84 = (int8x16_t)xmmword_239EC7410;
      v83 = (int8x16_t)xmmword_239EC7420;
    }
    v92 = v166;
    if (v176 && v166)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v164[0] + 88))(v164[0], 1, "unknown location");
      v92 = v166;
      v80 = (int8x16_t)xmmword_239EC73F0;
      v79 = (int8x16_t)xmmword_239EC7400;
      _Q22 = v156;
      v81 = v158;
      v84 = (int8x16_t)xmmword_239EC7410;
      v83 = (int8x16_t)xmmword_239EC7420;
    }
    v93 = v174;
    if (v174)
    {
      v94 = (float *)(v92 + 4 * (v78 * v76));
      v95 = (unsigned __int8 *)(v85 + (v77 * v76));
      if (v174 < 8
        || ((v96 = v174 - 1, v94 < (float *)&v95[v96 + 1])
          ? (v97 = (unint64_t)v95 >= v92
                                          + 4 * (v78 * v76)
                                          + 12 * (unint64_t)v96
                                          + 12)
          : (v97 = 1),
            !v97))
      {
        LODWORD(v100) = 0;
        goto LABEL_101;
      }
      v98 = 4 * v74;
      if (v174 >= 0x10)
      {
        v99 = v174 & 0xFFFFFFF0;
        v116 = (int8x16_t *)(v85 + v75);
        v117 = (float *)(v92 + v98);
        v118 = v99;
        do
        {
          v119 = *v116++;
          v120 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v119, v83)), v81);
          v121 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v119, v84)), v81);
          v122 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v119, v79)), v81);
          v123 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v119, v80)), v81);
          v180.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v122, _Q22), (int8x16_t)_Q22, (int8x16_t)v122), (int8x16_t)vcltzq_f32(v122));
          v180.val[1] = v180.val[0];
          v180.val[2] = v180.val[0];
          v179.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v123, _Q22), (int8x16_t)_Q22, (int8x16_t)v123), (int8x16_t)vcltzq_f32(v123));
          v179.val[1] = v179.val[0];
          v179.val[2] = v179.val[0];
          v124 = v117;
          vst3q_f32(v124, v179);
          v124 += 12;
          vst3q_f32(v124, v180);
          v125 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v121, _Q22), (int8x16_t)_Q22, (int8x16_t)v121), (int8x16_t)vcltzq_f32(v121));
          v179.val[0] = (float32x4_t)v125;
          v179.val[1] = (float32x4_t)v125;
          v126 = v117 + 24;
          vst3q_f32(v126, v179);
          v73 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v120, _Q22), (int8x16_t)_Q22, (int8x16_t)v120), (int8x16_t)vcltzq_f32(v120));
          v127 = v73;
          v128 = v73;
          v129 = v117 + 36;
          vst3q_f32(v129, *(float32x4x3_t *)v73.i8);
          v117 += 48;
          v118 -= 16;
        }
        while (v118);
        if (v99 == v93)
          goto LABEL_72;
        if ((v93 & 8) == 0)
        {
          v95 += v99;
          v94 += 3 * v99;
          LODWORD(v100) = v93 & 0xFFFFFFF0;
LABEL_101:
          v111 = v93 - v100;
          do
          {
            v112 = *v95++;
            v113 = (float)v112 * 0.0039216;
            if (v113 <= 1.0)
              v114 = v113;
            else
              v114 = 1.0;
            if (v113 >= 0.0)
              v115 = v114;
            else
              v115 = 0.0;
            *v94 = v115;
            v94[1] = v115;
            v94[2] = v115;
            v94 += 3;
            --v111;
          }
          while (v111);
          goto LABEL_72;
        }
      }
      else
      {
        v99 = 0;
      }
      v100 = v93 & 0xFFFFFFF8;
      v94 += 3 * v100;
      v95 += v100;
      v101 = (uint64_t *)(v85 + v75 + v99);
      v102 = (float *)(v92 + v98 + 12 * v99);
      v103 = v99 - v100;
      do
      {
        v104 = *v101++;
        v73.i64[0] = v104;
        v105 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v73, v79)), v81);
        v106 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vqtbl1q_s8(v73, v80)), v81);
        v178.val[0] = (float32x4_t)vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v105, _Q22), (int8x16_t)_Q22, (int8x16_t)v105), (int8x16_t)vcltzq_f32(v105));
        v178.val[1] = v178.val[0];
        v178.val[2] = v178.val[0];
        v73 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v106, _Q22), (int8x16_t)_Q22, (int8x16_t)v106), (int8x16_t)vcltzq_f32(v106));
        v107 = v73;
        v108 = v73;
        v109 = v102 + 24;
        vst3q_f32(v102, *(float32x4x3_t *)v73.i8);
        v110 = v102 + 12;
        vst3q_f32(v110, v178);
        v102 = v109;
        v103 += 8;
      }
      while (v103);
      if (v100 == v93)
        goto LABEL_72;
      goto LABEL_101;
    }
LABEL_72:
    ++v76;
    v75 += v77;
    v74 += v78;
  }
  while (v76 < v175);
LABEL_146:
  *a3 = &off_250ADB778;
  sub_23970977C((uint64_t)&v163, (uint64_t)(a3 + 1));
  sub_239416DA0((uint64_t)v164);
LABEL_148:
  v133 = &v163;
  return nullsub_4(v133);
}

void sub_239702B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  j_nullsub_4_89(v30);
  sub_239416DA0(a21);
  nullsub_4(&a30);
  _Unwind_Resume(a1);
}

void sub_239702B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  j_nullsub_4_89(v30);
  sub_239416DA0(a9);
  nullsub_4(&a30);
  _Unwind_Resume(a1);
}

void sub_239702B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;
  uint64_t v31;

  j_nullsub_4_89(v31);
  sub_239416DA0(v30);
  nullsub_4(&a30);
  _Unwind_Resume(a1);
}

void sub_239702BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  j_nullsub_4_89(v30);
  sub_239416DA0(a9);
  nullsub_4(&a30);
  _Unwind_Resume(a1);
}

void sub_239702BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  nullsub_4(&a30);
  _Unwind_Resume(a1);
}

void sub_239702BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239702BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239702C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  nullsub_4(&a30);
  _Unwind_Resume(a1);
}

void sub_239702C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  nullsub_4(&a30);
  _Unwind_Resume(a1);
}

void sub_239702C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  nullsub_4(&a30);
  _Unwind_Resume(a1);
}

void sub_239702C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  sub_239416DA0(a21);
  nullsub_4(&a30);
  _Unwind_Resume(a1);
}

uint64_t sub_239702CC4@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  float v23;
  float v24;
  float v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t (***v29)();
  _DWORD *v30;
  unsigned int v31;
  unint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  float v47;
  float v48;
  float v49;
  unsigned int v50;
  unsigned int v51;
  unint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _DWORD *v65;
  int *v66;
  uint64_t v67;
  uint64_t v69;
  float32x4_t *v70;
  float *v71;
  uint64_t v72;
  float *v73;
  float *v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  int16x4_t v96;
  int16x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  unsigned int v101;
  unsigned int v102;
  unint64_t v103;
  int v104;
  int v105;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int32x4_t *v117;
  __int32 *v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  float32x4_t *v122;
  float *v123;
  uint64_t v124;
  float *v125;
  int v126;
  __int32 v127;
  int32x4_t v128;
  int32x4_t v129;
  float32x4_t v132;
  float32x4_t v133;
  float32x4_t v134;
  float32x4_t v135;
  uint64_t (**v136)();
  uint64_t v137;
  std::__shared_weak_count *v138;
  uint64_t v139;
  uint64_t (**v140)();
  _QWORD v141[2];
  char v142;
  uint64_t v143;
  char v144;
  char v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  char v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  char v153;
  uint64_t v154;
  float32x4x3_t v155;
  float32x4x3_t v156;
  float32x4x4_t v157;

  v154 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 1:
      v140 = &off_250ADB628;
      sub_2395793A0((_DWORD *)(a1 + 32), v141);
      if (v147)
      {
        v6 = 0;
        v7 = 0;
        v8 = 0;
        v9 = *(_DWORD *)(a1 + 44);
        v10 = v148;
        do
        {
          v11 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 48))
            _ZF = v11 == 0;
          else
            _ZF = 1;
          if (!_ZF)
          {
            v13 = *(_QWORD *)(a1 + 8);
            v14 = *(std::__shared_weak_count **)(a1 + 16);
            if (v14)
            {
              p_shared_owners = (unint64_t *)&v14->__shared_owners_;
              do
                v16 = __ldxr(p_shared_owners);
              while (__stxr(v16 + 1, p_shared_owners));
              do
                v17 = __ldaxr(p_shared_owners);
              while (__stlxr(v17 - 1, p_shared_owners));
              if (!v17)
              {
                ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
                std::__shared_weak_count::__release_weak(v14);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v13 + 88))(v13, 0, "unknown location");
            v11 = *(_QWORD *)(a1 + 24);
          }
          v18 = v143;
          if (v149)
            v19 = v143 == 0;
          else
            v19 = 1;
          if (!v19)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v141[0] + 88))(v141[0], 1, "unknown location");
            v18 = v143;
          }
          if (v146)
          {
            v20 = 0;
            v21 = v18 + v7;
            do
            {
              v23 = 255.0;
              v22 = v11 + 4 * v6;
              v24 = *(float *)(v22 + 4 * v20) * 255.0;
              if (v24 <= 255.0)
                v23 = *(float *)(v22 + 4 * v20) * 255.0;
              if (v24 >= 0.0)
                v25 = v23;
              else
                v25 = 0.0;
              *(_BYTE *)(v21 + v20++) = (int)v25;
            }
            while (v20 < v146);
          }
          ++v8;
          v7 += v10;
          v6 += v9;
        }
        while (v8 < v147);
      }
      *a3 = &off_250ADB778;
      sub_239709384((uint64_t)&v140, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v141);
      goto LABEL_156;
    case 21:
      v30 = (_DWORD *)(a1 + 32);
      v140 = &off_250ADBEA0;
      sub_2396192A4((_DWORD *)(a1 + 32), v141);
      if (*(_DWORD *)(a1 + 36))
      {
        v31 = 0;
        v32 = 0;
        v33 = *(_DWORD *)(a1 + 44);
        v34 = v150;
        do
        {
          v35 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 48))
            v36 = v35 == 0;
          else
            v36 = 1;
          if (!v36)
          {
            v37 = *(_QWORD *)(a1 + 8);
            v38 = *(std::__shared_weak_count **)(a1 + 16);
            if (v38)
            {
              v39 = (unint64_t *)&v38->__shared_owners_;
              do
                v40 = __ldxr(v39);
              while (__stxr(v40 + 1, v39));
              do
                v41 = __ldaxr(v39);
              while (__stlxr(v41 - 1, v39));
              if (!v41)
              {
                ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
                std::__shared_weak_count::__release_weak(v38);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v37 + 88))(v37, 0, "unknown location");
            v35 = *(_QWORD *)(a1 + 24);
          }
          v42 = v143;
          if (v153)
            v43 = v143 == 0;
          else
            v43 = 1;
          if (!v43)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v141[0] + 88))(v141[0], 1, "unknown location");
            v42 = v143;
          }
          if (*v30)
          {
            v44 = 0;
            v45 = (_BYTE *)(v42 + (v34 * v32));
            do
            {
              v47 = 255.0;
              v46 = v35 + 4 * v31;
              v48 = *(float *)(v46 + 4 * v44) * 255.0;
              if (v48 <= 255.0)
                v47 = *(float *)(v46 + 4 * v44) * 255.0;
              if (v48 >= 0.0)
                v49 = v47;
              else
                v49 = 0.0;
              *v45 = (int)v49;
              v45[1] = (int)v49;
              v45[2] = (int)v49;
              ++v44;
              v45 += 3;
            }
            while (v44 < *v30);
          }
          ++v32;
          v31 += v33;
        }
        while (v32 < *(unsigned int *)(a1 + 36));
      }
      *a3 = &off_250ADB778;
      sub_239709138((uint64_t)&v140, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v141);
      goto LABEL_156;
    case 24:
      v140 = &off_250ADDC30;
      sub_239619E74((_DWORD *)(a1 + 32), v141);
      if (!v152)
        goto LABEL_153;
      v50 = 0;
      v51 = 0;
      v52 = 0;
      v53 = *(_DWORD *)(a1 + 44);
      v54 = v150;
      do
      {
        v55 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 48))
          v56 = v55 == 0;
        else
          v56 = 1;
        if (!v56)
        {
          v57 = *(_QWORD *)(a1 + 8);
          v58 = *(std::__shared_weak_count **)(a1 + 16);
          if (v58)
          {
            v59 = (unint64_t *)&v58->__shared_owners_;
            do
              v60 = __ldxr(v59);
            while (__stxr(v60 + 1, v59));
            do
              v61 = __ldaxr(v59);
            while (__stlxr(v61 - 1, v59));
            if (!v61)
            {
              ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
              std::__shared_weak_count::__release_weak(v58);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v57 + 88))(v57, 0, "unknown location");
          v55 = *(_QWORD *)(a1 + 24);
        }
        v62 = v143;
        if (v153 && v143)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v141[0] + 88))(v141[0], 1, "unknown location");
          v62 = v143;
        }
        v63 = v151;
        if (v151)
        {
          v64 = (v53 * v52);
          v65 = (_DWORD *)(v62 + 4 * (v54 * v52));
          v66 = (int *)(v55 + 4 * v64);
          if (v151 < 8
            || ((v67 = v151 - 1, (unint64_t)v65 < v55 + 4 * (v64 + v67) + 4)
              ? (_CF = (unint64_t)v66 >= v62
                                              + 4 * (v54 * v52)
                                              + 12 * (unint64_t)v67
                                              + 12)
              : (_CF = 1),
                !_CF))
          {
            LODWORD(v69) = 0;
LABEL_93:
            v75 = v63 - v69;
            do
            {
              v76 = *v66++;
              *v65 = v76;
              v65[1] = v76;
              v65[2] = v76;
              v65 += 3;
              --v75;
            }
            while (v75);
            goto LABEL_66;
          }
          v69 = v151 & 0xFFFFFFF8;
          v65 += 3 * v69;
          v66 += v69;
          v70 = (float32x4_t *)(v55 + 4 * v51 + 16);
          v71 = (float *)(v62 + 4 * v50);
          v72 = v69;
          do
          {
            v155.val[0] = v70[-1];
            v156.val[0] = *v70;
            v155.val[1] = v155.val[0];
            v155.val[2] = v155.val[0];
            v156.val[1] = *v70;
            v156.val[2] = *v70;
            v73 = v71 + 24;
            vst3q_f32(v71, v155);
            v74 = v71 + 12;
            vst3q_f32(v74, v156);
            v70 += 2;
            v71 = v73;
            v72 -= 8;
          }
          while (v72);
          if (v69 != v63)
            goto LABEL_93;
        }
LABEL_66:
        ++v52;
        v51 += v53;
        v50 += v54;
      }
      while (v52 < v152);
LABEL_153:
      *a3 = &off_250ADB778;
      sub_23970977C((uint64_t)&v140, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v141);
LABEL_156:
      v29 = &v140;
      return nullsub_4(v29);
    case 31:
      v140 = &off_250AE0A08;
      sub_23961B3AC((_DWORD *)(a1 + 32), v141);
      if (v152)
      {
        v77 = 0;
        v78 = 0;
        v79 = 0;
        v80 = *(_DWORD *)(a1 + 44);
        v81 = v150;
        do
        {
          v82 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 48))
            v83 = v82 == 0;
          else
            v83 = 1;
          if (!v83)
          {
            v84 = *(_QWORD *)(a1 + 8);
            v85 = *(std::__shared_weak_count **)(a1 + 16);
            if (v85)
            {
              v86 = (unint64_t *)&v85->__shared_owners_;
              do
                v87 = __ldxr(v86);
              while (__stxr(v87 + 1, v86));
              do
                v88 = __ldaxr(v86);
              while (__stlxr(v88 - 1, v86));
              if (!v88)
              {
                ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
                std::__shared_weak_count::__release_weak(v85);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v84 + 88))(v84, 0, "unknown location");
            v82 = *(_QWORD *)(a1 + 24);
          }
          v89 = v143;
          if (v153)
            v90 = v143 == 0;
          else
            v90 = 1;
          if (!v90)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v141[0] + 88))(v141[0], 1, "unknown location");
            v89 = v143;
          }
          if (v151)
          {
            v91 = 0;
            v92 = v89 + 2 * v78;
            do
            {
              _S0 = *(_DWORD *)(v82 + 4 * v77 + 4 * v91);
              __asm { FCVT            H0, S0 }
              v96.i16[1] = 15360;
              v96.i32[1] = 1006648320;
              v96.i16[0] = _S0;
              v97 = vzip1_s16(v96, v96);
              v97.i16[2] = _S0;
              *(int16x4_t *)(v92 + 8 * v91++) = v97;
            }
            while (v91 < v151);
          }
          ++v79;
          v78 += v81;
          v77 += v80;
        }
        while (v79 < v152);
      }
      *a3 = &off_250ADB778;
      sub_23970B0E0((uint64_t)&v140, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v141);
      goto LABEL_156;
    case 32:
      v140 = &off_250AE08B8;
      sub_23961A0DC((_DWORD *)(a1 + 32), v141);
      if (!v152)
        goto LABEL_155;
      v101 = 0;
      v102 = 0;
      v103 = 0;
      v104 = *(_DWORD *)(a1 + 44);
      v105 = v150;
      __asm { FMOV            V7.4S, #1.0 }
      break;
    default:
      v136 = &off_250ADB210;
      sub_239581BA8(a1, (uint64_t)&v137);
      LOBYTE(v141[0]) = 0;
      v142 = 0;
      LOBYTE(v143) = 0;
      v144 = 0;
      v145 = 1;
      v146 = 0;
      sub_23988A34C((uint64_t)&v136, a2, (uint64_t)&v140, (uint64_t)a3);
      nullsub_4(&v139);
      v26 = v138;
      if (v138)
      {
        v27 = (unint64_t *)&v138->__shared_owners_;
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      v29 = &v136;
      return nullsub_4(v29);
  }
  while (1)
  {
    v107 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v108 = v107 == 0;
    else
      v108 = 1;
    v132 = v98;
    v133 = v99;
    v134 = v100;
    v135 = _Q7;
    if (!v108)
    {
      v109 = *(_QWORD *)(a1 + 8);
      v110 = *(std::__shared_weak_count **)(a1 + 16);
      if (v110)
      {
        v111 = (unint64_t *)&v110->__shared_owners_;
        do
          v112 = __ldxr(v111);
        while (__stxr(v112 + 1, v111));
        do
          v113 = __ldaxr(v111);
        while (__stlxr(v113 - 1, v111));
        if (!v113)
        {
          ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
          std::__shared_weak_count::__release_weak(v110);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v109 + 88))(v109, 0, "unknown location");
      v107 = *(_QWORD *)(a1 + 24);
      v98 = v132;
      v99 = v133;
      v100 = v134;
      _Q7 = v135;
    }
    v114 = v143;
    if (v153 && v143)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v141[0] + 88))(v141[0], 1, "unknown location");
      v114 = v143;
      v98 = v132;
      v99 = v133;
      v100 = v134;
      _Q7 = v135;
    }
    v115 = v151;
    if (!v151)
      goto LABEL_121;
    v116 = (v104 * v103);
    v117 = (int32x4_t *)(v114 + 4 * (v105 * v103));
    v118 = (__int32 *)(v107 + 4 * v116);
    if (v151 >= 8
      && ((v119 = v151 - 1, (unint64_t)v117 < v107 + 4 * (v116 + v119) + 4)
        ? (v120 = (unint64_t)v118 >= v114
                                          + 4 * (v105 * v103)
                                          + 16 * (unint64_t)v119
                                          + 16)
        : (v120 = 1),
          v120))
    {
      v121 = v151 & 0xFFFFFFF8;
      v117 += v121;
      v118 += v121;
      v122 = (float32x4_t *)(v107 + 4 * v102 + 16);
      v123 = (float *)(v114 + 4 * v101 + 64);
      v124 = v121;
      do
      {
        v125 = v123 - 16;
        v98 = v122[-1];
        v157.val[0] = *v122;
        v99 = v98;
        v100 = v98;
        v157.val[1] = *v122;
        v157.val[2] = *v122;
        v157.val[3] = _Q7;
        vst4q_f32(v125, *(float32x4x4_t *)v98.f32);
        vst4q_f32(v123, v157);
        v122 += 2;
        v123 += 32;
        v124 -= 8;
      }
      while (v124);
      if (v121 == v115)
        goto LABEL_121;
    }
    else
    {
      LODWORD(v121) = 0;
    }
    v126 = v115 - v121;
    do
    {
      v127 = *v118++;
      v128 = (int32x4_t)_Q7;
      v128.i32[0] = v127;
      v129 = vzip1q_s32(v128, v128);
      v129.i32[2] = v127;
      *v117++ = v129;
      --v126;
    }
    while (v126);
LABEL_121:
    ++v103;
    v102 += v104;
    v101 += v105;
    if (v103 >= v152)
    {
LABEL_155:
      *a3 = &off_250ADB778;
      sub_23970B1B4((uint64_t)&v140, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v141);
      goto LABEL_156;
    }
  }
}

void sub_2397036E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  j_nullsub_4_89(v26);
  sub_239416DA0(a9);
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239703704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;
  uint64_t v27;

  j_nullsub_4_89(v26);
  sub_239416DA0(v27);
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239703728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  j_nullsub_4_89(v26);
  sub_239416DA0(a11);
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_23970374C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  j_nullsub_4_89(v26);
  sub_239416DA0(a11);
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239703770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  j_nullsub_4_89(v26);
  sub_239416DA0(a11);
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239703794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_2397037A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_2397037BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_2397037D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_2397037E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397037F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23970380C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239703820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_239416DA0(a9);
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

uint64_t sub_2397038C0@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t (***v18)();
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v36)();
  int v37;
  _BYTE v38[12];
  unint64_t v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[2];
  uint64_t (**v45)();
  _QWORD v46[2];
  char v47;
  _BYTE *v48;
  char v49;
  char v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  char v55;
  uint64_t v56;

  v56 = *MEMORY[0x24BDAC8D0];
  if (a2 == 21)
  {
    v45 = &off_250ADBEA0;
    sub_2396192A4((_DWORD *)(a1 + 56), v46);
    v5 = *(_QWORD *)(a1 + 8);
    if (!v5)
      goto LABEL_23;
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
      v5 = *(_QWORD *)(a1 + 8);
      v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        v11 = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
        do
          v13 = __ldaxr(v11);
        while (__stlxr(v13 - 1, v11));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
    }
    if (*(_BYTE *)(a1 + 73))
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v43, v5, 0);
    else
LABEL_23:
      v43 = 0;
    sub_239622218((uint64_t)&v45, &v42);
    v19 = *(_DWORD *)(a1 + 32);
    if (v19)
    {
      v20 = *(_DWORD *)(a1 + 36);
      if (v20)
      {
        v21 = *(_DWORD *)(a1 + 40);
        if (v21)
        {
          v37 = v19 - 1;
          v22 = *(unsigned int *)(a1 + 48);
          *(_QWORD *)v38 = *(unsigned int *)(a1 + 44) | ((unint64_t)v52 << 32);
          v36 = 0;
          *(_DWORD *)&v38[8] = v20 - 1;
          v39 = v22 | ((unint64_t)v53 << 32);
          v40 = v21 - 1;
          v41 = *(unsigned int *)(a1 + 52) | ((unint64_t)v54 << 32);
          v23 = *(_DWORD **)(a1 + 24);
          if (*(_BYTE *)(a1 + 72) && v23)
          {
            v24 = *(_QWORD *)(a1 + 8);
            v25 = *(std::__shared_weak_count **)(a1 + 16);
            if (v25)
            {
              v26 = (unint64_t *)&v25->__shared_owners_;
              do
                v27 = __ldxr(v26);
              while (__stxr(v27 + 1, v26));
              do
                v28 = __ldaxr(v26);
              while (__stlxr(v28 - 1, v26));
              if (!v28)
              {
                ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                std::__shared_weak_count::__release_weak(v25);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v24 + 88))(v24, 0, "unknown location");
            v23 = *(_DWORD **)(a1 + 24);
          }
          v29 = v48;
          if (v55 && v48)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v46[0] + 88))(v46[0], 1, "unknown location");
            v29 = v48;
          }
          memset(v44, 0, sizeof(v44));
          v30 = v40;
          if (v40)
          {
            v31 = v41;
            v32 = HIDWORD(v41);
            do
            {
              sub_23970B55C(&v36, v44, v23, v29);
              v23 = (_DWORD *)((char *)v23 + v31);
              v29 += v32;
              --v30;
            }
            while (v30);
          }
          sub_23970B55C(&v36, v44, v23, v29);
        }
      }
    }
    v33 = v42;
    v42 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v43;
    v43 = 0;
    if (v34)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
    *a3 = &off_250ADB778;
    sub_239709138((uint64_t)&v45, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v46);
    v18 = &v45;
  }
  else
  {
    v36 = &off_250ADB210;
    sub_239645AB0(a1, (uint64_t)&v37);
    LOBYTE(v46[0]) = 0;
    v47 = 0;
    LOBYTE(v48) = 0;
    v49 = 0;
    v50 = 1;
    v51 = 0;
    sub_23988A34C((uint64_t)&v36, a2, (uint64_t)&v45, (uint64_t)a3);
    nullsub_4(&v39);
    v15 = *(std::__shared_weak_count **)&v38[4];
    if (*(_QWORD *)&v38[4])
    {
      v16 = (unint64_t *)(*(_QWORD *)&v38[4] + 8);
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    v18 = &v36;
  }
  return nullsub_4(v18);
}

void sub_239703C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239703C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  uint64_t v16;
  va_list va;

  va_start(va, a15);
  j_nullsub_4_89(v16);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239703CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239703D3C@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float32x2_t *v20;
  unint64_t v21;
  uint64_t v23;
  float *v24;
  const float *v25;
  uint64_t v26;
  float *v27;
  int v28;
  float v29;
  float v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *p_shared_owners;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  float *v53;
  float *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  float v58;
  float v59;
  float v60;
  float v61;
  float v62;
  float v63;
  const float *v64;
  int8x16_t *v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  BOOL v78;
  unsigned int v79;
  _BYTE *v80;
  float *v81;
  float v82;
  float v83;
  float v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  uint64_t (***v88)();
  int v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  float32x4_t v96;
  uint64_t (**v97)();
  uint64_t v98;
  std::__shared_weak_count *v99;
  uint64_t v100;
  uint64_t (**v101)();
  _QWORD v102[2];
  char v103;
  uint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  char v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  char v114;
  uint64_t v115;
  float32x4x3_t v116;
  float32x4x4_t v117;
  float32x4x4_t v118;

  v115 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 4:
      v101 = &off_250ADD920;
      sub_239709458((_DWORD *)(a1 + 56), v102);
      if (!v108)
      {
LABEL_100:
        *a3 = &off_250ADB778;
        sub_2397096A8((uint64_t)&v101, (uint64_t)(a3 + 1));
        sub_239416DA0((uint64_t)v102);
LABEL_103:
        v88 = &v101;
        return nullsub_4(v88);
      }
      v31 = 0;
      v32 = 0;
      v33 = 0;
      v34 = *(unsigned int *)(a1 + 52);
      v35 = v109;
      v36 = (float32x4_t)vdupq_n_s32(0x3E991687u);
      v37 = (float32x4_t)vdupq_n_s32(0x3F1645A2u);
      v38 = (float32x4_t)vdupq_n_s32(0x3DE978D5u);
      __asm { FMOV            V18.4S, #1.0 }
      v95 = v37;
      v96 = v36;
      v93 = _Q18;
      v94 = v38;
      v92 = v109;
      while (1)
      {
        v42 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 72))
          v43 = v42 == 0;
        else
          v43 = 1;
        if (!v43)
        {
          v44 = v34;
          v45 = *(_QWORD *)(a1 + 8);
          v46 = *(std::__shared_weak_count **)(a1 + 16);
          if (v46)
          {
            p_shared_owners = (unint64_t *)&v46->__shared_owners_;
            do
              v48 = __ldxr(p_shared_owners);
            while (__stxr(v48 + 1, p_shared_owners));
            do
              v49 = __ldaxr(p_shared_owners);
            while (__stlxr(v49 - 1, p_shared_owners));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
              std::__shared_weak_count::__release_weak(v46);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v45 + 88))(v45, 0, "unknown location");
          v42 = *(_QWORD *)(a1 + 24);
          v34 = v44;
          v35 = v92;
          v37 = v95;
          v36 = v96;
          _Q18 = v93;
          v38 = v94;
        }
        v50 = v104;
        if (v110 && v104)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v102[0] + 88))(v102[0], 1, "unknown location");
          v50 = v104;
          v37 = v95;
          v36 = v96;
          _Q18 = v93;
          v38 = v94;
        }
        v51 = v107;
        if (!v107)
          goto LABEL_38;
        v52 = (v35 * v33);
        v53 = (float *)(v50 + 4 * v52);
        v54 = (float *)(v42 + 4 * (v34 * v33));
        if (v107 < 4)
          break;
        v55 = v107 - 1;
        if ((unint64_t)v53 < v42
                                   + 4 * (v34 * v33)
                                   + 16 * (unint64_t)v55
                                   + 16
          && (unint64_t)v54 < v50 + 4 * (v52 + v55) + 4)
        {
          break;
        }
        v56 = v107 & 0xFFFFFFFC;
        v53 += v56;
        v64 = (const float *)(v42 + 4 * v32);
        v65 = (int8x16_t *)(v50 + 4 * v31);
        v66 = v56;
        v54 += 4 * v56;
        do
        {
          v118 = vld4q_f32(v64);
          v64 += 16;
          v118.val[0] = vmulq_f32(v118.val[3], vaddq_f32(vaddq_f32(vmulq_f32(v118.val[0], v36), vmulq_f32(v118.val[1], v37)), vmulq_f32(v118.val[2], v38)));
          *v65++ = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32(v118.val[0], _Q18), (int8x16_t)_Q18, (int8x16_t)v118.val[0]), (int8x16_t)vcltzq_f32(v118.val[0]));
          v66 -= 4;
        }
        while (v66);
        if (v56 != v51)
          goto LABEL_58;
LABEL_38:
        ++v33;
        v32 += v34;
        v31 += v35;
        if (v33 >= v108)
          goto LABEL_100;
      }
      LODWORD(v56) = 0;
LABEL_58:
      v57 = v51 - v56;
      do
      {
        v58 = v54[1] * 0.587;
        v59 = v54[2];
        v60 = v54[3];
        v61 = v60 * (float)((float)((float)(*v54 * 0.299) + v58) + (float)(v59 * 0.114));
        if (v61 <= 1.0)
          v62 = v60 * (float)((float)((float)(*v54 * 0.299) + v58) + (float)(v59 * 0.114));
        else
          v62 = 1.0;
        if (v61 >= 0.0)
          v63 = v62;
        else
          v63 = 0.0;
        *v53++ = v63;
        v54 += 4;
        --v57;
      }
      while (v57);
      goto LABEL_38;
    case 21:
      v101 = &off_250ADBEA0;
      sub_2396192A4((_DWORD *)(a1 + 56), v102);
      if (v113)
      {
        v67 = 0;
        v68 = *(_DWORD *)(a1 + 52);
        v69 = v111;
        do
        {
          v70 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            v71 = v70 == 0;
          else
            v71 = 1;
          if (!v71)
          {
            v72 = *(_QWORD *)(a1 + 8);
            v73 = *(std::__shared_weak_count **)(a1 + 16);
            if (v73)
            {
              v74 = (unint64_t *)&v73->__shared_owners_;
              do
                v75 = __ldxr(v74);
              while (__stxr(v75 + 1, v74));
              do
                v76 = __ldaxr(v74);
              while (__stlxr(v76 - 1, v74));
              if (!v76)
              {
                ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
                std::__shared_weak_count::__release_weak(v73);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v72 + 88))(v72, 0, "unknown location");
            v70 = *(_QWORD *)(a1 + 24);
          }
          v77 = v104;
          if (v114)
            v78 = v104 == 0;
          else
            v78 = 1;
          if (!v78)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v102[0] + 88))(v102[0], 1, "unknown location");
            v77 = v104;
          }
          if (v112)
          {
            v79 = 0;
            v80 = (_BYTE *)(v77 + (v69 * v67));
            v81 = (float *)(v70 + 4 * (v68 * v67));
            do
            {
              v82 = v81[1];
              v83 = v81[3];
              v84 = v81[2];
              *v80 = (int)(float)((float)(*v81 * v83) * 255.0);
              v80[1] = (int)(float)((float)(v82 * v83) * 255.0);
              v80[2] = (int)(float)((float)(v84 * v83) * 255.0);
              v80 += 3;
              ++v79;
              v81 += 4;
            }
            while (v79 < v112);
          }
          ++v67;
        }
        while (v67 < v113);
      }
      *a3 = &off_250ADB778;
      sub_239709138((uint64_t)&v101, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v102);
      goto LABEL_103;
    case 24:
      v101 = &off_250ADDC30;
      sub_239619E74((_DWORD *)(a1 + 56), v102);
      if (v113)
      {
        v6 = 0;
        v7 = 0;
        v8 = 0;
        v9 = *(_DWORD *)(a1 + 52);
        v10 = v111;
        do
        {
          v11 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            _ZF = v11 == 0;
          else
            _ZF = 1;
          if (!_ZF)
          {
            v13 = *(_QWORD *)(a1 + 8);
            v14 = *(std::__shared_weak_count **)(a1 + 16);
            if (v14)
            {
              v15 = (unint64_t *)&v14->__shared_owners_;
              do
                v16 = __ldxr(v15);
              while (__stxr(v16 + 1, v15));
              do
                v17 = __ldaxr(v15);
              while (__stlxr(v17 - 1, v15));
              if (!v17)
              {
                ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
                std::__shared_weak_count::__release_weak(v14);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v13 + 88))(v13, 0, "unknown location");
            v11 = *(_QWORD *)(a1 + 24);
          }
          v18 = v104;
          if (v114 && v104)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v102[0] + 88))(v102[0], 1, "unknown location");
            v18 = v104;
          }
          v19 = v112;
          if (!v112)
            goto LABEL_6;
          v20 = (float32x2_t *)(v18 + 4 * (v10 * v8));
          v21 = v11 + 4 * (v9 * v8);
          if (v112 >= 4
            && ((unint64_t)v20 < v11 + 4 * (v9 * v8) + 16 * (unint64_t)(v112 - 1) + 16
              ? (_CF = v21 >= v18 + 4 * (v10 * v8) + 12 * (unint64_t)(v112 - 1) + 12)
              : (_CF = 1),
                _CF))
          {
            v23 = v112 & 0xFFFFFFFC;
            v20 = (float32x2_t *)((char *)v20 + 12 * v23);
            v24 = (float *)(v18 + 4 * v7);
            v25 = (const float *)(v11 + 4 * v6);
            v26 = v23;
            v21 += 16 * v23;
            do
            {
              v117 = vld4q_f32(v25);
              v25 += 16;
              v116.val[0] = vmulq_f32(v117.val[0], v117.val[3]);
              v116.val[1] = vmulq_f32(v117.val[1], v117.val[3]);
              v116.val[2] = vmulq_f32(v117.val[2], v117.val[3]);
              vst3q_f32(v24, v116);
              v24 += 12;
              v26 -= 4;
            }
            while (v26);
            if (v23 == v19)
              goto LABEL_6;
          }
          else
          {
            LODWORD(v23) = 0;
          }
          v27 = (float *)(v21 + 12);
          v28 = v19 - v23;
          do
          {
            v29 = *(v27 - 1);
            v30 = *v27;
            *v20 = vmul_n_f32(*(float32x2_t *)(v27 - 3), *v27);
            v20[1].f32[0] = v29 * v30;
            v27 += 4;
            v20 = (float32x2_t *)((char *)v20 + 12);
            --v28;
          }
          while (v28);
LABEL_6:
          ++v8;
          v7 += v10;
          v6 += v9;
        }
        while (v8 < v113);
      }
      *a3 = &off_250ADB778;
      sub_23970977C((uint64_t)&v101, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v102);
      goto LABEL_103;
  }
  v97 = &off_250ADB210;
  sub_239647180(a1, (uint64_t)&v98);
  LOBYTE(v102[0]) = 0;
  v103 = 0;
  LOBYTE(v104) = 0;
  v105 = 0;
  v106 = 1;
  v107 = 0;
  sub_23988A34C((uint64_t)&v97, a2, (uint64_t)&v101, (uint64_t)a3);
  nullsub_4(&v100);
  v85 = v99;
  if (v99)
  {
    v86 = (unint64_t *)&v99->__shared_owners_;
    do
      v87 = __ldaxr(v86);
    while (__stlxr(v87 - 1, v86));
    if (!v87)
    {
      ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
      std::__shared_weak_count::__release_weak(v85);
    }
  }
  v88 = &v97;
  return nullsub_4(v88);
}

void sub_2397044A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  j_nullsub_4_89(v28);
  sub_239416DA0(a19);
  nullsub_4(&a28);
  _Unwind_Resume(a1);
}

void sub_2397044CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;
  uint64_t v29;

  j_nullsub_4_89(v29);
  sub_239416DA0(v28);
  nullsub_4(&a28);
  _Unwind_Resume(a1);
}

void sub_2397044F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  j_nullsub_4_89(v28);
  sub_239416DA0(a10);
  nullsub_4(&a28);
  _Unwind_Resume(a1);
}

void sub_239704514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239704528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23970453C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  nullsub_4(&a28);
  _Unwind_Resume(a1);
}

void sub_239704550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  nullsub_4(&a28);
  _Unwind_Resume(a1);
}

void sub_239704564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  nullsub_4(&a28);
  _Unwind_Resume(a1);
}

void sub_239704578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  sub_239416DA0(v28);
  nullsub_4(&a28);
  _Unwind_Resume(a1);
}

uint64_t sub_2397045D8@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t (***v18)();
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v36)();
  int v37;
  _BYTE v38[12];
  unint64_t v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[2];
  uint64_t (**v45)();
  _QWORD v46[2];
  char v47;
  _BYTE *v48;
  char v49;
  char v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  char v55;
  uint64_t v56;

  v56 = *MEMORY[0x24BDAC8D0];
  if (a2 == 21)
  {
    v45 = &off_250ADBEA0;
    sub_2396192A4((_DWORD *)(a1 + 56), v46);
    v5 = *(_QWORD *)(a1 + 8);
    if (!v5)
      goto LABEL_23;
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
      v5 = *(_QWORD *)(a1 + 8);
      v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        v11 = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
        do
          v13 = __ldaxr(v11);
        while (__stlxr(v13 - 1, v11));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
    }
    if (*(_BYTE *)(a1 + 73))
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v43, v5, 0);
    else
LABEL_23:
      v43 = 0;
    sub_239622218((uint64_t)&v45, &v42);
    v19 = *(_DWORD *)(a1 + 32);
    if (v19)
    {
      v20 = *(_DWORD *)(a1 + 36);
      if (v20)
      {
        v21 = *(_DWORD *)(a1 + 40);
        if (v21)
        {
          v37 = v19 - 1;
          v22 = *(unsigned int *)(a1 + 48);
          *(_QWORD *)v38 = *(unsigned int *)(a1 + 44) | ((unint64_t)v52 << 32);
          v36 = 0;
          *(_DWORD *)&v38[8] = v20 - 1;
          v39 = v22 | ((unint64_t)v53 << 32);
          v40 = v21 - 1;
          v41 = *(unsigned int *)(a1 + 52) | ((unint64_t)v54 << 32);
          v23 = *(_DWORD **)(a1 + 24);
          if (*(_BYTE *)(a1 + 72) && v23)
          {
            v24 = *(_QWORD *)(a1 + 8);
            v25 = *(std::__shared_weak_count **)(a1 + 16);
            if (v25)
            {
              v26 = (unint64_t *)&v25->__shared_owners_;
              do
                v27 = __ldxr(v26);
              while (__stxr(v27 + 1, v26));
              do
                v28 = __ldaxr(v26);
              while (__stlxr(v28 - 1, v26));
              if (!v28)
              {
                ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                std::__shared_weak_count::__release_weak(v25);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v24 + 88))(v24, 0, "unknown location");
            v23 = *(_DWORD **)(a1 + 24);
          }
          v29 = v48;
          if (v55 && v48)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v46[0] + 88))(v46[0], 1, "unknown location");
            v29 = v48;
          }
          memset(v44, 0, sizeof(v44));
          v30 = v40;
          if (v40)
          {
            v31 = v41;
            v32 = HIDWORD(v41);
            do
            {
              sub_23970B608(&v36, v44, v23, v29);
              v23 = (_DWORD *)((char *)v23 + v31);
              v29 += v32;
              --v30;
            }
            while (v30);
          }
          sub_23970B608(&v36, v44, v23, v29);
        }
      }
    }
    v33 = v42;
    v42 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v43;
    v43 = 0;
    if (v34)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
    *a3 = &off_250ADB778;
    sub_239709138((uint64_t)&v45, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v46);
    v18 = &v45;
  }
  else
  {
    v36 = &off_250ADB210;
    sub_23970B6BC(a1, (uint64_t)&v37);
    LOBYTE(v46[0]) = 0;
    v47 = 0;
    LOBYTE(v48) = 0;
    v49 = 0;
    v50 = 1;
    v51 = 0;
    sub_23988A34C((uint64_t)&v36, a2, (uint64_t)&v45, (uint64_t)a3);
    nullsub_4(&v39);
    v15 = *(std::__shared_weak_count **)&v38[4];
    if (*(_QWORD *)&v38[4])
    {
      v16 = (unint64_t *)(*(_QWORD *)&v38[4] + 8);
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    v18 = &v36;
  }
  return nullsub_4(v18);
}

void sub_239704980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23970499C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  uint64_t v16;
  va_list va;

  va_start(va, a15);
  j_nullsub_4_89(v16);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397049C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239704A54@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t (***v18)();
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v36)();
  int v37;
  _BYTE v38[12];
  unint64_t v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[2];
  uint64_t (**v45)();
  _QWORD v46[2];
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  char v55;
  uint64_t v56;

  v56 = *MEMORY[0x24BDAC8D0];
  if (a2 == 21)
  {
    v45 = &off_250ADBEA0;
    sub_2396192A4((_DWORD *)(a1 + 56), v46);
    v5 = *(_QWORD *)(a1 + 8);
    if (!v5)
      goto LABEL_23;
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
      v5 = *(_QWORD *)(a1 + 8);
      v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        v11 = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
        do
          v13 = __ldaxr(v11);
        while (__stlxr(v13 - 1, v11));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
    }
    if (*(_BYTE *)(a1 + 73))
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v43, v5, 0);
    else
LABEL_23:
      v43 = 0;
    sub_239622218((uint64_t)&v45, &v42);
    v19 = *(_DWORD *)(a1 + 32);
    if (v19)
    {
      v20 = *(_DWORD *)(a1 + 36);
      if (v20)
      {
        v21 = *(_DWORD *)(a1 + 40);
        if (v21)
        {
          v37 = v19 - 1;
          v22 = *(unsigned int *)(a1 + 48);
          *(_QWORD *)v38 = *(unsigned int *)(a1 + 44) | ((unint64_t)v52 << 32);
          v36 = 0;
          *(_DWORD *)&v38[8] = v20 - 1;
          v39 = v22 | ((unint64_t)v53 << 32);
          v40 = v21 - 1;
          v41 = *(unsigned int *)(a1 + 52) | ((unint64_t)v54 << 32);
          v23 = *(_DWORD **)(a1 + 24);
          if (*(_BYTE *)(a1 + 72) && v23)
          {
            v24 = *(_QWORD *)(a1 + 8);
            v25 = *(std::__shared_weak_count **)(a1 + 16);
            if (v25)
            {
              v26 = (unint64_t *)&v25->__shared_owners_;
              do
                v27 = __ldxr(v26);
              while (__stxr(v27 + 1, v26));
              do
                v28 = __ldaxr(v26);
              while (__stlxr(v28 - 1, v26));
              if (!v28)
              {
                ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                std::__shared_weak_count::__release_weak(v25);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v24 + 88))(v24, 0, "unknown location");
            v23 = *(_DWORD **)(a1 + 24);
          }
          v29 = v48;
          if (v55 && v48)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v46[0] + 88))(v46[0], 1, "unknown location");
            v29 = v48;
          }
          memset(v44, 0, sizeof(v44));
          v30 = v40;
          if (v40)
          {
            v31 = v41;
            v32 = HIDWORD(v41);
            do
            {
              sub_23970B834(&v36, v44, v23, v29);
              v23 = (_DWORD *)((char *)v23 + v31);
              v29 += v32;
              --v30;
            }
            while (v30);
          }
          sub_23970B834(&v36, v44, v23, v29);
        }
      }
    }
    v33 = v42;
    v42 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v43;
    v43 = 0;
    if (v34)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
    *a3 = &off_250ADB778;
    sub_239709138((uint64_t)&v45, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v46);
    v18 = &v45;
  }
  else
  {
    v36 = &off_250ADB210;
    sub_23970B8E8(a1, (uint64_t)&v37);
    LOBYTE(v46[0]) = 0;
    v47 = 0;
    LOBYTE(v48) = 0;
    v49 = 0;
    v50 = 1;
    v51 = 0;
    sub_23988A34C((uint64_t)&v36, a2, (uint64_t)&v45, (uint64_t)a3);
    nullsub_4(&v39);
    v15 = *(std::__shared_weak_count **)&v38[4];
    if (*(_QWORD *)&v38[4])
    {
      v16 = (unint64_t *)(*(_QWORD *)&v38[4] + 8);
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    v18 = &v36;
  }
  return nullsub_4(v18);
}

void sub_239704DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239704E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  uint64_t v16;
  va_list va;

  va_start(va, a15);
  j_nullsub_4_89(v16);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239704E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239704ED0@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t (***v18)();
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v36)();
  int v37;
  _BYTE v38[12];
  unint64_t v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[2];
  uint64_t (**v45)();
  _QWORD v46[2];
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  char v55;
  uint64_t v56;

  v56 = *MEMORY[0x24BDAC8D0];
  if (a2 == 21)
  {
    v45 = &off_250ADBEA0;
    sub_2396192A4((_DWORD *)(a1 + 56), v46);
    v5 = *(_QWORD *)(a1 + 8);
    if (!v5)
      goto LABEL_23;
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
      v5 = *(_QWORD *)(a1 + 8);
      v10 = *(std::__shared_weak_count **)(a1 + 16);
      if (v10)
      {
        v11 = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
        do
          v13 = __ldaxr(v11);
        while (__stlxr(v13 - 1, v11));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
    }
    if (*(_BYTE *)(a1 + 73))
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v43, v5, 0);
    else
LABEL_23:
      v43 = 0;
    sub_239622218((uint64_t)&v45, &v42);
    v19 = *(_DWORD *)(a1 + 32);
    if (v19)
    {
      v20 = *(_DWORD *)(a1 + 36);
      if (v20)
      {
        v21 = *(_DWORD *)(a1 + 40);
        if (v21)
        {
          v37 = v19 - 1;
          v22 = *(unsigned int *)(a1 + 48);
          *(_QWORD *)v38 = *(unsigned int *)(a1 + 44) | ((unint64_t)v52 << 32);
          v36 = 0;
          *(_DWORD *)&v38[8] = v20 - 1;
          v39 = v22 | ((unint64_t)v53 << 32);
          v40 = v21 - 1;
          v41 = *(unsigned int *)(a1 + 52) | ((unint64_t)v54 << 32);
          v23 = *(_DWORD **)(a1 + 24);
          if (*(_BYTE *)(a1 + 72) && v23)
          {
            v24 = *(_QWORD *)(a1 + 8);
            v25 = *(std::__shared_weak_count **)(a1 + 16);
            if (v25)
            {
              v26 = (unint64_t *)&v25->__shared_owners_;
              do
                v27 = __ldxr(v26);
              while (__stxr(v27 + 1, v26));
              do
                v28 = __ldaxr(v26);
              while (__stlxr(v28 - 1, v26));
              if (!v28)
              {
                ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                std::__shared_weak_count::__release_weak(v25);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v24 + 88))(v24, 0, "unknown location");
            v23 = *(_DWORD **)(a1 + 24);
          }
          v29 = v48;
          if (v55 && v48)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v46[0] + 88))(v46[0], 1, "unknown location");
            v29 = v48;
          }
          memset(v44, 0, sizeof(v44));
          v30 = v40;
          if (v40)
          {
            v31 = v41;
            v32 = HIDWORD(v41);
            do
            {
              sub_23970BA60(&v36, v44, v23, v29);
              v23 = (_DWORD *)((char *)v23 + v31);
              v29 += v32;
              --v30;
            }
            while (v30);
          }
          sub_23970BA60(&v36, v44, v23, v29);
        }
      }
    }
    v33 = v42;
    v42 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v43;
    v43 = 0;
    if (v34)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
    *a3 = &off_250ADB778;
    sub_239709138((uint64_t)&v45, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v46);
    v18 = &v45;
  }
  else
  {
    v36 = &off_250ADB210;
    sub_239645FA4(a1, (uint64_t)&v37);
    LOBYTE(v46[0]) = 0;
    v47 = 0;
    LOBYTE(v48) = 0;
    v49 = 0;
    v50 = 1;
    v51 = 0;
    sub_23988A34C((uint64_t)&v36, a2, (uint64_t)&v45, (uint64_t)a3);
    nullsub_4(&v39);
    v15 = *(std::__shared_weak_count **)&v38[4];
    if (*(_QWORD *)&v38[4])
    {
      v16 = (unint64_t *)(*(_QWORD *)&v38[4] + 8);
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    v18 = &v36;
  }
  return nullsub_4(v18);
}

void sub_239705278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239705294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  uint64_t v16;
  va_list va;

  va_start(va, a15);
  j_nullsub_4_89(v16);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397052B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  sub_239416DA0(v15);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970534C@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  float v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  unsigned int v19;
  _BYTE *v20;
  _WORD *v21;
  unsigned int v22;
  unsigned int v23;
  float32x4_t v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v27;
  int v28;
  int v29;
  float32x4_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *p_shared_owners;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  __int16 *v42;
  uint64_t v43;
  const __int16 *v44;
  float *v45;
  uint64_t v46;
  float *v47;
  float *v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  uint64_t (***v55)();
  float32x4_t v58;
  uint64_t (**v59)();
  uint64_t v60;
  std::__shared_weak_count *v61;
  uint64_t v62;
  uint64_t (**v63)();
  _QWORD v64[2];
  char v65;
  uint64_t v66;
  char v67;
  char v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  char v73;
  uint64_t v74;
  int16x8x3_t v75;
  float32x4x3_t v76;
  float32x4x3_t v77;

  v74 = *MEMORY[0x24BDAC8D0];
  if (a2 == 24)
  {
    v63 = &off_250ADDC30;
    sub_239619E74((_DWORD *)(a1 + 56), v64);
    if (!v72)
    {
LABEL_61:
      *a3 = &off_250ADB778;
      sub_23970977C((uint64_t)&v63, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v64);
LABEL_62:
      v55 = &v63;
      return nullsub_4(v55);
    }
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = *(_DWORD *)(a1 + 52);
    v29 = v70;
    v30 = (float32x4_t)vdupq_n_s32(0x37800080u);
    v58 = v30;
    while (1)
    {
      v31 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(a1 + 72))
        v32 = v31 == 0;
      else
        v32 = 1;
      if (!v32)
      {
        v33 = *(_QWORD *)(a1 + 8);
        v34 = *(std::__shared_weak_count **)(a1 + 16);
        if (v34)
        {
          p_shared_owners = (unint64_t *)&v34->__shared_owners_;
          do
            v36 = __ldxr(p_shared_owners);
          while (__stxr(v36 + 1, p_shared_owners));
          do
            v37 = __ldaxr(p_shared_owners);
          while (__stlxr(v37 - 1, p_shared_owners));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
            std::__shared_weak_count::__release_weak(v34);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v33 + 88))(v33, 0, "unknown location");
        v31 = *(_QWORD *)(a1 + 24);
        v30 = v58;
      }
      v38 = v66;
      if (v73)
        v39 = v66 == 0;
      else
        v39 = 1;
      if (!v39)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v64[0] + 88))(v64[0], 1, "unknown location");
        v38 = v66;
        v30 = v58;
      }
      v40 = v71;
      if (!v71)
        goto LABEL_28;
      v41 = v38 + 4 * (v29 * v27);
      v42 = (__int16 *)(v31 + 2 * (v28 * v27));
      if (v71 >= 8)
      {
        v43 = v71 & 0xFFFFFFF8;
        v41 += 12 * v43;
        v42 += 3 * v43;
        v44 = (const __int16 *)(v31 + 2 * v26);
        v45 = (float *)(v38 + 4 * v25);
        v46 = v43;
        do
        {
          v75 = vld3q_s16(v44);
          v44 += 24;
          v76.val[0] = vmulq_f32(vcvtq_f32_u32(vmovl_high_u16((uint16x8_t)v75.val[0])), v30);
          v76.val[1] = vmulq_f32(vcvtq_f32_u32(vmovl_high_u16((uint16x8_t)v75.val[1])), v30);
          v76.val[2] = vmulq_f32(vcvtq_f32_u32(vmovl_high_u16((uint16x8_t)v75.val[2])), v30);
          v77.val[0] = vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v75.val[0].i8)), v30);
          v77.val[1] = vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v75.val[1].i8)), v30);
          v24 = vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v75.val[2].i8));
          v77.val[2] = vmulq_f32(v24, v30);
          v47 = v45 + 24;
          vst3q_f32(v45, v77);
          v48 = v45 + 12;
          vst3q_f32(v48, v76);
          v45 = v47;
          v46 -= 8;
        }
        while (v46);
        if (v43 == v40)
          goto LABEL_28;
      }
      else
      {
        LODWORD(v43) = 0;
      }
      v49 = v40 - v43;
      do
      {
        v24.i16[0] = *v42;
        *(float *)&v50 = (float)v24.u32[0] * 0.000015259;
        *(float *)v41 = *(float *)&v50;
        LOWORD(v50) = v42[1];
        *(float *)&v51 = (float)v50 * 0.000015259;
        *(float *)(v41 + 4) = *(float *)&v51;
        LOWORD(v51) = v42[2];
        v24.f32[0] = (float)v51 * 0.000015259;
        *(_DWORD *)(v41 + 8) = v24.i32[0];
        v42 += 3;
        v41 += 12;
        --v49;
      }
      while (v49);
LABEL_28:
      ++v27;
      v26 += v28;
      v25 += v29;
      if (v27 >= v72)
        goto LABEL_61;
    }
  }
  if (a2 == 21)
  {
    v63 = &off_250ADBEA0;
    sub_2396192A4((_DWORD *)(a1 + 56), v64);
    if (v72)
    {
      v7 = 0;
      v8 = *(_DWORD *)(a1 + 52);
      v9 = v70;
      do
      {
        v10 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 72))
          v11 = v10 == 0;
        else
          v11 = 1;
        if (!v11)
        {
          v12 = *(_QWORD *)(a1 + 8);
          v13 = *(std::__shared_weak_count **)(a1 + 16);
          if (v13)
          {
            v14 = (unint64_t *)&v13->__shared_owners_;
            do
              v15 = __ldxr(v14);
            while (__stxr(v15 + 1, v14));
            do
              v16 = __ldaxr(v14);
            while (__stlxr(v16 - 1, v14));
            if (!v16)
            {
              ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
              std::__shared_weak_count::__release_weak(v13);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
          v10 = *(_QWORD *)(a1 + 24);
        }
        v17 = v66;
        if (v73)
          v18 = v66 == 0;
        else
          v18 = 1;
        if (!v18)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v64[0] + 88))(v64[0], 1, "unknown location");
          v17 = v66;
        }
        if (v71)
        {
          v19 = 0;
          v20 = (_BYTE *)(v17 + (v9 * v7));
          v21 = (_WORD *)(v10 + 2 * (v8 * v7));
          do
          {
            LOWORD(v6) = *v21;
            *(float *)&v22 = (float)LODWORD(v6) * 0.0038911;
            *v20 = (int)*(float *)&v22;
            LOWORD(v22) = v21[1];
            *(float *)&v23 = (float)v22 * 0.0038911;
            v20[1] = (int)*(float *)&v23;
            LOWORD(v23) = v21[2];
            v6 = (float)v23 * 0.0038911;
            v20[2] = (int)v6;
            ++v19;
            v21 += 3;
            v20 += 3;
          }
          while (v19 < v71);
        }
        ++v7;
      }
      while (v7 < v72);
    }
    *a3 = &off_250ADB778;
    sub_239709138((uint64_t)&v63, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v64);
    goto LABEL_62;
  }
  v59 = &off_250ADB210;
  sub_23970BB0C(a1, (uint64_t)&v60);
  LOBYTE(v64[0]) = 0;
  v65 = 0;
  LOBYTE(v66) = 0;
  v67 = 0;
  v68 = 1;
  v69 = 0;
  sub_23988A34C((uint64_t)&v59, a2, (uint64_t)&v63, (uint64_t)a3);
  nullsub_4(&v62);
  v52 = v61;
  if (v61)
  {
    v53 = (unint64_t *)&v61->__shared_owners_;
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }
  v55 = &v59;
  return nullsub_4(v55);
}

void sub_239705864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  j_nullsub_4_89(v12);
  sub_239416DA0(a3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239705888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  uint64_t v13;
  va_list va;

  va_start(va, a12);
  j_nullsub_4_89(v13);
  sub_239416DA0(v12);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397058AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397058C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397058D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397058E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397058FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0(a3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970593C@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  unsigned int v18;
  _BYTE *v19;
  __int16 *v20;
  unsigned int v27;
  unsigned int v28;
  unint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *p_shared_owners;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  __int16 *v42;
  uint64_t v44;
  const __int16 *v45;
  float *v46;
  uint64_t v47;
  float *v48;
  float *v49;
  int v50;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  uint64_t (***v58)();
  uint64_t (**v61)();
  uint64_t v62;
  std::__shared_weak_count *v63;
  uint64_t v64;
  uint64_t (**v65)();
  _QWORD v66[2];
  char v67;
  uint64_t v68;
  char v69;
  char v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  char v75;
  uint64_t v76;
  int16x8x3_t v77;
  float32x4x3_t v78;
  float32x4x3_t v79;

  v76 = *MEMORY[0x24BDAC8D0];
  if (a2 == 24)
  {
    v65 = &off_250ADDC30;
    sub_239619E74((_DWORD *)(a1 + 56), v66);
    if (!v74)
    {
LABEL_65:
      *a3 = &off_250ADB778;
      sub_23970977C((uint64_t)&v65, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v66);
LABEL_66:
      v58 = &v65;
      return nullsub_4(v58);
    }
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = *(_DWORD *)(a1 + 52);
    v31 = v72;
    while (1)
    {
      v32 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(a1 + 72))
        v33 = v32 == 0;
      else
        v33 = 1;
      if (!v33)
      {
        v34 = *(_QWORD *)(a1 + 8);
        v35 = *(std::__shared_weak_count **)(a1 + 16);
        if (v35)
        {
          p_shared_owners = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(p_shared_owners);
          while (__stxr(v37 + 1, p_shared_owners));
          do
            v38 = __ldaxr(p_shared_owners);
          while (__stlxr(v38 - 1, p_shared_owners));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v34 + 88))(v34, 0, "unknown location");
        v32 = *(_QWORD *)(a1 + 24);
      }
      v39 = v68;
      if (v75 && v68)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v66[0] + 88))(v66[0], 1, "unknown location");
        v39 = v68;
      }
      v40 = v73;
      if (!v73)
        goto LABEL_28;
      v41 = (_DWORD *)(v39 + 4 * (v31 * v29));
      v42 = (__int16 *)(v32 + 2 * (v30 * v29));
      if (v73 >= 8
        && ((unint64_t)v41 < v32 + 2 * (v30 * v29) + 6 * (unint64_t)(v73 - 1) + 6
          ? (_CF = (unint64_t)v42 >= v39
                                          + 4 * (v31 * v29)
                                          + 12 * (unint64_t)(v73 - 1)
                                          + 12)
          : (_CF = 1),
            _CF))
      {
        v44 = v73 & 0xFFFFFFF8;
        v41 += 3 * v44;
        v42 += 3 * v44;
        v45 = (const __int16 *)(v32 + 2 * v28);
        v46 = (float *)(v39 + 4 * v27);
        v47 = v44;
        do
        {
          v77 = vld3q_s16(v45);
          v45 += 24;
          v78.val[0] = vcvt_hight_f32_f16((float16x8_t)v77.val[0]);
          v78.val[1] = vcvt_hight_f32_f16((float16x8_t)v77.val[1]);
          v78.val[2] = vcvt_hight_f32_f16((float16x8_t)v77.val[2]);
          v79.val[0] = vcvtq_f32_f16(*(float16x4_t *)v77.val[0].i8);
          v79.val[1] = vcvtq_f32_f16(*(float16x4_t *)v77.val[1].i8);
          v79.val[2] = vcvtq_f32_f16(*(float16x4_t *)v77.val[2].i8);
          v48 = v46 + 24;
          vst3q_f32(v46, v79);
          v49 = v46 + 12;
          vst3q_f32(v49, v78);
          v46 = v48;
          v47 -= 8;
        }
        while (v47);
        if (v44 == v40)
          goto LABEL_28;
      }
      else
      {
        LODWORD(v44) = 0;
      }
      v50 = v40 - v44;
      do
      {
        _H0 = *v42;
        __asm { FCVT            S0, H0 }
        *v41 = _S0;
        LOWORD(_S0) = v42[1];
        __asm { FCVT            S0, H0 }
        v41[1] = _S0;
        LOWORD(_S0) = v42[2];
        __asm { FCVT            S0, H0 }
        v41[2] = _S0;
        v42 += 3;
        v41 += 3;
        --v50;
      }
      while (v50);
LABEL_28:
      ++v29;
      v28 += v30;
      v27 += v31;
      if (v29 >= v74)
        goto LABEL_65;
    }
  }
  if (a2 == 21)
  {
    v65 = &off_250ADBEA0;
    sub_2396192A4((_DWORD *)(a1 + 56), v66);
    if (v74)
    {
      v6 = 0;
      v7 = *(_DWORD *)(a1 + 52);
      v8 = v72;
      do
      {
        v9 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 72))
          _ZF = v9 == 0;
        else
          _ZF = 1;
        if (!_ZF)
        {
          v11 = *(_QWORD *)(a1 + 8);
          v12 = *(std::__shared_weak_count **)(a1 + 16);
          if (v12)
          {
            v13 = (unint64_t *)&v12->__shared_owners_;
            do
              v14 = __ldxr(v13);
            while (__stxr(v14 + 1, v13));
            do
              v15 = __ldaxr(v13);
            while (__stlxr(v15 - 1, v13));
            if (!v15)
            {
              ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
              std::__shared_weak_count::__release_weak(v12);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
          v9 = *(_QWORD *)(a1 + 24);
        }
        v16 = v68;
        if (v75)
          v17 = v68 == 0;
        else
          v17 = 1;
        if (!v17)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v66[0] + 88))(v66[0], 1, "unknown location");
          v16 = v68;
        }
        if (v73)
        {
          v18 = 0;
          v19 = (_BYTE *)(v16 + (v8 * v6));
          v20 = (__int16 *)(v9 + 2 * (v7 * v6));
          do
          {
            _H0 = *v20;
            __asm { FCVT            S0, H0 }
            *v19 = (int)(float)(_S0 * 255.0);
            LOWORD(_S0) = v20[1];
            __asm { FCVT            S0, H0 }
            v19[1] = (int)(float)(_S0 * 255.0);
            LOWORD(_S0) = v20[2];
            __asm { FCVT            S0, H0 }
            v19[2] = (int)(float)(_S0 * 255.0);
            ++v18;
            v20 += 3;
            v19 += 3;
          }
          while (v18 < v73);
        }
        ++v6;
      }
      while (v6 < v74);
    }
    *a3 = &off_250ADB778;
    sub_239709138((uint64_t)&v65, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v66);
    goto LABEL_66;
  }
  v61 = &off_250ADB210;
  sub_23970BC84(a1, (uint64_t)&v62);
  LOBYTE(v66[0]) = 0;
  v67 = 0;
  LOBYTE(v68) = 0;
  v69 = 0;
  v70 = 1;
  v71 = 0;
  sub_23988A34C((uint64_t)&v61, a2, (uint64_t)&v65, (uint64_t)a3);
  nullsub_4(&v64);
  v55 = v63;
  if (v63)
  {
    v56 = (unint64_t *)&v63->__shared_owners_;
    do
      v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
    }
  }
  v58 = &v61;
  return nullsub_4(v58);
}

void sub_239705E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  j_nullsub_4_89(v10);
  sub_239416DA0(a3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239705E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a10);
  j_nullsub_4_89(v11);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239705E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239705E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239705E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239705EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239705EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_239416DA0(a3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239705F00@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  float v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  unsigned int v19;
  _BYTE *v20;
  _WORD *v21;
  unsigned int v22;
  unsigned int v23;
  float32x4_t v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v27;
  int v28;
  int v29;
  float32x4_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *p_shared_owners;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  BOOL v39;
  unsigned int v40;
  uint64_t v41;
  __int16 *v42;
  uint64_t v43;
  uint64_t v44;
  const __int16 *v45;
  float *v46;
  uint64_t v47;
  float *v48;
  float *v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  uint64_t (***v56)();
  float32x4_t v59;
  uint64_t (**v60)();
  uint64_t v61;
  std::__shared_weak_count *v62;
  uint64_t v63;
  uint64_t (**v64)();
  _QWORD v65[2];
  char v66;
  uint64_t v67;
  char v68;
  char v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  char v74;
  uint64_t v75;
  float32x4x3_t v76;
  float32x4x3_t v77;
  int16x8x4_t v78;

  v75 = *MEMORY[0x24BDAC8D0];
  if (a2 == 24)
  {
    v64 = &off_250ADDC30;
    sub_239619E74((_DWORD *)(a1 + 56), v65);
    if (v73)
    {
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = *(_DWORD *)(a1 + 52);
      v29 = v71;
      v30 = (float32x4_t)vdupq_n_s32(0x37800080u);
      v59 = v30;
      do
      {
        v31 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 72))
          v32 = v31 == 0;
        else
          v32 = 1;
        if (!v32)
        {
          v33 = *(_QWORD *)(a1 + 8);
          v34 = *(std::__shared_weak_count **)(a1 + 16);
          if (v34)
          {
            p_shared_owners = (unint64_t *)&v34->__shared_owners_;
            do
              v36 = __ldxr(p_shared_owners);
            while (__stxr(v36 + 1, p_shared_owners));
            do
              v37 = __ldaxr(p_shared_owners);
            while (__stlxr(v37 - 1, p_shared_owners));
            if (!v37)
            {
              ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
              std::__shared_weak_count::__release_weak(v34);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v33 + 88))(v33, 0, "unknown location");
          v31 = *(_QWORD *)(a1 + 24);
          v30 = v59;
        }
        v38 = v67;
        if (v74)
          v39 = v67 == 0;
        else
          v39 = 1;
        if (!v39)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v65[0] + 88))(v65[0], 1, "unknown location");
          v38 = v67;
          v30 = v59;
        }
        v40 = v72;
        if (v72)
        {
          v41 = v38 + 4 * (v29 * v27);
          v42 = (__int16 *)(v31 + 2 * (v28 * v27));
          if (v72 > 8)
          {
            v44 = v72 & 7;
            if (!v44)
              v44 = 8;
            v43 = v72 - v44;
            v41 += 12 * v43;
            v42 += 4 * v43;
            v45 = (const __int16 *)(v31 + 2 * v26);
            v46 = (float *)(v38 + 4 * v25);
            v47 = v43;
            do
            {
              v78 = vld4q_s16(v45);
              v45 += 32;
              v76.val[0] = vmulq_f32(vcvtq_f32_u32(vmovl_high_u16((uint16x8_t)v78.val[0])), v30);
              v76.val[1] = vmulq_f32(vcvtq_f32_u32(vmovl_high_u16((uint16x8_t)v78.val[1])), v30);
              v76.val[2] = vmulq_f32(vcvtq_f32_u32(vmovl_high_u16((uint16x8_t)v78.val[2])), v30);
              v77.val[0] = vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v78.val[0].i8)), v30);
              v48 = v46 + 24;
              v77.val[1] = vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v78.val[1].i8)), v30);
              v24 = vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v78.val[2].i8));
              v77.val[2] = vmulq_f32(v24, v30);
              vst3q_f32(v46, v77);
              v49 = v46 + 12;
              vst3q_f32(v49, v76);
              v46 = v48;
              v47 -= 8;
            }
            while (v47);
          }
          else
          {
            LODWORD(v43) = 0;
          }
          v50 = v40 - v43;
          do
          {
            v24.i16[0] = *v42;
            *(float *)&v51 = (float)v24.u32[0] * 0.000015259;
            *(float *)v41 = *(float *)&v51;
            LOWORD(v51) = v42[1];
            *(float *)&v52 = (float)v51 * 0.000015259;
            *(float *)(v41 + 4) = *(float *)&v52;
            LOWORD(v52) = v42[2];
            v24.f32[0] = (float)v52 * 0.000015259;
            *(_DWORD *)(v41 + 8) = v24.i32[0];
            v42 += 4;
            v41 += 12;
            --v50;
          }
          while (v50);
        }
        ++v27;
        v26 += v28;
        v25 += v29;
      }
      while (v27 < v73);
    }
    *a3 = &off_250ADB778;
    sub_23970977C((uint64_t)&v64, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v65);
    goto LABEL_63;
  }
  if (a2 == 21)
  {
    v64 = &off_250ADBEA0;
    sub_2396192A4((_DWORD *)(a1 + 56), v65);
    if (v73)
    {
      v7 = 0;
      v8 = *(_DWORD *)(a1 + 52);
      v9 = v71;
      do
      {
        v10 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 72))
          v11 = v10 == 0;
        else
          v11 = 1;
        if (!v11)
        {
          v12 = *(_QWORD *)(a1 + 8);
          v13 = *(std::__shared_weak_count **)(a1 + 16);
          if (v13)
          {
            v14 = (unint64_t *)&v13->__shared_owners_;
            do
              v15 = __ldxr(v14);
            while (__stxr(v15 + 1, v14));
            do
              v16 = __ldaxr(v14);
            while (__stlxr(v16 - 1, v14));
            if (!v16)
            {
              ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
              std::__shared_weak_count::__release_weak(v13);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
          v10 = *(_QWORD *)(a1 + 24);
        }
        v17 = v67;
        if (v74)
          v18 = v67 == 0;
        else
          v18 = 1;
        if (!v18)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v65[0] + 88))(v65[0], 1, "unknown location");
          v17 = v67;
        }
        if (v72)
        {
          v19 = 0;
          v20 = (_BYTE *)(v17 + (v9 * v7));
          v21 = (_WORD *)(v10 + 2 * (v8 * v7));
          do
          {
            LOWORD(v6) = *v21;
            *(float *)&v22 = (float)LODWORD(v6) * 0.0038911;
            *v20 = (int)*(float *)&v22;
            LOWORD(v22) = v21[1];
            *(float *)&v23 = (float)v22 * 0.0038911;
            v20[1] = (int)*(float *)&v23;
            LOWORD(v23) = v21[2];
            v6 = (float)v23 * 0.0038911;
            v20[2] = (int)v6;
            ++v19;
            v21 += 4;
            v20 += 3;
          }
          while (v19 < v72);
        }
        ++v7;
      }
      while (v7 < v73);
    }
    *a3 = &off_250ADB778;
    sub_239709138((uint64_t)&v64, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v65);
LABEL_63:
    v56 = &v64;
    return nullsub_4(v56);
  }
  v60 = &off_250ADB210;
  sub_23970BDFC(a1, (uint64_t)&v61);
  LOBYTE(v65[0]) = 0;
  v66 = 0;
  LOBYTE(v67) = 0;
  v68 = 0;
  v69 = 1;
  v70 = 0;
  sub_23988A34C((uint64_t)&v60, a2, (uint64_t)&v64, (uint64_t)a3);
  nullsub_4(&v63);
  v53 = v62;
  if (v62)
  {
    v54 = (unint64_t *)&v62->__shared_owners_;
    do
      v55 = __ldaxr(v54);
    while (__stlxr(v55 - 1, v54));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
      std::__shared_weak_count::__release_weak(v53);
    }
  }
  v56 = &v60;
  return nullsub_4(v56);
}

void sub_239706418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  j_nullsub_4_89(v12);
  sub_239416DA0(a3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23970643C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  uint64_t v13;
  va_list va;

  va_start(va, a12);
  j_nullsub_4_89(v13);
  sub_239416DA0(v12);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239706460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239706474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239706488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23970649C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397064B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0(a3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397064F0@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  unsigned int v18;
  _BYTE *v19;
  __int16 *v20;
  int8x16_t v27;
  unsigned int v28;
  unsigned int v29;
  unint64_t v30;
  int v31;
  int v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  float *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  const __int16 *v52;
  int8x16_t *v53;
  uint64_t v54;
  float32x4_t v55;
  int v56;
  float v59;
  float v60;
  unsigned int v61;
  unsigned int v62;
  unint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unsigned int v74;
  _DWORD *v75;
  __int16 *v76;
  uint64_t v78;
  uint64_t v79;
  const __int16 *v80;
  float *v81;
  uint64_t v82;
  float *v83;
  float *v84;
  int v85;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  uint64_t (***v93)();
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  uint64_t (**v101)();
  uint64_t v102;
  std::__shared_weak_count *v103;
  uint64_t v104;
  uint64_t (**v105)();
  _QWORD v106[2];
  char v107;
  uint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  char v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  char v118;
  uint64_t v119;
  float32x4x3_t v120;
  float32x4x3_t v121;
  int16x8x4_t v122;
  int16x8x4_t v123;

  v119 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 4:
      v105 = &off_250ADD920;
      sub_239709458((_DWORD *)(a1 + 56), v106);
      if (v112)
      {
        v28 = 0;
        v29 = 0;
        v30 = 0;
        v31 = *(_DWORD *)(a1 + 52);
        v32 = v113;
        v33 = (float32x4_t)vdupq_n_s32(0x3E991687u);
        v34 = (float32x4_t)vdupq_n_s32(0x3F1645A2u);
        v35 = (float32x4_t)vdupq_n_s32(0x3DE978D5u);
        __asm { FMOV            V20.4S, #1.0 }
        v99 = v34;
        v100 = v33;
        v97 = _Q20;
        v98 = v35;
        do
        {
          v37 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            v38 = v37 == 0;
          else
            v38 = 1;
          if (!v38)
          {
            v39 = *(_QWORD *)(a1 + 8);
            v40 = *(std::__shared_weak_count **)(a1 + 16);
            if (v40)
            {
              p_shared_owners = (unint64_t *)&v40->__shared_owners_;
              do
                v42 = __ldxr(p_shared_owners);
              while (__stxr(v42 + 1, p_shared_owners));
              do
                v43 = __ldaxr(p_shared_owners);
              while (__stlxr(v43 - 1, p_shared_owners));
              if (!v43)
              {
                ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
                std::__shared_weak_count::__release_weak(v40);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v39 + 88))(v39, 0, "unknown location");
            v37 = *(_QWORD *)(a1 + 24);
            v34 = v99;
            v33 = v100;
            _Q20 = v97;
            v35 = v98;
          }
          v44 = v108;
          if (v114 && v108)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v106[0] + 88))(v106[0], 1, "unknown location");
            v44 = v108;
            v34 = v99;
            v33 = v100;
            _Q20 = v97;
            v35 = v98;
          }
          v45 = v111;
          if (v111)
          {
            v46 = (v32 * v30);
            v47 = (float *)(v44 + 4 * v46);
            v48 = v37 + 2 * (v31 * v30);
            if (v111 > 8
              && ((v49 = v111 - 1,
                   (unint64_t)v47 >= v37
                                          + 2 * (v31 * v30)
                                          + 8 * (unint64_t)v49
                                          + 6)
               || v48 >= v44 + 4 * (v46 + v49) + 4))
            {
              v51 = v111 & 7;
              if (!v51)
                v51 = 8;
              v50 = v111 - v51;
              v47 += v50;
              v48 += 8 * v50;
              v52 = (const __int16 *)(v37 + 2 * v29);
              v53 = (int8x16_t *)(v44 + 4 * v28);
              v54 = v50;
              do
              {
                v122 = vld4q_s16(v52);
                v52 += 32;
                v55 = vmulq_f32(vcvt_hight_f32_f16((float16x8_t)v122.val[1]), v34);
                v122.val[1] = (int16x8_t)vaddq_f32(vaddq_f32(vmulq_f32(vcvtq_f32_f16(*(float16x4_t *)v122.val[0].i8), v33), vmulq_f32(vcvtq_f32_f16(*(float16x4_t *)v122.val[1].i8), v34)), vmulq_f32(vcvtq_f32_f16(*(float16x4_t *)v122.val[2].i8), v35));
                v122.val[0] = (int16x8_t)vaddq_f32(vaddq_f32(vmulq_f32(vcvt_hight_f32_f16((float16x8_t)v122.val[0]), v33), v55), vmulq_f32(vcvt_hight_f32_f16((float16x8_t)v122.val[2]), v35));
                v27 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)v122.val[0], _Q20), (int8x16_t)_Q20, (int8x16_t)v122.val[0]), (int8x16_t)vcltzq_f32((float32x4_t)v122.val[0]));
                *v53 = vbicq_s8(vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)v122.val[1], _Q20), (int8x16_t)_Q20, (int8x16_t)v122.val[1]), (int8x16_t)vcltzq_f32((float32x4_t)v122.val[1]));
                v53[1] = v27;
                v53 += 2;
                v54 -= 8;
              }
              while (v54);
            }
            else
            {
              LODWORD(v50) = 0;
            }
            v56 = v45 - v50;
            do
            {
              v27.i32[0] = *(_DWORD *)v48;
              *(float32x2_t *)v27.i8 = vmul_f32((float32x2_t)*(_OWORD *)&vcvtq_f32_f16(*(float16x4_t *)v27.i8), (float32x2_t)0x3F1645A23E991687);
              _H1 = *(_WORD *)(v48 + 4);
              __asm { FCVT            S1, H1 }
              *(float *)v27.i32 = vaddv_f32(*(float32x2_t *)v27.i8) + (float)(_S1 * 0.114);
              if (*(float *)v27.i32 <= 1.0)
                v59 = *(float *)v27.i32;
              else
                v59 = 1.0;
              if (*(float *)v27.i32 >= 0.0)
                v60 = v59;
              else
                v60 = 0.0;
              *v47++ = v60;
              v48 += 8;
              --v56;
            }
            while (v56);
          }
          ++v30;
          v29 += v31;
          v28 += v32;
        }
        while (v30 < v112);
      }
      *a3 = &off_250ADB778;
      sub_2397096A8((uint64_t)&v105, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v106);
      goto LABEL_104;
    case 24:
      v105 = &off_250ADDC30;
      sub_239619E74((_DWORD *)(a1 + 56), v106);
      if (v117)
      {
        v61 = 0;
        v62 = 0;
        v63 = 0;
        v64 = *(_DWORD *)(a1 + 52);
        v65 = v115;
        do
        {
          v66 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            v67 = v66 == 0;
          else
            v67 = 1;
          if (!v67)
          {
            v68 = *(_QWORD *)(a1 + 8);
            v69 = *(std::__shared_weak_count **)(a1 + 16);
            if (v69)
            {
              v70 = (unint64_t *)&v69->__shared_owners_;
              do
                v71 = __ldxr(v70);
              while (__stxr(v71 + 1, v70));
              do
                v72 = __ldaxr(v70);
              while (__stlxr(v72 - 1, v70));
              if (!v72)
              {
                ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                std::__shared_weak_count::__release_weak(v69);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v68 + 88))(v68, 0, "unknown location");
            v66 = *(_QWORD *)(a1 + 24);
          }
          v73 = v108;
          if (v118 && v108)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v106[0] + 88))(v106[0], 1, "unknown location");
            v73 = v108;
          }
          v74 = v116;
          if (v116)
          {
            v75 = (_DWORD *)(v73 + 4 * (v65 * v63));
            v76 = (__int16 *)(v66 + 2 * (v64 * v63));
            if (v116 > 8
              && ((unint64_t)v75 < v66 + 2 * (v64 * v63) + 8 * (unint64_t)(v116 - 1) + 6
                ? (_CF = (unint64_t)v76 >= v73
                                                + 4 * (v65 * v63)
                                                + 12 * (unint64_t)(v116 - 1)
                                                + 12)
                : (_CF = 1),
                  _CF))
            {
              v78 = v116 & 7;
              if (!v78)
                v78 = 8;
              v79 = v116 - v78;
              v75 += 3 * v79;
              v76 += 4 * v79;
              v80 = (const __int16 *)(v66 + 2 * v62);
              v81 = (float *)(v73 + 4 * v61);
              v82 = v79;
              do
              {
                v123 = vld4q_s16(v80);
                v80 += 32;
                v120.val[0] = vcvt_hight_f32_f16((float16x8_t)v123.val[0]);
                v120.val[1] = vcvt_hight_f32_f16((float16x8_t)v123.val[1]);
                v83 = v81 + 24;
                v120.val[2] = vcvt_hight_f32_f16((float16x8_t)v123.val[2]);
                v121.val[0] = vcvtq_f32_f16(*(float16x4_t *)v123.val[0].i8);
                v121.val[1] = vcvtq_f32_f16(*(float16x4_t *)v123.val[1].i8);
                v121.val[2] = vcvtq_f32_f16(*(float16x4_t *)v123.val[2].i8);
                vst3q_f32(v81, v121);
                v84 = v81 + 12;
                vst3q_f32(v84, v120);
                v81 = v83;
                v82 -= 8;
              }
              while (v82);
            }
            else
            {
              LODWORD(v79) = 0;
            }
            v85 = v74 - v79;
            do
            {
              _H0 = *v76;
              __asm { FCVT            S0, H0 }
              *v75 = _S0;
              LOWORD(_S0) = v76[1];
              __asm { FCVT            S0, H0 }
              v75[1] = _S0;
              LOWORD(_S0) = v76[2];
              __asm { FCVT            S0, H0 }
              v75[2] = _S0;
              v76 += 4;
              v75 += 3;
              --v85;
            }
            while (v85);
          }
          ++v63;
          v62 += v64;
          v61 += v65;
        }
        while (v63 < v117);
      }
      *a3 = &off_250ADB778;
      sub_23970977C((uint64_t)&v105, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v106);
      goto LABEL_104;
    case 21:
      v105 = &off_250ADBEA0;
      sub_2396192A4((_DWORD *)(a1 + 56), v106);
      if (v117)
      {
        v6 = 0;
        v7 = *(_DWORD *)(a1 + 52);
        v8 = v115;
        do
        {
          v9 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(a1 + 72))
            _ZF = v9 == 0;
          else
            _ZF = 1;
          if (!_ZF)
          {
            v11 = *(_QWORD *)(a1 + 8);
            v12 = *(std::__shared_weak_count **)(a1 + 16);
            if (v12)
            {
              v13 = (unint64_t *)&v12->__shared_owners_;
              do
                v14 = __ldxr(v13);
              while (__stxr(v14 + 1, v13));
              do
                v15 = __ldaxr(v13);
              while (__stlxr(v15 - 1, v13));
              if (!v15)
              {
                ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
                std::__shared_weak_count::__release_weak(v12);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
            v9 = *(_QWORD *)(a1 + 24);
          }
          v16 = v108;
          if (v118)
            v17 = v108 == 0;
          else
            v17 = 1;
          if (!v17)
          {
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v106[0] + 88))(v106[0], 1, "unknown location");
            v16 = v108;
          }
          if (v116)
          {
            v18 = 0;
            v19 = (_BYTE *)(v16 + (v8 * v6));
            v20 = (__int16 *)(v9 + 2 * (v7 * v6));
            do
            {
              _H0 = *v20;
              __asm { FCVT            S0, H0 }
              *v19 = (int)(float)(_S0 * 255.0);
              LOWORD(_S0) = v20[1];
              __asm { FCVT            S0, H0 }
              v19[1] = (int)(float)(_S0 * 255.0);
              LOWORD(_S0) = v20[2];
              __asm { FCVT            S0, H0 }
              v19[2] = (int)(float)(_S0 * 255.0);
              ++v18;
              v20 += 4;
              v19 += 3;
            }
            while (v18 < v116);
          }
          ++v6;
        }
        while (v6 < v117);
      }
      *a3 = &off_250ADB778;
      sub_239709138((uint64_t)&v105, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v106);
LABEL_104:
      v93 = &v105;
      return nullsub_4(v93);
  }
  v101 = &off_250ADB210;
  sub_23970BF74(a1, (uint64_t)&v102);
  LOBYTE(v106[0]) = 0;
  v107 = 0;
  LOBYTE(v108) = 0;
  v109 = 0;
  v110 = 1;
  v111 = 0;
  sub_23988A34C((uint64_t)&v101, a2, (uint64_t)&v105, (uint64_t)a3);
  nullsub_4(&v104);
  v90 = v103;
  if (v103)
  {
    v91 = (unint64_t *)&v103->__shared_owners_;
    do
      v92 = __ldaxr(v91);
    while (__stlxr(v92 - 1, v91));
    if (!v92)
    {
      ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
      std::__shared_weak_count::__release_weak(v90);
    }
  }
  v93 = &v101;
  return nullsub_4(v93);
}

void sub_239706CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;
  uint64_t v27;

  j_nullsub_4_89(v27);
  sub_239416DA0(v26);
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239706CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  j_nullsub_4_89(v26);
  sub_239416DA0(a17);
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239706CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  j_nullsub_4_89(v26);
  sub_239416DA0(a9);
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239706D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239706D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239706D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239706D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239706D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

void sub_239706D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_239416DA0(a17);
  nullsub_4(&a26);
  _Unwind_Resume(a1);
}

uint64_t sub_239706DE4@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  float v6;
  unsigned int v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE *v21;
  unsigned int v22;
  unsigned int v23;
  unint64_t v24;
  int v25;
  int v26;
  float32x4_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  float *v38;
  unsigned __int16 *v39;
  uint64_t v40;
  uint16x8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint16x8_t v44;
  float32x4_t v45;
  float32x4_t v46;
  int v47;
  unsigned int v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  uint64_t (***v52)();
  float32x4_t v54;
  uint64_t (**v55)();
  uint64_t v56;
  std::__shared_weak_count *v57;
  uint64_t v58;
  uint64_t (**v59)();
  _QWORD v60[2];
  char v61;
  uint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  char v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  char v72;
  uint64_t v73;

  v73 = *MEMORY[0x24BDAC8D0];
  if (a2 == 4)
  {
    v59 = &off_250ADD920;
    sub_239709458((_DWORD *)(a1 + 32), v60);
    if (!v66)
    {
LABEL_61:
      *a3 = &off_250ADB778;
      sub_2397096A8((uint64_t)&v59, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v60);
LABEL_62:
      v52 = &v59;
      return nullsub_4(v52);
    }
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = *(_DWORD *)(a1 + 44);
    v26 = v67;
    v27 = (float32x4_t)vdupq_n_s32(0x37800080u);
    v54 = v27;
    while (1)
    {
      v28 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(a1 + 48))
        v29 = v28 == 0;
      else
        v29 = 1;
      if (!v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          p_shared_owners = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(p_shared_owners);
          while (__stxr(v33 + 1, p_shared_owners));
          do
            v34 = __ldaxr(p_shared_owners);
          while (__stlxr(v34 - 1, p_shared_owners));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "unknown location");
        v28 = *(_QWORD *)(a1 + 24);
        v27 = v54;
      }
      v35 = v62;
      if (v68)
        v36 = v62 == 0;
      else
        v36 = 1;
      if (!v36)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v60[0] + 88))(v60[0], 1, "unknown location");
        v35 = v62;
        v27 = v54;
      }
      v37 = v65;
      if (!v65)
        goto LABEL_28;
      v38 = (float *)(v35 + 4 * (v26 * v24));
      v39 = (unsigned __int16 *)(v28 + 2 * (v25 * v24));
      if (v65 >= 0x10)
      {
        v40 = v65 & 0xFFFFFFF0;
        v38 += v40;
        v39 += v40;
        v41 = (uint16x8_t *)(v28 + 2 * v23 + 16);
        v42 = v35 + 4 * v22 + 32;
        v43 = v40;
        do
        {
          v44 = v41[-1];
          v45 = vcvtq_f32_u32(vmovl_high_u16(*v41));
          v46 = vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v41->i8)), v27);
          *(float32x4_t *)(v42 - 32) = vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v44.i8)), v27);
          *(float32x4_t *)(v42 - 16) = vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v44)), v27);
          *(float32x4_t *)v42 = v46;
          *(float32x4_t *)(v42 + 16) = vmulq_f32(v45, v27);
          v42 += 64;
          v41 += 2;
          v43 -= 16;
        }
        while (v43);
        if (v40 == v37)
          goto LABEL_28;
      }
      else
      {
        LODWORD(v40) = 0;
      }
      v47 = v37 - v40;
      do
      {
        v48 = *v39++;
        *v38++ = (float)v48 * 0.000015259;
        --v47;
      }
      while (v47);
LABEL_28:
      ++v24;
      v23 += v25;
      v22 += v26;
      if (v24 >= v66)
        goto LABEL_61;
    }
  }
  if (a2 == 21)
  {
    v59 = &off_250ADBEA0;
    sub_2396192A4((_DWORD *)(a1 + 32), v60);
    if (v71)
    {
      v7 = 0;
      v8 = 0;
      v9 = *(_DWORD *)(a1 + 44);
      v10 = v69;
      do
      {
        v11 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 48))
          v12 = v11 == 0;
        else
          v12 = 1;
        if (!v12)
        {
          v13 = *(_QWORD *)(a1 + 8);
          v14 = *(std::__shared_weak_count **)(a1 + 16);
          if (v14)
          {
            v15 = (unint64_t *)&v14->__shared_owners_;
            do
              v16 = __ldxr(v15);
            while (__stxr(v16 + 1, v15));
            do
              v17 = __ldaxr(v15);
            while (__stlxr(v17 - 1, v15));
            if (!v17)
            {
              ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
              std::__shared_weak_count::__release_weak(v14);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v13 + 88))(v13, 0, "unknown location");
          v11 = *(_QWORD *)(a1 + 24);
        }
        v18 = v62;
        if (v72)
          v19 = v62 == 0;
        else
          v19 = 1;
        if (!v19)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v60[0] + 88))(v60[0], 1, "unknown location");
          v18 = v62;
        }
        if (v70)
        {
          v20 = 0;
          v21 = (_BYTE *)(v18 + (v10 * v8));
          do
          {
            LOWORD(v6) = *(_WORD *)(v11 + 2 * v7 + 2 * v20);
            v6 = (float)LODWORD(v6) * 0.0038911;
            *v21 = (int)v6;
            v21[1] = (int)v6;
            v21[2] = (int)v6;
            ++v20;
            v21 += 3;
          }
          while (v20 < v70);
        }
        ++v8;
        v7 += v9;
      }
      while (v8 < v71);
    }
    *a3 = &off_250ADB778;
    sub_239709138((uint64_t)&v59, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v60);
    goto LABEL_62;
  }
  v55 = &off_250ADB210;
  sub_23970C0EC(a1, (uint64_t)&v56);
  LOBYTE(v60[0]) = 0;
  v61 = 0;
  LOBYTE(v62) = 0;
  v63 = 0;
  v64 = 1;
  v65 = 0;
  sub_23988A34C((uint64_t)&v55, a2, (uint64_t)&v59, (uint64_t)a3);
  nullsub_4(&v58);
  v49 = v57;
  if (v57)
  {
    v50 = (unint64_t *)&v57->__shared_owners_;
    do
      v51 = __ldaxr(v50);
    while (__stlxr(v51 - 1, v50));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
  }
  v52 = &v55;
  return nullsub_4(v52);
}

void sub_2397072A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  j_nullsub_4_89(v12);
  sub_239416DA0(a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397072C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  uint64_t v13;
  va_list va;

  va_start(va, a12);
  j_nullsub_4_89(v12);
  sub_239416DA0(v13);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397072EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23970733C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0(a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970737C@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  unsigned int v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _BYTE *v20;
  float v25;
  unsigned int v26;
  unsigned int v27;
  unint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *p_shared_owners;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  __int16 *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  float16x4_t *v49;
  float32x4_t *v50;
  uint64_t v51;
  float16x8_t v52;
  float32x4_t v53;
  float32x4_t v54;
  int v55;
  __int16 v56;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  uint64_t (***v62)();
  uint64_t (**v64)();
  uint64_t v65;
  std::__shared_weak_count *v66;
  uint64_t v67;
  uint64_t (**v68)();
  _QWORD v69[2];
  char v70;
  uint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  char v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  char v81;
  uint64_t v82;

  v82 = *MEMORY[0x24BDAC8D0];
  if (a2 == 4)
  {
    v68 = &off_250ADD920;
    sub_239709458((_DWORD *)(a1 + 32), v69);
    if (!v75)
    {
LABEL_67:
      *a3 = &off_250ADB778;
      sub_2397096A8((uint64_t)&v68, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v69);
LABEL_68:
      v62 = &v68;
      return nullsub_4(v62);
    }
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = *(_DWORD *)(a1 + 44);
    v30 = v76;
    while (1)
    {
      v31 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(a1 + 48))
        v32 = v31 == 0;
      else
        v32 = 1;
      if (!v32)
      {
        v33 = *(_QWORD *)(a1 + 8);
        v34 = *(std::__shared_weak_count **)(a1 + 16);
        if (v34)
        {
          p_shared_owners = (unint64_t *)&v34->__shared_owners_;
          do
            v36 = __ldxr(p_shared_owners);
          while (__stxr(v36 + 1, p_shared_owners));
          do
            v37 = __ldaxr(p_shared_owners);
          while (__stlxr(v37 - 1, p_shared_owners));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
            std::__shared_weak_count::__release_weak(v34);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v33 + 88))(v33, 0, "unknown location");
        v31 = *(_QWORD *)(a1 + 24);
      }
      v38 = v71;
      if (v77)
        v39 = v71 == 0;
      else
        v39 = 1;
      if (!v39)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v69[0] + 88))(v69[0], 1, "unknown location");
        v38 = v71;
      }
      v40 = v74;
      if (!v74)
        goto LABEL_28;
      v41 = (v30 * v28);
      v42 = (v29 * v28);
      v43 = (_DWORD *)(v38 + 4 * v41);
      v44 = (__int16 *)(v31 + 2 * v42);
      if (v74 >= 0x10
        && ((v45 = v74 - 1, v46 = v38 + 4 * (v41 + v45) + 4, (unint64_t)v43 < v31 + 2 * (v42 + v45) + 2)
          ? (_CF = (unint64_t)v44 >= v46)
          : (_CF = 1),
            _CF))
      {
        v48 = v74 & 0xFFFFFFF0;
        v43 += v48;
        v44 += v48;
        v49 = (float16x4_t *)(v31 + 2 * v27 + 16);
        v50 = (float32x4_t *)(v38 + 4 * v26 + 32);
        v51 = v48;
        do
        {
          v52 = *(float16x8_t *)v49[-2].i8;
          v53 = vcvtq_f32_f16(*v49);
          v54 = vcvt_hight_f32_f16(*(float16x8_t *)v49->i8);
          v50[-2] = vcvtq_f32_f16(*(float16x4_t *)v52.i8);
          v50[-1] = vcvt_hight_f32_f16(v52);
          *v50 = v53;
          v50[1] = v54;
          v50 += 4;
          v49 += 4;
          v51 -= 16;
        }
        while (v51);
        if (v48 == v40)
          goto LABEL_28;
      }
      else
      {
        LODWORD(v48) = 0;
      }
      v55 = v40 - v48;
      do
      {
        v56 = *v44++;
        _H0 = v56;
        __asm { FCVT            S0, H0 }
        *v43++ = _S0;
        --v55;
      }
      while (v55);
LABEL_28:
      ++v28;
      v27 += v29;
      v26 += v30;
      if (v28 >= v75)
        goto LABEL_67;
    }
  }
  if (a2 == 21)
  {
    v68 = &off_250ADBEA0;
    sub_2396192A4((_DWORD *)(a1 + 32), v69);
    if (v80)
    {
      v6 = 0;
      v7 = 0;
      v8 = *(_DWORD *)(a1 + 44);
      v9 = v78;
      do
      {
        v10 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(a1 + 48))
          _ZF = v10 == 0;
        else
          _ZF = 1;
        if (!_ZF)
        {
          v12 = *(_QWORD *)(a1 + 8);
          v13 = *(std::__shared_weak_count **)(a1 + 16);
          if (v13)
          {
            v14 = (unint64_t *)&v13->__shared_owners_;
            do
              v15 = __ldxr(v14);
            while (__stxr(v15 + 1, v14));
            do
              v16 = __ldaxr(v14);
            while (__stlxr(v16 - 1, v14));
            if (!v16)
            {
              ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
              std::__shared_weak_count::__release_weak(v13);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
          v10 = *(_QWORD *)(a1 + 24);
        }
        v17 = v71;
        if (v81)
          v18 = v71 == 0;
        else
          v18 = 1;
        if (!v18)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v69[0] + 88))(v69[0], 1, "unknown location");
          v17 = v71;
        }
        if (v79)
        {
          v19 = 0;
          v20 = (_BYTE *)(v17 + (v9 * v7));
          do
          {
            _H0 = *(_WORD *)(v10 + 2 * v6 + 2 * v19);
            __asm { FCVT            S0, H0 }
            v25 = _S0 * 255.0;
            *v20 = (int)v25;
            v20[1] = (int)v25;
            v20[2] = (int)v25;
            ++v19;
            v20 += 3;
          }
          while (v19 < v79);
        }
        ++v7;
        v6 += v8;
      }
      while (v7 < v80);
    }
    *a3 = &off_250ADB778;
    sub_239709138((uint64_t)&v68, (uint64_t)(a3 + 1));
    sub_239416DA0((uint64_t)v69);
    goto LABEL_68;
  }
  v64 = &off_250ADB210;
  sub_2396467DC(a1, (uint64_t)&v65);
  LOBYTE(v69[0]) = 0;
  v70 = 0;
  LOBYTE(v71) = 0;
  v72 = 0;
  v73 = 1;
  v74 = 0;
  sub_23988A34C((uint64_t)&v64, a2, (uint64_t)&v68, (uint64_t)a3);
  nullsub_4(&v67);
  v59 = v66;
  if (v66)
  {
    v60 = (unint64_t *)&v66->__shared_owners_;
    do
      v61 = __ldaxr(v60);
    while (__stlxr(v61 - 1, v60));
    if (!v61)
    {
      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
      std::__shared_weak_count::__release_weak(v59);
    }
  }
  v62 = &v64;
  return nullsub_4(v62);
}

void sub_239707820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  j_nullsub_4_89(v10);
  sub_239416DA0(a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a10);
  j_nullsub_4_89(v10);
  sub_239416DA0(v11);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23970787C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397078A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397078B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_239416DA0(a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397078F8(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t *v9;
  unint64_t *v10;
  unint64_t *v11;
  unint64_t *v12;
  unint64_t *v13;
  unint64_t *v14;
  unint64_t *v15;
  unint64_t *v16;
  unint64_t *v17;
  unint64_t *v18;
  unint64_t *v19;
  unint64_t *v20;
  unint64_t *v21;
  unint64_t *v22;
  uint64_t (**v23)();
  _BYTE v24[8];
  std::__shared_weak_count *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  int v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  switch(*(_DWORD *)(a1 + 48))
  {
    case 1:
      v23 = &off_250ADB350;
      sub_2394949FC(a1, (uint64_t)v24);
      sub_239702010((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      p_shared_owners = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      break;
    case 2:
      v23 = &off_250AE3D30;
      sub_23970E070(a1, (uint64_t)v24);
      sub_239706DE4((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v8 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v8);
      while (__stlxr(v7 - 1, v8));
      break;
    case 3:
      v23 = &off_250AE1C58;
      sub_23964D014(a1, (uint64_t)v24);
      sub_23970737C((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v9 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v9);
      while (__stlxr(v7 - 1, v9));
      break;
    case 4:
      v23 = &off_250ADED08;
      sub_23964D668(a1, (uint64_t)v24);
      sub_239702CC4((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v10 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v10);
      while (__stlxr(v7 - 1, v10));
      break;
    case 0x11:
      v23 = &off_250AE3C30;
      sub_23970C364(a1, (uint64_t)v24);
      sub_2396FF160((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v11 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v11);
      while (__stlxr(v7 - 1, v11));
      break;
    case 0x15:
      v23 = &off_250ADB468;
      sub_239494110(a1, (uint64_t)v24);
      sub_2396FF4F4((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v12 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v12);
      while (__stlxr(v7 - 1, v12));
      break;
    case 0x16:
      v23 = &off_250AE3D70;
      sub_23970E7C4(a1, (uint64_t)v24);
      sub_23970534C((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v13 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v13);
      while (__stlxr(v7 - 1, v13));
      break;
    case 0x17:
      v23 = &off_250AE3DF0;
      sub_23970F74C(a1, (uint64_t)v24);
      sub_23970593C((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v14 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v14);
      while (__stlxr(v7 - 1, v14));
      break;
    case 0x18:
      v23 = &off_250AE3CF0;
      sub_23970D954(a1, (uint64_t)v24);
      sub_2397012B4((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v15 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v15);
      while (__stlxr(v7 - 1, v15));
      break;
    case 0x19:
      v23 = &off_250AE1B60;
      sub_23964DC14(a1, (uint64_t)v24);
      sub_239704ED0((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v16 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v16);
      while (__stlxr(v7 - 1, v16));
      break;
    case 0x1D:
      v23 = &off_250AE1A68;
      sub_23964E998(a1, (uint64_t)v24);
      sub_2397038C0((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v17 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v17);
      while (__stlxr(v7 - 1, v17));
      break;
    case 0x1E:
      v23 = &off_250AE3DB0;
      sub_23970EF88(a1, (uint64_t)v24);
      sub_239705F00((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v18 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v18);
      while (__stlxr(v7 - 1, v18));
      break;
    case 0x1F:
      v23 = &off_250AE3E30;
      sub_23970FE68(a1, (uint64_t)v24);
      sub_2397064F0((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v19 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v19);
      while (__stlxr(v7 - 1, v19));
      break;
    case 0x20:
      v23 = &off_250AE2038;
      sub_23964EFB0(a1, (uint64_t)v24);
      sub_239703D3C((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v20 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v20);
      while (__stlxr(v7 - 1, v20));
      break;
    case 0x21:
      v23 = &off_250AE3CB0;
      sub_23970D194(a1, (uint64_t)v24);
      sub_239704A54((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v21 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v21);
      while (__stlxr(v7 - 1, v21));
      break;
    case 0x25:
      v23 = &off_250AE3C70;
      sub_23970CA7C(a1, (uint64_t)v24);
      sub_2397045D8((uint64_t)&v23, a2, a3);
      v5 = v25;
      if (!v25)
        goto LABEL_67;
      v22 = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(v22);
      while (__stlxr(v7 - 1, v22));
      break;
    default:
      v24[0] = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 1;
      v30 = 0;
      sub_23988A34C(a1, a2, (uint64_t)&v23, (uint64_t)a3);
      return;
  }
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_67:
  nullsub_4(&v23);
}

void sub_239707E48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239708130((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707E5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707E70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239708198((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707E84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707E98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2396440AC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707EAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707EC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239708408((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707ED4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707EE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239708338((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707EFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707F10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643CCC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707F24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707F38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643D34((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707F4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707F60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239708200((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707F74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707F88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397083A0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707F9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707FB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397082D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707FC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239707FD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2394183B0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239707FEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239708000(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397080C8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239708014(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239708028(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23957E154((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23970803C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239708050(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643D9C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239708064(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239708078(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239708268((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23970808C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397080A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2394176A0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397080B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2397080C8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

double sub_239708130(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

double sub_239708198(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

double sub_239708200(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

double sub_239708268(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

double sub_2397082D0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

double sub_239708338(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

double sub_2397083A0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

double sub_239708408(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_239708470@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2397086BC(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE39C8;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239827210((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_2398159A4(result);
    return MEMORY[0x23B83E31C](v12, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_239708584(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397087BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239708598(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_2397087BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397085BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_2397087BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397085D8(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239708614()
{
  return 17;
}

uint64_t sub_23970861C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_239708624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_239708640(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_2397086BC@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE3928;
  sub_239821560(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3948;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_2398159A4((uint64_t)v5);
}

void sub_239708778(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398159A4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397087A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398159A4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2397087BC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_2398159A4(v2);
    MEMORY[0x23B83E31C](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_239708804()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239708818()
{
  return 17;
}

__int128 *sub_239708824()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931120);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931120))
  {
    v2 = sub_2397088FC();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931108, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256931118 = *((_QWORD *)v2 + 2);
      xmmword_256931108 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931108, &dword_23940C000);
    __cxa_guard_release(&qword_256931120);
  }
  if (byte_25693111F >= 0)
    return &xmmword_256931108;
  else
    return (__int128 *)xmmword_256931108;
}

void sub_2397088E4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931120);
  _Unwind_Resume(a1);
}

__int128 *sub_2397088FC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931140);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931140))
    return &xmmword_256931128;
  v2 = sub_2397089D8();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931128, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931138 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931128 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931128, &dword_23940C000);
  __cxa_guard_release(&qword_256931140);
  return &xmmword_256931128;
}

void sub_2397089C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931140);
  _Unwind_Resume(a1);
}

std::string *sub_2397089D8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931160);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931160))
    return &stru_256931148;
  sub_239708C78((uint64_t)__p);
  sub_239708AC8((uint64_t)__p, &stru_256931148);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931148, &dword_23940C000);
  __cxa_guard_release(&qword_256931160);
  return &stru_256931148;
}

void sub_239708A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931160);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931160);
  _Unwind_Resume(a1);
}

void sub_239708AC8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256931180);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931180))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr8u]", &xmmword_256931168);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931168, &dword_23940C000);
    __cxa_guard_release(&qword_256931180);
  }
  if (byte_25693117F < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256931168, *((unint64_t *)&xmmword_256931168 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256931168;
    v13 = unk_256931178;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239708C30(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931180);
  _Unwind_Resume(a1);
}

void sub_239708C4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239708C78(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569311A0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569311A0))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Bgr8u>]", qword_256931188);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931188, &dword_23940C000);
    __cxa_guard_release(&qword_2569311A0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569311C0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569311C0))
  {
    v5 = sub_239423A18(qword_256931188, "<", 0);
    sub_239423914(qword_256931188, 0, v5, qword_2569311A8);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569311A8, &dword_23940C000);
    __cxa_guard_release(&qword_2569311C0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569311E0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569311E0))
  {
    sub_239A44118((std::string::size_type)qword_2569311A8, (std::string *)&xmmword_2569311C8);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569311C8, &dword_23940C000);
    __cxa_guard_release(&qword_2569311E0);
  }
  if (byte_2569311DF < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_2569311C8, *((unint64_t *)&xmmword_2569311C8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2569311C8;
    *(_QWORD *)(a1 + 16) = unk_2569311D8;
  }
}

void sub_239708E14(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569311E0);
  _Unwind_Resume(a1);
}

void sub_239708E2C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569311C0);
  _Unwind_Resume(a1);
}

void sub_239708E44(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569311A0);
  _Unwind_Resume(a1);
}

__int128 *sub_239708E5C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931180);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931180))
    return &xmmword_256931168;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr8u]", &xmmword_256931168);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931168, &dword_23940C000);
  __cxa_guard_release(&qword_256931180);
  return &xmmword_256931168;
}

void sub_239708EEC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931180);
  _Unwind_Resume(a1);
}

void sub_239708F08(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239708F2C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_2398159A4(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

void sub_239708F64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count_vtbl *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count_vtbl *v12;
  _QWORD *v13;
  uint64_t v14;
  __int16 v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count_vtbl *v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  std::__shared_weak_count_vtbl *v26;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v5 + 32))(&v26, v5);
  v10 = v26;
  if (v26)
  {
    v11 = (std::__shared_weak_count *)operator new();
    v12 = v26;
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = v12;
  }
  else
  {
    v11 = 0;
  }
  v22 = v10;
  v23 = v11;
  v24 = 0;
  v25 = 0;
  v13 = (_QWORD *)sub_2397A9F50(v4);
  if ((*v13 & 0xFF00000000) != 0)
    v14 = *v13 | 0x100000000;
  else
    v14 = 0;
  v15 = *(_WORD *)(a1 + 128);
  sub_2398277C4(a2, &v22, v14);
  *(_WORD *)(a2 + 120) = v15;
  v16 = v23;
  if (v23)
  {
    v17 = (unint64_t *)&v23->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = v25;
  if (v25)
  {
    v20 = (unint64_t *)&v25->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
}

void sub_2397090F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14)
    (*(void (**)(uint64_t))(*(_QWORD *)a14 + 8))(a14);
  _Unwind_Resume(exception_object);
}

void sub_23970911C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_239709138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826490(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 21;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_2397091EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_23970920C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v20 = v5;
  v21 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v18, 3, a1 + 32, 3, a1 + 44, 1);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 72);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldxr(v10);
    while (__stxr(v12 + 1, v10));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 17;
  *(_WORD *)(a2 + 44) = v9;
  if (v4)
  {
    v13 = (unint64_t *)&v4->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v18);
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_239709354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239709368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_239709384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826490(v4);
  sub_2398EB464((uint64_t)&v14, 2, a1 + 64, 2, a1 + 72, 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 80);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 1;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_239709438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_239709458@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2397095C0(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADDB68;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239826870((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[36] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239810708(result);
    return MEMORY[0x23B83E31C](v12, 0x1091C406A8758A4);
  }
  return result;
}

void sub_23970956C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239546BA8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239709580(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239546BA8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397095A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239546BA8((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397095C0@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250ADDAC8;
  sub_23981ED40(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADDAE8;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  return sub_239810708((uint64_t)v5);
}

void sub_239709664(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239810708((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239709694(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810708((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397096A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826920(v4);
  sub_2398EB464((uint64_t)&v14, 2, a1 + 64, 2, a1 + 72, 4);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 80);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 4;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_23970975C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_23970977C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826920(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 4);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 24;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_239709830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_239709850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826490(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 29;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_239709904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_239709924@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_239709B70(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3AE0;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_23982866C((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_23981CE44(result);
    return MEMORY[0x23B83E31C](v12, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_239709A38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239709C70((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239709A4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239709C70((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239709A70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239709C70((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239709A8C(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239709AC8()
{
  return 37;
}

uint64_t sub_239709AD0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_239709AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_239709AF4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_239709B70@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE3A40;
  sub_2398256C8(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3A60;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981CE44((uint64_t)v5);
}

void sub_239709C2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981CE44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239709C5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981CE44((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_239709C70(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_23981CE44(v2);
    MEMORY[0x23B83E31C](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_239709CB8()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239709CCC()
{
  return 37;
}

__int128 *sub_239709CD8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931200);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931200))
  {
    v2 = sub_239709DB0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569311E8, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569311F8 = *((_QWORD *)v2 + 2);
      xmmword_2569311E8 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569311E8, &dword_23940C000);
    __cxa_guard_release(&qword_256931200);
  }
  if (byte_2569311FF >= 0)
    return &xmmword_2569311E8;
  else
    return (__int128 *)xmmword_2569311E8;
}

void sub_239709D98(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931200);
  _Unwind_Resume(a1);
}

__int128 *sub_239709DB0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931220);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931220))
    return &xmmword_256931208;
  v2 = sub_239709E8C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931208, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931218 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931208 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931208, &dword_23940C000);
  __cxa_guard_release(&qword_256931220);
  return &xmmword_256931208;
}

void sub_239709E74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931220);
  _Unwind_Resume(a1);
}

std::string *sub_239709E8C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931240);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931240))
    return &stru_256931228;
  sub_23970A12C((uint64_t)__p);
  sub_239709F7C((uint64_t)__p, &stru_256931228);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931228, &dword_23940C000);
  __cxa_guard_release(&qword_256931240);
  return &stru_256931228;
}

void sub_239709F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931240);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931240);
  _Unwind_Resume(a1);
}

void sub_239709F7C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256931260);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931260))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb8u]", &xmmword_256931248);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931248, &dword_23940C000);
    __cxa_guard_release(&qword_256931260);
  }
  if (byte_25693125F < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256931248, *((unint64_t *)&xmmword_256931248 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256931248;
    v13 = unk_256931258;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_23970A0E4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931260);
  _Unwind_Resume(a1);
}

void sub_23970A100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_23970A12C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931280);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931280))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Argb8u>]", qword_256931268);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931268, &dword_23940C000);
    __cxa_guard_release(&qword_256931280);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569312A0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569312A0))
  {
    v5 = sub_239423A18(qword_256931268, "<", 0);
    sub_239423914(qword_256931268, 0, v5, qword_256931288);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931288, &dword_23940C000);
    __cxa_guard_release(&qword_2569312A0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569312C0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569312C0))
  {
    sub_239A44118((std::string::size_type)qword_256931288, (std::string *)&xmmword_2569312A8);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569312A8, &dword_23940C000);
    __cxa_guard_release(&qword_2569312C0);
  }
  if (byte_2569312BF < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_2569312A8, *((unint64_t *)&xmmword_2569312A8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2569312A8;
    *(_QWORD *)(a1 + 16) = unk_2569312B8;
  }
}

void sub_23970A2C8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569312C0);
  _Unwind_Resume(a1);
}

void sub_23970A2E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569312A0);
  _Unwind_Resume(a1);
}

void sub_23970A2F8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931280);
  _Unwind_Resume(a1);
}

__int128 *sub_23970A310()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931260);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931260))
    return &xmmword_256931248;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb8u]", &xmmword_256931248);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931248, &dword_23940C000);
  __cxa_guard_release(&qword_256931260);
  return &xmmword_256931248;
}

void sub_23970A3A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931260);
  _Unwind_Resume(a1);
}

void sub_23970A3BC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970A3E0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_23981CE44(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23970A418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826490(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 37;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_23970A4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_23970A4EC@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_23970A738(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3BF8;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239827D9C((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_2398187B4(result);
    return MEMORY[0x23B83E31C](v12, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_23970A600(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23970A838((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23970A614(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23970A838((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23970A638(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23970A838((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23970A654(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970A690()
{
  return 25;
}

uint64_t sub_23970A698(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_23970A6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

uint64_t sub_23970A6BC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_23970A738@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE3B58;
  sub_239823148(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3B78;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_2398187B4((uint64_t)v5);
}

void sub_23970A7F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398187B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23970A824(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398187B4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_23970A838(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_2398187B4(v2);
    MEMORY[0x23B83E31C](v3, 0x1091C40A44A61E0);
  }
  return a1;
}

void sub_23970A880()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970A894()
{
  return 25;
}

__int128 *sub_23970A8A0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569312E0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569312E0))
  {
    v2 = sub_23970A978();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569312C8, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569312D8 = *((_QWORD *)v2 + 2);
      xmmword_2569312C8 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569312C8, &dword_23940C000);
    __cxa_guard_release(&qword_2569312E0);
  }
  if (byte_2569312DF >= 0)
    return &xmmword_2569312C8;
  else
    return (__int128 *)xmmword_2569312C8;
}

void sub_23970A960(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569312E0);
  _Unwind_Resume(a1);
}

__int128 *sub_23970A978()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931300);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931300))
    return &xmmword_2569312E8;
  v2 = sub_23970AA54();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_2569312E8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569312F8 = v2->__r_.__value_.__r.__words[2];
    xmmword_2569312E8 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569312E8, &dword_23940C000);
  __cxa_guard_release(&qword_256931300);
  return &xmmword_2569312E8;
}

void sub_23970AA3C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931300);
  _Unwind_Resume(a1);
}

std::string *sub_23970AA54()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931320);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931320))
    return &stru_256931308;
  sub_23970ACF4((uint64_t)__p);
  sub_23970AB44((uint64_t)__p, &stru_256931308);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931308, &dword_23940C000);
  __cxa_guard_release(&qword_256931320);
  return &stru_256931308;
}

void sub_23970AB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256931320);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256931320);
  _Unwind_Resume(a1);
}

void sub_23970AB44(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256930FA0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256930FA0))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra8u]", &xmmword_256930F88);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256930F88, &dword_23940C000);
    __cxa_guard_release(&qword_256930FA0);
  }
  if (byte_256930F9F < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256930F88, *((unint64_t *)&xmmword_256930F88 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256930F88;
    v13 = unk_256930F98;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_23970ACAC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256930FA0);
  _Unwind_Resume(a1);
}

void sub_23970ACC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_23970ACF4(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256931340);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256931340))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Bgra8u>]", qword_256931328);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931328, &dword_23940C000);
    __cxa_guard_release(&qword_256931340);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931360);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931360))
  {
    v5 = sub_239423A18(qword_256931328, "<", 0);
    sub_239423914(qword_256931328, 0, v5, qword_256931348);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256931348, &dword_23940C000);
    __cxa_guard_release(&qword_256931360);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931380);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931380))
  {
    sub_239A44118((std::string::size_type)qword_256931348, (std::string *)&xmmword_256931368);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931368, &dword_23940C000);
    __cxa_guard_release(&qword_256931380);
  }
  if (byte_25693137F < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931368, *((unint64_t *)&xmmword_256931368 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931368;
    *(_QWORD *)(a1 + 16) = unk_256931378;
  }
}

void sub_23970AE90(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931380);
  _Unwind_Resume(a1);
}

void sub_23970AEA8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931360);
  _Unwind_Resume(a1);
}

void sub_23970AEC0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931340);
  _Unwind_Resume(a1);
}

void sub_23970AEDC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970AF00(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_2398187B4(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23970AF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826490(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 25;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_23970AFEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_23970B00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826490(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 17;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_23970B0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_23970B0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_23982655C(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 31;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_23970B194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_23970B1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 8;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v16 = v5;
  v17 = v6;
  v18 = 0;
  v19 = 0;
  v9 = sub_239826920(v4);
  sub_2398EB464((uint64_t)&v14, 3, a1 + 88, 3, a1 + 100, 4);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  v12 = v14;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 32;
  *(_WORD *)(a2 + 52) = v11;
  return nullsub_4(&v14);
}

void sub_23970B268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_23970B288(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v20 = v5;
  v21 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v18, 3, a1 + 32, 3, a1 + 44, 1);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 72);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldxr(v10);
    while (__stxr(v12 + 1, v10));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 21;
  *(_WORD *)(a2 + 44) = v9;
  if (v4)
  {
    v13 = (unint64_t *)&v4->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v18);
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_23970B3D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23970B3E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v20 = v5;
  v21 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v18, 3, a1 + 32, 3, a1 + 44, 4);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 72);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldxr(v10);
    while (__stxr(v12 + 1, v10));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 24;
  *(_WORD *)(a2 + 44) = v9;
  if (v4)
  {
    v13 = (unint64_t *)&v4->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v18);
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_23970B52C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970B540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

_DWORD *sub_23970B55C(_DWORD *result, _QWORD *a2, _DWORD *a3, _BYTE *a4)
{
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  *a2 = a3;
  a2[2] = a4;
  if (result[5])
  {
    v4 = 0;
    do
    {
      *a2 = a3;
      a2[2] = a4;
      if (!a3)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v5 = *a3 >> 8;
      v6 = HIWORD(*a3);
      *a4 = *a3;
      *(_BYTE *)(a2[2] + 1) = v5;
      *(_BYTE *)(a2[2] + 2) = v6;
      a3 = (_DWORD *)((char *)a3 + result[6]);
      a4 += result[7];
      ++v4;
    }
    while (v4 < result[5]);
    *a2 = a3;
    a2[2] = a4;
  }
  else
  {
    *a2 = a3;
    a2[2] = a4;
    if (!a3)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v7 = *a3 >> 8;
  v8 = HIWORD(*a3);
  *a4 = *a3;
  *(_BYTE *)(a2[2] + 1) = v7;
  *(_BYTE *)(a2[2] + 2) = v8;
  return result;
}

_DWORD *sub_23970B608(_DWORD *result, _QWORD *a2, _DWORD *a3, _BYTE *a4)
{
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  *a2 = a3;
  a2[2] = a4;
  if (result[5])
  {
    v4 = 0;
    do
    {
      *a2 = a3;
      a2[2] = a4;
      if (!a3)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v5 = HIWORD(*a3);
      v6 = HIBYTE(*a3);
      *a4 = BYTE1(*a3);
      *(_BYTE *)(a2[2] + 1) = v5;
      *(_BYTE *)(a2[2] + 2) = v6;
      a3 = (_DWORD *)((char *)a3 + result[6]);
      a4 += result[7];
      ++v4;
    }
    while (v4 < result[5]);
    *a2 = a3;
    a2[2] = a4;
  }
  else
  {
    *a2 = a3;
    a2[2] = a4;
    if (!a3)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v7 = HIWORD(*a3);
  v8 = HIBYTE(*a3);
  *a4 = BYTE1(*a3);
  *(_BYTE *)(a2[2] + 1) = v7;
  *(_BYTE *)(a2[2] + 2) = v8;
  return result;
}

void sub_23970B6BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v20 = v5;
  v21 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v18, 3, a1 + 32, 3, a1 + 44, 1);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 72);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldxr(v10);
    while (__stxr(v12 + 1, v10));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 37;
  *(_WORD *)(a2 + 44) = v9;
  if (v4)
  {
    v13 = (unint64_t *)&v4->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v18);
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_23970B804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970B818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

_DWORD *sub_23970B834(_DWORD *result, _QWORD *a2, _DWORD *a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  *a2 = a3;
  a2[2] = a4;
  if (result[5])
  {
    v4 = 0;
    do
    {
      *a2 = a3;
      a2[2] = a4;
      if (!a3)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v5 = HIWORD(*a3);
      v6 = HIBYTE(*a3);
      *(_BYTE *)(a4 + 2) = BYTE1(*a3);
      *(_BYTE *)(a2[2] + 1) = v5;
      *(_BYTE *)a2[2] = v6;
      a3 = (_DWORD *)((char *)a3 + result[6]);
      a4 += result[7];
      ++v4;
    }
    while (v4 < result[5]);
    *a2 = a3;
    a2[2] = a4;
  }
  else
  {
    *a2 = a3;
    a2[2] = a4;
    if (!a3)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v7 = HIWORD(*a3);
  v8 = HIBYTE(*a3);
  *(_BYTE *)(a4 + 2) = BYTE1(*a3);
  *(_BYTE *)(a2[2] + 1) = v7;
  *(_BYTE *)a2[2] = v8;
  return result;
}

void sub_23970B8E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v20 = v5;
  v21 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v18, 3, a1 + 32, 3, a1 + 44, 1);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 72);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldxr(v10);
    while (__stxr(v12 + 1, v10));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 33;
  *(_WORD *)(a2 + 44) = v9;
  if (v4)
  {
    v13 = (unint64_t *)&v4->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v18);
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_23970BA30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970BA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

_DWORD *sub_23970BA60(_DWORD *result, _QWORD *a2, _DWORD *a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  *a2 = a3;
  a2[2] = a4;
  if (result[5])
  {
    v4 = 0;
    do
    {
      *a2 = a3;
      a2[2] = a4;
      if (!a3)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      v5 = *a3 >> 8;
      v6 = HIWORD(*a3);
      *(_BYTE *)(a4 + 2) = *a3;
      *(_BYTE *)(a2[2] + 1) = v5;
      *(_BYTE *)a2[2] = v6;
      a3 = (_DWORD *)((char *)a3 + result[6]);
      a4 += result[7];
      ++v4;
    }
    while (v4 < result[5]);
    *a2 = a3;
    a2[2] = a4;
  }
  else
  {
    *a2 = a3;
    a2[2] = a4;
    if (!a3)
      sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  }
  v7 = *a3 >> 8;
  v8 = HIWORD(*a3);
  *(_BYTE *)(a4 + 2) = *a3;
  *(_BYTE *)(a2[2] + 1) = v7;
  *(_BYTE *)a2[2] = v8;
  return result;
}

void sub_23970BB0C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v20 = v5;
  v21 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v18, 3, a1 + 32, 3, a1 + 44, 2);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 72);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldxr(v10);
    while (__stxr(v12 + 1, v10));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 22;
  *(_WORD *)(a2 + 44) = v9;
  if (v4)
  {
    v13 = (unint64_t *)&v4->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v18);
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_23970BC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970BC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

void sub_23970BC84(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v20 = v5;
  v21 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v18, 3, a1 + 32, 3, a1 + 44, 2);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 72);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldxr(v10);
    while (__stxr(v12 + 1, v10));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 23;
  *(_WORD *)(a2 + 44) = v9;
  if (v4)
  {
    v13 = (unint64_t *)&v4->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v18);
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_23970BDCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970BDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

void sub_23970BDFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v20 = v5;
  v21 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v18, 3, a1 + 32, 3, a1 + 44, 2);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 72);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldxr(v10);
    while (__stxr(v12 + 1, v10));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 30;
  *(_WORD *)(a2 + 44) = v9;
  if (v4)
  {
    v13 = (unint64_t *)&v4->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v18);
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_23970BF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970BF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

void sub_23970BF74(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v20 = v5;
  v21 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v18, 3, a1 + 32, 3, a1 + 44, 2);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 72);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldxr(v10);
    while (__stxr(v12 + 1, v10));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 31;
  *(_WORD *)(a2 + 44) = v9;
  if (v4)
  {
    v13 = (unint64_t *)&v4->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v18);
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_23970C0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970C0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

void sub_23970C0EC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  std::__shared_weak_count *v21;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v20 = v5;
  v21 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_2398EB464((uint64_t)&v18, 2, a1 + 32, 2, a1 + 40, 2);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 48);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldxr(v10);
    while (__stxr(v12 + 1, v10));
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = 2;
  *(_WORD *)(a2 + 44) = v9;
  if (v4)
  {
    v13 = (unint64_t *)&v4->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  nullsub_4(&v18);
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_23970C234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23970C248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

void sub_23970C264(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970C2D0()
{
  return 17;
}

uint64_t sub_23970C2D8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23970C2E0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23970C364(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 17)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23970C630(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v15;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * (_DWORD)v18 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23970C5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23970C630(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23970C6A8();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23970C6A8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569313A0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569313A0))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_239708E5C();
    sub_23970C8AC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23970C8AC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931388, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931388, &dword_23940C000);
          __cxa_guard_release(&qword_2569313A0);
          return &stru_256931388;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931388;
}

void sub_23970C7F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569313A0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569313A0);
  _Unwind_Resume(a1);
}

void sub_23970C8AC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23970C940(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_23970C97C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970C9E8()
{
  return 37;
}

uint64_t sub_23970C9F0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23970C9F8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23970CA7C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 37)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23970CD48(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23970CCFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23970CD48(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23970CDC0();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23970CDC0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569313C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569313C0))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_23970A310();
    sub_23970CFC4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23970CFC4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569313A8, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569313A8, &dword_23940C000);
          __cxa_guard_release(&qword_2569313C0);
          return &stru_2569313A8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569313A8;
}

void sub_23970CF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569313C0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569313C0);
  _Unwind_Resume(a1);
}

void sub_23970CFC4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23970D058(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_23970D094(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970D100()
{
  return 33;
}

uint64_t sub_23970D108(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23970D110(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23970D194(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 33)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23970D460(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23970D414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23970D460(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23970D4D8();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23970D4D8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569313E0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569313E0))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_23970D7AC();
    sub_23970D6DC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23970D6DC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569313C8, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569313C8, &dword_23940C000);
          __cxa_guard_release(&qword_2569313E0);
          return &stru_2569313C8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569313C8;
}

void sub_23970D628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569313E0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569313E0);
  _Unwind_Resume(a1);
}

void sub_23970D6DC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23970D770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_23970D7AC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931400);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931400))
    return &xmmword_2569313E8;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr8u]", &xmmword_2569313E8);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569313E8, &dword_23940C000);
  __cxa_guard_release(&qword_256931400);
  return &xmmword_2569313E8;
}

void sub_23970D83C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931400);
  _Unwind_Resume(a1);
}

void sub_23970D854(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970D8C0()
{
  return 24;
}

uint64_t sub_23970D8C8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23970D8D0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23970D954(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 24)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23970DC24(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23970DBD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23970DC24(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23970DC9C();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23970DC9C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931420);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931420))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_239609A98();
    sub_23970DEA0((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23970DEA0((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931408, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931408, &dword_23940C000);
          __cxa_guard_release(&qword_256931420);
          return &stru_256931408;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931408;
}

void sub_23970DDEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931420);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931420);
  _Unwind_Resume(a1);
}

void sub_23970DEA0(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23970DF34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_23970DF70(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970DFDC()
{
  return 2;
}

uint64_t sub_23970DFE4(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_23970DFEC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23970E070(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _BOOL8 v11;
  _BOOL4 v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int16 v18;
  std::__shared_weak_count *size;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::logic_error *exception;
  std::string v24;

  if (*(_DWORD *)(a1 + 48) != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23970E2D0(a1, &v24);
    std::logic_error::logic_error(exception, &v24);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v24.__r_.__value_.__r.__words[0] = v4;
      v24.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_DWORD *)(a1 + 24);
  v11 = v10 != 0;
  v12 = v10 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v12 = 1;
  v13 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v14 = !v12;
  if (v12)
    v13 = 0;
  v15 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v15 = 0;
  if (HIDWORD(v15) * HIDWORD(v13) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v16 = *(_QWORD *)(a1 + 40);
  v17 = v13 | v11;
  v18 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v24.__r_.__value_.__l.__size_;
  if (v24.__r_.__value_.__l.__size_)
  {
    v20 = (unint64_t *)(v24.__r_.__value_.__l.__size_ + 8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    *(_QWORD *)a2 = v24.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_WORD *)(a2 + 40) = v18;
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v24.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_WORD *)(a2 + 40) = v18;
  }
}

void sub_23970E284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_23970E2D0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23970E348();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23970E348()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931440);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931440))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_23970E61C();
    sub_23970E54C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23970E54C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931428, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931428, &dword_23940C000);
          __cxa_guard_release(&qword_256931440);
          return &stru_256931428;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931428;
}

void sub_23970E498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931440);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931440);
  _Unwind_Resume(a1);
}

void sub_23970E54C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23970E5E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_23970E61C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931460);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931460))
    return &xmmword_256931448;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray16u]", &xmmword_256931448);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931448, &dword_23940C000);
  __cxa_guard_release(&qword_256931460);
  return &xmmword_256931448;
}

void sub_23970E6AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931460);
  _Unwind_Resume(a1);
}

void sub_23970E6C4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970E730()
{
  return 22;
}

uint64_t sub_23970E738(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23970E740(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23970E7C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 22)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23970EA94(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23970EA48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23970EA94(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23970EB0C();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23970EB0C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931480);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931480))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_23970EDE0();
    sub_23970ED10((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23970ED10((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931468, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931468, &dword_23940C000);
          __cxa_guard_release(&qword_256931480);
          return &stru_256931468;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931468;
}

void sub_23970EC5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931480);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931480);
  _Unwind_Resume(a1);
}

void sub_23970ED10(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23970EDA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_23970EDE0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569314A0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569314A0))
    return &xmmword_256931488;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb16u]", &xmmword_256931488);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931488, &dword_23940C000);
  __cxa_guard_release(&qword_2569314A0);
  return &xmmword_256931488;
}

void sub_23970EE70(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569314A0);
  _Unwind_Resume(a1);
}

void sub_23970EE88(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970EEF4()
{
  return 30;
}

uint64_t sub_23970EEFC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23970EF04(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23970EF88(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 30)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23970F258(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23970F20C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23970F258(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23970F2D0();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23970F2D0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569314C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569314C0))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_23970F5A4();
    sub_23970F4D4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23970F4D4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569314A8, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569314A8, &dword_23940C000);
          __cxa_guard_release(&qword_2569314C0);
          return &stru_2569314A8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569314A8;
}

void sub_23970F420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569314C0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569314C0);
  _Unwind_Resume(a1);
}

void sub_23970F4D4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23970F568(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_23970F5A4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569314E0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569314E0))
    return &xmmword_2569314C8;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba16u]", &xmmword_2569314C8);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569314C8, &dword_23940C000);
  __cxa_guard_release(&qword_2569314E0);
  return &xmmword_2569314C8;
}

void sub_23970F634(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569314E0);
  _Unwind_Resume(a1);
}

void sub_23970F64C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970F6B8()
{
  return 23;
}

uint64_t sub_23970F6C0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23970F6C8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23970F74C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 23)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23970FA1C(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23970F9D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23970FA1C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23970FA94();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23970FA94()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931500);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931500))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2396277D4();
    sub_23970FC98((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23970FC98((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569314E8, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569314E8, &dword_23940C000);
          __cxa_guard_release(&qword_256931500);
          return &stru_2569314E8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569314E8;
}

void sub_23970FBE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931500);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931500);
  _Unwind_Resume(a1);
}

void sub_23970FC98(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23970FD2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_23970FD68(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23970FDD4()
{
  return 31;
}

uint64_t sub_23970FDDC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23970FDE4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23970FE68(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 31)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239710138(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397100EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_239710138(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397101B0();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397101B0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931520);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931520))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2396270A0();
    sub_2397103B4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397103B4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931508, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931508, &dword_23940C000);
          __cxa_guard_release(&qword_256931520);
          return &stru_256931508;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931508;
}

void sub_239710300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931520);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931520);
  _Unwind_Resume(a1);
}

void sub_2397103B4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239710448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239710484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::mutex *v6;
  uint64_t v7;

  v6 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  v7 = sub_239769398((OpaqueVTPixelTransferSession **)a1, a2, a3);
  std::mutex::unlock(v6);
  return v7;
}

void sub_2397104DC(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

float32x2_t sub_2397104F0@<D0>(uint32x2_t *a1@<X0>, float32x2_t *a2@<X1>, float32x2_t *a3@<X8>)
{
  float32x2_t v3;
  float32x2_t result;

  v3 = vcvt_f32_u32(*a1);
  result = vdiv_f32(vcvt_f32_u32((uint32x2_t)(*(_QWORD *)&vcvt_u32_f32(vmul_f32(*a2, v3)) & 0xFFFFFFFEFFFFFFFELL)), v3);
  *a3 = result;
  return result;
}

uint64_t sub_239710518(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, unsigned __int8 a6)
{
  if (a3 == 1)
    return sub_239710540(a1, a2, a4, a5, a6);
  else
    return sub_239710AC0(a1, a2, a4, a5, a6);
}

uint64_t sub_239710540(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned __int8 a5)
{
  BOOL v5;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  unint64_t v39;
  _BYTE *v40;
  unint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _BYTE *v54;
  unint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  unint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t result;
  uint64_t v62;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;

  if (*(_DWORD *)(a1 + 56))
    v5 = *(_DWORD *)(a1 + 60) == 0;
  else
    v5 = 1;
  if (v5)
    sub_239EC1E50(a1, a2);
  v7 = HIDWORD(*(_QWORD *)(a2 + 56));
  v8 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a2 + 56))
    v9 = (_DWORD)v7 == 0;
  else
    v9 = 1;
  if (v9)
    sub_239EC10C4(a1, a2);
  if (*(_DWORD *)(a1 + 44) != *(_DWORD *)(a2 + 44))
    sub_239EC1EA8(a1, a2);
  v64 = *(_DWORD *)(a1 + 56);
  v65 = *(_DWORD *)(a1 + 60);
  v12 = *(unsigned int *)(a1 + 48);
  if (a3 == 1 && 3 * v8 != *(_DWORD *)(a2 + 52))
    sub_239EC1E7C(a1, a2);
  v13 = a5;
  v14 = 3;
  if (a5)
    v14 = 4;
  v62 = v14;
  v15 = *(_QWORD *)(a2 + 8);
  if (!v15)
    goto LABEL_30;
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_85;
  p_shared_owners = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(p_shared_owners);
  while (__stxr(v18 + 1, p_shared_owners));
  do
    v19 = __ldaxr(p_shared_owners);
  while (__stlxr(v19 - 1, p_shared_owners));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v15 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v20)
    goto LABEL_85;
  v21 = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (v23)
  {
LABEL_85:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_27;
LABEL_30:
    v66 = 0;
    v24 = *(_QWORD *)(a1 + 24);
    if (!*(_BYTE *)(a1 + 72))
      goto LABEL_39;
    goto LABEL_31;
  }
  ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
  std::__shared_weak_count::__release_weak(v20);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_30;
LABEL_27:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v66, v15, 1);
  v24 = *(_QWORD *)(a1 + 24);
  if (!*(_BYTE *)(a1 + 72))
    goto LABEL_39;
LABEL_31:
  if (v24)
  {
    v25 = *(_QWORD *)(a1 + 8);
    v26 = *(std::__shared_weak_count **)(a1 + 16);
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v25 + 88))(v25, 0, "unknown location");
    v24 = *(_QWORD *)(a1 + 24);
  }
LABEL_39:
  v30 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v30)
  {
    v31 = *(_QWORD *)(a2 + 8);
    v32 = *(std::__shared_weak_count **)(a2 + 16);
    if (v32)
    {
      v33 = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
      do
        v35 = __ldaxr(v33);
      while (__stlxr(v35 - 1, v33));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v31 + 88))(v31, 1, "unknown location");
    v30 = *(_QWORD *)(a2 + 24);
  }
  if (v7)
  {
    v36 = (float)(1.0 / (float)((float)v8 / (float)v64));
    v37 = (float)(1.0 / (float)((float)v7 / (float)v65));
    v38 = *(unsigned int *)(a1 + 52);
    if (a3 == 1)
    {
      v39 = 0;
      if (v13)
      {
        v40 = (_BYTE *)(v30 + 3 * v7 * (unint64_t)v8);
        do
        {
          v41 = 0;
          v42 = v40;
          do
          {
            v43 = (_BYTE *)(v24
                          + (unint64_t)(v37 * (double)v39) * v38
                          + (unint64_t)(v36 * (double)v41) * v12);
            *(_BYTE *)(v30 + v39 * v8 + v41) = *v43;
            *(_BYTE *)(v30 + (v7 + v39) * v8 + v41) = v43[1];
            *(_BYTE *)(v30 + (2 * v7 + v39) * v8 + v41) = v43[2];
            v44 = v42;
            v45 = v62 - 3;
            do
            {
              *v44 = *(_BYTE *)(*(_QWORD *)(a4 + 24)
                              + (*(_DWORD *)(a4 + 40) * v41 + *(_DWORD *)(a4 + 44) * v39));
              v44 += v7 * (unint64_t)v8;
              --v45;
            }
            while (v45);
            ++v41;
            ++v42;
          }
          while (v41 != v8);
          ++v39;
          v40 += v8;
        }
        while (v39 != v7);
      }
      else
      {
        v51 = v30 + 2 * v7 * (unint64_t)v8;
        v52 = v30 + v7 * (unint64_t)v8;
        do
        {
          v53 = 0;
          do
          {
            v54 = (_BYTE *)(v24
                          + (unint64_t)(v37 * (double)v39) * v38
                          + (unint64_t)(v36 * (double)v53) * v12);
            *(_BYTE *)(v30 + v53) = *v54;
            *(_BYTE *)(v52 + v53) = v54[1];
            *(_BYTE *)(v51 + v53++) = v54[2];
          }
          while (v8 != v53);
          ++v39;
          v51 += v8;
          v52 += v8;
          v30 += v8;
        }
        while (v39 != v7);
      }
    }
    else if (a3)
    {
      v46 = 0;
      v47 = v30 + 2 * v7 * (unint64_t)v8;
      v48 = v30 + v7 * (unint64_t)v8;
      do
      {
        v49 = 0;
        do
        {
          v50 = (_BYTE *)(v24 + (unint64_t)(v37 * (double)v46) * v38 + (unint64_t)(v36 * (double)v49)
                                                                            * v12);
          *(_BYTE *)(v30 + v49) = *v50;
          *(_BYTE *)(v48 + v49) = v50[1];
          *(_BYTE *)(v47 + v49) = v50[2];
          if (v13)
            goto LABEL_78;
          ++v49;
        }
        while (v8 != v49);
        ++v46;
        v47 += v8;
        v48 += v8;
        v30 += v8;
      }
      while (v46 != v7);
    }
    else
    {
      v55 = 0;
      v56 = *(unsigned int *)(a2 + 52);
      v57 = (_BYTE *)(v30 + 2);
      do
      {
        v58 = 0;
        v59 = v57;
        do
        {
          v60 = (_BYTE *)(v24 + (unint64_t)(v37 * (double)v55) * v38 + (unint64_t)(v36 * (double)v58)
                                                                            * v12);
          *(v59 - 2) = *v60;
          *(v59 - 1) = v60[1];
          *v59 = v60[2];
          if (v13)
          {
LABEL_78:
            sub_239A444D4((uint64_t)"unknown file", 171, (uint64_t)"", (void (*)(void *))sub_239A4463C);
            sub_239A4475C();
            abort();
          }
          ++v58;
          v59 += v12;
        }
        while (v8 != v58);
        ++v55;
        v57 += v56;
      }
      while (v55 != v7);
    }
  }
  result = v66;
  v66 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239710A94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12)
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239710AC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned __int8 a5)
{
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  double v39;
  double v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  unint64_t v44;
  double v45;
  float v46;
  float v47;
  float v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  float v54;
  unsigned int v55;
  double v56;
  double v57;
  int v58;
  unint64_t v59;
  double v60;
  float v61;
  float v62;
  float v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  float v68;
  int v69;
  unsigned int v70;
  double v71;
  double v72;
  double v73;
  int v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unsigned __int8 *v80;
  unsigned __int8 *v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  _BYTE *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  unint64_t v93;
  double v94;
  float v95;
  float v96;
  unint64_t v97;
  float v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  float v102;
  unsigned int v103;
  unsigned int v104;
  double v105;
  double v106;
  int v107;
  double v108;
  float v109;
  float v110;
  float v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unsigned __int8 *v115;
  unsigned __int8 *v116;
  unsigned __int8 *v117;
  unsigned __int8 *v118;
  float v119;
  int v120;
  unsigned int v121;
  double v122;
  double v123;
  double v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  uint64_t result;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  double v144;
  float v145;
  float v146;
  float v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unsigned int v152;
  float v153;
  unsigned int v154;
  double v155;
  double v156;
  int v157;
  unsigned int v158;
  double v159;
  float v160;
  float v161;
  float v162;
  unint64_t v163;
  unint64_t v164;
  float v165;
  int v166;
  unsigned int v167;
  double v168;
  double v169;
  double v170;
  int v171;
  unsigned int v172;
  unint64_t v173;
  unsigned __int8 *v174;
  unsigned __int8 *v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  unsigned int v180;
  int v181;
  uint64_t v182;
  _BYTE *v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  _BYTE *v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = HIDWORD(v5);
  if ((_DWORD)v5)
    v7 = HIDWORD(v5) == 0;
  else
    v7 = 1;
  if (v7)
    sub_239EC1ED4(a1, a2);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = HIDWORD(*(_QWORD *)(a2 + 56));
  if (v10)
    v11 = v9 == 0;
  else
    v11 = 1;
  if (v11)
    sub_239EC1F00(a1, a2);
  if (*(_DWORD *)(a1 + 44) != *(_DWORD *)(a2 + 44))
    sub_239EC1F58(a1, a2);
  v15 = *(unsigned int *)(a1 + 48);
  if (a3 == 1 && 3 * v9 != *(_DWORD *)(a2 + 52))
    sub_239EC1F2C(a1, a2);
  v194 = a5;
  v195 = *(_QWORD *)(a2 + 56);
  if (a5)
    v16 = 4;
  else
    v16 = 3;
  v17 = *(_QWORD *)(a2 + 8);
  v187 = HIDWORD(*(_QWORD *)(a2 + 56));
  if (!v17)
    goto LABEL_31;
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_221;
  p_shared_owners = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(p_shared_owners);
  while (__stxr(v20 + 1, p_shared_owners));
  do
    v21 = __ldaxr(p_shared_owners);
  while (__stlxr(v21 - 1, p_shared_owners));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    v10 = v187;
  }
  v17 = *(_QWORD *)(a2 + 8);
  v22 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v22)
    goto LABEL_221;
  v23 = (unint64_t *)&v22->__shared_owners_;
  do
    v24 = __ldxr(v23);
  while (__stxr(v24 + 1, v23));
  do
    v25 = __ldaxr(v23);
  while (__stlxr(v25 - 1, v23));
  if (v25)
  {
LABEL_221:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_28;
LABEL_31:
    v196 = 0;
    v26 = *(_QWORD *)(a1 + 24);
    if (!*(_BYTE *)(a1 + 72))
      goto LABEL_40;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
  std::__shared_weak_count::__release_weak(v22);
  v10 = v187;
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_31;
LABEL_28:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v196, v17, 1);
  v10 = v187;
  v9 = v195;
  v26 = *(_QWORD *)(a1 + 24);
  if (!*(_BYTE *)(a1 + 72))
    goto LABEL_40;
LABEL_32:
  if (v26)
  {
    v27 = *(_QWORD *)(a1 + 8);
    v28 = *(std::__shared_weak_count **)(a1 + 16);
    if (v28)
    {
      v29 = (unint64_t *)&v28->__shared_owners_;
      do
        v30 = __ldxr(v29);
      while (__stxr(v30 + 1, v29));
      do
        v31 = __ldaxr(v29);
      while (__stlxr(v31 - 1, v29));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v27 + 88))(v27, 0, "unknown location");
    v26 = *(_QWORD *)(a1 + 24);
    v9 = v195;
    v10 = v187;
  }
LABEL_40:
  v186 = v26;
  v32 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v32)
  {
    v33 = *(_QWORD *)(a2 + 8);
    v34 = *(std::__shared_weak_count **)(a2 + 16);
    if (v34)
    {
      v35 = (unint64_t *)&v34->__shared_owners_;
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 1, v35));
      do
        v37 = __ldaxr(v35);
      while (__stlxr(v37 - 1, v35));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v33 + 88))(v33, 1, "unknown location");
    v32 = *(_QWORD *)(a2 + 24);
    v9 = v195;
    v10 = v187;
  }
  v38 = (v5 - 1);
  v185 = (HIDWORD(v5) - 1);
  v39 = (float)(1.0 / (float)((float)v9 / (float)v5));
  v40 = (float)(1.0 / (float)((float)v10 / (float)HIDWORD(v5)));
  v184 = *(unsigned int *)(a1 + 52);
  if (a3 == 1)
  {
    if (v194)
    {
      v41 = 0;
      v182 = 2 * v10;
      v188 = v16 - 3;
      v42 = v10 * (unint64_t)v9;
      v43 = (_BYTE *)(v32 + 3 * v42);
      do
      {
        v44 = 0;
        v45 = ((double)v41 + 0.5) * v40 + -0.5;
        v46 = v45;
        v47 = v46 - floor(v45);
        v48 = 1.0 - v47;
        v49 = vcvtmd_u64_f64(v45);
        if (v45 < 0.0)
          v49 = 0;
        v50 = vcvtpd_u64_f64(v45);
        if (v50 >= v185)
          v50 = (HIDWORD(v5) - 1);
        v51 = v186 + v49 * v184;
        v52 = v186 + v50 * v184;
        v53 = vcvts_n_s32_f32(v48, 0xBuLL);
        v54 = v48 * 2048.0;
        v55 = vcvts_n_s32_f32((float)(v48 * 2048.0) - (float)(int)(float)(v48 * 2048.0), 0xBuLL);
        v56 = (float)(v48 * 2048.0);
        if (v54 < 0.0)
          v57 = -0.5;
        else
          v57 = 0.5;
        v58 = (int)(v57 + v56);
        v190 = (v10 + v41) * v9;
        v192 = v41 * v9;
        v59 = (v182 + v41) * v9;
        v183 = v43;
        do
        {
          v60 = ((double)v44 + 0.5) * v39 + -0.5;
          v61 = v60;
          v62 = v61 - floor(v60);
          v63 = 1.0 - v62;
          v64 = vcvtmd_u64_f64(v60);
          v65 = vcvtpd_u64_f64(v60);
          if (v60 >= 0.0)
            v66 = v64;
          else
            v66 = 0;
          if (v65 >= v38)
            v67 = (v5 - 1);
          else
            v67 = v65;
          v68 = v63 * 2048.0;
          v69 = vcvts_n_s32_f32(v63, 0xBuLL);
          v70 = vcvts_n_s32_f32((float)(v63 * 2048.0) - (float)(int)(float)(v63 * 2048.0), 0xBuLL);
          v71 = (float)(v63 * 2048.0);
          if (v68 < 0.0)
            v72 = -0.5;
          else
            v72 = 0.5;
          v73 = v72 + v71;
          if (v70 != 1024 && v70 != -1024 || (v74 = v69, (v69 & 1) != 0))
            v74 = (int)v73;
          if (v55 != 1024 && v55 != -1024 || (v75 = v53, (v53 & 1) != 0))
            v75 = v58;
          v76 = v66 * v15;
          v77 = v51 + v76;
          v78 = v52 + v76;
          v79 = v67 * v15;
          v80 = (unsigned __int8 *)(v51 + v79);
          v81 = (unsigned __int8 *)(v52 + v79);
          *(_BYTE *)(v32 + v192 + v44) = (((v75
                                          * ((v74 * *(unsigned __int8 *)(v51 + v76) + (2048 - v74) * *v80) >> 4)) >> 16)
                                        + (((2048 - v75)
                                          * ((v74 * *(unsigned __int8 *)(v52 + v76) + (2048 - v74) * *v81) >> 4)) >> 16)
                                        + 2) >> 2;
          if (v70 != 1024 && v70 != -1024 || (v82 = v69, (v69 & 1) != 0))
            v82 = (int)v73;
          if (v55 != 1024 && v55 != -1024 || (v83 = v53, (v53 & 1) != 0))
            v83 = v58;
          *(_BYTE *)(v32 + v190 + v44) = (((v83
                                          * ((v82 * *(unsigned __int8 *)(v77 + 1) + (2048 - v82) * v80[1]) >> 4)) >> 16)
                                        + (((2048 - v83)
                                          * ((v82 * *(unsigned __int8 *)(v78 + 1) + (2048 - v82) * v81[1]) >> 4)) >> 16)
                                        + 2) >> 2;
          v84 = *(unsigned __int8 *)(v77 + 2);
          v85 = v81[2];
          if (v70 != 1024 && v70 != -1024 || (v69 & 1) != 0)
            v69 = (int)v73;
          v9 = v195;
          if (v55 != 1024 && v55 != -1024 || (v86 = v53, (v53 & 1) != 0))
            v86 = v58;
          *(_BYTE *)(v32 + v59 + v44) = (((v86 * ((v69 * v84 + (2048 - v69) * v80[2]) >> 4)) >> 16)
                                       + (((2048 - v86)
                                         * ((v69 * *(unsigned __int8 *)(v78 + 2) + (2048 - v69) * v85) >> 4)) >> 16)
                                       + 2) >> 2;
          v87 = v43;
          v88 = v188;
          do
          {
            *v87 = *(_BYTE *)(*(_QWORD *)(a4 + 24)
                            + (*(_DWORD *)(a4 + 40) * v44 + *(_DWORD *)(a4 + 44) * v41));
            v87 += v42;
            --v88;
          }
          while (v88);
          ++v44;
          ++v43;
        }
        while (v44 != v195);
        ++v41;
        v43 = &v183[v195];
        v10 = v187;
      }
      while (v41 != v187);
    }
    else
    {
      v140 = 0;
      v141 = v32 + 2 * v10 * (unint64_t)v9;
      v142 = v32 + v10 * (unint64_t)v9;
      do
      {
        v143 = 0;
        v144 = ((double)v140 + 0.5) * v40 + -0.5;
        v145 = v144;
        v146 = v145 - floor(v144);
        v147 = 1.0 - v146;
        v148 = vcvtmd_u64_f64(v144);
        if (v144 < 0.0)
          v148 = 0;
        v149 = vcvtpd_u64_f64(v144);
        if (v149 >= v185)
          v149 = (v6 - 1);
        v150 = v186 + v148 * v184;
        v151 = v186 + v149 * v184;
        v152 = vcvts_n_s32_f32(v147, 0xBuLL);
        v153 = v147 * 2048.0;
        v154 = vcvts_n_s32_f32((float)(v147 * 2048.0) - (float)(int)(float)(v147 * 2048.0), 0xBuLL);
        v155 = (float)(v147 * 2048.0);
        if (v153 < 0.0)
          v156 = -0.5;
        else
          v156 = 0.5;
        v157 = (int)(v156 + v155);
        do
        {
          v159 = ((double)v143 + 0.5) * v39 + -0.5;
          v160 = v159;
          v161 = v160 - floor(v159);
          v162 = 1.0 - v161;
          v163 = vcvtmd_u64_f64(v159);
          v164 = vcvtpd_u64_f64(v159);
          if (v159 < 0.0)
            v163 = 0;
          if (v164 >= v38)
            v164 = v38;
          v165 = v162 * 2048.0;
          v166 = vcvts_n_s32_f32(v162, 0xBuLL);
          v167 = vcvts_n_s32_f32((float)(v162 * 2048.0) - (float)(int)(float)(v162 * 2048.0), 0xBuLL);
          v168 = (float)(v162 * 2048.0);
          if (v165 < 0.0)
            v169 = -0.5;
          else
            v169 = 0.5;
          v170 = v169 + v168;
          if (v167 != 1024 && v167 != -1024 || (v171 = v166, (v166 & 1) != 0))
            v171 = (int)v170;
          if (v154 != 1024 && v154 != -1024 || (v172 = v152, (v152 & 1) != 0))
            v172 = v157;
          v173 = v163 * v15;
          v174 = (unsigned __int8 *)(v150 + v163 * v15);
          v175 = (unsigned __int8 *)(v151 + v173);
          v176 = v164 * v15;
          v177 = v150 + v176;
          v178 = v151 + v176;
          *(_BYTE *)(v32 + v143) = (((v172
                                    * ((v171 * *v174 + (2048 - v171) * *(unsigned __int8 *)(v150 + v176)) >> 4)) >> 16)
                                  + (((2048 - v172)
                                    * ((v171 * *v175 + (2048 - v171) * *(unsigned __int8 *)(v151 + v176)) >> 4)) >> 16)
                                  + 2) >> 2;
          if (v167 != 1024 && v167 != -1024 || (v179 = v166, (v166 & 1) != 0))
            v179 = (int)v170;
          if (v154 != 1024 && v154 != -1024 || (v180 = v152, (v152 & 1) != 0))
            v180 = v157;
          *(_BYTE *)(v142 + v143) = (((v180
                                     * ((v179 * v174[1] + (2048 - v179) * *(unsigned __int8 *)(v177 + 1)) >> 4)) >> 16)
                                   + (((2048 - v180)
                                     * ((v179 * v175[1] + (2048 - v179) * *(unsigned __int8 *)(v178 + 1)) >> 4)) >> 16)
                                   + 2) >> 2;
          v181 = *(unsigned __int8 *)(v177 + 2);
          if (v167 != 1024 && v167 != -1024 || (v166 & 1) != 0)
            v166 = (int)v170;
          if (v154 != 1024 && v154 != -1024 || (v158 = v152, (v152 & 1) != 0))
            v158 = v157;
          *(_BYTE *)(v141 + v143++) = (((v158 * ((v166 * v174[2] + (2048 - v166) * v181) >> 4)) >> 16)
                                     + (((2048 - v158)
                                       * ((v166 * v175[2] + (2048 - v166) * *(unsigned __int8 *)(v178 + 2)) >> 4)) >> 16)
                                     + 2) >> 2;
        }
        while (v9 != v143);
        ++v140;
        v141 += v9;
        v142 += v9;
        v32 += v9;
      }
      while (v140 != v187);
    }
  }
  else
  {
    v89 = 0;
    v189 = *(unsigned int *)(a2 + 52);
    v90 = v32 + 2 * v10 * (unint64_t)v9;
    v91 = v32 + v10 * (unint64_t)v9;
    v92 = (_BYTE *)(v32 + 1);
    do
    {
      v93 = 0;
      v193 = v89;
      v94 = ((double)v89 + 0.5) * v40 + -0.5;
      v95 = v94;
      v96 = v95 - floor(v94);
      v97 = vcvtmd_u64_f64(v94);
      v98 = 1.0 - v96;
      if (v94 < 0.0)
        v97 = 0;
      v99 = vcvtpd_u64_f64(v94);
      if (v99 >= v185)
        v99 = (HIDWORD(v5) - 1);
      v100 = v186 + v97 * v184;
      v101 = v186 + v99 * v184;
      v102 = v98 * 2048.0;
      v103 = vcvts_n_s32_f32(v98, 0xBuLL);
      v104 = vcvts_n_s32_f32((float)(v98 * 2048.0) - (float)(int)(float)(v98 * 2048.0), 0xBuLL);
      v105 = (float)(v98 * 2048.0);
      if (v102 < 0.0)
        v106 = -0.5;
      else
        v106 = 0.5;
      v107 = (int)(v106 + v105);
      v191 = v92;
      do
      {
        v108 = ((double)v93 + 0.5) * v39 + -0.5;
        v109 = v108;
        v110 = v109 - floor(v108);
        v111 = 1.0 - v110;
        v112 = vcvtmd_u64_f64(v108);
        if (v108 < 0.0)
          v112 = 0;
        v113 = vcvtpd_u64_f64(v108);
        if (v113 >= v38)
          v113 = (v5 - 1);
        v114 = v112 * v15;
        v115 = (unsigned __int8 *)(v100 + v114);
        v116 = (unsigned __int8 *)(v101 + v114);
        v117 = (unsigned __int8 *)(v100 + v113 * v15);
        v118 = (unsigned __int8 *)(v101 + v113 * v15);
        v119 = v111 * 2048.0;
        v120 = vcvts_n_s32_f32(v111, 0xBuLL);
        v121 = vcvts_n_s32_f32((float)(v111 * 2048.0) - (float)(int)(float)(v111 * 2048.0), 0xBuLL);
        v122 = (float)(v111 * 2048.0);
        if (v119 < 0.0)
          v123 = -0.5;
        else
          v123 = 0.5;
        v124 = v123 + v122;
        v125 = *v115;
        v126 = *v116;
        v127 = *v117;
        v128 = *v118;
        if (a3)
        {
          if (v121 != -1024 && v121 != 1024 || (v129 = v120, (v120 & 1) != 0))
            v129 = (int)v124;
          if (v104 != 1024 && v104 != -1024 || (v130 = v103, (v103 & 1) != 0))
            v130 = v107;
          *(_BYTE *)(v32 + v93) = (((v130 * ((v129 * v125 + (2048 - v129) * v127) >> 4)) >> 16)
                                 + (((2048 - v130) * ((v129 * v126 + (2048 - v129) * v128) >> 4)) >> 16)
                                 + 2) >> 2;
          if (v121 != 1024 && v121 != -1024 || (v131 = v120, (v120 & 1) != 0))
            v131 = (int)v124;
          if (v104 != 1024 && v104 != -1024 || (v132 = v103, (v103 & 1) != 0))
            v132 = v107;
          *(_BYTE *)(v91 + v93) = (((v132 * ((v131 * v115[1] + (2048 - v131) * v117[1]) >> 4)) >> 16)
                                 + (((2048 - v132) * ((v131 * v116[1] + (2048 - v131) * v118[1]) >> 4)) >> 16)
                                 + 2) >> 2;
          if (v121 != 1024 && v121 != -1024 || (v120 & 1) != 0)
            v120 = (int)v124;
          if (v104 != 1024 && v104 != -1024 || (v133 = v103, (v103 & 1) != 0))
            v133 = v107;
          *(_BYTE *)(v90 + v93) = (((v133 * ((v120 * v115[2] + (2048 - v120) * v117[2]) >> 4)) >> 16)
                                 + (((2048 - v133) * ((v120 * v116[2] + (2048 - v120) * v118[2]) >> 4)) >> 16)
                                 + 2) >> 2;
          if (v194)
            goto LABEL_214;
        }
        else
        {
          if (v121 != 1024 && v121 != -1024 || (v134 = v120, (v120 & 1) != 0))
            v134 = (int)v124;
          if (v104 != 1024 && v104 != -1024 || (v135 = v103, (v103 & 1) != 0))
            v135 = v107;
          *(v92 - 1) = (((v135 * ((v134 * v125 + (2048 - v134) * v127) >> 4)) >> 16)
                      + (((2048 - v135) * ((v134 * v126 + (2048 - v134) * v128) >> 4)) >> 16)
                      + 2) >> 2;
          if (v121 != 1024 && v121 != -1024 || (v136 = v120, (v120 & 1) != 0))
            v136 = (int)v124;
          if (v104 != 1024 && v104 != -1024 || (v137 = v103, (v103 & 1) != 0))
            v137 = v107;
          *v92 = (((v137 * ((v136 * v115[1] + (2048 - v136) * v117[1]) >> 4)) >> 16)
                + (((2048 - v137) * ((v136 * v116[1] + (2048 - v136) * v118[1]) >> 4)) >> 16)
                + 2) >> 2;
          if (v121 != 1024 && v121 != -1024 || (v120 & 1) != 0)
            v120 = (int)v124;
          if (v104 != 1024 && v104 != -1024 || (v138 = v103, (v103 & 1) != 0))
            v138 = v107;
          v92[1] = (((v138 * ((v120 * v115[2] + (2048 - v120) * v117[2]) >> 4)) >> 16)
                  + (((2048 - v138) * ((v120 * v116[2] + (2048 - v120) * v118[2]) >> 4)) >> 16)
                  + 2) >> 2;
          if (v194)
          {
LABEL_214:
            sub_239A444D4((uint64_t)"unknown file", 281, (uint64_t)"", (void (*)(void *))sub_239A4463C);
            sub_239A4475C();
            abort();
          }
        }
        ++v93;
        v92 += v15;
      }
      while (v195 != v93);
      v89 = v193 + 1;
      v90 += v195;
      v91 += v195;
      v32 += v195;
      v92 = &v191[v189];
    }
    while (v193 + 1 != v187);
  }
  result = v196;
  v196 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397118E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (a20)
    (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239711914(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, unsigned __int8 a6)
{
  if (a3 == 1)
    return sub_23971193C(a1, a2, a4, a5, a6);
  else
    return sub_239711EEC(a1, a2, a4, a5, a6);
}

uint64_t sub_23971193C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned __int8 a5)
{
  BOOL v5;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _BYTE *v53;
  unint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  unint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t result;
  unsigned int v61;
  unsigned int v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;

  if (*(_DWORD *)(a1 + 56))
    v5 = *(_DWORD *)(a1 + 60) == 0;
  else
    v5 = 1;
  if (v5)
    sub_239EC1E50(a1, a2);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = HIDWORD(v7);
  if ((_DWORD)v7)
    v9 = HIDWORD(v7) == 0;
  else
    v9 = 1;
  if (v9)
    sub_239EC10C4(a1, a2);
  v11 = *(_QWORD *)(a2 + 40);
  if (*(_DWORD *)(a1 + 44) != (_DWORD)v11)
    sub_239EC1EA8(a1, a2);
  v63 = *(_DWORD *)(a1 + 56);
  v64 = *(_DWORD *)(a1 + 60);
  v13 = *(unsigned int *)(a1 + 48);
  if (a3 == 1 && HIDWORD(v11) != (_DWORD)v7)
    sub_239EC1E7C(a1, a2);
  v61 = *(_QWORD *)(a2 + 40);
  v14 = a5;
  v15 = 3;
  if (a5)
    v15 = 4;
  v65 = v15;
  v16 = *(_QWORD *)(a2 + 8);
  if (!v16)
    goto LABEL_30;
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v17)
    goto LABEL_92;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldxr(p_shared_owners);
  while (__stxr(v19 + 1, p_shared_owners));
  do
    v20 = __ldaxr(p_shared_owners);
  while (__stlxr(v20 - 1, p_shared_owners));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
  v16 = *(_QWORD *)(a2 + 8);
  v21 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v21)
    goto LABEL_92;
  v22 = (unint64_t *)&v21->__shared_owners_;
  do
    v23 = __ldxr(v22);
  while (__stxr(v23 + 1, v22));
  do
    v24 = __ldaxr(v22);
  while (__stlxr(v24 - 1, v22));
  if (v24)
  {
LABEL_92:
    if (*(_BYTE *)(a2 + 49))
      goto LABEL_27;
LABEL_30:
    v66 = 0;
    v25 = *(_QWORD *)(a1 + 24);
    if (!*(_BYTE *)(a1 + 72))
      goto LABEL_39;
    goto LABEL_31;
  }
  ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
  std::__shared_weak_count::__release_weak(v21);
  if (!*(_BYTE *)(a2 + 49))
    goto LABEL_30;
LABEL_27:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v66, v16, 1);
  v25 = *(_QWORD *)(a1 + 24);
  if (!*(_BYTE *)(a1 + 72))
    goto LABEL_39;
LABEL_31:
  if (v25)
  {
    v26 = *(_QWORD *)(a1 + 8);
    v27 = *(std::__shared_weak_count **)(a1 + 16);
    if (v27)
    {
      v28 = (unint64_t *)&v27->__shared_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
      do
        v30 = __ldaxr(v28);
      while (__stlxr(v30 - 1, v28));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v26 + 88))(v26, 0, "unknown location");
    v25 = *(_QWORD *)(a1 + 24);
  }
LABEL_39:
  v31 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v31)
  {
    v32 = *(_QWORD *)(a2 + 8);
    v33 = *(std::__shared_weak_count **)(a2 + 16);
    if (v33)
    {
      v34 = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
      do
        v36 = __ldaxr(v34);
      while (__stlxr(v36 - 1, v34));
      if (!v36)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v32 + 88))(v32, 1, "unknown location");
    v31 = *(_QWORD *)(a2 + 24);
  }
  if (v8 && v65 <= v7)
  {
    v37 = v7 / v65;
    v38 = (float)(1.0 / (float)((float)v37 / (float)v63));
    v39 = (float)(1.0 / (float)((float)HIDWORD(v7) / (float)v64));
    v40 = *(unsigned int *)(a1 + 52);
    if (a3 == 1)
    {
      v45 = 2 * v8;
      if (v37 <= 1)
        v46 = 1;
      else
        v46 = v7 / v65;
      v47 = 0;
      if (v14)
      {
        do
        {
          v48 = 0;
          do
          {
            v49 = (_BYTE *)(v25
                          + (unint64_t)(v39 * (double)v47) * v40
                          + (unint64_t)(v38 * (double)v48) * v13);
            *(_BYTE *)(v31 + v47 * v37 + v48) = *v49;
            *(_BYTE *)(v31 + (v8 + v47) * v37 + v48) = v49[1];
            *(_BYTE *)(v31 + (v45 + v47) * v37 + v48) = v49[2];
            v50 = v65 - 3;
            v51 = 3;
            do
            {
              *(_BYTE *)(v31 + v48 + (v47 + v51 * v8) * v37) = *(_BYTE *)(*(_QWORD *)(a4 + 24)
                                                                        + (*(_DWORD *)(a4 + 40) * v48
                                                                                       + *(_DWORD *)(a4 + 44) * v47));
              ++v51;
              --v50;
            }
            while (v50);
            ++v48;
          }
          while (v48 != v46);
          ++v47;
        }
        while (v47 != v8);
      }
      else
      {
        do
        {
          v52 = 0;
          do
          {
            v53 = (_BYTE *)(v25
                          + (unint64_t)(v39 * (double)v47) * v40
                          + (unint64_t)(v38 * (double)v52) * v13);
            *(_BYTE *)(v31 + v47 * v37 + v52) = *v53;
            *(_BYTE *)(v31 + (v8 + v47) * v37 + v52) = v53[1];
            *(_BYTE *)(v31 + (v45 + v47) * v37 + v52++) = v53[2];
          }
          while (v46 != v52);
          ++v47;
        }
        while (v47 != v8);
      }
    }
    else if (a3)
    {
      v41 = 0;
      if (v37 <= 1)
        v42 = 1;
      else
        v42 = v7 / v65;
      do
      {
        v43 = 0;
        do
        {
          v44 = (_BYTE *)(v25 + (unint64_t)(v39 * (double)v41) * v40 + (unint64_t)(v38 * (double)v43)
                                                                            * v13);
          *(_BYTE *)(v31 + v41 * v37 + v43) = *v44;
          *(_BYTE *)(v31 + (v8 + v41) * v37 + v43) = v44[1];
          *(_BYTE *)(v31 + (2 * v8 + v41) * v37 + v43) = v44[2];
          if (v14)
            goto LABEL_85;
          ++v43;
        }
        while (v42 != v43);
        ++v41;
      }
      while (v41 != v8);
    }
    else
    {
      v54 = 0;
      v55 = *(unsigned int *)(a2 + 44);
      if (v37 <= 1)
        v37 = 1;
      v56 = (_BYTE *)(v31 + 2);
      do
      {
        v57 = 0;
        v58 = v56;
        do
        {
          v59 = (_BYTE *)(v25 + (unint64_t)(v39 * (double)v54) * v40 + (unint64_t)(v38 * (double)v57)
                                                                            * v13);
          *(v58 - 2) = *v59;
          *(v58 - 1) = v59[1];
          *v58 = v59[2];
          if (v14)
          {
LABEL_85:
            sub_239A444D4((uint64_t)"unknown file", 171, (uint64_t)"", (void (*)(void *))sub_239A4463C);
            sub_239A4475C();
            abort();
          }
          ++v57;
          v58 += v61;
        }
        while (v37 != v57);
        ++v54;
        v56 += v55;
      }
      while (v54 != v8);
    }
  }
  result = v66;
  v66 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239711EC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14)
    (*(void (**)(uint64_t))(*(_QWORD *)a14 + 8))(a14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239711EEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5;
  BOOL v6;
  std::__shared_weak_count *v8;
  unint64_t v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  double v39;
  double v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  double v44;
  float v45;
  float v46;
  float v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  float v52;
  unsigned int v53;
  double v54;
  double v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  double v60;
  float v61;
  float v62;
  float v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  float v67;
  int v68;
  unsigned int v69;
  double v70;
  double v71;
  double v72;
  int v73;
  unsigned int v74;
  unint64_t v75;
  unsigned __int8 *v76;
  unsigned __int8 *v77;
  unint64_t v78;
  unsigned __int8 *v79;
  uint64_t v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  double v88;
  float v89;
  float v90;
  float v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unsigned int v95;
  float v96;
  unsigned int v97;
  double v98;
  double v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int v103;
  double v104;
  float v105;
  float v106;
  float v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unsigned __int8 *v111;
  unsigned __int8 *v112;
  unsigned __int8 *v113;
  unsigned __int8 *v114;
  float v115;
  int v116;
  unsigned int v117;
  double v118;
  double v119;
  double v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  unint64_t v138;
  uint64_t v139;
  _BYTE *v140;
  unint64_t v141;
  double v142;
  float v143;
  float v144;
  unint64_t v145;
  float v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  float v150;
  unsigned int v151;
  unsigned int v152;
  double v153;
  double v154;
  int v155;
  _BYTE *v156;
  double v157;
  float v158;
  float v159;
  float v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unsigned __int8 *v164;
  unsigned __int8 *v165;
  unsigned __int8 *v166;
  unsigned __int8 *v167;
  unsigned int v168;
  double v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  unsigned int v183;
  uint64_t result;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;

  v5 = *(_QWORD *)(a1 + 56);
  if ((_DWORD)v5)
    v6 = HIDWORD(v5) == 0;
  else
    v6 = 1;
  if (v6)
    sub_239EC1ED4(a1, a2);
  v8 = *(std::__shared_weak_count **)(a2 + 32);
  v9 = (unint64_t)v8 >> 32;
  if ((unint64_t)v8 >> 32)
    v10 = *(_QWORD *)(a2 + 32) == 0;
  else
    v10 = 1;
  if (v10)
    sub_239EC1F00(a1, a2);
  v12 = *(unsigned int *)(a1 + 44);
  if ((_DWORD)v12 != *(_DWORD *)(a2 + 40))
    sub_239EC1F58(a1, a2);
  v14 = *(unsigned int *)(a1 + 48);
  if (a3 == 1 && *(_DWORD *)(a2 + 44) != (_DWORD)v8)
    sub_239EC1F2C(a1, a2);
  v15 = 3;
  if (a5)
    v15 = 4;
  v194 = v15;
  v197 = a5;
  v16 = *(_QWORD *)(a2 + 8);
  v17 = *(_QWORD *)(a2 + 32);
  if (!v16)
    goto LABEL_30;
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(p_shared_owners);
  while (__stxr(v20 + 1, p_shared_owners));
  do
    v21 = __ldaxr(p_shared_owners);
  while (__stlxr(v21 - 1, p_shared_owners));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
  v16 = *(_QWORD *)(a2 + 8);
  v8 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v8)
    goto LABEL_26;
  v22 = (unint64_t *)&v8->__shared_owners_;
  do
    v23 = __ldxr(v22);
  while (__stxr(v23 + 1, v22));
  do
    v24 = __ldaxr(v22);
  while (__stlxr(v24 - 1, v22));
  if (v24)
  {
LABEL_26:
    LODWORD(v8) = v17;
    if (*(_BYTE *)(a2 + 49))
      goto LABEL_27;
LABEL_30:
    v198 = 0;
    v25 = *(_QWORD *)(a1 + 24);
    if (!*(_BYTE *)(a1 + 72))
      goto LABEL_39;
    goto LABEL_31;
  }
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  LODWORD(v8) = v17;
  if (!*(_BYTE *)(a2 + 49))
    goto LABEL_30;
LABEL_27:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v198, v16, 1);
  v25 = *(_QWORD *)(a1 + 24);
  if (!*(_BYTE *)(a1 + 72))
    goto LABEL_39;
LABEL_31:
  if (v25)
  {
    v26 = *(_QWORD *)(a1 + 8);
    v27 = *(std::__shared_weak_count **)(a1 + 16);
    if (v27)
    {
      v28 = (unint64_t *)&v27->__shared_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
      do
        v30 = __ldaxr(v28);
      while (__stlxr(v30 - 1, v28));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v26 + 88))(v26, 0, "unknown location");
    v25 = *(_QWORD *)(a1 + 24);
    LODWORD(v8) = v17;
  }
LABEL_39:
  v187 = v25;
  v31 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v31)
  {
    v32 = *(_QWORD *)(a2 + 8);
    v33 = *(std::__shared_weak_count **)(a2 + 16);
    if (v33)
    {
      v34 = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
      do
        v36 = __ldaxr(v34);
      while (__stlxr(v36 - 1, v34));
      if (!v36)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v32 + 88))(v32, 1, "unknown location");
    v31 = *(_QWORD *)(a2 + 24);
    LODWORD(v8) = v17;
  }
  if (v194 <= v8)
  {
    v37 = (v5 - 1);
    v38 = v8 / v194;
    v186 = (HIDWORD(v5) - 1);
    v39 = (float)(1.0 / (float)((float)v38 / (float)v5));
    v40 = (float)(1.0 / (float)((float)v9 / (float)HIDWORD(v5)));
    v185 = *(unsigned int *)(a1 + 52);
    if (a3 == 1)
    {
      v85 = 0;
      if (v38 <= 1)
        v86 = 1;
      else
        v86 = v8 / v194;
      v188 = v194 - 3;
      v191 = v86;
      do
      {
        v87 = 0;
        v88 = ((double)v85 + 0.5) * v40 + -0.5;
        v89 = v88;
        v90 = v89 - floor(v88);
        v91 = 1.0 - v90;
        v92 = vcvtmd_u64_f64(v88);
        v93 = vcvtpd_u64_f64(v88);
        if (v88 < 0.0)
          v92 = 0;
        if (v93 >= v186)
          v93 = v186;
        v94 = v187 + v92 * v185;
        v95 = vcvts_n_s32_f32(v91, 0xBuLL);
        v96 = v91 * 2048.0;
        v97 = vcvts_n_s32_f32((float)(v91 * 2048.0) - (float)(int)(float)(v91 * 2048.0), 0xBuLL);
        v98 = (float)(v91 * 2048.0);
        if (v96 < 0.0)
          v99 = -0.5;
        else
          v99 = 0.5;
        v100 = (int)(v99 + v98);
        v101 = v187 + v93 * v185;
        v193 = (v9 + v85) * v38;
        v196 = v85 * v38;
        v102 = (2 * v9 + v85) * v38;
        do
        {
          v104 = ((double)v87 + 0.5) * v39 + -0.5;
          v105 = v104;
          v106 = v105 - floor(v104);
          v107 = 1.0 - v106;
          v108 = vcvtmd_u64_f64(v104);
          if (v104 < 0.0)
            v108 = 0;
          v109 = vcvtpd_u64_f64(v104);
          if (v109 >= v37)
            v109 = v37;
          v110 = v108 * v14;
          v111 = (unsigned __int8 *)(v94 + v110);
          v112 = (unsigned __int8 *)(v101 + v110);
          v113 = (unsigned __int8 *)(v94 + v109 * v14);
          v114 = (unsigned __int8 *)(v101 + v109 * v14);
          v115 = v107 * 2048.0;
          v116 = vcvts_n_s32_f32(v107, 0xBuLL);
          v117 = vcvts_n_s32_f32((float)(v107 * 2048.0) - (float)(int)(float)(v107 * 2048.0), 0xBuLL);
          v118 = (float)(v107 * 2048.0);
          if (v115 < 0.0)
            v119 = -0.5;
          else
            v119 = 0.5;
          v120 = v119 + v118;
          v121 = *v111;
          v122 = *v112;
          v123 = *v113;
          v124 = *v114;
          if (v197)
          {
            if (v117 != 1024 && v117 != -1024 || (v125 = v116, (v116 & 1) != 0))
              v125 = (int)v120;
            if (v97 != 1024 && v97 != -1024 || (v126 = v95, (v95 & 1) != 0))
              v126 = v100;
            *(_BYTE *)(v31 + v196 + v87) = (((v126 * ((v125 * v121 + (2048 - v125) * v123) >> 4)) >> 16)
                                          + (((2048 - v126) * ((v125 * v122 + (2048 - v125) * v124) >> 4)) >> 16)
                                          + 2) >> 2;
            if (v117 != 1024 && v117 != -1024 || (v127 = v116, (v116 & 1) != 0))
              v127 = (int)v120;
            if (v97 != 1024 && v97 != -1024 || (v128 = v95, (v95 & 1) != 0))
              v128 = v100;
            *(_BYTE *)(v31 + v193 + v87) = (((v128 * ((v127 * v111[1] + (2048 - v127) * v113[1]) >> 4)) >> 16)
                                          + (((2048 - v128)
                                            * ((v127 * v112[1] + (2048 - v127) * v114[1]) >> 4)) >> 16)
                                          + 2) >> 2;
            v129 = v113[2];
            if (v117 != 1024 && v117 != -1024 || (v116 & 1) != 0)
              v116 = (int)v120;
            if (v97 != 1024 && v97 != -1024 || (v130 = v95, (v95 & 1) != 0))
              v130 = v100;
            *(_BYTE *)(v31 + v102 + v87) = (((v130 * ((v116 * v111[2] + (2048 - v116) * v129) >> 4)) >> 16)
                                          + (((2048 - v130)
                                            * ((v116 * v112[2] + (2048 - v116) * v114[2]) >> 4)) >> 16)
                                          + 2) >> 2;
            v131 = v188;
            v132 = 3;
            do
            {
              *(_BYTE *)(v31 + v87 + (v85 + v132 * v9) * v38) = *(_BYTE *)(*(_QWORD *)(a4 + 24)
                                                                         + (*(_DWORD *)(a4 + 40) * v87
                                                                                        + *(_DWORD *)(a4 + 44) * v85));
              ++v132;
              --v131;
            }
            while (v131);
          }
          else
          {
            if (v117 != 1024 && v117 != -1024 || (v133 = v116, (v116 & 1) != 0))
              v133 = (int)v120;
            if (v97 != 1024 && v97 != -1024 || (v134 = v95, (v95 & 1) != 0))
              v134 = v100;
            *(_BYTE *)(v31 + v196 + v87) = (((v134 * ((v133 * v121 + (2048 - v133) * v123) >> 4)) >> 16)
                                          + (((2048 - v134) * ((v133 * v122 + (2048 - v133) * v124) >> 4)) >> 16)
                                          + 2) >> 2;
            if (v117 != 1024 && v117 != -1024 || (v135 = v116, (v116 & 1) != 0))
              v135 = (int)v120;
            if (v97 != 1024 && v97 != -1024 || (v136 = v95, (v95 & 1) != 0))
              v136 = v100;
            *(_BYTE *)(v31 + v193 + v87) = (((v136 * ((v135 * v111[1] + (2048 - v135) * v113[1]) >> 4)) >> 16)
                                          + (((2048 - v136)
                                            * ((v135 * v112[1] + (2048 - v135) * v114[1]) >> 4)) >> 16)
                                          + 2) >> 2;
            v137 = v113[2];
            if (v117 != 1024 && v117 != -1024 || (v116 & 1) != 0)
              v116 = (int)v120;
            if (v97 != 1024 && v97 != -1024 || (v103 = v95, (v95 & 1) != 0))
              v103 = v100;
            *(_BYTE *)(v31 + v102 + v87) = (((v103 * ((v116 * v111[2] + (2048 - v116) * v137) >> 4)) >> 16)
                                          + (((2048 - v103)
                                            * ((v116 * v112[2] + (2048 - v116) * v114[2]) >> 4)) >> 16)
                                          + 2) >> 2;
          }
          ++v87;
        }
        while (v87 != v191);
        ++v85;
      }
      while (v85 != v9);
    }
    else if (a3)
    {
      v41 = 0;
      if (v38 <= 1)
        v42 = 1;
      else
        v42 = v8 / v194;
      v192 = v42;
      do
      {
        v43 = 0;
        v44 = ((double)v41 + 0.5) * v40 + -0.5;
        v45 = v44;
        v46 = v45 - floor(v44);
        v47 = 1.0 - v46;
        v48 = vcvtmd_u64_f64(v44);
        v49 = vcvtpd_u64_f64(v44);
        if (v44 < 0.0)
          v48 = 0;
        if (v49 >= v186)
          v49 = (HIDWORD(v5) - 1);
        v50 = v187 + v48 * v185;
        v51 = vcvts_n_s32_f32(v47, 0xBuLL);
        v52 = v47 * 2048.0;
        v53 = vcvts_n_s32_f32((float)(v47 * 2048.0) - (float)(int)(float)(v47 * 2048.0), 0xBuLL);
        v54 = (float)(v47 * 2048.0);
        if (v52 < 0.0)
          v55 = -0.5;
        else
          v55 = 0.5;
        v56 = (int)(v55 + v54);
        v57 = v187 + v49 * v185;
        v195 = v41 * v38;
        v58 = (v9 + v41) * v38;
        v190 = v41;
        v59 = (2 * v9 + v41) * v38;
        do
        {
          v60 = ((double)v43 + 0.5) * v39 + -0.5;
          v61 = v60;
          v62 = v61 - floor(v60);
          v63 = 1.0 - v62;
          v64 = vcvtmd_u64_f64(v60);
          v65 = vcvtpd_u64_f64(v60);
          if (v60 < 0.0)
            v64 = 0;
          if (v65 >= v37)
            v66 = (v5 - 1);
          else
            v66 = v65;
          v67 = v63 * 2048.0;
          v68 = vcvts_n_s32_f32(v63, 0xBuLL);
          v69 = vcvts_n_s32_f32((float)(v63 * 2048.0) - (float)(int)(float)(v63 * 2048.0), 0xBuLL);
          v70 = (float)(v63 * 2048.0);
          if (v67 < 0.0)
            v71 = -0.5;
          else
            v71 = 0.5;
          v72 = v71 + v70;
          if (v69 != 1024 && v69 != -1024 || (v73 = v68, (v68 & 1) != 0))
            v73 = (int)v72;
          if (v53 != 1024 && v53 != -1024 || (v74 = v51, (v51 & 1) != 0))
            v74 = v56;
          v75 = v64 * v14;
          v76 = (unsigned __int8 *)(v50 + v64 * v14);
          v77 = (unsigned __int8 *)(v57 + v75);
          v78 = v66 * v14;
          v79 = (unsigned __int8 *)(v50 + v66 * v14);
          v80 = v57 + v78;
          *(_BYTE *)(v31 + v195 + v43) = (((v74 * ((v73 * *v76 + (2048 - v73) * *v79) >> 4)) >> 16)
                                        + (((2048 - v74)
                                          * ((v73 * *v77 + (2048 - v73) * *(unsigned __int8 *)(v57 + v78)) >> 4)) >> 16)
                                        + 2) >> 2;
          if (v69 != 1024 && v69 != -1024 || (v81 = v68, (v68 & 1) != 0))
            v81 = (int)v72;
          if (v53 != 1024 && v53 != -1024 || (v82 = v51, (v51 & 1) != 0))
            v82 = v56;
          *(_BYTE *)(v31 + v58 + v43) = (((v82 * ((v81 * v76[1] + (2048 - v81) * v79[1]) >> 4)) >> 16)
                                       + (((2048 - v82)
                                         * ((v81 * v77[1] + (2048 - v81) * *(unsigned __int8 *)(v80 + 1)) >> 4)) >> 16)
                                       + 2) >> 2;
          v83 = v79[2];
          if (v69 != 1024 && v69 != -1024 || (v68 & 1) != 0)
            v68 = (int)v72;
          if (v53 != 1024 && v53 != -1024 || (v84 = v51, (v51 & 1) != 0))
            v84 = v56;
          *(_BYTE *)(v31 + v59 + v43) = (((v84 * ((v68 * v76[2] + (2048 - v68) * v83) >> 4)) >> 16)
                                       + (((2048 - v84)
                                         * ((v68 * v77[2] + (2048 - v68) * *(unsigned __int8 *)(v80 + 2)) >> 4)) >> 16)
                                       + 2) >> 2;
          if (v197)
            goto LABEL_220;
          ++v43;
        }
        while (v192 != v43);
        v41 = v190 + 1;
      }
      while (v190 + 1 != v9);
    }
    else
    {
      v138 = 0;
      v139 = *(unsigned int *)(a2 + 44);
      if (v38 <= 1)
        v38 = 1;
      v140 = (_BYTE *)(v31 + 2);
      do
      {
        v141 = 0;
        v142 = ((double)v138 + 0.5) * v40 + -0.5;
        v143 = v142;
        v144 = v143 - floor(v142);
        v145 = vcvtmd_u64_f64(v142);
        v146 = 1.0 - v144;
        if (v142 < 0.0)
          v145 = 0;
        v147 = vcvtpd_u64_f64(v142);
        if (v147 >= v186)
          v147 = (HIDWORD(v5) - 1);
        v148 = v187 + v145 * v185;
        v149 = v187 + v147 * v185;
        v150 = v146 * 2048.0;
        v151 = vcvts_n_s32_f32(v146, 0xBuLL);
        v152 = vcvts_n_s32_f32((float)(v146 * 2048.0) - (float)(int)(float)(v146 * 2048.0), 0xBuLL);
        v153 = (float)(v146 * 2048.0);
        if (v150 < 0.0)
          v154 = -0.5;
        else
          v154 = 0.5;
        v155 = (int)(v154 + v153);
        v156 = v140;
        do
        {
          v157 = ((double)v141 + 0.5) * v39 + -0.5;
          v158 = v157;
          v159 = v158 - floor(v157);
          v160 = 1.0 - v159;
          v161 = vcvtmd_u64_f64(v157);
          if (v157 < 0.0)
            v161 = 0;
          v162 = vcvtpd_u64_f64(v157);
          if (v162 >= v37)
            v162 = (v5 - 1);
          v163 = v161 * v14;
          v164 = (unsigned __int8 *)(v148 + v163);
          v165 = (unsigned __int8 *)(v149 + v163);
          v166 = (unsigned __int8 *)(v148 + v162 * v14);
          v167 = (unsigned __int8 *)(v149 + v162 * v14);
          v168 = vcvts_n_s32_f32((float)(v160 * 2048.0) - (float)(int)(float)(v160 * 2048.0), 0xBuLL);
          if ((float)(v160 * 2048.0) < 0.0)
            v169 = -0.5;
          else
            v169 = 0.5;
          v170 = (int)(v169 + (float)(v160 * 2048.0));
          if (v168 == -1024 || v168 == 1024)
          {
            v171 = vcvts_n_s32_f32(v160, 0xBuLL);
            if ((v171 & 1) == 0)
              v170 = v171;
            if (v152 != 1024 && v152 != -1024 || (v172 = v151, (v151 & 1) != 0))
              v172 = v155;
            v173 = *v164;
            v174 = *v165;
            v175 = *v166;
            v176 = *v167;
            v177 = 2048 - v170;
          }
          else
          {
            if (v152 != -1024 && v152 != 1024 || (v172 = v151, (v151 & 1) != 0))
              v172 = v155;
            v177 = 2048 - v170;
            v173 = *v164;
            v174 = *v165;
            v175 = *v166;
            v176 = *v167;
          }
          *(v156 - 2) = (((v172 * ((v170 * v173 + v177 * v175) >> 4)) >> 16)
                       + (((2048 - v172) * ((v170 * v174 + v177 * v176) >> 4)) >> 16)
                       + 2) >> 2;
          if (v152 != 1024 && v152 != -1024 || (v178 = v151, (v151 & 1) != 0))
            v178 = v155;
          *(v156 - 1) = (((v178 * ((v170 * v164[1] + v177 * v166[1]) >> 4)) >> 16)
                       + (((2048 - v178) * ((v170 * v165[1] + v177 * v167[1]) >> 4)) >> 16)
                       + 2) >> 2;
          v179 = v164[2];
          v180 = v165[2];
          v181 = v166[2];
          v182 = v167[2];
          if (v152 != 1024 && v152 != -1024 || (v183 = v151, (v151 & 1) != 0))
            v183 = v155;
          *v156 = (((v183 * ((v170 * v179 + v177 * v181) >> 4)) >> 16)
                 + (((2048 - v183) * ((v170 * v180 + v177 * v182) >> 4)) >> 16)
                 + 2) >> 2;
          if (v197)
          {
LABEL_220:
            sub_239A444D4((uint64_t)"unknown file", 281, (uint64_t)"", (void (*)(void *))sub_239A4463C);
            sub_239A4475C();
            abort();
          }
          ++v141;
          v156 += v12;
        }
        while (v38 != v141);
        ++v138;
        v140 += v139;
      }
      while (v138 != v9);
    }
  }
  result = v198;
  v198 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239712D00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (a18)
    (*(void (**)(uint64_t))(*(_QWORD *)a18 + 8))(a18);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239712D2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned __int8 a5)
{
  float v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v10;
  BOOL v11;
  uint64_t v14;
  float v15;
  uint64_t v16;
  float v17;
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  double v25;
  uint64_t result;
  unint64_t v27;
  double v28;
  float v29;
  float v30;
  float v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  float v35;
  unsigned int v36;
  unsigned int v37;
  double v38;
  double v39;
  int v40;
  _BYTE *v41;
  uint64_t v42;
  double v43;
  float v44;
  double v45;
  double v46;
  unint64_t v47;
  unint64_t v48;
  int v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  _BYTE *v58;
  float v59;
  float v60;
  float v61;
  unsigned int v62;
  unsigned int v63;
  float v64;
  _BYTE *v65;
  unsigned int v66;
  unsigned int v67;
  unint64_t v68;
  int v69;
  float v70;
  _BYTE *v71;
  unsigned int v72;
  unsigned int v73;
  _BYTE *v74;
  unsigned int v75;
  float v76;
  unsigned int v77;
  double v78;
  double v79;
  double v80;
  unsigned int v81;
  int v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  float v89;
  float v90;
  float v91;
  float v92;
  float v93;
  float v94;
  float v95;
  float v96;
  int v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  int v111;
  int v112;
  unint64_t v113;
  float v114;
  float v115;
  float v116;
  float v117[3];
  _DWORD v118[3];
  _DWORD v119[3];
  _DWORD v120[5];

  v6 = *(_QWORD *)(a1 + 40);
  if ((_DWORD)v6)
    v7 = HIDWORD(v6) == 0;
  else
    v7 = 1;
  if (v7)
    sub_239EC1F84(a1, a2);
  v10 = HIDWORD(*(_QWORD *)(a2 + 56));
  v113 = *(_QWORD *)(a2 + 56);
  if (v10)
    v11 = *(_QWORD *)(a2 + 56) == 0;
  else
    v11 = 1;
  if (v11)
    sub_239EC1FB0(a1, a2);
  if (a3 == 1 && 3 * v113 != *(_DWORD *)(a2 + 52))
    sub_239EC2034(a1, a2);
  v108 = (v6 - 1);
  v105 = (HIDWORD(v6) - 1);
  v107 = a5;
  if (a5)
    v14 = 4;
  else
    v14 = 3;
  v15 = (float)v113 / (float)v6;
  v16 = *(_QWORD *)(a2 + 24);
  v17 = (float)v10 / (float)HIDWORD(v6);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v18 = HIDWORD(*(_QWORD *)(a2 + 56));
    v19 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (v20)
    {
      p_shared_owners = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldxr(p_shared_owners);
      while (__stxr(v22 + 1, p_shared_owners));
      do
        v23 = __ldaxr(p_shared_owners);
      while (__stlxr(v23 - 1, p_shared_owners));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v19 + 88))(v19, 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 24);
    v10 = v18;
  }
  v24 = 0;
  v25 = (float)(1.0 / v15);
  v104 = *(unsigned int *)(a2 + 52);
  v103 = 2 * v10;
  v102 = 3 * v10;
  result = 2048;
  v101 = v10;
  while (2)
  {
    v27 = 0;
    v28 = ((double)v24 + 0.5) * (float)(1.0 / v17) + -0.5;
    v29 = v28;
    v30 = v29 - floor(v28);
    v31 = 1.0 - v30;
    v32 = vcvtmd_u64_f64(v28);
    if (v28 >= 0.0)
      v33 = v32;
    else
      v33 = 0;
    v34 = vcvtpd_u64_f64(v28);
    if (v34 >= v105)
      v34 = v105;
    v111 = v34;
    v112 = v33;
    v109 = v34 >> 1;
    v110 = v33 >> 1;
    v35 = v31 * 2048.0;
    v36 = vcvts_n_s32_f32(v31, 0xBuLL);
    v37 = vcvts_n_s32_f32((float)(v31 * 2048.0) - (float)(int)(float)(v31 * 2048.0), 0xBuLL);
    v38 = (float)(v31 * 2048.0);
    if (v35 < 0.0)
      v39 = -0.5;
    else
      v39 = 0.5;
    v40 = (int)(v39 + v38);
    v106 = (v10 + v24) * v113;
    do
    {
      v42 = 0;
      v43 = ((double)v27 + 0.5) * v25 + -0.5;
      v44 = v43;
      v45 = floor(v43);
      v46 = v44 - v45;
      v47 = vcvtmd_u64_f64(v43);
      if (v43 < 0.0)
        v47 = 0;
      v48 = vcvtpd_u64_f64(v43);
      v49 = *(_DWORD *)(a1 + 48);
      v50 = *(_DWORD *)(a1 + 52);
      v51 = v49 * v47;
      v52 = v50 * v112;
      v53 = *(_QWORD *)(a1 + 32);
      v54 = *(_DWORD *)(a1 + 128);
      v55 = *(_DWORD *)(a1 + 132);
      v56 = v54 * (v47 >> 1);
      v57 = *(_QWORD *)(a1 + 88);
      v58 = (_BYTE *)(v57 + (v55 * v110 + v56));
      v59 = v46;
      v60 = 1.0 - v59;
      if (v48 >= v108)
        v48 = v108;
      LOBYTE(v43) = *(_BYTE *)(v53 + (v52 + v51));
      v61 = (float)LODWORD(v43);
      LOBYTE(v45) = *v58;
      *(float *)&v62 = (float)LODWORD(v45);
      LOBYTE(v5) = v58[1];
      *(float *)&v63 = (float)LODWORD(v5);
      *(float *)v120 = v61;
      v120[1] = v62;
      v120[2] = v63;
      LOBYTE(v61) = *(_BYTE *)(v53 + (v50 * v111 + v51));
      v64 = (float)LODWORD(v61);
      v65 = (_BYTE *)(v57 + (v55 * v109 + v56));
      LOBYTE(v62) = *v65;
      *(float *)&v66 = (float)v62;
      LOBYTE(v63) = v65[1];
      *(float *)&v67 = (float)v63;
      *(float *)v119 = v64;
      v119[1] = v66;
      v119[2] = v67;
      v68 = v48 >> 1;
      v69 = v49 * v48;
      LOBYTE(v64) = *(_BYTE *)(v53 + (v52 + v69));
      v70 = (float)LODWORD(v64);
      LODWORD(v68) = v54 * v68;
      v71 = (_BYTE *)(v57 + (v55 * v110 + v68));
      LOBYTE(v66) = *v71;
      *(float *)&v72 = (float)v66;
      LOBYTE(v67) = v71[1];
      *(float *)&v73 = (float)v67;
      *(float *)v118 = v70;
      v118[1] = v72;
      v118[2] = v73;
      LOBYTE(v70) = *(_BYTE *)(v53 + (v50 * v111 + v69));
      v74 = (_BYTE *)(v57 + (v55 * v109 + v68));
      LOBYTE(v72) = *v74;
      LOBYTE(v73) = v74[1];
      v117[0] = (float)LODWORD(v70);
      v117[1] = (float)v72;
      v117[2] = (float)v73;
      v75 = vcvts_n_s32_f32(v60, 0xBuLL);
      v76 = v60 * 2048.0;
      v77 = vcvts_n_s32_f32((float)(v60 * 2048.0) - (float)(int)(float)(v60 * 2048.0), 0xBuLL);
      v78 = (float)(v60 * 2048.0);
      if (v76 < 0.0)
        v79 = -0.5;
      else
        v79 = 0.5;
      v80 = v79 + v78;
      do
      {
        if (v77 != 1024 && v77 != -1024 || (v82 = v75, (v75 & 1) != 0))
          v82 = (int)v80;
        if (v37 != 1024 && v37 != -1024 || (v81 = v36, (v36 & 1) != 0))
          v81 = v40;
        *(&v114 + v42) = (float)((((v81
                                                   * ((v82 * (int)*(float *)&v120[v42]
                                                     + (2048 - v82) * (int)*(float *)&v118[v42]) >> 4)) >> 16)
                                                 + (((2048 - v81)
                                                   * ((v82 * (int)*(float *)&v119[v42]
                                                                   + (2048 - v82) * (int)v117[v42]) >> 4)) >> 16)
                                                 + 2) >> 2);
        ++v42;
      }
      while (v14 != v42);
      if (*(_DWORD *)a1 == 875704422)
      {
        v87 = (float)(v116 + -128.0);
        v84 = v87 * 1.402 + v114;
        v88 = (float)(v115 + -128.0);
        v85 = v114 + v88 * -0.344136 + v87 * -0.714136;
        v86 = v88 * 1.772 + v114;
      }
      else
      {
        if (*(_DWORD *)a1 != 875704438)
          sub_239EC1FDC(2048, (uint64_t)&v114);
        v83 = v114 * 1.16438;
        v84 = v83 + v116 * 1.596 + -222.9216;
        v85 = v83 + v115 * -0.39176 + v116 * -0.81297 + 135.576;
        v86 = v83 + v115 * 2.01723 + -276.836;
      }
      v89 = v84 + 0.5;
      v90 = v85 + 0.5;
      v91 = v86 + 0.5;
      v5 = 255.0;
      if (v89 <= 255.0)
        v92 = v89;
      else
        v92 = 255.0;
      if (v89 >= 0.0)
        v93 = v92;
      else
        v93 = 0.0;
      if (v90 <= 255.0)
        v94 = v90;
      else
        v94 = 255.0;
      if (v90 >= 0.0)
        v95 = v94;
      else
        v95 = 0.0;
      if (v91 <= 255.0)
        v5 = v91;
      if (v91 >= 0.0)
        v96 = v5;
      else
        v96 = 0.0;
      v97 = (int)v93;
      v98 = (int)v95;
      v99 = (int)v96;
      if (a3)
      {
        *(_BYTE *)(v16 + v24 * v113 + v27) = v97;
        *(_BYTE *)(v16 + v106 + v27) = v98;
        *(_BYTE *)(v16 + (v103 + v24) * v113 + v27) = v99;
        if (a3 == 1)
        {
          if (v107)
          {
            v100 = v14 - 3;
            do
            {
              *(_BYTE *)(v16 + v27 + (v24 + v102) * v113) = *(_BYTE *)(*(_QWORD *)(a4 + 24)
                                                                     + (*(_DWORD *)(a4 + 40) * v27
                                                                                    + *(_DWORD *)(a4 + 44) * v24));
              --v100;
            }
            while (v100);
          }
          goto LABEL_36;
        }
      }
      else
      {
        v41 = (_BYTE *)(v16 + v24 * v104 + 3 * v27);
        *v41 = v97;
        v41[1] = v98;
        v41[2] = v99;
      }
      if (v107)
        sub_239EC2008(2048, (uint64_t)&v114);
LABEL_36:
      ++v27;
    }
    while (v27 != v113);
    ++v24;
    v10 = v101;
    if (v24 != v101)
      continue;
    return result;
  }
}

int sub_239713404(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned __int8 a5)
{
  float v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  unint64_t v30;
  double v31;
  float v32;
  float v33;
  float v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  float v38;
  unsigned int v39;
  double v40;
  double v41;
  int v42;
  _BYTE *v43;
  uint64_t v44;
  double v45;
  float v46;
  double v47;
  double v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  _BYTE *v61;
  float v62;
  float v63;
  float v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  float v68;
  _BYTE *v69;
  unsigned int v70;
  unsigned int v71;
  float v72;
  _BYTE *v73;
  unsigned int v74;
  unsigned int v75;
  _BYTE *v76;
  unsigned int v77;
  float v78;
  unsigned int v79;
  double v80;
  double v81;
  double v82;
  int v83;
  int v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  float v91;
  float v92;
  float v93;
  float v94;
  float v95;
  float v96;
  float v97;
  float v98;
  int v99;
  int v100;
  int v101;
  uint64_t v102;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  int v117;
  int v118;
  float v119;
  float v120;
  float v121;
  float v122[3];
  _DWORD v123[3];
  _DWORD v124[3];
  _DWORD v125[5];

  v6 = *(_QWORD *)(a1 + 40);
  v7 = HIDWORD(v6);
  if ((_DWORD)v6)
    v8 = HIDWORD(v6) == 0;
  else
    v8 = 1;
  if (v8)
    sub_239EC1F84(a1, a2);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = HIDWORD(v10);
  if (HIDWORD(v10))
    v12 = *(_QWORD *)(a2 + 32) == 0;
  else
    v12 = 1;
  if (v12)
    sub_239EC1FB0(a1, a2);
  v15 = a1;
  v16 = *(_QWORD *)(a2 + 40);
  v17 = HIDWORD(v16);
  if (a3 == 1 && HIDWORD(v16) != (_DWORD)v10)
    sub_239EC2034(a1, a2);
  v113 = a5;
  if (a5)
    v18 = 4;
  else
    v18 = 3;
  v19 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v19)
  {
    v116 = *(_QWORD *)(a2 + 40);
    v20 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (v21)
    {
      p_shared_owners = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(p_shared_owners);
      while (__stxr(v23 + 1, p_shared_owners));
      do
        v24 = __ldaxr(p_shared_owners);
      while (__stlxr(v24 - 1, p_shared_owners));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
    v19 = *(_QWORD *)(a2 + 24);
    LODWORD(v17) = *(_DWORD *)(a2 + 44);
    v11 = HIDWORD(v10);
    LODWORD(v16) = v116;
    LODWORD(v7) = HIDWORD(v6);
  }
  if (v18 > v10)
    return a1;
  v25 = 0;
  v26 = v10 / v18;
  v112 = (v6 - 1);
  v27 = (float)(1.0 / (float)((float)v26 / (float)v6));
  v28 = (float)(1.0 / (float)((float)v11 / (float)v7));
  v107 = v17;
  v108 = (v7 - 1);
  v110 = v16;
  v106 = 3 * v11;
  v105 = 2 * v11;
  if (v26 <= 1)
    v29 = 1;
  else
    v29 = v10 / v18;
  v111 = v29;
  v109 = v10 / v18;
  v104 = v11;
  while (2)
  {
    v30 = 0;
    v31 = ((double)v25 + 0.5) * v28 + -0.5;
    v32 = v31;
    v33 = v32 - floor(v31);
    v34 = 1.0 - v33;
    v35 = vcvtmd_u64_f64(v31);
    if (v31 >= 0.0)
      v36 = v35;
    else
      v36 = 0;
    v37 = vcvtpd_u64_f64(v31);
    if (v37 >= v108)
      v37 = v108;
    v117 = v37;
    v118 = v36;
    v114 = v37 >> 1;
    v115 = v36 >> 1;
    v38 = v34 * 2048.0;
    LODWORD(a1) = vcvts_n_s32_f32(v34, 0xBuLL);
    v39 = vcvts_n_s32_f32((float)(v34 * 2048.0) - (float)(int)(float)(v34 * 2048.0), 0xBuLL);
    v40 = (float)(v34 * 2048.0);
    if (v38 < 0.0)
      v41 = -0.5;
    else
      v41 = 0.5;
    v42 = (int)(v41 + v40);
    do
    {
      v44 = 0;
      v45 = ((double)v30 + 0.5) * v27 + -0.5;
      v46 = v45;
      v47 = floor(v45);
      v48 = v46 - v47;
      v49 = vcvtmd_u64_f64(v45);
      if (v45 < 0.0)
        v49 = 0;
      v50 = vcvtpd_u64_f64(v45);
      v51 = *(_DWORD *)(v15 + 48);
      v52 = *(_DWORD *)(v15 + 52);
      v53 = v51 * v49;
      v54 = v52 * v118;
      v55 = *(_QWORD *)(v15 + 32);
      v56 = v49 >> 1;
      v58 = *(_DWORD *)(v15 + 128);
      v57 = *(_DWORD *)(v15 + 132);
      v59 = v58 * v56;
      v60 = *(_QWORD *)(v15 + 88);
      v61 = (_BYTE *)(v60 + (v57 * v115 + v59));
      v62 = v48;
      v63 = 1.0 - v62;
      if (v50 >= v112)
        v50 = v112;
      LOBYTE(v45) = *(_BYTE *)(v55 + (v54 + v53));
      v64 = (float)LODWORD(v45);
      LOBYTE(v47) = *v61;
      *(float *)&v65 = (float)LODWORD(v47);
      LOBYTE(v5) = v61[1];
      *(float *)&v66 = (float)LODWORD(v5);
      *(float *)v125 = v64;
      v125[1] = v65;
      v125[2] = v66;
      v67 = v52 * v117;
      LOBYTE(v64) = *(_BYTE *)(v55 + (v67 + v53));
      v68 = (float)LODWORD(v64);
      v69 = (_BYTE *)(v60 + (v57 * v114 + v59));
      LOBYTE(v65) = *v69;
      *(float *)&v70 = (float)v65;
      LOBYTE(v66) = v69[1];
      *(float *)&v71 = (float)v66;
      *(float *)v124 = v68;
      v124[1] = v70;
      v124[2] = v71;
      LOBYTE(v68) = *(_BYTE *)(v55 + (v54 + v51 * v50));
      v72 = (float)LODWORD(v68);
      LODWORD(v69) = v58 * (v50 >> 1);
      v73 = (_BYTE *)(v60 + (v57 * v115 + (_DWORD)v69));
      LOBYTE(v70) = *v73;
      *(float *)&v74 = (float)v70;
      LOBYTE(v71) = v73[1];
      *(float *)&v75 = (float)v71;
      *(float *)v123 = v72;
      v123[1] = v74;
      v123[2] = v75;
      LOBYTE(v72) = *(_BYTE *)(v55 + (v67 + v51 * v50));
      v76 = (_BYTE *)(v60 + (v57 * v114 + (_DWORD)v69));
      LOBYTE(v74) = *v76;
      LOBYTE(v75) = v76[1];
      v122[0] = (float)LODWORD(v72);
      v122[1] = (float)v74;
      v122[2] = (float)v75;
      v77 = vcvts_n_s32_f32(v63, 0xBuLL);
      v78 = v63 * 2048.0;
      v79 = vcvts_n_s32_f32((float)(v63 * 2048.0) - (float)(int)(float)(v63 * 2048.0), 0xBuLL);
      v80 = (float)(v63 * 2048.0);
      if (v78 < 0.0)
        v81 = -0.5;
      else
        v81 = 0.5;
      v82 = v81 + v80;
      do
      {
        if (v79 != 1024 && v79 != -1024 || (v84 = v77, (v77 & 1) != 0))
          v84 = (int)v82;
        if (v39 != 1024 && v39 != -1024 || (v83 = a1, (a1 & 1) != 0))
          v83 = v42;
        *(&v119 + v44) = (float)((((v83
                                                                 * ((v84 * (int)*(float *)&v125[v44]
                                                                   + (2048 - v84) * (int)*(float *)&v123[v44]) >> 4)) >> 16)
                                                 + (((2048 - v83)
                                                   * ((v84 * (int)*(float *)&v124[v44]
                                                                   + (2048 - v84) * (int)v122[v44]) >> 4)) >> 16)
                                                 + 2) >> 2);
        ++v44;
      }
      while (v18 != v44);
      if (*(_DWORD *)v15 == 875704422)
      {
        v89 = (float)(v121 + -128.0);
        v86 = v89 * 1.402 + v119;
        v90 = (float)(v120 + -128.0);
        v87 = v119 + v90 * -0.344136 + v89 * -0.714136;
        v88 = v90 * 1.772 + v119;
      }
      else
      {
        if (*(_DWORD *)v15 != 875704438)
          sub_239EC1FDC(a1, (uint64_t)v125);
        v85 = v119 * 1.16438;
        v86 = v85 + v121 * 1.596 + -222.9216;
        v87 = v85 + v120 * -0.39176 + v121 * -0.81297 + 135.576;
        v88 = v85 + v120 * 2.01723 + -276.836;
      }
      v91 = v86 + 0.5;
      v92 = v87 + 0.5;
      v93 = v88 + 0.5;
      v5 = 255.0;
      if (v91 <= 255.0)
        v94 = v91;
      else
        v94 = 255.0;
      if (v91 >= 0.0)
        v95 = v94;
      else
        v95 = 0.0;
      if (v92 <= 255.0)
        v96 = v92;
      else
        v96 = 255.0;
      if (v92 >= 0.0)
        v97 = v96;
      else
        v97 = 0.0;
      if (v93 <= 255.0)
        v5 = v93;
      if (v93 >= 0.0)
        v98 = v5;
      else
        v98 = 0.0;
      v99 = (int)v95;
      v100 = (int)v97;
      v101 = (int)v98;
      if (a3)
      {
        *(_BYTE *)(v19 + v25 * v109 + v30) = v99;
        *(_BYTE *)(v19 + (v11 + v25) * v109 + v30) = v100;
        *(_BYTE *)(v19 + (v105 + v25) * v109 + v30) = v101;
        if (a3 == 1)
        {
          if (v113)
          {
            v102 = v18 - 3;
            do
            {
              *(_BYTE *)(v19 + v30 + (v25 + v106) * v109) = *(_BYTE *)(*(_QWORD *)(a4 + 24)
                                                                     + (*(_DWORD *)(a4 + 40) * v30
                                                                                    + *(_DWORD *)(a4 + 44) * v25));
              --v102;
            }
            while (v102);
          }
          goto LABEL_41;
        }
      }
      else
      {
        v43 = (_BYTE *)(v19 + v25 * v107 + v30 * v110);
        *v43 = v99;
        v43[1] = v100;
        v43[2] = v101;
      }
      if (v113)
        sub_239EC2008(a1, (uint64_t)v125);
LABEL_41:
      ++v30;
    }
    while (v30 != v111);
    ++v25;
    v11 = v104;
    if (v25 != v104)
      continue;
    return a1;
  }
}

void sub_239713AF4(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  int v5;
  __n128 v6;
  __n128 v7;
  unsigned int v8;
  unsigned int v9;
  unint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  float v20;
  float v21;
  unsigned int v22;
  unsigned int v23;
  unint64_t v24;
  int v25;
  int v26;
  float32x4_t v27;
  int8x16_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  float *v33;
  float *v34;
  uint64_t v35;
  int v36;
  float v37;
  float v38;
  float32x4_t *v39;
  int8x16_t *v40;
  uint64_t v41;
  int8x16_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  int8x16_t v47;
  float32x4_t v48;
  __n128 v49;
  __n128 v50;
  uint64_t (**v51)();
  _QWORD v52[3];
  uint64_t v53;
  int v54;
  char v55;
  uint64_t (**v56)();
  _QWORD v57[3];
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  char v62;

  v49.n128_f64[0] = a4;
  v50.n128_f64[0] = a3;
  v5 = *(_DWORD *)(a1 + 56);
  if (v5 == 4)
  {
    v56 = &off_250ADD920;
    sub_23971770C(a1, (uint64_t)v57);
    v51 = &off_250ADD920;
    sub_239709458(&v59, v52);
    v21 = v49.n128_f32[0];
    v20 = v50.n128_f32[0];
    if (!v60)
    {
LABEL_53:
      *(_QWORD *)a2 = &off_250ADB778;
      sub_2397096A8((uint64_t)&v51, a2 + 8);
      sub_239416DA0((uint64_t)v52);
      nullsub_4(&v51);
      sub_239416DA0((uint64_t)v57);
LABEL_54:
      nullsub_4(&v56);
      return;
    }
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = v61;
    v26 = v54;
    v27 = (float32x4_t)vdupq_lane_s32((int32x2_t)v50.n128_u64[0], 0);
    v28 = (int8x16_t)vdupq_lane_s32((int32x2_t)v49.n128_u64[0], 0);
    v47 = v28;
    v48 = v27;
    while (1)
    {
      v29 = v58;
      if (v62)
        v30 = v58 == 0;
      else
        v30 = 1;
      if (!v30)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v57[0] + 88))(v57[0], 1, "unknown location");
        v29 = v58;
        v21 = v49.n128_f32[0];
        v20 = v50.n128_f32[0];
        v28 = v47;
        v27 = v48;
      }
      v31 = v53;
      if (v55 && v53)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v52[0] + 88))(v52[0], 1, "unknown location");
        v31 = v53;
        v21 = v49.n128_f32[0];
        v20 = v50.n128_f32[0];
        v28 = v47;
        v27 = v48;
      }
      v32 = v59;
      if (!v59)
        goto LABEL_25;
      v33 = (float *)(v31 + 4 * (v26 * v24));
      v34 = (float *)(v29 + 4 * (v25 * v24));
      if (v59 < 8
        || 4 * (v26 * v24) + v31 - (4 * (unint64_t)(v25 * v24) + v29) < 0x20)
      {
        break;
      }
      v35 = v59 & 0xFFFFFFF8;
      v33 += v35;
      v34 += v35;
      v39 = (float32x4_t *)(v29 + 4 * v23 + 16);
      v40 = (int8x16_t *)(v31 + 4 * v22 + 16);
      v41 = v35;
      do
      {
        v42 = vandq_s8(v28, (int8x16_t)vcgeq_f32(*v39, v27));
        v40[-1] = vandq_s8(v28, (int8x16_t)vcgeq_f32(v39[-1], v27));
        *v40 = v42;
        v39 += 2;
        v40 += 2;
        v41 -= 8;
      }
      while (v41);
      if (v35 != v32)
        goto LABEL_38;
LABEL_25:
      ++v24;
      v23 += v25;
      v22 += v26;
      if (v24 >= v60)
        goto LABEL_53;
    }
    LODWORD(v35) = 0;
LABEL_38:
    v36 = v32 - v35;
    do
    {
      v37 = *v34++;
      if (v37 >= v20)
        v38 = v21;
      else
        v38 = 0.0;
      *v33++ = v38;
      --v36;
    }
    while (v36);
    goto LABEL_25;
  }
  if (v5 == 1)
  {
    v56 = &off_250ADB628;
    sub_2397175E0(a1, (uint64_t)v57);
    v51 = &off_250ADB628;
    sub_2395793A0(&v59, v52);
    v6 = v49;
    v7 = v50;
    if (v60)
    {
      v8 = 0;
      v9 = 0;
      v10 = 0;
      v11 = v61;
      v12 = v54;
      do
      {
        v13 = v58;
        if (v62)
          v14 = v58 == 0;
        else
          v14 = 1;
        if (!v14)
        {
          (*(void (**)(_QWORD, uint64_t, const char *, __n128, __n128))(*(_QWORD *)v57[0] + 88))(v57[0], 1, "unknown location", v6, v7);
          v13 = v58;
          v7 = v50;
        }
        v15 = v53;
        if (v55)
          v16 = v53 == 0;
        else
          v16 = 1;
        if (!v16)
        {
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v52[0] + 88))(v52[0], 1, "unknown location");
          v15 = v53;
          v7 = v50;
        }
        if (v59)
        {
          v17 = 0;
          v18 = v15 + v9;
          do
          {
            v6.n128_u8[0] = *(_BYTE *)(v13 + v8 + v17);
            v6.n128_f32[0] = (float)v6.n128_u32[0];
            if (v6.n128_f32[0] >= v7.n128_f32[0])
              v19 = (int)v49.n128_f32[0];
            else
              v19 = 0;
            *(_BYTE *)(v18 + v17++) = v19;
          }
          while (v17 < v59);
        }
        ++v10;
        v9 += v12;
        v8 += v11;
      }
      while (v10 < v60);
    }
    *(_QWORD *)a2 = &off_250ADB778;
    sub_239709384((uint64_t)&v51, a2 + 8);
    sub_239416DA0((uint64_t)v52);
    nullsub_4(&v51);
    sub_239416DA0((uint64_t)v57);
    goto LABEL_54;
  }
  v44 = *(_QWORD *)(a1 + 8);
  v43 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a2 = &off_250ADB778;
  *(_QWORD *)(a2 + 8) = v44;
  *(_QWORD *)(a2 + 16) = v43;
  if (v43)
  {
    v45 = (unint64_t *)(v43 + 8);
    do
      v46 = __ldxr(v45);
    while (__stxr(v46 + 1, v45));
  }
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 54) = *(_QWORD *)(a1 + 54);
}

void sub_239713EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  j_nullsub_4_89(v28);
  sub_239416DA0(v30);
  nullsub_4(&a17);
  sub_239416DA0(v29);
  nullsub_4(&a28);
  _Unwind_Resume(a1);
}

void sub_239713FB0(_DWORD *a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>, unint64_t a4@<D0>, unint64_t a5@<D1>)
{
  double v6;
  double v7;
  __n128 v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __n128 v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t (***v17)();
  uint64_t (**v18)();
  uint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  __int16 v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  uint64_t (**v27)();
  _BYTE v28[120];
  __int16 v29;

  v6 = *(double *)&a5;
  v7 = *(double *)&a4;
  if (*(double *)&a4 <= 0.0 || *(double *)&a5 <= 0.0)
  {
    LODWORD(a4) = a1[8];
    LODWORD(a5) = a1[9];
    if ((double)a5 * v6 * ((double)a4 * v7) <= 0.0)
      sub_239EC2060();
  }
  switch(a1[14])
  {
    case 1:
      v23 = &off_250ADB628;
      if (a2 == 1)
      {
        sub_2397175E0((uint64_t)a1, (uint64_t)&v24);
        sub_2397147B0((uint64_t)&v23, (uint64_t)&v27, v7, v6);
      }
      else
      {
        sub_2397175E0((uint64_t)a1, (uint64_t)&v24);
        sub_2397149A4((uint64_t)&v23, (uint64_t)&v27, v7, v6);
      }
      *a3 = &off_250ADB778;
      sub_239709384((uint64_t)&v27, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v28);
      nullsub_4(&v27);
      sub_239416DA0((uint64_t)&v24);
      goto LABEL_32;
    case 4:
      v23 = &off_250ADD920;
      if (a2 == 1)
      {
        sub_23971770C((uint64_t)a1, (uint64_t)&v24);
        sub_239714D18((uint64_t)&v23, (uint64_t)&v27, v7, v6);
      }
      else
      {
        sub_23971770C((uint64_t)a1, (uint64_t)&v24);
        sub_239714F10((uint64_t)&v23, (uint64_t)&v27, v7, v6);
      }
      *a3 = &off_250ADB778;
      sub_2397096A8((uint64_t)&v27, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v28);
      nullsub_4(&v27);
      sub_239416DA0((uint64_t)&v24);
      goto LABEL_32;
    case 0x15:
      v23 = &off_250ADBEA0;
      if (a2 == 1)
      {
        sub_239717DA4((uint64_t)a1, (uint64_t)&v24);
        sub_2397151F0((uint64_t)&v23, (uint64_t)&v27, v7, v6);
      }
      else
      {
        sub_239717DA4((uint64_t)a1, (uint64_t)&v24);
        sub_239715408((uint64_t)&v23, (uint64_t)&v27, v7, v6);
      }
      *a3 = &off_250ADB778;
      sub_239709138((uint64_t)&v27, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v28);
      nullsub_4(&v27);
      sub_239416DA0((uint64_t)&v24);
      goto LABEL_32;
    case 0x18:
      v23 = &off_250ADDC30;
      if (a2 == 1)
      {
        sub_2397184F4((uint64_t)a1, (uint64_t)&v24);
        sub_2397158AC((uint64_t)&v23, (uint64_t)&v27, v7, v6);
      }
      else
      {
        sub_2397184F4((uint64_t)a1, (uint64_t)&v24);
        sub_239715AC8((uint64_t)&v23, (uint64_t)&v27, v7, v6);
      }
      *a3 = &off_250ADB778;
      sub_23970977C((uint64_t)&v27, (uint64_t)(a3 + 1));
      sub_239416DA0((uint64_t)v28);
      nullsub_4(&v27);
      sub_239416DA0((uint64_t)&v24);
LABEL_32:
      v17 = &v23;
      goto LABEL_33;
    default:
      v18 = &off_250ADB210;
      sub_23948E51C((uint64_t)a1, (uint64_t)&v19);
      sub_2397078F8((uint64_t)&v18, 21, &v23);
      v27 = &off_250ADBEA0;
      sub_239469644((uint64_t)&v23, (uint64_t)v28);
      v9 = nullsub_4(&v26);
      v10 = v25;
      if (v25)
      {
        p_shared_owners = (unint64_t *)&v25->__shared_owners_;
        do
          v12 = __ldaxr(p_shared_owners);
        while (__stlxr(v12 - 1, p_shared_owners));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v10->__on_zero_shared)(v10, v9);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      j_nullsub_4_89(&v23);
      v13 = nullsub_4(&v21);
      v14 = v20;
      if (!v20)
        goto LABEL_16;
      v15 = (unint64_t *)&v20->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v14->__on_zero_shared)(v14, v13);
        std::__shared_weak_count::__release_weak(v14);
        nullsub_4(&v18);
        if (a2 == 1)
          goto LABEL_17;
      }
      else
      {
LABEL_16:
        nullsub_4(&v18);
        if (a2 == 1)
        {
LABEL_17:
          v18 = &off_250ADBEA0;
          sub_239827500((uint64_t)&v19, (uint64_t)v28);
          v22 = v29;
          sub_2397151F0((uint64_t)&v18, (uint64_t)&v23, v7, v6);
          *a3 = &off_250ADB778;
          sub_239709138((uint64_t)&v23, (uint64_t)(a3 + 1));
          goto LABEL_36;
        }
      }
      v18 = &off_250ADBEA0;
      sub_239827500((uint64_t)&v19, (uint64_t)v28);
      v22 = v29;
      sub_239715408((uint64_t)&v18, (uint64_t)&v23, v7, v6);
      *a3 = &off_250ADB778;
      sub_239709138((uint64_t)&v23, (uint64_t)(a3 + 1));
LABEL_36:
      sub_239416DA0((uint64_t)&v24);
      nullsub_4(&v23);
      sub_239416DA0((uint64_t)&v19);
      nullsub_4(&v18);
      sub_239416DA0((uint64_t)v28);
      v17 = &v27;
LABEL_33:
      nullsub_4(v17);
      return;
  }
}

void sub_239714504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  j_nullsub_4_89(v27);
  sub_239416DA0(v30 + 8);
  nullsub_4(&a27);
  sub_239416DA0(v29);
  nullsub_4(&a10);
  sub_239416DA0(v28);
  nullsub_4(v31 - 200);
  _Unwind_Resume(a1);
}

void sub_239714750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  nullsub_4(&a27);
  _Unwind_Resume(a1);
}

void sub_239714764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  nullsub_4(v27 - 200);
  sub_239422DD0((uint64_t)&a27);
  sub_239416FF8((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_239714788(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23971479C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397147B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t i;
  unint64_t j;
  _DWORD v24[2];

  v8 = *(_QWORD *)(a1 + 64);
  v9 = vcvtad_u64_f64((double)v8 * a3);
  v10 = vcvtad_u64_f64((double)HIDWORD(v8) * a4);
  v24[0] = v9;
  v24[1] = v10;
  *(_QWORD *)a2 = &off_250ADB628;
  v11 = (_QWORD *)(a2 + 8);
  result = sub_2395793A0(v24, (_WORD *)(a2 + 8));
  v13 = v8;
  if (v8 == v9 && HIDWORD(v8) == v10)
    return sub_2395792C4(a1, a2);
  v15 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a1 + 80) && v15)
  {
    v16 = *(_QWORD *)(a1 + 8);
    v17 = *(std::__shared_weak_count **)(a1 + 16);
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
      do
        v20 = __ldaxr(p_shared_owners);
      while (__stlxr(v20 - 1, p_shared_owners));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
    v15 = *(_QWORD *)(a1 + 56);
  }
  v21 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 80) && v21)
  {
    result = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v11 + 88))(*v11, 1, "unknown location");
    v21 = *(_QWORD *)(a2 + 32);
  }
  if (v10 && v9)
  {
    for (i = 0; i != v10; ++i)
    {
      for (j = 0; j != v9; ++j)
        *(_BYTE *)(v21 + j) = *(_BYTE *)(v15
                                       + v13 * (unint64_t)(1.0 / a4 * (double)i)
                                       + (unint64_t)(1.0 / a3 * (double)j));
      v21 += v9;
    }
  }
  return result;
}

void sub_23971496C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239416DA0(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239714990(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unsigned int sub_2397149A4@<W0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unsigned int result;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t i;
  unint64_t v24;
  double v25;
  float v26;
  float v27;
  float v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  float v34;
  double v35;
  double v36;
  int v37;
  unsigned int v38;
  double v39;
  float v40;
  float v41;
  unint64_t v42;
  float v43;
  unint64_t v44;
  unint64_t v45;
  float v46;
  int v47;
  unsigned int v48;
  BOOL v50;
  double v51;
  double v52;
  _DWORD v53[2];

  v8 = *(_QWORD *)(a1 + 64);
  v9 = HIDWORD(v8);
  v10 = vcvtad_u64_f64((double)v8 * a3);
  v11 = vcvtad_u64_f64((double)HIDWORD(v8) * a4);
  v53[0] = v10;
  v53[1] = v11;
  *(_QWORD *)a2 = &off_250ADB628;
  v12 = (_QWORD *)(a2 + 8);
  result = sub_2395793A0(v53, (_WORD *)(a2 + 8));
  v14 = v8;
  if (v8 == v10 && v9 == v11)
    return sub_2395792C4(a1, a2);
  v16 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a1 + 80) && v16)
  {
    v17 = *(_QWORD *)(a1 + 8);
    v18 = *(std::__shared_weak_count **)(a1 + 16);
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(p_shared_owners);
      while (__stxr(v20 + 1, p_shared_owners));
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
    v16 = *(_QWORD *)(a1 + 56);
  }
  v22 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 80) && v22)
  {
    result = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v12 + 88))(*v12, 1, "unknown location");
    v22 = *(_QWORD *)(a2 + 32);
  }
  if (v11 && v10)
  {
    for (i = 0; i != v11; ++i)
    {
      v24 = 0;
      v25 = 1.0 / a4 * ((double)i + 0.5) + -0.5;
      v26 = v25;
      v27 = v26 - floor(v25);
      v28 = 1.0 - v27;
      v29 = vcvtmd_u64_f64(v25);
      if (v25 < 0.0)
        v29 = 0;
      v30 = vcvtpd_u64_f64(v25);
      if (v9 - 1 < v30)
        v30 = v9 - 1;
      v31 = v29 * v14;
      v32 = v30 * v14;
      v33 = vcvts_n_s32_f32(v28, 0xBuLL);
      v34 = v28 * 2048.0;
      result = vcvts_n_s32_f32((float)(v28 * 2048.0) - (float)(int)(float)(v28 * 2048.0), 0xBuLL);
      v35 = (float)(v28 * 2048.0);
      if (v34 < 0.0)
        v36 = -0.5;
      else
        v36 = 0.5;
      v37 = (int)(v36 + v35);
      do
      {
        v39 = 1.0 / a3 * ((double)v24 + 0.5) + -0.5;
        v40 = v39;
        v41 = v40 - floor(v39);
        v42 = vcvtmd_u64_f64(v39);
        v43 = 1.0 - v41;
        if (v39 < 0.0)
          v42 = 0;
        v44 = vcvtpd_u64_f64(v39);
        if (v14 - 1 >= v44)
          v45 = v44;
        else
          v45 = v14 - 1;
        v46 = v43 * 2048.0;
        v47 = vcvts_n_s32_f32(v43, 0xBuLL);
        v48 = vcvts_n_s32_f32((float)(v43 * 2048.0) - (float)(int)(float)(v43 * 2048.0), 0xBuLL);
        v50 = v48 == 1024 || v48 == -1024;
        if ((v47 & 1) != 0 || !v50)
        {
          v51 = v46;
          if (v46 < 0.0)
            v52 = -0.5;
          else
            v52 = 0.5;
          v47 = (int)(v52 + v51);
          if (result == 1024)
            goto LABEL_51;
        }
        else if (result == 1024)
        {
          goto LABEL_51;
        }
        if (result != -1024)
          goto LABEL_29;
LABEL_51:
        v38 = v33;
        if ((v33 & 1) != 0)
LABEL_29:
          v38 = v37;
        *(_BYTE *)(v22 + v24++) = (((v38
                                   * ((v47 * *(unsigned __int8 *)(v16 + v42 + v31)
                                     + (2048 - v47) * *(unsigned __int8 *)(v16 + v45 + v31)) >> 4)) >> 16)
                                 + (((2048 - v38)
                                   * ((v47 * *(unsigned __int8 *)(v16 + v42 + v32)
                                     + (2048 - v47) * *(unsigned __int8 *)(v16 + v45 + v32)) >> 4)) >> 16)
                                 + 2) >> 2;
      }
      while (v10 != v24);
      v22 += v10;
    }
  }
  return result;
}

void sub_239714CE0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239416DA0(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239714D04(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239714D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t i;
  unint64_t j;
  _DWORD v24[2];

  v8 = *(_QWORD *)(a1 + 64);
  v9 = vcvtad_u64_f64((double)v8 * a3);
  v10 = vcvtad_u64_f64((double)HIDWORD(v8) * a4);
  v24[0] = v9;
  v24[1] = v10;
  *(_QWORD *)a2 = &off_250ADD920;
  v11 = (_QWORD *)(a2 + 8);
  result = sub_239709458(v24, (_WORD *)(a2 + 8));
  v13 = v8;
  if (v8 == v9 && HIDWORD(v8) == v10)
    return sub_239717838(a1, a2);
  v15 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a1 + 80) && v15)
  {
    v16 = *(_QWORD *)(a1 + 8);
    v17 = *(std::__shared_weak_count **)(a1 + 16);
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
      do
        v20 = __ldaxr(p_shared_owners);
      while (__stlxr(v20 - 1, p_shared_owners));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
    v15 = *(_QWORD *)(a1 + 56);
  }
  v21 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 80) && v21)
  {
    result = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v11 + 88))(*v11, 1, "unknown location");
    v21 = *(_QWORD *)(a2 + 32);
  }
  if (v10 && v9)
  {
    for (i = 0; i != v10; ++i)
    {
      for (j = 0; j != v9; ++j)
        *(_DWORD *)(v21 + 4 * j) = *(_DWORD *)(v15
                                             + 4
                                             * (v13 * (unint64_t)(1.0 / a4 * (double)i)
                                              + (unint64_t)(1.0 / a3 * (double)j)));
      v21 += 4 * v9;
    }
  }
  return result;
}

void sub_239714ED8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239416DA0(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239714EFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239714F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t i;
  unint64_t v24;
  double v25;
  float v26;
  float v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  double v32;
  float v33;
  float v34;
  unint64_t v35;
  unint64_t v36;
  float v37;
  _DWORD v38[2];

  v8 = *(_QWORD *)(a1 + 64);
  v9 = HIDWORD(v8);
  v10 = vcvtad_u64_f64((double)v8 * a3);
  v11 = vcvtad_u64_f64((double)HIDWORD(v8) * a4);
  v38[0] = v10;
  v38[1] = v11;
  *(_QWORD *)a2 = &off_250ADD920;
  v12 = (_QWORD *)(a2 + 8);
  result = sub_239709458(v38, (_WORD *)(a2 + 8));
  v14 = v8;
  if (v8 == v10 && v9 == v11)
    return sub_239717838(a1, a2);
  v16 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a1 + 80) && v16)
  {
    v17 = *(_QWORD *)(a1 + 8);
    v18 = *(std::__shared_weak_count **)(a1 + 16);
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(p_shared_owners);
      while (__stxr(v20 + 1, p_shared_owners));
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
    v16 = *(_QWORD *)(a1 + 56);
  }
  v22 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 80) && v22)
  {
    result = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v12 + 88))(*v12, 1, "unknown location");
    v22 = *(_QWORD *)(a2 + 32);
  }
  if (v11 && v10)
  {
    for (i = 0; i != v11; ++i)
    {
      v24 = 0;
      v25 = 1.0 / a4 * ((double)i + 0.5) + -0.5;
      v26 = v25;
      v27 = v26 - floor(v25);
      v28 = vcvtmd_u64_f64(v25);
      if (v25 < 0.0)
        v28 = 0;
      v29 = vcvtpd_u64_f64(v25);
      if (v9 - 1 < v29)
        v29 = v9 - 1;
      v30 = v28 * v14;
      v31 = v29 * v14;
      do
      {
        v32 = 1.0 / a3 * ((double)v24 + 0.5) + -0.5;
        v33 = v32;
        v34 = v33 - floor(v32);
        v35 = vcvtmd_u64_f64(v32);
        v36 = vcvtpd_u64_f64(v32);
        if (v32 < 0.0)
          v35 = 0;
        if (v14 - 1 < v36)
          v36 = v14 - 1;
        result = v35 + v30;
        v37 = (float)((float)(1.0 - v27) * (float)((float)(1.0 - v34) * *(float *)(v16 + 4 * (v35 + v30))))
            + 0.0
            + (float)((float)(1.0 - v27) * (float)(*(float *)(v16 + 4 * (v36 + v30)) * v34))
            + (float)((float)((float)(1.0 - v34) * *(float *)(v16 + 4 * (v35 + v31))) * v27)
            + (float)((float)(*(float *)(v16 + 4 * (v36 + v31)) * v34) * v27);
        *(float *)(v22 + 4 * v24++) = v37;
      }
      while (v10 != v24);
      v22 += 4 * v10;
    }
  }
  return result;
}

void sub_2397151B8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239416DA0(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2397151DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397151F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  unint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  _DWORD v27[2];

  v8 = *(_QWORD *)(a1 + 112);
  v9 = vcvtad_u64_f64((double)v8 * a3);
  v10 = vcvtad_u64_f64((double)HIDWORD(v8) * a4);
  v27[0] = v9;
  v27[1] = v10;
  *(_QWORD *)a2 = &off_250ADBEA0;
  v11 = (_QWORD *)(a2 + 8);
  result = sub_2396192A4(v27, (_WORD *)(a2 + 8));
  v13 = v8;
  if (v8 == v9 && HIDWORD(v8) == v10)
    return sub_239717ED0(a1, a2);
  v15 = *(_QWORD *)(a1 + 80);
  if (*(_BYTE *)(a1 + 128) && v15)
  {
    v16 = *(_QWORD *)(a1 + 8);
    v17 = *(std::__shared_weak_count **)(a1 + 16);
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
      do
        v20 = __ldaxr(p_shared_owners);
      while (__stlxr(v20 - 1, p_shared_owners));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
    v15 = *(_QWORD *)(a1 + 80);
  }
  v21 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v21)
  {
    result = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v11 + 88))(*v11, 1, "unknown location");
    v21 = *(_QWORD *)(a2 + 32);
  }
  if (v10 && v9)
  {
    v22 = 0;
    v23 = (_BYTE *)(v21 + 2);
    do
    {
      v24 = 0;
      v25 = v23;
      do
      {
        v26 = (_BYTE *)(v15
                      + 3
                      * (v13 * (unint64_t)(1.0 / a4 * (double)v22) + (unint64_t)(1.0 / a3 * (double)v24)));
        *(v25 - 2) = *v26;
        *(v25 - 1) = v26[1];
        *v25 = v26[2];
        v25 += 3;
        ++v24;
      }
      while (v9 != v24);
      ++v22;
      v23 += 3 * v9;
    }
    while (v22 != v10);
  }
  return result;
}

void sub_2397153D0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239416DA0(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2397153F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

unsigned int sub_239715408@<W0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unsigned int result;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _BYTE *v25;
  unint64_t v26;
  double v27;
  float v28;
  float v29;
  unint64_t v30;
  float v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  float v35;
  unsigned int v36;
  double v37;
  double v38;
  int v39;
  _BYTE *v40;
  unsigned int v41;
  double v42;
  float v43;
  float v44;
  float v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  double v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  _DWORD v67[2];

  v8 = *(_QWORD *)(a1 + 112);
  v9 = HIDWORD(v8);
  v10 = vcvtad_u64_f64((double)v8 * a3);
  v11 = vcvtad_u64_f64((double)HIDWORD(v8) * a4);
  v67[0] = v10;
  v67[1] = v11;
  *(_QWORD *)a2 = &off_250ADBEA0;
  v12 = (_QWORD *)(a2 + 8);
  result = sub_2396192A4(v67, (_WORD *)(a2 + 8));
  v14 = v8;
  if (v8 == v10 && v9 == v11)
    return sub_239717ED0(a1, a2);
  v16 = *(_QWORD *)(a1 + 80);
  if (*(_BYTE *)(a1 + 128) && v16)
  {
    v17 = *(_QWORD *)(a1 + 8);
    v18 = *(std::__shared_weak_count **)(a1 + 16);
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(p_shared_owners);
      while (__stxr(v20 + 1, p_shared_owners));
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
    v16 = *(_QWORD *)(a1 + 80);
  }
  v22 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v22)
  {
    result = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v12 + 88))(*v12, 1, "unknown location");
    v22 = *(_QWORD *)(a2 + 32);
  }
  if (v11 && v10)
  {
    v23 = 0;
    v24 = v9 - 1;
    v25 = (_BYTE *)(v22 + 1);
    do
    {
      v26 = 0;
      v27 = 1.0 / a4 * ((double)v23 + 0.5) + -0.5;
      v28 = v27;
      v29 = v28 - floor(v27);
      v30 = vcvtmd_u64_f64(v27);
      v31 = 1.0 - v29;
      if (v27 < 0.0)
        v30 = 0;
      v32 = vcvtpd_u64_f64(v27);
      if (v24 < v32)
        v32 = v24;
      v33 = v30 * v14;
      v34 = v32 * v14;
      v35 = v31 * 2048.0;
      v36 = vcvts_n_s32_f32(v31, 0xBuLL);
      result = vcvts_n_s32_f32((float)(v31 * 2048.0) - (float)(int)(float)(v31 * 2048.0), 0xBuLL);
      v37 = (float)(v31 * 2048.0);
      if (v35 < 0.0)
        v38 = -0.5;
      else
        v38 = 0.5;
      v39 = (int)(v38 + v37);
      v40 = v25;
      do
      {
        v42 = 1.0 / a3 * ((double)v26 + 0.5) + -0.5;
        v43 = v42;
        v44 = v43 - floor(v42);
        v45 = 1.0 - v44;
        v46 = vcvtmd_u64_f64(v42);
        v47 = vcvtpd_u64_f64(v42);
        if (v42 < 0.0)
          v46 = 0;
        if (v14 - 1 < v47)
          v47 = v14 - 1;
        v48 = 3 * (v46 + v33);
        v49 = 3 * (v46 + v34);
        v50 = 3 * (v47 + v33);
        v51 = 3 * (v47 + v34);
        v52 = vcvts_n_s32_f32((float)(v45 * 2048.0) - (float)(int)(float)(v45 * 2048.0), 0xBuLL);
        if ((float)(v45 * 2048.0) < 0.0)
          v53 = -0.5;
        else
          v53 = 0.5;
        v54 = (int)(v53 + (float)(v45 * 2048.0));
        if (v52 == -1024 || v52 == 1024)
        {
          v55 = vcvts_n_s32_f32(v45, 0xBuLL);
          if ((v55 & 1) == 0)
            v54 = v55;
          if (result != 1024 && result != -1024 || (v56 = v36, (v36 & 1) != 0))
            v56 = v39;
          v57 = *(unsigned __int8 *)(v16 + v48);
          v58 = *(unsigned __int8 *)(v16 + v49);
          v59 = *(unsigned __int8 *)(v16 + v50);
          v60 = *(unsigned __int8 *)(v16 + v51);
          v61 = 2048 - v54;
        }
        else
        {
          if (result != -1024 && result != 1024 || (v56 = v36, (v36 & 1) != 0))
            v56 = v39;
          v57 = *(unsigned __int8 *)(v16 + v48);
          v58 = *(unsigned __int8 *)(v16 + v49);
          v59 = *(unsigned __int8 *)(v16 + v50);
          v61 = 2048 - v54;
          v60 = *(unsigned __int8 *)(v16 + v51);
        }
        *(v40 - 1) = (((v56 * ((v54 * v57 + v61 * v59) >> 4)) >> 16)
                    + (((2048 - v56) * ((v54 * v58 + v61 * v60) >> 4)) >> 16)
                    + 2) >> 2;
        if (result != 1024 && result != -1024 || (v62 = v36, (v36 & 1) != 0))
          v62 = v39;
        *v40 = (((v62
                * ((v54 * *(unsigned __int8 *)(v48 + v16 + 1) + v61 * *(unsigned __int8 *)(v50 + v16 + 1)) >> 4)) >> 16)
              + (((2048 - v62)
                * ((v54 * *(unsigned __int8 *)(v49 + v16 + 1) + v61 * *(unsigned __int8 *)(v51 + v16 + 1)) >> 4)) >> 16)
              + 2) >> 2;
        v63 = *(unsigned __int8 *)(v48 + v16 + 2);
        v64 = *(unsigned __int8 *)(v49 + v16 + 2);
        v65 = *(unsigned __int8 *)(v50 + v16 + 2);
        v66 = *(unsigned __int8 *)(v51 + v16 + 2);
        if ((result == 1024 || result == -1024) && (v36 & 1) == 0)
          v41 = v36;
        else
          v41 = v39;
        v40[1] = (((v41 * ((v54 * v63 + v61 * v65) >> 4)) >> 16)
                + (((2048 - v41) * ((v54 * v64 + v61 * v66) >> 4)) >> 16)
                + 2) >> 2;
        ++v26;
        v40 += 3;
      }
      while (v10 != v26);
      ++v23;
      v25 += 3 * v10;
    }
    while (v23 != v11);
  }
  return result;
}

void sub_239715874(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239416DA0(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239715898(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2397158AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _DWORD *v23;
  unint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  _DWORD v27[2];

  v8 = *(_QWORD *)(a1 + 112);
  v9 = vcvtad_u64_f64((double)v8 * a3);
  v10 = vcvtad_u64_f64((double)HIDWORD(v8) * a4);
  v27[0] = v9;
  v27[1] = v10;
  *(_QWORD *)a2 = &off_250ADDC30;
  v11 = (_QWORD *)(a2 + 8);
  result = sub_239619E74(v27, (_WORD *)(a2 + 8));
  v13 = v8;
  if (v8 == v9 && HIDWORD(v8) == v10)
    return sub_239718620(a1, a2);
  v15 = *(_QWORD *)(a1 + 80);
  if (*(_BYTE *)(a1 + 128) && v15)
  {
    v16 = *(_QWORD *)(a1 + 8);
    v17 = *(std::__shared_weak_count **)(a1 + 16);
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
      do
        v20 = __ldaxr(p_shared_owners);
      while (__stlxr(v20 - 1, p_shared_owners));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
    v15 = *(_QWORD *)(a1 + 80);
  }
  v21 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v21)
  {
    result = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v11 + 88))(*v11, 1, "unknown location");
    v21 = *(_QWORD *)(a2 + 32);
  }
  if (v10 && v9)
  {
    v22 = 0;
    v23 = (_DWORD *)(v21 + 8);
    do
    {
      v24 = 0;
      v25 = v23;
      do
      {
        v26 = (_DWORD *)(v15
                       + 12
                       * (v13 * (unint64_t)(1.0 / a4 * (double)v22) + (unint64_t)(1.0 / a3 * (double)v24)));
        *(v25 - 2) = *v26;
        *(v25 - 1) = v26[1];
        *v25 = v26[2];
        v25 += 3;
        ++v24;
      }
      while (v9 != v24);
      ++v22;
      v23 += 3 * v9;
    }
    while (v22 != v10);
  }
  return result;
}

void sub_239715A90(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239416DA0(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239715AB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

float *sub_239715AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  float *result;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  float *v24;
  unint64_t v25;
  double v26;
  float v27;
  float v28;
  float v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  float *v34;
  double v35;
  float v36;
  float v37;
  unint64_t v38;
  float v39;
  unint64_t v40;
  float *v41;
  float *v42;
  float *v43;
  float v44;
  float v45;
  float v46;
  _DWORD v47[2];

  v8 = *(_QWORD *)(a1 + 112);
  v9 = HIDWORD(v8);
  v10 = vcvtad_u64_f64((double)v8 * a3);
  v11 = vcvtad_u64_f64((double)HIDWORD(v8) * a4);
  v47[0] = v10;
  v47[1] = v11;
  *(_QWORD *)a2 = &off_250ADDC30;
  v12 = (_QWORD *)(a2 + 8);
  result = (float *)sub_239619E74(v47, (_WORD *)(a2 + 8));
  v14 = v8;
  if (v8 == v10 && v9 == v11)
    return (float *)sub_239718620(a1, a2);
  v16 = *(_QWORD *)(a1 + 80);
  if (*(_BYTE *)(a1 + 128) && v16)
  {
    v17 = *(_QWORD *)(a1 + 8);
    v18 = *(std::__shared_weak_count **)(a1 + 16);
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(p_shared_owners);
      while (__stxr(v20 + 1, p_shared_owners));
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    result = (float *)(*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
    v16 = *(_QWORD *)(a1 + 80);
  }
  v22 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v22)
  {
    result = (float *)(*(uint64_t (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v12 + 88))(*v12, 1, "unknown location");
    v22 = *(_QWORD *)(a2 + 32);
  }
  if (v11 && v10)
  {
    v23 = 0;
    v24 = (float *)(v22 + 8);
    do
    {
      v25 = 0;
      v26 = 1.0 / a4 * ((double)v23 + 0.5) + -0.5;
      v27 = v26;
      v28 = v27 - floor(v26);
      v29 = 1.0 - v28;
      v30 = vcvtmd_u64_f64(v26);
      v31 = vcvtpd_u64_f64(v26);
      if (v26 < 0.0)
        v30 = 0;
      if (v9 - 1 < v31)
        v31 = v9 - 1;
      v32 = v30 * v14;
      v33 = v31 * v14;
      v34 = v24;
      do
      {
        v35 = 1.0 / a3 * ((double)v25 + 0.5) + -0.5;
        v36 = v35;
        v37 = v36 - floor(v35);
        v38 = vcvtmd_u64_f64(v35);
        v39 = 1.0 - v37;
        if (v35 < 0.0)
          v38 = 0;
        v40 = vcvtpd_u64_f64(v35);
        if (v14 - 1 < v40)
          v40 = v14 - 1;
        v41 = (float *)(v16 + 12 * (v38 + v32));
        result = (float *)(v16 + 12 * (v38 + v33));
        v42 = (float *)(v16 + 12 * (v40 + v32));
        v43 = (float *)(v16 + 12 * (v40 + v33));
        v44 = (float)(v29 * (float)(v39 * *v41))
            + 0.0
            + (float)(v29 * (float)(*v42 * v37))
            + (float)((float)(v39 * *result) * v28)
            + (float)((float)(*v43 * v37) * v28);
        *(v34 - 2) = v44;
        v45 = (float)(v29 * (float)(v39 * v41[1]))
            + 0.0
            + (float)(v29 * (float)(v42[1] * v37))
            + (float)((float)(v39 * result[1]) * v28)
            + (float)((float)(v43[1] * v37) * v28);
        *(v34 - 1) = v45;
        v46 = (float)(v29 * (float)(v39 * v41[2]))
            + 0.0
            + (float)(v29 * (float)(v42[2] * v37))
            + (float)((float)(v39 * result[2]) * v28)
            + (float)((float)(v43[2] * v37) * v28);
        *v34 = v46;
        v34 += 3;
        ++v25;
      }
      while (v10 != v25);
      ++v23;
      v24 += 3 * v10;
    }
    while (v23 != v11);
  }
  return result;
}

void sub_239715E40(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239416DA0(v2);
  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239715E64(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_239715E78(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, float a5@<S0>)
{
  void *v10;
  unsigned int v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  double v30;
  void *v31;
  uint64_t v32;
  void *v33;

  v10 = (void *)MEMORY[0x23B83EC40]();
  v11 = sub_2396F5EC0(*(_DWORD *)(a1 + 56));
  sub_2398D8228(*(_DWORD *)(a1 + 56));
  v12 = *(_DWORD *)(a1 + 56);
  v13 = v12 > 0x20;
  v14 = (1 << v12) & 0x101000010;
  if (v13 || v14 == 0)
    v16 = 1;
  else
    v16 = 4;
  if (a3)
  {
    nullsub_4(a2);
    sub_2397A9494(v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = sub_2397A9F50(a2);
    sub_2397A9494(v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v21 = MTLCreateSystemDefaultDevice();
    v18 = v21;
    if (!v21)
      goto LABEL_18;
    v20 = (void *)objc_msgSend(v21, "newCommandQueue");
  }
  v33 = v20;
  objc_msgSend(v20, "commandBuffer");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = v11;
  objc_msgSend(MEMORY[0x24BDDE3B8], "imageDescriptorWithChannelFormat:width:height:featureChannels:", v16, *(unsigned int *)(a1 + 32), *(unsigned int *)(a1 + 36), v11);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "setStorageMode:", 0);
  v25 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE368]), "initWithDevice:imageDescriptor:", v18, v24);
  v26 = *(_QWORD *)(a1 + 48);
  if (*(_BYTE *)(a1 + 60) && v26)
  {
    (*(void (**)(_QWORD, _QWORD, const char *))(**(_QWORD **)(a1 + 8) + 88))(*(_QWORD *)(a1 + 8), 0, "unknown location");
    v26 = *(_QWORD *)(a1 + 48);
  }
  objc_msgSend(v25, "writeBytes:dataLayout:imageIndex:", v26, 0, 0);
  objc_msgSend(MEMORY[0x24BDDE3B8], "imageDescriptorWithChannelFormat:width:height:featureChannels:", v16, *(unsigned int *)(a1 + 32), *(unsigned int *)(a1 + 36), v23);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "setStorageMode:", 0);
  v28 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE368]), "initWithDevice:imageDescriptor:", v18, v27);
  v29 = objc_alloc(MEMORY[0x24BDDE3C8]);
  *(float *)&v30 = a5;
  v31 = (void *)objc_msgSend(v29, "initWithDevice:sigma:", v18, v30);
  objc_msgSend(v31, "encodeToCommandBuffer:sourceImage:destinationImage:", v22, v25, v28);
  objc_msgSend(v28, "synchronizeOnCommandBuffer:", v22);
  objc_msgSend(v22, "commit");
  objc_msgSend(v22, "waitUntilCompleted");
  v32 = *(_QWORD *)(a4 + 48);
  if (*(_BYTE *)(a4 + 60) && v32)
  {
    (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a4 + 8) + 88))(*(_QWORD *)(a4 + 8), 1, "unknown location");
    v32 = *(_QWORD *)(a4 + 48);
  }
  objc_msgSend(v28, "readBytes:dataLayout:imageIndex:", v32, 0, 0);

LABEL_18:
  objc_autoreleasePoolPop(v10);
}

void sub_239716118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  sub_239422DD0(v11);
  _Unwind_Resume(a1);
}

void sub_2397161B8(uint32x2_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>, unsigned int a5@<S0>, unsigned int a6@<S1>)
{
  void *v10;
  __n128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unsigned int v20;
  __n128 v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  uint32x2_t v34;
  std::__shared_weak_count *v35;
  uint32x2_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  void *v46;
  uint32x2_t v47;
  _QWORD *v48;
  double v51;
  double v52;
  std::__shared_weak_count *v53;
  _BYTE v54[24];
  unsigned int v55;

  v10 = (void *)MEMORY[0x23B83EC40]();
  v47 = vcvt_u32_f32(vrnda_f32(vmul_f32((float32x2_t)__PAIR64__(a6, a5), vcvt_f32_u32(a1[8]))));
  sub_2398D8228(1);
  v48 = a4;
  *a4 = &off_250ADB628;
  v44 = a4 + 1;
  sub_239423E50((uint64_t)&v51, (uint64_t)(a4 + 1));
  v11 = nullsub_4(v54);
  v12 = v53;
  if (v53)
  {
    p_shared_owners = (unint64_t *)&v53->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v12->__on_zero_shared)(v12, v11);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  j_nullsub_4_89(&v51);
  v51 = COERCE_DOUBLE(&off_250ADB778);
  sub_2394247FC((uint64_t)a1, (uint64_t)&v52);
  if (v55 <= 0x20 && ((1 << v55) & 0x101000010) != 0)
  {
    v15 = 4;
    v16 = nullsub_4(v54);
    v17 = v53;
    if (!v53)
      goto LABEL_15;
  }
  else
  {
    v15 = 1;
    v16 = nullsub_4(v54);
    v17 = v53;
    if (!v53)
      goto LABEL_15;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v17->__on_zero_shared)(v17, v16);
    std::__shared_weak_count::__release_weak(v17);
  }
LABEL_15:
  j_nullsub_4_89(&v51);
  v51 = COERCE_DOUBLE(&off_250ADB778);
  sub_2394247FC((uint64_t)a1, (uint64_t)&v52);
  v20 = (v55 < 0x20uLL) & (0x80800008 >> v55);
  v21 = nullsub_4(v54);
  v22 = v53;
  if (v53)
  {
    v23 = (unint64_t *)&v53->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v22->__on_zero_shared)(v22, v21);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  j_nullsub_4_89(&v51);
  if (v20)
    v25 = 3;
  else
    v25 = v15;
  if (a3)
  {
    nullsub_4(a2);
    sub_2397A9494(v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = sub_2397A9F50(a2);
    sub_2397A9494(v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v30 = MTLCreateSystemDefaultDevice();
    v27 = v30;
    if (!v30)
      goto LABEL_40;
    v29 = (void *)objc_msgSend(v30, "newCommandQueue");
  }
  v45 = v10;
  v46 = v29;
  objc_msgSend(v29, "commandBuffer");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDDE3B8], "imageDescriptorWithChannelFormat:width:height:featureChannels:", v25, a1[8].u32[0], a1[8].u32[1], 1);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "setStorageMode:", 0);
  v33 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE368]), "initWithDevice:imageDescriptor:", v27, v32);
  v34 = a1[7];
  if (a1[10].i8[0] && *(_QWORD *)&v34)
  {
    v36 = a1[1];
    v35 = (std::__shared_weak_count *)a1[2];
    if (v35)
    {
      v37 = (unint64_t *)&v35->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
        std::__shared_weak_count::__release_weak(v35);
      }
    }
    (*(void (**)(uint32x2_t, _QWORD, const char *))(**(_QWORD **)&v36 + 88))(v36, 0, "unknown location");
    v34 = a1[7];
  }
  objc_msgSend(v33, "writeBytes:dataLayout:imageIndex:", *(_QWORD *)&v34, 0, 0);
  objc_msgSend(MEMORY[0x24BDDE3B8], "imageDescriptorWithChannelFormat:width:height:featureChannels:", v25, v47.u32[0], v47.u32[1], 1);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v40, "setStorageMode:", 0);
  v41 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE368]), "initWithDevice:imageDescriptor:", v27, v40);
  v42 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE3E0]), "initWithDevice:", v27);
  v51 = *(float *)&a5;
  v52 = *(float *)&a6;
  objc_msgSend(v42, "setScaleTransform:", &v51);
  objc_msgSend(v42, "encodeToCommandBuffer:sourceImage:destinationImage:", v31, v33, v41);
  objc_msgSend(v41, "synchronizeOnCommandBuffer:", v31);
  objc_msgSend(v31, "commit");
  objc_msgSend(v31, "waitUntilCompleted");
  v43 = v48[4];
  if (*((_BYTE *)v48 + 80) && v43)
  {
    (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v44 + 88))(*v44, 1, "unknown location");
    v43 = v48[4];
  }
  objc_msgSend(v41, "readBytes:dataLayout:imageIndex:", v43, 0, 0);

  v10 = v45;
LABEL_40:
  objc_autoreleasePoolPop(v10);
}

void sub_239716640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  sub_239416DA0(a10);
  nullsub_4(a16);
  _Unwind_Resume(a1);
}

void sub_23971671C(uint32x2_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>, unsigned int a5@<S0>, unsigned int a6@<S1>)
{
  void *v10;
  __n128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unsigned int v20;
  __n128 v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  uint32x2_t v34;
  std::__shared_weak_count *v35;
  uint32x2_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  void *v46;
  uint32x2_t v47;
  _QWORD *v48;
  double v51;
  double v52;
  std::__shared_weak_count *v53;
  _BYTE v54[24];
  unsigned int v55;

  v10 = (void *)MEMORY[0x23B83EC40]();
  v47 = vcvt_u32_f32(vrnda_f32(vmul_f32((float32x2_t)__PAIR64__(a6, a5), vcvt_f32_u32(a1[14]))));
  sub_2398D8228(21);
  v48 = a4;
  *a4 = &off_250ADBEA0;
  v44 = a4 + 1;
  sub_239469644((uint64_t)&v51, (uint64_t)(a4 + 1));
  v11 = nullsub_4(v54);
  v12 = v53;
  if (v53)
  {
    p_shared_owners = (unint64_t *)&v53->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v12->__on_zero_shared)(v12, v11);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  j_nullsub_4_89(&v51);
  v51 = COERCE_DOUBLE(&off_250ADB778);
  sub_23946936C((uint64_t)a1, (uint64_t)&v52);
  if (v55 <= 0x20 && ((1 << v55) & 0x101000010) != 0)
  {
    v15 = 4;
    v16 = nullsub_4(v54);
    v17 = v53;
    if (!v53)
      goto LABEL_15;
  }
  else
  {
    v15 = 1;
    v16 = nullsub_4(v54);
    v17 = v53;
    if (!v53)
      goto LABEL_15;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v17->__on_zero_shared)(v17, v16);
    std::__shared_weak_count::__release_weak(v17);
  }
LABEL_15:
  j_nullsub_4_89(&v51);
  v51 = COERCE_DOUBLE(&off_250ADB778);
  sub_23946936C((uint64_t)a1, (uint64_t)&v52);
  v20 = (v55 < 0x20uLL) & (0x80800008 >> v55);
  v21 = nullsub_4(v54);
  v22 = v53;
  if (v53)
  {
    v23 = (unint64_t *)&v53->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v22->__on_zero_shared)(v22, v21);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  j_nullsub_4_89(&v51);
  if (v20)
    v25 = 3;
  else
    v25 = v15;
  if (a3)
  {
    nullsub_4(a2);
    sub_2397A9494(v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = sub_2397A9F50(a2);
    sub_2397A9494(v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v30 = MTLCreateSystemDefaultDevice();
    v27 = v30;
    if (!v30)
      goto LABEL_40;
    v29 = (void *)objc_msgSend(v30, "newCommandQueue");
  }
  v45 = v10;
  v46 = v29;
  objc_msgSend(v29, "commandBuffer");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDDE3B8], "imageDescriptorWithChannelFormat:width:height:featureChannels:", v25, a1[14].u32[0], a1[14].u32[1], 3);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "setStorageMode:", 0);
  v33 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE368]), "initWithDevice:imageDescriptor:", v27, v32);
  v34 = a1[10];
  if (a1[16].i8[0] && *(_QWORD *)&v34)
  {
    v36 = a1[1];
    v35 = (std::__shared_weak_count *)a1[2];
    if (v35)
    {
      v37 = (unint64_t *)&v35->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
        std::__shared_weak_count::__release_weak(v35);
      }
    }
    (*(void (**)(uint32x2_t, _QWORD, const char *))(**(_QWORD **)&v36 + 88))(v36, 0, "unknown location");
    v34 = a1[10];
  }
  objc_msgSend(v33, "writeBytes:dataLayout:imageIndex:", *(_QWORD *)&v34, 0, 0);
  objc_msgSend(MEMORY[0x24BDDE3B8], "imageDescriptorWithChannelFormat:width:height:featureChannels:", v25, v47.u32[0], v47.u32[1], 3);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v40, "setStorageMode:", 0);
  v41 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE368]), "initWithDevice:imageDescriptor:", v27, v40);
  v42 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE3E0]), "initWithDevice:", v27);
  v51 = *(float *)&a5;
  v52 = *(float *)&a6;
  objc_msgSend(v42, "setScaleTransform:", &v51);
  objc_msgSend(v42, "encodeToCommandBuffer:sourceImage:destinationImage:", v31, v33, v41);
  objc_msgSend(v41, "synchronizeOnCommandBuffer:", v31);
  objc_msgSend(v31, "commit");
  objc_msgSend(v31, "waitUntilCompleted");
  v43 = v48[4];
  if (*((_BYTE *)v48 + 128) && v43)
  {
    (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v44 + 88))(*v44, 1, "unknown location");
    v43 = v48[4];
  }
  objc_msgSend(v41, "readBytes:dataLayout:imageIndex:", v43, 0, 0);

  v10 = v45;
LABEL_40:
  objc_autoreleasePoolPop(v10);
}

void sub_239716BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  sub_239416DA0(a10);
  nullsub_4(a16);
  _Unwind_Resume(a1);
}

void sub_239716C80(uint32x2_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, unsigned int a5@<S0>, unsigned int a6@<S1>)
{
  void *v10;
  __n128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint32x2_t v29;
  void *v30;
  uint32x2_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint32x2_t v41;
  double v44;
  double v45;
  std::__shared_weak_count *v46;
  _BYTE v47[24];
  unsigned int v48;

  v10 = (void *)MEMORY[0x23B83EC40]();
  v41 = vcvt_u32_f32(vrnda_f32(vmul_f32((float32x2_t)__PAIR64__(a6, a5), vcvt_f32_u32(a1[8]))));
  sub_2398D8228(1);
  *(_QWORD *)a4 = &off_250ADB628;
  sub_239423E50((uint64_t)&v44, a4 + 8);
  v11 = nullsub_4(v47);
  v12 = v46;
  if (v46)
  {
    p_shared_owners = (unint64_t *)&v46->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v12->__on_zero_shared)(v12, v11);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  j_nullsub_4_89(&v44);
  v44 = COERCE_DOUBLE(&off_250ADB778);
  sub_2394247FC((uint64_t)a1, (uint64_t)&v45);
  if (v48 <= 0x20 && ((1 << v48) & 0x101000010) != 0)
  {
    v15 = 4;
    v16 = nullsub_4(v47);
    v17 = v46;
    if (!v46)
      goto LABEL_14;
  }
  else
  {
    v15 = 1;
    v16 = nullsub_4(v47);
    v17 = v46;
    if (!v46)
      goto LABEL_14;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v17->__on_zero_shared)(v17, v16);
    std::__shared_weak_count::__release_weak(v17);
    j_nullsub_4_89(&v44);
    if (a3)
      goto LABEL_15;
    goto LABEL_17;
  }
LABEL_14:
  j_nullsub_4_89(&v44);
  if (a3)
  {
LABEL_15:
    nullsub_4(a2);
    sub_2397A9494(v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = sub_2397A9F50(a2);
    sub_2397A9494(v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_19;
  }
LABEL_17:
  v24 = MTLCreateSystemDefaultDevice();
  v21 = v24;
  if (!v24)
    goto LABEL_32;
  v23 = (void *)objc_msgSend(v24, "newCommandQueue");
LABEL_19:
  v25 = v23;
  v40 = v10;
  objc_msgSend(v23, "commandBuffer");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDDE3B8], "imageDescriptorWithChannelFormat:width:height:featureChannels:", v15, a1[8].u32[0], a1[8].u32[1], 1);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "setStorageMode:", 0);
  v28 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE368]), "initWithDevice:imageDescriptor:", v21, v27);
  v29 = a1[7];
  if (a1[10].i8[0] && *(_QWORD *)&v29)
  {
    v30 = v25;
    v31 = a1[1];
    v32 = (std::__shared_weak_count *)a1[2];
    if (v32)
    {
      v33 = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
      do
        v35 = __ldaxr(v33);
      while (__stlxr(v35 - 1, v33));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
    v25 = v30;
    (*(void (**)(uint32x2_t, _QWORD, const char *))(**(_QWORD **)&v31 + 88))(v31, 0, "unknown location");
    v29 = a1[7];
  }
  objc_msgSend(v28, "writeBytes:dataLayout:imageIndex:", *(_QWORD *)&v29, 0, 0);
  objc_msgSend(MEMORY[0x24BDDE3B8], "imageDescriptorWithChannelFormat:width:height:featureChannels:", v15, v41.u32[0], v41.u32[1], 1);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "setStorageMode:", 0);
  v37 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE368]), "initWithDevice:imageDescriptor:", v21, v36);
  v38 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDDE388]), "initWithDevice:", v21);
  v44 = *(float *)&a5;
  v45 = *(float *)&a6;
  objc_msgSend(v38, "setScaleTransform:", &v44);
  objc_msgSend(v38, "encodeToCommandBuffer:sourceImage:destinationImage:", v26, v28, v37);
  objc_msgSend(v37, "synchronizeOnCommandBuffer:", v26);
  objc_msgSend(v26, "commit");
  objc_msgSend(v26, "waitUntilCompleted");
  v39 = *(_QWORD *)(a4 + 32);
  if (*(_BYTE *)(a4 + 80) && v39)
  {
    (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a4 + 8) + 88))(*(_QWORD *)(a4 + 8), 1, "unknown location");
    v39 = *(_QWORD *)(a4 + 32);
  }
  objc_msgSend(v37, "readBytes:dataLayout:imageIndex:", v39, 0, 0);

  v10 = v40;
LABEL_32:
  objc_autoreleasePoolPop(v10);
}

void sub_23971709C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _Unwind_Exception *exception_object, uint64_t a18, uint64_t a19, char a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  sub_239416DA0(a10);
  nullsub_4(a12);
  _Unwind_Resume(a1);
}

uint64_t sub_239717174@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v15;
  int v16;
  int v17;
  _DWORD *v18;
  _DWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  _QWORD v36[2];

  v36[0] = *(_QWORD *)(a1 + 8);
  sub_23971741C(v36, &v35);
  v33 = v35;
  if (v35)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v35;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADDB68;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v34 = v4;
  v35 = 0;
  sub_239826870((uint64_t)a2, &v33, 0);
  v6 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a2 + 104))(*a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  *((_WORD *)a2 + 36) = v8 & 0xFF00 | v7;
  v9 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v36[0] = a1;
  v36[1] = a2 + 3;
  v12 = *(unsigned int *)(a1 + 16);
  v13 = *((unsigned int *)a2 + 10);
  if ((_DWORD)v12 == 1 && (_DWORD)v13 == 1)
  {
    sub_239717504(v36);
    goto LABEL_30;
  }
  v15 = *(_DWORD *)(a1 + 8);
  if (!v15 || (v16 = *(_DWORD *)(a1 + 12)) == 0)
  {
LABEL_30:
    result = v35;
    v35 = 0;
    if (!result)
      return result;
    goto LABEL_31;
  }
  v17 = v15 - 1;
  v18 = *(_DWORD **)a1;
  v19 = (_DWORD *)a2[3];
  v20 = v16 - 1;
  if (v20)
  {
    v21 = *((unsigned int *)a2 + 11);
    v22 = *(unsigned int *)(a1 + 20);
    if (!v17)
    {
      do
      {
        *v19 = *v18;
        v18 += v22;
        v19 += v21;
        --v20;
      }
      while (v20);
      goto LABEL_34;
    }
    v23 = 0;
    v24 = 4 * v22;
    v25 = 4 * v21;
    do
    {
      v26 = v19;
      v27 = v18;
      v28 = v17;
      do
      {
        *v26 = *v27;
        v27 += v12;
        v26 += v13;
        --v28;
      }
      while (v28);
      *v26 = *v27;
      v18 = (_DWORD *)((char *)v18 + v24);
      v19 = (_DWORD *)((char *)v19 + v25);
      ++v23;
    }
    while (v23 != v20);
  }
  if (v17)
  {
    v29 = 4 * v12;
    v30 = 4 * v13;
    do
    {
      *v19 = *v18;
      v18 = (_DWORD *)((char *)v18 + v29);
      v19 = (_DWORD *)((char *)v19 + v30);
      --v17;
    }
    while (v17);
  }
LABEL_34:
  *v19 = *v18;
  result = v35;
  v35 = 0;
  if (!result)
    return result;
LABEL_31:
  v32 = sub_239810708(result);
  return MEMORY[0x23B83E31C](v32, 0x1091C406A8758A4);
}

void sub_2397173AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239546BA8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397173C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239546BA8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2397173DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239546BA8(&a12);
  _Unwind_Resume(a1);
}

void sub_239717400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239546BA8(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_23971741C@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250ADDAC8;
  sub_23981ED40(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADDAE8;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  return sub_239810708((uint64_t)v5);
}

void sub_2397174C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239810708((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397174F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810708((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239717504(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  char *v7;
  BOOL v8;
  int v9;
  BOOL v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  _OWORD v19[2];

  v2 = *result;
  v1 = result[1];
  v3 = *(unsigned int *)(*result + 20);
  v4 = *(unsigned int *)(v1 + 20);
  if ((_DWORD)v3 == (_DWORD)v4)
  {
    v5 = *(_DWORD *)(v2 + 8);
    if ((_DWORD)v3 == *(_DWORD *)(v2 + 16) * v5)
    {
      v6 = *(_DWORD *)(v2 + 12) * v5;
      v7 = *(char **)v2;
      if ((_DWORD)v6)
        v8 = v7 == 0;
      else
        v8 = 0;
      if (v8)
        sub_239EBF50C((uint64_t)result, (uint64_t)v7);
      if ((_DWORD)v6)
        return memmove(*(void **)v1, v7, 4 * v6);
      return result;
    }
  }
  else
  {
    v5 = *(_DWORD *)(v2 + 8);
  }
  v13 = v5;
  v9 = *(_DWORD *)(v2 + 12);
  if (v5)
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v14 = 0;
    v15 = v5 - 1;
    v16 = *(unsigned int *)(v2 + 16) | ((unint64_t)*(unsigned int *)(v1 + 16) << 32);
    v17 = v9 - 1;
    v18 = v3 | (v4 << 32);
    v11 = *(char **)v2;
    v12 = *(char **)v1;
    memset(v19, 0, sizeof(v19));
    return sub_239487EB0(&v14, (uint64_t)v19, &v13, v11, v12);
  }
  return result;
}

uint64_t sub_2397175E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v14);
  v12 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  v14 = 0;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v6 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  sub_2398263E0(a2, &v12, v6);
  *(_WORD *)(a2 + 72) = v7;
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397176D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  if (a12)
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23971770C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;

  (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v15);
  v13 = v15;
  if (v15)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v15;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v14 = v4;
  v15 = 0;
  v6 = *(_QWORD *)(a1 + 24);
  if ((v6 & 0xFF00000000) != 0)
    v7 = (v6 >> 2) | 0x100000000;
  else
    v7 = 0;
  v8 = *(_WORD *)(a1 + 60);
  sub_239826870(a2, &v13, v7);
  *(_WORD *)(a2 + 72) = v8;
  v9 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v15;
  v15 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239717804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  if (a12)
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239717838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  sub_2395647D4(a1, &v7);
  sub_2395795F0(a2, &v6);
  sub_239717914(a1, a2);
  v4 = v6;
  v6 = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  result = v7;
  v7 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397178B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_239717914(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 64);
  v5 = *(_DWORD *)(a1 + 76);
  if (v5 == *(_DWORD *)(a2 + 76) && v5 == v4)
  {
    v8 = *(unsigned int *)(a1 + 68) * (unint64_t)v4;
    v9 = *(const void **)(a1 + 56);
    if (*(_BYTE *)(a1 + 80))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 56);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 80) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = *(unsigned int *)(a1 + 64);
    return (void *)sub_239717A6C(a1, a2, &v16);
  }
  return result;
}

uint64_t sub_239717A6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  sub_2395647D4(a1, &v10);
  sub_2395795F0(a2, &v9);
  if (*(_DWORD *)(a1 + 64))
    v6 = *(_DWORD *)(a1 + 68) == 0;
  else
    v6 = 1;
  if (!v6)
    sub_239717B68(a3, a1, a2);
  v7 = v9;
  v9 = 0;
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  result = v10;
  v10 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239717B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239717B68(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  _OWORD v23[2];

  v4 = *(_DWORD *)(a2 + 64);
  v3 = *(_DWORD *)(a2 + 68);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v19 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 76);
    v10 = *(unsigned int *)(a3 + 76);
    v20 = *(unsigned int *)(a2 + 72) | ((unint64_t)*(unsigned int *)(a3 + 72) << 32);
    v18 = 0;
    v21 = v3 - 1;
    v22 = v9 | (v10 << 32);
    v11 = *(char **)(a2 + 56);
    if (*(_BYTE *)(a2 + 80) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(char **)(a2 + 56);
    }
    v17 = *(char **)(a3 + 32);
    if (*(_BYTE *)(a3 + 80))
    {
      if (v17)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v17 = *(char **)(a3 + 32);
      }
    }
    memset(v23, 0, sizeof(v23));
    return (uint64_t *)sub_239717CA4(&v18, (uint64_t)v23, v8, v11, v17);
  }
  return result;
}

_DWORD *sub_239717CA4(_DWORD *result, uint64_t a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  int v9;
  int v10;
  unsigned int v11;
  _DWORD *v12;
  unsigned int i;
  uint64_t v14;
  uint64_t v15;

  v5 = __dst;
  v6 = __src;
  v9 = result[3];
  v10 = result[4];
  *(_QWORD *)a2 = __src;
  *(_DWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = __dst;
  *(_DWORD *)(a2 + 24) = v10;
  v11 = result[5];
  if (v11)
  {
    v12 = result;
    for (i = 0; i < v11; ++i)
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 16) = v5;
      v14 = *a3;
      if (!v6 && v14)
        sub_239EBF50C((uint64_t)result, a2);
      if (!v5 && v14)
        sub_239EBF50C((uint64_t)result, a2);
      if (v14)
      {
        result = memmove(v5, v6, 4 * v14);
        v11 = v12[5];
      }
      v6 += 4 * v12[6];
      v5 += 4 * v12[7];
    }
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 16) = v5;
  v15 = *a3;
  if (!v6 && v15)
    sub_239EBF50C((uint64_t)result, a2);
  if (!v5 && v15)
    sub_239EBF50C((uint64_t)result, a2);
  if (v15)
    return memmove(v5, v6, 4 * v15);
  return result;
}

uint64_t sub_239717DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v14);
  v12 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  v14 = 0;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v6 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  sub_2398277C4(a2, &v12, v6);
  *(_WORD *)(a2 + 120) = v7;
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239717E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  if (a12)
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239717ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  sub_239717FAC(a1, &v7);
  sub_239622218(a2, &v6);
  sub_239718134(a1, a2);
  v4 = v6;
  v6 = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  result = v7;
  v7 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239717F48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void sub_239717FAC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (v12)
    {
      if (!v4)
        goto LABEL_27;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (!v4)
        goto LABEL_27;
    }
    v4 = *(_QWORD *)(a1 + 8);
    v13 = *(std::__shared_weak_count **)(a1 + 16);
    if (v13)
    {
      v14 = (unint64_t *)&v13->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
        if (*(_BYTE *)(a1 + 129))
          goto LABEL_25;
        goto LABEL_27;
      }
    }
  }
  else if (!v4)
  {
    goto LABEL_27;
  }
  if (*(_BYTE *)(a1 + 129))
  {
LABEL_25:
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(v4, 0);
    return;
  }
LABEL_27:
  *a2 = 0;
}

void *sub_239718134(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 108);
  v5 = 3 * *(_DWORD *)(a1 + 112);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 116) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 80);
    if (*(_BYTE *)(a1 + 128))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 80);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 112));
    return (void *)sub_23971828C((_DWORD *)a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_23971828C(_DWORD *a1, uint64_t a2, unsigned int *a3)
{
  BOOL v6;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  sub_239717FAC((uint64_t)a1, &v11);
  sub_239622218(a2, &v10);
  if (a1[22])
    v6 = a1[23] == 0;
  else
    v6 = 1;
  if (!v6 && a1[24] != 0)
    sub_239718390(a3, (uint64_t)a1, a2);
  v8 = v10;
  v10 = 0;
  if (v8)
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  result = v11;
  v11 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23971832C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

unsigned int *sub_239718390(unsigned int *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  size_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  _QWORD v27[6];

  v4 = *(_DWORD *)(a2 + 88);
  v3 = *(_DWORD *)(a2 + 92);
  v5 = *(_DWORD *)(a2 + 96);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (size_t *)result;
    v21 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 104);
    v12 = *(unsigned int *)(a3 + 104);
    v22 = *(unsigned int *)(a2 + 100) | ((unint64_t)*(unsigned int *)(a3 + 100) << 32);
    v20 = 0;
    v23 = v3 - 1;
    v24 = v11 | (v12 << 32);
    v25 = v5 - 1;
    v26 = *(unsigned int *)(a2 + 108) | ((unint64_t)*(unsigned int *)(a3 + 108) << 32);
    v13 = *(char **)(a2 + 80);
    if (*(_BYTE *)(a2 + 128) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(char **)(a2 + 80);
    }
    v19 = *(char **)(a3 + 32);
    if (*(_BYTE *)(a3 + 128))
    {
      if (v19)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v19 = *(char **)(a3 + 32);
      }
    }
    v27[2] = 0;
    v27[3] = 0;
    v27[0] = 0;
    v27[1] = 1;
    v27[4] = 1;
    v27[5] = 0;
    return sub_23949E5D0((unsigned int *)&v20, (uint64_t)v27, v10, v13, v19);
  }
  return result;
}

uint64_t sub_2397184F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;

  (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v15);
  v13 = v15;
  if (v15)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v15;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v14 = v4;
  v15 = 0;
  v6 = *(_QWORD *)(a1 + 24);
  if ((v6 & 0xFF00000000) != 0)
    v7 = (v6 >> 2) | 0x100000000;
  else
    v7 = 0;
  v8 = *(_WORD *)(a1 + 60);
  sub_239827CE0(a2, &v13, v7);
  *(_WORD *)(a2 + 120) = v8;
  v9 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v15;
  v15 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397185EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  if (a12)
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239718620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  sub_239717FAC(a1, &v7);
  sub_239622218(a2, &v6);
  sub_2397186FC(a1, a2);
  v4 = v6;
  v6 = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  result = v7;
  v7 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239718698(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2397186FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 108);
  v5 = 3 * *(_DWORD *)(a1 + 112);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 116) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 80);
    if (*(_BYTE *)(a1 + 128))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 80);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 112));
    return (void *)sub_239718854((_DWORD *)a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_239718854(_DWORD *a1, uint64_t a2, unsigned int *a3)
{
  BOOL v6;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  sub_239717FAC((uint64_t)a1, &v11);
  sub_239622218(a2, &v10);
  if (a1[22])
    v6 = a1[23] == 0;
  else
    v6 = 1;
  if (!v6 && a1[24] != 0)
    sub_239718958(a3, (uint64_t)a1, a2);
  v8 = v10;
  v10 = 0;
  if (v8)
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  result = v11;
  v11 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397188F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

unsigned int *sub_239718958(unsigned int *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  _QWORD v27[6];

  v4 = *(_DWORD *)(a2 + 88);
  v3 = *(_DWORD *)(a2 + 92);
  v5 = *(_DWORD *)(a2 + 96);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t *)result;
    v21 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 104);
    v12 = *(unsigned int *)(a3 + 104);
    v22 = *(unsigned int *)(a2 + 100) | ((unint64_t)*(unsigned int *)(a3 + 100) << 32);
    v20 = 0;
    v23 = v3 - 1;
    v24 = v11 | (v12 << 32);
    v25 = v5 - 1;
    v26 = *(unsigned int *)(a2 + 108) | ((unint64_t)*(unsigned int *)(a3 + 108) << 32);
    v13 = *(char **)(a2 + 80);
    if (*(_BYTE *)(a2 + 128) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(char **)(a2 + 80);
    }
    v19 = *(char **)(a3 + 32);
    if (*(_BYTE *)(a3 + 128))
    {
      if (v19)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v19 = *(char **)(a3 + 32);
      }
    }
    v27[2] = 0;
    v27[3] = 0;
    v27[0] = 0;
    v27[1] = 1;
    v27[4] = 1;
    v27[5] = 0;
    return sub_239718ABC((unsigned int *)&v20, (uint64_t)v27, v10, v13, v19);
  }
  return result;
}

unsigned int *sub_239718ABC(unsigned int *result, uint64_t a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int i;
  uint64_t v16;
  uint64_t v17;

  v5 = __dst;
  v6 = __src;
  v9 = result[6];
  v10 = result[7];
  v11 = result[3] | (unint64_t)(v9 << 32);
  v12 = result[4] | (unint64_t)(v10 << 32);
  *(_QWORD *)a2 = __src;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = __dst;
  *(_QWORD *)(a2 + 32) = v12;
  *(_DWORD *)(a2 + 40) = v10;
  v13 = result[8];
  if (v13)
  {
    v14 = result;
    for (i = 0; i < v13; ++i)
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 24) = v5;
      v16 = *a3;
      if (!v6 && v16)
        sub_239EBF50C((uint64_t)result, a2);
      if (!v5 && v16)
        sub_239EBF50C((uint64_t)result, a2);
      if (v16)
      {
        result = (unsigned int *)memmove(v5, v6, 4 * v16);
        v13 = v14[8];
      }
      v6 += 4 * v14[9];
      v5 += 4 * v14[10];
    }
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 24) = v5;
  v17 = *a3;
  if (!v6 && v17)
    sub_239EBF50C((uint64_t)result, a2);
  if (!v5 && v17)
    sub_239EBF50C((uint64_t)result, a2);
  if (v17)
    return (unsigned int *)memmove(v5, v6, 4 * v17);
  return result;
}

char *sub_239718BC8(char **a1, id *a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;

  v4 = (a1[1] - *a1) >> 4;
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 60)
    sub_2394189F8();
  v8 = a1[2] - *a1;
  if (v8 >> 3 > v5)
    v5 = v8 >> 3;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0)
    v9 = 0xFFFFFFFFFFFFFFFLL;
  else
    v9 = v5;
  if (v9)
  {
    if (v9 >> 60)
      sub_239418A80();
    v10 = (char *)operator new(16 * v9);
  }
  else
  {
    v10 = 0;
  }
  v11 = &v10[16 * v4];
  v12 = &v10[16 * v9];
  *(_QWORD *)v11 = *a2;
  *((_QWORD *)v11 + 1) = *a3;
  v13 = v11 + 16;
  v14 = *a1;
  v15 = a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
    if (!v15)
      return v13;
    goto LABEL_17;
  }
  do
  {
    v16 = *((_QWORD *)v15 - 2);
    v15 -= 16;
    *(_QWORD *)v15 = 0;
    *((_QWORD *)v11 - 2) = v16;
    v11 -= 16;
    *((_QWORD *)v11 + 1) = *((_QWORD *)v15 + 1);
  }
  while (v15 != v14);
  v17 = *a1;
  v15 = a1[1];
  *a1 = v11;
  a1[1] = v13;
  a1[2] = v12;
  if (v15 != v17)
  {
    do
    {
      v18 = (void *)*((_QWORD *)v15 - 2);
      v15 -= 16;

    }
    while (v15 != v17);
    v15 = v17;
  }
  if (v15)
LABEL_17:
    operator delete(v15);
  return v13;
}

void sub_239718CF0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 202, a3, a4);
}

void sub_239718CF8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 216, a3, a4);
}

void sub_239718D00(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 201, a3, a4);
}

void sub_239718D08(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 200, a3, a4);
}

void sub_239718D10(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 110, a3, a4);
}

void sub_239718D18(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 124, a3, a4);
}

void sub_239718D20(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 105, a3, a4);
}

void sub_239718D28(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 523, a3, a4);
}

void sub_239718D30(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 630, a3, a4);
}

void sub_239718D38(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 25, a3, a4);
}

void sub_239718D40(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 509, a3, a4);
}

void sub_239718D48(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 508, a3, a4);
}

uint64_t sub_239718D50(uint64_t *a1, int32x2_t *a2, int *a3, int *a4, int32x2_t *a5, uint64_t a6, _DWORD *a7, uint64_t a8)
{
  void *v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  char v20;
  uint64_t v21;
  char *v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  size_t v28;
  __int32 v29;
  char v30;
  uint64_t v31;
  id v32;
  void *v33;
  const void *v34;
  int32x2_t v35;
  std::__shared_weak_count *v36;
  unint64_t *p_shared_owners;
  unint64_t v38;
  unint64_t v39;
  id v40;
  char *v41;
  char *v42;
  int32x2_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  unsigned __int32 v48;
  void *v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  char v56;
  char *v57;
  char *v58;
  __int128 v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  int32x2_t v83;
  void *__dst;
  int32x2_t v85;
  __int32 v86;
  void *v87;
  void *context;
  _QWORD *v90;
  void *v91;
  uint64_t v92;
  int v94;
  __int128 v95;
  int32x2_t v96;
  int v97;
  char *v98;
  char *v99;
  unint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;

  v103 = *MEMORY[0x24BDAC8D0];
  v14 = (void *)MEMORY[0x23B83EC40]();
  if (a1[1] != *a1)
  {
    context = v14;
    v92 = a8;
    sub_2397A9494(a8 + 32);
    v15 = objc_claimAutoreleasedReturnValue();

    if (!v15)
    {
LABEL_119:
      v14 = context;
      goto LABEL_120;
    }
    sub_2397A9494(v92 + 16);
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v87, "commandBuffer");
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    v97 = 0;
    v96 = 0;
    v95 = 0uLL;
    v94 = 0;
    v16 = a2[6].i32[0];
    if (!v16)
    {
      sub_239A444D4((uint64_t)"unknown file", 425, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v17 = (a2[6].i32[0] & 3) - 1;
    if (v17 > 2)
      v18 = 0;
    else
      v18 = dword_239ED4FE4[v17];
    v97 = v18;
    v96 = a2[3];
    v19 = sub_2396F5EC0(v16);
    v101 = 0uLL;
    v102 = 0;
    if (v97 == 3)
      v20 = 1;
    else
      v20 = 2 * (v97 != 1);
    v21 = ((v96.i32[1] * v19 * v96.i32[0]) << v20);
    if ((_DWORD)v21)
    {
      v22 = (char *)operator new(0x18uLL);
      v99 = v22 + 24;
      v100 = (unint64_t)(v22 + 24);
      *(_QWORD *)v22 = v21;
      *((_QWORD *)v22 + 1) = 0;
      *((_QWORD *)v22 + 2) = &v95;
      v98 = v22;
      v90 = (_QWORD *)(v92 + 88);
      v23 = sub_2397A69A4((_QWORD *)(v92 + 88), (uint64_t *)&v98, (void ***)&v101);
      if (v98)
      {
        v99 = v98;
        operator delete(v98);
      }
      v24 = v101;
      if ((_QWORD)v101)
      {
        v25 = *((_QWORD *)&v101 + 1);
        v26 = (void *)v101;
        if (*((_QWORD *)&v101 + 1) != (_QWORD)v101)
        {
          do
          {
            v27 = *(void **)(v25 - 8);
            v25 -= 8;

          }
          while (v25 != v24);
          v26 = (void *)v101;
        }
        *((_QWORD *)&v101 + 1) = v24;
        operator delete(v26);
        if (v23)
          goto LABEL_19;
      }
      else if (v23)
      {
LABEL_19:
        v28 = a2[4].u32[0];
        v86 = v96.i32[1];
        v29 = v96.i32[0];
        if (v97 == 3)
          v30 = 1;
        else
          v30 = 2 * (v97 != 1);
        v31 = ((v96.i32[0] * v19) << v30);
        if ((_DWORD)v28 == (_DWORD)v31)
        {
          sub_2397A9494((uint64_t)&v95);
          v32 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
          v33 = (void *)objc_msgSend(v32, "contents");
          v34 = (const void *)a2[5];
          if (a2[6].i8[4] && v34)
          {
            __dst = v33;
            v35 = a2[1];
            v36 = (std::__shared_weak_count *)a2[2];
            if (v36)
            {
              p_shared_owners = (unint64_t *)&v36->__shared_owners_;
              do
                v38 = __ldxr(p_shared_owners);
              while (__stxr(v38 + 1, p_shared_owners));
              do
                v39 = __ldaxr(p_shared_owners);
              while (__stlxr(v39 - 1, p_shared_owners));
              if (!v39)
              {
                v83 = v35;
                ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
                std::__shared_weak_count::__release_weak(v36);
                v35 = v83;
              }
            }
            (*(void (**)(int32x2_t, _QWORD, const char *))(**(_QWORD **)&v35 + 88))(v35, 0, "unknown location");
            v33 = __dst;
            v34 = (const void *)a2[5];
          }
          memcpy(v33, v34, ((v86 * v19 * v29) << v30));

        }
        else
        {
          sub_2397A9494((uint64_t)&v95);
          v40 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
          v41 = (char *)objc_msgSend(v40, "contents");

          v42 = (char *)a2[5];
          if (a2[6].i8[4] && v42)
          {
            v43 = a2[1];
            v44 = (std::__shared_weak_count *)a2[2];
            if (v44)
            {
              v45 = (unint64_t *)&v44->__shared_owners_;
              do
                v46 = __ldxr(v45);
              while (__stxr(v46 + 1, v45));
              do
                v47 = __ldaxr(v45);
              while (__stlxr(v47 - 1, v45));
              if (!v47)
              {
                v85 = v43;
                ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
                std::__shared_weak_count::__release_weak(v44);
                v43 = v85;
              }
            }
            (*(void (**)(int32x2_t, _QWORD, const char *))(**(_QWORD **)&v43 + 88))(v43, 0, "unknown location");
            v42 = (char *)a2[5];
          }
          if (v96.i32[1])
          {
            v48 = 0;
            do
            {
              memcpy(v41, v42, v28);
              ++v48;
              v42 += v28;
              v41 += v31;
            }
            while (v48 < v96.i32[1]);
          }
        }
        sub_2397A9494((uint64_t)&v95);
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        sub_2397A9DB4((uint64_t)&v95);
        nullsub_4(v49);

        sub_23946D5E0(&v101, (uint64_t)&v95);
        sub_23971D60C(&v98, (uint64_t)&v101, 1uLL);
        v50 = (std::__shared_weak_count *)*((_QWORD *)&v101 + 1);
        if (*((_QWORD *)&v101 + 1))
        {
          v51 = (unint64_t *)(*((_QWORD *)&v101 + 1) + 8);
          do
            v52 = __ldaxr(v51);
          while (__stlxr(v52 - 1, v51));
          if (!v52)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        v53 = *a1;
        v54 = a1[1];
        if (*a1 != v54)
        {
          while (1)
          {
            switch(*(_DWORD *)v53)
            {
              case 0:
                *a3 = 0;
                if ((sub_23971B280(v92, (uint64_t)&v95, &v97, v19, &v96, v90, v91, a6, a3, a4, a5) & 1) != 0)
                  goto LABEL_76;
                goto LABEL_102;
              case 1:
                *a3 = 3;
                v56 = sub_23971B280(v92, (uint64_t)&v95, &v97, v19, &v96, v90, v91, a6, a3, a4, a5);
                goto LABEL_75;
              case 2:
                *a3 = 2;
                v56 = sub_23971B280(v92, (uint64_t)&v95, &v97, v19, &v96, v90, v91, a6, a3, a4, a5);
                goto LABEL_75;
              case 3:
                *a3 = 1;
                v56 = sub_23971B280(v92, (uint64_t)&v95, &v97, v19, &v96, v90, v91, a6, a3, a4, a5);
                goto LABEL_75;
              case 4:
                *a4 = 1;
                v56 = sub_23971B6DC(v92, (uint64_t)&v95, &v97, v19, (uint64_t *)&v96, v90, v91, a6, a3, a4, (uint64_t *)a5);
                goto LABEL_75;
              case 5:
                *a4 = 3;
                v56 = sub_23971B6DC(v92, (uint64_t)&v95, &v97, v19, (uint64_t *)&v96, v90, v91, a6, a3, a4, (uint64_t *)a5);
                goto LABEL_75;
              case 6:
                *a4 = 4;
                v56 = sub_23971B6DC(v92, (uint64_t)&v95, &v97, v19, (uint64_t *)&v96, v90, v91, a6, a3, a4, (uint64_t *)a5);
                goto LABEL_75;
              case 7:
                *a7 = 1;
                v56 = sub_23971BB64(v92, (uint64_t)&v95, &v97, v19, (uint64_t *)&v96, (uint64_t)a7, v90, v91, a6, a3, a4, (uint64_t *)a5);
                goto LABEL_75;
              case 8:
                *a7 = 0;
                v56 = sub_23971BB64(v92, (uint64_t)&v95, &v97, v19, (uint64_t *)&v96, (uint64_t)a7, v90, v91, a6, a3, a4, (uint64_t *)a5);
                goto LABEL_75;
              case 9:
                v94 = 0;
                v56 = sub_23971BF64(v92, (uint64_t)&v95, &v97, v19, (uint32x2_t *)&v96, (uint64_t)&v94, v90, v91, *(float *)(v53 + 4), *(float *)(v53 + 8), a6, a3, a4, a5);
                goto LABEL_75;
              case 0xA:
                v94 = 1;
                v56 = sub_23971BF64(v92, (uint64_t)&v95, &v97, v19, (uint32x2_t *)&v96, (uint64_t)&v94, v90, v91, *(float *)(v53 + 4), *(float *)(v53 + 8), a6, a3, a4, a5);
LABEL_75:
                if ((v56 & 1) != 0)
                  goto LABEL_76;
                goto LABEL_102;
              case 0xB:
                HIBYTE(v102) = 6;
                strcpy((char *)&v101, "camera");
                v55 = sub_23971D7B4((_QWORD *)(v53 + 16), (uint64_t)&v101);
                if (SHIBYTE(v102) < 0)
                  operator delete((void *)v101);
                if (!v55)
                {
LABEL_102:
                  v15 = 0;
                  v73 = v98;
                  if (v98)
                    goto LABEL_103;
                  goto LABEL_113;
                }
                sub_23971C490(v92, (uint64_t)&v95, &v97, v19, (uint64_t *)&v96, v55[5], v90, v91, a6, a3, a4, (uint64_t *)a5);
LABEL_76:
                v57 = v99;
                if ((unint64_t)v99 >= v100)
                {
                  v58 = sub_23971D9E0(&v98, a6);
                }
                else
                {
                  sub_23946D5E0(v99, a6);
                  v58 = v57 + 16;
                }
                v99 = v58;
                v97 = *a3;
                v96 = *a5;
                v19 = *a4;
                sub_23946D5E0(&v101, a6);
                v59 = v101;
                v101 = 0uLL;
                v60 = (std::__shared_weak_count *)*((_QWORD *)&v95 + 1);
                v95 = v59;
                if (v60)
                {
                  v61 = (unint64_t *)&v60->__shared_owners_;
                  do
                    v62 = __ldaxr(v61);
                  while (__stlxr(v62 - 1, v61));
                  if (!v62)
                  {
                    ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
                    std::__shared_weak_count::__release_weak(v60);
                  }
                }
                v63 = (std::__shared_weak_count *)*((_QWORD *)&v101 + 1);
                if (*((_QWORD *)&v101 + 1))
                {
                  v64 = (unint64_t *)(*((_QWORD *)&v101 + 1) + 8);
                  do
                    v65 = __ldaxr(v64);
                  while (__stlxr(v65 - 1, v64));
                  if (!v65)
                  {
                    ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
                    std::__shared_weak_count::__release_weak(v63);
                  }
                }
                v53 += 56;
                if (v53 == v54)
                  goto LABEL_89;
                break;
              case 0xC:
                sub_23971C960(v92, (uint64_t)&v95, &v97, v19, &v96, v91, a6, a3, *(float *)(v53 + 4), *(float *)(v53 + 8), a4, a5);
                goto LABEL_76;
              case 0xD:
                sub_23971CBF4(v92, (uint64_t)&v95, &v97, v19, &v96, v91, a6, a3, *(float *)(v53 + 4), a4, a5);
                goto LABEL_76;
              case 0xE:
                sub_23971CE74(v92, (uint64_t)&v95, &v97, v19, &v96, v91, a6, a3, *(float *)(v53 + 4), a4, a5);
                goto LABEL_76;
              default:
                goto LABEL_76;
            }
          }
        }
LABEL_89:
        sub_2397A9494(a6);
        v66 = (void *)objc_claimAutoreleasedReturnValue();
        nullsub_4(v91);

        sub_23971DB68();
        objc_msgSend(v91, "commit");
        objc_msgSend(v91, "waitUntilCompleted");
        v101 = 0uLL;
        v102 = 0;
        sub_2397A5FB4(v90, (uint64_t *)&v98, (uint64_t *)&v101);
        v67 = v101;
        if ((_QWORD)v101)
        {
          v68 = *((_QWORD *)&v101 + 1);
          v69 = (void *)v101;
          if (*((_QWORD *)&v101 + 1) != (_QWORD)v101)
          {
            do
            {
              v70 = *(std::__shared_weak_count **)(v68 - 8);
              if (v70)
              {
                v71 = (unint64_t *)&v70->__shared_owners_;
                do
                  v72 = __ldaxr(v71);
                while (__stlxr(v72 - 1, v71));
                if (!v72)
                {
                  ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
                  std::__shared_weak_count::__release_weak(v70);
                }
              }
              v68 -= 16;
            }
            while (v68 != v67);
            v69 = (void *)v101;
          }
          *((_QWORD *)&v101 + 1) = v67;
          operator delete(v69);
        }
        v15 = 1;
        v73 = v98;
        if (v98)
        {
LABEL_103:
          v74 = v99;
          v75 = v73;
          if (v99 != v73)
          {
            do
            {
              v76 = (std::__shared_weak_count *)*((_QWORD *)v74 - 1);
              if (v76)
              {
                v77 = (unint64_t *)&v76->__shared_owners_;
                do
                  v78 = __ldaxr(v77);
                while (__stlxr(v78 - 1, v77));
                if (!v78)
                {
                  ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
                  std::__shared_weak_count::__release_weak(v76);
                }
              }
              v74 -= 16;
            }
            while (v74 != v73);
            v75 = v98;
          }
          v99 = v73;
          operator delete(v75);
        }
LABEL_113:
        v79 = (std::__shared_weak_count *)*((_QWORD *)&v95 + 1);
        if (*((_QWORD *)&v95 + 1))
        {
          v80 = (unint64_t *)(*((_QWORD *)&v95 + 1) + 8);
          do
            v81 = __ldaxr(v80);
          while (__stlxr(v81 - 1, v80));
          if (!v81)
          {
            ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
            std::__shared_weak_count::__release_weak(v79);
          }
        }

        goto LABEL_119;
      }
    }
    v15 = 0;
    goto LABEL_113;
  }
  v15 = 1;
LABEL_120:
  objc_autoreleasePoolPop(v14);
  return v15;
}

void sub_23971979C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  sub_239416DA0((uint64_t)va);

  _Unwind_Resume(a1);
}

uint64_t sub_239719898(uint64_t *a1, int32x2_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int v9;
  char v10;
  size_t v11;
  uint64_t v12;
  __int32 v13;
  void *v14;
  id v15;
  uint64_t v16;
  unsigned __int32 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  id v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  uint64_t v27;
  void *context;
  std::mutex *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  int32x2_t v34;
  uint64_t v35;

  context = (void *)MEMORY[0x23B83EC40]();
  v29 = (std::mutex *)(a4 + 152);
  std::mutex::lock((std::mutex *)(a4 + 152));
  v34 = 0;
  v35 = 0;
  v32 = 0;
  v33 = 0;
  v31 = 0;
  v8 = sub_239718D50(a1, a2, (int *)&v35 + 1, (int *)&v35, &v34, (uint64_t)&v32, &v31, a4);
  if ((v8 & 1) == 0)
    goto LABEL_23;
  v9 = v34.i32[0] * v35;
  if (HIDWORD(v35) == 3)
    v10 = 1;
  else
    v10 = 2 * (HIDWORD(v35) != 1);
  v11 = (v9 << v10);
  v12 = *(unsigned int *)(a3 + 76);
  if (v12 < v11)
  {
    v27 = 860;
    goto LABEL_33;
  }
  if (v34.i32[0] != *(_DWORD *)(a3 + 64))
  {
    v27 = 861;
    goto LABEL_33;
  }
  v13 = v34.i32[1];
  if (v34.i32[1] != *(_DWORD *)(a3 + 68))
  {
    v27 = 862;
    goto LABEL_33;
  }
  if ((_DWORD)v35 << v10 != 1)
  {
    v27 = 864;
LABEL_33:
    sub_239A444D4((uint64_t)"unknown file", v27, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if ((_DWORD)v12 == (_DWORD)v11)
  {
    sub_2395795F0(a3, &v30);
    v14 = *(void **)(a3 + 32);
    if (*(_BYTE *)(a3 + 80) && v14)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
      v14 = *(void **)(a3 + 32);
    }
    sub_2397A9494((uint64_t)&v32);
    v15 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    memcpy(v14, (const void *)objc_msgSend(v15, "contents", context, v29), ((v9 * v13) << v10));

    v16 = v30;
    v30 = 0;
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  }
  else if (v34.i32[1])
  {
    v17 = 0;
    v18 = 0;
    v19 = 0;
    do
    {
      v20 = *(_QWORD *)(a3 + 32);
      if (*(_BYTE *)(a3 + 80))
        v21 = v20 == 0;
      else
        v21 = 1;
      if (!v21)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a3 + 8) + 88))(*(_QWORD *)(a3 + 8), 1, "unknown location");
        v20 = *(_QWORD *)(a3 + 32);
      }
      sub_2397A9494((uint64_t)&v32);
      v22 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      memcpy((void *)(v20 + v18), (const void *)(objc_msgSend(v22, "contents", context, v29) + v19), v11);

      ++v17;
      v19 += v11;
      v18 += v12;
    }
    while (v17 < v34.i32[1]);
  }
LABEL_23:
  v23 = v33;
  if (v33)
  {
    p_shared_owners = (unint64_t *)&v33->__shared_owners_;
    do
      v25 = __ldaxr(p_shared_owners);
    while (__stlxr(v25 - 1, p_shared_owners));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  std::mutex::unlock(v29);
  objc_autoreleasePoolPop(context);
  return v8;
}

void sub_239719B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, uint64_t a11, uint64_t a12, char a13)
{
  void *v13;

  if (a11)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
    sub_239416DA0((uint64_t)&a13);
    std::mutex::unlock(a10);
    _Unwind_Resume(a1);
  }
  sub_239416DA0((uint64_t)&a13);
  std::mutex::unlock(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_239719BC8(uint64_t *a1, int32x2_t *a2, uint64_t a3, uint64_t a4)
{
  std::mutex *v8;
  uint64_t v9;
  int v10;
  char v11;
  size_t v12;
  uint64_t v13;
  __int32 v14;
  void *v15;
  id v16;
  uint64_t v17;
  unsigned __int32 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  uint64_t v27;
  void *context;
  uint64_t v29;
  int v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  int32x2_t v33;
  uint64_t v34;

  context = (void *)MEMORY[0x23B83EC40]();
  v8 = (std::mutex *)(a4 + 152);
  std::mutex::lock((std::mutex *)(a4 + 152));
  v33 = 0;
  v34 = 0;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  v9 = sub_239718D50(a1, a2, (int *)&v34 + 1, (int *)&v34, &v33, (uint64_t)&v31, &v30, a4);
  if ((v9 & 1) == 0)
    goto LABEL_15;
  v10 = v33.i32[0] * v34;
  if (HIDWORD(v34) == 3)
    v11 = 1;
  else
    v11 = 2 * (HIDWORD(v34) != 1);
  v12 = (v10 << v11);
  v13 = *(unsigned int *)(a3 + 76);
  if (v13 < v12)
  {
    v27 = 860;
    goto LABEL_25;
  }
  if (v33.i32[0] != *(_DWORD *)(a3 + 64))
  {
    v27 = 861;
    goto LABEL_25;
  }
  v14 = v33.i32[1];
  if (v33.i32[1] != *(_DWORD *)(a3 + 68))
  {
    v27 = 862;
    goto LABEL_25;
  }
  if ((_DWORD)v34 << v11 != 1)
  {
    v27 = 864;
LABEL_25:
    sub_239A444D4((uint64_t)"unknown file", v27, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if ((_DWORD)v13 == (_DWORD)v12)
  {
    sub_23946A0B4(a3, &v29);
    v15 = *(void **)(a3 + 32);
    sub_2397A9494((uint64_t)&v31);
    v16 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    memcpy(v15, (const void *)objc_msgSend(v16, "contents"), ((v10 * v14) << v11));

    v17 = v29;
    v29 = 0;
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  }
  else if (v33.i32[1])
  {
    v18 = 0;
    v19 = 0;
    v20 = 0;
    do
    {
      v21 = *(_QWORD *)(a3 + 32);
      sub_2397A9494((uint64_t)&v31);
      v22 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      memcpy((void *)(v21 + v19), (const void *)(objc_msgSend(v22, "contents") + v20), v12);

      ++v18;
      v20 += v12;
      v19 += v13;
    }
    while (v18 < v33.i32[1]);
  }
LABEL_15:
  v23 = v32;
  if (v32)
  {
    p_shared_owners = (unint64_t *)&v32->__shared_owners_;
    do
      v25 = __ldaxr(p_shared_owners);
    while (__stlxr(v25 - 1, p_shared_owners));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  std::mutex::unlock(v8);
  objc_autoreleasePoolPop(context);
  return v9;
}

void sub_239719E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  std::mutex *v5;
  void *v6;
  va_list va;

  va_start(va, a5);

  if (a4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a4 + 8))(a4);
    sub_239416DA0((uint64_t)va);
    std::mutex::unlock(v5);
    _Unwind_Resume(a1);
  }
  sub_239416DA0((uint64_t)va);
  std::mutex::unlock(v5);
  _Unwind_Resume(a1);
}

uint64_t sub_239719E98(uint64_t a1, int a2, uint64_t a3, float a4, float a5)
{
  *(_DWORD *)a1 = a2;
  *(float *)(a1 + 4) = a4;
  *(float *)(a1 + 8) = a5;
  sub_239428344(a1 + 16, a3);
  return a1;
}

void sub_239719ECC(int a1)
{
  __asm { BR              X10 }
}

size_t sub_239719F10()
{
  _QWORD *v0;
  const char *v1;
  const char *v2;
  size_t result;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8[80];

  strcpy(v8, ">}QPH[LJz_J_jGN[");
  sub_2396EFA24((uint64_t)v8);
  v2 = v1;
  result = strlen(v1);
  if (result > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v4 = result;
  if (result >= 0x17)
  {
    v5 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17)
      v5 = result | 7;
    v6 = v5 + 1;
    v7 = operator new(v5 + 1);
    v0[1] = v4;
    v0[2] = v6 | 0x8000000000000000;
    *v0 = v7;
    v0 = v7;
    goto LABEL_7;
  }
  *((_BYTE *)v0 + 23) = result;
  if (result)
LABEL_7:
    result = (size_t)memmove(v0, v2, v4);
  *((_BYTE *)v0 + v4) = 0;
  return result;
}

double sub_23971A32C(uint64_t a1, int16x8_t a2)
{
  int8x16_t v2;
  uint64_t v3;

  a2.i64[0] = *(_QWORD *)a1;
  v2.i64[0] = *(_QWORD *)a1;
  v2.i8[1] = *(_BYTE *)(a1 + 8);
  v2.i64[1] = v2.i64[0];
  *(int8x8_t *)v2.i8 = veor_s8(*(int8x8_t *)a1, vqtbl1_s8(v2, (int8x8_t)1));
  *(int8x8_t *)v2.i8 = vext_s8(*(int8x8_t *)v2.i8, *(int8x8_t *)v2.i8, 1uLL);
  *(_QWORD *)(a1 + 1) = v2.i64[0];
  v3 = a1 + 1;
  v2.i32[0] = *(_DWORD *)(v3 + 8);
  *(int8x8_t *)a2.i8 = veor_s8((int8x8_t)vdup_n_s16(a2.u8[0]), (int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v2.i8));
  *(int8x8_t *)a2.i8 = vmovn_s16(a2);
  *(_DWORD *)(v3 + 8) = a2.i32[0];
  *(_BYTE *)(v3 + 12) = 0;
  return *(double *)a2.i64;
}

BOOL sub_23971A37C(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  unint64_t i;
  id v5;
  const char *v6;
  size_t v7;
  void *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint8x8_t v16;
  char *v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void **v24;
  void *v25;
  void **v27;
  void *v28;
  void *__p[2];
  unint64_t v30;
  void *v31[2];
  void *v32[2];
  int v33;

  v1 = a1;
  v2 = operator new(0x20uLL);
  *(_OWORD *)v2 = xmmword_239ED07A0;
  *((_OWORD *)v2 + 1) = unk_239ED07B0;
  *(_OWORD *)v31 = 0u;
  *(_OWORD *)v32 = 0u;
  v33 = 1065353216;
  sub_239719ECC(0);
  sub_2395138D4((uint64_t)v31, (uint64_t)__p, (uint64_t)__p);
  if (SHIBYTE(v30) < 0)
    operator delete(__p[0]);
  sub_239719ECC(*((_DWORD *)v2 + 1));
  sub_2395138D4((uint64_t)v31, (uint64_t)__p, (uint64_t)__p);
  if (SHIBYTE(v30) < 0)
    operator delete(__p[0]);
  sub_239719ECC(*((_DWORD *)v2 + 2));
  sub_2395138D4((uint64_t)v31, (uint64_t)__p, (uint64_t)__p);
  if (SHIBYTE(v30) < 0)
    operator delete(__p[0]);
  sub_239719ECC(*((_DWORD *)v2 + 3));
  sub_2395138D4((uint64_t)v31, (uint64_t)__p, (uint64_t)__p);
  if (SHIBYTE(v30) < 0)
    operator delete(__p[0]);
  sub_239719ECC(*((_DWORD *)v2 + 4));
  sub_2395138D4((uint64_t)v31, (uint64_t)__p, (uint64_t)__p);
  if (SHIBYTE(v30) < 0)
    operator delete(__p[0]);
  sub_239719ECC(*((_DWORD *)v2 + 5));
  sub_2395138D4((uint64_t)v31, (uint64_t)__p, (uint64_t)__p);
  if (SHIBYTE(v30) < 0)
    operator delete(__p[0]);
  sub_239719ECC(*((_DWORD *)v2 + 6));
  sub_2395138D4((uint64_t)v31, (uint64_t)__p, (uint64_t)__p);
  if (SHIBYTE(v30) < 0)
    operator delete(__p[0]);
  sub_239719ECC(*((_DWORD *)v2 + 7));
  sub_2395138D4((uint64_t)v31, (uint64_t)__p, (uint64_t)__p);
  if (SHIBYTE(v30) < 0)
    operator delete(__p[0]);
  objc_msgSend(v1, "functionNames", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  for (i = 0; i < objc_msgSend(v3, "count"); ++i)
  {
    objc_msgSend(v3, "objectAtIndexedSubscript:", i);
    v5 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    v6 = (const char *)objc_msgSend(v5, "UTF8String");
    v7 = strlen(v6);
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
      sub_23941A5AC();
    v8 = (void *)v7;
    if (v7 >= 0x17)
    {
      v11 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17)
        v11 = v7 | 7;
      v12 = v11 + 1;
      v9 = operator new(v11 + 1);
      __p[1] = v8;
      v30 = v12 | 0x8000000000000000;
      __p[0] = v9;
    }
    else
    {
      HIBYTE(v30) = v7;
      v9 = __p;
      if (!v7)
      {
        LOBYTE(__p[0]) = 0;
        v10 = (char *)sub_239514158(v31, (uint64_t)__p);
        if (!v10)
          goto LABEL_24;
        goto LABEL_30;
      }
    }
    memmove(v9, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v9) = 0;
    v10 = (char *)sub_239514158(v31, (uint64_t)__p);
    if (!v10)
    {
LABEL_24:
      if ((SHIBYTE(v30) & 0x80000000) == 0)
        goto LABEL_18;
      goto LABEL_60;
    }
LABEL_30:
    v13 = v10;
    v14 = (unint64_t)v31[1];
    v15 = *((_QWORD *)v10 + 1);
    v16 = (uint8x8_t)vcnt_s8((int8x8_t)v31[1]);
    v16.i16[0] = vaddlv_u8(v16);
    if (v16.u32[0] > 1uLL)
    {
      if ((void *)v15 >= v31[1])
        v15 %= (unint64_t)v31[1];
    }
    else
    {
      v15 &= (unint64_t)v31[1] - 1;
    }
    v17 = (char *)*((_QWORD *)v31[0] + v15);
    do
    {
      v18 = v17;
      v17 = *(char **)v17;
    }
    while (v17 != v10);
    if (v18 == (char *)v32)
      goto LABEL_47;
    v19 = *((_QWORD *)v18 + 1);
    if (v16.u32[0] > 1uLL)
    {
      if ((void *)v19 >= v31[1])
        v19 %= (unint64_t)v31[1];
    }
    else
    {
      v19 &= (unint64_t)v31[1] - 1;
    }
    if (v19 != v15)
    {
LABEL_47:
      if (!*(_QWORD *)v10)
        goto LABEL_48;
      v20 = *(_QWORD *)(*(_QWORD *)v10 + 8);
      if (v16.u32[0] > 1uLL)
      {
        if ((void *)v20 >= v31[1])
          v20 %= (unint64_t)v31[1];
      }
      else
      {
        v20 &= (unint64_t)v31[1] - 1;
      }
      if (v20 != v15)
LABEL_48:
        *((_QWORD *)v31[0] + v15) = 0;
    }
    v21 = *(_QWORD *)v10;
    if (*(_QWORD *)v10)
    {
      v22 = *(_QWORD *)(v21 + 8);
      if (v16.u32[0] > 1uLL)
      {
        if (v22 >= v14)
          v22 %= v14;
      }
      else
      {
        v22 &= v14 - 1;
      }
      if (v22 != v15)
      {
        *((_QWORD *)v31[0] + v22) = v18;
        v21 = *(_QWORD *)v10;
      }
    }
    *(_QWORD *)v18 = v21;
    *(_QWORD *)v10 = 0;
    --v32[1];
    if (v10[39] < 0)
    {
      operator delete(*((void **)v10 + 2));
      operator delete(v13);
      if ((SHIBYTE(v30) & 0x80000000) == 0)
        goto LABEL_18;
    }
    else
    {
      operator delete(v10);
      if ((SHIBYTE(v30) & 0x80000000) == 0)
        goto LABEL_18;
    }
LABEL_60:
    operator delete(__p[0]);
LABEL_18:

  }
  v23 = v32[1];

  v24 = (void **)v32[0];
  if (v32[0])
  {
    do
    {
      v27 = (void **)*v24;
      if (*((char *)v24 + 39) < 0)
        operator delete(v24[2]);
      operator delete(v24);
      v24 = v27;
    }
    while (v27);
  }
  v25 = v31[0];
  v31[0] = 0;
  if (v25)
    operator delete(v25);
  operator delete(v2);

  return v23 == 0;
}

void sub_23971A81C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  void *v16;

  sub_23942823C((uint64_t)&a16);
  operator delete(v16);

  _Unwind_Resume(a1);
}

id sub_23971A898()
{
  void *v0;
  id v1;
  const char *v2;
  const char *v3;
  size_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v16;
  void *__p[2];
  int64_t v18;
  unsigned __int8 __dst[18431];
  uint64_t v20;

  v0 = (void *)MEMORY[0x24BDAC7A8]();
  v20 = *MEMORY[0x24BDAC8D0];
  v1 = v0;
  memcpy(__dst, &unk_239ED07E2, sizeof(__dst));
  sub_23971AAC8(__dst);
  v3 = v2;
  v4 = strlen(v2);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    __p[1] = v5;
    v18 = v8 | 0x8000000000000000;
    __p[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v18) = v4;
  v6 = __p;
  if (v4)
LABEL_8:
    memmove(v6, v3, (size_t)v5);
  *((_BYTE *)v5 + (_QWORD)v6) = 0;
  if (v18 >= 0)
    v9 = __p;
  else
    v9 = (void **)__p[0];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_opt_new();
  objc_msgSend(v11, "setLanguageVersion:", sub_2397AA038());
  v16 = 0;
  v12 = (void *)objc_msgSend(v1, "newLibraryWithSource:options:error:", v10, v11, &v16);
  v13 = v16;
  if (v13 || !sub_23971A37C(v12))
    v14 = 0;
  else
    v14 = v12;

  if (SHIBYTE(v18) < 0)
    operator delete(__p[0]);

  return v14;
}

void sub_23971AA70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  if (a16 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

int8x8_t sub_23971AAC8(unsigned __int8 *a1)
{
  unsigned int v1;
  int8x16_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  int8x16_t v5;
  int8x8_t v6;
  int8x8_t v7;
  int8x8_t result;

  v1 = *a1;
  v2 = vdupq_n_s8(v1);
  v3 = -18400;
  do
  {
    v4 = &a1[v3];
    v5 = veorq_s8(v2, *(int8x16_t *)&a1[v3 + 18417]);
    *(int8x16_t *)(v4 + 18401) = veorq_s8(v2, *(int8x16_t *)&a1[v3 + 18401]);
    *(int8x16_t *)(v4 + 18417) = v5;
    v3 += 32;
  }
  while (v3);
  v6 = vdup_n_s8(v1);
  v7 = veor_s8(v6, *(int8x8_t *)(a1 + 18409));
  *(int8x8_t *)(a1 + 18401) = veor_s8(v6, *(int8x8_t *)(a1 + 18401));
  *(int8x8_t *)(a1 + 18409) = v7;
  result = veor_s8(v6, *(int8x8_t *)(a1 + 18417));
  *(int8x8_t *)(a1 + 18417) = result;
  a1[18425] ^= v1;
  a1[18426] ^= v1;
  a1[18427] ^= v1;
  a1[18428] ^= v1;
  a1[18429] ^= v1;
  a1[18430] = 0;
  return result;
}

uint64_t sub_23971AB6C(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _OWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void **v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  __int128 v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *__p[2];
  char v35;
  int v36;
  int *v37;

  sub_23946D5E0((_QWORD *)a1, a2);
  sub_2397A9494(a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v4, "newCommandQueue");
  sub_2397A9468((std::__shared_weak_count_vtbl **)(a1 + 16), v5);

  sub_2397A9494(a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_23971A898();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  sub_2397A9468((std::__shared_weak_count_vtbl **)(a1 + 32), v7);

  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_DWORD *)(a1 + 80) = 1065353216;
  v32 = a1 + 48;
  sub_23946D5E0((_QWORD *)(a1 + 88), a2);
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_QWORD *)(a1 + 152) = 850045863;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 201) = 0u;
  sub_2397A9494(a1 + 32);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = a1 + 88;
  v29 = a1 + 32;
  v30 = a1 + 16;
  v31 = a1;
  v9 = operator new(0x20uLL);
  v10 = 0;
  v11 = 0;
  *v9 = xmmword_239ED07A0;
  v9[1] = unk_239ED07B0;
  do
  {
    v12 = v10;
    v36 = *((_DWORD *)v9 + v11);
    v13 = (void *)MEMORY[0x24BDD17C8];
    sub_239719ECC(v36);
    if (v35 >= 0)
      v14 = __p;
    else
      v14 = (void **)__p[0];
    objc_msgSend(v13, "stringWithUTF8String:", v14, v28, v29, v30);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (v35 < 0)
      operator delete(__p[0]);
    v16 = (void *)objc_msgSend(v8, "newFunctionWithName:", v15);
    sub_2397A9494(a2);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v33 = v10;
    v18 = (void *)objc_msgSend(v17, "newComputePipelineStateWithFunction:error:", v16, &v33);
    v10 = v33;

    sub_2397A9468((std::__shared_weak_count_vtbl **)__p, v18);
    v37 = &v36;
    v19 = sub_23971D2DC(v32, &v36, (uint64_t)&unk_239EC6E98, &v37);
    v20 = *(_OWORD *)__p;
    __p[0] = 0;
    __p[1] = 0;
    v21 = (std::__shared_weak_count *)v19[4];
    *(_OWORD *)(v19 + 3) = v20;
    if (!v21)
      goto LABEL_12;
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      v24 = (std::__shared_weak_count *)__p[1];
      if (!__p[1])
        goto LABEL_2;
    }
    else
    {
LABEL_12:
      v24 = (std::__shared_weak_count *)__p[1];
      if (!__p[1])
        goto LABEL_2;
    }
    v25 = (unint64_t *)&v24->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
LABEL_2:

    ++v11;
  }
  while (v11 != 8);
  operator delete(v9);

  return v31;
}

void sub_23971AE2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  void *v20;

  sub_239420D98(a9);
  sub_23946314C(a13);
  sub_239416DA0(a10);
  sub_239416DA0(a11);
  sub_239416DA0(a12);
  _Unwind_Resume(a1);
}

uint64_t *sub_23971AF94(uint64_t a1, int a2)
{
  unint64_t v2;
  uint8x8_t v3;
  unint64_t v4;
  uint64_t **v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 56);
  if (!v2)
    goto LABEL_22;
  v3 = (uint8x8_t)vcnt_s8((int8x8_t)v2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    v4 = a2;
    if (v2 <= a2)
      v4 = a2 % v2;
  }
  else
  {
    v4 = (v2 - 1) & a2;
  }
  v5 = *(uint64_t ***)(*(_QWORD *)(a1 + 48) + 8 * v4);
  if (!v5 || (v6 = *v5) == 0)
LABEL_22:
    sub_239EC2090();
  if (v3.u32[0] < 2uLL)
  {
    v7 = v2 - 1;
    while (1)
    {
      v9 = v6[1];
      if (v9 == a2)
      {
        if (*((_DWORD *)v6 + 4) == a2)
          return v6 + 3;
      }
      else if ((v9 & v7) != v4)
      {
        goto LABEL_22;
      }
      v6 = (uint64_t *)*v6;
      if (!v6)
        goto LABEL_22;
    }
  }
  while (1)
  {
    v8 = v6[1];
    if (v8 == a2)
      break;
    if (v8 >= v2)
      v8 %= v2;
    if (v8 != v4)
      goto LABEL_22;
LABEL_11:
    v6 = (uint64_t *)*v6;
    if (!v6)
      goto LABEL_22;
  }
  if (*((_DWORD *)v6 + 4) != a2)
    goto LABEL_11;
  return v6 + 3;
}

uint64_t sub_23971B080(int a1, int a2, uint64_t a3, int32x2_t a4)
{
  int v6;
  uint64_t result;
  int32x2_t v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __n128 v13;
  unint64_t *v14;
  unint64_t v15;
  _BYTE v16[8];
  __int128 v17;
  __int128 v18;
  _BYTE v19[22];

  v6 = a2;
  result = 0;
  switch(a1)
  {
    case 0:
      switch(a2)
      {
        case 1:
          v6 = 4;
          goto LABEL_13;
        case 4:
          v6 = 32;
          goto LABEL_13;
        case 3:
          v6 = 24;
          goto LABEL_13;
      }
      result = 0;
      break;
    case 1:
      switch(a2)
      {
        case 1:
          goto LABEL_13;
        case 4:
          v6 = 29;
          goto LABEL_13;
        case 3:
          v6 = 21;
          goto LABEL_13;
      }
      result = 0;
      break;
    case 2:
      return result;
    case 3:
      if ((a2 - 1) > 3)
        goto LABEL_12;
      v6 = dword_239ED5000[a2 - 1];
      goto LABEL_13;
    default:
LABEL_12:
      v6 = 0;
LABEL_13:
      if (*(_DWORD *)(a3 + 56) == v6
        && (v8 = vceq_s32(*(int32x2_t *)(a3 + 32), a4), (v8.i8[0] & 1) != 0)
        && (v8.i8[4] & 1) != 0)
      {
        result = 1;
      }
      else
      {
        sub_2398D8228(v6);
        v9 = v17;
        v17 = 0uLL;
        v10 = *(std::__shared_weak_count **)(a3 + 16);
        *(_OWORD *)(a3 + 8) = v9;
        if (v10)
        {
          p_shared_owners = (unint64_t *)&v10->__shared_owners_;
          do
            v12 = __ldaxr(p_shared_owners);
          while (__stlxr(v12 - 1, p_shared_owners));
          if (!v12)
          {
            ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
            std::__shared_weak_count::__release_weak(v10);
          }
        }
        *(_OWORD *)(a3 + 24) = v18;
        *(_OWORD *)(a3 + 40) = *(_OWORD *)v19;
        *(_QWORD *)(a3 + 54) = *(_QWORD *)&v19[14];
        v13 = nullsub_4((char *)&v18 + 8);
        if (*((_QWORD *)&v17 + 1))
        {
          v14 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
          do
            v15 = __ldaxr(v14);
          while (__stlxr(v15 - 1, v14));
          if (!v15)
          {
            (*(void (**)(_QWORD, __n128))(**((_QWORD **)&v17 + 1) + 16))(*((_QWORD *)&v17 + 1), v13);
            std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v17 + 1));
          }
        }
        j_nullsub_4_89(v16);
        result = 1;
      }
      break;
  }
  return result;
}

uint64_t sub_23971B280(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, int32x2_t *a5, _QWORD *a6, void *a7, uint64_t a8, _DWORD *a9, int *a10, int32x2_t *a11)
{
  id v17;
  void *v18;
  __int128 v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  char *v28;
  id v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  char *v34;
  uint64_t *v35;
  void *v36;
  unsigned __int32 v37;
  unint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  char *v43;
  void *v44;
  void *v45;
  void *v47;
  void *v48;
  _DWORD *v49;
  unint64_t v51;
  int64x2_t v52;
  unint64_t v53;
  int64x2_t v54;
  void *v55;
  char *v56;
  char *v57;
  void *__p[2];
  _QWORD *v59;

  v17 = a7;
  v18 = v17;
  *a10 = a4;
  *a11 = *a5;
  v49 = a3;
  if (*a3 == *a9)
  {
    sub_23946D5E0(__p, a2);
    v19 = *(_OWORD *)__p;
    __p[0] = 0;
    __p[1] = 0;
    v20 = *(std::__shared_weak_count **)(a8 + 8);
    *(_OWORD *)a8 = v19;
    if (v20)
    {
      p_shared_owners = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldaxr(p_shared_owners);
      while (__stlxr(v22 - 1, p_shared_owners));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    v23 = (std::__shared_weak_count *)__p[1];
    if (__p[1])
    {
      v24 = (unint64_t *)((char *)__p[1] + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    goto LABEL_21;
  }
  v48 = v17;
  v26 = *a10;
  sub_2397A9494(a2);
  v27 = a8;
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v55 = operator new(8uLL);
  v28 = (char *)v55 + 8;
  v57 = (char *)v55 + 8;
  v29 = v47;
  *(_QWORD *)v55 = v29;
  v56 = v28;
  if (*a9 == 3)
    v30 = 1;
  else
    v30 = 2 * (*a9 != 1);
  v31 = ((HIDWORD(*(unint64_t *)a11) * v26 * a11->u32[0]) << v30);
  if (!(_DWORD)v31)
  {
    v33 = 0;
    v34 = (char *)v55;
    if (!v55)
      goto LABEL_19;
LABEL_23:
    v43 = v56;
    v44 = v34;
    if (v56 != v34)
    {
      do
      {
        v45 = (void *)*((_QWORD *)v43 - 1);
        v43 -= 8;

      }
      while (v43 != v34);
      v44 = v55;
    }
    v56 = v34;
    operator delete(v44);

    if (v33)
      goto LABEL_20;
LABEL_27:
    v42 = 0;
    v18 = v48;
    goto LABEL_28;
  }
  v32 = operator new(0x18uLL);
  __p[1] = v32 + 3;
  v59 = v32 + 3;
  *v32 = v31;
  v32[1] = 0;
  v32[2] = v27;
  __p[0] = v32;
  v33 = sub_2397A69A4(a6, (uint64_t *)__p, (void ***)&v55);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v34 = (char *)v55;
  if (v55)
    goto LABEL_23;
LABEL_19:

  if (!v33)
    goto LABEL_27;
LABEL_20:
  v18 = v48;
  v35 = sub_23971AF94(a1, 0);
  sub_2397A9494((uint64_t)v35);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = vmul_lane_s32(*a11, *a11, 1).u32[0] * *a10;
  LODWORD(__p[0]) = v37;
  v38 = objc_msgSend(v36, "threadExecutionWidth");
  objc_msgSend(v48, "computeCommandEncoder");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  sub_2397A9494(a2);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v39, "setBuffer:offset:atIndex:", v40, 0, 0);

  objc_msgSend(v39, "setBytes:length:atIndex:", v49, 4, 1);
  objc_msgSend(v39, "setBytes:length:atIndex:", a9, 4, 2);
  objc_msgSend(v39, "setBytes:length:atIndex:", __p, 4, 3);
  sub_2397A9494(v27);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v39, "setBuffer:offset:atIndex:", v41, 0, 4);

  objc_msgSend(v39, "setComputePipelineState:", v36);
  v53 = (v38 + v37 - 1) / v38;
  v54 = vdupq_n_s64(1uLL);
  v51 = v38;
  v52 = v54;
  objc_msgSend(v39, "dispatchThreadgroups:threadsPerThreadgroup:", &v53, &v51);
  objc_msgSend(v39, "endEncoding");

LABEL_21:
  v42 = 1;
LABEL_28:

  return v42;
}

void sub_23971B5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_23971B60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_23971B62C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_23971B644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_23971B65C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24)
{
  if (__p)
  {
    a24 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_239513590(&a20);

  _Unwind_Resume(a1);
}

void sub_23971B6AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_23971B6C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

uint64_t sub_23971B6DC(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, uint64_t *a5, _QWORD *a6, void *a7, uint64_t a8, _DWORD *a9, int *a10, uint64_t *a11)
{
  int v17;
  __int128 v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  char *v25;
  id v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  BOOL v30;
  char *v31;
  uint64_t *v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  char *v40;
  void *v41;
  void *v42;
  void *v44;
  uint64_t v46;
  id v47;
  _QWORD v48[3];
  _QWORD v49[3];
  void *__p;
  char *v51;
  char *v52;
  int v53;
  __int128 v54;
  _QWORD *v55;

  v53 = a4;
  v47 = a7;
  *a9 = *a3;
  *a11 = *a5;
  v17 = *a10;
  if (*a10 == a4)
  {
    sub_23946D5E0(&v54, a2);
    v18 = v54;
    v54 = 0uLL;
    v19 = *(std::__shared_weak_count **)(a8 + 8);
    *(_OWORD *)a8 = v18;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    v22 = (std::__shared_weak_count *)*((_QWORD *)&v54 + 1);
    if (*((_QWORD *)&v54 + 1))
    {
      v23 = (unint64_t *)(*((_QWORD *)&v54 + 1) + 8);
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    goto LABEL_21;
  }
  sub_2397A9494(a2);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  __p = operator new(8uLL);
  v25 = (char *)__p + 8;
  v52 = (char *)__p + 8;
  v26 = v44;
  *(_QWORD *)__p = v26;
  v51 = v25;
  if (*a9 == 3)
    v27 = 1;
  else
    v27 = 2 * (*a9 != 1);
  v28 = ((HIDWORD(*a11) * v17 * *a11) << v27);
  if (!(_DWORD)v28)
  {
    v30 = 0;
    v31 = (char *)__p;
    if (!__p)
      goto LABEL_19;
LABEL_23:
    v40 = v51;
    v41 = v31;
    if (v51 != v31)
    {
      do
      {
        v42 = (void *)*((_QWORD *)v40 - 1);
        v40 -= 8;

      }
      while (v40 != v31);
      v41 = __p;
    }
    v51 = v31;
    operator delete(v41);

    if (v30)
      goto LABEL_20;
LABEL_27:
    v39 = 0;
    goto LABEL_28;
  }
  v29 = operator new(0x18uLL);
  *((_QWORD *)&v54 + 1) = v29 + 3;
  v55 = v29 + 3;
  *v29 = v28;
  v29[1] = 0;
  v29[2] = a8;
  *(_QWORD *)&v54 = v29;
  v30 = sub_2397A69A4(a6, (uint64_t *)&v54, (void ***)&__p);
  if ((_QWORD)v54)
  {
    *((_QWORD *)&v54 + 1) = v54;
    operator delete((void *)v54);
  }
  v31 = (char *)__p;
  if (__p)
    goto LABEL_23;
LABEL_19:

  if (!v30)
    goto LABEL_27;
LABEL_20:
  v32 = sub_23971AF94(a1, 1);
  sub_2397A9494((uint64_t)v32);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = objc_msgSend(v33, "threadExecutionWidth");
  v35 = objc_msgSend(v33, "maxTotalThreadsPerThreadgroup");
  v46 = *a11;
  objc_msgSend(v47, "computeCommandEncoder");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  sub_2397A9494(a2);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "setBuffer:offset:atIndex:", v37, 0, 0);

  objc_msgSend(v36, "setBytes:length:atIndex:", a9, 4, 1);
  objc_msgSend(v36, "setBytes:length:atIndex:", &v53, 4, 2);
  objc_msgSend(v36, "setBytes:length:atIndex:", a10, 4, 3);
  objc_msgSend(v36, "setBytes:length:atIndex:", a11, 8, 4);
  sub_2397A9494(a8);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "setBuffer:offset:atIndex:", v38, 0, 5);

  objc_msgSend(v36, "setComputePipelineState:", v33);
  v49[0] = (v34 + v46 - 1) / v34;
  v49[1] = (v35 / v34 + HIDWORD(v46) - 1) / (v35 / v34);
  v49[2] = 1;
  v48[0] = v34;
  v48[1] = v35 / v34;
  v48[2] = 1;
  objc_msgSend(v36, "dispatchThreadgroups:threadsPerThreadgroup:", v49, v48);
  objc_msgSend(v36, "endEncoding");

LABEL_21:
  v39 = 1;
LABEL_28:

  return v39;
}

void sub_23971BA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_23971BA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_23971BAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_23971BAB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_23971BAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_23971BAE8(_Unwind_Exception *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  void *v15;
  va_list va;

  va_start(va, a13);
  v15 = *(void **)(v13 - 112);
  if (v15)
  {
    *(_QWORD *)(v13 - 104) = v15;
    operator delete(v15);
  }
  sub_239513590((void **)va);

  _Unwind_Resume(a1);
}

void sub_23971BB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_23971BB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

BOOL sub_23971BB64(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, uint64_t *a5, uint64_t a6, _QWORD *a7, void *a8, uint64_t a9, _DWORD *a10, _DWORD *a11, uint64_t *a12)
{
  void *v18;
  char *v19;
  id v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _BOOL8 v24;
  char *v25;
  void *v26;
  char *v27;
  void *v28;
  void *v29;
  uint64_t *v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v38;
  uint64_t v40;
  id v41;
  _QWORD v42[3];
  _QWORD v43[3];
  void *__p;
  char *v45;
  char *v46;
  void *v47;
  void *v48;
  _QWORD *v49;

  v41 = a8;
  *a10 = *a3;
  *a12 = *a5;
  *a11 = a4;
  sub_2397A9494(a2);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = a6;
  __p = operator new(8uLL);
  v19 = (char *)__p + 8;
  v46 = (char *)__p + 8;
  v20 = v18;
  *(_QWORD *)__p = v20;
  v45 = v19;
  if (*a10 == 3)
    v21 = 1;
  else
    v21 = 2 * (*a10 != 1);
  v22 = ((HIDWORD(*a12) * a4 * *a12) << v21);
  if ((_DWORD)v22)
  {
    v23 = operator new(0x18uLL);
    v48 = v23 + 3;
    v49 = v23 + 3;
    *v23 = v22;
    v23[1] = 0;
    v23[2] = a9;
    v47 = v23;
    v24 = sub_2397A69A4(a7, (uint64_t *)&v47, (void ***)&__p);
    if (v47)
    {
      v48 = v47;
      operator delete(v47);
    }
    v25 = (char *)__p;
    if (!__p)
    {
LABEL_8:

      v26 = v41;
      if (!v24)
        goto LABEL_16;
      goto LABEL_15;
    }
  }
  else
  {
    v24 = 0;
    v25 = (char *)__p;
    if (!__p)
      goto LABEL_8;
  }
  v27 = v45;
  v28 = v25;
  if (v45 != v25)
  {
    do
    {
      v29 = (void *)*((_QWORD *)v27 - 1);
      v27 -= 8;

    }
    while (v27 != v25);
    v28 = __p;
  }
  v45 = v25;
  operator delete(v28);

  v26 = v41;
  if (v24)
  {
LABEL_15:
    v30 = sub_23971AF94(a1, 2);
    sub_2397A9494((uint64_t)v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = objc_msgSend(v31, "threadExecutionWidth");
    v33 = objc_msgSend(v31, "maxTotalThreadsPerThreadgroup");
    v40 = *a12;
    objc_msgSend(v26, "computeCommandEncoder");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    sub_2397A9494(a2);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "setBuffer:offset:atIndex:", v35, 0, 0);

    objc_msgSend(v34, "setBytes:length:atIndex:", a12, 8, 1);
    objc_msgSend(v34, "setBytes:length:atIndex:", a11, 4, 2);
    objc_msgSend(v34, "setBytes:length:atIndex:", a10, 4, 3);
    objc_msgSend(v34, "setBytes:length:atIndex:", v38, 4, 4);
    sub_2397A9494(a9);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "setBuffer:offset:atIndex:", v36, 0, 5);

    objc_msgSend(v34, "setComputePipelineState:", v31);
    v43[0] = (v32 + v40 - 1) / v32;
    v43[1] = (v33 / v32 + HIDWORD(v40) - 1) / (v33 / v32);
    v43[2] = 1;
    v42[0] = v32;
    v42[1] = v33 / v32;
    v42[2] = 1;
    objc_msgSend(v34, "dispatchThreadgroups:threadsPerThreadgroup:", v43, v42);
    objc_msgSend(v34, "endEncoding");

  }
LABEL_16:

  return v24;
}

void sub_23971BE58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_23971BE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_23971BE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_23971BEB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_23971BEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_23971BEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  void *v14;
  uint64_t v15;
  void *v17;
  va_list va;

  va_start(va, a14);
  v17 = *(void **)(v15 - 112);
  if (v17)
  {
    *(_QWORD *)(v15 - 104) = v17;
    operator delete(v17);
  }
  sub_239513590((void **)va);

  _Unwind_Resume(a1);
}

void sub_23971BF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_23971BF48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

uint64_t sub_23971BF64(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, uint32x2_t *a5, uint64_t a6, _QWORD *a7, void *a8, float a9, float a10, uint64_t a11, _DWORD *a12, int *a13, int32x2_t *a14)
{
  int32x2_t v20;
  int32x2_t v21;
  __int128 v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  int32x2_t v29;
  int v30;
  char *v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  BOOL v35;
  char *v36;
  char *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t *v41;
  void *v42;
  unint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v49;
  id v52;
  int32x2_t v53;
  void *v55;
  unint64_t v56;
  id v57;
  _QWORD v58[3];
  _QWORD v59[3];
  void *__p;
  char *v61;
  char *v62;
  __int128 v63;
  _QWORD *v64;

  v57 = a8;
  *a12 = *a3;
  *a13 = a4;
  v20 = (int32x2_t)vcvt_u32_f32(vrnda_f32(vmul_f32((float32x2_t)__PAIR64__(LODWORD(a10), LODWORD(a9)), vcvt_f32_u32(*a5))));
  *a14 = v20;
  v21 = vceq_s32((int32x2_t)*a5, v20);
  if ((v21.i32[0] & v21.i32[1] & 1) != 0)
  {
    sub_23946D5E0(&v63, a2);
    v22 = v63;
    v63 = 0uLL;
    v23 = *(std::__shared_weak_count **)(a11 + 8);
    *(_OWORD *)a11 = v22;
    if (v23)
    {
      p_shared_owners = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldaxr(p_shared_owners);
      while (__stlxr(v25 - 1, p_shared_owners));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    v26 = (std::__shared_weak_count *)*((_QWORD *)&v63 + 1);
    if (*((_QWORD *)&v63 + 1))
    {
      v27 = (unint64_t *)(*((_QWORD *)&v63 + 1) + 8);
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    goto LABEL_28;
  }
  v29 = vceqz_s32(v20);
  if (((v29.i32[0] | v29.i32[1]) & 1) == 0)
  {
    v49 = a6;
    v30 = *a13;
    sub_2397A9494(a2);
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    __p = operator new(8uLL);
    v31 = (char *)__p + 8;
    v62 = (char *)__p + 8;
    v52 = v55;
    *(_QWORD *)__p = v52;
    v61 = v31;
    if (*a12 == 3)
      v32 = 1;
    else
      v32 = 2 * (*a12 != 1);
    v33 = ((HIDWORD(*(unint64_t *)a14) * v30 * a14->u32[0]) << v32);
    if ((_DWORD)v33)
    {
      v34 = operator new(0x18uLL);
      *((_QWORD *)&v63 + 1) = v34 + 3;
      v64 = v34 + 3;
      *v34 = v33;
      v34[1] = 0;
      v34[2] = a11;
      *(_QWORD *)&v63 = v34;
      v35 = sub_2397A69A4(a7, (uint64_t *)&v63, (void ***)&__p);
      if ((_QWORD)v63)
      {
        *((_QWORD *)&v63 + 1) = v63;
        operator delete((void *)v63);
      }
      v36 = (char *)__p;
      if (__p)
      {
LABEL_20:
        v37 = v61;
        v38 = v36;
        if (v61 != v36)
        {
          do
          {
            v39 = (void *)*((_QWORD *)v37 - 1);
            v37 -= 8;

          }
          while (v37 != v36);
          v38 = __p;
        }
        v61 = v36;
        operator delete(v38);

        if (!v35)
          goto LABEL_24;
LABEL_27:
        v41 = sub_23971AF94(a1, 3);
        sub_2397A9494((uint64_t)v41);
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        v43 = objc_msgSend(v42, "threadExecutionWidth");
        v44 = v42;
        v56 = objc_msgSend(v42, "maxTotalThreadsPerThreadgroup");
        v53 = *a14;
        objc_msgSend(v57, "computeCommandEncoder");
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        sub_2397A9494(a2);
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v45, "setBuffer:offset:atIndex:", v46, 0, 0);

        objc_msgSend(v45, "setBytes:length:atIndex:", a5, 8, 1);
        objc_msgSend(v45, "setBytes:length:atIndex:", a14, 8, 2);
        objc_msgSend(v45, "setBytes:length:atIndex:", a13, 4, 3);
        objc_msgSend(v45, "setBytes:length:atIndex:", a12, 4, 4);
        objc_msgSend(v45, "setBytes:length:atIndex:", v49, 4, 5);
        sub_2397A9494(a11);
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v45, "setBuffer:offset:atIndex:", v47, 0, 6);

        objc_msgSend(v45, "setComputePipelineState:", v44);
        v59[0] = (v43 + v53.u32[0] - 1) / v43;
        v59[1] = (v56 / v43 + v53.u32[1] - 1) / (v56 / v43);
        v59[2] = 1;
        v58[0] = v43;
        v58[1] = v56 / v43;
        v58[2] = 1;
        objc_msgSend(v45, "dispatchThreadgroups:threadsPerThreadgroup:", v59, v58);
        objc_msgSend(v45, "endEncoding");

LABEL_28:
        v40 = 1;
        goto LABEL_29;
      }
    }
    else
    {
      v35 = 0;
      v36 = (char *)__p;
      if (__p)
        goto LABEL_20;
    }

    if (v35)
      goto LABEL_27;
  }
LABEL_24:
  v40 = 0;
LABEL_29:

  return v40;
}

void sub_23971C354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_23971C374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_23971C394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_23971C3AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_23971C3C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_23971C3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  void *v16;
  va_list va;

  va_start(va, a14);
  v16 = *(void **)(v14 - 112);
  if (v16)
  {
    *(_QWORD *)(v14 - 104) = v16;
    operator delete(v16);
  }
  sub_239513590((void **)va);

  _Unwind_Resume(a1);
}

void sub_23971C41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_23971C430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_23971C44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_23971C460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_23971C474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

uint64_t sub_23971C490(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, uint64_t *a5, uint64_t a6, _QWORD *a7, void *a8, uint64_t a9, _DWORD *a10, int *a11, uint64_t *a12)
{
  id v16;
  int v17;
  void *v18;
  char *v19;
  id v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  BOOL v25;
  char *v26;
  char *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  float64x2_t v31;
  float32x4_t *v32;
  float32x4_t *v33;
  float64x2_t *v34;
  double *f64;
  float64x2_t v36;
  float64x2_t v37;
  uint64_t v38;
  float64x2_t *v39;
  float32_t v40;
  float32_t v41;
  uint64_t *v42;
  void *v43;
  unint64_t v44;
  unint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v53;
  id v54;
  _QWORD v55[3];
  _QWORD v56[3];
  int v57;
  void *__p;
  char *v59;
  char *v60;
  void *v61;
  void *v62;
  _QWORD *v63;

  v16 = a8;
  *a10 = *a3;
  *a11 = a4;
  *a12 = *a5;
  v17 = *a11;
  v54 = v16;
  sub_2397A9494(a2);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  __p = operator new(8uLL);
  v19 = (char *)__p + 8;
  v60 = (char *)__p + 8;
  v20 = v18;
  *(_QWORD *)__p = v20;
  v59 = v19;
  if (*a10 == 3)
    v21 = 1;
  else
    v21 = 2 * (*a10 != 1);
  v22 = ((HIDWORD(*a12) * v17 * *a12) << v21);
  if ((_DWORD)v22)
  {
    v23 = operator new(0x18uLL);
    v62 = v23 + 3;
    v63 = v23 + 3;
    *v23 = v22;
    v23[1] = 0;
    v24 = v54;
    v23[2] = a9;
    v61 = v23;
    v25 = sub_2397A69A4(a7, (uint64_t *)&v61, (void ***)&__p);
    if (v61)
    {
      v62 = v61;
      operator delete(v61);
    }
    v26 = (char *)__p;
    if (__p)
    {
LABEL_8:
      v27 = v59;
      v28 = v26;
      if (v59 != v26)
      {
        do
        {
          v29 = (void *)*((_QWORD *)v27 - 1);
          v27 -= 8;

        }
        while (v27 != v26);
        v28 = __p;
      }
      v59 = v26;
      operator delete(v28);

      if (!v25)
        goto LABEL_12;
      goto LABEL_15;
    }
  }
  else
  {
    v25 = 0;
    v24 = v54;
    v26 = (char *)__p;
    if (__p)
      goto LABEL_8;
  }

  if (!v25)
  {
LABEL_12:
    v30 = 0;
    goto LABEL_21;
  }
LABEL_15:
  v31 = *(float64x2_t *)a6;
  v61 = (void *)vcvt_f32_f64(*(float64x2_t *)(a6 + 16));
  __p = (void *)vcvt_f32_f64(v31);
  v32 = (float32x4_t *)operator new(0x14uLL);
  v33 = v32;
  v32->i64[0] = 0;
  v32->i64[1] = 0;
  v32[1].i32[0] = 0;
  v57 = 0;
  v30 = 0;
  switch(*(_BYTE *)(a6 + 32))
  {
    case 0:
    case 3:
      goto LABEL_20;
    case 1:
      v34 = *(float64x2_t **)(a6 + 40);
      v37 = *v34;
      v36 = v34[1];
      f64 = v34[2].f64;
      *v32 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v37), v36);
      v38 = 4;
      goto LABEL_18;
    case 2:
      v57 = 1;
      v39 = *(float64x2_t **)(a6 + 40);
      *(float32x2_t *)v32->f32 = vcvt_f32_f64(*v39);
      v40 = v39[1].f64[0];
      v32->f32[2] = v40;
      f64 = &v39[1].f64[1];
      v38 = 3;
LABEL_18:
      v41 = *f64;
      v32->f32[v38] = v41;
      goto LABEL_19;
    default:
LABEL_19:
      v42 = sub_23971AF94(a1, 4);
      sub_2397A9494((uint64_t)v42);
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      v44 = objc_msgSend(v43, "threadExecutionWidth");
      v45 = objc_msgSend(v43, "maxTotalThreadsPerThreadgroup");
      v53 = *a12;
      objc_msgSend(v24, "computeCommandEncoder");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      sub_2397A9494(a2);
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v46, "setBuffer:offset:atIndex:", v47, 0, 0);

      objc_msgSend(v46, "setBytes:length:atIndex:", a12, 8, 1);
      objc_msgSend(v46, "setBytes:length:atIndex:", a11, 4, 2);
      objc_msgSend(v46, "setBytes:length:atIndex:", a10, 4, 3);
      objc_msgSend(v46, "setBytes:length:atIndex:", &v57, 4, 4);
      objc_msgSend(v46, "setBytes:length:atIndex:", &v61, 8, 5);
      objc_msgSend(v46, "setBytes:length:atIndex:", &__p, 8, 6);
      objc_msgSend(v46, "setBytes:length:atIndex:", v33, 20, 7);
      sub_2397A9494(a9);
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v46, "setBuffer:offset:atIndex:", v48, 0, 8);

      objc_msgSend(v46, "setComputePipelineState:", v43);
      v56[0] = (v44 + v53 - 1) / v44;
      v56[1] = (v45 / v44 + HIDWORD(v53) - 1) / (v45 / v44);
      v56[2] = 1;
      v55[0] = v44;
      v55[1] = v45 / v44;
      v55[2] = 1;
      objc_msgSend(v46, "dispatchThreadgroups:threadsPerThreadgroup:", v56, v55);
      objc_msgSend(v46, "endEncoding");

      v30 = 1;
LABEL_20:
      operator delete(v33);
      break;
  }
LABEL_21:

  return v30;
}

void sub_23971C888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  operator delete(v17);
  _Unwind_Resume(a1);
}

void sub_23971C960(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, int32x2_t *a5, void *a6, uint64_t a7, _DWORD *a8, float a9, float a10, _DWORD *a11, int32x2_t *a12)
{
  id v19;
  __int128 v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t *v27;
  void *v28;
  unsigned __int32 v29;
  unint64_t v30;
  void *v31;
  void *v32;
  unint64_t v33;
  int64x2_t v34;
  unint64_t v35;
  int64x2_t v36;
  float v37;
  float v38;
  __int128 v39;

  v37 = a10;
  v38 = a9;
  v19 = a6;
  *a8 = *a3;
  *a11 = a4;
  *a12 = *a5;
  sub_23946D5E0(&v39, a2);
  v20 = v39;
  v39 = 0uLL;
  v21 = *(std::__shared_weak_count **)(a7 + 8);
  *(_OWORD *)a7 = v20;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v24 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
  if (*((_QWORD *)&v39 + 1))
  {
    v25 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v27 = sub_23971AF94(a1, 5);
  sub_2397A9494((uint64_t)v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = vmul_lane_s32(*a12, *a12, 1).u32[0] * *a11;
  LODWORD(v39) = v29;
  v30 = objc_msgSend(v28, "threadExecutionWidth");
  objc_msgSend(v19, "computeCommandEncoder");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "setBytes:length:atIndex:", &v38, 4, 0);
  objc_msgSend(v31, "setBytes:length:atIndex:", &v37, 4, 1);
  objc_msgSend(v31, "setBytes:length:atIndex:", a8, 4, 2);
  objc_msgSend(v31, "setBytes:length:atIndex:", &v39, 4, 3);
  sub_2397A9494(a7);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "setBuffer:offset:atIndex:", v32, 0, 4);

  objc_msgSend(v31, "setComputePipelineState:", v28);
  v35 = (v30 + v29 - 1) / v30;
  v36 = vdupq_n_s64(1uLL);
  v33 = v30;
  v34 = v36;
  objc_msgSend(v31, "dispatchThreadgroups:threadsPerThreadgroup:", &v35, &v33);
  objc_msgSend(v31, "endEncoding");

}

void sub_23971CB78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_23971CB94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_23971CBA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_23971CBBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_23971CBCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_23971CBDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_23971CBF4(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, int32x2_t *a5, void *a6, uint64_t a7, _DWORD *a8, float a9, _DWORD *a10, int32x2_t *a11)
{
  id v18;
  __int128 v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t *v26;
  void *v27;
  unsigned __int32 v28;
  unint64_t v29;
  void *v30;
  void *v31;
  unint64_t v32;
  int64x2_t v33;
  unint64_t v34;
  int64x2_t v35;
  float v36;
  __int128 v37;

  v36 = a9;
  v18 = a6;
  *a8 = *a3;
  *a10 = a4;
  *a11 = *a5;
  sub_23946D5E0(&v37, a2);
  v19 = v37;
  v37 = 0uLL;
  v20 = *(std::__shared_weak_count **)(a7 + 8);
  *(_OWORD *)a7 = v19;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldaxr(p_shared_owners);
    while (__stlxr(v22 - 1, p_shared_owners));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v23 = (std::__shared_weak_count *)*((_QWORD *)&v37 + 1);
  if (*((_QWORD *)&v37 + 1))
  {
    v24 = (unint64_t *)(*((_QWORD *)&v37 + 1) + 8);
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  v26 = sub_23971AF94(a1, 6);
  sub_2397A9494((uint64_t)v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = vmul_lane_s32(*a11, *a11, 1).u32[0] * *a10;
  LODWORD(v37) = v28;
  v29 = objc_msgSend(v27, "threadExecutionWidth");
  objc_msgSend(v18, "computeCommandEncoder");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setBytes:length:atIndex:", &v36, 4, 0);
  objc_msgSend(v30, "setBytes:length:atIndex:", a8, 4, 1);
  objc_msgSend(v30, "setBytes:length:atIndex:", &v37, 4, 2);
  sub_2397A9494(a7);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setBuffer:offset:atIndex:", v31, 0, 3);

  objc_msgSend(v30, "setComputePipelineState:", v27);
  v34 = (v29 + v28 - 1) / v29;
  v35 = vdupq_n_s64(1uLL);
  v32 = v29;
  v33 = v35;
  objc_msgSend(v30, "dispatchThreadgroups:threadsPerThreadgroup:", &v34, &v32);
  objc_msgSend(v30, "endEncoding");

}

void sub_23971CDF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_23971CE14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_23971CE28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_23971CE3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_23971CE4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_23971CE5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_23971CE74(uint64_t a1, uint64_t a2, _DWORD *a3, int a4, int32x2_t *a5, void *a6, uint64_t a7, _DWORD *a8, float a9, _DWORD *a10, int32x2_t *a11)
{
  id v18;
  __int128 v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t *v26;
  void *v27;
  unsigned __int32 v28;
  unint64_t v29;
  void *v30;
  void *v31;
  unint64_t v32;
  int64x2_t v33;
  unint64_t v34;
  int64x2_t v35;
  float v36;
  __int128 v37;

  v36 = a9;
  v18 = a6;
  *a8 = *a3;
  *a10 = a4;
  *a11 = *a5;
  sub_23946D5E0(&v37, a2);
  v19 = v37;
  v37 = 0uLL;
  v20 = *(std::__shared_weak_count **)(a7 + 8);
  *(_OWORD *)a7 = v19;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldaxr(p_shared_owners);
    while (__stlxr(v22 - 1, p_shared_owners));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v23 = (std::__shared_weak_count *)*((_QWORD *)&v37 + 1);
  if (*((_QWORD *)&v37 + 1))
  {
    v24 = (unint64_t *)(*((_QWORD *)&v37 + 1) + 8);
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  v26 = sub_23971AF94(a1, 7);
  sub_2397A9494((uint64_t)v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = vmul_lane_s32(*a11, *a11, 1).u32[0] * *a10;
  LODWORD(v37) = v28;
  v29 = objc_msgSend(v27, "threadExecutionWidth");
  objc_msgSend(v18, "computeCommandEncoder");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setBytes:length:atIndex:", &v36, 4, 0);
  objc_msgSend(v30, "setBytes:length:atIndex:", a8, 4, 1);
  objc_msgSend(v30, "setBytes:length:atIndex:", &v37, 4, 2);
  sub_2397A9494(a7);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setBuffer:offset:atIndex:", v31, 0, 3);

  objc_msgSend(v30, "setComputePipelineState:", v27);
  v34 = (v29 + v28 - 1) / v29;
  v35 = vdupq_n_s64(1uLL);
  v32 = v29;
  v33 = v35;
  objc_msgSend(v30, "dispatchThreadgroups:threadsPerThreadgroup:", &v34, &v32);
  objc_msgSend(v30, "endEncoding");

}

void sub_23971D078(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_23971D094(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_23971D0A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_23971D0BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_23971D0CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_23971D0DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_23971D0F4(uint64_t *a1@<X0>, int32x2_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v8;
  std::mutex *v9;
  int v10;
  char v11;
  void *v12;
  id v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  int32x2_t v17;
  int v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  int32x2_t v21;
  uint64_t v22;

  v8 = (void *)MEMORY[0x23B83EC40]();
  v9 = (std::mutex *)(a3 + 152);
  std::mutex::lock((std::mutex *)(a3 + 152));
  v21 = 0;
  v22 = 0;
  v19 = 0;
  v20 = 0;
  *(_QWORD *)a4 = &off_250ADB778;
  sub_239469138(a4 + 8);
  v18 = 0;
  if ((sub_239718D50(a1, a2, (int *)&v22 + 1, (int *)&v22, &v21, (uint64_t)&v19, &v18, a3) & 1) != 0
    && sub_23971B080(SHIDWORD(v22), v22, a4, v21))
  {
    v17 = v21;
    v10 = v22;
    if (HIDWORD(v22) == 3)
      v11 = 1;
    else
      v11 = 2 * (HIDWORD(v22) != 1);
    v12 = *(void **)(a4 + 48);
    if (*(_BYTE *)(a4 + 60) && v12)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a4 + 8) + 88))(*(_QWORD *)(a4 + 8), 1, "unknown location");
      v12 = *(void **)(a4 + 48);
    }
    sub_2397A9494((uint64_t)&v19);
    v13 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    memcpy(v12, (const void *)objc_msgSend(v13, "contents"), (vmul_lane_s32(v17, v17, 1).u32[0] * v10) << v11);

  }
  v14 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  std::mutex::unlock(v9);
  objc_autoreleasePoolPop(v8);
}

void sub_23971D284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  std::mutex *v5;
  uint64_t v6;
  void *v7;
  va_list va;

  va_start(va, a5);

  sub_239422DD0(v6);
  sub_239416DA0((uint64_t)va);
  std::mutex::unlock(v5);
  _Unwind_Resume(a1);
}

_QWORD *sub_23971D2DC(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  float v15;
  float v16;
  uint64_t v17;
  _QWORD *v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t prime;
  unint64_t v23;
  uint8x8_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v7 = *a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 <= v7)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        if (v9.u32[0] < 2uLL)
        {
          while (1)
          {
            v13 = v11[1];
            if (v13 == v7)
            {
              if (*((_DWORD *)v11 + 4) == (_DWORD)v7)
                return v11;
            }
            else if ((v13 & (v8 - 1)) != v4)
            {
              goto LABEL_23;
            }
            v11 = (_QWORD *)*v11;
            if (!v11)
              goto LABEL_23;
          }
        }
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7)
              return v11;
          }
          else
          {
            if (v12 >= v8)
              v12 %= v8;
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_23:
  v14 = (_QWORD *)(a1 + 16);
  v11 = operator new(0x28uLL);
  *v11 = 0;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  v11[3] = 0;
  v11[4] = 0;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (v8 && (float)(v16 * (float)v8) >= v15)
  {
    v17 = *(_QWORD *)a1;
    v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v18)
    {
LABEL_26:
      *v11 = *v18;
LABEL_61:
      *v18 = v11;
      goto LABEL_62;
    }
  }
  else
  {
    v19 = 1;
    if (v8 >= 3)
      v19 = (v8 & (v8 - 1)) != 0;
    v20 = v19 | (2 * v8);
    v21 = vcvtps_u32_f32(v15 / v16);
    if (v20 <= v21)
      prime = v21;
    else
      prime = v20;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v8 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v8)
      goto LABEL_37;
    if (prime < v8)
    {
      v23 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v8 < 3 || (v24 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v24.i16[0] = vaddlv_u8(v24), v24.u32[0] > 1uLL))
      {
        v23 = std::__next_prime(v23);
      }
      else
      {
        v25 = 1 << -(char)__clz(v23 - 1);
        if (v23 >= 2)
          v23 = v25;
      }
      if (prime <= v23)
        prime = v23;
      if (prime < v8)
LABEL_37:
        sub_239427FE0(a1, prime);
    }
    v8 = *(_QWORD *)(a1 + 8);
    v26 = v8 - 1;
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7)
      {
        v4 = v7 % v8;
        v17 = *(_QWORD *)a1;
        v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v7 % v8));
        if (v18)
          goto LABEL_26;
      }
      else
      {
        v4 = v7;
        v17 = *(_QWORD *)a1;
        v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v7);
        if (v18)
          goto LABEL_26;
      }
    }
    else
    {
      v4 = v26 & v7;
      v17 = *(_QWORD *)a1;
      v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v26 & v7));
      if (v18)
        goto LABEL_26;
    }
  }
  *v11 = *v14;
  *v14 = v11;
  *(_QWORD *)(v17 + 8 * v4) = v14;
  if (*v11)
  {
    v27 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v27 >= v8)
        v27 %= v8;
    }
    else
    {
      v27 &= v8 - 1;
    }
    v18 = (_QWORD *)(*(_QWORD *)a1 + 8 * v27);
    goto LABEL_61;
  }
LABEL_62:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

void sub_23971D5F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23971D60C(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >> 60)
      sub_2394189F8();
    v5 = 16 * a3;
    v6 = (char *)operator new(16 * a3);
    v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[v5];
    do
    {
      sub_23946D5E0(&v6[v7], a2 + v7);
      v7 += 16;
    }
    while (v5 != v7);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_23971D6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_23971D6EC(&a9);
  _Unwind_Resume(a1);
}

void sub_23971D6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (v11)
    sub_239EC20C0(v10 + v11, v10);
  *(_QWORD *)(v9 + 8) = v10;
  sub_23971D6EC(&a9);
  _Unwind_Resume(a1);
}

void ***sub_23971D6EC(void ***result)
{
  void ***v1;
  void **v2;
  char *v3;
  char *v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  v1 = result;
  if (!*((_BYTE *)result + 8))
  {
    v2 = *result;
    v3 = (char *)**result;
    if (v3)
    {
      v4 = (char *)v2[1];
      v5 = **result;
      if (v4 != v3)
      {
        do
        {
          v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
          if (v6)
          {
            p_shared_owners = (unint64_t *)&v6->__shared_owners_;
            do
              v8 = __ldaxr(p_shared_owners);
            while (__stlxr(v8 - 1, p_shared_owners));
            if (!v8)
            {
              ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
              std::__shared_weak_count::__release_weak(v6);
            }
          }
          v4 -= 16;
        }
        while (v4 != v3);
        v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_23971D7B4(_QWORD *a1, uint64_t a2)
{
  _BYTE *v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int8x8_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  uint64_t *result;
  uint64_t **v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v2 = (_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v5 = v4;
  }
  v6 = sub_239428940((uint64_t)&v25, (uint64_t *)a2, v5);
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = v6;
  v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    v10 = v6;
    if (v6 >= *(_QWORD *)&v7)
      v10 = v6 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v6;
  }
  v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    v13 = *v12;
    if (*v12)
    {
      v14 = v2[23];
      if (v14 >= 0)
        v15 = v2[23];
      else
        v15 = *((_QWORD *)v2 + 1);
      if (v14 < 0)
        v2 = *(_BYTE **)v2;
      if (v9.u32[0] < 2uLL)
      {
        v16 = *(_QWORD *)&v7 - 1;
        while (1)
        {
          v21 = v13[1];
          if (v8 == v21)
          {
            v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0)
              v23 = *((unsigned __int8 *)v13 + 39);
            else
              v23 = v13[3];
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3]))
                  return v13;
              }
              else
              {
                if (!*((_BYTE *)v13 + 39))
                  return v13;
                v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24)
                    return v13;
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          result = 0;
          v13 = (uint64_t *)*v13;
          if (!v13)
            return result;
        }
      }
      while (1)
      {
        v17 = v13[1];
        if (v8 == v17)
        {
          v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0)
            v19 = *((unsigned __int8 *)v13 + 39);
          else
            v19 = v13[3];
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3]))
                return v13;
            }
            else
            {
              if (!*((_BYTE *)v13 + 39))
                return v13;
              v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20)
                  return v13;
              }
            }
          }
        }
        else
        {
          if (v17 >= *(_QWORD *)&v7)
            v17 %= *(_QWORD *)&v7;
          if (v17 != v10)
            return 0;
        }
        result = 0;
        v13 = (uint64_t *)*v13;
        if (!v13)
          return result;
      }
    }
  }
  return 0;
}

char *sub_23971D9E0(char **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  char *v18;
  char *v19;
  char *v20;

  v3 = (a1[1] - *a1) >> 4;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60)
    sub_2394189F8();
  v6 = a1[2] - *a1;
  if (v6 >> 3 > v4)
    v4 = v6 >> 3;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFF0)
    v7 = 0xFFFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  if (v7)
  {
    if (v7 >> 60)
      sub_239418A80();
    v8 = (char *)operator new(16 * v7);
  }
  else
  {
    v8 = 0;
  }
  v18 = &v8[16 * v3];
  v20 = &v8[16 * v7];
  sub_23946D5E0(v18, a2);
  v9 = v18;
  v11 = *a1;
  v10 = a1[1];
  if (v10 == *a1)
  {
    v13 = a1[1];
  }
  else
  {
    do
    {
      v12 = *((_OWORD *)v10 - 1);
      v10 -= 16;
      *((_OWORD *)v9 - 1) = v12;
      v9 -= 16;
      *(_QWORD *)v10 = 0;
      *((_QWORD *)v10 + 1) = 0;
    }
    while (v10 != v11);
    v13 = *a1;
    v10 = a1[1];
  }
  *a1 = v9;
  a1[1] = v18 + 16;
  a1[2] = v20;
  if (v10 == v13)
  {
    if (v10)
LABEL_17:
      operator delete(v10);
  }
  else
  {
    do
    {
      v19 = v10 - 16;
      v15 = (std::__shared_weak_count *)*((_QWORD *)v10 - 1);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      v10 = v19;
    }
    while (v19 != v13);
    v10 = v13;
    if (v13)
      goto LABEL_17;
  }
  return v18 + 16;
}

void sub_23971DB54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946D7C8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23971DB68()
{
  uint64_t v0;

  v0 = sub_23971DB7C();
  sub_23971E154(v0);
}

uint64_t sub_23971DB7C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25693C790);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25693C790))
    return qword_25693C798;
  sub_23971DC18(&qword_25693C798);
  __cxa_atexit((void (*)(void *))sub_23971DC70, &qword_25693C798, &dword_23940C000);
  __cxa_guard_release(&qword_25693C790);
  return qword_25693C798;
}

void sub_23971DC00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25693C790);
  _Unwind_Resume(a1);
}

uint64_t sub_23971DC18@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v2;
  uint64_t result;

  v2 = operator new(0x90uLL);
  v2[1] = 0;
  v2[2] = 0;
  *v2 = &off_250AE3E70;
  result = sub_23971DCD8((uint64_t)(v2 + 3));
  *a1 = result;
  a1[1] = (uint64_t)v2;
  return result;
}

void sub_23971DC58(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_23971DC70(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_23971DCD8(uint64_t a1)
{
  __CFNotificationCenter *LocalCenter;

  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 1018212795;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 850045863;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_QWORD *)(a1 + 112) = 0;
  LocalCenter = CFNotificationCenterGetLocalCenter();
  CFNotificationCenterAddObserver(LocalCenter, 0, (CFNotificationCallback)sub_23971DDF0, CFSTR("UIApplicationWillResignActiveNotification"), 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CFNotificationCenterAddObserver(LocalCenter, 0, (CFNotificationCallback)sub_23971DEB8, CFSTR("UIApplicationDidBecomeActiveNotification"), 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CFNotificationCenterAddObserver(LocalCenter, 0, (CFNotificationCallback)sub_23971DF80, CFSTR("UIApplicationDidEnterBackgroundNotification"), 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CFNotificationCenterAddObserver(LocalCenter, 0, (CFNotificationCallback)sub_23971E068, CFSTR("UIApplicationWillEnterForegroundNotification"), 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  return a1;
}

void sub_23971DDD4(_Unwind_Exception *a1)
{
  std::condition_variable *v1;
  std::mutex *v2;

  std::mutex::~mutex(v2);
  std::condition_variable::~condition_variable(v1);
  _Unwind_Resume(a1);
}

void sub_23971DDF0()
{
  unsigned __int8 v0;
  _QWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25693C790);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_25693C790))
    {
      v1 = operator new(0x90uLL);
      v1[1] = 0;
      v1[2] = 0;
      *v1 = &off_250AE3E70;
      qword_25693C798 = sub_23971DCD8(v1 + 3);
      qword_25693C7A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_23971DC70, &qword_25693C798, &dword_23940C000);
      __cxa_guard_release(&qword_25693C790);
    }
  }
}

void sub_23971DE7C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  __cxa_guard_abort(&qword_25693C790);
  _Unwind_Resume(a1);
}

void sub_23971DEA0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25693C790);
  _Unwind_Resume(a1);
}

void sub_23971DEB8()
{
  unsigned __int8 v0;
  _QWORD *v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25693C790);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_25693C790))
    {
      v1 = operator new(0x90uLL);
      v1[1] = 0;
      v1[2] = 0;
      *v1 = &off_250AE3E70;
      qword_25693C798 = sub_23971DCD8(v1 + 3);
      qword_25693C7A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_23971DC70, &qword_25693C798, &dword_23940C000);
      __cxa_guard_release(&qword_25693C790);
    }
  }
}

void sub_23971DF44(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  __cxa_guard_abort(&qword_25693C790);
  _Unwind_Resume(a1);
}

void sub_23971DF68(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25693C790);
  _Unwind_Resume(a1);
}

void sub_23971DF80()
{
  unsigned __int8 v0;
  uint64_t v1;
  std::mutex *v2;
  _QWORD *v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25693C790);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25693C790))
  {
    v3 = operator new(0x90uLL);
    v3[1] = 0;
    v3[2] = 0;
    *v3 = &off_250AE3E70;
    qword_25693C798 = sub_23971DCD8(v3 + 3);
    qword_25693C7A0 = (uint64_t)v3;
    __cxa_atexit((void (*)(void *))sub_23971DC70, &qword_25693C798, &dword_23940C000);
    __cxa_guard_release(&qword_25693C790);
  }
  v1 = qword_25693C798;
  v2 = (std::mutex *)(qword_25693C798 + 56);
  std::mutex::lock((std::mutex *)(qword_25693C798 + 56));
  *(_BYTE *)v1 = 0;
  std::condition_variable::notify_all((std::condition_variable *)(v1 + 8));
  std::mutex::unlock(v2);
}

void sub_23971E02C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  __cxa_guard_abort(&qword_25693C790);
  _Unwind_Resume(a1);
}

void sub_23971E050(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25693C790);
  _Unwind_Resume(a1);
}

void sub_23971E068()
{
  unsigned __int8 v0;
  uint64_t v1;
  std::mutex *v2;
  _QWORD *v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25693C790);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25693C790))
  {
    v3 = operator new(0x90uLL);
    v3[1] = 0;
    v3[2] = 0;
    *v3 = &off_250AE3E70;
    qword_25693C798 = sub_23971DCD8(v3 + 3);
    qword_25693C7A0 = (uint64_t)v3;
    __cxa_atexit((void (*)(void *))sub_23971DC70, &qword_25693C798, &dword_23940C000);
    __cxa_guard_release(&qword_25693C790);
  }
  v1 = qword_25693C798;
  v2 = (std::mutex *)(qword_25693C798 + 56);
  std::mutex::lock((std::mutex *)(qword_25693C798 + 56));
  *(_BYTE *)v1 = 1;
  std::condition_variable::notify_all((std::condition_variable *)(v1 + 8));
  std::mutex::unlock(v2);
}

void sub_23971E118(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  __cxa_guard_abort(&qword_25693C790);
  _Unwind_Resume(a1);
}

void sub_23971E13C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25693C790);
  _Unwind_Resume(a1);
}

void sub_23971E154(uint64_t a1)
{
  std::unique_lock<std::mutex> v2;

  v2.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 56);
  v2.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 56));
  if (*(_BYTE *)a1)
    goto LABEL_4;
  do
    std::condition_variable::wait((std::condition_variable *)(a1 + 8), &v2);
  while (!*(_BYTE *)a1);
  if (v2.__owns_)
LABEL_4:
    std::mutex::unlock(v2.__m_);
}

void sub_23971E1BC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3E70;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23971E1CC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3E70;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_23971E1FC(uint64_t a1)
{
  std::mutex::~mutex((std::mutex *)(a1 + 80));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 32));
}

void sub_23971E228(void *a1@<X0>, uint64_t a2@<X8>)
{
  CGImageSource *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  CFDictionaryRef v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  __int128 v23;
  char v24;
  CFDictionaryRef v25;
  std::__shared_weak_count *v26;
  __int128 v27;
  CGImageSourceRef isrc;
  std::__shared_weak_count *v29;
  std::__shared_weak_count_vtbl *v30;
  std::__shared_weak_count *v31;

  sub_2397690E0(a1, &v30);
  v3 = CGImageSourceCreateWithDataProvider((CGDataProviderRef)v30, 0);
  v4 = (std::__shared_weak_count *)operator new();
  v5 = v4;
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3EA8;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  isrc = v3;
  v29 = v4;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v5);
  }
  v9 = CGImageSourceCopyPropertiesAtIndex(isrc, 0, 0);
  v25 = v9;
  v10 = (std::__shared_weak_count *)operator new();
  v10->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0880;
  v10->__shared_owners_ = 0;
  v10->__shared_weak_owners_ = 0;
  v10[1].__vftable = (std::__shared_weak_count_vtbl *)v9;
  v26 = v10;
  sub_23962C5E4(&v27, &v25);
  v11 = v26;
  if (v26)
  {
    v12 = (unint64_t *)&v26->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v23 = v27;
  v24 = 1;
  v14 = v29;
  if (v29)
  {
    v15 = (unint64_t *)&v29->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v31;
  if (v31)
  {
    v18 = (unint64_t *)&v31->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  sub_239620CDC((_QWORD *)a2, (uint64_t)&v23);
  *(_BYTE *)(a2 + 16) = 1;
  if (v24)
  {
    v20 = (std::__shared_weak_count *)*((_QWORD *)&v23 + 1);
    if (*((_QWORD *)&v23 + 1))
    {
      v21 = (unint64_t *)(*((_QWORD *)&v23 + 1) + 8);
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
  }
}

void sub_23971E47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239600F8C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23971E490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  sub_239416DA0(v5 - 48);
  _Unwind_Resume(a1);
}

void sub_23971E4E4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23971E4FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_end_catch();
  sub_239416DA0(v1 - 48);
  _Unwind_Resume(a1);
}

_QWORD *sub_23971E520@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  _QWORD *v9;
  unsigned __int8 v10;
  int v11;
  CGImageSource *v12;
  std::__shared_weak_count *v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  CGImageRef ImageAtIndex;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  _BYTE *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  CGImageSourceRef v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  __int16 v47;
  unint64_t v48;
  int v49;
  _BYTE *v50;
  int v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  __n128 v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  _QWORD *result;
  uint64_t v66;
  __int128 v67;
  void *v68;
  uint64_t v69;
  int v70;
  char v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  char v78;
  char v79;
  CGImageSourceRef isrc[2];
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  char v89;
  char v90;
  char v91;
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  __int128 __p;
  uint64_t v98;
  unsigned __int8 v99;
  void *v100[2];
  uint64_t v101;
  uint64_t v102;
  void *v103[2];
  uint64_t v104;
  char v105;
  char v106;
  char v107;
  CGDataProviderRef provider[2];
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  std::__shared_weak_count *v113;
  std::__shared_weak_count_vtbl *v114;
  std::__shared_weak_count *v115;
  __int128 v116;
  __int128 v117;
  char v118;
  char v119;
  void *v120;
  char v121;
  void *v122;
  char v123;
  char v124;
  char v125;
  char v126;
  int v127;
  _BYTE v128[24];
  _BYTE *v129;
  uint64_t v130;

  v130 = *MEMORY[0x24BDAC8D0];
  v9 = (_QWORD *)a1[3];
  if (v9)
  {
    if (v9 == a1)
    {
      v129 = v128;
      (*(void (**)(_QWORD *, _BYTE *))(*a1 + 24))(a1, v128);
    }
    else
    {
      v129 = (_BYTE *)(*(uint64_t (**)(_QWORD))(*v9 + 16))(a1[3]);
    }
  }
  else
  {
    v129 = 0;
  }
  v10 = std::istream::peek();
  sub_239720254((uint64_t)&v116, a4, v10);
  if (v126)
  {
    v11 = v116;
    sub_2397690E0(a2, &v114);
    if ((v11 - 3) > 4)
    {
      sub_239A444D4((uint64_t)"unknown file", 214, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    sub_239720FF8(provider, (uint64_t)&v114);
    v12 = CGImageSourceCreateWithDataProvider(provider[0], 0);
    v13 = (std::__shared_weak_count *)operator new();
    v14 = v13;
    v13->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    v13->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3EA8;
    v13->__shared_weak_owners_ = 0;
    v13[1].__vftable = (std::__shared_weak_count_vtbl *)v12;
    isrc[0] = v12;
    isrc[1] = (CGImageSourceRef)v13;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v14);
    }
    ImageAtIndex = CGImageSourceCreateImageAtIndex(isrc[0], 0, 0);
    *(_QWORD *)&v67 = ImageAtIndex;
    v19 = (std::__shared_weak_count *)operator new();
    v19->__shared_owners_ = 0;
    v20 = (unint64_t *)&v19->__shared_owners_;
    v19->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3EF8;
    v19->__shared_weak_owners_ = 0;
    v19[1].__vftable = (std::__shared_weak_count_vtbl *)ImageAtIndex;
    *((_QWORD *)&v67 + 1) = v19;
    *(_QWORD *)&v96 = ImageAtIndex;
    *((_QWORD *)&v96 + 1) = v19;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    sub_2397386A8((int)&v112, ImageAtIndex);
    do
      v23 = __ldaxr(v20);
    while (__stlxr(v23 - 1, v20));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    if (*((_QWORD *)&v67 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
      }
    }
    if (isrc[1])
    {
      v26 = (unint64_t *)((char *)isrc[1] + 8);
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        (*(void (**)(CGImageSourceRef))(*(_QWORD *)isrc[1] + 16))(isrc[1]);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)isrc[1]);
      }
    }
    v28 = (std::__shared_weak_count *)provider[1];
    if (provider[1])
    {
      v29 = (unint64_t *)((char *)provider[1] + 8);
      do
        v30 = __ldaxr(v29);
      while (__stlxr(v30 - 1, v29));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
    v32 = v112;
    v31 = v113;
    if (v113)
    {
      v33 = (unint64_t *)&v113->__shared_owners_;
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
      do
        v35 = __ldaxr(v33);
      while (__stlxr(v35 - 1, v33));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    if (!v32)
    {
      sub_239A444D4((uint64_t)"unknown file", 217, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    sub_239738A48((uint64_t)&v112, v22, (uint64_t)provider);
    v92 = *(_OWORD *)provider;
    v93 = v109;
    if (SHIBYTE(v111) < 0)
    {
      sub_23941A7F8(&v94, (void *)v110, *((unint64_t *)&v110 + 1));
    }
    else
    {
      v94 = v110;
      v95 = v111;
    }
    if (!a3)
      goto LABEL_68;
    switch(v11)
    {
      case 3:
        if (a3 < 3 || (a3 & 0xFFFFFFF7) - 21 < 2)
          goto LABEL_67;
        goto LABEL_119;
      case 4:
        if (a3 != 1 && a3 != 21)
          goto LABEL_119;
        goto LABEL_67;
      case 5:
        if (a3 > 0x20)
          goto LABEL_119;
        v39 = 1 << a3;
        v40 = 3789553694;
        break;
      case 6:
        if (a3 > 0x20)
          goto LABEL_119;
        v39 = 1 << a3;
        v40 = 1633681430;
        break;
      case 7:
        if (a3 > 0x20)
          goto LABEL_119;
        v39 = 1 << a3;
        v40 = 2164260880;
        break;
      default:
        sub_239A444D4((uint64_t)"unknown file", 162, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
    }
    if ((v39 & (v40 & 0xFFFF0000FFFFFFFFLL | 0x100000000)) != 0)
    {
LABEL_67:
      if ((_DWORD)v92 == a3)
      {
LABEL_68:
        v107 = 1;
        goto LABEL_69;
      }
      sub_2397348A4(a3, v92, (uint64_t)isrc);
      v96 = *(_OWORD *)isrc;
      LOBYTE(__p) = 0;
      v106 = 0;
      if (v90)
      {
        v99 = 0;
        v49 = v83;
        if ((_BYTE)v83)
          goto LABEL_121;
        goto LABEL_122;
      }
    }
    else
    {
LABEL_119:
      sub_239734C80(a3, v11, (uint64_t)isrc);
      v96 = *(_OWORD *)isrc;
      LOBYTE(__p) = 0;
      v106 = 0;
      if (v90)
      {
        v99 = 0;
        v49 = v83;
        if ((_BYTE)v83)
        {
LABEL_121:
          __p = v81;
          v98 = v82;
          v82 = 0;
          v81 = 0uLL;
          v99 = 1;
        }
LABEL_122:
        LOBYTE(v100[0]) = 0;
        v105 = 0;
        if (v89)
        {
          v101 = v85;
          *(_OWORD *)v100 = v84;
          v84 = 0uLL;
          v102 = v86;
          *(_OWORD *)v103 = v87;
          v104 = v88;
          v85 = 0;
          v87 = 0uLL;
          v88 = 0;
          v105 = 1;
        }
        v106 = 1;
        v107 = 0;
        if (v49 && SHIBYTE(v82) < 0)
          operator delete((void *)v81);
LABEL_69:
        if (SHIBYTE(v95) < 0)
        {
          operator delete((void *)v94);
          if (v107)
            goto LABEL_71;
        }
        else if (v107)
        {
LABEL_71:
          if (!BYTE4(provider[0]))
          {
            sub_239A444D4((uint64_t)"unknown file", 229, (uint64_t)"", (void (*)(void *))sub_239A4463C);
            sub_239A4475C();
            abort();
          }
          *(_QWORD *)&v67 = sub_239738918((uint64_t)&v112);
          v127 = (int)provider[0];
          if (!v129)
            sub_2394172E0();
          (*(void (**)(CGImageSourceRef *__return_ptr, _BYTE *, __int128 *, int *))(*(_QWORD *)v129 + 48))(isrc, v129, &v67, &v127);
          if (v91)
          {
            *(_QWORD *)&v67 = &off_250ADB1D0;
            v41 = isrc[1];
            v42 = (std::__shared_weak_count *)v81;
            if ((_QWORD)v81)
            {
              v43 = (unint64_t *)(v81 + 8);
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              v45 = v83;
              v46 = v84;
              v47 = WORD2(v84);
              do
                v48 = __ldxr(v43);
              while (__stxr(v48 + 1, v43));
            }
            else
            {
              v45 = v83;
              v46 = v84;
              v47 = WORD2(v84);
            }
            *((_QWORD *)&v67 + 1) = v41;
            v68 = v42;
            v69 = *((_QWORD *)&v81 + 1);
            v70 = v82;
            v72 = v45;
            LODWORD(v73) = v46;
            WORD2(v73) = v47;
            if (v42)
            {
              v53 = (unint64_t *)&v42->__shared_owners_;
              do
                v54 = __ldaxr(v53);
              while (__stlxr(v54 - 1, v53));
              if (!v54)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            sub_23973A4EC((std::string::size_type)&v112, (uint64_t)&v67);
            v55 = nullsub_4(&v69);
            v56 = (std::__shared_weak_count *)v68;
            if (v68)
            {
              v57 = (unint64_t *)((char *)v68 + 8);
              do
                v58 = __ldaxr(v57);
              while (__stlxr(v58 - 1, v57));
              if (!v58)
              {
                ((void (*)(std::__shared_weak_count *, __n128))v56->__on_zero_shared)(v56, v55);
                std::__shared_weak_count::__release_weak(v56);
              }
            }
            nullsub_4(&v67);
            *(_BYTE *)(a5 + 120) = 1;
LABEL_107:
            sub_23972124C((uint64_t)isrc);
            if (v107)
              goto LABEL_129;
            goto LABEL_108;
          }
          v67 = *(_OWORD *)isrc;
          v50 = sub_23952329C(&v68, &v81);
          *(_OWORD *)a5 = v67;
          *(_BYTE *)(a5 + 16) = 0;
          *(_BYTE *)(a5 + 112) = 0;
          if (!v79)
          {
            *(_BYTE *)(a5 + 120) = 0;
            sub_23972124C((uint64_t)isrc);
            if (v107)
              goto LABEL_129;
            goto LABEL_108;
          }
          *(_BYTE *)(a5 + 40) = 0;
          v51 = v72;
          if ((_BYTE)v72)
          {
            *(_OWORD *)(a5 + 16) = *(_OWORD *)v50;
            *(_QWORD *)(a5 + 32) = *((_QWORD *)v50 + 2);
            *((_QWORD *)v50 + 1) = 0;
            *((_QWORD *)v50 + 2) = 0;
            *(_QWORD *)v50 = 0;
            *(_BYTE *)(a5 + 40) = 1;
          }
          *(_BYTE *)(a5 + 48) = 0;
          *(_BYTE *)(a5 + 104) = 0;
          if (v78)
          {
            v52 = v75;
            *(_QWORD *)(a5 + 64) = v74;
            *(_OWORD *)(a5 + 48) = v73;
            v73 = 0uLL;
            *(_QWORD *)(a5 + 72) = v52;
            *(_OWORD *)(a5 + 80) = v76;
            *(_QWORD *)(a5 + 96) = v77;
            v74 = 0;
            v76 = 0uLL;
            v77 = 0;
            *(_BYTE *)(a5 + 104) = 1;
          }
          *(_BYTE *)(a5 + 112) = 1;
          *(_BYTE *)(a5 + 120) = 0;
          if (!v51 || (v71 & 0x80000000) == 0)
            goto LABEL_107;
          operator delete(v68);
          sub_23972124C((uint64_t)isrc);
          if (v107)
            goto LABEL_129;
LABEL_108:
          if (v106)
          {
            if (v105)
            {
              if (SHIBYTE(v104) < 0)
                operator delete(v103[0]);
              if (SHIBYTE(v101) < 0)
                operator delete(v100[0]);
            }
            if (v99 && SHIBYTE(v98) < 0)
              operator delete((void *)__p);
          }
LABEL_129:
          if (SHIBYTE(v111) < 0)
            operator delete((void *)v110);
          v59 = v113;
          if (!v113)
            goto LABEL_135;
          v60 = (unint64_t *)&v113->__shared_owners_;
          do
            v61 = __ldaxr(v60);
          while (__stlxr(v61 - 1, v60));
          if (!v61)
          {
            ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
            std::__shared_weak_count::__release_weak(v59);
            v62 = v115;
            if (v115)
              goto LABEL_136;
          }
          else
          {
LABEL_135:
            v62 = v115;
            if (v115)
            {
LABEL_136:
              v63 = (unint64_t *)&v62->__shared_owners_;
              do
                v64 = __ldaxr(v63);
              while (__stlxr(v64 - 1, v63));
              if (!v64)
              {
                ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
                std::__shared_weak_count::__release_weak(v62);
                if (v126)
                  goto LABEL_140;
                goto LABEL_149;
              }
            }
          }
LABEL_139:
          if (v126)
            goto LABEL_140;
          goto LABEL_149;
        }
        *(_BYTE *)(a5 + 120) = 0;
        *(_OWORD *)a5 = v96;
        sub_23952329C((_BYTE *)(a5 + 16), &__p);
        if (v107)
          goto LABEL_129;
        goto LABEL_108;
      }
    }
    v107 = 0;
    goto LABEL_69;
  }
  v96 = v116;
  v36 = sub_23952329C(&__p, &v117);
  *(_OWORD *)a5 = v96;
  *(_BYTE *)(a5 + 16) = 0;
  *(_BYTE *)(a5 + 112) = 0;
  if (v106)
  {
    *(_BYTE *)(a5 + 40) = 0;
    v37 = v99;
    if (v99)
    {
      *(_OWORD *)(a5 + 16) = *(_OWORD *)v36;
      *(_QWORD *)(a5 + 32) = *((_QWORD *)v36 + 2);
      *((_QWORD *)v36 + 1) = 0;
      *((_QWORD *)v36 + 2) = 0;
      *(_QWORD *)v36 = 0;
      *(_BYTE *)(a5 + 40) = 1;
    }
    *(_BYTE *)(a5 + 48) = 0;
    *(_BYTE *)(a5 + 104) = 0;
    if (v105)
    {
      v38 = v102;
      *(_QWORD *)(a5 + 64) = v101;
      *(_OWORD *)(a5 + 48) = *(_OWORD *)v100;
      v100[0] = 0;
      v100[1] = 0;
      *(_QWORD *)(a5 + 72) = v38;
      *(_OWORD *)(a5 + 80) = *(_OWORD *)v103;
      *(_QWORD *)(a5 + 96) = v104;
      v101 = 0;
      v103[0] = 0;
      v103[1] = 0;
      v104 = 0;
      *(_BYTE *)(a5 + 104) = 1;
    }
    *(_BYTE *)(a5 + 112) = 1;
    *(_BYTE *)(a5 + 120) = 0;
    if (!v37 || (SHIBYTE(v98) & 0x80000000) == 0)
      goto LABEL_139;
    operator delete((void *)__p);
    if (v126)
      goto LABEL_140;
  }
  else
  {
    *(_BYTE *)(a5 + 120) = 0;
    if (v126)
      goto LABEL_140;
  }
LABEL_149:
  if (v125)
  {
    if (v124)
    {
      if (v123 < 0)
        operator delete(v122);
      if (v121 < 0)
        operator delete(v120);
    }
    if (v119)
    {
      if (v118 < 0)
        operator delete((void *)v117);
    }
  }
LABEL_140:
  result = v129;
  if (v129 == v128)
  {
    v66 = 4;
    result = v128;
  }
  else
  {
    if (!v129)
      return result;
    v66 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v66))();
}

void sub_23971F02C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a71;
  char a72;
  uint64_t v72;
  uint64_t v74;

  sub_23972124C((uint64_t)&a25);
  sub_239522F50((uint64_t)&a47);
  if (a71 < 0)
    operator delete(__p);
  sub_239416DA0((uint64_t)&a72);
  sub_239416DA0(v72 - 256);
  sub_239522F50(v72 - 240);
  v74 = *(_QWORD *)(v72 - 80);
  if (v74 == v72 - 104)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v72 - 104) + 32))(v72 - 104);
    _Unwind_Resume(a1);
  }
  if (!v74)
    _Unwind_Resume(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v74 + 40))(v74);
  _Unwind_Resume(a1);
}

void sub_23971F058(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a49 < 0)
    operator delete(__p);
  JUMPOUT(0x23971F148);
}

void sub_23971F078()
{
  JUMPOUT(0x23971F158);
}

void sub_23971F080()
{
  JUMPOUT(0x23971F158);
}

void sub_23971F088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;

  sub_239416DA0((uint64_t)&a47);
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a25);
  sub_239416DA0((uint64_t)&a63);
  sub_239416DA0(v63 - 256);
  sub_239522F50(v63 - 240);
  if (*(_QWORD *)(v63 - 80) == v63 - 104)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v63 - 104) + 32))(v63 - 104);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x23971F1B8);
}

void sub_23971F0E4(void *a1, int a2)
{
  const void *v2;

  if (a2)
  {
    __cxa_begin_catch(a1);
    if (v2)
      j__CFRelease(v2);
    __cxa_rethrow();
  }
  JUMPOUT(0x23971F1BCLL);
}

void sub_23971F108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  __cxa_end_catch();
  sub_239416DA0((uint64_t)&a63);
  JUMPOUT(0x23971F168);
}

void sub_23971F134()
{
  JUMPOUT(0x23971F170);
}

void sub_23971F1A4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 - 80) != v0 - 104)
    JUMPOUT(0x23971F1B8);
  JUMPOUT(0x23971F188);
}

void sub_23971F1DC(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unsigned __int8 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  unsigned int v13;
  char v14;
  char v15;
  unsigned int v16;
  char v17;
  char v18;
  unsigned int v19;
  char v20;
  int v21;
  _BYTE *v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  std::string *v28;
  int data_low;
  int v30;
  std::string *v32;
  __int128 v33;
  uint64_t v34;
  unsigned int v35;
  char v36;
  BOOL v37;
  int v38;
  std::__shared_weak_count *v39;
  unint64_t *p_shared_owners;
  unint64_t v41;
  __int128 v42;
  std::string v43;
  std::string v44;
  void *__dst[2];
  char v46;
  char v47;
  void *v48;
  char v49;
  void *v50;
  char v51;
  char v52;
  char v53;
  std::string v54;
  char v55;
  std::__shared_weak_count_vtbl *v56;
  std::__shared_weak_count *v57;
  char v58;
  __int128 __p;
  __int128 v60;
  uint64_t v61;
  unsigned __int8 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  char v68;
  char v69;
  __int128 v70;
  __int128 v71;
  char v72;
  char v73;
  void *v74;
  char v75;
  void *v76;
  char v77;
  char v78;
  char v79;
  char v80;
  unsigned int v81[5];

  v81[0] = a2;
  v6 = std::istream::peek();
  sub_239720254((uint64_t)&v70, a2, v6);
  if (v80)
  {
    v81[0] = v70;
    sub_23971E228(a1, (uint64_t)&__p);
    LOBYTE(v56) = 0;
    v58 = 0;
    if (!(_BYTE)v60)
      goto LABEL_171;
    sub_23962C330(&v56, (std::__shared_weak_count_vtbl *)__p, 1);
    v58 = 1;
    if ((_BYTE)v60)
    {
      v7 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
      if (*((_QWORD *)&__p + 1))
      {
        v8 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
        do
          v9 = __ldaxr(v8);
        while (__stlxr(v9 - 1, v8));
        if (!v9)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
      }
      if (!v58)
      {
LABEL_171:
        sub_239A444D4((uint64_t)"unknown file", 260, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
    }
    BYTE7(v60) = 10;
    strcpy((char *)&__p, "ColorModel");
    sub_239600BC4((uint64_t)&v56, (uint64_t)&__p, &v54);
    if (SBYTE7(v60) < 0)
      operator delete((void *)__p);
    BYTE7(v60) = 5;
    strcpy((char *)&__p, "Depth");
    v10 = sub_239600CF8((uint64_t)&v56, (uint64_t)&__p);
    v12 = v11;
    if (SBYTE7(v60) < 0)
      operator delete((void *)__p);
    BYTE7(v60) = 10;
    strcpy((char *)&__p, "PixelWidth");
    v13 = sub_239600CF8((uint64_t)&v56, (uint64_t)&__p);
    v15 = v14;
    if (SBYTE7(v60) < 0)
      operator delete((void *)__p);
    BYTE7(v60) = 11;
    strcpy((char *)&__p, "PixelHeight");
    v16 = sub_239600CF8((uint64_t)&v56, (uint64_t)&__p);
    v18 = v17;
    if (SBYTE7(v60) < 0)
      operator delete((void *)__p);
    if (v55 && v12 && v15 && v18)
    {
      BYTE7(v60) = 7;
      strcpy((char *)&__p, "IsFloat");
      v19 = (unsigned __int16)sub_2396019E4((uint64_t)&v56, (uint64_t)&__p);
      if (v19 <= 0x100)
        v20 = 0;
      else
        v20 = v19;
      if (SBYTE7(v60) < 0)
      {
        operator delete((void *)__p);
        v21 = HIBYTE(v54.__r_.__value_.__r.__words[2]);
        if ((*((_BYTE *)&v54.__r_.__value_.__s + 23) & 0x80) == 0)
          goto LABEL_27;
      }
      else
      {
        v21 = HIBYTE(v54.__r_.__value_.__r.__words[2]);
        if ((*((_BYTE *)&v54.__r_.__value_.__s + 23) & 0x80) == 0)
        {
LABEL_27:
          if (v21 != 3)
          {
            if (v21 != 4 || LODWORD(v54.__r_.__value_.__l.__data_) != 2036429383)
              goto LABEL_77;
LABEL_56:
            if (v10 == 8 && !v20)
            {
              v27 = 1;
              goto LABEL_169;
            }
            if (v10 == 16 && !v20)
            {
              v27 = 2;
              goto LABEL_169;
            }
            if (v10 == 32 && v20)
            {
              v27 = 4;
              goto LABEL_169;
            }
            if (v10 == 16 && v20)
            {
              v27 = 3;
              goto LABEL_169;
            }
LABEL_77:
            sub_239721518((CFTypeRef *)&v56, &v43);
            v32 = std::string::insert(&v43, 0, "Cannot identify format from dictionary: ");
            v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
            v44.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v33;
            v32->__r_.__value_.__l.__size_ = 0;
            v32->__r_.__value_.__r.__words[2] = 0;
            v32->__r_.__value_.__r.__words[0] = 0;
            sub_239A42F9C(__dst, (__int128 *)&v44);
            v53 = 1;
            sub_239720830(5u, (__int128 *)__dst, (uint64_t)&__p);
            *(_OWORD *)a3 = __p;
            *(_BYTE *)(a3 + 16) = 0;
            *(_BYTE *)(a3 + 112) = 0;
            if (v69)
            {
              *(_BYTE *)(a3 + 40) = 0;
              if (v62)
              {
                *(_OWORD *)(a3 + 16) = v60;
                *(_QWORD *)(a3 + 32) = v61;
                v61 = 0;
                v60 = 0uLL;
                *(_BYTE *)(a3 + 40) = 1;
              }
              *(_BYTE *)(a3 + 48) = 0;
              *(_BYTE *)(a3 + 104) = 0;
              if (!v68)
              {
                *(_BYTE *)(a3 + 112) = 1;
                *(_BYTE *)(a3 + 120) = 0;
                if (!v62)
                  goto LABEL_108;
                goto LABEL_106;
              }
              v34 = v65;
              *(_QWORD *)(a3 + 64) = v64;
              *(_OWORD *)(a3 + 48) = v63;
              v63 = 0uLL;
              *(_QWORD *)(a3 + 72) = v34;
              *(_OWORD *)(a3 + 80) = v66;
              *(_QWORD *)(a3 + 96) = v67;
              v67 = 0;
              v64 = 0;
              v66 = 0uLL;
              *(_BYTE *)(a3 + 104) = 1;
              *(_BYTE *)(a3 + 112) = 1;
              *(_BYTE *)(a3 + 120) = 0;
              if (SHIBYTE(v67) < 0)
              {
                operator delete((void *)v66);
                if ((SHIBYTE(v64) & 0x80000000) == 0)
                {
LABEL_83:
                  if (!v62)
                    goto LABEL_108;
LABEL_106:
                  if (SHIBYTE(v61) < 0)
                    operator delete((void *)v60);
                  goto LABEL_108;
                }
              }
              else if ((SHIBYTE(v64) & 0x80000000) == 0)
              {
                goto LABEL_83;
              }
              operator delete((void *)v63);
              if (v62)
                goto LABEL_106;
            }
            else
            {
              *(_BYTE *)(a3 + 120) = 0;
            }
LABEL_108:
            if (v53)
            {
              if (v52)
              {
                if (v51 < 0)
                  operator delete(v50);
                if (v49 < 0)
                  operator delete(v48);
              }
              if (v47 && v46 < 0)
                operator delete(__dst[0]);
            }
            if ((SHIBYTE(v44.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
              if ((SHIBYTE(v43.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                goto LABEL_119;
LABEL_140:
              operator delete(v43.__r_.__value_.__l.__data_);
              if (!v55)
                goto LABEL_122;
              goto LABEL_120;
            }
            operator delete(v44.__r_.__value_.__l.__data_);
            if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_140;
LABEL_119:
            if (!v55)
              goto LABEL_122;
            goto LABEL_120;
          }
          v28 = &v54;
          goto LABEL_73;
        }
      }
      if (v54.__r_.__value_.__l.__size_ != 3)
      {
        if (v54.__r_.__value_.__l.__size_ != 4 || *(_DWORD *)v54.__r_.__value_.__l.__data_ != 2036429383)
          goto LABEL_77;
        goto LABEL_56;
      }
      v28 = (std::string *)v54.__r_.__value_.__r.__words[0];
LABEL_73:
      data_low = LOWORD(v28->__r_.__value_.__l.__data_);
      v30 = v28->__r_.__value_.__s.__data_[2];
      if (data_low != 18258 || v30 != 66)
        goto LABEL_77;
      BYTE7(v60) = 8;
      strcpy((char *)&__p, "HasAlpha");
      v35 = (unsigned __int16)sub_2396019E4((uint64_t)&v56, (uint64_t)&__p);
      if (v35 <= 0x100)
        v36 = 0;
      else
        v36 = v35;
      if (SBYTE7(v60) < 0)
        operator delete((void *)__p);
      if (v20)
        v37 = 0;
      else
        v37 = v10 == 8;
      v38 = !v37;
      if (v36)
      {
        if ((v38 & 1) == 0)
        {
          v27 = 29;
          goto LABEL_169;
        }
        if (v10 == 16 && !v20)
        {
          v27 = 30;
          goto LABEL_169;
        }
        if (v10 == 32 && v20)
        {
          v27 = 32;
          goto LABEL_169;
        }
        if (v10 != 16 || !v20)
          goto LABEL_77;
        v27 = 31;
      }
      else
      {
        if (!v38)
        {
          v27 = 21;
          goto LABEL_169;
        }
        if (v10 == 16 && !v20)
        {
          v27 = 22;
          goto LABEL_169;
        }
        if (v10 == 32 && v20)
        {
          v27 = 24;
        }
        else
        {
          if (v10 != 16 || !v20)
            goto LABEL_77;
          v27 = 23;
        }
      }
LABEL_169:
      *(_QWORD *)&__p = __PAIR64__(v13, v27);
      *((_QWORD *)&__p + 1) = __PAIR64__(v81[0], v16);
      sub_239620CDC(&v60, (uint64_t)&v56);
      v42 = v60;
      *(_OWORD *)a3 = __p;
      *(_OWORD *)(a3 + 16) = v42;
      *(_BYTE *)(a3 + 32) = 1;
      *(_BYTE *)(a3 + 120) = 1;
      if (!v55)
        goto LABEL_122;
LABEL_120:
      if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v54.__r_.__value_.__l.__data_);
LABEL_122:
      if (v58)
      {
        v39 = v57;
        if (v57)
        {
          p_shared_owners = (unint64_t *)&v57->__shared_owners_;
          do
            v41 = __ldaxr(p_shared_owners);
          while (__stlxr(v41 - 1, p_shared_owners));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
            std::__shared_weak_count::__release_weak(v39);
            if (v80)
              return;
            goto LABEL_130;
          }
        }
      }
      goto LABEL_127;
    }
    sub_239721328("Expected 'ColorModel', 'Depth', 'PixelWidth' & 'PixelHeight' in image properties in header of ", (int *)v81, ". Found: ", (CFTypeRef *)&v56, &v44);
    sub_239A42F9C(__dst, (__int128 *)&v44);
    v53 = 1;
    sub_239720830(5u, (__int128 *)__dst, (uint64_t)&__p);
    *(_OWORD *)a3 = __p;
    *(_BYTE *)(a3 + 16) = 0;
    *(_BYTE *)(a3 + 112) = 0;
    if (v69)
    {
      *(_BYTE *)(a3 + 40) = 0;
      v25 = v62;
      if (v62)
      {
        *(_OWORD *)(a3 + 16) = v60;
        *(_QWORD *)(a3 + 32) = v61;
        v61 = 0;
        v60 = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if (v68)
      {
        v26 = v65;
        *(_QWORD *)(a3 + 64) = v64;
        *(_OWORD *)(a3 + 48) = v63;
        v63 = 0uLL;
        *(_QWORD *)(a3 + 72) = v26;
        *(_OWORD *)(a3 + 80) = v66;
        *(_QWORD *)(a3 + 96) = v67;
        v64 = 0;
        v66 = 0uLL;
        v67 = 0;
        *(_BYTE *)(a3 + 104) = 1;
      }
      *(_BYTE *)(a3 + 112) = 1;
      *(_BYTE *)(a3 + 120) = 0;
      if (v25 && SHIBYTE(v61) < 0)
        operator delete((void *)v60);
      if (!v53)
      {
LABEL_68:
        if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v44.__r_.__value_.__l.__data_);
          if (!v55)
            goto LABEL_122;
          goto LABEL_120;
        }
        goto LABEL_119;
      }
    }
    else
    {
      *(_BYTE *)(a3 + 120) = 0;
      if (!v53)
        goto LABEL_68;
    }
    if (v52)
    {
      if (v51 < 0)
        operator delete(v50);
      if (v49 < 0)
        operator delete(v48);
    }
    if (v47 && v46 < 0)
      operator delete(__dst[0]);
    goto LABEL_68;
  }
  __p = v70;
  v22 = sub_23952329C(&v60, &v71);
  *(_OWORD *)a3 = __p;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v69)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v23 = v62;
    if (v62)
    {
      *(_OWORD *)(a3 + 16) = *(_OWORD *)v22;
      *(_QWORD *)(a3 + 32) = *((_QWORD *)v22 + 2);
      *((_QWORD *)v22 + 1) = 0;
      *((_QWORD *)v22 + 2) = 0;
      *(_QWORD *)v22 = 0;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v68)
    {
      v24 = v65;
      *(_QWORD *)(a3 + 64) = v64;
      *(_OWORD *)(a3 + 48) = v63;
      v63 = 0uLL;
      *(_QWORD *)(a3 + 72) = v24;
      *(_OWORD *)(a3 + 80) = v66;
      *(_QWORD *)(a3 + 96) = v67;
      v64 = 0;
      v66 = 0uLL;
      v67 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 120) = 0;
    if (!v23 || (SHIBYTE(v61) & 0x80000000) == 0)
    {
LABEL_127:
      if (v80)
        return;
      goto LABEL_130;
    }
    operator delete((void *)v60);
    if (v80)
      return;
  }
  else
  {
    *(_BYTE *)(a3 + 120) = 0;
    if (v80)
      return;
  }
LABEL_130:
  if (v79)
  {
    if (v78)
    {
      if (v77 < 0)
        operator delete(v76);
      if (v75 < 0)
        operator delete(v74);
    }
    if (v73)
    {
      if (v72 < 0)
        operator delete((void *)v71);
    }
  }
}

void sub_23971FBB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,_Unwind_Exception *exception_objecta,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42,int a43,__int16 a44,char a45,char a46,std::__shared_weak_count *a47,char a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  uint64_t v54;
  unint64_t *p_shared_owners;
  unint64_t v57;

  if (a54 < 0)
    operator delete(__p);
  if (a42 && a41 < 0)
    operator delete(a36);
  if (a48)
  {
    if (a47)
    {
      p_shared_owners = (unint64_t *)&a47->__shared_owners_;
      do
        v57 = __ldaxr(p_shared_owners);
      while (__stlxr(v57 - 1, p_shared_owners));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))a47->__on_zero_shared)(a47);
        std::__shared_weak_count::__release_weak(a47);
      }
    }
  }
  if (!*(_BYTE *)(v54 - 112) && *(_BYTE *)(v54 - 120))
  {
    if (*(_BYTE *)(v54 - 128))
    {
      if (*(char *)(v54 - 129) < 0)
        operator delete(*(void **)(v54 - 152));
      if (*(char *)(v54 - 161) < 0)
        operator delete(*(void **)(v54 - 184));
    }
    if (*(_BYTE *)(v54 - 192))
    {
      if (*(char *)(v54 - 193) < 0)
        operator delete(*(void **)(v54 - 216));
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_23971FD8C(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  _BYTE *v6;
  int v7;
  uint64_t v8;
  __int128 v9;
  void *__p;
  char v11;
  unsigned __int8 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  char v22;
  char v23;
  void *v24;
  char v25;
  void *v26;
  char v27;
  char v28;
  char v29;
  char v30;

  sub_239735D38(a2, a3, (uint64_t)&v20);
  if (v30)
  {
    sub_239722AC8(&v9, (uint64_t)&v20);
    sub_2397219D0(a4, a1, (uint64_t)&v9);
    sub_239416DA0((uint64_t)&v9);
  }
  else
  {
    v9 = v20;
    v6 = sub_23952329C(&__p, &v21);
    *(_OWORD *)a4 = v9;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (v19)
    {
      *(_BYTE *)(a4 + 40) = 0;
      v7 = v12;
      if (v12)
      {
        *(_OWORD *)(a4 + 16) = *(_OWORD *)v6;
        *(_QWORD *)(a4 + 32) = *((_QWORD *)v6 + 2);
        *((_QWORD *)v6 + 1) = 0;
        *((_QWORD *)v6 + 2) = 0;
        *(_QWORD *)v6 = 0;
        *(_BYTE *)(a4 + 40) = 1;
      }
      *(_BYTE *)(a4 + 48) = 0;
      *(_BYTE *)(a4 + 104) = 0;
      if (v18)
      {
        v8 = v15;
        *(_QWORD *)(a4 + 64) = v14;
        *(_OWORD *)(a4 + 48) = v13;
        v13 = 0uLL;
        *(_QWORD *)(a4 + 72) = v8;
        *(_OWORD *)(a4 + 80) = v16;
        *(_QWORD *)(a4 + 96) = v17;
        v14 = 0;
        v16 = 0uLL;
        v17 = 0;
        *(_BYTE *)(a4 + 104) = 1;
      }
      *(_BYTE *)(a4 + 112) = 1;
      *(_BYTE *)(a4 + 120) = 0;
      if (v7 && v11 < 0)
        operator delete(__p);
    }
    else
    {
      *(_BYTE *)(a4 + 120) = 0;
    }
  }
  if (v30)
  {
    sub_239416DA0((uint64_t)&v20);
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0)
        operator delete(v26);
      if (v25 < 0)
        operator delete(v24);
    }
    if (v23)
    {
      if (v22 < 0)
        operator delete((void *)v21);
    }
  }
}

void sub_23971FF44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,int a40,__int16 a41,char a42,char a43)
{
  if (!(_BYTE)a41)
  {
    if (a39)
      sub_239EC2244((uint64_t)&a25, (void **)&a27);
    _Unwind_Resume(exception_object);
  }
  sub_239416DA0((uint64_t)&a25);
  _Unwind_Resume(exception_object);
}

void sub_23971FF94(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  _BYTE *v6;
  int v7;
  uint64_t v8;
  __int128 v9;
  void *__p;
  char v11;
  unsigned __int8 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  char v22;
  char v23;
  void *v24;
  char v25;
  void *v26;
  char v27;
  char v28;
  char v29;
  char v30;

  sub_239736068(a2, a3, (uint64_t)&v20);
  if (v30)
  {
    sub_239722AC8(&v9, (uint64_t)&v20);
    sub_2397219D0(a4, a1, (uint64_t)&v9);
    sub_239416DA0((uint64_t)&v9);
  }
  else
  {
    v9 = v20;
    v6 = sub_23952329C(&__p, &v21);
    *(_OWORD *)a4 = v9;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (v19)
    {
      *(_BYTE *)(a4 + 40) = 0;
      v7 = v12;
      if (v12)
      {
        *(_OWORD *)(a4 + 16) = *(_OWORD *)v6;
        *(_QWORD *)(a4 + 32) = *((_QWORD *)v6 + 2);
        *((_QWORD *)v6 + 1) = 0;
        *((_QWORD *)v6 + 2) = 0;
        *(_QWORD *)v6 = 0;
        *(_BYTE *)(a4 + 40) = 1;
      }
      *(_BYTE *)(a4 + 48) = 0;
      *(_BYTE *)(a4 + 104) = 0;
      if (v18)
      {
        v8 = v15;
        *(_QWORD *)(a4 + 64) = v14;
        *(_OWORD *)(a4 + 48) = v13;
        v13 = 0uLL;
        *(_QWORD *)(a4 + 72) = v8;
        *(_OWORD *)(a4 + 80) = v16;
        *(_QWORD *)(a4 + 96) = v17;
        v14 = 0;
        v16 = 0uLL;
        v17 = 0;
        *(_BYTE *)(a4 + 104) = 1;
      }
      *(_BYTE *)(a4 + 112) = 1;
      *(_BYTE *)(a4 + 120) = 0;
      if (v7 && v11 < 0)
        operator delete(__p);
    }
    else
    {
      *(_BYTE *)(a4 + 120) = 0;
    }
  }
  if (v30)
  {
    sub_239416DA0((uint64_t)&v20);
  }
  else if (v29)
  {
    if (v28)
    {
      if (v27 < 0)
        operator delete(v26);
      if (v25 < 0)
        operator delete(v24);
    }
    if (v23)
    {
      if (v22 < 0)
        operator delete((void *)v21);
    }
  }
}

void sub_23972014C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,int a40,__int16 a41,char a42,char a43)
{
  if (!(_BYTE)a41)
  {
    if (a39)
      sub_239EC2244((uint64_t)&a25, (void **)&a27);
    _Unwind_Resume(exception_object);
  }
  sub_239416DA0((uint64_t)&a25);
  _Unwind_Resume(exception_object);
}

void sub_2397201A0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_2397201C4(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    j__CFRelease(v1);
}

uint64_t sub_2397201E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_239720254(uint64_t a1, int a2, int a3)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char v13;
  std::string v14;
  void *__dst[2];
  char v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  __int128 v35;
  void *v36[2];
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;

  if (a3 == 255)
  {
    if ((a2 & 0xFFFFFFFB) == 0)
    {
      v4 = 4;
      goto LABEL_23;
    }
    sub_2397344C8(a2, 4, (uint64_t)&v35);
    *(_OWORD *)a1 = v35;
    *(_BYTE *)(a1 + 16) = 0;
    v5 = a1 + 16;
    *(_BYTE *)(a1 + 112) = 0;
    if (!v46)
    {
      *(_BYTE *)(a1 + 120) = 0;
      return;
    }
    goto LABEL_26;
  }
  if (a3 == 137)
  {
    if (a2 == 3 || !a2)
    {
      v4 = 3;
LABEL_23:
      *(_DWORD *)a1 = v4;
      *(_BYTE *)(a1 + 120) = 1;
      return;
    }
    v6 = a2;
    v7 = 3;
    goto LABEL_25;
  }
  if ((a3 & 0xFFFFFFFB) == 0x49)
  {
    if (a2 == 5 || !a2)
    {
      v4 = 5;
      goto LABEL_23;
    }
    v6 = a2;
    v7 = 5;
LABEL_25:
    sub_2397344C8(v6, v7, (uint64_t)&v35);
    *(_OWORD *)a1 = v35;
    *(_BYTE *)(a1 + 16) = 0;
    v5 = a1 + 16;
    *(_BYTE *)(a1 + 112) = 0;
    if (!v46)
    {
      *(_BYTE *)(a1 + 120) = 0;
      return;
    }
LABEL_26:
    *(_BYTE *)(a1 + 40) = 0;
    if (v38)
    {
      *(_OWORD *)v5 = *(_OWORD *)v36;
      *(_QWORD *)(v5 + 16) = v37;
      v36[1] = 0;
      v37 = 0;
      v36[0] = 0;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (!v44)
    {
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (!v38)
        return;
      goto LABEL_48;
    }
    v8 = v41;
    *(_QWORD *)(a1 + 64) = v40;
    *(_OWORD *)(a1 + 48) = v39;
    v39 = 0uLL;
    *(_QWORD *)(a1 + 72) = v8;
    *(_OWORD *)(a1 + 80) = v42;
    *(_QWORD *)(a1 + 96) = v43;
    v43 = 0;
    v40 = 0;
    v42 = 0uLL;
    *(_BYTE *)(a1 + 104) = 1;
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (SHIBYTE(v43) < 0)
    {
      operator delete((void *)v42);
      if ((SHIBYTE(v40) & 0x80000000) == 0)
      {
LABEL_31:
        if (!v38)
          return;
LABEL_48:
        if (SHIBYTE(v37) < 0)
        {
          v11 = v36[0];
LABEL_50:
          operator delete(v11);
          return;
        }
        return;
      }
    }
    else if ((SHIBYTE(v40) & 0x80000000) == 0)
    {
      goto LABEL_31;
    }
    operator delete((void *)v39);
    if (!v38)
      return;
    goto LABEL_48;
  }
  if (a3 == 118)
  {
    if (a2 == 7 || !a2)
    {
      v4 = 7;
      goto LABEL_23;
    }
    sub_2397344C8(a2, 7, (uint64_t)&v35);
    sub_2396207E4(a1, (uint64_t)&v35);
LABEL_54:
    sub_239522FE4((uint64_t)&v35);
    return;
  }
  if (!a3)
  {
    if (a2 == 6 || !a2)
    {
      v4 = 6;
      goto LABEL_23;
    }
    sub_2397344C8(a2, 6, (uint64_t)&v35);
    sub_2396207E4(a1, (uint64_t)&v35);
    goto LABEL_54;
  }
  sub_2394988CC((uint64_t)&v35);
  *(_DWORD *)((char *)&v36[1] + *((_QWORD *)v36[0] - 3)) = *(_DWORD *)((_BYTE *)&v36[1] + *((_QWORD *)v36[0] - 3)) & 0xFFFFFFB5 | 8;
  std::ostream::operator<<();
  std::stringbuf::str();
  *(_QWORD *)&v35 = *MEMORY[0x24BEDB7F0];
  v9 = *(void **)(MEMORY[0x24BEDB7F0] + 72);
  *(void **)((char *)&v36[-2] + *(_QWORD *)(v35 - 24)) = *(void **)(MEMORY[0x24BEDB7F0] + 64);
  v36[0] = v9;
  v36[1] = (void *)(MEMORY[0x24BEDB848] + 16);
  if (v45 < 0)
    operator delete(*((void **)&v42 + 1));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v47);
  sub_2397209F0("Expected magic byte 0x89 (Png), 0xff (Jpeg), 0x49 or 0x4d (Tiff) but found unknown magic byte '0x", (uint64_t)&v12, "'.", &v14);
  sub_239A42F9C(__dst, (__int128 *)&v14);
  v23 = 1;
  sub_239720830(1u, (__int128 *)__dst, (uint64_t)&v24);
  *(_OWORD *)a1 = v24;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v34)
  {
    *(_BYTE *)(a1 + 120) = 0;
    goto LABEL_61;
  }
  *(_BYTE *)(a1 + 40) = 0;
  if (v27)
  {
    *(_OWORD *)(a1 + 16) = v25;
    *(_QWORD *)(a1 + 32) = v26;
    v26 = 0;
    v25 = 0uLL;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (!v33)
  {
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (!v27)
      goto LABEL_61;
    goto LABEL_59;
  }
  v10 = v30;
  *(_QWORD *)(a1 + 64) = v29;
  *(_OWORD *)(a1 + 48) = v28;
  v28 = 0uLL;
  *(_QWORD *)(a1 + 72) = v10;
  *(_OWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 96) = v32;
  v32 = 0;
  v29 = 0;
  v31 = 0uLL;
  *(_BYTE *)(a1 + 104) = 1;
  *(_BYTE *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 120) = 0;
  if (SHIBYTE(v32) < 0)
  {
    operator delete((void *)v31);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
    {
LABEL_44:
      if (!v27)
        goto LABEL_61;
      goto LABEL_59;
    }
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_44;
  }
  operator delete((void *)v28);
  if (!v27)
    goto LABEL_61;
LABEL_59:
  if (SHIBYTE(v26) < 0)
    operator delete((void *)v25);
LABEL_61:
  if (v23)
  {
    if (v22)
    {
      if (v21 < 0)
        operator delete(v20);
      if (v19 < 0)
        operator delete(v18);
    }
    if (v17 && v16 < 0)
      operator delete(__dst[0]);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v14.__r_.__value_.__l.__data_);
  if (v13 < 0)
  {
    v11 = v12;
    goto LABEL_50;
  }
}

void sub_2397207B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  sub_239522FE4((uint64_t)&a44);
  _Unwind_Resume(a1);
}

void sub_2397207C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  sub_239522FE4((uint64_t)&a44);
  _Unwind_Resume(a1);
}

void sub_2397207D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  sub_239523188((uint64_t)&a22);
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_239720830(unsigned int a1@<W0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  void *v6[2];
  char v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  char v13;
  char v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 __p;
  uint64_t v23;
  char v24;
  char v25;

  sub_23952329C(v6, a2);
  sub_239720C40((uint64_t)&v15, a1, (__int128 *)v6);
  *(_OWORD *)a3 = v15;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (!v25)
    goto LABEL_15;
  *(_BYTE *)(a3 + 40) = 0;
  if (v18)
  {
    *(_OWORD *)(a3 + 16) = v16;
    *(_QWORD *)(a3 + 32) = v17;
    v17 = 0;
    v16 = 0uLL;
    *(_BYTE *)(a3 + 40) = 1;
  }
  *(_BYTE *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 104) = 0;
  if (!v24)
  {
    *(_BYTE *)(a3 + 112) = 1;
    if (!v18)
      goto LABEL_15;
    goto LABEL_13;
  }
  v5 = v21;
  *(_QWORD *)(a3 + 64) = v20;
  *(_OWORD *)(a3 + 48) = v19;
  v19 = 0uLL;
  *(_QWORD *)(a3 + 72) = v5;
  *(_OWORD *)(a3 + 80) = __p;
  *(_QWORD *)(a3 + 96) = v23;
  v23 = 0;
  v20 = 0;
  __p = 0uLL;
  *(_BYTE *)(a3 + 104) = 1;
  *(_BYTE *)(a3 + 112) = 1;
  if (SHIBYTE(v23) < 0)
  {
    operator delete((void *)__p);
    if ((SHIBYTE(v20) & 0x80000000) == 0)
    {
LABEL_7:
      if (!v18)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else if ((SHIBYTE(v20) & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete((void *)v19);
  if (!v18)
    goto LABEL_15;
LABEL_13:
  if (SHIBYTE(v17) < 0)
    operator delete((void *)v16);
LABEL_15:
  if (!v14)
    return;
  if (!v13)
    goto LABEL_19;
  if (v12 < 0)
  {
    operator delete(v11);
    if (v10 < 0)
      goto LABEL_24;
LABEL_19:
    if (!v8)
      return;
    goto LABEL_20;
  }
  if ((v10 & 0x80000000) == 0)
    goto LABEL_19;
LABEL_24:
  operator delete(v9);
  if (!v8)
    return;
LABEL_20:
  if (v7 < 0)
    operator delete(v6[0]);
}

void sub_2397209DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239523188((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2397209F0(const char *a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, std::string *a4@<X8>)
{
  char *v7;
  char *v8;
  __int128 v9;
  char *v10;
  size_t v11;
  int64x2_t v12;
  int8x16_t v13;
  size_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void **v20;
  void *v21;
  void *v22;
  char *v23;
  unint64_t v24;
  void *__p;
  char v26;

  v22 = 0;
  v23 = 0;
  v24 = 0;
  v7 = sub_239720D14(&v22, a1);
  v8 = v7;
  v23 = v7;
  if ((unint64_t)v7 >= v24)
  {
    v10 = sub_23941A624((char **)&v22, a2);
    v23 = v10;
    if ((unint64_t)v10 < v24)
      goto LABEL_6;
  }
  else
  {
    if ((*(char *)(a2 + 23) & 0x80000000) == 0)
    {
      v9 = *(_OWORD *)a2;
      *((_QWORD *)v7 + 2) = *(_QWORD *)(a2 + 16);
      *(_OWORD *)v7 = v9;
      v10 = v7 + 24;
      v23 = v7 + 24;
      if ((unint64_t)(v7 + 24) >= v24)
        goto LABEL_16;
LABEL_6:
      v11 = strlen(a3);
      if (v11 >= 0x7FFFFFFFFFFFFFF8)
        sub_23941A5AC();
      v14 = v11;
      if (v11 >= 0x17)
      {
        v16 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v11 | 7) != 0x17)
          v16 = v11 | 7;
        v17 = v16 + 1;
        v15 = operator new(v16 + 1);
        *((_QWORD *)v10 + 1) = v14;
        *((_QWORD *)v10 + 2) = v17 | 0x8000000000000000;
        *(_QWORD *)v10 = v15;
      }
      else
      {
        v10[23] = v11;
        v15 = v10;
        if (!v11)
          goto LABEL_14;
      }
      memmove(v15, a3, v14);
LABEL_14:
      *((_BYTE *)v15 + v14) = 0;
      v18 = v10 + 24;
      goto LABEL_17;
    }
    sub_23941A7F8(v7, *(void **)a2, *(_QWORD *)(a2 + 8));
    v10 = v8 + 24;
    v23 = v8 + 24;
    if ((unint64_t)(v8 + 24) < v24)
      goto LABEL_6;
  }
LABEL_16:
  v18 = sub_239583E94(&v22, a3);
LABEL_17:
  v23 = v18;
  v26 = 0;
  LOBYTE(__p) = 0;
  sub_23941AE44((uint64_t)v22, (uint64_t)v18, (uint64_t)&__p, a4, v12, v13);
  if (v26 < 0)
    operator delete(__p);
  v19 = (char *)v22;
  if (v22)
  {
    v20 = (void **)v23;
    v21 = v22;
    if (v23 != v22)
    {
      do
      {
        if (*((char *)v20 - 1) < 0)
          operator delete(*(v20 - 3));
        v20 -= 3;
      }
      while (v20 != (void **)v19);
      v21 = v22;
    }
    v23 = v19;
    operator delete(v21);
  }
}

void sub_239720BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_23941A260(&a9);
  _Unwind_Resume(a1);
}

void sub_239720BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239720C40(uint64_t a1, unsigned int a2, __int128 *a3)
{
  _UNKNOWN **v6;
  void *__p[2];
  char v9;
  char v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  char v15;
  char v16;

  v6 = sub_2397342AC();
  sub_23952329C(__p, a3);
  sub_239A434D0(a1, a2, (uint64_t)v6, (__int128 *)__p);
  if (!v16)
    return a1;
  if (!v15)
    goto LABEL_5;
  if (v14 < 0)
  {
    operator delete(v13);
    if ((v12 & 0x80000000) == 0)
    {
LABEL_5:
      if (!v10)
        return a1;
      goto LABEL_6;
    }
  }
  else if ((v12 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v11);
  if (!v10)
    return a1;
LABEL_6:
  if (v9 < 0)
    operator delete(__p[0]);
  return a1;
}

void sub_239720D00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239523188((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_239720D14(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_239720F2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239720F44(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239720F68(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    j__CFRelease(v1);
}

uint64_t sub_239720F88(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_239720FF8(_QWORD *a1, uint64_t a2)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v4 = *(const void **)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 8);
  v17 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_239721108(&v18, v4);
  v8 = v19;
  *a1 = v18;
  a1[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    v11 = v19;
    if (v19)
    {
      v12 = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (!v17)
    return a1;
  v14 = (unint64_t *)&v17->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return a1;
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  return a1;
}

void sub_2397210F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239721108(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    j__CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_250AE3F48;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_239721168(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_239721180(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239721198(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_2397211BC(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    j__CFRelease(v1);
}

uint64_t sub_2397211DC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_23972124C(uint64_t a1)
{
  __n128 v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  if (*(_BYTE *)(a1 + 120))
  {
    v2 = nullsub_4(a1 + 24);
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v3->__on_zero_shared)(v3, v2);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    nullsub_4(a1);
    return a1;
  }
  if (!*(_BYTE *)(a1 + 112))
    return a1;
  if (!*(_BYTE *)(a1 + 104))
    goto LABEL_13;
  if (*(char *)(a1 + 103) < 0)
  {
    operator delete(*(void **)(a1 + 80));
    if (*(char *)(a1 + 71) < 0)
      goto LABEL_17;
LABEL_13:
    if (*(_BYTE *)(a1 + 40))
      goto LABEL_14;
    return a1;
  }
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    goto LABEL_13;
LABEL_17:
  operator delete(*(void **)(a1 + 48));
  if (!*(_BYTE *)(a1 + 40))
    return a1;
LABEL_14:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_239721328(const char *a1@<X0>, int *a2@<X1>, const char *a3@<X2>, CFTypeRef *a4@<X3>, std::string *a5@<X8>)
{
  char *v9;
  size_t v10;
  size_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64x2_t v16;
  int8x16_t v17;
  char *v18;
  char *v19;
  void *v20;
  char v21;
  void *v22;
  char *v23;
  unint64_t v24;
  void *__p[2];
  char v26;

  v22 = 0;
  v23 = 0;
  v24 = 0;
  v23 = sub_2397217A4(&v22, a1);
  sub_2397215FC((uint64_t)__p, (uint64_t)&v22, a2);
  v9 = v23;
  if ((unint64_t)v23 >= v24)
  {
    v13 = sub_23941A884(&v22, a3);
    goto LABEL_12;
  }
  v10 = strlen(a3);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v14 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v14 = v10 | 7;
    v15 = v14 + 1;
    v12 = operator new(v14 + 1);
    *((_QWORD *)v9 + 1) = v11;
    *((_QWORD *)v9 + 2) = v15 | 0x8000000000000000;
    *(_QWORD *)v9 = v12;
  }
  else
  {
    v23[23] = v10;
    v12 = v9;
    if (!v10)
      goto LABEL_11;
  }
  memmove(v12, a3, v11);
LABEL_11:
  *((_BYTE *)v12 + v11) = 0;
  v13 = v9 + 24;
LABEL_12:
  v23 = v13;
  sub_2397216D0((uint64_t)&v21, (uint64_t)&v22, a4);
  v26 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v22, (uint64_t)v23, (uint64_t)__p, a5, v16, v17);
  if (v26 < 0)
    operator delete(__p[0]);
  v18 = (char *)v22;
  if (v22)
  {
    v19 = v23;
    v20 = v22;
    if (v23 != v22)
    {
      do
      {
        if (*(v19 - 1) < 0)
          operator delete(*((void **)v19 - 3));
        v19 -= 24;
      }
      while (v19 != v18);
      v20 = v22;
    }
    v23 = v18;
    operator delete(v20);
  }
}

void sub_2397214BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_239721518(CFTypeRef *a1@<X0>, std::string *a2@<X8>)
{
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *v8;
  void **v9;
  uint64_t v10;
  void *__p[2];
  char v12;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  sub_2397216D0((uint64_t)__p, (uint64_t)&v8, a1);
  v12 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v8, (uint64_t)v9, (uint64_t)__p, a2, v3, v4);
  if (v12 < 0)
    operator delete(__p[0]);
  v5 = (void **)v8;
  if (v8)
  {
    v6 = v9;
    v7 = v8;
    if (v9 != v8)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = v8;
    }
    v9 = v5;
    operator delete(v7);
  }
}

void sub_2397215C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_2397215FC(uint64_t a1, uint64_t a2, int *a3)
{
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v11;
  uint64_t v12;

  sub_239A43D24(&v12);
  v5 = (_QWORD *)sub_239A43E64(&v12);
  sub_239729AF4(v5, a3);
  sub_239A43E70();
  sub_239A43DB8(&v12);
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
    v8 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v9 = SHIBYTE(v11);
    *(_QWORD *)(a2 + 8) = v8;
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v11;
    *(_OWORD *)v6 = v7;
    *(_QWORD *)(a2 + 8) = v6 + 24;
  }
}

void sub_2397216A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2397216D0(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v11;
  uint64_t v12;

  sub_239A43D24(&v12);
  v5 = (_QWORD *)sub_239A43E64(&v12);
  sub_239628DD4(v5, *a3);
  sub_239A43E70();
  sub_239A43DB8(&v12);
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
    v8 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v9 = SHIBYTE(v11);
    *(_QWORD *)(a2 + 8) = v8;
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v11;
    *(_OWORD *)v6 = v7;
    *(_QWORD *)(a2 + 8) = v6 + 24;
  }
}

void sub_239721774(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2397217A4(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_2397219BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397219D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageDestinationRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  CGImageDestinationRef *v24;
  BOOL v25;
  BOOL v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  std::__shared_weak_count *size;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  void *v36[2];
  char v37;
  char v38;
  void *v39;
  char v40;
  void *v41;
  char v42;
  char v43;
  char v44;
  CGImageRef v45;
  std::__shared_weak_count *v46;
  uint64_t v47;
  std::string v48;
  void *__dst[2];
  char v50;
  char v51;
  void *v52;
  char v53;
  void *v54;
  char v55;
  char v56;
  char v57;
  unsigned int v58;
  _QWORD v59[2];
  char v60;
  char v61;
  void *v62;
  char v63;
  void *__p;
  char v65;
  char v66;
  char v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  char v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  char v77;
  char v78;

  v7 = *(CGImageDestinationRef *)a3;
  v6 = *(std::__shared_weak_count **)(a3 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v7)
      goto LABEL_7;
  }
  else
  {
LABEL_6:
    if (v7)
    {
LABEL_7:
      v58 = *(_DWORD *)(a2 + 48);
      v11 = (char *)&v74;
      v12 = v58 - 1;
      if (v58 - 1 <= 0x27 && ((0xF1F1F0000FuLL >> v12) & 1) != 0)
        v11 = (char *)&v68 + 4 * qword_239ED5160[v12];
      if (v11 - (char *)&v68 == 72)
      {
        sub_2397221B0("Invalid image format. Format ", &v58, " can't be saved with CoreGraphics.", &v48);
        sub_239A42F9C(__dst, (__int128 *)&v48);
        v57 = 1;
        sub_239914C28((uint64_t)__dst, (uint64_t)&v68);
        *(_OWORD *)a1 = v68;
        *(_BYTE *)(a1 + 16) = 0;
        *(_BYTE *)(a1 + 112) = 0;
        if (v78)
        {
          *(_BYTE *)(a1 + 40) = 0;
          if (v71)
          {
            *(_OWORD *)(a1 + 16) = v69;
            *(_QWORD *)(a1 + 32) = v70;
            v70 = 0;
            v69 = 0uLL;
            *(_BYTE *)(a1 + 40) = 1;
          }
          *(_BYTE *)(a1 + 48) = 0;
          *(_BYTE *)(a1 + 104) = 0;
          if (!v77)
          {
            *(_BYTE *)(a1 + 112) = 1;
            *(_BYTE *)(a1 + 120) = 0;
            if (!v71)
              goto LABEL_83;
            goto LABEL_81;
          }
          v13 = v74;
          *(_QWORD *)(a1 + 64) = v73;
          *(_OWORD *)(a1 + 48) = v72;
          v72 = 0uLL;
          *(_QWORD *)(a1 + 72) = v13;
          *(_OWORD *)(a1 + 80) = v75;
          *(_QWORD *)(a1 + 96) = v76;
          v76 = 0;
          v73 = 0;
          v75 = 0uLL;
          *(_BYTE *)(a1 + 104) = 1;
          *(_BYTE *)(a1 + 112) = 1;
          *(_BYTE *)(a1 + 120) = 0;
          if (SHIBYTE(v76) < 0)
          {
            operator delete((void *)v75);
            if ((SHIBYTE(v73) & 0x80000000) == 0)
            {
LABEL_17:
              if (!v71)
                goto LABEL_83;
LABEL_81:
              if (SHIBYTE(v70) < 0)
                operator delete((void *)v69);
              goto LABEL_83;
            }
          }
          else if ((SHIBYTE(v73) & 0x80000000) == 0)
          {
            goto LABEL_17;
          }
          operator delete((void *)v72);
          if (v71)
            goto LABEL_81;
        }
        else
        {
          *(_BYTE *)(a1 + 120) = 0;
        }
LABEL_83:
        if (v57)
        {
          if (v56)
          {
            if (v55 < 0)
              operator delete(v54);
            if (v53 < 0)
              operator delete(v52);
          }
          if (v51)
          {
            if (v50 < 0)
              operator delete(__dst[0]);
          }
        }
        if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return;
        v31 = (void *)v48.__r_.__value_.__r.__words[0];
LABEL_95:
        operator delete(v31);
        return;
      }
      v14 = *(_QWORD *)(a2 + 8);
      if (!v14)
        goto LABEL_43;
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        v16 = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 1, v16));
        do
          v18 = __ldaxr(v16);
        while (__stlxr(v18 - 1, v16));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
        v14 = *(_QWORD *)(a2 + 8);
        v19 = *(std::__shared_weak_count **)(a2 + 16);
        if (v19)
        {
          v20 = (unint64_t *)&v19->__shared_owners_;
          do
            v21 = __ldxr(v20);
          while (__stxr(v21 + 1, v20));
          do
            v22 = __ldaxr(v20);
          while (__stlxr(v22 - 1, v20));
          if (!v22)
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
          }
        }
      }
      if (*(_BYTE *)(a2 + 53))
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v14 + 96))(&v47, v14, 0);
      else
LABEL_43:
        v47 = 0;
      sub_239722384(a2, a2, (uint64_t *)&v48);
      sub_23972292C(&v45, (uint64_t)&v48);
      v24 = sub_239736EC4((CGImageDestinationRef *)a3, &v45);
      v25 = sub_239737088(v24);
      v26 = v25;
      v27 = v46;
      if (!v46)
        goto LABEL_48;
      v28 = (unint64_t *)&v46->__shared_owners_;
      do
        v29 = __ldaxr(v28);
      while (__stlxr(v29 - 1, v28));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
        if (v26)
          goto LABEL_49;
      }
      else
      {
LABEL_48:
        if (v25)
        {
LABEL_49:
          *(_BYTE *)(a1 + 120) = 1;
LABEL_111:
          size = (std::__shared_weak_count *)v48.__r_.__value_.__l.__size_;
          if (v48.__r_.__value_.__l.__size_)
          {
            v33 = (unint64_t *)(v48.__r_.__value_.__l.__size_ + 8);
            do
              v34 = __ldaxr(v33);
            while (__stlxr(v34 - 1, v33));
            if (!v34)
            {
              ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
              std::__shared_weak_count::__release_weak(size);
            }
          }
          v35 = v47;
          v47 = 0;
          if (v35)
            (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
          return;
        }
      }
      sub_239618F08(v36, "Failed to save image to destination.");
      v44 = 1;
      sub_239616578(5u, (__int128 *)v36, (uint64_t)&v68);
      *(_OWORD *)a1 = v68;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (!v78)
      {
        *(_BYTE *)(a1 + 120) = 0;
        goto LABEL_102;
      }
      *(_BYTE *)(a1 + 40) = 0;
      if (v71)
      {
        *(_OWORD *)(a1 + 16) = v69;
        *(_QWORD *)(a1 + 32) = v70;
        v70 = 0;
        v69 = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (!v77)
      {
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (!v71)
        {
LABEL_102:
          if (v44)
          {
            if (v43)
            {
              if (v42 < 0)
                operator delete(v41);
              if (v40 < 0)
                operator delete(v39);
            }
            if (v38 && v37 < 0)
              operator delete(v36[0]);
          }
          goto LABEL_111;
        }
LABEL_100:
        if (SHIBYTE(v70) < 0)
          operator delete((void *)v69);
        goto LABEL_102;
      }
      v30 = v74;
      *(_QWORD *)(a1 + 64) = v73;
      *(_OWORD *)(a1 + 48) = v72;
      v72 = 0uLL;
      *(_QWORD *)(a1 + 72) = v30;
      *(_OWORD *)(a1 + 80) = v75;
      *(_QWORD *)(a1 + 96) = v76;
      v76 = 0;
      v73 = 0;
      v75 = 0uLL;
      *(_BYTE *)(a1 + 104) = 1;
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (SHIBYTE(v76) < 0)
      {
        operator delete((void *)v75);
        if ((SHIBYTE(v73) & 0x80000000) == 0)
        {
LABEL_63:
          if (!v71)
            goto LABEL_102;
          goto LABEL_100;
        }
      }
      else if ((SHIBYTE(v73) & 0x80000000) == 0)
      {
        goto LABEL_63;
      }
      operator delete((void *)v72);
      if (!v71)
        goto LABEL_102;
      goto LABEL_100;
    }
  }
  sub_239618F08(v59, "Unsupported format");
  v67 = 1;
  sub_239914C28((uint64_t)v59, (uint64_t)&v68);
  *(_OWORD *)a1 = v68;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v78)
  {
    *(_BYTE *)(a1 + 120) = 0;
    goto LABEL_70;
  }
  *(_BYTE *)(a1 + 40) = 0;
  if (v71)
  {
    *(_OWORD *)(a1 + 16) = v69;
    *(_QWORD *)(a1 + 32) = v70;
    v70 = 0;
    v69 = 0uLL;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (v77)
  {
    v23 = v74;
    *(_QWORD *)(a1 + 64) = v73;
    *(_OWORD *)(a1 + 48) = v72;
    v72 = 0uLL;
    *(_QWORD *)(a1 + 72) = v23;
    *(_OWORD *)(a1 + 80) = v75;
    *(_QWORD *)(a1 + 96) = v76;
    v76 = 0;
    v73 = 0;
    v75 = 0uLL;
    *(_BYTE *)(a1 + 104) = 1;
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (SHIBYTE(v76) < 0)
    {
      operator delete((void *)v75);
      if ((SHIBYTE(v73) & 0x80000000) == 0)
      {
LABEL_41:
        if (!v71)
          goto LABEL_70;
        goto LABEL_68;
      }
    }
    else if ((SHIBYTE(v73) & 0x80000000) == 0)
    {
      goto LABEL_41;
    }
    operator delete((void *)v72);
    if (!v71)
      goto LABEL_70;
    goto LABEL_68;
  }
  *(_BYTE *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 120) = 0;
  if (!v71)
    goto LABEL_70;
LABEL_68:
  if (SHIBYTE(v70) < 0)
    operator delete((void *)v69);
LABEL_70:
  if (v67)
  {
    if (v66)
    {
      if (v65 < 0)
        operator delete(__p);
      if (v63 < 0)
        operator delete(v62);
    }
    if (v61 && v60 < 0)
    {
      v31 = (void *)v59[0];
      goto LABEL_95;
    }
  }
}

void sub_239722110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  uint64_t v47;

  sub_239523188((uint64_t)&a10);
  sub_239416DA0((uint64_t)&__p);
  v47 = a25;
  a25 = 0;
  if (!v47)
    _Unwind_Resume(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  _Unwind_Resume(a1);
}

void sub_2397221B0(const char *a1@<X0>, unsigned int *a2@<X1>, const char *a3@<X2>, std::string *a4@<X8>)
{
  char *v7;
  size_t v8;
  int64x2_t v9;
  int8x16_t v10;
  size_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void *v18;
  void *v19;
  char *v20;
  unint64_t v21;
  void *__p[2];
  char v23;

  v19 = 0;
  v20 = 0;
  v21 = 0;
  v20 = sub_2397224D4(&v19, a1);
  sub_23941A18C((uint64_t)__p, (uint64_t)&v19, a2);
  v7 = v20;
  if ((unint64_t)v20 >= v21)
  {
    v13 = sub_239722700(&v19, a3);
    goto LABEL_12;
  }
  v8 = strlen(a3);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v8;
  if (v8 >= 0x17)
  {
    v14 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v14 = v8 | 7;
    v15 = v14 + 1;
    v12 = operator new(v14 + 1);
    *((_QWORD *)v7 + 1) = v11;
    *((_QWORD *)v7 + 2) = v15 | 0x8000000000000000;
    *(_QWORD *)v7 = v12;
  }
  else
  {
    v20[23] = v8;
    v12 = v7;
    if (!v8)
      goto LABEL_11;
  }
  memmove(v12, a3, v11);
LABEL_11:
  *((_BYTE *)v12 + v11) = 0;
  v13 = v7 + 24;
LABEL_12:
  v20 = v13;
  v23 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v19, (uint64_t)v13, (uint64_t)__p, a4, v9, v10);
  if (v23 < 0)
    operator delete(__p[0]);
  v16 = (char *)v19;
  if (v19)
  {
    v17 = v20;
    v18 = v19;
    if (v20 != v19)
    {
      do
      {
        if (*(v17 - 1) < 0)
          operator delete(*((void **)v17 - 3));
        v17 -= 24;
      }
      while (v17 != v16);
      v18 = v19;
    }
    v20 = v16;
    operator delete(v18);
  }
}

void sub_23972232C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

double sub_239722384@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  __n128 v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  double result;
  _QWORD v19[2];
  std::__shared_weak_count *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  __int16 v25;

  v19[0] = &off_250ADB210;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_QWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 48);
    v10 = *(_WORD *)(a1 + 52);
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  else
  {
    v8 = *(_QWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 48);
    v10 = *(_WORD *)(a1 + 52);
  }
  v19[1] = v4;
  v20 = v5;
  v21 = *(_QWORD *)(a1 + 24);
  v22 = *(_DWORD *)(a1 + 32);
  v23 = v8;
  v24 = v9;
  v25 = v10;
  if (v5)
  {
    v12 = (unint64_t *)&v5->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_239739694((uint64_t)v19, a2, a3);
  v14 = nullsub_4(&v21);
  v15 = v20;
  if (!v20)
    goto LABEL_17;
  v16 = (unint64_t *)&v20->__shared_owners_;
  do
    v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v15->__on_zero_shared)(v15, v14);
    std::__shared_weak_count::__release_weak(v15);
    *(_QWORD *)&result = nullsub_4(v19).n128_u64[0];
  }
  else
  {
LABEL_17:
    *(_QWORD *)&result = nullsub_4(v19).n128_u64[0];
  }
  return result;
}

void sub_2397224C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_2397224D4(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_2397226EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_239722700(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_239722918(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_23972292C(_QWORD *a1, uint64_t a2)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v4 = *(const void **)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 8);
  v17 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_239722A3C(&v18, v4);
  v8 = v19;
  *a1 = v18;
  a1[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    v11 = v19;
    if (v19)
    {
      v12 = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (!v17)
    return a1;
  v14 = (unint64_t *)&v17->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return a1;
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  return a1;
}

void sub_239722A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239722A3C(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    j__CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_250AE3EF8;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_239722A9C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_239722AB4(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_239722AC8(_QWORD *a1, uint64_t a2)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v4 = *(const void **)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 8);
  v17 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_239722BD8(&v18, v4);
  v8 = v19;
  *a1 = v18;
  a1[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    v11 = v19;
    if (v19)
    {
      v12 = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (!v17)
    return a1;
  v14 = (unint64_t *)&v17->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return a1;
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  return a1;
}

void sub_239722BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239722BD8(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    j__CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_250AE3F98;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_239722C38(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_239722C50(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239722C68(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239722C8C(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    j__CFRelease(v1);
}

uint64_t sub_239722CAC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_239722D34@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v7 = (_QWORD *)a1[3];
  if (v7)
  {
    if (v7 == a1)
    {
      v11 = v10;
      (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v10);
    }
    else
    {
      v11 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v7 + 16))(a1[3]);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_23971E520(v10, a2, a3, 7, a4);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_239722E28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (!a13)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*(_QWORD *)a13 + 40))();
  _Unwind_Resume(exception_object);
}

void sub_239722E78(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23971F1DC(a1, 7, a2);
}

uint64_t sub_239722E80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  const float *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v43;
  unint64_t v44;
  char *v45;
  unint64_t v46;
  BOOL v47;
  const float *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  int v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t i;
  _BOOL8 v75;
  uint64_t v76;
  uint64_t v78;
  __n128 v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  __n128 v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  void *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  float32x4_t *v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int32 *v99;
  char *v100;
  const float *v101;
  _DWORD *v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  float32x4_t *v110;
  unint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int32 *v118;
  char *v119;
  char *v120;
  const float *v121;
  _DWORD *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  float32x4_t *v133;
  float32x4_t *v134;
  const float *v135;
  float32x4_t *v136;
  BOOL v138;
  BOOL v140;
  BOOL v142;
  BOOL v144;
  BOOL v146;
  uint64_t v148;
  float32x4_t *v149;
  float32x4_t *v150;
  float32x4_t *v151;
  const float *v152;
  float32x4_t *v153;
  float32x4_t *v154;
  float32x4_t *v155;
  const float *v156;
  float32x4_t *v157;
  BOOL v159;
  BOOL v161;
  BOOL v163;
  BOOL v165;
  BOOL v167;
  BOOL v169;
  BOOL v171;
  BOOL v173;
  BOOL v175;
  uint64_t v177;
  float32x4_t *v178;
  float32x4_t *v179;
  float32x4_t *v180;
  float32x4_t *v181;
  const float *v182;
  uint64_t result;
  void *v184[2];
  char v185;
  char v186;
  void *v187;
  char v188;
  void *v189;
  char v190;
  char v191;
  char v192;
  __int128 v193;
  char v194;
  char v195;
  void *v196;
  char v197;
  void *v198;
  char v199;
  char v200;
  char v201;
  void *v202[2];
  char v203;
  char v204;
  void *v205;
  char v206;
  void *v207;
  char v208;
  char v209;
  char v210;
  __int128 v211;
  __int128 v212;
  uint64_t v213;
  char v214;
  __int128 v215;
  uint64_t v216;
  uint64_t v217;
  __int128 v218;
  uint64_t v219;
  char v220;
  char v221;
  void *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  void *v229[2];
  __int128 v230;
  void *v231[2];
  void *__p[2];
  __int128 v233;
  __int128 v234;
  uint64_t v235;
  __int128 *v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  __int128 v240;
  __int128 v241;
  uint64_t v242;
  char v243;
  void *v244[2];
  uint64_t v245;
  uint64_t v246;
  void *v247[2];
  uint64_t v248;
  void *v249;
  void *v250;
  int v251;
  int v252;
  void *v253;
  uint64_t v254;
  float32x4x3_t v255;
  float32x4x4_t v256;

  v254 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (v10)
    {
      v6 = *(_QWORD *)(a1 + 8);
      v11 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v11)
        goto LABEL_14;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
      v6 = *(_QWORD *)(a1 + 8);
      v11 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v11)
        goto LABEL_14;
    }
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      if (*(_BYTE *)(a1 + 53))
        goto LABEL_15;
LABEL_17:
      v225 = 0;
      goto LABEL_18;
    }
  }
LABEL_14:
  if (!*(_BYTE *)(a1 + 53))
    goto LABEL_17;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v225, v6, 0);
LABEL_18:
  v16 = *(_DWORD *)(a1 + 24);
  v15 = *(_DWORD *)(a1 + 28);
  v224 = *(_QWORD *)(a1 + 24);
  v17 = *(_DWORD *)(a1 + 48);
  switch(v17)
  {
    case 4u:
      v18 = *(_QWORD *)(a1 + 40);
      if (*(_BYTE *)(a1 + 52) && v18)
      {
        v19 = *(_QWORD *)(a1 + 8);
        v20 = *(std::__shared_weak_count **)(a1 + 16);
        if (v20)
        {
          v21 = (unint64_t *)&v20->__shared_owners_;
          do
            v22 = __ldxr(v21);
          while (__stxr(v22 + 1, v21));
          do
            v23 = __ldaxr(v21);
          while (__stlxr(v23 - 1, v21));
          if (!v23)
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v19 + 88))(v19, 0, "unknown location");
        v18 = *(_QWORD *)(a1 + 40);
      }
      sub_239A18FFC((uint64_t)&v240);
      if (v15 >= 0x10 || v16 >= 0x10)
        v25 = 3;
      else
        v25 = 0;
      v252 = v25;
      sub_239A1903C(&v228);
      DWORD2(v230) = 1;
      v234 = 0uLL;
      v235 = 0;
      v26 = v15 * v16;
      if ((_DWORD)v26)
      {
        sub_2394807B4((uint64_t)&v234, v15 * v16);
        v27 = 0;
        v28 = v234;
        if (v26 < 8)
          goto LABEL_402;
        if ((unint64_t)(v234 - v18) < 0x20)
          goto LABEL_402;
        v29 = 0;
        v27 = v26 & 0xFFFFFFF8;
        v30 = v27;
        do
        {
          v31 = *(_OWORD *)(v18 + v29 + 16);
          v32 = (_OWORD *)(v28 + v29);
          *v32 = *(_OWORD *)(v18 + v29);
          v32[1] = v31;
          v29 += 32;
          v30 -= 8;
        }
        while (v30);
        if (v27 != v26)
        {
LABEL_402:
          do
          {
            *(_DWORD *)(v28 + 4 * v27) = *(_DWORD *)(v18 + 4 * v27);
            ++v27;
          }
          while (v26 != v27);
        }
      }
      else
      {
        v28 = 0;
      }
      *(_QWORD *)&v226 = 0;
      if (*((_QWORD *)&v234 + 1) == v28)
        sub_23941D884();
      *(_QWORD *)&v226 = v28;
      v229[1] = &v226;
      *(_QWORD *)&v230 = __PAIR64__(v15, v16);
      v251 = 1;
      v249 = malloc_type_malloc(0x110uLL, 0x1000040881B329AuLL);
      strncpy((char *)v249, "R", 0xFFuLL);
      *((_BYTE *)v249 + 1) = 0;
      v250 = malloc_type_malloc(4uLL, 0x100004052888210uLL);
      v88 = (char *)malloc_type_malloc(4uLL, 0x100004052888210uLL);
      v253 = v88;
      if (v251 >= 1)
      {
        v89 = 0;
        v90 = (char *)v250;
        do
        {
          v91 = 4 * v89;
          *(_DWORD *)&v90[v91] = 2;
          *(_DWORD *)&v88[v91] = 2;
          ++v89;
        }
        while (v89 < v251);
      }
      v222 = 0;
      v223 = 0;
      if (sub_239A19050((int32x2_t *)&v228, &v240, &v222, &v223))
      {
        std::ostream::write();
        free(v222);
        free(v249);
        free(v250);
        free(v253);
        *(_BYTE *)(a3 + 120) = 1;
        goto LABEL_137;
      }
      if (v223)
        sub_239A1BB94(v223);
      free(v249);
      free(v250);
      free(v253);
      sub_239618F08(v184, "failed to save 32 bit exr");
      v192 = 1;
      sub_239616578(5u, (__int128 *)v184, (uint64_t)&v211);
      *(_OWORD *)a3 = v211;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (!v221)
      {
        *(_BYTE *)(a3 + 120) = 0;
        goto LABEL_362;
      }
      *(_BYTE *)(a3 + 40) = 0;
      if (v214)
      {
        *(_OWORD *)(a3 + 16) = v212;
        *(_QWORD *)(a3 + 32) = v213;
        v213 = 0;
        v212 = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if (v220)
      {
        v130 = v217;
        *(_QWORD *)(a3 + 64) = v216;
        *(_OWORD *)(a3 + 48) = v215;
        v215 = 0uLL;
        *(_QWORD *)(a3 + 72) = v130;
        *(_OWORD *)(a3 + 80) = v218;
        *(_QWORD *)(a3 + 96) = v219;
        v219 = 0;
        v216 = 0;
        v218 = 0uLL;
        *(_BYTE *)(a3 + 104) = 1;
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (SHIBYTE(v219) < 0)
        {
          operator delete((void *)v218);
          if ((SHIBYTE(v216) & 0x80000000) == 0)
          {
LABEL_201:
            if (!v214)
              goto LABEL_362;
            goto LABEL_360;
          }
        }
        else if ((SHIBYTE(v216) & 0x80000000) == 0)
        {
          goto LABEL_201;
        }
        operator delete((void *)v215);
        if (!v214)
          goto LABEL_362;
      }
      else
      {
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (!v214)
          goto LABEL_362;
      }
LABEL_360:
      if (SHIBYTE(v213) < 0)
        operator delete((void *)v212);
LABEL_362:
      if (v192)
      {
        if (v191)
        {
          if (v190 < 0)
            operator delete(v189);
          if (v188 < 0)
            operator delete(v187);
        }
        if (v186 && v185 < 0)
          operator delete(v184[0]);
      }
LABEL_137:
      v87 = (void *)v234;
      if ((_QWORD)v234)
      {
        *((_QWORD *)&v234 + 1) = v234;
        goto LABEL_345;
      }
      goto LABEL_346;
    case 0x18u:
      v36 = *(const float **)(a1 + 40);
      if (*(_BYTE *)(a1 + 52) && v36)
      {
        v37 = *(_QWORD *)(a1 + 8);
        v38 = *(std::__shared_weak_count **)(a1 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v37 + 88))(v37, 0, "unknown location");
        v36 = *(const float **)(a1 + 40);
      }
      sub_239A18FFC((uint64_t)&v240);
      if (v15 >= 0x10 || v16 >= 0x10)
        v43 = 4;
      else
        v43 = 0;
      v252 = v43;
      sub_239A1903C(&v234);
      v239 = 3;
      __p[0] = 0;
      v230 = 0u;
      *(_OWORD *)v231 = 0u;
      v228 = 0u;
      *(_OWORD *)v229 = 0u;
      v44 = v15 * v16;
      if ((_DWORD)v44)
      {
        sub_2394807B4((uint64_t)&v228, v15 * v16);
        v45 = (char *)v229[1];
        v46 = (uint64_t)(v230 - (unint64_t)v229[1]) >> 2;
        v47 = v44 >= v46;
        if (v44 > v46)
        {
          sub_2394807B4((uint64_t)&v229[1], v44 - v46);
          goto LABEL_142;
        }
      }
      else
      {
        v45 = 0;
        v47 = 1;
      }
      if (!v47)
        *(_QWORD *)&v230 = &v45[4 * v44];
LABEL_142:
      v92 = (float32x4_t *)v231[0];
      v93 = ((char *)v231[1] - (char *)v231[0]) >> 2;
      if (v44 <= v93)
      {
        if (v44 < v93)
          v231[1] = (char *)v231[0] + 4 * v44;
      }
      else
      {
        sub_2394807B4((uint64_t)v231, v44 - v93);
        v92 = (float32x4_t *)v231[0];
      }
      if ((_DWORD)v44)
      {
        v94 = v228;
        v95 = (char *)v229[1];
        if (v44 < 0x10)
        {
          v96 = 0;
LABEL_149:
          v97 = v44 - v96;
          v98 = 4 * v96;
          v99 = &v92->i32[v96];
          v100 = &v95[4 * v96];
          v101 = &v36[3 * v96 + 1];
          v102 = (_DWORD *)(v94 + v98);
          do
          {
            *v102++ = *((_DWORD *)v101 - 1);
            *(float *)v100 = *v101;
            v100 += 4;
            *v99++ = *((_DWORD *)v101 + 1);
            v101 += 3;
            --v97;
          }
          while (v97);
          goto LABEL_151;
        }
        v96 = 0;
        v133 = (float32x4_t *)(v228 + 4 * v44);
        v134 = (float32x4_t *)((char *)v229[1] + 4 * v44);
        v135 = &v92->f32[v44];
        v136 = (float32x4_t *)&v36[3 * v44];
        v138 = (unint64_t)v228 < (unint64_t)v135 && v92 < v133;
        v140 = (unint64_t)v228 < (unint64_t)v136 && v36 < (const float *)v133;
        v142 = v229[1] < v135 && v92 < v134;
        v144 = v229[1] < v136 && v36 < (const float *)v134;
        v146 = v92 < v136 && v36 < v135;
        if (v229[1] < v133 && (unint64_t)v228 < (unint64_t)v134)
          goto LABEL_149;
        if (v138)
          goto LABEL_149;
        if (v140)
          goto LABEL_149;
        if (v142)
          goto LABEL_149;
        if (v144)
          goto LABEL_149;
        if (v146)
          goto LABEL_149;
        v96 = v44 & 0xFFFFFFFC;
        v148 = v96;
        v149 = v92;
        v150 = (float32x4_t *)v229[1];
        v151 = (float32x4_t *)v228;
        v152 = v36;
        do
        {
          v255 = vld3q_f32(v152);
          v152 += 12;
          *v151++ = v255.val[0];
          *v150++ = v255.val[1];
          *v149++ = v255.val[2];
          v148 -= 4;
        }
        while (v148);
        if (v96 != v44)
          goto LABEL_149;
      }
LABEL_151:
      v226 = 0uLL;
      *(_QWORD *)&v227 = 0;
      if (v231[1] == v92
        || (*(_QWORD *)&v226 = v92, (void *)v230 == v229[1])
        || (*((void **)&v226 + 1) = v229[1], *((_QWORD *)&v228 + 1) == (_QWORD)v228))
      {
        sub_23941D884();
      }
      *(_QWORD *)&v227 = v228;
      v236 = &v226;
      v237 = v16;
      v238 = v15;
      v251 = 3;
      v103 = (char *)malloc_type_malloc(0x330uLL, 0x1000040881B329AuLL);
      v249 = v103;
      v104 = strncpy(v103, "B", 0xFFuLL);
      v104[1] = 0;
      strncpy(v104 + 272, "G", 0xFFuLL);
      v103[273] = 0;
      strncpy(v103 + 544, "R", 0xFFuLL);
      v103[545] = 0;
      v250 = malloc_type_malloc(0xCuLL, 0x100004052888210uLL);
      v105 = (char *)malloc_type_malloc(0xCuLL, 0x100004052888210uLL);
      v253 = v105;
      if (v251 >= 1)
      {
        v106 = 0;
        v107 = (char *)v250;
        do
        {
          v108 = 4 * v106;
          *(_DWORD *)&v107[v108] = 2;
          *(_DWORD *)&v105[v108] = 2;
          ++v106;
        }
        while (v106 < v251);
      }
      v222 = 0;
      v223 = 0;
      if (sub_239A19050((int32x2_t *)&v234, &v240, &v222, &v223))
      {
        std::ostream::write();
        free(v222);
        free(v249);
        free(v250);
        free(v253);
        *(_BYTE *)(a3 + 120) = 1;
        goto LABEL_187;
      }
      if (v223)
        sub_239A1BB94(v223);
      free(v249);
      free(v250);
      free(v253);
      sub_239618F08(&v193, "failed to save 32 bit exr");
      v201 = 1;
      sub_239616578(5u, &v193, (uint64_t)&v211);
      *(_OWORD *)a3 = v211;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (!v221)
      {
        *(_BYTE *)(a3 + 120) = 0;
        goto LABEL_375;
      }
      *(_BYTE *)(a3 + 40) = 0;
      if (v214)
      {
        *(_OWORD *)(a3 + 16) = v212;
        *(_QWORD *)(a3 + 32) = v213;
        v213 = 0;
        v212 = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if (!v220)
      {
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (!v214)
          goto LABEL_375;
LABEL_373:
        if (SHIBYTE(v213) < 0)
          operator delete((void *)v212);
LABEL_375:
        if (v201)
        {
          if (v200)
          {
            if (v199 < 0)
              operator delete(v198);
            if (v197 < 0)
              operator delete(v196);
          }
          if (v195 && v194 < 0)
          {
            v129 = (void *)v193;
            goto LABEL_186;
          }
        }
        goto LABEL_187;
      }
      v131 = v217;
      *(_QWORD *)(a3 + 64) = v216;
      *(_OWORD *)(a3 + 48) = v215;
      v215 = 0uLL;
      *(_QWORD *)(a3 + 72) = v131;
      *(_OWORD *)(a3 + 80) = v218;
      *(_QWORD *)(a3 + 96) = v219;
      v219 = 0;
      v216 = 0;
      v218 = 0uLL;
      *(_BYTE *)(a3 + 104) = 1;
      *(_BYTE *)(a3 + 112) = 1;
      *(_BYTE *)(a3 + 120) = 0;
      if (SHIBYTE(v219) < 0)
      {
        operator delete((void *)v218);
        if ((SHIBYTE(v216) & 0x80000000) == 0)
        {
LABEL_211:
          if (!v214)
            goto LABEL_375;
          goto LABEL_373;
        }
      }
      else if ((SHIBYTE(v216) & 0x80000000) == 0)
      {
        goto LABEL_211;
      }
      operator delete((void *)v215);
      if (!v214)
        goto LABEL_375;
      goto LABEL_373;
    case 0x1Fu:
      v33 = 4 * v15 * v16;
      if ((_DWORD)v33)
      {
        v34 = operator new(2 * v33);
        bzero(v34, 2 * v33);
        v35 = *(_QWORD *)(a1 + 40);
        if (!*(_BYTE *)(a1 + 52))
          goto LABEL_98;
      }
      else
      {
        v34 = 0;
        v35 = *(_QWORD *)(a1 + 40);
        if (!*(_BYTE *)(a1 + 52))
          goto LABEL_98;
      }
      if (v35)
      {
        v61 = *(_QWORD *)(a1 + 8);
        v62 = *(std::__shared_weak_count **)(a1 + 16);
        if (v62)
        {
          v63 = (unint64_t *)&v62->__shared_owners_;
          do
            v64 = __ldxr(v63);
          while (__stxr(v64 + 1, v63));
          do
            v65 = __ldaxr(v63);
          while (__stlxr(v65 - 1, v63));
          if (!v65)
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v62);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v61 + 88))(v61, 0, "unknown location");
        v35 = *(_QWORD *)(a1 + 40);
      }
LABEL_98:
      if (!(_DWORD)v33)
        goto LABEL_109;
      for (i = 0; i != v33; ++i)
      {
        while (1)
        {
          while (1)
          {
            while ((~(_BYTE)i & 3) == 0)
            {
              *((_WORD *)v34 + i) = *(_WORD *)(v35 + 2 * i);
              if (v33 == ++i)
                goto LABEL_109;
            }
            _H1 = *(_WORD *)(v35 + 2 * i);
            __asm { FCVT            D0, H1 }
            if (_D0 <= 0.0031308)
              break;
            _S0 = pow(_D0, 0.416666667) * 1.055 + -0.055;
            __asm { FCVT            H0, S0 }
            *((_WORD *)v34 + i++) = LOWORD(_S0);
            if (v33 == i)
              goto LABEL_109;
          }
          if (_D0 >= -0.0031308)
            break;
          __asm { FCVT            S0, H1 }
          _S0 = pow((float)-_S0, 0.416666667) * -1.055 + 0.055;
          __asm { FCVT            H0, S0 }
          *((_WORD *)v34 + i++) = LOWORD(_S0);
          if (v33 == i)
            goto LABEL_109;
        }
        _S0 = _D0 * 12.92;
        __asm { FCVT            H0, S0 }
        *((_WORD *)v34 + i) = LOWORD(_S0);
      }
LABEL_109:
      v75 = (_DWORD)v224 != 0;
      if (HIDWORD(v224))
        v76 = 4 * v75 * (_DWORD)v224;
      else
        v76 = 0;
      if (HIDWORD(v224))
        _ZF = (_DWORD)v224 == 0;
      else
        _ZF = 1;
      *(_QWORD *)&v211 = v34;
      *(_QWORD *)&v240 = &off_250AE3E30;
      v78 = v76 << 32;
      if (_ZF)
        v78 = 0;
      *(_QWORD *)&v228 = v78 | (4 * v75);
      sub_239725E08((uint64_t *)&v211, &v224, &v228, (uint64_t)&v240 + 8);
      *(_QWORD *)&v211 = &off_250ADB210;
      sub_23970BF74((uint64_t)&v240, (uint64_t)&v211 + 8);
      sub_23971FD8C((uint64_t)&v211, a2, 7, a3);
      v79 = nullsub_4((char *)&v212 + 8);
      v80 = (std::__shared_weak_count *)v212;
      if ((_QWORD)v212)
      {
        v81 = (unint64_t *)(v212 + 8);
        do
          v82 = __ldaxr(v81);
        while (__stlxr(v82 - 1, v81));
        if (!v82)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v80->__on_zero_shared)(v80, v79);
          std::__shared_weak_count::__release_weak(v80);
        }
      }
      v83 = nullsub_4(&v211);
      v84 = (std::__shared_weak_count *)v241;
      if ((_QWORD)v241)
      {
        v85 = (unint64_t *)(v241 + 8);
        do
          v86 = __ldaxr(v85);
        while (__stlxr(v86 - 1, v85));
        if (!v86)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v84->__on_zero_shared)(v84, v83);
          std::__shared_weak_count::__release_weak(v84);
        }
      }
      nullsub_4(&v240);
      if (!v34)
        goto LABEL_346;
      v87 = v34;
      goto LABEL_345;
    case 0x20u:
      v48 = *(const float **)(a1 + 40);
      if (*(_BYTE *)(a1 + 52) && v48)
      {
        v49 = *(_QWORD *)(a1 + 8);
        v50 = *(std::__shared_weak_count **)(a1 + 16);
        if (v50)
        {
          v51 = (unint64_t *)&v50->__shared_owners_;
          do
            v52 = __ldxr(v51);
          while (__stxr(v52 + 1, v51));
          do
            v53 = __ldaxr(v51);
          while (__stlxr(v53 - 1, v51));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v49 + 88))(v49, 0, "unknown location");
        v48 = *(const float **)(a1 + 40);
      }
      sub_239A18FFC((uint64_t)&v240);
      if (v15 >= 0x10 || v16 >= 0x10)
        v55 = 4;
      else
        v55 = 0;
      v252 = v55;
      sub_239A1903C(&v234);
      v239 = 4;
      *(_OWORD *)__p = 0u;
      v233 = 0u;
      v230 = 0u;
      *(_OWORD *)v231 = 0u;
      v56 = v15 * v16;
      v228 = 0u;
      *(_OWORD *)v229 = 0u;
      if ((_DWORD)v56)
      {
        sub_2394807B4((uint64_t)&v228, v15 * v16);
        v57 = (char *)v229[1];
        v58 = (uint64_t)(v230 - (unint64_t)v229[1]) >> 2;
        v59 = v56 >= v58;
        if (v56 > v58)
        {
          sub_2394807B4((uint64_t)&v229[1], v56 - v58);
          goto LABEL_162;
        }
      }
      else
      {
        v57 = 0;
        v59 = 1;
      }
      if (!v59)
        *(_QWORD *)&v230 = &v57[4 * v56];
LABEL_162:
      v109 = ((char *)v231[1] - (char *)v231[0]) >> 2;
      if (v56 <= v109)
      {
        if (v56 < v109)
          v231[1] = (char *)v231[0] + 4 * v56;
      }
      else
      {
        sub_2394807B4((uint64_t)v231, v56 - v109);
      }
      v110 = (float32x4_t *)__p[1];
      v111 = (uint64_t)(v233 - (unint64_t)__p[1]) >> 2;
      if (v56 <= v111)
      {
        if (v56 < v111)
          *(_QWORD *)&v233 = (char *)__p[1] + 4 * v56;
      }
      else
      {
        sub_2394807B4((uint64_t)&__p[1], v56 - v111);
        v110 = (float32x4_t *)__p[1];
      }
      if (!(_DWORD)v56)
        goto LABEL_175;
      v112 = v228;
      v113 = (char *)v229[1];
      v114 = (char *)v231[0];
      if (v56 < 0x14)
      {
        v115 = 0;
LABEL_173:
        v116 = v56 - v115;
        v117 = 4 * v115;
        v118 = &v110->i32[v115];
        v119 = &v114[4 * v115];
        v120 = &v113[4 * v115];
        v121 = &v48[4 * v115 + 2];
        v122 = (_DWORD *)(v112 + v117);
        do
        {
          *v122++ = *((_DWORD *)v121 - 2);
          *(float *)v120 = *(v121 - 1);
          v120 += 4;
          *(float *)v119 = *v121;
          v119 += 4;
          *v118++ = *((_DWORD *)v121 + 1);
          v121 += 4;
          --v116;
        }
        while (v116);
        goto LABEL_175;
      }
      v115 = 0;
      v153 = (float32x4_t *)(v228 + 4 * v56);
      v154 = (float32x4_t *)((char *)v229[1] + 4 * v56);
      v155 = (float32x4_t *)((char *)v231[0] + 4 * v56);
      v156 = &v110->f32[v56];
      v157 = (float32x4_t *)&v48[4 * v56];
      v159 = (unint64_t)v228 < (unint64_t)v155 && v231[0] < v153;
      v161 = (unint64_t)v228 < (unint64_t)v156 && v110 < v153;
      v163 = (unint64_t)v228 < (unint64_t)v157 && v48 < (const float *)v153;
      v165 = v229[1] < v155 && v231[0] < v154;
      v167 = v229[1] < v156 && v110 < v154;
      v169 = v229[1] < v157 && v48 < (const float *)v154;
      v171 = v231[0] < v156 && v110 < v155;
      v173 = v231[0] < v157 && v48 < (const float *)v155;
      v175 = v110 < v157 && v48 < v156;
      if (v229[1] < v153 && (unint64_t)v228 < (unint64_t)v154)
        goto LABEL_173;
      if (v159)
        goto LABEL_173;
      if (v161)
        goto LABEL_173;
      if (v163)
        goto LABEL_173;
      if (v165)
        goto LABEL_173;
      if (v167)
        goto LABEL_173;
      if (v169)
        goto LABEL_173;
      if (v171)
        goto LABEL_173;
      if (v173)
        goto LABEL_173;
      if (v175)
        goto LABEL_173;
      v115 = v56 & 0xFFFFFFFC;
      v177 = v115;
      v178 = v110;
      v179 = (float32x4_t *)v231[0];
      v180 = (float32x4_t *)v229[1];
      v181 = (float32x4_t *)v228;
      v182 = v48;
      do
      {
        v256 = vld4q_f32(v182);
        v182 += 16;
        *v181++ = v256.val[0];
        *v180++ = v256.val[1];
        *v179++ = v256.val[2];
        *v178++ = v256.val[3];
        v177 -= 4;
      }
      while (v177);
      if (v115 != v56)
        goto LABEL_173;
LABEL_175:
      v226 = 0u;
      v227 = 0u;
      if ((float32x4_t *)v233 == v110
        || (*(_QWORD *)&v226 = v110, v231[1] == v231[0])
        || (*((void **)&v226 + 1) = v231[0], (void *)v230 == v229[1])
        || (*(void **)&v227 = v229[1], *((_QWORD *)&v228 + 1) == (_QWORD)v228))
      {
        sub_23941D884();
      }
      *((_QWORD *)&v227 + 1) = v228;
      v236 = &v226;
      v237 = v16;
      v238 = v15;
      v251 = 4;
      v123 = (char *)malloc_type_malloc(0x440uLL, 0x1000040881B329AuLL);
      v249 = v123;
      v124 = strncpy(v123, "A", 0xFFuLL);
      v124[1] = 0;
      strncpy(v124 + 272, "B", 0xFFuLL);
      v123[273] = 0;
      strncpy(v123 + 544, "G", 0xFFuLL);
      v123[545] = 0;
      strncpy(v123 + 816, "R", 0xFFuLL);
      v123[817] = 0;
      v250 = malloc_type_malloc(0x10uLL, 0x100004052888210uLL);
      v125 = (char *)malloc_type_malloc(0x10uLL, 0x100004052888210uLL);
      v253 = v125;
      if (v251 >= 1)
      {
        v126 = 0;
        v127 = (char *)v250;
        do
        {
          v128 = 4 * v126;
          *(_DWORD *)&v127[v128] = 2;
          *(_DWORD *)&v125[v128] = 2;
          ++v126;
        }
        while (v126 < v251);
      }
      v222 = 0;
      v223 = 0;
      if (sub_239A19050((int32x2_t *)&v234, &v240, &v222, &v223))
      {
        std::ostream::write();
        free(v222);
        free(v249);
        free(v250);
        free(v253);
        *(_BYTE *)(a3 + 120) = 1;
        goto LABEL_184;
      }
      if (v223)
        sub_239A1BB94(v223);
      free(v249);
      free(v250);
      free(v253);
      sub_239618F08(v202, "failed to save 32 bit exr");
      v210 = 1;
      sub_239616578(5u, (__int128 *)v202, (uint64_t)&v211);
      *(_OWORD *)a3 = v211;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (!v221)
      {
        *(_BYTE *)(a3 + 120) = 0;
        goto LABEL_388;
      }
      *(_BYTE *)(a3 + 40) = 0;
      if (v214)
      {
        *(_OWORD *)(a3 + 16) = v212;
        *(_QWORD *)(a3 + 32) = v213;
        v213 = 0;
        v212 = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if (v220)
      {
        v132 = v217;
        *(_QWORD *)(a3 + 64) = v216;
        *(_OWORD *)(a3 + 48) = v215;
        v215 = 0uLL;
        *(_QWORD *)(a3 + 72) = v132;
        *(_OWORD *)(a3 + 80) = v218;
        *(_QWORD *)(a3 + 96) = v219;
        v219 = 0;
        v216 = 0;
        v218 = 0uLL;
        *(_BYTE *)(a3 + 104) = 1;
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (SHIBYTE(v219) < 0)
        {
          operator delete((void *)v218);
          if ((SHIBYTE(v216) & 0x80000000) == 0)
          {
LABEL_221:
            if (!v214)
              goto LABEL_388;
            goto LABEL_386;
          }
        }
        else if ((SHIBYTE(v216) & 0x80000000) == 0)
        {
          goto LABEL_221;
        }
        operator delete((void *)v215);
        if (!v214)
          goto LABEL_388;
      }
      else
      {
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (!v214)
          goto LABEL_388;
      }
LABEL_386:
      if (SHIBYTE(v213) < 0)
        operator delete((void *)v212);
LABEL_388:
      if (v210)
      {
        if (v209)
        {
          if (v208 < 0)
            operator delete(v207);
          if (v206 < 0)
            operator delete(v205);
        }
        if (v204 && v203 < 0)
          operator delete(v202[0]);
      }
LABEL_184:
      v129 = __p[1];
      if (__p[1])
      {
        *(void **)&v233 = __p[1];
LABEL_186:
        operator delete(v129);
      }
LABEL_187:
      if (v231[0])
      {
        v231[1] = v231[0];
        operator delete(v231[0]);
      }
      if (v229[1])
      {
        *(void **)&v230 = v229[1];
        operator delete(v229[1]);
      }
      v87 = (void *)v228;
      if (!(_QWORD)v228)
        goto LABEL_346;
      *((_QWORD *)&v228 + 1) = v228;
      goto LABEL_345;
    default:
      sub_239734C80(v17, 7, (uint64_t)&v240);
      *(_OWORD *)a3 = v240;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (!(_BYTE)v250)
      {
        *(_BYTE *)(a3 + 120) = 0;
        goto LABEL_346;
      }
      *(_BYTE *)(a3 + 40) = 0;
      if (v243)
      {
        *(_OWORD *)(a3 + 16) = v241;
        *(_QWORD *)(a3 + 32) = v242;
        v242 = 0;
        v241 = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if ((_BYTE)v249)
      {
        v60 = v246;
        *(_QWORD *)(a3 + 64) = v245;
        *(_OWORD *)(a3 + 48) = *(_OWORD *)v244;
        v244[0] = 0;
        v244[1] = 0;
        *(_QWORD *)(a3 + 72) = v60;
        *(_OWORD *)(a3 + 80) = *(_OWORD *)v247;
        *(_QWORD *)(a3 + 96) = v248;
        v248 = 0;
        v247[1] = 0;
        v245 = 0;
        v247[0] = 0;
        *(_BYTE *)(a3 + 104) = 1;
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (SHIBYTE(v248) < 0)
        {
          operator delete(v247[0]);
          if ((SHIBYTE(v245) & 0x80000000) == 0)
          {
LABEL_87:
            if (!v243)
              goto LABEL_346;
            goto LABEL_343;
          }
        }
        else if ((SHIBYTE(v245) & 0x80000000) == 0)
        {
          goto LABEL_87;
        }
        operator delete(v244[0]);
        if (!v243)
          goto LABEL_346;
      }
      else
      {
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (!v243)
          goto LABEL_346;
      }
LABEL_343:
      if (SHIBYTE(v242) < 0)
      {
        v87 = (void *)v241;
LABEL_345:
        operator delete(v87);
      }
LABEL_346:
      result = v225;
      v225 = 0;
      if (result)
        return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
      return result;
  }
}

void sub_23972449C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a66;
  void *a71;
  uint64_t a72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  uint64_t v77;

  sub_239523188((uint64_t)&a35);
  v73 = (void *)STACK[0x238];
  if (STACK[0x238])
  {
    STACK[0x240] = (unint64_t)v73;
    operator delete(v73);
    v74 = (void *)STACK[0x220];
    if (!STACK[0x220])
    {
LABEL_3:
      v75 = (void *)STACK[0x208];
      if (!STACK[0x208])
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v74 = (void *)STACK[0x220];
    if (!STACK[0x220])
      goto LABEL_3;
  }
  STACK[0x228] = (unint64_t)v74;
  operator delete(v74);
  v75 = (void *)STACK[0x208];
  if (!STACK[0x208])
  {
LABEL_4:
    v76 = a71;
    if (!a71)
      goto LABEL_10;
LABEL_9:
    a72 = (uint64_t)v76;
    operator delete(v76);
LABEL_10:
    v77 = a66;
    a66 = 0;
    if (!v77)
      _Unwind_Resume(a1);
    (*(void (**)(uint64_t))(*(_QWORD *)v77 + 8))(v77);
    _Unwind_Resume(a1);
  }
LABEL_8:
  STACK[0x210] = (unint64_t)v75;
  operator delete(v75);
  v76 = a71;
  if (!a71)
    goto LABEL_10;
  goto LABEL_9;
}

uint64_t sub_23972465C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  const float *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  BOOL v47;
  const float *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t i;
  _BOOL8 v75;
  uint64_t v76;
  uint64_t v78;
  __n128 v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  __n128 v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  void *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  float32x4_t *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int32 *v101;
  _DWORD *v102;
  const float *v103;
  _DWORD *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  float32x4_t *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int32 *v122;
  _DWORD *v123;
  _DWORD *v124;
  const float *v125;
  _DWORD *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  BOOL v140;
  BOOL v142;
  BOOL v144;
  BOOL v146;
  BOOL v148;
  uint64_t v150;
  float32x4_t *v151;
  float32x4_t *v152;
  float32x4_t *v153;
  const float *v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  BOOL v161;
  BOOL v163;
  BOOL v165;
  BOOL v167;
  BOOL v169;
  BOOL v171;
  BOOL v173;
  BOOL v175;
  BOOL v177;
  uint64_t v179;
  float32x4_t *v180;
  float32x4_t *v181;
  float32x4_t *v182;
  float32x4_t *v183;
  const float *v184;
  void *v185;
  uint64_t result;
  void *v187[2];
  char v188;
  char v189;
  void *v190;
  char v191;
  void *v192;
  char v193;
  char v194;
  char v195;
  __int128 v196;
  char v197;
  char v198;
  void *v199;
  char v200;
  void *v201;
  char v202;
  char v203;
  char v204;
  void *v205[2];
  char v206;
  char v207;
  void *v208;
  char v209;
  void *v210;
  char v211;
  char v212;
  char v213;
  __int128 v214;
  __int128 v215;
  uint64_t v216;
  char v217;
  __int128 v218;
  uint64_t v219;
  uint64_t v220;
  __int128 v221;
  uint64_t v222;
  char v223;
  char v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  uint64_t v237;
  __int128 *v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  __int128 v242;
  __int128 v243;
  uint64_t v244;
  char v245;
  __int128 v246;
  uint64_t v247;
  uint64_t v248;
  __int128 __p;
  uint64_t v250;
  void *v251;
  void *v252;
  int v253;
  int v254;
  void *v255;
  uint64_t v256;
  float32x4x3_t v257;
  float32x4x4_t v258;

  v256 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (v10)
    {
      v6 = *(_QWORD *)(a1 + 8);
      v11 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v11)
        goto LABEL_14;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
      v6 = *(_QWORD *)(a1 + 8);
      v11 = *(std::__shared_weak_count **)(a1 + 16);
      if (!v11)
        goto LABEL_14;
    }
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      if (*(_BYTE *)(a1 + 53))
        goto LABEL_15;
LABEL_17:
      v227 = 0;
      goto LABEL_18;
    }
  }
LABEL_14:
  if (!*(_BYTE *)(a1 + 53))
    goto LABEL_17;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v227, v6, 0);
LABEL_18:
  v16 = *(_DWORD *)(a1 + 24);
  v15 = *(_DWORD *)(a1 + 28);
  v226 = *(_QWORD *)(a1 + 24);
  v17 = *(_DWORD *)(a1 + 48);
  switch(v17)
  {
    case 4u:
      v18 = *(_QWORD *)(a1 + 40);
      if (*(_BYTE *)(a1 + 52) && v18)
      {
        v19 = *(_QWORD *)(a1 + 8);
        v20 = *(std::__shared_weak_count **)(a1 + 16);
        if (v20)
        {
          v21 = (unint64_t *)&v20->__shared_owners_;
          do
            v22 = __ldxr(v21);
          while (__stxr(v22 + 1, v21));
          do
            v23 = __ldaxr(v21);
          while (__stlxr(v23 - 1, v21));
          if (!v23)
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v19 + 88))(v19, 0, "unknown location");
        v18 = *(_QWORD *)(a1 + 40);
      }
      sub_239A18FFC((uint64_t)&v242);
      if (v15 >= 0x10 || v16 >= 0x10)
        v25 = 3;
      else
        v25 = 0;
      v254 = v25;
      sub_239A1903C(&v230);
      DWORD2(v232) = 1;
      v236 = 0uLL;
      v237 = 0;
      v26 = v15 * v16;
      if ((_DWORD)v26)
      {
        sub_2394807B4((uint64_t)&v236, v15 * v16);
        v27 = 0;
        v28 = v236;
        if (v26 < 8)
          goto LABEL_405;
        if ((unint64_t)(v236 - v18) < 0x20)
          goto LABEL_405;
        v29 = 0;
        v27 = v26 & 0xFFFFFFF8;
        v30 = v27;
        do
        {
          v31 = *(_OWORD *)(v18 + v29 + 16);
          v32 = (_OWORD *)(v28 + v29);
          *v32 = *(_OWORD *)(v18 + v29);
          v32[1] = v31;
          v29 += 32;
          v30 -= 8;
        }
        while (v30);
        if (v27 != v26)
        {
LABEL_405:
          do
          {
            *(_DWORD *)(v28 + 4 * v27) = *(_DWORD *)(v18 + 4 * v27);
            ++v27;
          }
          while (v26 != v27);
        }
      }
      else
      {
        v28 = 0;
      }
      *(_QWORD *)&v228 = 0;
      if (*((_QWORD *)&v236 + 1) == v28)
        sub_23941D884();
      *(_QWORD *)&v228 = v28;
      *((_QWORD *)&v231 + 1) = &v228;
      *(_QWORD *)&v232 = __PAIR64__(v15, v16);
      v253 = 1;
      v251 = malloc_type_malloc(0x110uLL, 0x1000040881B329AuLL);
      strncpy((char *)v251, "R", 0xFFuLL);
      *((_BYTE *)v251 + 1) = 0;
      v252 = malloc_type_malloc(4uLL, 0x100004052888210uLL);
      v88 = (char *)malloc_type_malloc(4uLL, 0x100004052888210uLL);
      v255 = v88;
      if (v253 >= 1)
      {
        v89 = 0;
        v90 = (char *)v252;
        do
        {
          v91 = 4 * v89;
          *(_DWORD *)&v90[v91] = 2;
          *(_DWORD *)&v88[v91] = 2;
          ++v89;
        }
        while (v89 < v253);
      }
      v225 = 0;
      if (*(char *)(a2 + 23) >= 0)
        v92 = (char *)a2;
      else
        v92 = *(char **)a2;
      if (!sub_239A1B880((int32x2_t *)&v230, (std::string::size_type)&v242, v92, &v225))
      {
        free(v251);
        free(v252);
        free(v255);
        *(_BYTE *)(a3 + 120) = 1;
        goto LABEL_359;
      }
      sub_239A1BB94(v225);
      free(v251);
      free(v252);
      free(v255);
      sub_239618F08(v187, "failed to save 32 bit exr");
      v195 = 1;
      sub_239616578(5u, (__int128 *)v187, (uint64_t)&v214);
      *(_OWORD *)a3 = v214;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (!v224)
      {
        *(_BYTE *)(a3 + 120) = 0;
        goto LABEL_350;
      }
      *(_BYTE *)(a3 + 40) = 0;
      if (v217)
      {
        *(_OWORD *)(a3 + 16) = v215;
        *(_QWORD *)(a3 + 32) = v216;
        v216 = 0;
        v215 = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if (v223)
      {
        v93 = v220;
        *(_QWORD *)(a3 + 64) = v219;
        *(_OWORD *)(a3 + 48) = v218;
        v218 = 0uLL;
        *(_QWORD *)(a3 + 72) = v93;
        *(_OWORD *)(a3 + 80) = v221;
        *(_QWORD *)(a3 + 96) = v222;
        v222 = 0;
        v219 = 0;
        v221 = 0uLL;
        *(_BYTE *)(a3 + 104) = 1;
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (SHIBYTE(v222) < 0)
        {
          operator delete((void *)v221);
          if ((SHIBYTE(v219) & 0x80000000) == 0)
          {
LABEL_145:
            if (!v217)
              goto LABEL_350;
            goto LABEL_348;
          }
        }
        else if ((SHIBYTE(v219) & 0x80000000) == 0)
        {
          goto LABEL_145;
        }
        operator delete((void *)v218);
        if (!v217)
          goto LABEL_350;
      }
      else
      {
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (!v217)
          goto LABEL_350;
      }
LABEL_348:
      if (SHIBYTE(v216) < 0)
        operator delete((void *)v215);
LABEL_350:
      if (v195)
      {
        if (v194)
        {
          if (v193 < 0)
            operator delete(v192);
          if (v191 < 0)
            operator delete(v190);
        }
        if (v189 && v188 < 0)
          operator delete(v187[0]);
      }
LABEL_359:
      v87 = (void *)v236;
      if ((_QWORD)v236)
      {
        *((_QWORD *)&v236 + 1) = v236;
        goto LABEL_396;
      }
      goto LABEL_397;
    case 0x18u:
      v36 = *(const float **)(a1 + 40);
      if (*(_BYTE *)(a1 + 52) && v36)
      {
        v37 = *(_QWORD *)(a1 + 8);
        v38 = *(std::__shared_weak_count **)(a1 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v37 + 88))(v37, 0, "unknown location");
        v36 = *(const float **)(a1 + 40);
      }
      sub_239A18FFC((uint64_t)&v242);
      if (v15 >= 0x10 || v16 >= 0x10)
        v43 = 4;
      else
        v43 = 0;
      v254 = v43;
      sub_239A1903C(&v236);
      v241 = 3;
      *(_QWORD *)&v234 = 0;
      v232 = 0u;
      v233 = 0u;
      v230 = 0u;
      v231 = 0u;
      v44 = v15 * v16;
      if ((_DWORD)v44)
      {
        sub_2394807B4((uint64_t)&v230, v15 * v16);
        v45 = *((_QWORD *)&v231 + 1);
        v46 = (uint64_t)(v232 - *((_QWORD *)&v231 + 1)) >> 2;
        v47 = v44 >= v46;
        if (v44 > v46)
        {
          sub_2394807B4((uint64_t)&v231 + 8, v44 - v46);
          goto LABEL_150;
        }
      }
      else
      {
        v45 = 0;
        v47 = 1;
      }
      if (!v47)
        *(_QWORD *)&v232 = v45 + 4 * v44;
LABEL_150:
      v94 = (float32x4_t *)v233;
      v95 = (uint64_t)(*((_QWORD *)&v233 + 1) - v233) >> 2;
      if (v44 <= v95)
      {
        if (v44 < v95)
          *((_QWORD *)&v233 + 1) = v233 + 4 * v44;
      }
      else
      {
        sub_2394807B4((uint64_t)&v233, v44 - v95);
        v94 = (float32x4_t *)v233;
      }
      if ((_DWORD)v44)
      {
        v96 = v230;
        v97 = *((_QWORD *)&v231 + 1);
        if (v44 < 0x10)
        {
          v98 = 0;
LABEL_157:
          v99 = v44 - v98;
          v100 = 4 * v98;
          v101 = &v94->i32[v98];
          v102 = (_DWORD *)(v97 + 4 * v98);
          v103 = &v36[3 * v98 + 1];
          v104 = (_DWORD *)(v96 + v100);
          do
          {
            *v104++ = *((_DWORD *)v103 - 1);
            *v102++ = *(_DWORD *)v103;
            *v101++ = *((_DWORD *)v103 + 1);
            v103 += 3;
            --v99;
          }
          while (v99);
          goto LABEL_159;
        }
        v98 = 0;
        v135 = v230 + 4 * v44;
        v136 = *((_QWORD *)&v231 + 1) + 4 * v44;
        v137 = (unint64_t)v94->u64 + 4 * v44;
        v138 = (unint64_t)&v36[3 * v44];
        v140 = (unint64_t)v230 < v137 && (unint64_t)v94 < v135;
        v142 = (unint64_t)v230 < v138 && (unint64_t)v36 < v135;
        v144 = *((_QWORD *)&v231 + 1) < v137 && (unint64_t)v94 < v136;
        v146 = *((_QWORD *)&v231 + 1) < v138 && (unint64_t)v36 < v136;
        v148 = (unint64_t)v94 < v138 && (unint64_t)v36 < v137;
        if (*((_QWORD *)&v231 + 1) < v135 && (unint64_t)v230 < v136)
          goto LABEL_157;
        if (v140)
          goto LABEL_157;
        if (v142)
          goto LABEL_157;
        if (v144)
          goto LABEL_157;
        if (v146)
          goto LABEL_157;
        if (v148)
          goto LABEL_157;
        v98 = v44 & 0xFFFFFFFC;
        v150 = v98;
        v151 = v94;
        v152 = (float32x4_t *)*((_QWORD *)&v231 + 1);
        v153 = (float32x4_t *)v230;
        v154 = v36;
        do
        {
          v257 = vld3q_f32(v154);
          v154 += 12;
          *v153++ = v257.val[0];
          *v152++ = v257.val[1];
          *v151++ = v257.val[2];
          v150 -= 4;
        }
        while (v150);
        if (v98 != v44)
          goto LABEL_157;
      }
LABEL_159:
      v228 = 0uLL;
      *(_QWORD *)&v229 = 0;
      if (*((float32x4_t **)&v233 + 1) == v94
        || (*(_QWORD *)&v228 = v94, (_QWORD)v232 == *((_QWORD *)&v231 + 1))
        || (*((_QWORD *)&v228 + 1) = *((_QWORD *)&v231 + 1), *((_QWORD *)&v230 + 1) == (_QWORD)v230))
      {
        sub_23941D884();
      }
      *(_QWORD *)&v229 = v230;
      v238 = &v228;
      v239 = v16;
      v240 = v15;
      v253 = 3;
      v105 = (char *)malloc_type_malloc(0x330uLL, 0x1000040881B329AuLL);
      v251 = v105;
      v106 = strncpy(v105, "B", 0xFFuLL);
      v106[1] = 0;
      strncpy(v106 + 272, "G", 0xFFuLL);
      v105[273] = 0;
      strncpy(v105 + 544, "R", 0xFFuLL);
      v105[545] = 0;
      v252 = malloc_type_malloc(0xCuLL, 0x100004052888210uLL);
      v107 = (char *)malloc_type_malloc(0xCuLL, 0x100004052888210uLL);
      v255 = v107;
      if (v253 >= 1)
      {
        v108 = 0;
        v109 = (char *)v252;
        do
        {
          v110 = 4 * v108;
          *(_DWORD *)&v109[v110] = 2;
          *(_DWORD *)&v107[v110] = 2;
          ++v108;
        }
        while (v108 < v253);
      }
      v225 = 0;
      if (*(char *)(a2 + 23) >= 0)
        v111 = (char *)a2;
      else
        v111 = *(char **)a2;
      if (!sub_239A1B880((int32x2_t *)&v236, (std::string::size_type)&v242, v111, &v225))
      {
        free(v251);
        free(v252);
        free(v255);
        *(_BYTE *)(a3 + 120) = 1;
        goto LABEL_390;
      }
      sub_239A1BB94(v225);
      free(v251);
      free(v252);
      free(v255);
      sub_239618F08(&v196, "failed to save 32 bit exr");
      v204 = 1;
      sub_239616578(5u, &v196, (uint64_t)&v214);
      *(_OWORD *)a3 = v214;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (!v224)
      {
        *(_BYTE *)(a3 + 120) = 0;
        goto LABEL_365;
      }
      *(_BYTE *)(a3 + 40) = 0;
      if (v217)
      {
        *(_OWORD *)(a3 + 16) = v215;
        *(_QWORD *)(a3 + 32) = v216;
        v216 = 0;
        v215 = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if (!v223)
      {
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (!v217)
          goto LABEL_365;
LABEL_363:
        if (SHIBYTE(v216) < 0)
          operator delete((void *)v215);
LABEL_365:
        if (v204)
        {
          if (v203)
          {
            if (v202 < 0)
              operator delete(v201);
            if (v200 < 0)
              operator delete(v199);
          }
          if (v198 && v197 < 0)
          {
            v185 = (void *)v196;
            goto LABEL_389;
          }
        }
        goto LABEL_390;
      }
      v112 = v220;
      *(_QWORD *)(a3 + 64) = v219;
      *(_OWORD *)(a3 + 48) = v218;
      v218 = 0uLL;
      *(_QWORD *)(a3 + 72) = v112;
      *(_OWORD *)(a3 + 80) = v221;
      *(_QWORD *)(a3 + 96) = v222;
      v222 = 0;
      v219 = 0;
      v221 = 0uLL;
      *(_BYTE *)(a3 + 104) = 1;
      *(_BYTE *)(a3 + 112) = 1;
      *(_BYTE *)(a3 + 120) = 0;
      if (SHIBYTE(v222) < 0)
      {
        operator delete((void *)v221);
        if ((SHIBYTE(v219) & 0x80000000) == 0)
        {
LABEL_175:
          if (!v217)
            goto LABEL_365;
          goto LABEL_363;
        }
      }
      else if ((SHIBYTE(v219) & 0x80000000) == 0)
      {
        goto LABEL_175;
      }
      operator delete((void *)v218);
      if (!v217)
        goto LABEL_365;
      goto LABEL_363;
    case 0x1Fu:
      v33 = 4 * v15 * v16;
      if ((_DWORD)v33)
      {
        v34 = operator new(2 * v33);
        bzero(v34, 2 * v33);
        v35 = *(_QWORD *)(a1 + 40);
        if (!*(_BYTE *)(a1 + 52))
          goto LABEL_98;
      }
      else
      {
        v34 = 0;
        v35 = *(_QWORD *)(a1 + 40);
        if (!*(_BYTE *)(a1 + 52))
          goto LABEL_98;
      }
      if (v35)
      {
        v61 = *(_QWORD *)(a1 + 8);
        v62 = *(std::__shared_weak_count **)(a1 + 16);
        if (v62)
        {
          v63 = (unint64_t *)&v62->__shared_owners_;
          do
            v64 = __ldxr(v63);
          while (__stxr(v64 + 1, v63));
          do
            v65 = __ldaxr(v63);
          while (__stlxr(v65 - 1, v63));
          if (!v65)
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v62);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v61 + 88))(v61, 0, "unknown location");
        v35 = *(_QWORD *)(a1 + 40);
      }
LABEL_98:
      if (!(_DWORD)v33)
        goto LABEL_109;
      for (i = 0; i != v33; ++i)
      {
        while (1)
        {
          while (1)
          {
            while ((~(_BYTE)i & 3) == 0)
            {
              *((_WORD *)v34 + i) = *(_WORD *)(v35 + 2 * i);
              if (v33 == ++i)
                goto LABEL_109;
            }
            _H1 = *(_WORD *)(v35 + 2 * i);
            __asm { FCVT            D0, H1 }
            if (_D0 <= 0.0031308)
              break;
            _S0 = pow(_D0, 0.416666667) * 1.055 + -0.055;
            __asm { FCVT            H0, S0 }
            *((_WORD *)v34 + i++) = LOWORD(_S0);
            if (v33 == i)
              goto LABEL_109;
          }
          if (_D0 >= -0.0031308)
            break;
          __asm { FCVT            S0, H1 }
          _S0 = pow((float)-_S0, 0.416666667) * -1.055 + 0.055;
          __asm { FCVT            H0, S0 }
          *((_WORD *)v34 + i++) = LOWORD(_S0);
          if (v33 == i)
            goto LABEL_109;
        }
        _S0 = _D0 * 12.92;
        __asm { FCVT            H0, S0 }
        *((_WORD *)v34 + i) = LOWORD(_S0);
      }
LABEL_109:
      v75 = (_DWORD)v226 != 0;
      if (HIDWORD(v226))
        v76 = 4 * v75 * (_DWORD)v226;
      else
        v76 = 0;
      if (HIDWORD(v226))
        _ZF = (_DWORD)v226 == 0;
      else
        _ZF = 1;
      *(_QWORD *)&v214 = v34;
      *(_QWORD *)&v242 = &off_250AE3E30;
      v78 = v76 << 32;
      if (_ZF)
        v78 = 0;
      *(_QWORD *)&v230 = v78 | (4 * v75);
      sub_239725E08((uint64_t *)&v214, &v226, &v230, (uint64_t)&v242 + 8);
      *(_QWORD *)&v214 = &off_250ADB210;
      sub_23970BF74((uint64_t)&v242, (uint64_t)&v214 + 8);
      sub_23971FF94((uint64_t)&v214, a2, 7, a3);
      v79 = nullsub_4((char *)&v215 + 8);
      v80 = (std::__shared_weak_count *)v215;
      if ((_QWORD)v215)
      {
        v81 = (unint64_t *)(v215 + 8);
        do
          v82 = __ldaxr(v81);
        while (__stlxr(v82 - 1, v81));
        if (!v82)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v80->__on_zero_shared)(v80, v79);
          std::__shared_weak_count::__release_weak(v80);
        }
      }
      v83 = nullsub_4(&v214);
      v84 = (std::__shared_weak_count *)v243;
      if ((_QWORD)v243)
      {
        v85 = (unint64_t *)(v243 + 8);
        do
          v86 = __ldaxr(v85);
        while (__stlxr(v86 - 1, v85));
        if (!v86)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v84->__on_zero_shared)(v84, v83);
          std::__shared_weak_count::__release_weak(v84);
        }
      }
      nullsub_4(&v242);
      if (!v34)
        goto LABEL_397;
      v87 = v34;
      goto LABEL_396;
    case 0x20u:
      v48 = *(const float **)(a1 + 40);
      if (*(_BYTE *)(a1 + 52) && v48)
      {
        v49 = *(_QWORD *)(a1 + 8);
        v50 = *(std::__shared_weak_count **)(a1 + 16);
        if (v50)
        {
          v51 = (unint64_t *)&v50->__shared_owners_;
          do
            v52 = __ldxr(v51);
          while (__stxr(v52 + 1, v51));
          do
            v53 = __ldaxr(v51);
          while (__stlxr(v53 - 1, v51));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v49 + 88))(v49, 0, "unknown location");
        v48 = *(const float **)(a1 + 40);
      }
      sub_239A18FFC((uint64_t)&v242);
      if (v15 >= 0x10 || v16 >= 0x10)
        v55 = 4;
      else
        v55 = 0;
      v254 = v55;
      sub_239A1903C(&v236);
      v241 = 4;
      v234 = 0u;
      v235 = 0u;
      v232 = 0u;
      v233 = 0u;
      v56 = v15 * v16;
      v230 = 0u;
      v231 = 0u;
      if ((_DWORD)v56)
      {
        sub_2394807B4((uint64_t)&v230, v15 * v16);
        v57 = *((_QWORD *)&v231 + 1);
        v58 = (uint64_t)(v232 - *((_QWORD *)&v231 + 1)) >> 2;
        v59 = v56 >= v58;
        if (v56 > v58)
        {
          sub_2394807B4((uint64_t)&v231 + 8, v56 - v58);
          goto LABEL_180;
        }
      }
      else
      {
        v57 = 0;
        v59 = 1;
      }
      if (!v59)
        *(_QWORD *)&v232 = v57 + 4 * v56;
LABEL_180:
      v113 = (uint64_t)(*((_QWORD *)&v233 + 1) - v233) >> 2;
      if (v56 <= v113)
      {
        if (v56 < v113)
          *((_QWORD *)&v233 + 1) = v233 + 4 * v56;
      }
      else
      {
        sub_2394807B4((uint64_t)&v233, v56 - v113);
      }
      v114 = (float32x4_t *)*((_QWORD *)&v234 + 1);
      v115 = (uint64_t)(v235 - *((_QWORD *)&v234 + 1)) >> 2;
      if (v56 <= v115)
      {
        if (v56 < v115)
          *(_QWORD *)&v235 = *((_QWORD *)&v234 + 1) + 4 * v56;
      }
      else
      {
        sub_2394807B4((uint64_t)&v234 + 8, v56 - v115);
        v114 = (float32x4_t *)*((_QWORD *)&v234 + 1);
      }
      if (!(_DWORD)v56)
        goto LABEL_193;
      v116 = v230;
      v117 = *((_QWORD *)&v231 + 1);
      v118 = v233;
      if (v56 < 0x14)
      {
        v119 = 0;
LABEL_191:
        v120 = v56 - v119;
        v121 = 4 * v119;
        v122 = &v114->i32[v119];
        v123 = (_DWORD *)(v118 + 4 * v119);
        v124 = (_DWORD *)(v117 + 4 * v119);
        v125 = &v48[4 * v119 + 2];
        v126 = (_DWORD *)(v116 + v121);
        do
        {
          *v126++ = *((_DWORD *)v125 - 2);
          *v124++ = *((_DWORD *)v125 - 1);
          *v123++ = *(_DWORD *)v125;
          *v122++ = *((_DWORD *)v125 + 1);
          v125 += 4;
          --v120;
        }
        while (v120);
        goto LABEL_193;
      }
      v119 = 0;
      v155 = v230 + 4 * v56;
      v156 = *((_QWORD *)&v231 + 1) + 4 * v56;
      v157 = v233 + 4 * v56;
      v158 = (unint64_t)v114->u64 + 4 * v56;
      v159 = (unint64_t)&v48[4 * v56];
      v161 = (unint64_t)v230 < v157 && (unint64_t)v233 < v155;
      v163 = (unint64_t)v230 < v158 && (unint64_t)v114 < v155;
      v165 = (unint64_t)v230 < v159 && (unint64_t)v48 < v155;
      v167 = *((_QWORD *)&v231 + 1) < v157 && (unint64_t)v233 < v156;
      v169 = *((_QWORD *)&v231 + 1) < v158 && (unint64_t)v114 < v156;
      v171 = *((_QWORD *)&v231 + 1) < v159 && (unint64_t)v48 < v156;
      v173 = (unint64_t)v233 < v158 && (unint64_t)v114 < v157;
      v175 = (unint64_t)v233 < v159 && (unint64_t)v48 < v157;
      v177 = (unint64_t)v114 < v159 && (unint64_t)v48 < v158;
      if (*((_QWORD *)&v231 + 1) < v155 && (unint64_t)v230 < v156)
        goto LABEL_191;
      if (v161)
        goto LABEL_191;
      if (v163)
        goto LABEL_191;
      if (v165)
        goto LABEL_191;
      if (v167)
        goto LABEL_191;
      if (v169)
        goto LABEL_191;
      if (v171)
        goto LABEL_191;
      if (v173)
        goto LABEL_191;
      if (v175)
        goto LABEL_191;
      if (v177)
        goto LABEL_191;
      v119 = v56 & 0xFFFFFFFC;
      v179 = v119;
      v180 = v114;
      v181 = (float32x4_t *)v233;
      v182 = (float32x4_t *)*((_QWORD *)&v231 + 1);
      v183 = (float32x4_t *)v230;
      v184 = v48;
      do
      {
        v258 = vld4q_f32(v184);
        v184 += 16;
        *v183++ = v258.val[0];
        *v182++ = v258.val[1];
        *v181++ = v258.val[2];
        *v180++ = v258.val[3];
        v179 -= 4;
      }
      while (v179);
      if (v119 != v56)
        goto LABEL_191;
LABEL_193:
      v228 = 0u;
      v229 = 0u;
      if ((float32x4_t *)v235 == v114
        || (*(_QWORD *)&v228 = v114, *((_QWORD *)&v233 + 1) == (_QWORD)v233)
        || (*((_QWORD *)&v228 + 1) = v233, (_QWORD)v232 == *((_QWORD *)&v231 + 1))
        || (*(_QWORD *)&v229 = *((_QWORD *)&v231 + 1), *((_QWORD *)&v230 + 1) == (_QWORD)v230))
      {
        sub_23941D884();
      }
      *((_QWORD *)&v229 + 1) = v230;
      v238 = &v228;
      v239 = v16;
      v240 = v15;
      v253 = 4;
      v127 = (char *)malloc_type_malloc(0x440uLL, 0x1000040881B329AuLL);
      v251 = v127;
      v128 = strncpy(v127, "A", 0xFFuLL);
      v128[1] = 0;
      strncpy(v128 + 272, "B", 0xFFuLL);
      v127[273] = 0;
      strncpy(v127 + 544, "G", 0xFFuLL);
      v127[545] = 0;
      strncpy(v127 + 816, "R", 0xFFuLL);
      v127[817] = 0;
      v252 = malloc_type_malloc(0x10uLL, 0x100004052888210uLL);
      v129 = (char *)malloc_type_malloc(0x10uLL, 0x100004052888210uLL);
      v255 = v129;
      if (v253 >= 1)
      {
        v130 = 0;
        v131 = (char *)v252;
        do
        {
          v132 = 4 * v130;
          *(_DWORD *)&v131[v132] = 2;
          *(_DWORD *)&v129[v132] = 2;
          ++v130;
        }
        while (v130 < v253);
      }
      v225 = 0;
      if (*(char *)(a2 + 23) >= 0)
        v133 = (char *)a2;
      else
        v133 = *(char **)a2;
      if (!sub_239A1B880((int32x2_t *)&v236, (std::string::size_type)&v242, v133, &v225))
      {
        free(v251);
        free(v252);
        free(v255);
        *(_BYTE *)(a3 + 120) = 1;
        goto LABEL_387;
      }
      sub_239A1BB94(v225);
      free(v251);
      free(v252);
      free(v255);
      sub_239618F08(v205, "failed to save 32 bit exr");
      v213 = 1;
      sub_239616578(5u, (__int128 *)v205, (uint64_t)&v214);
      *(_OWORD *)a3 = v214;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (!v224)
      {
        *(_BYTE *)(a3 + 120) = 0;
        goto LABEL_378;
      }
      *(_BYTE *)(a3 + 40) = 0;
      if (v217)
      {
        *(_OWORD *)(a3 + 16) = v215;
        *(_QWORD *)(a3 + 32) = v216;
        v216 = 0;
        v215 = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if (v223)
      {
        v134 = v220;
        *(_QWORD *)(a3 + 64) = v219;
        *(_OWORD *)(a3 + 48) = v218;
        v218 = 0uLL;
        *(_QWORD *)(a3 + 72) = v134;
        *(_OWORD *)(a3 + 80) = v221;
        *(_QWORD *)(a3 + 96) = v222;
        v222 = 0;
        v219 = 0;
        v221 = 0uLL;
        *(_BYTE *)(a3 + 104) = 1;
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (SHIBYTE(v222) < 0)
        {
          operator delete((void *)v221);
          if ((SHIBYTE(v219) & 0x80000000) == 0)
          {
LABEL_210:
            if (!v217)
              goto LABEL_378;
            goto LABEL_376;
          }
        }
        else if ((SHIBYTE(v219) & 0x80000000) == 0)
        {
          goto LABEL_210;
        }
        operator delete((void *)v218);
        if (!v217)
          goto LABEL_378;
      }
      else
      {
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (!v217)
          goto LABEL_378;
      }
LABEL_376:
      if (SHIBYTE(v216) < 0)
        operator delete((void *)v215);
LABEL_378:
      if (v213)
      {
        if (v212)
        {
          if (v211 < 0)
            operator delete(v210);
          if (v209 < 0)
            operator delete(v208);
        }
        if (v207 && v206 < 0)
          operator delete(v205[0]);
      }
LABEL_387:
      v185 = (void *)*((_QWORD *)&v234 + 1);
      if (*((_QWORD *)&v234 + 1))
      {
        *(_QWORD *)&v235 = *((_QWORD *)&v234 + 1);
LABEL_389:
        operator delete(v185);
      }
LABEL_390:
      if ((_QWORD)v233)
      {
        *((_QWORD *)&v233 + 1) = v233;
        operator delete((void *)v233);
      }
      if (*((_QWORD *)&v231 + 1))
      {
        *(_QWORD *)&v232 = *((_QWORD *)&v231 + 1);
        operator delete(*((void **)&v231 + 1));
      }
      v87 = (void *)v230;
      if (!(_QWORD)v230)
        goto LABEL_397;
      *((_QWORD *)&v230 + 1) = v230;
      goto LABEL_396;
    default:
      sub_239734C80(v17, 7, (uint64_t)&v242);
      *(_OWORD *)a3 = v242;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (!(_BYTE)v252)
      {
        *(_BYTE *)(a3 + 120) = 0;
        goto LABEL_397;
      }
      *(_BYTE *)(a3 + 40) = 0;
      if (v245)
      {
        *(_OWORD *)(a3 + 16) = v243;
        *(_QWORD *)(a3 + 32) = v244;
        v244 = 0;
        v243 = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if ((_BYTE)v251)
      {
        v60 = v248;
        *(_QWORD *)(a3 + 64) = v247;
        *(_OWORD *)(a3 + 48) = v246;
        v246 = 0uLL;
        *(_QWORD *)(a3 + 72) = v60;
        *(_OWORD *)(a3 + 80) = __p;
        *(_QWORD *)(a3 + 96) = v250;
        v250 = 0;
        v247 = 0;
        __p = 0uLL;
        *(_BYTE *)(a3 + 104) = 1;
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (SHIBYTE(v250) < 0)
        {
          operator delete((void *)__p);
          if ((SHIBYTE(v247) & 0x80000000) == 0)
          {
LABEL_87:
            if (!v245)
              goto LABEL_397;
            goto LABEL_338;
          }
        }
        else if ((SHIBYTE(v247) & 0x80000000) == 0)
        {
          goto LABEL_87;
        }
        operator delete((void *)v246);
        if (!v245)
          goto LABEL_397;
      }
      else
      {
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (!v245)
          goto LABEL_397;
      }
LABEL_338:
      if (SHIBYTE(v244) < 0)
      {
        v87 = (void *)v243;
LABEL_396:
        operator delete(v87);
      }
LABEL_397:
      result = v227;
      v227 = 0;
      if (result)
        return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
      return result;
  }
}

void sub_239725C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a66;
  void *v66;

  if (v66)
    operator delete(v66);
  if (!a66)
    _Unwind_Resume(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)a66 + 8))(a66);
  _Unwind_Resume(a1);
}

void sub_239725E08(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 4;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239725F60(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239725F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239725F60(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_23972606C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
    sub_239EC22A0(v3);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239726084@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v7 = (_QWORD *)a1[3];
  if (v7)
  {
    if (v7 == a1)
    {
      v11 = v10;
      (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v10);
    }
    else
    {
      v11 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v7 + 16))(a1[3]);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_23971E520(v10, a2, a3, 6, a4);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_239726178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (!a13)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*(_QWORD *)a13 + 40))();
  _Unwind_Resume(exception_object);
}

void sub_2397261C8(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23971F1DC(a1, 6, a2);
}

void sub_2397261D0(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_23971FD8C(a1, a2, 6, a3);
}

void sub_2397261D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23971FF94(a1, a2, 6, a3);
}

void sub_2397261E0(_QWORD *a1@<X0>, unsigned int a2@<W1>, _QWORD *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  _QWORD *v8;
  std::string *v9;
  __int128 v10;
  std::string *v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  std::string v21;
  std::string v22;
  void *v23[2];
  std::string::size_type v24;
  void *__dst[2];
  char v26;
  char v27;
  void *v28;
  char v29;
  void *v30;
  char v31;
  char v32;
  char v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  void *v38[2];
  uint64_t v39;
  uint64_t v40;
  __int128 __p;
  uint64_t v42;
  char v43;
  char v44;
  int v45;
  _QWORD v46[3];
  _QWORD *v47;
  _QWORD v48[3];
  _QWORD *v49;
  _QWORD v50[3];
  _QWORD *v51;
  _QWORD v52[3];
  _QWORD *v53;
  _QWORD v54[3];
  _QWORD *v55;
  _BYTE v56[24];
  _BYTE *v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  v45 = a4;
  switch(a4)
  {
    case 1:
    case 2:
      v8 = (_QWORD *)a1[3];
      if (v8)
      {
        if (v8 == a1)
        {
          v57 = v56;
          (*(void (**)(_QWORD *, _BYTE *))(*a1 + 24))(a1, v56);
        }
        else
        {
          v57 = (_BYTE *)(*(uint64_t (**)(_QWORD))(*v8 + 16))(a1[3]);
        }
      }
      else
      {
        v57 = 0;
      }
      sub_23972A70C((uint64_t)v56, a3, a2, a5);
      v19 = v57;
      if (v57 != v56)
        goto LABEL_52;
      v20 = 4;
      v19 = v56;
      goto LABEL_54;
    case 3:
      v14 = (_QWORD *)a1[3];
      if (v14)
      {
        if (v14 == a1)
        {
          v55 = v54;
          (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v54);
        }
        else
        {
          v55 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v14 + 16))(a1[3]);
        }
      }
      else
      {
        v55 = 0;
      }
      sub_239729998(v54, a3, a2, a5);
      v19 = v55;
      if (v55 != v54)
        goto LABEL_52;
      v20 = 4;
      v19 = v54;
      goto LABEL_54;
    case 4:
      v15 = (_QWORD *)a1[3];
      if (v15)
      {
        if (v15 == a1)
        {
          v53 = v52;
          (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v52);
        }
        else
        {
          v53 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v15 + 16))(a1[3]);
        }
      }
      else
      {
        v53 = 0;
      }
      sub_239737524(v52, a3, a2, a5);
      v19 = v53;
      if (v53 != v52)
        goto LABEL_52;
      v20 = 4;
      v19 = v52;
      goto LABEL_54;
    case 5:
      v16 = (_QWORD *)a1[3];
      if (v16)
      {
        if (v16 == a1)
        {
          v51 = v50;
          (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v50);
        }
        else
        {
          v51 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v16 + 16))(a1[3]);
        }
      }
      else
      {
        v51 = 0;
      }
      sub_239737680(v50, a3, a2, a5);
      v19 = v51;
      if (v51 != v50)
        goto LABEL_52;
      v20 = 4;
      v19 = v50;
      goto LABEL_54;
    case 6:
      v17 = (_QWORD *)a1[3];
      if (v17)
      {
        if (v17 == a1)
        {
          v49 = v48;
          (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v48);
        }
        else
        {
          v49 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v17 + 16))(a1[3]);
        }
      }
      else
      {
        v49 = 0;
      }
      sub_239726084(v48, a3, a2, a5);
      v19 = v49;
      if (v49 != v48)
        goto LABEL_52;
      v20 = 4;
      v19 = v48;
      goto LABEL_54;
    case 7:
      v18 = (_QWORD *)a1[3];
      if (v18)
      {
        if (v18 == a1)
        {
          v47 = v46;
          (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v46);
        }
        else
        {
          v47 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v18 + 16))(a1[3]);
        }
      }
      else
      {
        v47 = 0;
      }
      sub_239722D34(v46, a3, a2, a5);
      v19 = v47;
      if (v47 == v46)
      {
        v20 = 4;
        v19 = v46;
      }
      else
      {
LABEL_52:
        if (!v19)
          return;
        v20 = 5;
      }
LABEL_54:
      (*(void (**)(void))(*v19 + 8 * v20))();
      return;
    default:
      sub_23972692C(&v45, &v21);
      v9 = std::string::insert(&v21, 0, "No known method to load file of ");
      v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
      v22.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v10;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      v9->__r_.__value_.__r.__words[0] = 0;
      v11 = std::string::append(&v22, " format.");
      v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
      v24 = v11->__r_.__value_.__r.__words[2];
      *(_OWORD *)v23 = v12;
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      sub_239A42F9C(__dst, (__int128 *)v23);
      v33 = 1;
      sub_239914D5C((uint64_t)__dst, (uint64_t)&v34);
      *(_OWORD *)a5 = v34;
      *(_BYTE *)(a5 + 16) = 0;
      *(_BYTE *)(a5 + 112) = 0;
      if (!v44)
      {
        *(_BYTE *)(a5 + 120) = 0;
        goto LABEL_63;
      }
      *(_BYTE *)(a5 + 40) = 0;
      if (v37)
      {
        *(_OWORD *)(a5 + 16) = v35;
        *(_QWORD *)(a5 + 32) = v36;
        v36 = 0;
        v35 = 0uLL;
        *(_BYTE *)(a5 + 40) = 1;
      }
      *(_BYTE *)(a5 + 48) = 0;
      *(_BYTE *)(a5 + 104) = 0;
      if (v43)
      {
        v13 = v40;
        *(_QWORD *)(a5 + 64) = v39;
        *(_OWORD *)(a5 + 48) = *(_OWORD *)v38;
        v38[0] = 0;
        v38[1] = 0;
        *(_QWORD *)(a5 + 72) = v13;
        *(_OWORD *)(a5 + 80) = __p;
        *(_QWORD *)(a5 + 96) = v42;
        v42 = 0;
        v39 = 0;
        __p = 0uLL;
        *(_BYTE *)(a5 + 104) = 1;
        *(_BYTE *)(a5 + 112) = 1;
        *(_BYTE *)(a5 + 120) = 0;
        if (SHIBYTE(v42) < 0)
        {
          operator delete((void *)__p);
          if ((SHIBYTE(v39) & 0x80000000) == 0)
          {
LABEL_11:
            if (!v37)
              goto LABEL_63;
            goto LABEL_61;
          }
        }
        else if ((SHIBYTE(v39) & 0x80000000) == 0)
        {
          goto LABEL_11;
        }
        operator delete(v38[0]);
        if (!v37)
          goto LABEL_63;
      }
      else
      {
        *(_BYTE *)(a5 + 112) = 1;
        *(_BYTE *)(a5 + 120) = 0;
        if (!v37)
          goto LABEL_63;
      }
LABEL_61:
      if (SHIBYTE(v36) < 0)
        operator delete((void *)v35);
LABEL_63:
      if (v33)
      {
        if (v32)
        {
          if (v31 < 0)
            operator delete(v30);
          if (v29 < 0)
            operator delete(v28);
        }
        if (v27 && v26 < 0)
          operator delete(__dst[0]);
      }
      if (SHIBYTE(v24) < 0)
      {
        operator delete(v23[0]);
        if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_74:
          if ((SHIBYTE(v21.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            return;
          goto LABEL_78;
        }
      }
      else if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_74;
      }
      operator delete(v22.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v21.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
LABEL_78:
      operator delete(v21.__r_.__value_.__l.__data_);
      return;
  }
}

void sub_23972677C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v33 = *(_QWORD *)(v31 - 160);
  if (v33 == v30)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v31 - 184) + 32))(v31 - 184);
    _Unwind_Resume(exception_object);
  }
  if (v33)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v33 + 40))(v33);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23972692C(int *a1@<X0>, std::string *a2@<X8>)
{
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *v8;
  void **v9;
  uint64_t v10;
  void *__p[2];
  char v12;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  sub_2397215FC((uint64_t)__p, (uint64_t)&v8, a1);
  v12 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v8, (uint64_t)v9, (uint64_t)__p, a2, v3, v4);
  if (v12 < 0)
    operator delete(__p[0]);
  v5 = (void **)v8;
  if (v8)
  {
    v6 = v9;
    v7 = v8;
    if (v9 != v8)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = v8;
    }
    v9 = v5;
    operator delete(v7);
  }
}

void sub_2397269D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_239726A10(uint64_t a1, _QWORD *a2, int a3)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  uint64_t v8;
  std::string v9;
  std::string v10;
  void *v11[2];
  std::string::size_type v12;
  void *__dst[2];
  char v14;
  char v15;
  void *v16;
  char v17;
  void *__p;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  char v32;
  int v33;

  v33 = a3;
  switch(a3)
  {
    case 1:
    case 2:
      sub_23972D1F4(a2, a1);
      return;
    case 3:
      sub_239729ADC(a2, a1);
      return;
    case 4:
      sub_239737668(a2, a1);
      return;
    case 5:
      sub_2397377C4(a2, a1);
      return;
    case 6:
      sub_2397261C8(a2, a1);
      return;
    case 7:
      sub_239722E78(a2, a1);
      return;
    default:
      sub_23972692C(&v33, &v9);
      v4 = std::string::insert(&v9, 0, "No known method to load properties for file of ");
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v10.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v5;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      v4->__r_.__value_.__r.__words[0] = 0;
      v6 = std::string::append(&v10, " format.");
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      v12 = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)v11 = v7;
      v6->__r_.__value_.__l.__size_ = 0;
      v6->__r_.__value_.__r.__words[2] = 0;
      v6->__r_.__value_.__r.__words[0] = 0;
      sub_239A42F9C(__dst, (__int128 *)v11);
      v21 = 1;
      sub_239914D5C((uint64_t)__dst, (uint64_t)&v22);
      *(_OWORD *)a1 = v22;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (!v32)
      {
        *(_BYTE *)(a1 + 120) = 0;
        goto LABEL_23;
      }
      *(_BYTE *)(a1 + 40) = 0;
      if (v25)
      {
        *(_OWORD *)(a1 + 16) = v23;
        *(_QWORD *)(a1 + 32) = v24;
        v24 = 0;
        v23 = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v31)
      {
        v8 = v28;
        *(_QWORD *)(a1 + 64) = v27;
        *(_OWORD *)(a1 + 48) = v26;
        v26 = 0uLL;
        *(_QWORD *)(a1 + 72) = v8;
        *(_OWORD *)(a1 + 80) = v29;
        *(_QWORD *)(a1 + 96) = v30;
        v30 = 0;
        v27 = 0;
        v29 = 0uLL;
        *(_BYTE *)(a1 + 104) = 1;
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (SHIBYTE(v30) < 0)
        {
          operator delete((void *)v29);
          if ((SHIBYTE(v27) & 0x80000000) == 0)
          {
LABEL_9:
            if (!v25)
              goto LABEL_23;
            goto LABEL_21;
          }
        }
        else if ((SHIBYTE(v27) & 0x80000000) == 0)
        {
          goto LABEL_9;
        }
        operator delete((void *)v26);
        if (!v25)
          goto LABEL_23;
      }
      else
      {
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (!v25)
          goto LABEL_23;
      }
LABEL_21:
      if (SHIBYTE(v24) < 0)
        operator delete((void *)v23);
LABEL_23:
      if (v21)
      {
        if (v20)
        {
          if (v19 < 0)
            operator delete(__p);
          if (v17 < 0)
            operator delete(v16);
        }
        if (v15)
        {
          if (v14 < 0)
            operator delete(__dst[0]);
        }
      }
      if (SHIBYTE(v12) < 0)
      {
        operator delete(v11[0]);
        if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_34:
          if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            return;
          goto LABEL_38;
        }
      }
      else if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_34;
      }
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
LABEL_38:
      operator delete(v9.__r_.__value_.__l.__data_);
      return;
  }
}

void sub_239726D40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29)
{
  sub_239523188((uint64_t)&a29);
  if (a28 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a15 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  if ((a15 & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(a10);
  _Unwind_Resume(a1);
}

void sub_239726DC4(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  int v4;
  _QWORD v5[2];

  v5[0] = a2;
  v5[1] = a3;
  v4 = a1;
  sub_239727C90("Failure during ", (uint64_t)v5, " from stream with file format ", &v4, ": ", a4);
}

void sub_239726E08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__fs::filesystem::path::__string_view v4;
  __int128 *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v6;
  std::basic_string_view<_CharT, _Traits>::size_type v7;
  __int128 v8;
  int v9;
  size_t v10;
  __int128 *v11;
  unsigned __int8 v12;
  __int128 *v13;
  size_t v14;
  uint64_t v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  _BYTE *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  _QWORD *exception;
  __int128 v26;
  void *v27[2];
  void *v28;
  char v29;
  __int128 v30;
  void *v31;
  uint64_t v32;
  void *v33[2];
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  void *v38[2];
  __int128 v39;
  void *v40;
  char v41;
  void *v42[2];
  void *v43;
  uint64_t v44;
  void *v45[2];
  uint64_t v46;
  char v47;
  char v48;
  std::string v49;
  std::string v50;
  _DWORD v51[2];
  void *v52[2];
  std::string::size_type v53;
  __int128 __dst;
  __int128 __p;
  void *v56;
  char v57;
  void *v58[2];
  void *v59;
  uint64_t v60;
  void *v61[2];
  uint64_t v62;
  char v63;
  char v64;
  _QWORD v65[21];

  v65[20] = *MEMORY[0x24BDAC8D0];
  v4 = std::__fs::filesystem::path::__extension((const std::__fs::filesystem::path *)a1);
  if (v4.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  if (v4.__size_ >= 0x17)
  {
    v6 = (v4.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4.__size_ | 7) != 0x17)
      v6 = v4.__size_ | 7;
    v7 = v6 + 1;
    p_dst = (__int128 *)operator new(v6 + 1);
    *((_QWORD *)&__dst + 1) = v4.__size_;
    *(_QWORD *)&__p = v7 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_8;
  }
  BYTE7(__p) = v4.__size_;
  p_dst = &__dst;
  if (v4.__size_)
LABEL_8:
    memmove(p_dst, v4.__data_, v4.__size_);
  *((_BYTE *)p_dst + v4.__size_) = 0;
  v8 = __dst;
  v51[0] = __p;
  *(_DWORD *)((char *)v51 + 3) = *(_DWORD *)((char *)&__p + 3);
  v9 = SBYTE7(__p);
  if (SBYTE7(__p) < 0)
  {
    if (*((_QWORD *)&__dst + 1))
    {
      sub_23941A7F8(&__dst, (void *)__dst, *((unint64_t *)&__dst + 1));
      v12 = BYTE7(__p);
      v10 = *((_QWORD *)&__dst + 1);
      v11 = (__int128 *)__dst;
LABEL_14:
      if ((v12 & 0x80u) == 0)
        v13 = &__dst;
      else
        v13 = v11;
      if ((v12 & 0x80u) == 0)
        v14 = v12;
      else
        v14 = v10;
      v15 = sub_239729B0C(v13, v14);
      if (SBYTE7(__p) < 0)
      {
        operator delete((void *)__dst);
        if ((v15 & 0xFF00000000) != 0)
          goto LABEL_22;
      }
      else if ((v15 & 0xFF00000000) != 0)
      {
LABEL_22:
        sub_23955D09C(&__dst);
        if (sub_2397377DC(&__dst))
        {
          sub_239726A10((uint64_t)&v26, &__dst, v15);
        }
        else
        {
          sub_2397377F8(&__dst, (uint64_t)v38);
          v26 = *(_OWORD *)v38;
          LOBYTE(v27[0]) = 0;
          v36 = 0;
          if (v48)
          {
            v29 = 0;
            if (v41)
            {
              *(_OWORD *)v27 = v39;
              v28 = v40;
              v40 = 0;
              v39 = 0uLL;
              v29 = 1;
            }
            LOBYTE(v30) = 0;
            v35 = 0;
            if (v47)
            {
              v31 = v43;
              v30 = *(_OWORD *)v42;
              v42[0] = 0;
              v42[1] = 0;
              v32 = v44;
              *(_OWORD *)v33 = *(_OWORD *)v45;
              v34 = v46;
              v43 = 0;
              v45[0] = 0;
              v45[1] = 0;
              v46 = 0;
              v35 = 1;
            }
            v36 = 1;
            v37 = 0;
            if (v41 && SHIBYTE(v40) < 0)
              operator delete((void *)v39);
          }
          else
          {
            v37 = 0;
          }
        }
        *(_QWORD *)&__dst = *MEMORY[0x24BEDB7E0];
        *(_QWORD *)((char *)&__dst + *(_QWORD *)(__dst - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 24);
        MEMORY[0x23B83DC8C](&__p);
        std::istream::~istream();
        MEMORY[0x23B83E250](v65);
        goto LABEL_82;
      }
      if (v9 < 0)
      {
        sub_23941A7F8(&v49, (void *)v8, *((unint64_t *)&v8 + 1));
      }
      else
      {
        *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v8;
        LODWORD(v49.__r_.__value_.__r.__words[2]) = v51[0];
        *(_DWORD *)((char *)&v49.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v51 + 3);
        *((_BYTE *)&v49.__r_.__value_.__s + 23) = v9;
      }
      v16 = std::string::insert(&v49, 0, "No known method to load file of '");
      v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
      v50.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v17;
      v16->__r_.__value_.__l.__size_ = 0;
      v16->__r_.__value_.__r.__words[2] = 0;
      v16->__r_.__value_.__r.__words[0] = 0;
      v18 = std::string::append(&v50, "' extension.");
      v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
      v53 = v18->__r_.__value_.__r.__words[2];
      *(_OWORD *)v52 = v19;
      v18->__r_.__value_.__l.__size_ = 0;
      v18->__r_.__value_.__r.__words[2] = 0;
      v18->__r_.__value_.__r.__words[0] = 0;
      sub_239A42F9C(v38, (__int128 *)v52);
      LOBYTE(v46) = 1;
      sub_239914D5C((uint64_t)v38, (uint64_t)&__dst);
      v26 = __dst;
      LOBYTE(v27[0]) = 0;
      v36 = 0;
      if (v64)
      {
        v29 = 0;
        if (v57)
        {
          *(_OWORD *)v27 = __p;
          v28 = v56;
          v56 = 0;
          __p = 0uLL;
          v29 = 1;
        }
        LOBYTE(v30) = 0;
        v35 = 0;
        if (v63)
        {
          v31 = v59;
          v30 = *(_OWORD *)v58;
          v58[0] = 0;
          v58[1] = 0;
          v32 = v60;
          *(_OWORD *)v33 = *(_OWORD *)v61;
          v34 = v62;
          v59 = 0;
          v61[0] = 0;
          v61[1] = 0;
          v62 = 0;
          v35 = 1;
        }
        v36 = 1;
        v37 = 0;
        if (v57 && SHIBYTE(v56) < 0)
          operator delete((void *)__p);
      }
      else
      {
        v37 = 0;
      }
      if ((_BYTE)v46)
      {
        if (LOBYTE(v45[1]))
        {
          if (SHIBYTE(v45[0]) < 0)
            operator delete(v43);
          if (SHIBYTE(v42[0]) < 0)
            operator delete(v40);
        }
        if (BYTE8(v39) && SBYTE7(v39) < 0)
          operator delete(v38[0]);
      }
      if (SHIBYTE(v53) < 0)
      {
        operator delete(v52[0]);
        if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_75:
          if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_82;
LABEL_79:
          operator delete(v49.__r_.__value_.__l.__data_);
          goto LABEL_82;
        }
      }
      else if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_75;
      }
      operator delete(v50.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_82;
      goto LABEL_79;
    }
  }
  else if (BYTE7(__p))
  {
    LODWORD(__p) = v51[0];
    *(_DWORD *)((char *)&__p + 3) = *(_DWORD *)((char *)v51 + 3);
    v10 = *((_QWORD *)&__dst + 1);
    v11 = (__int128 *)__dst;
    v12 = BYTE7(__p);
    goto LABEL_14;
  }
  sub_239618F08(v38, "Cannot determine file type without extension.");
  LOBYTE(v46) = 1;
  sub_239914C28((uint64_t)v38, (uint64_t)&__dst);
  v26 = __dst;
  LOBYTE(v27[0]) = 0;
  v36 = 0;
  if (!v64)
  {
    v37 = 0;
    if (!(_BYTE)v46)
      goto LABEL_82;
    goto LABEL_46;
  }
  v29 = 0;
  if (v57)
  {
    *(_OWORD *)v27 = __p;
    v28 = v56;
    v56 = 0;
    __p = 0uLL;
    v29 = 1;
  }
  LOBYTE(v30) = 0;
  v35 = 0;
  if (v63)
  {
    v31 = v59;
    v30 = *(_OWORD *)v58;
    v58[0] = 0;
    v58[1] = 0;
    v32 = v60;
    *(_OWORD *)v33 = *(_OWORD *)v61;
    v34 = v62;
    v59 = 0;
    v61[0] = 0;
    v61[1] = 0;
    v62 = 0;
    v35 = 1;
  }
  v36 = 1;
  v37 = 0;
  if (v57 && SHIBYTE(v56) < 0)
    operator delete((void *)__p);
  if ((_BYTE)v46)
  {
LABEL_46:
    if (LOBYTE(v45[1]))
    {
      if (SHIBYTE(v45[0]) < 0)
        operator delete(v43);
      if (SHIBYTE(v42[0]) < 0)
        operator delete(v40);
    }
    if (BYTE8(v39) && SBYTE7(v39) < 0)
      operator delete(v38[0]);
  }
LABEL_82:
  if (v9 < 0)
  {
    operator delete((void *)v8);
    if (v37)
      goto LABEL_84;
  }
  else if (v37)
  {
LABEL_84:
    *(_OWORD *)a2 = v26;
    *(_BYTE *)(a2 + 16) = 0;
    *(_BYTE *)(a2 + 32) = 0;
    if ((_BYTE)v28)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)v27;
      v27[0] = 0;
      v27[1] = 0;
      *(_BYTE *)(a2 + 32) = 1;
    }
    *(_BYTE *)(a2 + 120) = 1;
    goto LABEL_120;
  }
  v49.__r_.__value_.__r.__words[0] = (std::string::size_type)"load";
  v49.__r_.__value_.__l.__size_ = 4;
  if (*(char *)(a1 + 23) < 0)
  {
    sub_23941A7F8(v52, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)v52 = *(_OWORD *)a1;
    v53 = *(_QWORD *)(a1 + 16);
  }
  sub_239727948("Failure during ", (uint64_t)&v49, " of '", (uint64_t)v52, "': ", &v50);
  if (SHIBYTE(v53) < 0)
    operator delete(v52[0]);
  if (v37)
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_250ADD7A8;
    __cxa_throw(exception, (struct type_info *)&unk_250ADD780, (void (*)(void *))std::exception::~exception);
  }
  sub_239A43574((__int128 *)&v50, &v26, (uint64_t)v38);
  __dst = *(_OWORD *)v38;
  v20 = sub_23952329C(&__p, &v39);
  *(_OWORD *)a2 = __dst;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (!v64)
  {
    *(_BYTE *)(a2 + 120) = 0;
    goto LABEL_109;
  }
  *(_BYTE *)(a2 + 40) = 0;
  if (v57)
  {
    *(_OWORD *)(a2 + 16) = *(_OWORD *)v20;
    *(_QWORD *)(a2 + 32) = *((_QWORD *)v20 + 2);
    *((_QWORD *)v20 + 1) = 0;
    *((_QWORD *)v20 + 2) = 0;
    *(_QWORD *)v20 = 0;
    *(_BYTE *)(a2 + 40) = 1;
  }
  *(_BYTE *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 104) = 0;
  if (!v63)
  {
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (!v57)
      goto LABEL_109;
    goto LABEL_107;
  }
  v21 = v60;
  *(_QWORD *)(a2 + 64) = v59;
  *(_OWORD *)(a2 + 48) = *(_OWORD *)v58;
  v58[0] = 0;
  v58[1] = 0;
  *(_QWORD *)(a2 + 72) = v21;
  *(_OWORD *)(a2 + 80) = *(_OWORD *)v61;
  *(_QWORD *)(a2 + 96) = v62;
  v61[1] = 0;
  v62 = 0;
  v59 = 0;
  v61[0] = 0;
  *(_BYTE *)(a2 + 104) = 1;
  *(_BYTE *)(a2 + 112) = 1;
  *(_BYTE *)(a2 + 120) = 0;
  if (SHIBYTE(v62) < 0)
  {
    operator delete(v61[0]);
    if ((SHIBYTE(v59) & 0x80000000) == 0)
    {
LABEL_100:
      if (!v57)
        goto LABEL_109;
      goto LABEL_107;
    }
  }
  else if ((SHIBYTE(v59) & 0x80000000) == 0)
  {
    goto LABEL_100;
  }
  operator delete(v58[0]);
  if (!v57)
    goto LABEL_109;
LABEL_107:
  if (SHIBYTE(v56) < 0)
    operator delete((void *)__p);
LABEL_109:
  if (v48)
  {
    if (v47)
    {
      if (SHIBYTE(v46) < 0)
        operator delete(v45[0]);
      if (SHIBYTE(v43) < 0)
        operator delete(v42[0]);
    }
    if (v41 && SHIBYTE(v40) < 0)
      operator delete((void *)v39);
  }
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v50.__r_.__value_.__l.__data_);
    if (v37)
      goto LABEL_120;
  }
  else if (v37)
  {
LABEL_120:
    if ((_BYTE)v28)
    {
      v22 = (std::__shared_weak_count *)v27[1];
      if (v27[1])
      {
        v23 = (unint64_t *)((char *)v27[1] + 8);
        do
          v24 = __ldaxr(v23);
        while (__stlxr(v24 - 1, v23));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
    }
    return;
  }
  if (v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0)
        operator delete(v33[0]);
      if (SHIBYTE(v31) < 0)
        operator delete((void *)v30);
    }
    if (v29 && SHIBYTE(v28) < 0)
      operator delete(v27[0]);
  }
}

void sub_239727754(_Unwind_Exception *a1)
{
  void *v1;
  int v2;

  if (v2 < 0)
  {
    operator delete(v1);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_239727894(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  void *__p[2];
  uint64_t v6;
  _QWORD v7[2];

  v7[0] = a2;
  v7[1] = a3;
  if (*(char *)(a1 + 23) < 0)
  {
    sub_23941A7F8(__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a1;
    v6 = *(_QWORD *)(a1 + 16);
  }
  sub_239727948("Failure during ", (uint64_t)v7, " of '", (uint64_t)__p, "': ", a4);
  if (SHIBYTE(v6) < 0)
    operator delete(__p[0]);
}

void sub_23972792C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239727948(const char *a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, uint64_t a4@<X3>, const char *a5@<X4>, std::string *a6@<X8>)
{
  char *v11;
  size_t v12;
  size_t v13;
  void *v14;
  char *v15;
  __int128 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  int64x2_t v21;
  int8x16_t v22;
  size_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  void *v30;
  void *v31;
  char *v32;
  unint64_t v33;
  void *__p[2];
  char v35;

  v31 = 0;
  v32 = 0;
  v33 = 0;
  v32 = sub_239621C68(&v31, a1);
  sub_23965DEA4((uint64_t)__p, (uint64_t)&v31, a2);
  v11 = v32;
  if ((unint64_t)v32 >= v33)
  {
    v15 = sub_239728EBC(&v31, a3);
    v32 = v15;
    if ((unint64_t)v15 >= v33)
      goto LABEL_15;
    goto LABEL_7;
  }
  v12 = strlen(a3);
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v13 = v12;
  if (v12 >= 0x17)
  {
    v18 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v18 = v12 | 7;
    v19 = v18 + 1;
    v14 = operator new(v18 + 1);
    *((_QWORD *)v11 + 1) = v13;
    *((_QWORD *)v11 + 2) = v19 | 0x8000000000000000;
    *(_QWORD *)v11 = v14;
    goto LABEL_13;
  }
  v32[23] = v12;
  v14 = v11;
  if (v12)
LABEL_13:
    memmove(v14, a3, v13);
  *((_BYTE *)v14 + v13) = 0;
  v15 = v11 + 24;
  v32 = v11 + 24;
  if ((unint64_t)(v11 + 24) >= v33)
  {
LABEL_15:
    v17 = sub_23941A624((char **)&v31, a4);
    v32 = v17;
    if ((unint64_t)v17 < v33)
      goto LABEL_16;
    goto LABEL_26;
  }
LABEL_7:
  if (*(char *)(a4 + 23) < 0)
  {
    sub_23941A7F8(v15, *(void **)a4, *(_QWORD *)(a4 + 8));
    v17 = v15 + 24;
    v32 = v15 + 24;
    if ((unint64_t)(v15 + 24) < v33)
    {
LABEL_16:
      v20 = strlen(a5);
      if (v20 > 0x7FFFFFFFFFFFFFF7)
        sub_23941A5AC();
      v23 = v20;
      if (v20 >= 0x17)
      {
        v25 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v20 | 7) != 0x17)
          v25 = v20 | 7;
        v26 = v25 + 1;
        v24 = operator new(v25 + 1);
        *((_QWORD *)v17 + 1) = v23;
        *((_QWORD *)v17 + 2) = v26 | 0x8000000000000000;
        *(_QWORD *)v17 = v24;
      }
      else
      {
        v17[23] = v20;
        v24 = v17;
        if (!v20)
          goto LABEL_24;
      }
      memmove(v24, a5, v23);
LABEL_24:
      *((_BYTE *)v24 + v23) = 0;
      v27 = v17 + 24;
      goto LABEL_27;
    }
  }
  else
  {
    v16 = *(_OWORD *)a4;
    *((_QWORD *)v15 + 2) = *(_QWORD *)(a4 + 16);
    *(_OWORD *)v15 = v16;
    v17 = v15 + 24;
    v32 = v15 + 24;
    if ((unint64_t)(v15 + 24) < v33)
      goto LABEL_16;
  }
LABEL_26:
  v27 = sub_2397290E8(&v31, a5);
LABEL_27:
  v32 = v27;
  v35 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v31, (uint64_t)v27, (uint64_t)__p, a6, v21, v22);
  if (v35 < 0)
    operator delete(__p[0]);
  v28 = (char *)v31;
  if (v31)
  {
    v29 = v32;
    v30 = v31;
    if (v32 != v31)
    {
      do
      {
        if (*(v29 - 1) < 0)
          operator delete(*((void **)v29 - 3));
        v29 -= 24;
      }
      while (v29 != v28);
      v30 = v31;
    }
    v32 = v28;
    operator delete(v30);
  }
}

void sub_239727C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_23941A260(&a9);
  _Unwind_Resume(a1);
}

void sub_239727C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_239727C90(const char *a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, int *a4@<X3>, const char *a5@<X4>, std::string *a6@<X8>)
{
  char *v11;
  size_t v12;
  size_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  size_t v19;
  int64x2_t v20;
  int8x16_t v21;
  size_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void *v29;
  char v30;
  void *v31;
  char *v32;
  unint64_t v33;
  void *__p[2];
  char v35;

  v31 = 0;
  v32 = 0;
  v33 = 0;
  v32 = sub_239621C68(&v31, a1);
  sub_23965DEA4((uint64_t)__p, (uint64_t)&v31, a2);
  v11 = v32;
  if ((unint64_t)v32 >= v33)
  {
    v15 = sub_239729314(&v31, a3);
    goto LABEL_12;
  }
  v12 = strlen(a3);
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v13 = v12;
  if (v12 >= 0x17)
  {
    v16 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v16 = v12 | 7;
    v17 = v16 + 1;
    v14 = operator new(v16 + 1);
    *((_QWORD *)v11 + 1) = v13;
    *((_QWORD *)v11 + 2) = v17 | 0x8000000000000000;
    *(_QWORD *)v11 = v14;
  }
  else
  {
    v32[23] = v12;
    v14 = v11;
    if (!v12)
      goto LABEL_11;
  }
  memmove(v14, a3, v13);
LABEL_11:
  *((_BYTE *)v14 + v13) = 0;
  v15 = v11 + 24;
LABEL_12:
  v32 = v15;
  sub_2397215FC((uint64_t)&v30, (uint64_t)&v31, a4);
  v18 = v32;
  if ((unint64_t)v32 >= v33)
  {
    v24 = sub_239583E94(&v31, a5);
    goto LABEL_23;
  }
  v19 = strlen(a5);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = v19;
  if (v19 >= 0x17)
  {
    v25 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v25 = v19 | 7;
    v26 = v25 + 1;
    v23 = operator new(v25 + 1);
    *((_QWORD *)v18 + 1) = v22;
    *((_QWORD *)v18 + 2) = v26 | 0x8000000000000000;
    *(_QWORD *)v18 = v23;
  }
  else
  {
    v32[23] = v19;
    v23 = v18;
    if (!v19)
      goto LABEL_22;
  }
  memmove(v23, a5, v22);
LABEL_22:
  *((_BYTE *)v23 + v22) = 0;
  v24 = v18 + 24;
LABEL_23:
  v32 = v24;
  v35 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v31, (uint64_t)v24, (uint64_t)__p, a6, v20, v21);
  if (v35 < 0)
    operator delete(__p[0]);
  v27 = (char *)v31;
  if (v31)
  {
    v28 = v32;
    v29 = v31;
    if (v32 != v31)
    {
      do
      {
        if (*(v28 - 1) < 0)
          operator delete(*((void **)v28 - 3));
        v28 -= 24;
      }
      while (v28 != v27);
      v29 = v31;
    }
    v32 = v27;
    operator delete(v29);
  }
}

void sub_239727ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_239727F50(_DWORD *a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  int v6;
  std::string v7;
  void *__dst[2];
  char v9;
  char v10;
  void *v11;
  char v12;
  void *__p;
  char v14;
  char v15;
  char v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  char v27;

  switch(a3)
  {
    case 0:
      v6 = 0;
      sub_239728234("Format ", &v6, " invalid. ", "Must choose format to save.", &v7);
      sub_239A42F9C(__dst, (__int128 *)&v7);
      v16 = 1;
      sub_239914C28((uint64_t)__dst, (uint64_t)&v17);
      *(_OWORD *)a4 = v17;
      *(_BYTE *)(a4 + 16) = 0;
      *(_BYTE *)(a4 + 112) = 0;
      if (!v27)
      {
        *(_BYTE *)(a4 + 120) = 0;
        goto LABEL_23;
      }
      *(_BYTE *)(a4 + 40) = 0;
      if (v20)
      {
        *(_OWORD *)(a4 + 16) = v18;
        *(_QWORD *)(a4 + 32) = v19;
        v19 = 0;
        v18 = 0uLL;
        *(_BYTE *)(a4 + 40) = 1;
      }
      *(_BYTE *)(a4 + 48) = 0;
      *(_BYTE *)(a4 + 104) = 0;
      if (v26)
      {
        v5 = v23;
        *(_QWORD *)(a4 + 64) = v22;
        *(_OWORD *)(a4 + 48) = v21;
        v22 = 0;
        v21 = 0uLL;
        *(_QWORD *)(a4 + 72) = v5;
        *(_OWORD *)(a4 + 80) = v24;
        *(_QWORD *)(a4 + 96) = v25;
        v25 = 0;
        v24 = 0uLL;
        *(_BYTE *)(a4 + 104) = 1;
        *(_BYTE *)(a4 + 112) = 1;
        *(_BYTE *)(a4 + 120) = 0;
        if (SHIBYTE(v25) < 0)
        {
          operator delete((void *)v24);
          if ((SHIBYTE(v22) & 0x80000000) == 0)
          {
LABEL_9:
            if (!v20)
              goto LABEL_23;
            goto LABEL_21;
          }
        }
        else if ((SHIBYTE(v22) & 0x80000000) == 0)
        {
          goto LABEL_9;
        }
        operator delete((void *)v21);
        if (!v20)
          goto LABEL_23;
      }
      else
      {
        *(_BYTE *)(a4 + 112) = 1;
        *(_BYTE *)(a4 + 120) = 0;
        if (!v20)
          goto LABEL_23;
      }
LABEL_21:
      if (SHIBYTE(v19) < 0)
        operator delete((void *)v18);
LABEL_23:
      if (v16)
      {
        if (v15)
        {
          if (v14 < 0)
            operator delete(__p);
          if (v12 < 0)
            operator delete(v11);
        }
        if (v10 && v9 < 0)
          operator delete(__dst[0]);
      }
      if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v7.__r_.__value_.__l.__data_);
      return;
    case 1:
    case 2:
      sub_23972D640(a1, a2, 1, a3, a4);
      return;
    case 3:
      sub_239729AE4((uint64_t)a1, a2, a4);
      return;
    case 4:
      sub_239737670((uint64_t)a1, a2, a4);
      return;
    case 5:
      sub_2397377CC((uint64_t)a1, a2, a4);
      return;
    case 6:
      sub_2397261D0((uint64_t)a1, a2, a4);
      return;
    case 7:
      sub_239722E80((uint64_t)a1, a2, a4);
      return;
    default:
      sub_239EC22D8();
  }
}

void sub_239728208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_239523188((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239728234(const char *a1@<X0>, int *a2@<X1>, const char *a3@<X2>, const char *a4@<X3>, std::string *a5@<X8>)
{
  char *v9;
  size_t v10;
  size_t v11;
  _BYTE *v12;
  char *v13;
  size_t v14;
  int64x2_t v15;
  int8x16_t v16;
  size_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  void *v26;
  void *v27;
  char *v28;
  unint64_t v29;
  void *__p[2];
  char v31;

  v27 = 0;
  v28 = 0;
  v29 = 0;
  v28 = sub_239628298(&v27, a1);
  sub_2397215FC((uint64_t)__p, (uint64_t)&v27, a2);
  v9 = v28;
  if ((unint64_t)v28 < v29)
  {
    v10 = strlen(a3);
    if (v10 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v11 = v10;
    if (v10 >= 0x17)
    {
      v19 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v10 | 7) != 0x17)
        v19 = v10 | 7;
      v20 = v19 + 1;
      v12 = operator new(v19 + 1);
      *((_QWORD *)v9 + 1) = v11;
      *((_QWORD *)v9 + 2) = v20 | 0x8000000000000000;
      *(_QWORD *)v9 = v12;
    }
    else
    {
      v28[23] = v10;
      v12 = v9;
      if (!v10)
      {
LABEL_15:
        v12[v11] = 0;
        v13 = v9 + 24;
        v28 = v9 + 24;
        if ((unint64_t)(v9 + 24) >= v29)
          goto LABEL_16;
        goto LABEL_7;
      }
    }
    memmove(v12, a3, v11);
    goto LABEL_15;
  }
  v13 = sub_239729540(&v27, a3);
  v28 = v13;
  if ((unint64_t)v13 >= v29)
  {
LABEL_16:
    v21 = sub_23972976C(&v27, a4);
    goto LABEL_22;
  }
LABEL_7:
  v14 = strlen(a4);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v17 = v14;
  if (v14 >= 0x17)
  {
    v22 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v22 = v14 | 7;
    v23 = v22 + 1;
    v18 = operator new(v22 + 1);
    *((_QWORD *)v13 + 1) = v17;
    *((_QWORD *)v13 + 2) = v23 | 0x8000000000000000;
    *(_QWORD *)v13 = v18;
  }
  else
  {
    v13[23] = v14;
    v18 = v13;
    if (!v14)
      goto LABEL_21;
  }
  memmove(v18, a4, v17);
LABEL_21:
  *((_BYTE *)v18 + v17) = 0;
  v21 = v13 + 24;
LABEL_22:
  v28 = v21;
  v31 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v27, (uint64_t)v21, (uint64_t)__p, a5, v15, v16);
  if (v31 < 0)
    operator delete(__p[0]);
  v24 = (char *)v27;
  if (v27)
  {
    v25 = v28;
    v26 = v27;
    if (v28 != v27)
    {
      do
      {
        if (*(v25 - 1) < 0)
          operator delete(*((void **)v25 - 3));
        v25 -= 24;
      }
      while (v25 != v24);
      v26 = v27;
    }
    v28 = v24;
    operator delete(v26);
  }
}

void sub_239728478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_2397284EC(std::__fs::filesystem::path *this@<X1>, _DWORD *a2@<X0>, uint64_t a3@<X8>)
{
  std::__fs::filesystem::path::__string_view v6;
  __int128 *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v8;
  std::basic_string_view<_CharT, _Traits>::size_type v9;
  __int128 v10;
  int v11;
  size_t v12;
  __int128 *v13;
  unsigned __int8 v14;
  __int128 *v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  std::string *v19;
  __int128 v20;
  std::string *v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  std::string v26[5];
  void *v27[2];
  char v28;
  char v29;
  void *v30;
  char v31;
  void *v32;
  char v33;
  char v34;
  char v35;
  std::string v36;
  std::string v37;
  void *v38[2];
  char v39;
  char v40;
  void *v41;
  char v42;
  void *v43;
  char v44;
  char v45;
  char v46;
  _QWORD v47[2];
  char v48;
  char v49;
  void *v50;
  char v51;
  void *v52;
  char v53;
  char v54;
  char v55;
  _DWORD v56[2];
  __int128 __dst;
  __int128 v58;
  uint64_t v59;
  char v60;
  void *v61[2];
  uint64_t v62;
  uint64_t v63;
  void *__p[2];
  uint64_t v65;
  char v66;
  char v67;
  _QWORD v68[20];

  v68[19] = *MEMORY[0x24BDAC8D0];
  v6 = std::__fs::filesystem::path::__extension(this);
  if (v6.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  if (v6.__size_ >= 0x17)
  {
    v8 = (v6.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6.__size_ | 7) != 0x17)
      v8 = v6.__size_ | 7;
    v9 = v8 + 1;
    p_dst = (__int128 *)operator new(v8 + 1);
    *((_QWORD *)&__dst + 1) = v6.__size_;
    *(_QWORD *)&v58 = v9 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_8;
  }
  BYTE7(v58) = v6.__size_;
  p_dst = &__dst;
  if (v6.__size_)
LABEL_8:
    memmove(p_dst, v6.__data_, v6.__size_);
  *((_BYTE *)p_dst + v6.__size_) = 0;
  v10 = __dst;
  v56[0] = v58;
  *(_DWORD *)((char *)v56 + 3) = *(_DWORD *)((char *)&v58 + 3);
  v11 = SBYTE7(v58);
  if (SBYTE7(v58) < 0)
  {
    if (*((_QWORD *)&__dst + 1))
    {
      sub_23941A7F8(&__dst, (void *)__dst, *((unint64_t *)&__dst + 1));
      v14 = BYTE7(v58);
      v12 = *((_QWORD *)&__dst + 1);
      v13 = (__int128 *)__dst;
LABEL_14:
      if ((v14 & 0x80u) == 0)
        v15 = &__dst;
      else
        v15 = v13;
      if ((v14 & 0x80u) == 0)
        v16 = v14;
      else
        v16 = v12;
      v17 = sub_239729B0C(v15, v16);
      if (SBYTE7(v58) < 0)
      {
        operator delete((void *)__dst);
        if ((v17 & 0xFF00000000) != 0)
        {
LABEL_22:
          switch((int)v17)
          {
            case 0:
              LODWORD(v37.__r_.__value_.__l.__data_) = 0;
              sub_239728234("Format ", (int *)&v37, " invalid. ", "Must choose format to save.", v26);
              sub_239A42F9C(v27, (__int128 *)v26);
              v35 = 1;
              sub_239914C28((uint64_t)v27, (uint64_t)&__dst);
              *(_OWORD *)a3 = __dst;
              *(_BYTE *)(a3 + 16) = 0;
              *(_BYTE *)(a3 + 112) = 0;
              if (!v67)
              {
                *(_BYTE *)(a3 + 120) = 0;
                goto LABEL_110;
              }
              *(_BYTE *)(a3 + 40) = 0;
              if (v60)
              {
                *(_OWORD *)(a3 + 16) = v58;
                *(_QWORD *)(a3 + 32) = v59;
                v59 = 0;
                v58 = 0uLL;
                *(_BYTE *)(a3 + 40) = 1;
              }
              *(_BYTE *)(a3 + 48) = 0;
              *(_BYTE *)(a3 + 104) = 0;
              if (v66)
              {
                v25 = v63;
                *(_QWORD *)(a3 + 64) = v62;
                *(_OWORD *)(a3 + 48) = *(_OWORD *)v61;
                v61[0] = 0;
                v61[1] = 0;
                *(_QWORD *)(a3 + 72) = v25;
                *(_OWORD *)(a3 + 80) = *(_OWORD *)__p;
                *(_QWORD *)(a3 + 96) = v65;
                v65 = 0;
                __p[1] = 0;
                v62 = 0;
                __p[0] = 0;
                *(_BYTE *)(a3 + 104) = 1;
                *(_BYTE *)(a3 + 112) = 1;
                *(_BYTE *)(a3 + 120) = 0;
                if (SHIBYTE(v65) < 0)
                {
                  operator delete(__p[0]);
                  if ((SHIBYTE(v62) & 0x80000000) == 0)
                  {
LABEL_71:
                    if (!v60)
                      goto LABEL_110;
                    goto LABEL_108;
                  }
                }
                else if ((SHIBYTE(v62) & 0x80000000) == 0)
                {
                  goto LABEL_71;
                }
                operator delete(v61[0]);
                if (!v60)
                  goto LABEL_110;
              }
              else
              {
                *(_BYTE *)(a3 + 112) = 1;
                *(_BYTE *)(a3 + 120) = 0;
                if (!v60)
                  goto LABEL_110;
              }
LABEL_108:
              if (SHIBYTE(v59) < 0)
                operator delete((void *)v58);
LABEL_110:
              if (v35)
              {
                if (v34)
                {
                  if (v33 < 0)
                    operator delete(v32);
                  if (v31 < 0)
                    operator delete(v30);
                }
                if (v29 && v28 < 0)
                  operator delete(v27[0]);
              }
              if ((SHIBYTE(v26[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                goto LABEL_100;
              v24 = (void *)v26[0].__r_.__value_.__r.__words[0];
              break;
            case 1:
            case 2:
              sub_23955CF88(&__dst);
              if (*(_DWORD *)((char *)&v59 + *(_QWORD *)(__dst - 24)))
              {
                sub_239737980(&__dst, (uint64_t)v26);
                sub_2396207E4(a3, (uint64_t)v26);
                sub_239522FE4((uint64_t)v26);
              }
              else
              {
                sub_23972D640(a2, &__dst, 1, v17, a3);
              }
              *(_QWORD *)&__dst = *MEMORY[0x24BEDB7E8];
              *(_QWORD *)((char *)&__dst + *(_QWORD *)(__dst - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 24);
              MEMORY[0x23B83DC8C]((char *)&__dst + 8);
              std::ostream::~ostream();
              MEMORY[0x23B83E250](v68);
              goto LABEL_100;
            case 3:
              sub_239729AEC((uint64_t)a2, (uint64_t)this, a3);
              goto LABEL_100;
            case 4:
              sub_239737678((uint64_t)a2, (uint64_t)this, a3);
              goto LABEL_100;
            case 5:
              sub_2397377D4((uint64_t)a2, (uint64_t)this, a3);
              goto LABEL_100;
            case 6:
              sub_2397261D8((uint64_t)a2, (uint64_t)this, a3);
              goto LABEL_100;
            case 7:
              sub_23972465C((uint64_t)a2, (uint64_t)this, a3);
              goto LABEL_100;
            default:
              sub_239A444D4((uint64_t)"unknown file", 258, (uint64_t)"", (void (*)(void *))sub_239A4463C);
              sub_239A4475C();
              abort();
          }
          goto LABEL_99;
        }
      }
      else if ((v17 & 0xFF00000000) != 0)
      {
        goto LABEL_22;
      }
      if (v11 < 0)
      {
        sub_23941A7F8(&v36, (void *)v10, *((unint64_t *)&v10 + 1));
      }
      else
      {
        *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v10;
        LODWORD(v36.__r_.__value_.__r.__words[2]) = v56[0];
        *(_DWORD *)((char *)&v36.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v56 + 3);
        *((_BYTE *)&v36.__r_.__value_.__s + 23) = v11;
      }
      v19 = std::string::insert(&v36, 0, "No known method to save file of '");
      v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
      v37.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v20;
      v19->__r_.__value_.__l.__size_ = 0;
      v19->__r_.__value_.__r.__words[2] = 0;
      v19->__r_.__value_.__r.__words[0] = 0;
      v21 = std::string::append(&v37, "' extension.");
      v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
      v26[0].__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v26[0].__r_.__value_.__l.__data_ = v22;
      v21->__r_.__value_.__l.__size_ = 0;
      v21->__r_.__value_.__r.__words[2] = 0;
      v21->__r_.__value_.__r.__words[0] = 0;
      sub_239A42F9C(v38, (__int128 *)v26);
      v46 = 1;
      sub_239914D5C((uint64_t)v38, (uint64_t)&__dst);
      *(_OWORD *)a3 = __dst;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (!v67)
      {
        *(_BYTE *)(a3 + 120) = 0;
        goto LABEL_83;
      }
      *(_BYTE *)(a3 + 40) = 0;
      if (v60)
      {
        *(_OWORD *)(a3 + 16) = v58;
        *(_QWORD *)(a3 + 32) = v59;
        v59 = 0;
        v58 = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if (!v66)
      {
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (!v60)
          goto LABEL_83;
        goto LABEL_81;
      }
      v23 = v63;
      *(_QWORD *)(a3 + 64) = v62;
      *(_OWORD *)(a3 + 48) = *(_OWORD *)v61;
      v61[0] = 0;
      v61[1] = 0;
      *(_QWORD *)(a3 + 72) = v23;
      *(_OWORD *)(a3 + 80) = *(_OWORD *)__p;
      *(_QWORD *)(a3 + 96) = v65;
      v65 = 0;
      __p[1] = 0;
      v62 = 0;
      __p[0] = 0;
      *(_BYTE *)(a3 + 104) = 1;
      *(_BYTE *)(a3 + 112) = 1;
      *(_BYTE *)(a3 + 120) = 0;
      if (SHIBYTE(v65) < 0)
      {
        operator delete(__p[0]);
        if ((SHIBYTE(v62) & 0x80000000) == 0)
        {
LABEL_44:
          if (!v60)
            goto LABEL_83;
          goto LABEL_81;
        }
      }
      else if ((SHIBYTE(v62) & 0x80000000) == 0)
      {
        goto LABEL_44;
      }
      operator delete(v61[0]);
      if (!v60)
        goto LABEL_83;
LABEL_81:
      if (SHIBYTE(v59) < 0)
        operator delete((void *)v58);
LABEL_83:
      if (v46)
      {
        if (v45)
        {
          if (v44 < 0)
            operator delete(v43);
          if (v42 < 0)
            operator delete(v41);
        }
        if (v40 && v39 < 0)
          operator delete(v38[0]);
      }
      if (SHIBYTE(v26[0].__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v26[0].__r_.__value_.__l.__data_);
        if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_94:
          if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_100;
LABEL_98:
          v24 = (void *)v36.__r_.__value_.__r.__words[0];
          goto LABEL_99;
        }
      }
      else if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_94;
      }
      operator delete(v37.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_100;
      goto LABEL_98;
    }
  }
  else if (BYTE7(v58))
  {
    LODWORD(v58) = v56[0];
    *(_DWORD *)((char *)&v58 + 3) = *(_DWORD *)((char *)v56 + 3);
    v12 = *((_QWORD *)&__dst + 1);
    v13 = (__int128 *)__dst;
    v14 = BYTE7(v58);
    goto LABEL_14;
  }
  sub_239618F08(v47, "Cannot determine file type without extension.");
  v55 = 1;
  sub_239914C28((uint64_t)v47, (uint64_t)&__dst);
  *(_OWORD *)a3 = __dst;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (!v67)
  {
    *(_BYTE *)(a3 + 120) = 0;
    goto LABEL_53;
  }
  *(_BYTE *)(a3 + 40) = 0;
  if (v60)
  {
    *(_OWORD *)(a3 + 16) = v58;
    *(_QWORD *)(a3 + 32) = v59;
    v59 = 0;
    v58 = 0uLL;
    *(_BYTE *)(a3 + 40) = 1;
  }
  *(_BYTE *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 104) = 0;
  if (v66)
  {
    v18 = v63;
    *(_QWORD *)(a3 + 64) = v62;
    *(_OWORD *)(a3 + 48) = *(_OWORD *)v61;
    v61[0] = 0;
    v61[1] = 0;
    *(_QWORD *)(a3 + 72) = v18;
    *(_OWORD *)(a3 + 80) = *(_OWORD *)__p;
    *(_QWORD *)(a3 + 96) = v65;
    v65 = 0;
    __p[1] = 0;
    v62 = 0;
    __p[0] = 0;
    *(_BYTE *)(a3 + 104) = 1;
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 120) = 0;
    if (SHIBYTE(v65) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v62) & 0x80000000) == 0)
      {
LABEL_31:
        if (!v60)
          goto LABEL_53;
        goto LABEL_51;
      }
    }
    else if ((SHIBYTE(v62) & 0x80000000) == 0)
    {
      goto LABEL_31;
    }
    operator delete(v61[0]);
    if (!v60)
      goto LABEL_53;
    goto LABEL_51;
  }
  *(_BYTE *)(a3 + 112) = 1;
  *(_BYTE *)(a3 + 120) = 0;
  if (!v60)
    goto LABEL_53;
LABEL_51:
  if (SHIBYTE(v59) < 0)
    operator delete((void *)v58);
LABEL_53:
  if (v55)
  {
    if (v54)
    {
      if (v53 < 0)
        operator delete(v52);
      if (v51 < 0)
        operator delete(v50);
    }
    if (v49 && v48 < 0)
    {
      v24 = (void *)v47[0];
LABEL_99:
      operator delete(v24);
    }
  }
LABEL_100:
  if (v11 < 0)
    operator delete((void *)v10);
}

void sub_239728D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  void *v71;
  int v72;

  sub_23955C978(&a71);
  if (v72 < 0)
  {
    operator delete(v71);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

char *sub_239728EBC(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_2397290D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_2397290E8(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_239729300(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_239729314(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23972952C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_239729540(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_239729758(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23972976C(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_239729984(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239729998@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v7 = (_QWORD *)a1[3];
  if (v7)
  {
    if (v7 == a1)
    {
      v11 = v10;
      (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v10);
    }
    else
    {
      v11 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v7 + 16))(a1[3]);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_23971E520(v10, a2, a3, 3, a4);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_239729A8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (!a13)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*(_QWORD *)a13 + 40))();
  _Unwind_Resume(exception_object);
}

void sub_239729ADC(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23971F1DC(a1, 3, a2);
}

void sub_239729AE4(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_23971FD8C(a1, a2, 3, a3);
}

void sub_239729AEC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23971FF94(a1, a2, 3, a3);
}

_QWORD *sub_239729AF4(_QWORD *a1, int *a2)
{
  return sub_239458500(a1, (uint64_t)(&off_250AE3FF0)[2 * *a2], (uint64_t)(&off_250AE3FF0)[2 * *a2 + 1]);
}

uint64_t sub_239729B0C(const void *a1, size_t a2)
{
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  void **v11;
  void *v12;
  void **v14;
  void *__dst[2];
  unint64_t v16;
  void *v17[2];
  void *v18[2];
  int v19;
  void *__p[2];
  char v21;
  int v22;
  void *v23[2];
  char v24;
  int v25;
  void *v26[2];
  char v27;
  int v28;
  void *v29[2];
  char v30;
  int v31;
  void *v32[2];
  char v33;
  int v34;
  void *v35[2];
  char v36;
  int v37;
  void *v38[2];
  char v39;
  int v40;
  void *v41[2];
  char v42;
  int v43;
  void *v44[2];
  char v45;
  int v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v21 = 4;
  strcpy((char *)__p, ".pgm");
  v24 = 4;
  v22 = 1;
  strcpy((char *)v23, ".ppm");
  v27 = 4;
  v25 = 2;
  strcpy((char *)v26, ".jpg");
  v30 = 5;
  v28 = 4;
  strcpy((char *)v29, ".jpeg");
  v33 = 4;
  v31 = 4;
  strcpy((char *)v32, ".png");
  v36 = 5;
  v34 = 3;
  strcpy((char *)v35, ".tiff");
  v39 = 4;
  v37 = 5;
  strcpy((char *)v38, ".tif");
  v42 = 5;
  v40 = 5;
  strcpy((char *)v41, ".heic");
  v45 = 4;
  v43 = 6;
  strcpy((char *)v44, ".exr");
  v46 = 7;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)v18 = 0u;
  v19 = 1065353216;
  sub_23972A070((uint64_t)v17, (uint64_t)__p, (uint64_t)__p);
  sub_23972A070((uint64_t)v17, (uint64_t)v23, (uint64_t)v23);
  sub_23972A070((uint64_t)v17, (uint64_t)v26, (uint64_t)v26);
  sub_23972A070((uint64_t)v17, (uint64_t)v29, (uint64_t)v29);
  sub_23972A070((uint64_t)v17, (uint64_t)v32, (uint64_t)v32);
  sub_23972A070((uint64_t)v17, (uint64_t)v35, (uint64_t)v35);
  sub_23972A070((uint64_t)v17, (uint64_t)v38, (uint64_t)v38);
  sub_23972A070((uint64_t)v17, (uint64_t)v41, (uint64_t)v41);
  sub_23972A070((uint64_t)v17, (uint64_t)v44, (uint64_t)v44);
  if (v45 < 0)
  {
    operator delete(v44[0]);
    if ((v42 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v39 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_32;
    }
  }
  else if ((v42 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v41[0]);
  if ((v39 & 0x80000000) == 0)
  {
LABEL_4:
    if ((v36 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_33;
  }
LABEL_32:
  operator delete(v38[0]);
  if ((v36 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v33 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_34;
  }
LABEL_33:
  operator delete(v35[0]);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v30 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_35;
  }
LABEL_34:
  operator delete(v32[0]);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v27 & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_36;
  }
LABEL_35:
  operator delete(v29[0]);
  if ((v27 & 0x80000000) == 0)
  {
LABEL_8:
    if ((v24 & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_37;
  }
LABEL_36:
  operator delete(v26[0]);
  if ((v24 & 0x80000000) == 0)
  {
LABEL_9:
    if ((v21 & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_38;
  }
LABEL_37:
  operator delete(v23[0]);
  if ((v21 & 0x80000000) == 0)
  {
LABEL_10:
    if (a2 < 0x7FFFFFFFFFFFFFF8)
      goto LABEL_11;
LABEL_39:
    sub_23941A5AC();
  }
LABEL_38:
  operator delete(__p[0]);
  if (a2 >= 0x7FFFFFFFFFFFFFF8)
    goto LABEL_39;
LABEL_11:
  if (a2 >= 0x17)
  {
    v5 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17)
      v5 = a2 | 7;
    v6 = v5 + 1;
    v4 = (void **)operator new(v5 + 1);
    __dst[1] = (void *)a2;
    v16 = v6 | 0x8000000000000000;
    __dst[0] = v4;
    goto LABEL_17;
  }
  HIBYTE(v16) = a2;
  v4 = __dst;
  if (a2)
LABEL_17:
    memmove(v4, a1, a2);
  *((_BYTE *)v4 + a2) = 0;
  sub_239A43824((uint64_t)__dst, (uint64_t)__p);
  if (SHIBYTE(v16) < 0)
    operator delete(__dst[0]);
  v7 = sub_23972A4E0(v17, (uint64_t)__p);
  if (v7)
  {
    v8 = v7[5] & 0xFFFFFF00;
    v9 = *((_DWORD *)v7 + 10);
    v10 = 0x100000000;
    if ((v21 & 0x80000000) == 0)
      goto LABEL_23;
    goto LABEL_22;
  }
  v10 = 0;
  v9 = 0;
  v8 = 0;
  if (v21 < 0)
LABEL_22:
    operator delete(__p[0]);
LABEL_23:
  v11 = (void **)v18[0];
  if (v18[0])
  {
    do
    {
      v14 = (void **)*v11;
      if (*((char *)v11 + 39) < 0)
        operator delete(v11[2]);
      operator delete(v11);
      v11 = v14;
    }
    while (v14);
  }
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
    operator delete(v12);
  return v10 | v8 | v9;
}

void sub_239729F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0)
  {
    operator delete(__p);
    sub_23942823C((uint64_t)&a16);
    _Unwind_Resume(a1);
  }
  sub_23942823C((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_239729F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, void **a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  void *a67;
  char a72;
  void *a73;
  char a74;

  if (a15)
    sub_239EC0A38(a15);
  if (__p)
  {
    operator delete(__p);
    if ((a74 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a72 & 0x80000000) == 0)
        goto LABEL_6;
      goto LABEL_16;
    }
  }
  else if ((a74 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a73);
  if ((a72 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a65 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a67);
  if ((a65 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a58 & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a60);
  if ((a58 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a51 & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a53);
  if ((a51 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a44 & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a46);
  if ((a44 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a37 & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a39);
  if ((a37 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a30 & 0x80000000) == 0)
      goto LABEL_12;
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a32);
  if ((a30 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a23 & 0x80000000) == 0)
LABEL_24:
      _Unwind_Resume(a1);
LABEL_23:
    operator delete(a18);
    _Unwind_Resume(a1);
  }
LABEL_22:
  operator delete(a25);
  if ((a23 & 0x80000000) == 0)
    goto LABEL_24;
  goto LABEL_23;
}

uint64_t *sub_23972A070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  _BYTE *v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  uint64_t **v13;
  uint64_t *v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _BYTE *v26;
  float v27;
  float v28;
  _QWORD *v29;
  _QWORD *v30;
  _BOOL8 v31;
  unint64_t v32;
  unint64_t v33;
  size_t prime;
  int8x8_t v35;
  unint64_t v36;
  uint8x8_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v42[2];
  char v43;

  v5 = (_BYTE *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v8 = v7;
  }
  v9 = sub_239428940((uint64_t)v42, (uint64_t *)a2, v8);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v3 = v9;
      if (v9 >= v11)
        v3 = v9 % v11;
    }
    else
    {
      v3 = (v11 - 1) & v9;
    }
    v13 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      v14 = *v13;
      if (*v13)
      {
        v15 = v5[23];
        if (v15 >= 0)
          v16 = v5[23];
        else
          v16 = *((_QWORD *)v5 + 1);
        if (v15 < 0)
          v5 = *(_BYTE **)v5;
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v21 = v14[1];
            if (v21 == v10)
            {
              v22 = *((unsigned __int8 *)v14 + 39);
              if ((v22 & 0x80u) == 0)
                v23 = *((unsigned __int8 *)v14 + 39);
              else
                v23 = v14[3];
              if (v23 == v16)
              {
                if ((v22 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v14[2], v5, v14[3]))
                    return v14;
                }
                else
                {
                  if (!*((_BYTE *)v14 + 39))
                    return v14;
                  v24 = 0;
                  while (*((unsigned __int8 *)v14 + v24 + 16) == v5[v24])
                  {
                    if (v22 == ++v24)
                      return v14;
                  }
                }
              }
            }
            else if ((v21 & (v11 - 1)) != v3)
            {
              goto LABEL_51;
            }
            v14 = (uint64_t *)*v14;
            if (!v14)
              goto LABEL_51;
          }
        }
        do
        {
          v17 = v14[1];
          if (v17 == v10)
          {
            v18 = *((unsigned __int8 *)v14 + 39);
            if ((v18 & 0x80u) == 0)
              v19 = *((unsigned __int8 *)v14 + 39);
            else
              v19 = v14[3];
            if (v19 == v16)
            {
              if ((v18 & 0x80) != 0)
              {
                if (!memcmp((const void *)v14[2], v5, v14[3]))
                  return v14;
              }
              else
              {
                if (!*((_BYTE *)v14 + 39))
                  return v14;
                v20 = 0;
                while (*((unsigned __int8 *)v14 + v20 + 16) == v5[v20])
                {
                  if (v18 == ++v20)
                    return v14;
                }
              }
            }
          }
          else
          {
            if (v17 >= v11)
              v17 %= v11;
            if (v17 != v3)
              break;
          }
          v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_51:
  v25 = (char *)operator new(0x30uLL);
  v42[0] = v25;
  v42[1] = a1 + 16;
  v43 = 0;
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = v10;
  v26 = v25 + 16;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v26, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)a3;
    *((_QWORD *)v25 + 4) = *(_QWORD *)(a3 + 16);
  }
  *((_DWORD *)v25 + 10) = *(_DWORD *)(a3 + 24);
  v43 = 1;
  v27 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v28 = *(float *)(a1 + 32);
  if (!v11 || (float)(v28 * (float)v11) < v27)
  {
    v31 = 1;
    if (v11 >= 3)
      v31 = (v11 & (v11 - 1)) != 0;
    v32 = v31 | (2 * v11);
    v33 = vcvtps_u32_f32(v27 / v28);
    if (v32 <= v33)
      prime = v33;
    else
      prime = v32;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v35 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v35)
      goto LABEL_68;
    if (prime < *(_QWORD *)&v35)
    {
      v36 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v35 < 3uLL || (v37 = (uint8x8_t)vcnt_s8(v35), v37.i16[0] = vaddlv_u8(v37), v37.u32[0] > 1uLL))
      {
        v36 = std::__next_prime(v36);
      }
      else
      {
        v38 = 1 << -(char)__clz(v36 - 1);
        if (v36 >= 2)
          v36 = v38;
      }
      if (prime <= v36)
        prime = v36;
      if (prime < *(_QWORD *)&v35)
LABEL_68:
        sub_239427FE0(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    v39 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        v3 = v10 % v11;
        v29 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v10 % v11));
        v30 = (_QWORD *)v42[0];
        if (v29)
          goto LABEL_57;
      }
      else
      {
        v3 = v10;
        v29 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v10);
        v30 = (_QWORD *)v42[0];
        if (v29)
          goto LABEL_57;
      }
    }
    else
    {
      v3 = v39 & v10;
      v29 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v39 & v10));
      v30 = (_QWORD *)v42[0];
      if (v29)
        goto LABEL_57;
    }
LABEL_81:
    *v30 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v42[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v42[0])
    {
      v40 = *(_QWORD *)(*(_QWORD *)v42[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v40 >= v11)
          v40 %= v11;
      }
      else
      {
        v40 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v40) = v42[0];
    }
    goto LABEL_92;
  }
  v29 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  v30 = (_QWORD *)v42[0];
  if (!v29)
    goto LABEL_81;
LABEL_57:
  *v30 = *v29;
  *v29 = v42[0];
LABEL_92:
  v14 = (uint64_t *)v42[0];
  ++*(_QWORD *)(a1 + 24);
  return v14;
}

void sub_23972A4B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2394288F4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23972A4C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2394288F4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_23972A4E0(_QWORD *a1, uint64_t a2)
{
  _BYTE *v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int8x8_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  uint64_t *result;
  uint64_t **v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v2 = (_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v5 = v4;
  }
  v6 = sub_239428940((uint64_t)&v25, (uint64_t *)a2, v5);
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = v6;
  v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    v10 = v6;
    if (v6 >= *(_QWORD *)&v7)
      v10 = v6 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v6;
  }
  v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    v13 = *v12;
    if (*v12)
    {
      v14 = v2[23];
      if (v14 >= 0)
        v15 = v2[23];
      else
        v15 = *((_QWORD *)v2 + 1);
      if (v14 < 0)
        v2 = *(_BYTE **)v2;
      if (v9.u32[0] < 2uLL)
      {
        v16 = *(_QWORD *)&v7 - 1;
        while (1)
        {
          v21 = v13[1];
          if (v8 == v21)
          {
            v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0)
              v23 = *((unsigned __int8 *)v13 + 39);
            else
              v23 = v13[3];
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3]))
                  return v13;
              }
              else
              {
                if (!*((_BYTE *)v13 + 39))
                  return v13;
                v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24)
                    return v13;
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          result = 0;
          v13 = (uint64_t *)*v13;
          if (!v13)
            return result;
        }
      }
      while (1)
      {
        v17 = v13[1];
        if (v8 == v17)
        {
          v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0)
            v19 = *((unsigned __int8 *)v13 + 39);
          else
            v19 = v13[3];
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3]))
                return v13;
            }
            else
            {
              if (!*((_BYTE *)v13 + 39))
                return v13;
              v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20)
                  return v13;
              }
            }
          }
        }
        else
        {
          if (v17 >= *(_QWORD *)&v7)
            v17 %= *(_QWORD *)&v7;
          if (v17 != v10)
            return 0;
        }
        result = 0;
        v13 = (uint64_t *)*v13;
        if (!v13)
          return result;
      }
    }
  }
  return 0;
}

void sub_23972A70C(uint64_t a1@<X0>, _QWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v4;
  const char *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  int v19;
  std::string::size_type v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  std::string::size_type v34;
  std::string *v35;
  __int128 v36;
  std::string *v37;
  __int128 v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  std::string::size_type v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  std::string::size_type size;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  int8x16_t *v65;
  __int128 v66;
  unint64_t *v67;
  unint64_t v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  int8x16_t *v75;
  int8x16_t *v76;
  unint64_t v77;
  int8x16_t *v78;
  int8x16_t v79;
  unsigned int v80;
  uint64_t v81;
  int8x16_t *v82;
  __int128 v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  unsigned int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int8x16_t *v91;
  __int128 v92;
  unint64_t *v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  uint64_t v97;
  std::string::size_type v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  unint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  std::string::size_type v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  unint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  unint64_t v115;
  std::string::size_type v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  unint64_t v120;
  std::__shared_weak_count *v121;
  unint64_t *v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  int8x16_t *v126;
  __int128 v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  unsigned __int8 *v133;
  unsigned __int8 v134;
  unsigned __int8 v135;
  uint64_t v136;
  int v137;
  unint64_t v139;
  unint64_t v140;
  int64_t v141;
  std::string::size_type v142;
  size_t v143;
  std::string::size_type v144;
  std::string::size_type v145;
  std::string::size_type v146;
  unsigned __int8 *v147;
  _BYTE *v148;
  char v149;
  unint64_t v150;
  _OWORD *v151;
  __int128 *v152;
  unint64_t v153;
  __int128 v154;
  unsigned __int8 *v155;
  uint64_t *v156;
  unint64_t v157;
  uint64_t v158;
  std::string::size_type v159;
  unint64_t v160;
  int64_t v161;
  std::string::size_type v162;
  size_t v163;
  int64_t v164;
  std::string::size_type v165;
  unsigned __int8 *v166;
  _BYTE *v167;
  char v168;
  unsigned int v169;
  unint64_t v170;
  _OWORD *v171;
  __int128 *v172;
  unint64_t v173;
  __int128 v174;
  unsigned __int8 *v175;
  uint64_t *v176;
  unint64_t v177;
  uint64_t v178;
  std::string::size_type v179;
  uint64_t v180;
  uint64_t v181;
  int8x16_t *v182;
  __int128 v183;
  unint64_t *v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int8x16_t *v189;
  _QWORD *v190;
  uint64_t v191;
  int8x16_t *v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  std::string::size_type v196;
  std::__shared_weak_count *v197;
  unint64_t *v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int8x16_t *v202;
  __int128 v203;
  unint64_t *v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int8x16_t *v209;
  uint64_t v210;
  int8x16_t *v211;
  unsigned int v212;
  std::string::size_type v213;
  unint64_t *v214;
  unint64_t v215;
  int8x16_t *v216;
  unint64_t v217;
  int8x16_t *v218;
  unint64_t v219;
  int8x16_t v220;
  uint64_t v221;
  unint64_t *v222;
  __n128 v223;
  std::__shared_weak_count *v224;
  unint64_t *v225;
  unint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  _QWORD *exception;
  int8x16_t *v231;
  uint64_t v232;
  int8x16_t *v233;
  int8x16_t *v235;
  std::string v236;
  _BYTE v237[30];
  std::string v238;
  char v239;
  std::string v240;
  void *v241[2];
  char v242;
  char v243;
  void *v244;
  char v245;
  void *v246;
  char v247;
  char v248;
  char v249;
  void *__dst[2];
  char v251;
  char v252;
  void *v253;
  char v254;
  void *__p;
  char v256;
  char v257;
  char v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  char v262;
  char v263;
  void *v264;
  char v265;
  void *v266;
  char v267;
  char v268;
  char v269;
  char v270;
  unsigned int v271;
  std::string v272;
  int8x16_t *v273;
  uint64_t v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  uint64_t v279;
  char v280;
  char v281;
  std::string v282;
  void *v283[2];
  std::string::size_type v284;
  __int128 v285;
  __int128 v286;
  uint64_t v287;
  char v288;
  __int128 v289;
  uint64_t v290;
  uint64_t v291;
  __int128 v292;
  uint64_t v293;
  char v294;
  char v295;
  uint64_t v296;

  v4 = a3;
  v296 = *MEMORY[0x24BDAC8D0];
  v271 = a3;
  sub_23972C85C((uint64_t)&v260, a2);
  if (!v270)
  {
    v285 = v260;
    v9 = sub_23952329C(&v286, &v261);
    *(_OWORD *)a4 = v285;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (!v295)
    {
      *(_BYTE *)(a4 + 120) = 0;
      goto LABEL_478;
    }
    *(_BYTE *)(a4 + 40) = 0;
    if (v288)
    {
      *(_OWORD *)(a4 + 16) = *(_OWORD *)v9;
      *(_QWORD *)(a4 + 32) = *((_QWORD *)v9 + 2);
      *((_QWORD *)v9 + 1) = 0;
      *((_QWORD *)v9 + 2) = 0;
      *(_QWORD *)v9 = 0;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (!v294)
    {
      *(_BYTE *)(a4 + 112) = 1;
      *(_BYTE *)(a4 + 120) = 0;
      if (!v288)
        goto LABEL_478;
LABEL_78:
      if (SHIBYTE(v287) < 0)
        operator delete((void *)v286);
      goto LABEL_478;
    }
    v10 = v291;
    *(_QWORD *)(a4 + 64) = v290;
    *(_OWORD *)(a4 + 48) = v289;
    v289 = 0uLL;
    *(_QWORD *)(a4 + 72) = v10;
    *(_OWORD *)(a4 + 80) = v292;
    *(_QWORD *)(a4 + 96) = v293;
    v293 = 0;
    v290 = 0;
    v292 = 0uLL;
    *(_BYTE *)(a4 + 104) = 1;
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 120) = 0;
    if (SHIBYTE(v293) < 0)
    {
      operator delete((void *)v292);
      if ((SHIBYTE(v290) & 0x80000000) == 0)
      {
LABEL_10:
        if (!v288)
          goto LABEL_478;
        goto LABEL_78;
      }
    }
    else if ((SHIBYTE(v290) & 0x80000000) == 0)
    {
      goto LABEL_10;
    }
    operator delete((void *)v289);
    if (!v288)
      goto LABEL_478;
    goto LABEL_78;
  }
  v259 = v260;
  v7 = "NSt12experimental19bad_expected_accessIN4cv3d3esn5ErrorEEE";
  v8 = 0;
  switch(v4)
  {
    case 0u:
      v4 = DWORD1(v259);
      goto LABEL_26;
    case 1u:
      goto LABEL_15;
    case 2u:
      v8 = 1;
      goto LABEL_15;
    case 0x15u:
      v8 = 2;
LABEL_15:
      v7 = (char *)&unk_239ED5394 + 4 * v8;
      break;
    default:
      break;
  }
  if (v7 - (const char *)&unk_239ED5394 != 12)
  {
    if (DWORD1(v259) == v4)
    {
LABEL_26:
      LODWORD(v285) = v4;
      v16 = *(_QWORD *)(a1 + 24);
      if (!v16)
        sub_2394172E0();
      (*(void (**)(std::string *__return_ptr, uint64_t, char *, __int128 *))(*(_QWORD *)v16 + 48))(&v238, v16, (char *)&v259 + 8, &v285);
      if (v239)
      {
        v17 = sub_23972D134((uint64_t)&v238);
        v236.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250ADB1D0;
        *(_OWORD *)&v236.__r_.__value_.__r.__words[1] = *(_OWORD *)(v17 + 8);
        *(_QWORD *)(v17 + 8) = 0;
        *(_QWORD *)(v17 + 16) = 0;
        v18 = *(_OWORD *)(v17 + 24);
        *(_OWORD *)&v237[14] = *(_OWORD *)(v17 + 38);
        *(_OWORD *)v237 = v18;
        if (*(_DWORD *)&v237[24] != DWORD1(v259))
        {
          v227 = 274;
          goto LABEL_494;
        }
        if (*(_DWORD *)&v237[24] == 21)
        {
          v53 = v259;
          v272.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250ADCAF8;
          sub_2397303E8((uint64_t)&v236, (uint64_t)&v272.__r_.__value_.__l.__size_);
          if (v53)
          {
            if (((v279 * (unint64_t)v277) & 0x8000000000000000) != 0)
            {
              exception = __cxa_allocate_exception(8uLL);
              *exception = &unk_250AF2150;
              __cxa_throw(exception, (struct type_info *)&unk_250AF2168, (void (*)(void *))std::exception::~exception);
            }
            size = v272.__r_.__value_.__l.__size_;
            if (!v272.__r_.__value_.__l.__size_)
              goto LABEL_163;
            v55 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
            if (v272.__r_.__value_.__r.__words[2])
            {
              v56 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
              do
                v57 = __ldxr(v56);
              while (__stxr(v57 + 1, v56));
              do
                v58 = __ldaxr(v56);
              while (__stlxr(v58 - 1, v56));
              if (!v58)
              {
                ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
                std::__shared_weak_count::__release_weak(v55);
              }
              v59 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
              size = v272.__r_.__value_.__l.__size_;
              if (v272.__r_.__value_.__r.__words[2])
              {
                v60 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                do
                  v61 = __ldxr(v60);
                while (__stxr(v61 + 1, v60));
                do
                  v62 = __ldaxr(v60);
                while (__stlxr(v62 - 1, v60));
                if (!v62)
                {
                  ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
                  std::__shared_weak_count::__release_weak(v59);
                }
              }
            }
            if (v281)
              (*(void (**)(__int128 *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)size + 96))(&v285, size, 1);
            else
LABEL_163:
              *(_QWORD *)&v285 = 0;
            if ((_DWORD)v274)
            {
              if (HIDWORD(v274))
              {
                v80 = v275;
                if (v275)
                {
                  v81 = v278;
                  v82 = v273;
                  if (v280 && v273)
                  {
                    v83 = *(_OWORD *)&v272.__r_.__value_.__r.__words[1];
                    if (v272.__r_.__value_.__r.__words[2])
                    {
                      v84 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                      do
                        v85 = __ldxr(v84);
                      while (__stxr(v85 + 1, v84));
                      do
                        v86 = __ldaxr(v84);
                      while (__stlxr(v86 - 1, v84));
                      if (!v86)
                      {
                        (*(void (**)(_QWORD))(**((_QWORD **)&v83 + 1) + 16))(*((_QWORD *)&v83 + 1));
                        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v83 + 1));
                      }
                    }
                    (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v83 + 88))(v83, 1, "unknown location");
                    v82 = v273;
                  }
                  v87 = v80 - 1;
                  if (v80 != 1)
                  {
                    do
                    {
                      std::istream::read();
                      v82 = (int8x16_t *)((char *)v82 + v81);
                      --v87;
                    }
                    while (v87);
                  }
                  std::istream::read();
                }
              }
            }
            v88 = v285;
            *(_QWORD *)&v285 = 0;
            if (v88)
              (*(void (**)(uint64_t))(*(_QWORD *)v88 + 8))(v88);
          }
          else
          {
            memset(&v282, 0, sizeof(v282));
            v107 = v272.__r_.__value_.__l.__size_;
            if (!v272.__r_.__value_.__l.__size_)
              goto LABEL_379;
            v108 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
            if (v272.__r_.__value_.__r.__words[2])
            {
              v109 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
              do
                v110 = __ldxr(v109);
              while (__stxr(v110 + 1, v109));
              do
                v111 = __ldaxr(v109);
              while (__stlxr(v111 - 1, v109));
              if (!v111)
              {
                ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
                std::__shared_weak_count::__release_weak(v108);
              }
              v112 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
              v107 = v272.__r_.__value_.__l.__size_;
              if (v272.__r_.__value_.__r.__words[2])
              {
                v113 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                do
                  v114 = __ldxr(v113);
                while (__stxr(v114 + 1, v113));
                do
                  v115 = __ldaxr(v113);
                while (__stlxr(v115 - 1, v113));
                if (!v115)
                {
                  ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
                  std::__shared_weak_count::__release_weak(v112);
                }
              }
            }
            if (v281)
              (*(void (**)(std::string *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v107 + 96))(&v240, v107, 1);
            else
LABEL_379:
              v240.__r_.__value_.__r.__words[0] = 0;
            v180 = v278;
            v181 = v279;
            v182 = v273;
            if (v280 && v273)
            {
              v183 = *(_OWORD *)&v272.__r_.__value_.__r.__words[1];
              if (v272.__r_.__value_.__r.__words[2])
              {
                v184 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                do
                  v185 = __ldxr(v184);
                while (__stxr(v185 + 1, v184));
                do
                  v186 = __ldaxr(v184);
                while (__stlxr(v186 - 1, v184));
                if (!v186)
                {
                  (*(void (**)(_QWORD))(**((_QWORD **)&v183 + 1) + 16))(*((_QWORD *)&v183 + 1));
                  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v183 + 1));
                }
              }
              (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v183 + 88))(v183, 1, "unknown location");
              v182 = v273;
            }
            v187 = (v180 * HIDWORD(v181));
            if ((_DWORD)v187)
            {
              v188 = (3 * v181);
              if (3 * (_DWORD)v181)
              {
                v189 = (int8x16_t *)((char *)v182 + v187);
                v190 = a2 + 4;
                v191 = MEMORY[0x24BDAC740];
                do
                {
                  v192 = v182;
                  do
                  {
                    v192->i8[0] = sub_23972F8B4((uint64_t)&v282, a2);
                    std::istream::tellg();
                    while ((*((_BYTE *)v190 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
                    {
                      v193 = std::istream::peek();
                      if (v193 <= 0x7F)
                      {
                        if ((*(_DWORD *)(v191 + 4 * v193 + 60) & 0x4000) == 0)
                          break;
                      }
                      else if (!__maskrune(v193, 0x4000uLL))
                      {
                        break;
                      }
                      std::istream::seekg();
                    }
                    std::istream::tellg();
                    v192->i8[1] = sub_23972F8B4((uint64_t)&v282, a2);
                    std::istream::tellg();
                    while ((*((_BYTE *)v190 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
                    {
                      v194 = std::istream::peek();
                      if (v194 <= 0x7F)
                      {
                        if ((*(_DWORD *)(v191 + 4 * v194 + 60) & 0x4000) == 0)
                          break;
                      }
                      else if (!__maskrune(v194, 0x4000uLL))
                      {
                        break;
                      }
                      std::istream::seekg();
                    }
                    std::istream::tellg();
                    v192->i8[2] = sub_23972F8B4((uint64_t)&v282, a2);
                    std::istream::tellg();
                    while ((*((_BYTE *)v190 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
                    {
                      v195 = std::istream::peek();
                      if (v195 <= 0x7F)
                      {
                        if ((*(_DWORD *)(v191 + 4 * v195 + 60) & 0x4000) == 0)
                          break;
                      }
                      else if (!__maskrune(v195, 0x4000uLL))
                      {
                        break;
                      }
                      std::istream::seekg();
                    }
                    std::istream::tellg();
                    v192 = (int8x16_t *)((char *)v192 + 3);
                  }
                  while (v192 != (int8x16_t *)&v182->i8[v188]);
                  v182 = (int8x16_t *)((char *)v182 + v180);
                }
                while (v182 != v189);
              }
            }
            v196 = v240.__r_.__value_.__r.__words[0];
            v240.__r_.__value_.__r.__words[0] = 0;
            if (v196)
              (*(void (**)(std::string::size_type))(*(_QWORD *)v196 + 8))(v196);
            if (v282.__r_.__value_.__r.__words[0])
            {
              v282.__r_.__value_.__l.__size_ = v282.__r_.__value_.__r.__words[0];
              operator delete(v282.__r_.__value_.__l.__data_);
            }
          }
          v197 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
          if (!v272.__r_.__value_.__r.__words[2])
            goto LABEL_471;
          v198 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
          do
            v199 = __ldaxr(v198);
          while (__stlxr(v199 - 1, v198));
          goto LABEL_469;
        }
        if (*(_DWORD *)&v237[24] != 2)
        {
          if (*(_DWORD *)&v237[24] == 1)
          {
            v19 = v259;
            v272.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250ADB3D0;
            sub_239419AD8((uint64_t)&v236, (uint64_t)&v272.__r_.__value_.__l.__size_);
            if (v19)
            {
              if (((v274 * (unint64_t)v275) & 0x8000000000000000) != 0)
              {
                v228 = __cxa_allocate_exception(8uLL);
                *v228 = &unk_250AF2150;
                __cxa_throw(v228, (struct type_info *)&unk_250AF2168, (void (*)(void *))std::exception::~exception);
              }
              v20 = v272.__r_.__value_.__l.__size_;
              if (!v272.__r_.__value_.__l.__size_)
                goto LABEL_181;
              v21 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
              if (v272.__r_.__value_.__r.__words[2])
              {
                v22 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                do
                  v23 = __ldxr(v22);
                while (__stxr(v23 + 1, v22));
                do
                  v24 = __ldaxr(v22);
                while (__stlxr(v24 - 1, v22));
                if (!v24)
                {
                  ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
                  std::__shared_weak_count::__release_weak(v21);
                }
                v25 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
                v20 = v272.__r_.__value_.__l.__size_;
                if (v272.__r_.__value_.__r.__words[2])
                {
                  v26 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                  do
                    v27 = __ldxr(v26);
                  while (__stxr(v27 + 1, v26));
                  do
                    v28 = __ldaxr(v26);
                  while (__stlxr(v28 - 1, v26));
                  if (!v28)
                  {
                    ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                    std::__shared_weak_count::__release_weak(v25);
                  }
                }
              }
              if (BYTE1(v277))
                (*(void (**)(__int128 *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v20 + 96))(&v285, v20, 1);
              else
LABEL_181:
                *(_QWORD *)&v285 = 0;
              if ((_DWORD)v274)
              {
                v89 = HIDWORD(v274);
                if (HIDWORD(v274))
                {
                  v90 = v276;
                  v91 = v273;
                  if ((_BYTE)v277 && v273)
                  {
                    v92 = *(_OWORD *)&v272.__r_.__value_.__r.__words[1];
                    if (v272.__r_.__value_.__r.__words[2])
                    {
                      v93 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                      do
                        v94 = __ldxr(v93);
                      while (__stxr(v94 + 1, v93));
                      do
                        v95 = __ldaxr(v93);
                      while (__stlxr(v95 - 1, v93));
                      if (!v95)
                      {
                        (*(void (**)(_QWORD))(**((_QWORD **)&v92 + 1) + 16))(*((_QWORD *)&v92 + 1));
                        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v92 + 1));
                      }
                    }
                    (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v92 + 88))(v92, 1, "unknown location");
                    v91 = v273;
                  }
                  v96 = v89 - 1;
                  if (v89 != 1)
                  {
                    do
                    {
                      std::istream::read();
                      v91 = (int8x16_t *)((char *)v91 + v90);
                      --v96;
                    }
                    while (v96);
                  }
                  std::istream::read();
                }
              }
              v97 = v285;
              *(_QWORD *)&v285 = 0;
              if (v97)
                (*(void (**)(uint64_t))(*(_QWORD *)v97 + 8))(v97);
            }
            else
            {
              memset(&v282, 0, sizeof(v282));
              v116 = v272.__r_.__value_.__l.__size_;
              if (!v272.__r_.__value_.__l.__size_)
                goto LABEL_424;
              v117 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
              if (v272.__r_.__value_.__r.__words[2])
              {
                v118 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                do
                  v119 = __ldxr(v118);
                while (__stxr(v119 + 1, v118));
                do
                  v120 = __ldaxr(v118);
                while (__stlxr(v120 - 1, v118));
                if (!v120)
                {
                  ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
                  std::__shared_weak_count::__release_weak(v117);
                }
                v121 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
                v116 = v272.__r_.__value_.__l.__size_;
                if (v272.__r_.__value_.__r.__words[2])
                {
                  v122 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                  do
                    v123 = __ldxr(v122);
                  while (__stxr(v123 + 1, v122));
                  do
                    v124 = __ldaxr(v122);
                  while (__stlxr(v124 - 1, v122));
                  if (!v124)
                  {
                    ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
                    std::__shared_weak_count::__release_weak(v121);
                  }
                }
              }
              if (BYTE1(v277))
                (*(void (**)(std::string *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v116 + 96))(&v240, v116, 1);
              else
LABEL_424:
                v240.__r_.__value_.__r.__words[0] = 0;
              v200 = v276;
              v201 = v274;
              v202 = v273;
              if ((_BYTE)v277 && v273)
              {
                v203 = *(_OWORD *)&v272.__r_.__value_.__r.__words[1];
                if (v272.__r_.__value_.__r.__words[2])
                {
                  v204 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                  do
                    v205 = __ldxr(v204);
                  while (__stxr(v205 + 1, v204));
                  do
                    v206 = __ldaxr(v204);
                  while (__stlxr(v206 - 1, v204));
                  if (!v206)
                  {
                    (*(void (**)(_QWORD))(**((_QWORD **)&v203 + 1) + 16))(*((_QWORD *)&v203 + 1));
                    std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v203 + 1));
                  }
                }
                (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v203 + 88))(v203, 1, "unknown location");
                v202 = v273;
              }
              v207 = (v200 * HIDWORD(v201));
              if ((_DWORD)v207)
              {
                v208 = v201;
                if ((_DWORD)v201)
                {
                  v209 = (int8x16_t *)((char *)v202 + v207);
                  v210 = MEMORY[0x24BDAC740];
                  do
                  {
                    v211 = v202;
                    do
                    {
                      v211->i8[0] = sub_23972F8B4((uint64_t)&v282, a2);
                      std::istream::tellg();
                      while ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0)
                      {
                        v212 = std::istream::peek();
                        if (v212 <= 0x7F)
                        {
                          if ((*(_DWORD *)(v210 + 4 * v212 + 60) & 0x4000) == 0)
                            break;
                        }
                        else if (!__maskrune(v212, 0x4000uLL))
                        {
                          break;
                        }
                        std::istream::seekg();
                      }
                      std::istream::tellg();
                      v211 = (int8x16_t *)((char *)v211 + 1);
                    }
                    while (v211 != (int8x16_t *)&v202->i8[v208]);
                    v202 = (int8x16_t *)((char *)v202 + v200);
                  }
                  while (v202 != v209);
                }
              }
              v213 = v240.__r_.__value_.__r.__words[0];
              v240.__r_.__value_.__r.__words[0] = 0;
              if (v213)
                (*(void (**)(std::string::size_type))(*(_QWORD *)v213 + 8))(v213);
              if (v282.__r_.__value_.__r.__words[0])
              {
                v282.__r_.__value_.__l.__size_ = v282.__r_.__value_.__r.__words[0];
                operator delete(v282.__r_.__value_.__l.__data_);
              }
            }
            v197 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
            if (!v272.__r_.__value_.__r.__words[2])
              goto LABEL_471;
            v214 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
            do
              v199 = __ldaxr(v214);
            while (__stlxr(v199 - 1, v214));
            goto LABEL_469;
          }
          v227 = 283;
LABEL_494:
          sub_239A444D4((uint64_t)"unknown file", v227, (uint64_t)"", (void (*)(void *))sub_239A4463C);
          sub_239A4475C();
          abort();
        }
        v42 = v259;
        v272.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AE4080;
        sub_23972FE3C((uint64_t)&v236, (uint64_t)&v272.__r_.__value_.__l.__size_);
        if (v42)
        {
          v43 = v274;
          if (((2 * v275 * (unint64_t)v274) & 0x8000000000000000) != 0)
          {
            v229 = __cxa_allocate_exception(8uLL);
            *v229 = &unk_250AF2150;
            __cxa_throw(v229, (struct type_info *)&unk_250AF2168, (void (*)(void *))std::exception::~exception);
          }
          v44 = v272.__r_.__value_.__l.__size_;
          if (!v272.__r_.__value_.__l.__size_)
            goto LABEL_140;
          v45 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
          if (v272.__r_.__value_.__r.__words[2])
          {
            v46 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
            do
              v47 = __ldxr(v46);
            while (__stxr(v47 + 1, v46));
            do
              v48 = __ldaxr(v46);
            while (__stlxr(v48 - 1, v46));
            if (!v48)
            {
              ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
              std::__shared_weak_count::__release_weak(v45);
            }
            v49 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
            v44 = v272.__r_.__value_.__l.__size_;
            if (v272.__r_.__value_.__r.__words[2])
            {
              v50 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
              do
                v51 = __ldxr(v50);
              while (__stxr(v51 + 1, v50));
              do
                v52 = __ldaxr(v50);
              while (__stlxr(v52 - 1, v50));
              if (!v52)
              {
                ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
                std::__shared_weak_count::__release_weak(v49);
              }
            }
          }
          if (BYTE1(v277))
            (*(void (**)(__int128 *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v44 + 96))(&v285, v44, 1);
          else
LABEL_140:
            *(_QWORD *)&v285 = 0;
          if ((_DWORD)v274)
          {
            v63 = HIDWORD(v274);
            if (HIDWORD(v274))
            {
              v64 = v276;
              v65 = v273;
              if ((_BYTE)v277 && v273)
              {
                v66 = *(_OWORD *)&v272.__r_.__value_.__r.__words[1];
                if (v272.__r_.__value_.__r.__words[2])
                {
                  v67 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
                  do
                    v68 = __ldxr(v67);
                  while (__stxr(v68 + 1, v67));
                  do
                    v69 = __ldaxr(v67);
                  while (__stlxr(v69 - 1, v67));
                  if (!v69)
                  {
                    (*(void (**)(_QWORD))(**((_QWORD **)&v66 + 1) + 16))(*((_QWORD *)&v66 + 1));
                    std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v66 + 1));
                  }
                }
                (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v66 + 88))(v66, 1, "unknown location");
                v65 = v273;
              }
              v70 = v63 - 1;
              v71 = v43;
              if (v63 != 1)
              {
                if ((_DWORD)v43)
                {
                  v72 = 0;
                  v73 = (v43 - 1) & 0x7FFFFFFFFFFFFFFFLL;
                  v74 = (v73 + 1) & 0xFFFFFFFFFFFFFFF0;
                  v75 = v65 + 1;
                  while (1)
                  {
                    std::istream::read();
                    if (!v65)
                      break;
                    v76 = v65;
                    if (v73 < 0xF)
                      goto LABEL_500;
                    v76 = (int8x16_t *)((char *)v65 + 2 * v74);
                    v77 = (v73 + 1) & 0xFFFFFFFFFFFFFFF0;
                    v78 = v75;
                    do
                    {
                      v79 = vrev16q_s8(*v78);
                      v78[-1] = vrev16q_s8(v78[-1]);
                      *v78 = v79;
                      v78 += 2;
                      v77 -= 16;
                    }
                    while (v77);
                    if (v73 + 1 != v74)
                    {
LABEL_500:
                      do
                      {
                        v76->i16[0] = bswap32(v76->u16[0]) >> 16;
                        v76 = (int8x16_t *)((char *)v76 + 2);
                      }
                      while (v76 != (int8x16_t *)((char *)v65 + 2 * v71));
                    }
                    v65 = (int8x16_t *)((char *)v65 + 2 * v64);
                    ++v72;
                    v75 = (int8x16_t *)((char *)v75 + 2 * v64);
                    if (v72 == v70)
                      goto LABEL_456;
                  }
LABEL_491:
                  sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
                  sub_239A4475C();
                  abort();
                }
                do
                {
                  std::istream::read();
                  v65 = (int8x16_t *)((char *)v65 + 2 * v64);
                  --v70;
                }
                while (v70);
              }
LABEL_456:
              std::istream::read();
              if ((_DWORD)v71 && !v65)
                goto LABEL_491;
              if ((_DWORD)v71)
              {
                v215 = (v71 - 1) & 0x7FFFFFFFFFFFFFFFLL;
                v216 = v65;
                if (v215 < 0xF)
                  goto LABEL_501;
                v217 = v215 + 1;
                v216 = (int8x16_t *)((char *)v65 + 2 * (v217 & 0xFFFFFFFFFFFFFFF0));
                v218 = v65 + 1;
                v219 = v217 & 0xFFFFFFFFFFFFFFF0;
                do
                {
                  v220 = vrev16q_s8(*v218);
                  v218[-1] = vrev16q_s8(v218[-1]);
                  *v218 = v220;
                  v218 += 2;
                  v219 -= 16;
                }
                while (v219);
                if (v217 != (v217 & 0xFFFFFFFFFFFFFFF0))
                {
LABEL_501:
                  do
                  {
                    v216->i16[0] = bswap32(v216->u16[0]) >> 16;
                    v216 = (int8x16_t *)((char *)v216 + 2);
                  }
                  while (v216 != (int8x16_t *)((char *)v65 + 2 * v71));
                }
              }
            }
          }
          v221 = v285;
          *(_QWORD *)&v285 = 0;
          if (v221)
            (*(void (**)(uint64_t))(*(_QWORD *)v221 + 8))(v221);
          goto LABEL_466;
        }
        memset(&v282, 0, sizeof(v282));
        v98 = v272.__r_.__value_.__l.__size_;
        if (!v272.__r_.__value_.__l.__size_)
          goto LABEL_273;
        v99 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
        if (v272.__r_.__value_.__r.__words[2])
        {
          v100 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
          do
            v101 = __ldxr(v100);
          while (__stxr(v101 + 1, v100));
          do
            v102 = __ldaxr(v100);
          while (__stlxr(v102 - 1, v100));
          if (!v102)
          {
            ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
            std::__shared_weak_count::__release_weak(v99);
          }
          v103 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
          v98 = v272.__r_.__value_.__l.__size_;
          if (v272.__r_.__value_.__r.__words[2])
          {
            v104 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
            do
              v105 = __ldxr(v104);
            while (__stxr(v105 + 1, v104));
            do
              v106 = __ldaxr(v104);
            while (__stlxr(v106 - 1, v104));
            if (!v106)
            {
              ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
              std::__shared_weak_count::__release_weak(v103);
            }
          }
        }
        if (BYTE1(v277))
          (*(void (**)(std::string *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v98 + 96))(&v240, v98, 1);
        else
LABEL_273:
          v240.__r_.__value_.__r.__words[0] = 0;
        v232 = v276;
        v125 = v274;
        v126 = v273;
        if ((_BYTE)v277 && v273)
        {
          v127 = *(_OWORD *)&v272.__r_.__value_.__r.__words[1];
          if (v272.__r_.__value_.__r.__words[2])
          {
            v128 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
            do
              v129 = __ldxr(v128);
            while (__stxr(v129 + 1, v128));
            do
              v130 = __ldaxr(v128);
            while (__stlxr(v130 - 1, v128));
            if (!v130)
            {
              (*(void (**)(_QWORD))(**((_QWORD **)&v127 + 1) + 16))(*((_QWORD *)&v127 + 1));
              std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v127 + 1));
            }
          }
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v127 + 88))(v127, 1, "unknown location");
          v126 = v273;
        }
        if (!((_DWORD)v232 * HIDWORD(v125)) || !(_DWORD)v125)
        {
LABEL_375:
          v179 = v240.__r_.__value_.__r.__words[0];
          v240.__r_.__value_.__r.__words[0] = 0;
          if (v179)
            (*(void (**)(std::string::size_type))(*(_QWORD *)v179 + 8))(v179);
          if (v282.__r_.__value_.__r.__words[0])
            operator delete(v282.__r_.__value_.__l.__data_);
LABEL_466:
          v197 = (std::__shared_weak_count *)v272.__r_.__value_.__r.__words[2];
          if (!v272.__r_.__value_.__r.__words[2])
          {
LABEL_471:
            nullsub_4(&v272);
            *(_BYTE *)(a4 + 120) = 1;
            v223 = nullsub_4(v237);
            v224 = (std::__shared_weak_count *)v236.__r_.__value_.__r.__words[2];
            if (v236.__r_.__value_.__r.__words[2])
            {
              v225 = (unint64_t *)(v236.__r_.__value_.__r.__words[2] + 8);
              do
                v226 = __ldaxr(v225);
              while (__stlxr(v226 - 1, v225));
              if (!v226)
              {
                ((void (*)(std::__shared_weak_count *, __n128))v224->__on_zero_shared)(v224, v223);
                std::__shared_weak_count::__release_weak(v224);
              }
            }
            nullsub_4(&v236);
            goto LABEL_477;
          }
          v222 = (unint64_t *)(v272.__r_.__value_.__r.__words[2] + 8);
          do
            v199 = __ldaxr(v222);
          while (__stlxr(v199 - 1, v222));
LABEL_469:
          if (!v199)
          {
            ((void (*)(std::__shared_weak_count *))v197->__on_zero_shared)(v197);
            std::__shared_weak_count::__release_weak(v197);
          }
          goto LABEL_471;
        }
        v131 = a2 + 4;
        v132 = v282.__r_.__value_.__l.__size_;
        v133 = (unsigned __int8 *)v282.__r_.__value_.__r.__words[0];
        v231 = (int8x16_t *)((char *)v126 + 2 * (v232 * HIDWORD(v125)));
LABEL_287:
        v235 = (int8x16_t *)((char *)v126 + 2 * v125);
        v233 = v126;
        while (1)
        {
          if ((unsigned __int8 *)v132 != v133)
            v282.__r_.__value_.__l.__size_ = (std::string::size_type)v133;
          v134 = std::istream::peek();
          if ((*((_BYTE *)v131 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
          {
            v135 = v134;
            while (1)
            {
              v136 = 0;
              strcpy((char *)&v285, "0123456789");
              BYTE7(v286) = 10;
              do
                v137 = *((unsigned __int8 *)&v285 + v136);
              while (v137 != v135 && v136++ != 9);
              if (v137 != v135)
                goto LABEL_335;
              if ((unint64_t)v133 >= v282.__r_.__value_.__r.__words[2])
                break;
              *v133++ = v135;
LABEL_319:
              v282.__r_.__value_.__l.__size_ = (std::string::size_type)v133;
              std::istream::seekg();
              v135 = std::istream::peek();
              if ((*((_BYTE *)v131 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                goto LABEL_335;
            }
            v139 = v282.__r_.__value_.__r.__words[0];
            v140 = (unint64_t)&v133[-v282.__r_.__value_.__r.__words[0]];
            v141 = (int64_t)&v133[-v282.__r_.__value_.__r.__words[0] + 1];
            if (v141 < 0)
              goto LABEL_489;
            v142 = v282.__r_.__value_.__r.__words[2] - v282.__r_.__value_.__r.__words[0];
            if (2 * (v282.__r_.__value_.__r.__words[2] - v282.__r_.__value_.__r.__words[0]) > v141)
              v141 = 2 * v142;
            if (v142 >= 0x3FFFFFFFFFFFFFFFLL)
              v143 = 0x7FFFFFFFFFFFFFFFLL;
            else
              v143 = v141;
            if (v143)
            {
              v144 = (std::string::size_type)operator new(v143);
              v145 = v144 + v140;
              *(_BYTE *)(v144 + v140) = v135;
              v146 = v144 + v140 + 1;
              if (v133 != (unsigned __int8 *)v139)
              {
LABEL_309:
                if (v140 < 8
                  || v144 + v140 + v139 - (_QWORD)v133 > v144 + v140 - 1
                  || v139 > (unint64_t)(v133 - 1)
                  || v139 - v144 < 0x20)
                {
                  v147 = v133;
                }
                else if (v140 >= 0x20)
                {
                  v150 = v140 & 0xFFFFFFFFFFFFFFE0;
                  v151 = (_OWORD *)(v144 + v140 - 16);
                  v152 = (__int128 *)(v133 - 16);
                  v153 = v140 & 0xFFFFFFFFFFFFFFE0;
                  do
                  {
                    v154 = *v152;
                    *(v151 - 1) = *(v152 - 1);
                    *v151 = v154;
                    v151 -= 2;
                    v152 -= 2;
                    v153 -= 32;
                  }
                  while (v153);
                  if (v140 == v150)
                    goto LABEL_313;
                  if ((v140 & 0x18) != 0)
                    goto LABEL_330;
                  v145 -= v150;
                  v147 = &v133[-v150];
                }
                else
                {
                  v150 = 0;
LABEL_330:
                  v147 = &v133[-(v140 & 0xFFFFFFFFFFFFFFF8)];
                  v145 -= v140 & 0xFFFFFFFFFFFFFFF8;
                  v155 = &v133[-v150 - v139 - 8 + v144];
                  v156 = (uint64_t *)&v133[-v150 - 8];
                  v157 = v150 - (v140 & 0xFFFFFFFFFFFFFFF8);
                  do
                  {
                    v158 = *v156--;
                    *(_QWORD *)v155 = v158;
                    v155 -= 8;
                    v157 += 8;
                  }
                  while (v157);
                  if (v140 == (v140 & 0xFFFFFFFFFFFFFFF8))
                  {
LABEL_313:
                    v133 = (unsigned __int8 *)v282.__r_.__value_.__r.__words[0];
                    v282.__r_.__value_.__r.__words[0] = v144;
                    v282.__r_.__value_.__l.__size_ = v146;
                    v282.__r_.__value_.__r.__words[2] = v144 + v143;
                    if (!v133)
                      goto LABEL_318;
LABEL_317:
                    operator delete(v133);
LABEL_318:
                    v133 = (unsigned __int8 *)v146;
                    goto LABEL_319;
                  }
                }
                v148 = (_BYTE *)(v145 - 1);
                do
                {
                  v149 = *--v147;
                  *v148-- = v149;
                }
                while (v147 != (unsigned __int8 *)v139);
                goto LABEL_313;
              }
            }
            else
            {
              v144 = 0;
              v145 = (std::string::size_type)&v133[-v282.__r_.__value_.__r.__words[0]];
              *(_BYTE *)v140 = v135;
              v146 = v140 + 1;
              if (v133 != (unsigned __int8 *)v139)
                goto LABEL_309;
            }
            v282.__r_.__value_.__r.__words[0] = v145;
            v282.__r_.__value_.__l.__size_ = v146;
            v282.__r_.__value_.__r.__words[2] = v144 + v143;
            if (v133)
              goto LABEL_317;
            goto LABEL_318;
          }
LABEL_335:
          if ((unint64_t)v133 < v282.__r_.__value_.__r.__words[2])
          {
            *v133 = 10;
            v132 = (uint64_t)(v133 + 1);
            goto LABEL_355;
          }
          v159 = v282.__r_.__value_.__r.__words[0];
          v160 = (unint64_t)&v133[-v282.__r_.__value_.__r.__words[0]];
          v161 = (int64_t)&v133[-v282.__r_.__value_.__r.__words[0] + 1];
          if (v161 < 0)
LABEL_489:
            sub_2394189F8();
          v162 = v282.__r_.__value_.__r.__words[2] - v282.__r_.__value_.__r.__words[0];
          if (2 * (v282.__r_.__value_.__r.__words[2] - v282.__r_.__value_.__r.__words[0]) > v161)
            v161 = 2 * v162;
          if (v162 >= 0x3FFFFFFFFFFFFFFFLL)
            v163 = 0x7FFFFFFFFFFFFFFFLL;
          else
            v163 = v161;
          if (v163)
          {
            v164 = (int64_t)operator new(v163);
            v165 = v164 + v160;
            *(_BYTE *)(v164 + v160) = 10;
            v132 = v164 + v160 + 1;
            if (v133 == (unsigned __int8 *)v159)
              goto LABEL_353;
          }
          else
          {
            v164 = 0;
            v165 = (std::string::size_type)&v133[-v282.__r_.__value_.__r.__words[0]];
            *(_BYTE *)v160 = 10;
            v132 = v160 + 1;
            if (v133 == (unsigned __int8 *)v159)
            {
LABEL_353:
              v282.__r_.__value_.__r.__words[0] = v165;
              v282.__r_.__value_.__l.__size_ = v132;
              v282.__r_.__value_.__r.__words[2] = v164 + v163;
              if (!v133)
                goto LABEL_355;
LABEL_354:
              operator delete(v133);
              goto LABEL_355;
            }
          }
          if (v160 < 8 || v159 - v164 < 0x20)
          {
            v166 = v133;
            goto LABEL_348;
          }
          if (v160 >= 0x20)
          {
            v170 = v160 & 0xFFFFFFFFFFFFFFE0;
            v171 = (_OWORD *)(v164 + v160 - 16);
            v172 = (__int128 *)(v133 - 16);
            v173 = v160 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v174 = *v172;
              *(v171 - 1) = *(v172 - 1);
              *v171 = v174;
              v171 -= 2;
              v172 -= 2;
              v173 -= 32;
            }
            while (v173);
            if (v160 == v170)
              goto LABEL_350;
            if ((v160 & 0x18) == 0)
            {
              v165 -= v170;
              v166 = &v133[-v170];
LABEL_348:
              v167 = (_BYTE *)(v165 - 1);
              do
              {
                v168 = *--v166;
                *v167-- = v168;
              }
              while (v166 != (unsigned __int8 *)v159);
              goto LABEL_350;
            }
          }
          else
          {
            v170 = 0;
          }
          v166 = &v133[-(v160 & 0xFFFFFFFFFFFFFFF8)];
          v165 -= v160 & 0xFFFFFFFFFFFFFFF8;
          v175 = &v133[-v170 - v159 - 8 + v164];
          v176 = (uint64_t *)&v133[-v170 - 8];
          v177 = v170 - (v160 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            v178 = *v176--;
            *(_QWORD *)v175 = v178;
            v175 -= 8;
            v177 += 8;
          }
          while (v177);
          if (v160 != (v160 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_348;
LABEL_350:
          v133 = (unsigned __int8 *)v282.__r_.__value_.__r.__words[0];
          v282.__r_.__value_.__r.__words[0] = v164;
          v282.__r_.__value_.__l.__size_ = v132;
          v282.__r_.__value_.__r.__words[2] = v164 + v163;
          if (v133)
            goto LABEL_354;
LABEL_355:
          v282.__r_.__value_.__l.__size_ = v132;
          v133 = (unsigned __int8 *)v282.__r_.__value_.__r.__words[0];
          v126->i16[0] = atoi(v282.__r_.__value_.__l.__data_);
          std::istream::tellg();
          while ((*((_BYTE *)v131 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
          {
            v169 = std::istream::peek();
            if (v169 <= 0x7F)
            {
              if ((*(_DWORD *)(MEMORY[0x24BDAC740] + 4 * v169 + 60) & 0x4000) == 0)
                break;
            }
            else if (!__maskrune(v169, 0x4000uLL))
            {
              break;
            }
            std::istream::seekg();
          }
          std::istream::tellg();
          v126 = (int8x16_t *)((char *)v126 + 2);
          if (v126 == v235)
          {
            v126 = (int8x16_t *)((char *)v233 + 2 * v232);
            if (v126 == v231)
              goto LABEL_375;
            goto LABEL_287;
          }
        }
      }
      v285 = *(_OWORD *)&v238.__r_.__value_.__l.__data_;
      v40 = sub_23952329C(&v286, (__int128 *)&v238.__r_.__value_.__r.__words[2]);
      *(_OWORD *)a4 = v285;
      *(_BYTE *)(a4 + 16) = 0;
      *(_BYTE *)(a4 + 112) = 0;
      if (v295)
      {
        *(_BYTE *)(a4 + 40) = 0;
        if (v288)
        {
          *(_OWORD *)(a4 + 16) = *(_OWORD *)v40;
          *(_QWORD *)(a4 + 32) = *((_QWORD *)v40 + 2);
          *((_QWORD *)v40 + 1) = 0;
          *((_QWORD *)v40 + 2) = 0;
          *(_QWORD *)v40 = 0;
          *(_BYTE *)(a4 + 40) = 1;
        }
        *(_BYTE *)(a4 + 48) = 0;
        *(_BYTE *)(a4 + 104) = 0;
        if (!v294)
        {
          *(_BYTE *)(a4 + 112) = 1;
          *(_BYTE *)(a4 + 120) = 0;
          if (!v288)
            goto LABEL_477;
          goto LABEL_271;
        }
        v41 = v291;
        *(_QWORD *)(a4 + 64) = v290;
        *(_OWORD *)(a4 + 48) = v289;
        v289 = 0uLL;
        *(_QWORD *)(a4 + 72) = v41;
        *(_OWORD *)(a4 + 80) = v292;
        *(_QWORD *)(a4 + 96) = v293;
        v293 = 0;
        v290 = 0;
        v292 = 0uLL;
        *(_BYTE *)(a4 + 104) = 1;
        *(_BYTE *)(a4 + 112) = 1;
        *(_BYTE *)(a4 + 120) = 0;
        if (SHIBYTE(v293) < 0)
        {
          operator delete((void *)v292);
          if ((SHIBYTE(v290) & 0x80000000) == 0)
          {
LABEL_69:
            if (!v288)
              goto LABEL_477;
LABEL_271:
            if (SHIBYTE(v287) < 0)
              operator delete((void *)v286);
            goto LABEL_477;
          }
        }
        else if ((SHIBYTE(v290) & 0x80000000) == 0)
        {
          goto LABEL_69;
        }
        operator delete((void *)v289);
        if (v288)
          goto LABEL_271;
      }
      else
      {
        *(_BYTE *)(a4 + 120) = 0;
      }
LABEL_477:
      sub_23972124C((uint64_t)&v238);
      goto LABEL_478;
    }
    sub_23972D050(&v271, &v282);
    v29 = std::string::insert(&v282, 0, "Requested format ");
    v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
    v236.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v236.__r_.__value_.__l.__data_ = v30;
    v29->__r_.__value_.__l.__size_ = 0;
    v29->__r_.__value_.__r.__words[2] = 0;
    v29->__r_.__value_.__r.__words[0] = 0;
    v31 = std::string::append(&v236, " but pnm file contains ");
    v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
    v272.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v272.__r_.__value_.__l.__data_ = v32;
    v31->__r_.__value_.__l.__size_ = 0;
    v31->__r_.__value_.__r.__words[2] = 0;
    v31->__r_.__value_.__r.__words[0] = 0;
    sub_23972D050((unsigned int *)&v259 + 1, &v240);
    if ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v33 = &v240;
    else
      v33 = (std::string *)v240.__r_.__value_.__r.__words[0];
    if ((v240.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v34 = HIBYTE(v240.__r_.__value_.__r.__words[2]);
    else
      v34 = v240.__r_.__value_.__l.__size_;
    v35 = std::string::append(&v272, (const std::string::value_type *)v33, v34);
    v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    v238.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v238.__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    v37 = std::string::append(&v238, ".");
    v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
    v284 = v37->__r_.__value_.__r.__words[2];
    *(_OWORD *)v283 = v38;
    v37->__r_.__value_.__l.__size_ = 0;
    v37->__r_.__value_.__r.__words[2] = 0;
    v37->__r_.__value_.__r.__words[0] = 0;
    sub_239A42F9C(v241, (__int128 *)v283);
    v249 = 1;
    sub_239914C28((uint64_t)v241, (uint64_t)&v285);
    *(_OWORD *)a4 = v285;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (!v295)
    {
      *(_BYTE *)(a4 + 120) = 0;
      goto LABEL_247;
    }
    *(_BYTE *)(a4 + 40) = 0;
    if (v288)
    {
      *(_OWORD *)(a4 + 16) = v286;
      *(_QWORD *)(a4 + 32) = v287;
      v287 = 0;
      v286 = 0uLL;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (!v294)
    {
      *(_BYTE *)(a4 + 112) = 1;
      *(_BYTE *)(a4 + 120) = 0;
      if (!v288)
        goto LABEL_247;
      goto LABEL_245;
    }
    v39 = v291;
    *(_QWORD *)(a4 + 64) = v290;
    *(_OWORD *)(a4 + 48) = v289;
    v289 = 0uLL;
    *(_QWORD *)(a4 + 72) = v39;
    *(_OWORD *)(a4 + 80) = v292;
    *(_QWORD *)(a4 + 96) = v293;
    v293 = 0;
    v290 = 0;
    v292 = 0uLL;
    *(_BYTE *)(a4 + 104) = 1;
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 120) = 0;
    if (SHIBYTE(v293) < 0)
    {
      operator delete((void *)v292);
      if ((SHIBYTE(v290) & 0x80000000) == 0)
      {
LABEL_61:
        if (!v288)
          goto LABEL_247;
        goto LABEL_245;
      }
    }
    else if ((SHIBYTE(v290) & 0x80000000) == 0)
    {
      goto LABEL_61;
    }
    operator delete((void *)v289);
    if (!v288)
      goto LABEL_247;
LABEL_245:
    if (SHIBYTE(v287) < 0)
      operator delete((void *)v286);
LABEL_247:
    if (v249)
    {
      if (v248)
      {
        if (v247 < 0)
          operator delete(v246);
        if (v245 < 0)
          operator delete(v244);
      }
      if (v243 && v242 < 0)
        operator delete(v241[0]);
    }
    if (SHIBYTE(v284) < 0)
    {
      operator delete(v283[0]);
      if ((SHIBYTE(v238.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_258:
        if ((SHIBYTE(v240.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_259;
        goto LABEL_265;
      }
    }
    else if ((SHIBYTE(v238.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_258;
    }
    operator delete(v238.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v240.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_259:
      if ((SHIBYTE(v272.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_260;
      goto LABEL_266;
    }
LABEL_265:
    operator delete(v240.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v272.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_260:
      if ((SHIBYTE(v236.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_261;
      goto LABEL_267;
    }
LABEL_266:
    operator delete(v272.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v236.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_261:
      if ((SHIBYTE(v282.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_478;
LABEL_268:
      operator delete(v282.__r_.__value_.__l.__data_);
      goto LABEL_478;
    }
LABEL_267:
    operator delete(v236.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v282.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_478;
    goto LABEL_268;
  }
  sub_23972D050(&v271, &v272);
  v11 = std::string::insert(&v272, 0, "Format ");
  v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  v238.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v238.__r_.__value_.__l.__data_ = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  v13 = std::string::append(&v238, " is not a valid pnm format.");
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v284 = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)v283 = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  sub_239A42F9C(__dst, (__int128 *)v283);
  v258 = 1;
  sub_239914C28((uint64_t)__dst, (uint64_t)&v285);
  *(_OWORD *)a4 = v285;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 112) = 0;
  if (!v295)
  {
    *(_BYTE *)(a4 + 120) = 0;
    goto LABEL_119;
  }
  *(_BYTE *)(a4 + 40) = 0;
  if (v288)
  {
    *(_OWORD *)(a4 + 16) = v286;
    *(_QWORD *)(a4 + 32) = v287;
    v287 = 0;
    v286 = 0uLL;
    *(_BYTE *)(a4 + 40) = 1;
  }
  *(_BYTE *)(a4 + 48) = 0;
  *(_BYTE *)(a4 + 104) = 0;
  if (!v294)
  {
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 120) = 0;
    if (!v288)
      goto LABEL_119;
    goto LABEL_117;
  }
  v15 = v291;
  *(_QWORD *)(a4 + 64) = v290;
  *(_OWORD *)(a4 + 48) = v289;
  v289 = 0uLL;
  *(_QWORD *)(a4 + 72) = v15;
  *(_OWORD *)(a4 + 80) = v292;
  *(_QWORD *)(a4 + 96) = v293;
  v293 = 0;
  v290 = 0;
  v292 = 0uLL;
  *(_BYTE *)(a4 + 104) = 1;
  *(_BYTE *)(a4 + 112) = 1;
  *(_BYTE *)(a4 + 120) = 0;
  if (SHIBYTE(v293) < 0)
  {
    operator delete((void *)v292);
    if ((SHIBYTE(v290) & 0x80000000) == 0)
    {
LABEL_23:
      if (!v288)
        goto LABEL_119;
      goto LABEL_117;
    }
  }
  else if ((SHIBYTE(v290) & 0x80000000) == 0)
  {
    goto LABEL_23;
  }
  operator delete((void *)v289);
  if (!v288)
    goto LABEL_119;
LABEL_117:
  if (SHIBYTE(v287) < 0)
    operator delete((void *)v286);
LABEL_119:
  if (v258)
  {
    if (v257)
    {
      if (v256 < 0)
        operator delete(__p);
      if (v254 < 0)
        operator delete(v253);
    }
    if (v252 && v251 < 0)
      operator delete(__dst[0]);
  }
  if (SHIBYTE(v284) < 0)
  {
    operator delete(v283[0]);
    if ((SHIBYTE(v238.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_130:
      if (SHIBYTE(v272.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_134;
      goto LABEL_478;
    }
  }
  else if ((SHIBYTE(v238.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_130;
  }
  operator delete(v238.__r_.__value_.__l.__data_);
  if (SHIBYTE(v272.__r_.__value_.__r.__words[2]) < 0)
LABEL_134:
    operator delete(v272.__r_.__value_.__l.__data_);
LABEL_478:
  if (!v270 && v269)
  {
    if (v268)
    {
      if (v267 < 0)
        operator delete(v266);
      if (v265 < 0)
        operator delete(v264);
    }
    if (v263)
    {
      if (v262 < 0)
        operator delete((void *)v261);
    }
  }
}

void sub_23972C4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a72;
  void *v73;

  v73 = (void *)STACK[0x2D8];
  if (STACK[0x2D8])
  {
    STACK[0x2E0] = (unint64_t)v73;
    operator delete(v73);
  }
  sub_23941965C((uint64_t)&STACK[0x280]);
  sub_239416D30((uint64_t)&a15);
  sub_23972124C((uint64_t)&a23);
  sub_239522F50((uint64_t)&a72);
  _Unwind_Resume(a1);
}

void sub_23972C85C(uint64_t a1, _QWORD *a2)
{
  size_t v4;
  size_t v5;
  _QWORD *p_dst;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  _WORD *v12;
  void *v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  int v17;
  __int128 *v18;
  __int128 v19[2];
  char v20;
  __int128 v21[6];
  char v22;
  int v23;
  _WORD *__dst;
  size_t v25;
  unint64_t v26;
  char __s[16];
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 __p;
  uint64_t v35;
  char v36;
  char v37;
  _QWORD *v38;
  __int128 v39;
  char v40;
  char v41;
  void *v42;
  char v43;
  void *v44;
  char v45;
  char v46;
  char v47;

  v38 = a2;
  if (!sub_23972EBD0(&v38))
  {
    sub_239618F08(&v39, "Invalid pnm file. Unexpected end of file in header.");
    v47 = 1;
    sub_239616578(5u, &v39, (uint64_t)__s);
    if (!v47)
      goto LABEL_13;
    if (v46)
    {
      if ((v45 & 0x80000000) == 0)
      {
        if ((v43 & 0x80000000) == 0)
          goto LABEL_10;
LABEL_38:
        operator delete(v42);
        if (!v41)
          goto LABEL_13;
        goto LABEL_11;
      }
      operator delete(v44);
      if (v43 < 0)
        goto LABEL_38;
    }
LABEL_10:
    if (!v41)
      goto LABEL_13;
LABEL_11:
    if (v40 < 0)
      operator delete((void *)v39);
LABEL_13:
    *(_OWORD *)a1 = *(_OWORD *)__s;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (!v37)
    {
      *(_BYTE *)(a1 + 120) = 0;
      return;
    }
    *(_BYTE *)(a1 + 40) = 0;
    if (v30)
    {
      *(_OWORD *)(a1 + 16) = v28;
      *(_QWORD *)(a1 + 32) = v29;
      v29 = 0;
      v28 = 0uLL;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (!v36)
    {
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (!v30)
        return;
      goto LABEL_42;
    }
    v7 = v33;
    *(_QWORD *)(a1 + 64) = v32;
    *(_OWORD *)(a1 + 48) = v31;
    v31 = 0uLL;
    *(_QWORD *)(a1 + 72) = v7;
    *(_OWORD *)(a1 + 80) = __p;
    *(_QWORD *)(a1 + 96) = v35;
    v35 = 0;
    v32 = 0;
    __p = 0uLL;
    *(_BYTE *)(a1 + 104) = 1;
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (SHIBYTE(v35) < 0)
    {
      operator delete((void *)__p);
      if ((SHIBYTE(v32) & 0x80000000) == 0)
      {
LABEL_19:
        if (!v30)
          return;
LABEL_42:
        if ((SHIBYTE(v29) & 0x80000000) == 0)
          return;
        v13 = (void *)v28;
        goto LABEL_68;
      }
    }
    else if ((SHIBYTE(v32) & 0x80000000) == 0)
    {
      goto LABEL_19;
    }
    operator delete((void *)v31);
    if (!v30)
      return;
    goto LABEL_42;
  }
  __s[2] = 0;
  *(_WORD *)__s = 0;
  std::istream::read();
  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v8 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v8 = v4 | 7;
    v9 = v8 + 1;
    p_dst = operator new(v8 + 1);
    v25 = v5;
    v26 = v9 | 0x8000000000000000;
    __dst = p_dst;
  }
  else
  {
    HIBYTE(v26) = v4;
    p_dst = &__dst;
    if (!v4)
      goto LABEL_25;
  }
  memcpy(p_dst, __s, v5);
LABEL_25:
  *((_BYTE *)p_dst + v5) = 0;
  if (sub_23972EBD0(&v38))
  {
    v10 = sub_23972ED90(a2);
    if (sub_23972EBD0(&v38))
    {
      v11 = sub_23972ED90(a2);
      if (sub_23972EBD0(&v38))
      {
        v23 = sub_23972ED90(a2);
        if ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0)
        {
          if (SHIBYTE(v26) < 0)
          {
            if (v25 == 2)
            {
              v12 = __dst;
LABEL_75:
              if (*v12 == 12880)
                goto LABEL_77;
            }
          }
          else if (SHIBYTE(v26) == 2)
          {
            v12 = &__dst;
            goto LABEL_75;
          }
          if (!sub_239593B20(&__dst, "P3"))
          {
            if (!sub_239593B20(&__dst, "P5") && !sub_239593B20(&__dst, "P6"))
            {
              sub_239618F08(v21, "Invalid pnm file. Format magic number not recognized.");
              v22 = 1;
              sub_239720830(5u, v21, (uint64_t)__s);
              sub_2396207E4(a1, (uint64_t)__s);
              sub_239522FE4((uint64_t)__s);
              v18 = v21;
LABEL_99:
              sub_239523188((uint64_t)v18);
              goto LABEL_66;
            }
            v15 = 1;
LABEL_81:
            if (SHIBYTE(v26) < 0)
            {
              if (v25 == 2)
              {
                v16 = __dst;
LABEL_86:
                if (*v16 == 12880)
                {
LABEL_88:
                  if (v23 == 255)
                  {
                    v17 = 1;
                    goto LABEL_102;
                  }
                  if (v23 == 0xFFFF)
                  {
                    v17 = 2;
LABEL_102:
                    __s[0] = 0;
                    std::istream::read();
                    if (__s[0] == 13)
                    {
                      __s[0] = 0;
                      std::istream::read();
                    }
                    *(_DWORD *)a1 = v15;
                    *(_DWORD *)(a1 + 4) = v17;
                    *(_DWORD *)(a1 + 8) = v10;
                    *(_DWORD *)(a1 + 12) = v11;
                    *(_BYTE *)(a1 + 120) = 1;
                    goto LABEL_66;
                  }
                  goto LABEL_105;
                }
              }
            }
            else if (SHIBYTE(v26) == 2)
            {
              v16 = &__dst;
              goto LABEL_86;
            }
            if (sub_239593B20(&__dst, "P5"))
              goto LABEL_88;
            if (!sub_239593B20(&__dst, "P3") && !sub_239593B20(&__dst, "P6"))
            {
              v17 = 0;
              goto LABEL_102;
            }
            if (v23 == 255)
            {
              v17 = 21;
              goto LABEL_102;
            }
            if (v23 != 0xFFFF)
            {
LABEL_105:
              sub_23972F1D0((uint64_t)__s, &v23);
              sub_2396207E4(a1, (uint64_t)__s);
              sub_239522FE4((uint64_t)__s);
              goto LABEL_66;
            }
            sub_239618F08(v19, "Unsupported pnm format. Loader does not support Rgb16u (.pbm) loading yet.");
            v20 = 1;
            sub_239720830(5u, v19, (uint64_t)__s);
            sub_2396207E4(a1, (uint64_t)__s);
            sub_239522FE4((uint64_t)__s);
            v18 = v19;
            goto LABEL_99;
          }
LABEL_77:
          v15 = 0;
          goto LABEL_81;
        }
      }
    }
  }
  sub_239618F08(&v39, "Invalid pnm file. Unexpected end of file in header.");
  v47 = 1;
  sub_239616578(5u, &v39, (uint64_t)__s);
  if (v47)
  {
    if (!v46)
      goto LABEL_48;
    if (v45 < 0)
    {
      operator delete(v44);
      if ((v43 & 0x80000000) == 0)
      {
LABEL_48:
        if (!v41)
          goto LABEL_51;
LABEL_49:
        if (v40 < 0)
          operator delete((void *)v39);
        goto LABEL_51;
      }
    }
    else if ((v43 & 0x80000000) == 0)
    {
      goto LABEL_48;
    }
    operator delete(v42);
    if (!v41)
      goto LABEL_51;
    goto LABEL_49;
  }
LABEL_51:
  *(_OWORD *)a1 = *(_OWORD *)__s;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v37)
  {
    *(_BYTE *)(a1 + 40) = 0;
    if (v30)
    {
      *(_OWORD *)(a1 + 16) = v28;
      *(_QWORD *)(a1 + 32) = v29;
      v29 = 0;
      v28 = 0uLL;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (!v36)
    {
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (!v30)
        goto LABEL_66;
      goto LABEL_64;
    }
    v14 = v33;
    *(_QWORD *)(a1 + 64) = v32;
    *(_OWORD *)(a1 + 48) = v31;
    v31 = 0uLL;
    *(_QWORD *)(a1 + 72) = v14;
    *(_OWORD *)(a1 + 80) = __p;
    *(_QWORD *)(a1 + 96) = v35;
    v35 = 0;
    v32 = 0;
    __p = 0uLL;
    *(_BYTE *)(a1 + 104) = 1;
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (SHIBYTE(v35) < 0)
    {
      operator delete((void *)__p);
      if ((SHIBYTE(v32) & 0x80000000) == 0)
      {
LABEL_57:
        if (!v30)
          goto LABEL_66;
LABEL_64:
        if (SHIBYTE(v29) < 0)
          operator delete((void *)v28);
        goto LABEL_66;
      }
    }
    else if ((SHIBYTE(v32) & 0x80000000) == 0)
    {
      goto LABEL_57;
    }
    operator delete((void *)v31);
    if (v30)
      goto LABEL_64;
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
  }
LABEL_66:
  if ((SHIBYTE(v26) & 0x80000000) == 0)
    return;
  v13 = __dst;
LABEL_68:
  operator delete(v13);
}

void sub_23972CFB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (a42 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23972D050(unsigned int *a1@<X0>, std::string *a2@<X8>)
{
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *v8;
  void **v9;
  uint64_t v10;
  void *__p[2];
  char v12;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  sub_23941A18C((uint64_t)__p, (uint64_t)&v8, a1);
  v12 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v8, (uint64_t)v9, (uint64_t)__p, a2, v3, v4);
  if (v12 < 0)
    operator delete(__p[0]);
  v5 = (void **)v8;
  if (v8)
  {
    v6 = v9;
    v7 = v8;
    if (v9 != v8)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = v8;
    }
    v9 = v5;
    operator delete(v7);
  }
}

void sub_23972D0FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23972D134(uint64_t result)
{
  __int128 *v1;
  void *exception;
  __int128 v3;
  _BYTE v4[112];

  v1 = (__int128 *)result;
  if (!*(_BYTE *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    v3 = *v1;
    sub_23952329C(v4, v1 + 1);
    sub_239523424((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_250ADD7C0, (void (*)(void *))sub_239523474);
  }
  return result;
}

void sub_23972D1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239522FE4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23972D1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_239522FE4((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_23972D1E0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_23972D1F4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  _BYTE *v5;
  uint64_t v6;
  __int128 v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  char v12;
  __int128 v13;
  void *v14[2];
  char v15;
  char v16;
  char v17;
  void *v18[2];
  uint64_t v19;
  uint64_t v20;
  void *__p[2];
  uint64_t v22;
  char v23;
  char v24;
  __int128 v25;
  __int128 v26;
  char v27;
  char v28;
  void *v29;
  char v30;
  void *v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  std::istream::tellg();
  sub_23972C85C((uint64_t)&v25, a1);
  if (!v35)
  {
    v13 = v25;
    v5 = sub_23952329C(v14, &v26);
    *(_OWORD *)a2 = v13;
    *(_BYTE *)(a2 + 16) = 0;
    *(_BYTE *)(a2 + 112) = 0;
    if (!v24)
    {
      *(_BYTE *)(a2 + 120) = 0;
      goto LABEL_32;
    }
    *(_BYTE *)(a2 + 40) = 0;
    if (v17)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)v5;
      *(_QWORD *)(a2 + 32) = *((_QWORD *)v5 + 2);
      *((_QWORD *)v5 + 1) = 0;
      *((_QWORD *)v5 + 2) = 0;
      *(_QWORD *)v5 = 0;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (!v23)
    {
      *(_BYTE *)(a2 + 112) = 1;
      *(_BYTE *)(a2 + 120) = 0;
      if (!v17)
        goto LABEL_32;
LABEL_30:
      if (v16 < 0)
        operator delete(v14[0]);
      goto LABEL_32;
    }
    v6 = v20;
    *(_QWORD *)(a2 + 64) = v19;
    *(_OWORD *)(a2 + 48) = *(_OWORD *)v18;
    v18[0] = 0;
    v18[1] = 0;
    *(_QWORD *)(a2 + 72) = v6;
    *(_OWORD *)(a2 + 80) = *(_OWORD *)__p;
    *(_QWORD *)(a2 + 96) = v22;
    __p[1] = 0;
    v22 = 0;
    v19 = 0;
    __p[0] = 0;
    *(_BYTE *)(a2 + 104) = 1;
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (SHIBYTE(v22) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v19) & 0x80000000) == 0)
      {
LABEL_13:
        if (!v17)
          goto LABEL_32;
        goto LABEL_30;
      }
    }
    else if ((SHIBYTE(v19) & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v18[0]);
    if (!v17)
      goto LABEL_32;
    goto LABEL_30;
  }
  if (sub_2396F5EC0(SDWORD1(v25)) == 1)
    v4 = 1;
  else
    v4 = 2;
  LOBYTE(v11) = 0;
  v12 = 0;
  std::istream::seekg();
  sub_23971E228(a1, (uint64_t)&v13);
  if (LOBYTE(v14[0]))
  {
    v11 = v13;
    v13 = 0uLL;
    v12 = 1;
  }
  LODWORD(v13) = DWORD1(v25);
  *(_QWORD *)((char *)&v13 + 4) = *((_QWORD *)&v25 + 1);
  HIDWORD(v13) = v4;
  LOBYTE(v14[0]) = 0;
  v15 = 0;
  if (v12)
  {
    sub_239620CDC(v14, (uint64_t)&v11);
    v15 = 1;
    v7 = *(_OWORD *)v14;
    *(_OWORD *)a2 = v13;
    *(_OWORD *)(a2 + 16) = v7;
    *(_BYTE *)(a2 + 32) = 1;
    *(_BYTE *)(a2 + 120) = 1;
    if (!v12)
      goto LABEL_32;
  }
  else
  {
    *(_OWORD *)a2 = v13;
    *(_BYTE *)(a2 + 16) = 0;
    *(_BYTE *)(a2 + 32) = 0;
    *(_BYTE *)(a2 + 120) = 1;
    if (!v12)
      goto LABEL_32;
  }
  v8 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
  if (*((_QWORD *)&v11 + 1))
  {
    v9 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
LABEL_32:
  if (!v35 && v34)
  {
    if (v33)
    {
      if (v32 < 0)
        operator delete(v31);
      if (v30 < 0)
        operator delete(v29);
    }
    if (v28)
    {
      if (v27 < 0)
        operator delete((void *)v26);
    }
  }
}

void sub_23972D5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a17)
    sub_239EC0FD4((uint64_t)&a13);
  sub_239600F8C((uint64_t)&a9);
  sub_239522F50((uint64_t)&a29);
  _Unwind_Resume(a1);
}

void sub_23972D628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  sub_239522F50((uint64_t)&a29);
  _Unwind_Resume(a1);
}

void sub_23972D640(_DWORD *a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  unsigned int v9;
  unsigned int v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  uint64_t v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  std::string *v20;
  std::string::size_type size;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  __int128 v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  const char *v29;
  const char *v30;
  uint64_t v31;
  int v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  std::string *v50;
  __int128 v51;
  std::string *v52;
  __int128 v53;
  _BYTE *v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  std::string::size_type v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  int v102;
  std::string::size_type v103;
  unint64_t *v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  unint64_t *v109;
  unint64_t v110;
  unint64_t v111;
  int v112;
  std::string::size_type v113;
  unint64_t *v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  char v118;
  void *v119[2];
  uint64_t v120;
  uint64_t v121;
  void *__p[2];
  uint64_t v123;
  char v124;
  char v125;
  char v126;
  std::string v127;
  void *v128[2];
  char v129;
  char v130;
  void *v131;
  char v132;
  void *v133;
  char v134;
  char v135;
  char v136;
  void *__dst[2];
  char v138;
  char v139;
  void *v140;
  char v141;
  void *v142;
  char v143;
  char v144;
  char v145;
  unsigned int v146;
  int v147;
  std::string v148;
  std::string v149;
  std::string v150;
  char v151;
  void *v152;
  char v153;
  void *v154;
  char v155;
  char v156;
  char v157;
  _BYTE v158[32];
  uint64_t v159;
  int v160;
  unsigned int v161;
  __int128 v162;
  uint64_t v163;
  _BYTE *v164;
  __int128 v165;
  uint64_t v166;
  char v167;
  unsigned __int8 v168;
  std::string v169;

  v147 = a4;
  v9 = a1[12];
  v146 = v9;
  v10 = v9 - 1;
  if (v9 != 1
    && v9 != 21
    && v9 != 2
    && "NSt12experimental19bad_expected_accessIN4cv3d3esn5ErrorEEE" - (char *)&unk_239ED5394 == 12)
  {
    sub_23972D050(&v146, &v169);
    v11 = std::string::insert(&v169, 0, "Image is of format ");
    v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v150.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v150.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    v13 = std::string::append(&v150, " but must be 8-bit Gray or Rgb to save as pnm.");
    v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    *(_QWORD *)&v158[16] = *((_QWORD *)&v13->__r_.__value_.__l + 2);
    *(_OWORD *)v158 = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    sub_239A42F9C(__dst, (__int128 *)v158);
    v145 = 1;
    sub_239914C28((uint64_t)__dst, (uint64_t)&v115);
    *(_OWORD *)a5 = v115;
    *(_BYTE *)(a5 + 16) = 0;
    *(_BYTE *)(a5 + 112) = 0;
    if (!v125)
    {
      *(_BYTE *)(a5 + 120) = 0;
      goto LABEL_99;
    }
    *(_BYTE *)(a5 + 40) = 0;
    if (v118)
    {
      *(_OWORD *)(a5 + 16) = v116;
      *(_QWORD *)(a5 + 32) = v117;
      v117 = 0;
      v116 = 0uLL;
      *(_BYTE *)(a5 + 40) = 1;
    }
    *(_BYTE *)(a5 + 48) = 0;
    *(_BYTE *)(a5 + 104) = 0;
    if (!v124)
    {
      *(_BYTE *)(a5 + 112) = 1;
      *(_BYTE *)(a5 + 120) = 0;
      if (!v118)
        goto LABEL_99;
      goto LABEL_97;
    }
    v15 = v121;
    *(_QWORD *)(a5 + 64) = v120;
    *(_OWORD *)(a5 + 48) = *(_OWORD *)v119;
    v119[0] = 0;
    v119[1] = 0;
    *(_QWORD *)(a5 + 72) = v15;
    *(_OWORD *)(a5 + 80) = *(_OWORD *)__p;
    *(_QWORD *)(a5 + 96) = v123;
    __p[1] = 0;
    v123 = 0;
    v120 = 0;
    __p[0] = 0;
    *(_BYTE *)(a5 + 104) = 1;
    *(_BYTE *)(a5 + 112) = 1;
    *(_BYTE *)(a5 + 120) = 0;
    if (SHIBYTE(v123) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v120) & 0x80000000) == 0)
      {
LABEL_12:
        if (!v118)
          goto LABEL_99;
        goto LABEL_97;
      }
    }
    else if ((SHIBYTE(v120) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete(v119[0]);
    if (!v118)
      goto LABEL_99;
LABEL_97:
    if (SHIBYTE(v117) < 0)
      operator delete((void *)v116);
LABEL_99:
    if (!v145)
      goto LABEL_106;
    if (v144)
    {
      if ((v143 & 0x80000000) == 0)
      {
        if ((v141 & 0x80000000) == 0)
          goto LABEL_103;
LABEL_114:
        operator delete(v140);
        if (!v139)
          goto LABEL_106;
        goto LABEL_104;
      }
      operator delete(v142);
      if (v141 < 0)
        goto LABEL_114;
    }
LABEL_103:
    if (!v139)
      goto LABEL_106;
LABEL_104:
    if (v138 < 0)
      operator delete(__dst[0]);
LABEL_106:
    if ((v158[23] & 0x80000000) != 0)
    {
      operator delete(*(void **)v158);
      if ((SHIBYTE(v150.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_108:
        if ((SHIBYTE(v169.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return;
LABEL_112:
        v49 = (void *)v169.__r_.__value_.__r.__words[0];
LABEL_299:
        operator delete(v49);
        return;
      }
    }
    else if ((SHIBYTE(v150.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_108;
    }
    operator delete(v150.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v169.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
    goto LABEL_112;
  }
  if (a4 && (a4 == 1 && v10 > 1 || a4 == 2 && v9 != 21))
  {
    sub_23972692C(&v147, &v148);
    v16 = std::string::insert(&v148, 0, "Requested io-format ");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v149.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v149.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = std::string::append(&v149, " but image is of color format ");
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v169.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v169.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    sub_23972D050(&v146, &v127);
    if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v20 = &v127;
    else
      v20 = (std::string *)v127.__r_.__value_.__r.__words[0];
    if ((v127.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v127.__r_.__value_.__r.__words[2]);
    else
      size = v127.__r_.__value_.__l.__size_;
    v22 = std::string::append(&v169, (const std::string::value_type *)v20, size);
    v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v150.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v150.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    v24 = std::string::append(&v150, " incompatible with pnm.");
    v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    *(_QWORD *)&v158[16] = *((_QWORD *)&v24->__r_.__value_.__l + 2);
    *(_OWORD *)v158 = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    sub_239A42F9C(v128, (__int128 *)v158);
    v136 = 1;
    sub_239914C28((uint64_t)v128, (uint64_t)&v115);
    *(_OWORD *)a5 = v115;
    *(_BYTE *)(a5 + 16) = 0;
    *(_BYTE *)(a5 + 112) = 0;
    if (!v125)
    {
      *(_BYTE *)(a5 + 120) = 0;
      goto LABEL_158;
    }
    *(_BYTE *)(a5 + 40) = 0;
    if (v118)
    {
      *(_OWORD *)(a5 + 16) = v116;
      *(_QWORD *)(a5 + 32) = v117;
      v117 = 0;
      v116 = 0uLL;
      *(_BYTE *)(a5 + 40) = 1;
    }
    *(_BYTE *)(a5 + 48) = 0;
    *(_BYTE *)(a5 + 104) = 0;
    if (!v124)
    {
      *(_BYTE *)(a5 + 112) = 1;
      *(_BYTE *)(a5 + 120) = 0;
      if (!v118)
        goto LABEL_158;
      goto LABEL_156;
    }
    v26 = v121;
    *(_QWORD *)(a5 + 64) = v120;
    *(_OWORD *)(a5 + 48) = *(_OWORD *)v119;
    v119[0] = 0;
    v119[1] = 0;
    *(_QWORD *)(a5 + 72) = v26;
    *(_OWORD *)(a5 + 80) = *(_OWORD *)__p;
    *(_QWORD *)(a5 + 96) = v123;
    __p[1] = 0;
    v123 = 0;
    v120 = 0;
    __p[0] = 0;
    *(_BYTE *)(a5 + 104) = 1;
    *(_BYTE *)(a5 + 112) = 1;
    *(_BYTE *)(a5 + 120) = 0;
    if (SHIBYTE(v123) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v120) & 0x80000000) == 0)
      {
LABEL_31:
        if (!v118)
          goto LABEL_158;
        goto LABEL_156;
      }
    }
    else if ((SHIBYTE(v120) & 0x80000000) == 0)
    {
      goto LABEL_31;
    }
    operator delete(v119[0]);
    if (!v118)
      goto LABEL_158;
LABEL_156:
    if (SHIBYTE(v117) < 0)
      operator delete((void *)v116);
LABEL_158:
    if (v136)
    {
      if (v135)
      {
        if (v134 < 0)
          operator delete(v133);
        if (v132 < 0)
          operator delete(v131);
      }
      if (v130)
      {
        if (v129 < 0)
          operator delete(v128[0]);
      }
    }
    if ((v158[23] & 0x80000000) != 0)
    {
      operator delete(*(void **)v158);
      if ((SHIBYTE(v150.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_169:
        if ((SHIBYTE(v127.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_170;
        goto LABEL_176;
      }
    }
    else if ((SHIBYTE(v150.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_169;
    }
    operator delete(v150.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v127.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_170:
      if ((SHIBYTE(v169.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_171;
      goto LABEL_177;
    }
LABEL_176:
    operator delete(v127.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v169.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_171:
      if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_172;
      goto LABEL_178;
    }
LABEL_177:
    operator delete(v169.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_172:
      if ((SHIBYTE(v148.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
LABEL_179:
      v49 = (void *)v148.__r_.__value_.__r.__words[0];
      goto LABEL_299;
    }
LABEL_178:
    operator delete(v149.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v148.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
    goto LABEL_179;
  }
  v28 = a1[6];
  v27 = a1[7];
  LODWORD(v127.__r_.__value_.__l.__data_) = v9;
  if (v10 <= 1)
  {
    v29 = "P2\n";
    v30 = "P5\n";
    goto LABEL_40;
  }
  if (v9 != 21)
  {
    sub_23972D050((unsigned int *)&v127, &v148);
    v50 = std::string::insert(&v148, 0, "Image is of format ");
    v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
    v149.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v149.__r_.__value_.__l.__data_ = v51;
    v50->__r_.__value_.__l.__size_ = 0;
    v50->__r_.__value_.__r.__words[2] = 0;
    v50->__r_.__value_.__r.__words[0] = 0;
    v52 = std::string::append(&v149, " but must be 8-bit Gray or Rgb to save as pnm.");
    v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
    v169.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v169.__r_.__value_.__l.__data_ = v53;
    v52->__r_.__value_.__l.__size_ = 0;
    v52->__r_.__value_.__r.__words[2] = 0;
    v52->__r_.__value_.__r.__words[0] = 0;
    sub_239A42F9C(&v150, (__int128 *)&v169);
    v157 = 1;
    v54 = v158;
    sub_239914C28((uint64_t)&v150, (uint64_t)v158);
    v115 = *(_OWORD *)v158;
    LOBYTE(v116) = 0;
    v125 = 0;
    v55 = v168;
    if (!v168)
    {
      v57 = 0;
      v56 = 0;
      goto LABEL_272;
    }
    v118 = 0;
    if ((_BYTE)v160)
    {
      v116 = *(_OWORD *)&v158[16];
      v117 = v159;
      *(_QWORD *)&v158[24] = 0;
      v159 = 0;
      *(_QWORD *)&v158[16] = 0;
      v56 = 1;
      v118 = 1;
      LOBYTE(v119[0]) = 0;
      v124 = 0;
      if (v167)
      {
LABEL_119:
        v54 = v164;
        v120 = v163;
        *(_OWORD *)v119 = v162;
        v162 = 0uLL;
        *(_OWORD *)__p = v165;
        v123 = v166;
        v163 = 0;
        v165 = 0uLL;
        v166 = 0;
        v57 = 1;
        v124 = 1;
LABEL_269:
        v125 = 1;
        if ((_BYTE)v160 && SHIBYTE(v159) < 0)
          operator delete(*(void **)&v158[16]);
LABEL_272:
        if (v157)
        {
          if (v156)
          {
            if (v155 < 0)
              operator delete(v154);
            if (v153 < 0)
              operator delete(v152);
          }
          if (v151 && SHIBYTE(v150.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v150.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v169.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v169.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_283:
            if ((SHIBYTE(v148.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_284;
LABEL_303:
            operator delete(v148.__r_.__value_.__l.__data_);
LABEL_284:
            *(_BYTE *)(a5 + 120) = 0;
            *(_OWORD *)a5 = v115;
            *(_BYTE *)(a5 + 16) = 0;
            *(_BYTE *)(a5 + 112) = 0;
            if (v55)
            {
              *(_BYTE *)(a5 + 40) = 0;
              if (v56)
              {
                *(_OWORD *)(a5 + 16) = v116;
                *(_QWORD *)(a5 + 32) = v117;
                v117 = 0;
                v116 = 0uLL;
                *(_BYTE *)(a5 + 40) = 1;
              }
              *(_BYTE *)(a5 + 48) = 0;
              *(_BYTE *)(a5 + 104) = 0;
              if (v57)
              {
                *(_OWORD *)(a5 + 48) = *(_OWORD *)v119;
                *(_QWORD *)(a5 + 64) = v120;
                v119[0] = 0;
                v119[1] = 0;
                *(_QWORD *)(a5 + 72) = v54;
                *(_OWORD *)(a5 + 80) = *(_OWORD *)__p;
                *(_QWORD *)(a5 + 96) = v123;
                v120 = 0;
                __p[0] = 0;
                __p[1] = 0;
                v123 = 0;
                *(_BYTE *)(a5 + 104) = 1;
              }
              *(_BYTE *)(a5 + 112) = 1;
            }
            goto LABEL_290;
          }
        }
        else if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_283;
        }
        operator delete(v149.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v148.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_284;
        goto LABEL_303;
      }
    }
    else
    {
      v56 = 0;
      LOBYTE(v119[0]) = 0;
      v124 = 0;
      if (v167)
        goto LABEL_119;
    }
    v57 = 0;
    goto LABEL_269;
  }
  v29 = "P3\n";
  v30 = "P6\n";
LABEL_40:
  if (a3 == 1)
    v31 = (uint64_t)v30;
  else
    v31 = (uint64_t)v29;
  sub_239458500(a2, v31, 3);
  if (v9 == 21 || v9 == 1)
    v33 = 255;
  else
    v33 = 0xFFFF;
  std::to_string((std::string *)v158, v28);
  if (v158[23] >= 0)
    v34 = v158;
  else
    v34 = *(_BYTE **)v158;
  if (v158[23] >= 0)
    v35 = v158[23];
  else
    v35 = *(_QWORD *)&v158[8];
  sub_239458500(a2, (uint64_t)v34, v35);
  if ((v158[23] & 0x80000000) != 0)
    operator delete(*(void **)v158);
  sub_239458500(a2, (uint64_t)" ", 1);
  std::to_string((std::string *)v158, v27);
  if (v158[23] >= 0)
    v36 = v158;
  else
    v36 = *(_BYTE **)v158;
  if (v158[23] >= 0)
    v37 = v158[23];
  else
    v37 = *(_QWORD *)&v158[8];
  sub_239458500(a2, (uint64_t)v36, v37);
  if ((v158[23] & 0x80000000) != 0)
    operator delete(*(void **)v158);
  sub_239458500(a2, (uint64_t)"\n", 1);
  std::to_string((std::string *)v158, v33);
  if (v158[23] >= 0)
    v38 = v158;
  else
    v38 = *(_BYTE **)v158;
  if (v158[23] >= 0)
    v39 = v158[23];
  else
    v39 = *(_QWORD *)&v158[8];
  sub_239458500(a2, (uint64_t)v38, v39);
  if ((v158[23] & 0x80000000) != 0)
    operator delete(*(void **)v158);
  sub_239458500(a2, (uint64_t)"\n", 1);
  v126 = 1;
  if (v146 == 21)
  {
    *(_QWORD *)v158 = &off_250ADB468;
    sub_239494110((uint64_t)a1, (uint64_t)&v158[8]);
    if (a3 == 1)
    {
      v67 = *(_QWORD *)&v158[8];
      if (!*(_QWORD *)&v158[8])
        goto LABEL_221;
      v68 = *(std::__shared_weak_count **)&v158[16];
      if (*(_QWORD *)&v158[16])
      {
        v69 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
        do
          v70 = __ldxr(v69);
        while (__stxr(v70 + 1, v69));
        do
          v71 = __ldaxr(v69);
        while (__stlxr(v71 - 1, v69));
        if (!v71)
        {
          ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
          std::__shared_weak_count::__release_weak(v68);
        }
        v72 = *(std::__shared_weak_count **)&v158[16];
        v67 = *(_QWORD *)&v158[8];
        if (*(_QWORD *)&v158[16])
        {
          v73 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
          do
            v74 = __ldxr(v73);
          while (__stxr(v74 + 1, v73));
          do
            v75 = __ldaxr(v73);
          while (__stlxr(v75 - 1, v73));
          if (!v75)
          {
            ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
            std::__shared_weak_count::__release_weak(v72);
          }
        }
      }
      if (BYTE1(v164))
        (*(void (**)(std::string *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v67 + 96))(&v150, v67, 0);
      else
LABEL_221:
        v150.__r_.__value_.__r.__words[0] = 0;
      if ((_DWORD)v159)
      {
        if (HIDWORD(v159))
        {
          v95 = v160;
          if (v160)
          {
            v96 = DWORD1(v162);
            v97 = *(_QWORD *)&v158[24];
            if ((_BYTE)v164 && *(_QWORD *)&v158[24])
            {
              v98 = *(_OWORD *)&v158[8];
              if (*(_QWORD *)&v158[16])
              {
                v99 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
                do
                  v100 = __ldxr(v99);
                while (__stxr(v100 + 1, v99));
                do
                  v101 = __ldaxr(v99);
                while (__stlxr(v101 - 1, v99));
                if (!v101)
                {
                  (*(void (**)(_QWORD))(**((_QWORD **)&v98 + 1) + 16))(*((_QWORD *)&v98 + 1));
                  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v98 + 1));
                }
              }
              (*(void (**)(_QWORD, _QWORD, const char *))(*(_QWORD *)v98 + 88))(v98, 0, "unknown location");
              v97 = *(_QWORD *)&v158[24];
            }
            v102 = v95 - 1;
            if (v95 != 1)
            {
              do
              {
                std::ostream::write();
                v97 += v96;
                --v102;
              }
              while (v102);
            }
            std::ostream::write();
          }
        }
      }
      v103 = v150.__r_.__value_.__r.__words[0];
      v150.__r_.__value_.__r.__words[0] = 0;
      if (v103)
        (*(void (**)(std::string::size_type))(*(_QWORD *)v103 + 8))(v103);
    }
    else
    {
      sub_239916708((uint64_t)&v169, 0, 0, 0, 0);
      v77 = operator new(0x18uLL);
      *(_OWORD *)v77 = xmmword_250AE43A8;
      v77[2] = "\n";
      v150.__r_.__value_.__r.__words[0] = (std::string::size_type)v77;
      v150.__r_.__value_.__l.__size_ = (std::string::size_type)(v77 + 3);
      v150.__r_.__value_.__r.__words[2] = (std::string::size_type)(v77 + 3);
      v151 = 1;
      sub_239732EE0((uint64_t)&v169, a2, (uint64_t)v158, (uint64_t)&v150);
      if (v151 && v150.__r_.__value_.__r.__words[0])
      {
        v150.__r_.__value_.__l.__size_ = v150.__r_.__value_.__r.__words[0];
        operator delete(v150.__r_.__value_.__l.__data_);
      }
      if (DWORD2(v162) && HIDWORD(v162))
        sub_239458500(a2, (uint64_t)"\n", 1);
    }
    v92 = *(std::__shared_weak_count **)&v158[16];
    if (!*(_QWORD *)&v158[16])
      goto LABEL_265;
    v104 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
    do
      v94 = __ldaxr(v104);
    while (__stlxr(v94 - 1, v104));
LABEL_263:
    if (!v94)
    {
      ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
      std::__shared_weak_count::__release_weak(v92);
    }
    goto LABEL_265;
  }
  if (v146 == 2)
  {
    *(_QWORD *)v158 = &off_250AE3D30;
    sub_23970E070((uint64_t)a1, (uint64_t)&v158[8]);
    if (a3 == 1)
    {
      v58 = *(_QWORD *)&v158[8];
      if (!*(_QWORD *)&v158[8])
        goto LABEL_199;
      v59 = *(std::__shared_weak_count **)&v158[16];
      if (*(_QWORD *)&v158[16])
      {
        v60 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
        do
          v61 = __ldxr(v60);
        while (__stxr(v61 + 1, v60));
        do
          v62 = __ldaxr(v60);
        while (__stlxr(v62 - 1, v60));
        if (!v62)
        {
          ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
          std::__shared_weak_count::__release_weak(v59);
        }
        v63 = *(std::__shared_weak_count **)&v158[16];
        v58 = *(_QWORD *)&v158[8];
        if (*(_QWORD *)&v158[16])
        {
          v64 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
          do
            v65 = __ldxr(v64);
          while (__stxr(v65 + 1, v64));
          do
            v66 = __ldaxr(v64);
          while (__stlxr(v66 - 1, v64));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
            std::__shared_weak_count::__release_weak(v63);
          }
        }
      }
      if (BYTE1(v162))
        (*(void (**)(std::string *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v58 + 96))(&v150, v58, 0);
      else
LABEL_199:
        v150.__r_.__value_.__r.__words[0] = 0;
      v79 = v161;
      v80 = *(_QWORD *)&v158[24];
      v81 = v159;
      if ((_BYTE)v162 && *(_QWORD *)&v158[24])
      {
        v82 = *(_OWORD *)&v158[8];
        if (*(_QWORD *)&v158[16])
        {
          v83 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
          do
            v84 = __ldxr(v83);
          while (__stxr(v84 + 1, v83));
          do
            v85 = __ldaxr(v83);
          while (__stlxr(v85 - 1, v83));
          if (!v85)
          {
            (*(void (**)(_QWORD))(**((_QWORD **)&v82 + 1) + 16))(*((_QWORD *)&v82 + 1));
            std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v82 + 1));
          }
        }
        (*(void (**)(_QWORD, _QWORD, const char *))(*(_QWORD *)v82 + 88))(v82, 0, "unknown location");
        v80 = *(_QWORD *)&v158[24];
      }
      v86 = v79 * HIDWORD(v81);
      if ((_DWORD)v79 * HIDWORD(v81) && (_DWORD)v81)
      {
        v87 = 2 * v81;
        v88 = 2 * v79;
        v89 = v80 + 2 * v86;
        do
        {
          v90 = 0;
          do
          {
            LOWORD(v169.__r_.__value_.__l.__data_) = bswap32(*(unsigned __int16 *)(v80 + v90)) >> 16;
            std::ostream::write();
            v90 += 2;
          }
          while (v87 != v90);
          v80 += v88;
        }
        while (v80 != v89);
      }
      v91 = v150.__r_.__value_.__r.__words[0];
      v150.__r_.__value_.__r.__words[0] = 0;
      if (v91)
        (*(void (**)(std::string::size_type))(*(_QWORD *)v91 + 8))(v91);
    }
    else
    {
      v76 = sub_239916708((uint64_t)&v169, 0, 0, 0, 0);
      v150.__r_.__value_.__s.__data_[0] = 0;
      v151 = 0;
      sub_239732234(v76, a2, (uint64_t)v158, (uint64_t)&v150);
      if (v151 && v150.__r_.__value_.__r.__words[0])
      {
        v150.__r_.__value_.__l.__size_ = v150.__r_.__value_.__r.__words[0];
        operator delete(v150.__r_.__value_.__l.__data_);
      }
      if ((_DWORD)v159 && HIDWORD(v159))
        sub_239458500(a2, (uint64_t)"\n", 1);
    }
    v92 = *(std::__shared_weak_count **)&v158[16];
    if (!*(_QWORD *)&v158[16])
      goto LABEL_265;
    v93 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
    do
      v94 = __ldaxr(v93);
    while (__stlxr(v94 - 1, v93));
    goto LABEL_263;
  }
  if (v146 != 1)
  {
    sub_239A444D4((uint64_t)"unknown file", 440, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  *(_QWORD *)v158 = &off_250ADB350;
  sub_2394949FC((uint64_t)a1, (uint64_t)&v158[8]);
  if (a3 == 1)
  {
    v40 = *(_QWORD *)&v158[8];
    if (!*(_QWORD *)&v158[8])
      goto LABEL_243;
    v41 = *(std::__shared_weak_count **)&v158[16];
    if (*(_QWORD *)&v158[16])
    {
      v42 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
      }
      v45 = *(std::__shared_weak_count **)&v158[16];
      v40 = *(_QWORD *)&v158[8];
      if (*(_QWORD *)&v158[16])
      {
        v46 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
        do
          v47 = __ldxr(v46);
        while (__stxr(v47 + 1, v46));
        do
          v48 = __ldaxr(v46);
        while (__stlxr(v48 - 1, v46));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
    }
    if (BYTE1(v162))
      (*(void (**)(std::string *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v40 + 96))(&v150, v40, 0);
    else
LABEL_243:
      v150.__r_.__value_.__r.__words[0] = 0;
    if ((_DWORD)v159)
    {
      v105 = HIDWORD(v159);
      if (HIDWORD(v159))
      {
        v106 = v161;
        v107 = *(_QWORD *)&v158[24];
        if ((_BYTE)v162 && *(_QWORD *)&v158[24])
        {
          v108 = *(_OWORD *)&v158[8];
          if (*(_QWORD *)&v158[16])
          {
            v109 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
            do
              v110 = __ldxr(v109);
            while (__stxr(v110 + 1, v109));
            do
              v111 = __ldaxr(v109);
            while (__stlxr(v111 - 1, v109));
            if (!v111)
            {
              (*(void (**)(_QWORD))(**((_QWORD **)&v108 + 1) + 16))(*((_QWORD *)&v108 + 1));
              std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v108 + 1));
            }
          }
          (*(void (**)(_QWORD, _QWORD, const char *))(*(_QWORD *)v108 + 88))(v108, 0, "unknown location");
          v107 = *(_QWORD *)&v158[24];
        }
        v112 = v105 - 1;
        if (v105 != 1)
        {
          do
          {
            std::ostream::write();
            v107 += v106;
            --v112;
          }
          while (v112);
        }
        std::ostream::write();
      }
    }
    v113 = v150.__r_.__value_.__r.__words[0];
    v150.__r_.__value_.__r.__words[0] = 0;
    if (v113)
      (*(void (**)(std::string::size_type))(*(_QWORD *)v113 + 8))(v113);
  }
  else
  {
    v78 = sub_239916708((uint64_t)&v169, 0, 0, 0, 0);
    v150.__r_.__value_.__s.__data_[0] = 0;
    v151 = 0;
    sub_2397314C8(v78, a2, (uint64_t)v158, (uint64_t)&v150);
    if (v151 && v150.__r_.__value_.__r.__words[0])
    {
      v150.__r_.__value_.__l.__size_ = v150.__r_.__value_.__r.__words[0];
      operator delete(v150.__r_.__value_.__l.__data_);
    }
    if ((_DWORD)v159 && HIDWORD(v159))
      sub_239458500(a2, (uint64_t)"\n", 1);
  }
  v92 = *(std::__shared_weak_count **)&v158[16];
  if (*(_QWORD *)&v158[16])
  {
    v114 = (unint64_t *)(*(_QWORD *)&v158[16] + 8);
    do
      v94 = __ldaxr(v114);
    while (__stlxr(v94 - 1, v114));
    goto LABEL_263;
  }
LABEL_265:
  nullsub_4(v158);
  *(_BYTE *)(a5 + 120) = 1;
  if (v126)
    return;
LABEL_290:
  if (v125)
  {
    if (v124)
    {
      if (SHIBYTE(v123) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v120) < 0)
        operator delete(v119[0]);
    }
    if (v118 && SHIBYTE(v117) < 0)
    {
      v49 = (void *)v116;
      goto LABEL_299;
    }
  }
}

void sub_23972E83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,uint64_t a61,uint64_t a62,void *__p)
{
  uint64_t v63;
  void *v65;

  v65 = __p;
  __p = 0;
  if (v65)
    (*(void (**)(void *))(*(_QWORD *)v65 + 8))(v65);
  sub_239708268(v63 - 240);
  sub_239522F50((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_23972EBD0(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  unsigned int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;

  v2 = MEMORY[0x24BDAC740];
  while (1)
  {
    v3 = *a1;
    std::istream::tellg();
    while ((*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 2) == 0)
    {
      v4 = std::istream::peek();
      if (v4 <= 0x7F)
      {
        if ((*(_DWORD *)(v2 + 4 * v4 + 60) & 0x4000) == 0)
          break;
      }
      else if (!__maskrune(v4, 0x4000uLL))
      {
        break;
      }
      std::istream::seekg();
    }
    std::istream::tellg();
    if (v9 == v8)
    {
      v5 = *a1;
      std::istream::tellg();
      v6 = v5 + 4;
      while ((*((_BYTE *)v6 + *(_QWORD *)(*v5 - 24)) & 2) == 0)
      {
        if (std::istream::peek() != 35 || (*((_BYTE *)v6 + *(_QWORD *)(*v5 - 24)) & 2) != 0)
          break;
        while (std::istream::peek() != 10)
        {
          std::istream::seekg();
          if ((*((_BYTE *)v6 + *(_QWORD *)(*v5 - 24)) & 2) != 0)
            goto LABEL_2;
        }
      }
LABEL_2:
      std::istream::tellg();
      if (v9 == v8)
        return (*((_BYTE *)*a1 + *(_QWORD *)(**a1 - 24) + 32) & 2) == 0;
    }
  }
}

uint64_t sub_23972ED90(_QWORD *a1)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unint64_t v4;
  void **v5;
  char *v6;
  int v7;
  BOOL v8;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  size_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  char *v19;
  __int128 *v20;
  unint64_t v21;
  __int128 v22;
  char *v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  size_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  __int128 *v37;
  char *v38;
  unint64_t v39;
  __int128 v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  uint64_t v47;
  char *v49;
  char *v50;
  char *v51;
  void *v52[2];
  unsigned __int8 v53;

  v49 = 0;
  v50 = 0;
  v51 = 0;
  v2 = std::istream::peek();
  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) == 0)
  {
    v3 = v2;
    do
    {
      sub_239601608("0123456789", (uint64_t)v52);
      v4 = v53;
      if ((v53 & 0x80u) == 0)
        v5 = v52;
      else
        v5 = (void **)v52[0];
      if ((v53 & 0x80u) != 0)
        v4 = (unint64_t)v52[1];
      if (v4)
      {
        v6 = (char *)(v4 - 1);
        do
        {
          v7 = *(unsigned __int8 *)v5;
          v5 = (void **)((char *)v5 + 1);
          v8 = v7 == v3;
        }
        while (v7 != v3 && v6-- != 0);
        if (((char)v53 & 0x80000000) == 0)
        {
LABEL_16:
          if (!v8)
            break;
          goto LABEL_20;
        }
      }
      else
      {
        v8 = 0;
        if (((char)v53 & 0x80000000) == 0)
          goto LABEL_16;
      }
      operator delete(v52[0]);
      if (!v8)
        break;
LABEL_20:
      v10 = v50;
      if (v50 >= v51)
      {
        v12 = v50 - v49;
        v13 = v50 - v49 + 1;
        if (v13 < 0)
          goto LABEL_87;
        v14 = v51 - v49;
        if (2 * (v51 - v49) > (unint64_t)v13)
          v13 = 2 * v14;
        if (v14 >= 0x3FFFFFFFFFFFFFFFLL)
          v15 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v15 = v13;
        if (v15)
        {
          v16 = (char *)operator new(v15);
          v17 = &v16[v12];
          v16[v12] = v3;
          v11 = (uint64_t)&v16[v12 + 1];
          if (v50 != v49)
            goto LABEL_35;
        }
        else
        {
          v16 = 0;
          v17 = (char *)(v50 - v49);
          *(_BYTE *)v12 = v3;
          v11 = v12 + 1;
          if (v50 != v49)
          {
LABEL_35:
            if (v12 >= 8 && (unint64_t)(v49 - v16) >= 0x20)
            {
              if (v12 >= 0x20)
              {
                v18 = v12 & 0xFFFFFFFFFFFFFFE0;
                v19 = &v16[v12 - 16];
                v20 = (__int128 *)(v50 - 16);
                v21 = v12 & 0xFFFFFFFFFFFFFFE0;
                do
                {
                  v22 = *v20;
                  *((_OWORD *)v19 - 1) = *(v20 - 1);
                  *(_OWORD *)v19 = v22;
                  v19 -= 32;
                  v20 -= 2;
                  v21 -= 32;
                }
                while (v21);
                if (v12 == v18)
                  goto LABEL_50;
                if ((v12 & 0x18) != 0)
                  goto LABEL_43;
                v17 -= v18;
                v10 = &v50[-v18];
              }
              else
              {
                v18 = 0;
LABEL_43:
                v17 -= v12 & 0xFFFFFFFFFFFFFFF8;
                v23 = &v16[&v50[-v18] - v49 - 8];
                v24 = (uint64_t *)&v50[-v18 - 8];
                v25 = v18 - (v12 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  v26 = *v24--;
                  *(_QWORD *)v23 = v26;
                  v23 -= 8;
                  v25 += 8;
                }
                while (v25);
                v10 = &v50[-(v12 & 0xFFFFFFFFFFFFFFF8)];
                if (v12 == (v12 & 0xFFFFFFFFFFFFFFF8))
                {
LABEL_50:
                  v10 = v49;
                  v49 = v16;
                  v51 = &v16[v15];
                  if (!v10)
                    goto LABEL_32;
LABEL_31:
                  operator delete(v10);
                  goto LABEL_32;
                }
              }
            }
            v27 = v17 - 1;
            do
            {
              v28 = *--v10;
              *v27-- = v28;
            }
            while (v10 != v49);
            goto LABEL_50;
          }
        }
        v49 = v17;
        v51 = &v16[v15];
        if (v50)
          goto LABEL_31;
      }
      else
      {
        *v50 = v3;
        v11 = (uint64_t)(v50 + 1);
      }
LABEL_32:
      v50 = (char *)v11;
      std::istream::seekg();
      v3 = std::istream::peek();
    }
    while ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) == 0);
  }
  v29 = v50;
  if (v50 < v51)
  {
    *v50 = 10;
LABEL_83:
    v34 = v49;
    goto LABEL_84;
  }
  v30 = v50 - v49;
  v31 = v50 - v49 + 1;
  if (v31 < 0)
LABEL_87:
    sub_2394189F8();
  v32 = v51 - v49;
  if (2 * (v51 - v49) > (unint64_t)v31)
    v31 = 2 * v32;
  if (v32 >= 0x3FFFFFFFFFFFFFFFLL)
    v33 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v33 = v31;
  if (v33)
    v34 = (char *)operator new(v33);
  else
    v34 = 0;
  v35 = &v34[v30];
  v34[v30] = 10;
  if (v50 != v49)
  {
    if (v30 < 8 || (unint64_t)(v49 - v34) < 0x20)
      goto LABEL_79;
    if (v30 >= 0x20)
    {
      v36 = v30 & 0xFFFFFFFFFFFFFFE0;
      v37 = (__int128 *)(v50 - 16);
      v38 = &v34[v50 - 16 - v49];
      v39 = v30 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v40 = *v37;
        *((_OWORD *)v38 - 1) = *(v37 - 1);
        *(_OWORD *)v38 = v40;
        v38 -= 32;
        v37 -= 2;
        v39 -= 32;
      }
      while (v39);
      if (v30 == v36)
      {
LABEL_81:
        v29 = v49;
        v49 = v34;
        if (!v29)
          goto LABEL_84;
        goto LABEL_82;
      }
      if ((v30 & 0x18) == 0)
      {
        v35 -= v36;
        v29 = &v50[-v36];
        goto LABEL_79;
      }
    }
    else
    {
      v36 = 0;
    }
    v35 -= v30 & 0xFFFFFFFFFFFFFFF8;
    v41 = &v50[-v36 - 8];
    v42 = &v34[v41 - v49];
    v43 = v36 - (v30 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v44 = *(_QWORD *)v41;
      v41 -= 8;
      *(_QWORD *)v42 = v44;
      v42 -= 8;
      v43 += 8;
    }
    while (v43);
    v29 = &v50[-(v30 & 0xFFFFFFFFFFFFFFF8)];
    if (v30 == (v30 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_81;
LABEL_79:
    v45 = v35 - 1;
    do
    {
      v46 = *--v29;
      *v45-- = v46;
    }
    while (v29 != v49);
    goto LABEL_81;
  }
  v34 += v30;
  v49 = v35;
  if (v50)
  {
LABEL_82:
    operator delete(v29);
    goto LABEL_83;
  }
LABEL_84:
  v47 = atoi(v34);
  if (v34)
    operator delete(v34);
  return v47;
}

void sub_23972F1B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23972F1D0(uint64_t a1, int *a2)
{
  int v3;
  int v4;
  std::string v5;
  void *__p[2];
  char v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  char v13;
  char v14;

  if (*a2 >= 255)
    v3 = 0xFFFF;
  else
    v3 = 255;
  v4 = v3;
  sub_23972F2FC("Unsupported pnm format. Loader does not support intensity scaling. File specifies maximum intensity ", a2, " but should be ", &v4, ".", &v5);
  sub_239A42F9C(__p, (__int128 *)&v5);
  v14 = 1;
  sub_239720830(5u, (__int128 *)__p, a1);
  if (!v14)
    goto LABEL_11;
  if (v13)
  {
    if ((v12 & 0x80000000) == 0)
    {
      if ((v10 & 0x80000000) == 0)
        goto LABEL_8;
LABEL_14:
      operator delete(v9);
      if (!v8)
        goto LABEL_11;
      goto LABEL_9;
    }
    operator delete(v11);
    if (v10 < 0)
      goto LABEL_14;
  }
LABEL_8:
  if (!v8)
    goto LABEL_11;
LABEL_9:
  if (v7 < 0)
    operator delete(__p[0]);
LABEL_11:
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v5.__r_.__value_.__l.__data_);
}

void sub_23972F2D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  sub_239523188((uint64_t)&a17);
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_23972F2FC(const char *a1@<X0>, int *a2@<X1>, const char *a3@<X2>, int *a4@<X3>, const char *a5@<X4>, std::string *a6@<X8>)
{
  char *v11;
  int v12;
  _OWORD *v13;
  __int128 v14;
  char *v15;
  char *v16;
  size_t v17;
  size_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _OWORD *v23;
  __int128 v24;
  char *v25;
  char *v26;
  size_t v27;
  int64x2_t v28;
  int8x16_t v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  void *v37;
  void *__p;
  char *v39;
  unint64_t v40;
  std::string v41;

  __p = 0;
  v39 = 0;
  v40 = 0;
  v11 = sub_23972F688(&__p, a1);
  v12 = *a2;
  v39 = v11;
  std::to_string(&v41, v12);
  v13 = v39;
  if ((unint64_t)v39 < v40)
  {
    v14 = *(_OWORD *)&v41.__r_.__value_.__l.__data_;
    *((_QWORD *)v39 + 2) = *((_QWORD *)&v41.__r_.__value_.__l + 2);
    *v13 = v14;
    v15 = (char *)v13 + 24;
    v39 = (char *)v13 + 24;
    if ((unint64_t)v13 + 24 >= v40)
      goto LABEL_16;
LABEL_6:
    v17 = strlen(a3);
    if (v17 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v18 = v17;
    if (v17 >= 0x17)
    {
      v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v17 | 7) != 0x17)
        v20 = v17 | 7;
      v21 = v20 + 1;
      v19 = operator new(v20 + 1);
      *((_QWORD *)v15 + 1) = v18;
      *((_QWORD *)v15 + 2) = v21 | 0x8000000000000000;
      *(_QWORD *)v15 = v19;
    }
    else
    {
      v15[23] = v17;
      v19 = v15;
      if (!v17)
        goto LABEL_14;
    }
    memmove(v19, a3, v18);
LABEL_14:
    *((_BYTE *)v19 + v18) = 0;
    v22 = v15 + 24;
    goto LABEL_17;
  }
  v16 = sub_23941ACDC(&__p, (uint64_t)&v41);
  v15 = v16;
  v39 = v16;
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v41.__r_.__value_.__l.__data_);
    v15 = v39;
    if ((unint64_t)v39 < v40)
      goto LABEL_6;
  }
  else if ((unint64_t)v16 < v40)
  {
    goto LABEL_6;
  }
LABEL_16:
  v22 = sub_239621C68(&__p, a3);
LABEL_17:
  v39 = v22;
  std::to_string(&v41, *a4);
  v23 = v39;
  if ((unint64_t)v39 < v40)
  {
    v24 = *(_OWORD *)&v41.__r_.__value_.__l.__data_;
    *((_QWORD *)v39 + 2) = *((_QWORD *)&v41.__r_.__value_.__l + 2);
    *v23 = v24;
    v25 = (char *)v23 + 24;
    v39 = (char *)v23 + 24;
    if ((unint64_t)v23 + 24 >= v40)
      goto LABEL_32;
LABEL_22:
    v27 = strlen(a5);
    if (v27 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v30 = v27;
    if (v27 >= 0x17)
    {
      v32 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v27 | 7) != 0x17)
        v32 = v27 | 7;
      v33 = v32 + 1;
      v31 = operator new(v32 + 1);
      *((_QWORD *)v25 + 1) = v30;
      *((_QWORD *)v25 + 2) = v33 | 0x8000000000000000;
      *(_QWORD *)v25 = v31;
    }
    else
    {
      v25[23] = v27;
      v31 = v25;
      if (!v27)
        goto LABEL_30;
    }
    memmove(v31, a5, v30);
LABEL_30:
    *((_BYTE *)v31 + v30) = 0;
    v34 = v25 + 24;
    goto LABEL_33;
  }
  v26 = sub_23941ACDC(&__p, (uint64_t)&v41);
  v25 = v26;
  v39 = v26;
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v41.__r_.__value_.__l.__data_);
    v25 = v39;
    if ((unint64_t)v39 < v40)
      goto LABEL_22;
  }
  else if ((unint64_t)v26 < v40)
  {
    goto LABEL_22;
  }
LABEL_32:
  v34 = sub_239583C68(&__p, a5);
LABEL_33:
  v39 = v34;
  *((_BYTE *)&v41.__r_.__value_.__s + 23) = 0;
  v41.__r_.__value_.__s.__data_[0] = 0;
  sub_23941AE44((uint64_t)__p, (uint64_t)v34, (uint64_t)&v41, a6, v28, v29);
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v41.__r_.__value_.__l.__data_);
  v35 = (char *)__p;
  if (__p)
  {
    v36 = v39;
    v37 = __p;
    if (v39 != __p)
    {
      do
      {
        if (*(v36 - 1) < 0)
          operator delete(*((void **)v36 - 3));
        v36 -= 24;
      }
      while (v36 != v35);
      v37 = __p;
    }
    v39 = v35;
    operator delete(v37);
  }
}

void sub_23972F608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

char *sub_23972F688(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23972F8A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23972F8B4(uint64_t a1, _QWORD *a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t v7;
  void **v8;
  char *v9;
  int v10;
  BOOL v11;
  unint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  __int128 *v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  size_t v40;
  _BYTE *v41;
  char *v42;
  char *v43;
  unint64_t v44;
  __int128 *v45;
  _OWORD *v46;
  unint64_t v47;
  __int128 v48;
  char *v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  void *v56[2];
  unsigned __int8 v57;

  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)a1)
    *(_QWORD *)(a1 + 8) = *(_QWORD *)a1;
  v4 = std::istream::peek();
  if ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0)
  {
    v5 = v4;
    do
    {
      sub_239601608("0123456789", (uint64_t)v56);
      v7 = v57;
      if ((v57 & 0x80u) == 0)
        v8 = v56;
      else
        v8 = (void **)v56[0];
      if ((v57 & 0x80u) != 0)
        v7 = (unint64_t)v56[1];
      if (v7)
      {
        v9 = (char *)(v7 - 1);
        do
        {
          v10 = *(unsigned __int8 *)v8;
          v8 = (void **)((char *)v8 + 1);
          v11 = v10 == v5;
        }
        while (v10 != v5 && v9-- != 0);
        if (((char)v57 & 0x80000000) == 0)
        {
LABEL_20:
          if (!v11)
            break;
          goto LABEL_24;
        }
      }
      else
      {
        v11 = 0;
        if (((char)v57 & 0x80000000) == 0)
          goto LABEL_20;
      }
      operator delete(v56[0]);
      if (!v11)
        break;
LABEL_24:
      v14 = *(unsigned __int8 **)(a1 + 8);
      v13 = *(_QWORD *)(a1 + 16);
      if ((unint64_t)v14 >= v13)
      {
        v15 = *(unsigned __int8 **)a1;
        v16 = (unint64_t)&v14[-*(_QWORD *)a1];
        v17 = v16 + 1;
        if ((uint64_t)(v16 + 1) < 0)
          goto LABEL_85;
        v18 = v13 - (_QWORD)v15;
        if (2 * v18 > v17)
          v17 = 2 * v18;
        if (v18 >= 0x3FFFFFFFFFFFFFFFLL)
          v19 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v19 = v17;
        if (v19)
        {
          v20 = (char *)operator new(v19);
          v21 = &v20[v16];
          v20[v16] = v5;
          v6 = (uint64_t)&v20[v16 + 1];
          if (v14 == v15)
          {
LABEL_51:
            *(_QWORD *)a1 = v21;
            *(_QWORD *)(a1 + 8) = v6;
            *(_QWORD *)(a1 + 16) = &v20[v19];
            if (v14)
              operator delete(v14);
            goto LABEL_6;
          }
        }
        else
        {
          v20 = 0;
          v21 = (char *)&v14[-*(_QWORD *)a1];
          *(_BYTE *)v16 = v5;
          v6 = v16 + 1;
          if (v14 == v15)
            goto LABEL_51;
        }
        if (v16 >= 8 && (unint64_t)(v15 - (unsigned __int8 *)v20) >= 0x20)
        {
          if (v16 >= 0x20)
          {
            v22 = v16 & 0xFFFFFFFFFFFFFFE0;
            v23 = &v20[v16 - 16];
            v24 = (__int128 *)(v14 - 16);
            v25 = v16 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v26 = *v24;
              *((_OWORD *)v23 - 1) = *(v24 - 1);
              *(_OWORD *)v23 = v26;
              v23 -= 32;
              v24 -= 2;
              v25 -= 32;
            }
            while (v25);
            if (v16 == v22)
              goto LABEL_50;
            if ((v16 & 0x18) != 0)
              goto LABEL_43;
            v21 -= v22;
            v14 -= v22;
          }
          else
          {
            v22 = 0;
LABEL_43:
            v21 -= v16 & 0xFFFFFFFFFFFFFFF8;
            v27 = &v20[&v14[-v22] - v15 - 8];
            v28 = (uint64_t *)&v14[-v22 - 8];
            v29 = v22 - (v16 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              v30 = *v28--;
              *(_QWORD *)v27 = v30;
              v27 -= 8;
              v29 += 8;
            }
            while (v29);
            v14 -= v16 & 0xFFFFFFFFFFFFFFF8;
            if (v16 == (v16 & 0xFFFFFFFFFFFFFFF8))
            {
LABEL_50:
              v14 = *(unsigned __int8 **)a1;
              v21 = v20;
              goto LABEL_51;
            }
          }
        }
        v31 = v21 - 1;
        do
        {
          v32 = *--v14;
          *v31-- = v32;
        }
        while (v14 != v15);
        goto LABEL_50;
      }
      *v14 = v5;
      v6 = (uint64_t)(v14 + 1);
LABEL_6:
      *(_QWORD *)(a1 + 8) = v6;
      std::istream::seekg();
      v5 = std::istream::peek();
    }
    while ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0);
  }
  v34 = *(unsigned __int8 **)(a1 + 8);
  v33 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v34 >= v33)
  {
    v36 = *(unsigned __int8 **)a1;
    v37 = (unint64_t)&v34[-*(_QWORD *)a1];
    v38 = v37 + 1;
    if ((uint64_t)(v37 + 1) < 0)
LABEL_85:
      sub_2394189F8();
    v39 = v33 - (_QWORD)v36;
    if (2 * v39 > v38)
      v38 = 2 * v39;
    if (v39 >= 0x3FFFFFFFFFFFFFFFLL)
      v40 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v40 = v38;
    if (v40)
      v41 = operator new(v40);
    else
      v41 = 0;
    v42 = &v41[v37];
    v43 = &v41[v40];
    v41[v37] = 10;
    v35 = (uint64_t)&v41[v37 + 1];
    if (v34 == v36)
    {
      *(_QWORD *)a1 = v42;
      *(_QWORD *)(a1 + 8) = v35;
      *(_QWORD *)(a1 + 16) = v43;
      if (!v34)
        goto LABEL_84;
      goto LABEL_83;
    }
    if (v37 < 8 || (unint64_t)(v36 - v41) < 0x20)
      goto LABEL_80;
    if (v37 >= 0x20)
    {
      v44 = v37 & 0xFFFFFFFFFFFFFFE0;
      v45 = (__int128 *)(v34 - 16);
      v46 = &v41[v34 - 16 - v36];
      v47 = v37 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v48 = *v45;
        *(v46 - 1) = *(v45 - 1);
        *v46 = v48;
        v46 -= 2;
        v45 -= 2;
        v47 -= 32;
      }
      while (v47);
      if (v37 == v44)
      {
LABEL_82:
        v34 = *(unsigned __int8 **)a1;
        *(_QWORD *)a1 = v41;
        *(_QWORD *)(a1 + 8) = v35;
        *(_QWORD *)(a1 + 16) = v43;
        if (!v34)
          goto LABEL_84;
LABEL_83:
        operator delete(v34);
        goto LABEL_84;
      }
      if ((v37 & 0x18) == 0)
      {
        v42 -= v44;
        v34 -= v44;
        goto LABEL_80;
      }
    }
    else
    {
      v44 = 0;
    }
    v42 -= v37 & 0xFFFFFFFFFFFFFFF8;
    v49 = (char *)&v34[-v44 - 8];
    v50 = &v41[v49 - (char *)v36];
    v51 = v44 - (v37 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v52 = *(_QWORD *)v49;
      v49 -= 8;
      *v50-- = v52;
      v51 += 8;
    }
    while (v51);
    v34 -= v37 & 0xFFFFFFFFFFFFFFF8;
    if (v37 == (v37 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_82;
LABEL_80:
    v53 = v42 - 1;
    do
    {
      v54 = *--v34;
      *v53-- = v54;
    }
    while (v34 != v36);
    goto LABEL_82;
  }
  *v34 = 10;
  v35 = (uint64_t)(v34 + 1);
LABEL_84:
  *(_QWORD *)(a1 + 8) = v35;
  return atoi(*(const char **)a1);
}

double sub_23972FCB8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23972FD20(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23972FD8C()
{
  return 2;
}

uint64_t sub_23972FD94(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_23972FD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_23972FDB8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23972FE3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _BOOL8 v11;
  _BOOL4 v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int16 v18;
  std::__shared_weak_count *size;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::logic_error *exception;
  std::string v24;

  if (*(_DWORD *)(a1 + 48) != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23973009C(a1, &v24);
    std::logic_error::logic_error(exception, &v24);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v24.__r_.__value_.__r.__words[0] = v4;
      v24.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_DWORD *)(a1 + 24);
  v11 = v10 != 0;
  v12 = v10 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v12 = 1;
  v13 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v14 = !v12;
  if (v12)
    v13 = 0;
  v15 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v15 = 0;
  if (HIDWORD(v15) * HIDWORD(v13) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v16 = *(_QWORD *)(a1 + 40);
  v17 = v13 | v11;
  v18 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v24.__r_.__value_.__l.__size_;
  if (v24.__r_.__value_.__l.__size_)
  {
    v20 = (unint64_t *)(v24.__r_.__value_.__l.__size_ + 8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    *(_QWORD *)a2 = v24.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_WORD *)(a2 + 40) = v18;
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v24.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_WORD *)(a2 + 40) = v18;
  }
}

void sub_239730050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_23973009C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239730114();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239730114()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931540);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931540))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23970E61C();
    sub_239730318((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239730318((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931528, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931528, &dword_23940C000);
          __cxa_guard_release(&qword_256931540);
          return &stru_256931528;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931528;
}

void sub_239730264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931540);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931540);
  _Unwind_Resume(a1);
}

void sub_239730318(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397303AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_2397303E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 21)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397306B4(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v15;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * (_DWORD)v18 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_239730668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397306B4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23973072C();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23973072C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931560);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931560))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_239469DC0();
    sub_239730930((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239730930((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931548, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931548, &dword_23940C000);
          __cxa_guard_release(&qword_256931560);
          return &stru_256931548;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931548;
}

void sub_23973087C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931560);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931560);
  _Unwind_Resume(a1);
}

void sub_239730930(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397309C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_239730A00(uint64_t a1)
{
  double result;

  sub_239416DA0(a1 + 8);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

uint64_t sub_239730A28@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_239730C74(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE4350;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_2398264AC((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[36] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_23980FD4C(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_239730B3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239730D5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239730B50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239730D5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239730B74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239730D5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239730B90(uint64_t a1)
{
  sub_239416DA0(a1 + 8);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239730BCC()
{
  return 2;
}

uint64_t sub_239730BD4(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_239730BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 2, a1 + 64, 2, a1 + 72, 2);
}

uint64_t sub_239730BF8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

double sub_239730C74@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250AE4270;
  sub_23981E7B0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE42B8;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  return sub_23980FD4C((uint64_t)v5);
}

void sub_239730D18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23980FD4C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239730D48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23980FD4C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_239730D5C(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_23980FD4C(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

void sub_239730DA4()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239730DB8()
{
  return 2;
}

__int128 *sub_239730DC4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256931580);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931580))
  {
    v2 = sub_239730E9C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256931568, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256931578 = *((_QWORD *)v2 + 2);
      xmmword_256931568 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931568, &dword_23940C000);
    __cxa_guard_release(&qword_256931580);
  }
  if (byte_25693157F >= 0)
    return &xmmword_256931568;
  else
    return (__int128 *)xmmword_256931568;
}

void sub_239730E84(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931580);
  _Unwind_Resume(a1);
}

__int128 *sub_239730E9C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569315A0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569315A0))
    return &xmmword_256931588;
  v2 = sub_239730F78();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256931588, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256931598 = v2->__r_.__value_.__r.__words[2];
    xmmword_256931588 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931588, &dword_23940C000);
  __cxa_guard_release(&qword_2569315A0);
  return &xmmword_256931588;
}

void sub_239730F60(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569315A0);
  _Unwind_Resume(a1);
}

std::string *sub_239730F78()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569315C0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569315C0))
    return &stru_2569315A8;
  sub_239731218((uint64_t)__p);
  sub_239731068((uint64_t)__p, &stru_2569315A8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569315A8, &dword_23940C000);
  __cxa_guard_release(&qword_2569315C0);
  return &stru_2569315A8;
}

void sub_239731028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2569315C0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2569315C0);
  _Unwind_Resume(a1);
}

void sub_239731068(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256931460);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931460))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray16u]", &xmmword_256931448);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931448, &dword_23940C000);
    __cxa_guard_release(&qword_256931460);
  }
  if (byte_25693145F < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256931448, *((unint64_t *)&xmmword_256931448 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256931448;
    v13 = unk_256931458;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_2397311D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931460);
  _Unwind_Resume(a1);
}

void sub_2397311EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239731218(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569315E0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569315E0))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Gray16u>]", qword_2569315C8);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569315C8, &dword_23940C000);
    __cxa_guard_release(&qword_2569315E0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256931600);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256931600))
  {
    v5 = sub_239423A18(qword_2569315C8, "<", 0);
    sub_239423914(qword_2569315C8, 0, v5, qword_2569315E8);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569315E8, &dword_23940C000);
    __cxa_guard_release(&qword_256931600);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256931620);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256931620))
  {
    sub_239A44118((std::string::size_type)qword_2569315E8, (std::string *)&xmmword_256931608);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931608, &dword_23940C000);
    __cxa_guard_release(&qword_256931620);
  }
  if (byte_25693161F < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256931608, *((unint64_t *)&xmmword_256931608 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256931608;
    *(_QWORD *)(a1 + 16) = unk_256931618;
  }
}

void sub_2397313B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931620);
  _Unwind_Resume(a1);
}

void sub_2397313CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931600);
  _Unwind_Resume(a1);
}

void sub_2397313E4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569315E0);
  _Unwind_Resume(a1);
}

void sub_239731400(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239731424(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_23980FD4C(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239731458(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE2EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE2EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2397314C8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  char *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  unint64_t v39;
  _QWORD *v40;
  char *v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 *v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  unsigned __int8 v54;
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[5];
  uint64_t v60;
  uint64_t v61;
  void *__p;
  void *v63;
  char *v64;
  uint64_t v65;
  unsigned __int8 v66;
  _QWORD *v67;
  unsigned __int8 *v68;
  _QWORD *v69;

  if (!*(_DWORD *)(a3 + 32) || !*(_DWORD *)(a3 + 36))
    return;
  v5 = *(_QWORD *)(a3 + 32);
  v64 = 0;
  v65 = v5;
  __p = 0;
  v63 = 0;
  if (!*(_BYTE *)(a4 + 24))
  {
    v8 = operator new(0x10uLL);
    *v8 = " ";
    v8[1] = "\n";
    v7 = v8 + 2;
    __p = v8;
    v63 = v8 + 2;
    v64 = (char *)(v8 + 2);
    goto LABEL_40;
  }
  v7 = *(_QWORD **)(a4 + 8);
  v6 = *(_QWORD *)(a4 + 16);
  __p = *(void **)a4;
  v8 = __p;
  v63 = v7;
  v64 = (char *)v6;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  if (v8 != v7)
  {
    v9 = (char *)v7 - (char *)v8;
    if ((char *)v7 - (char *)v8 != 8)
      goto LABEL_40;
LABEL_19:
    if (v7 < (_QWORD *)v64)
    {
      *v7 = "\n";
      v14 = __p;
      v15 = v7 + 1;
LABEL_39:
      v63 = v15;
      v8 = v14;
      v7 = v15;
      goto LABEL_40;
    }
    v16 = v9 >> 3;
    v17 = v64 - (char *)v8;
    if ((v64 - (char *)v8) >> 2 <= (unint64_t)((v9 >> 3) + 1))
      v18 = v16 + 1;
    else
      v18 = v17 >> 2;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8)
      v19 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v19 = v18;
    if (v19 >> 61)
      sub_239418A80();
    v20 = operator new(8 * v19);
    v14 = &v20[8 * v16];
    v21 = &v20[8 * v19];
    *v14 = "\n";
    v15 = v14 + 1;
    if (v7 != v8)
    {
      v22 = (char *)v7 - (char *)v8 - 8;
      if (v22 < 0x58)
      {
        v23 = v7;
        goto LABEL_36;
      }
      if ((unint64_t)((char *)v7 - (v9 & 0xFFFFFFFFFFFFFFF8) - v20) < 0x20)
      {
        v23 = v7;
        do
        {
LABEL_36:
          v30 = *--v23;
          *--v14 = v30;
        }
        while (v23 != v8);
        goto LABEL_37;
      }
      v24 = (v22 >> 3) + 1;
      v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
      v23 = &v7[v25 / 0xFFFFFFFFFFFFFFF8];
      v14 = (_QWORD *)((char *)v14 - v25);
      v26 = &v20[8 * v16 - 16];
      v27 = (__int128 *)(v7 - 2);
      v28 = v24 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v29 = *v27;
        *(v26 - 1) = *(v27 - 1);
        *v26 = v29;
        v26 -= 2;
        v27 -= 2;
        v28 -= 4;
      }
      while (v28);
      if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_36;
    }
LABEL_37:
    __p = v14;
    v64 = v21;
    if (v8)
      operator delete(v8);
    goto LABEL_39;
  }
  if ((unint64_t)v7 >= v6)
  {
    v11 = v6 - (_QWORD)v7;
    v12 = v11 >> 2;
    if ((unint64_t)(v11 >> 2) <= 1)
      v12 = 1;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v13 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v13 = v12;
    if (v13 >> 61)
      sub_239418A80();
    v8 = operator new(8 * v13);
    *v8 = " ";
    v10 = v8 + 1;
    __p = v8;
    v64 = (char *)&v8[v13];
    if (v7)
      operator delete(v7);
  }
  else
  {
    *v7 = " ";
    v8 = __p;
    v10 = v7 + 1;
  }
  v63 = v10;
  v7 = v10;
  v9 = (char *)v10 - (char *)v8;
  if ((char *)v10 - (char *)v8 == 8)
    goto LABEL_19;
LABEL_40:
  v31 = (char *)v7 - (char *)v8;
  v61 = v7 - v8 - 1;
  if ((unint64_t)((char *)v7 - (char *)v8) <= 0xF)
  {
    v32 = (char *)v8;
    while (v7 < (_QWORD *)v64)
    {
      *v7 = "\n";
      v32 = (char *)__p;
      v33 = v7 + 1;
LABEL_43:
      v63 = v33;
      v31 = (char *)v33 - v32;
      v8 = v32;
      v7 = v33;
      if ((unint64_t)((char *)v33 - v32) >= 0x10)
        goto LABEL_69;
    }
    v34 = v31 >> 3;
    v35 = v64 - v32;
    if ((v64 - v32) >> 2 <= (v31 >> 3) + 1)
      v36 = v34 + 1;
    else
      v36 = v35 >> 2;
    if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8)
      v37 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v37 = v36;
    if (v37 >> 61)
      sub_239418A80();
    v38 = (char *)operator new(8 * v37);
    v32 = &v38[8 * v34];
    *(_QWORD *)v32 = "\n";
    v33 = v32 + 8;
    if (v7 != v8)
    {
      v39 = (char *)(v7 - 1) - (char *)v8;
      if (v39 < 0x168)
      {
        v40 = v7;
        goto LABEL_66;
      }
      v41 = &v38[v31 & 0xFFFFFFFFFFFFFFF8];
      v42 = &v41[-(v39 & 0xFFFFFFFFFFFFFFF8) - 8] > v41 - 8
         || (_QWORD *)((char *)v7 - (v39 & 0xFFFFFFFFFFFFFFF8) - 8) > v7 - 1;
      if (v42)
      {
        v40 = v7;
        goto LABEL_66;
      }
      if ((unint64_t)((char *)v7 - v41) < 0x20)
      {
        v40 = v7;
        do
        {
LABEL_66:
          v49 = *--v40;
          *((_QWORD *)v32 - 1) = v49;
          v32 -= 8;
        }
        while (v40 != v8);
        goto LABEL_67;
      }
      v43 = (v39 >> 3) + 1;
      v44 = 8 * (v43 & 0x3FFFFFFFFFFFFFFCLL);
      v40 = &v7[v44 / 0xFFFFFFFFFFFFFFF8];
      v32 -= v44;
      v45 = &v38[(v31 & 0xFFFFFFFFFFFFFFF8) - 16];
      v46 = (__int128 *)(v7 - 2);
      v47 = v43 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v48 = *v46;
        *((_OWORD *)v45 - 1) = *(v46 - 1);
        *(_OWORD *)v45 = v48;
        v45 -= 32;
        v46 -= 2;
        v47 -= 4;
      }
      while (v47);
      if (v43 != (v43 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_66;
    }
LABEL_67:
    __p = v32;
    v64 = &v38[8 * v37];
    if (v8)
      operator delete(v8);
    goto LABEL_43;
  }
LABEL_69:
  v59[0] = &v60;
  v59[1] = &v65;
  v59[2] = &__p;
  v59[3] = &v61;
  v59[4] = a1;
  v60 = 0;
  LOBYTE(v57[0]) = 0;
  v66 = -1;
  v67 = v57;
  v68 = &v66;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
  {
    sub_239731A54((uint64_t)&v67, a3);
    v50 = a2;
    v51 = v66;
    if (!v66)
    {
      LOBYTE(v52) = 0;
      goto LABEL_76;
    }
  }
  else
  {
    v51 = 255;
    v50 = a2;
  }
  LOBYTE(v52) = 0;
  do
  {
    LOBYTE(v52) = v52 + 1;
    v42 = v51 > 9;
    v51 /= 0xAu;
  }
  while (v42);
LABEL_76:
  v53 = LOBYTE(v57[0]);
  if (LOBYTE(v57[0]))
  {
    v54 = 0;
    do
    {
      ++v54;
      v42 = v53 > 9;
      v53 /= 0xAu;
    }
    while (v42);
  }
  else
  {
    v54 = 0;
  }
  LODWORD(v52) = v52;
  if (v54 > v52)
    LODWORD(v52) = v54;
  if (v52 <= 1)
    v52 = 1;
  else
    v52 = v52;
  v58[0] = v52;
  v58[1] = 0;
  v57[0] = v50;
  v57[1] = v58;
  v67 = 0;
  sub_239731C64(a1, v50, (unsigned int *)&v67, 1u, v61);
  v67 = v57;
  v68 = (unsigned __int8 *)v59;
  v69 = v50;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
    sub_239731E7C((uint64_t)&v67, a3);
  if (__p)
  {
    v63 = __p;
    operator delete(__p);
  }
}

void sub_239731A20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239731A54(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  unsigned __int8 **v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  BOOL v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int i;
  int v19;
  _BYTE *v20;
  unsigned int v21;
  unsigned __int8 *v22;
  unsigned int v23;
  unsigned int v24;
  unsigned __int8 *v25;
  unsigned int v26;
  unsigned int v27;
  unsigned __int8 *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned __int8 *v31;
  unsigned int v32;
  unsigned int v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v6 = (unsigned __int8 **)result;
    v7 = v2 - 1;
    v8 = *(unsigned int *)(a2 + 40);
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v11 = v10 == 0;
    else
      v11 = 1;
    if (!v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v10 = *(_BYTE **)(a2 + 24);
    }
    v17 = v3 - 1;
    if (v7)
    {
      if (v3 == 1)
      {
        do
        {
          v27 = **v6;
          if (v27 <= *v10)
            LOBYTE(v27) = *v10;
          **v6 = v27;
          v28 = v6[1];
          v29 = *v10;
          if (v29 >= *v28)
            LOBYTE(v29) = *v28;
          *v28 = v29;
          v10 += v9;
          --v7;
        }
        while (v7);
      }
      else
      {
        for (i = 0; i != v7; ++i)
        {
          v19 = v3 - 1;
          v20 = v10;
          do
          {
            v21 = **v6;
            if (v21 <= *v20)
              LOBYTE(v21) = *v20;
            **v6 = v21;
            v22 = v6[1];
            v23 = *v20;
            if (v23 >= *v22)
              LOBYTE(v23) = *v22;
            *v22 = v23;
            v20 += v8;
            --v19;
          }
          while (v19);
          v24 = **v6;
          if (v24 <= *v20)
            LOBYTE(v24) = *v20;
          **v6 = v24;
          v25 = v6[1];
          v26 = *v20;
          if (v26 >= *v25)
            LOBYTE(v26) = *v25;
          *v25 = v26;
          v10 += v9;
        }
      }
    }
    if (v3 != 1)
    {
      do
      {
        v30 = **v6;
        if (v30 <= *v10)
          LOBYTE(v30) = *v10;
        **v6 = v30;
        v31 = v6[1];
        v32 = *v10;
        if (v32 >= *v31)
          LOBYTE(v32) = *v31;
        *v31 = v32;
        v10 += v8;
        --v17;
      }
      while (v17);
    }
    v33 = **v6;
    if (v33 <= *v10)
      LOBYTE(v33) = *v10;
    **v6 = v33;
    v34 = v6[1];
    v35 = *v10;
    if (v35 >= *v34)
      LOBYTE(v35) = *v34;
    *v34 = v35;
  }
  return result;
}

_QWORD *sub_239731C64(uint64_t a1, _QWORD *a2, unsigned int *a3, unsigned int a4, unsigned int a5)
{
  unsigned int v6;
  uint64_t v9;
  _QWORD *result;
  std::string *v11;
  std::string::size_type size;
  std::string *v13;
  std::string::size_type v14;
  std::string *v15;
  std::string::size_type v16;
  std::string *v17;
  std::string::size_type v18;
  uint64_t v19;
  std::string v20;

  if (a4 > a5)
  {
    v6 = a4;
    v9 = a4;
    do
    {
      v19 = *(_QWORD *)a3;
      ++*(_DWORD *)((char *)&v19 + v9 * 4);
      sub_239458500(a2, (uint64_t)"[", 1);
      std::to_string(&v20, v6);
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v11 = &v20;
      else
        v11 = (std::string *)v20.__r_.__value_.__r.__words[0];
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
      else
        size = v20.__r_.__value_.__l.__size_;
      sub_239458500(a2, (uint64_t)v11, size);
      if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v20.__r_.__value_.__l.__data_);
      sub_239458500(a2, (uint64_t)"d-slice #", 9);
      std::to_string(&v20, a3[v9]);
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = &v20;
      else
        v13 = (std::string *)v20.__r_.__value_.__r.__words[0];
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v14 = HIBYTE(v20.__r_.__value_.__r.__words[2]);
      else
        v14 = v20.__r_.__value_.__l.__size_;
      sub_239458500(a2, (uint64_t)v13, v14);
      if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v20.__r_.__value_.__l.__data_);
      sub_239458500(a2, (uint64_t)": ", 2);
      sub_239627FD8(a3, &v20);
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v15 = &v20;
      else
        v15 = (std::string *)v20.__r_.__value_.__r.__words[0];
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v16 = HIBYTE(v20.__r_.__value_.__r.__words[2]);
      else
        v16 = v20.__r_.__value_.__l.__size_;
      sub_239458500(a2, (uint64_t)v15, v16);
      if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v20.__r_.__value_.__l.__data_);
      sub_239458500(a2, (uint64_t)" to ", 4);
      sub_239627FD8((unsigned int *)&v19, &v20);
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v17 = &v20;
      else
        v17 = (std::string *)v20.__r_.__value_.__r.__words[0];
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v18 = HIBYTE(v20.__r_.__value_.__r.__words[2]);
      else
        v18 = v20.__r_.__value_.__l.__size_;
      sub_239458500(a2, (uint64_t)v17, v18);
      if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v20.__r_.__value_.__l.__data_);
      result = sub_239458500(a2, (uint64_t)"]\n", 2);
      --v6;
      --v9;
    }
    while (v6 > a5);
  }
  return result;
}

void sub_239731E54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239731E7C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v7;
  unsigned __int8 *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  _DWORD v14[5];
  char v15;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v14[0] = 0;
    v14[1] = v3 - 1;
    v7 = *(_DWORD *)(a2 + 44);
    v14[2] = *(_DWORD *)(a2 + 40);
    v14[3] = v2 - 1;
    v14[4] = v7;
    v8 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v8)
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(std::__shared_weak_count **)(a2 + 16);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v9 + 88))(v9, 0, "unknown location");
      v8 = *(unsigned __int8 **)(a2 + 24);
    }
    v15 = 0;
    sub_239731F60(v14, (uint64_t)&v15, a1, v8);
  }
}

void sub_239731F60(_DWORD *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  int v7;
  unsigned __int8 *v8;
  int v9;
  uint64_t v10;
  size_t v11;
  uint64_t *v12;
  unsigned int v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  _DWORD *v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  std::string __p;

  if (a1[3])
  {
    v7 = 0;
    while (1)
    {
      v22 = v7;
      v8 = a4;
      if (a1[1])
        break;
LABEL_3:
      sub_239732124(a3, v8);
      a4 += a1[4];
      v7 = v22 + 1;
      if ((v22 + 1) >= a1[3])
        goto LABEL_14;
    }
    v9 = 0;
    v8 = a4;
    while (1)
    {
      v12 = **(uint64_t ***)a3;
      v13 = **(unsigned __int8 **)(*(_QWORD *)a3 + 8);
      sub_239647BEC(v8, &__p);
      sub_2399166C0(v12, (uint64_t)&__p, v13);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v15 = *(_QWORD *)(a3 + 8);
      v14 = *(_QWORD **)(a3 + 16);
      v16 = *(_QWORD *)(v15 + 32);
      v17 = *(unsigned int **)v15;
      v18 = *(_DWORD **)(v15 + 8);
      v19 = **(_DWORD **)v15 + 1;
      **(_DWORD **)v15 = v19;
      if (v19 == *v18)
      {
        v20 = v17[1] + 1;
        *v17 = 0;
        v17[1] = v20;
        if (v20 == v18[1])
          goto LABEL_8;
        v10 = 1;
      }
      else
      {
        v10 = 0;
      }
      v11 = strlen(*(const char **)(**(_QWORD **)(v15 + 16) + 8 * v10));
      sub_239458500(v14, *(_QWORD *)(**(_QWORD **)(v15 + 16) + 8 * v10), v11);
      sub_239731C64(v16, v14, *(unsigned int **)v15, v10, **(_DWORD **)(v15 + 24));
LABEL_8:
      v8 += a1[2];
      if (++v9 >= a1[1])
        goto LABEL_3;
    }
  }
LABEL_14:
  if (a1[1])
  {
    v21 = 0;
    do
    {
      sub_239732124(a3, a4);
      a4 += a1[2];
      ++v21;
    }
    while (v21 < a1[1]);
  }
  sub_239732124(a3, a4);
}

void sub_239732108(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239732124(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t *v3;
  unsigned int v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  _DWORD *v9;
  int v10;
  int v11;
  uint64_t v12;
  size_t v13;
  std::string __p;

  v3 = **(uint64_t ***)a1;
  v4 = **(unsigned __int8 **)(*(_QWORD *)a1 + 8);
  sub_239647BEC(a2, &__p);
  sub_2399166C0(v3, (uint64_t)&__p, v4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD **)(a1 + 16);
  v7 = *(_QWORD *)(v6 + 32);
  v8 = *(unsigned int **)v6;
  v9 = *(_DWORD **)(v6 + 8);
  v10 = **(_DWORD **)v6 + 1;
  **(_DWORD **)v6 = v10;
  if (v10 == *v9)
  {
    v11 = v8[1] + 1;
    *v8 = 0;
    v8[1] = v11;
    if (v11 == v9[1])
      return;
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  v13 = strlen(*(const char **)(**(_QWORD **)(v6 + 16) + 8 * v12));
  sub_239458500(v5, *(_QWORD *)(**(_QWORD **)(v6 + 16) + 8 * v12), v13);
  sub_239731C64(v7, v5, *(unsigned int **)v6, v12, **(_DWORD **)(v6 + 24));
}

void sub_239732218(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239732234(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  char *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  unint64_t v39;
  _QWORD *v40;
  char *v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 *v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  unsigned __int8 v54;
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[5];
  uint64_t v60;
  uint64_t v61;
  void *__p;
  void *v63;
  char *v64;
  uint64_t v65;
  unsigned __int16 v66;
  _QWORD *v67;
  unsigned __int16 *v68;
  _QWORD *v69;

  if (!*(_DWORD *)(a3 + 32) || !*(_DWORD *)(a3 + 36))
    return;
  v5 = *(_QWORD *)(a3 + 32);
  v64 = 0;
  v65 = v5;
  __p = 0;
  v63 = 0;
  if (!*(_BYTE *)(a4 + 24))
  {
    v8 = operator new(0x10uLL);
    *v8 = " ";
    v8[1] = "\n";
    v7 = v8 + 2;
    __p = v8;
    v63 = v8 + 2;
    v64 = (char *)(v8 + 2);
    goto LABEL_40;
  }
  v7 = *(_QWORD **)(a4 + 8);
  v6 = *(_QWORD *)(a4 + 16);
  __p = *(void **)a4;
  v8 = __p;
  v63 = v7;
  v64 = (char *)v6;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  if (v8 != v7)
  {
    v9 = (char *)v7 - (char *)v8;
    if ((char *)v7 - (char *)v8 != 8)
      goto LABEL_40;
LABEL_19:
    if (v7 < (_QWORD *)v64)
    {
      *v7 = "\n";
      v14 = __p;
      v15 = v7 + 1;
LABEL_39:
      v63 = v15;
      v8 = v14;
      v7 = v15;
      goto LABEL_40;
    }
    v16 = v9 >> 3;
    v17 = v64 - (char *)v8;
    if ((v64 - (char *)v8) >> 2 <= (unint64_t)((v9 >> 3) + 1))
      v18 = v16 + 1;
    else
      v18 = v17 >> 2;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8)
      v19 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v19 = v18;
    if (v19 >> 61)
      sub_239418A80();
    v20 = operator new(8 * v19);
    v14 = &v20[8 * v16];
    v21 = &v20[8 * v19];
    *v14 = "\n";
    v15 = v14 + 1;
    if (v7 != v8)
    {
      v22 = (char *)v7 - (char *)v8 - 8;
      if (v22 < 0x58)
      {
        v23 = v7;
        goto LABEL_36;
      }
      if ((unint64_t)((char *)v7 - (v9 & 0xFFFFFFFFFFFFFFF8) - v20) < 0x20)
      {
        v23 = v7;
        do
        {
LABEL_36:
          v30 = *--v23;
          *--v14 = v30;
        }
        while (v23 != v8);
        goto LABEL_37;
      }
      v24 = (v22 >> 3) + 1;
      v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
      v23 = &v7[v25 / 0xFFFFFFFFFFFFFFF8];
      v14 = (_QWORD *)((char *)v14 - v25);
      v26 = &v20[8 * v16 - 16];
      v27 = (__int128 *)(v7 - 2);
      v28 = v24 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v29 = *v27;
        *(v26 - 1) = *(v27 - 1);
        *v26 = v29;
        v26 -= 2;
        v27 -= 2;
        v28 -= 4;
      }
      while (v28);
      if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_36;
    }
LABEL_37:
    __p = v14;
    v64 = v21;
    if (v8)
      operator delete(v8);
    goto LABEL_39;
  }
  if ((unint64_t)v7 >= v6)
  {
    v11 = v6 - (_QWORD)v7;
    v12 = v11 >> 2;
    if ((unint64_t)(v11 >> 2) <= 1)
      v12 = 1;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v13 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v13 = v12;
    if (v13 >> 61)
      sub_239418A80();
    v8 = operator new(8 * v13);
    *v8 = " ";
    v10 = v8 + 1;
    __p = v8;
    v64 = (char *)&v8[v13];
    if (v7)
      operator delete(v7);
  }
  else
  {
    *v7 = " ";
    v8 = __p;
    v10 = v7 + 1;
  }
  v63 = v10;
  v7 = v10;
  v9 = (char *)v10 - (char *)v8;
  if ((char *)v10 - (char *)v8 == 8)
    goto LABEL_19;
LABEL_40:
  v31 = (char *)v7 - (char *)v8;
  v61 = v7 - v8 - 1;
  if ((unint64_t)((char *)v7 - (char *)v8) <= 0xF)
  {
    v32 = (char *)v8;
    while (v7 < (_QWORD *)v64)
    {
      *v7 = "\n";
      v32 = (char *)__p;
      v33 = v7 + 1;
LABEL_43:
      v63 = v33;
      v31 = (char *)v33 - v32;
      v8 = v32;
      v7 = v33;
      if ((unint64_t)((char *)v33 - v32) >= 0x10)
        goto LABEL_69;
    }
    v34 = v31 >> 3;
    v35 = v64 - v32;
    if ((v64 - v32) >> 2 <= (v31 >> 3) + 1)
      v36 = v34 + 1;
    else
      v36 = v35 >> 2;
    if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8)
      v37 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v37 = v36;
    if (v37 >> 61)
      sub_239418A80();
    v38 = (char *)operator new(8 * v37);
    v32 = &v38[8 * v34];
    *(_QWORD *)v32 = "\n";
    v33 = v32 + 8;
    if (v7 != v8)
    {
      v39 = (char *)(v7 - 1) - (char *)v8;
      if (v39 < 0x168)
      {
        v40 = v7;
        goto LABEL_66;
      }
      v41 = &v38[v31 & 0xFFFFFFFFFFFFFFF8];
      v42 = &v41[-(v39 & 0xFFFFFFFFFFFFFFF8) - 8] > v41 - 8
         || (_QWORD *)((char *)v7 - (v39 & 0xFFFFFFFFFFFFFFF8) - 8) > v7 - 1;
      if (v42)
      {
        v40 = v7;
        goto LABEL_66;
      }
      if ((unint64_t)((char *)v7 - v41) < 0x20)
      {
        v40 = v7;
        do
        {
LABEL_66:
          v49 = *--v40;
          *((_QWORD *)v32 - 1) = v49;
          v32 -= 8;
        }
        while (v40 != v8);
        goto LABEL_67;
      }
      v43 = (v39 >> 3) + 1;
      v44 = 8 * (v43 & 0x3FFFFFFFFFFFFFFCLL);
      v40 = &v7[v44 / 0xFFFFFFFFFFFFFFF8];
      v32 -= v44;
      v45 = &v38[(v31 & 0xFFFFFFFFFFFFFFF8) - 16];
      v46 = (__int128 *)(v7 - 2);
      v47 = v43 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v48 = *v46;
        *((_OWORD *)v45 - 1) = *(v46 - 1);
        *(_OWORD *)v45 = v48;
        v45 -= 32;
        v46 -= 2;
        v47 -= 4;
      }
      while (v47);
      if (v43 != (v43 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_66;
    }
LABEL_67:
    __p = v32;
    v64 = &v38[8 * v37];
    if (v8)
      operator delete(v8);
    goto LABEL_43;
  }
LABEL_69:
  v59[0] = &v60;
  v59[1] = &v65;
  v59[2] = &__p;
  v59[3] = &v61;
  v59[4] = a1;
  v60 = 0;
  LOWORD(v57[0]) = 0;
  v66 = -1;
  v67 = v57;
  v68 = &v66;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
  {
    sub_2397327C0(&v67, a3);
    v50 = a2;
    v51 = v66;
    if (!v66)
    {
      LOBYTE(v52) = 0;
      goto LABEL_76;
    }
  }
  else
  {
    v51 = 0xFFFF;
    v50 = a2;
  }
  LOBYTE(v52) = 0;
  do
  {
    LOBYTE(v52) = v52 + 1;
    v42 = v51 > 9;
    v51 /= 0xAu;
  }
  while (v42);
LABEL_76:
  v53 = LOWORD(v57[0]);
  if (LOWORD(v57[0]))
  {
    v54 = 0;
    do
    {
      ++v54;
      v42 = v53 > 9;
      v53 /= 0xAu;
    }
    while (v42);
  }
  else
  {
    v54 = 0;
  }
  LODWORD(v52) = v52;
  if (v54 > v52)
    LODWORD(v52) = v54;
  if (v52 <= 1)
    v52 = 1;
  else
    v52 = v52;
  v58[0] = v52;
  v58[1] = 0;
  v57[0] = v50;
  v57[1] = v58;
  v67 = 0;
  sub_239731C64(a1, v50, (unsigned int *)&v67, 1u, v61);
  v67 = v57;
  v68 = (unsigned __int16 *)v59;
  v69 = v50;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
    sub_2397329F4((uint64_t)&v67, a3);
  if (__p)
  {
    v63 = __p;
    operator delete(__p);
  }
}

void sub_23973278C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2397327C0(_DWORD *result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  uint64_t v6;
  int v7;
  _WORD *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  _DWORD v14[5];
  char v15;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v6 = (uint64_t)result;
    v14[0] = 0;
    v14[1] = v3 - 1;
    v7 = *(_DWORD *)(a2 + 44);
    v14[2] = *(_DWORD *)(a2 + 40);
    v14[3] = v2 - 1;
    v14[4] = v7;
    v8 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v8)
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(std::__shared_weak_count **)(a2 + 16);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v9 + 88))(v9, 0, "unknown location");
      v8 = *(_WORD **)(a2 + 24);
    }
    v15 = 0;
    return sub_2397328A4(v14, (uint64_t)&v15, v6, v8);
  }
  return result;
}

_DWORD *sub_2397328A4(_DWORD *result, uint64_t a2, uint64_t a3, _WORD *a4)
{
  int v4;
  int v5;
  _WORD *v6;
  _WORD *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _WORD *v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;

  v4 = result[3];
  v5 = result[1];
  if (!v4)
  {
    v7 = *(_WORD **)a3;
    v6 = *(_WORD **)(a3 + 8);
    if (!v5)
      goto LABEL_29;
    goto LABEL_17;
  }
  v7 = *(_WORD **)a3;
  v6 = *(_WORD **)(a3 + 8);
  v8 = result[4];
  if (v5)
  {
    v9 = 0;
    v10 = 2 * v8;
    v11 = 2 * result[2];
    do
    {
      v12 = a4;
      v13 = v5;
      do
      {
        v14 = (unsigned __int16)*v7;
        if (v14 <= (unsigned __int16)*v12)
          LOWORD(v14) = *v12;
        *v7 = v14;
        v15 = (unsigned __int16)*v12;
        if (v15 >= (unsigned __int16)*v6)
          LOWORD(v15) = *v6;
        *v6 = v15;
        v12 = (_WORD *)((char *)v12 + v11);
        --v13;
      }
      while (v13);
      v16 = (unsigned __int16)*v7;
      if (v16 <= (unsigned __int16)*v12)
        LOWORD(v16) = *v12;
      *v7 = v16;
      v17 = (unsigned __int16)*v12;
      if (v17 >= (unsigned __int16)*v6)
        LOWORD(v17) = *v6;
      *v6 = v17;
      a4 = (_WORD *)((char *)a4 + v10);
      ++v9;
    }
    while (v9 != v4);
LABEL_17:
    v18 = 2 * result[2];
    do
    {
      v19 = (unsigned __int16)*v7;
      if (v19 <= (unsigned __int16)*a4)
        LOWORD(v19) = *a4;
      *v7 = v19;
      v20 = (unsigned __int16)*a4;
      if (v20 >= (unsigned __int16)*v6)
        LOWORD(v20) = *v6;
      *v6 = v20;
      a4 = (_WORD *)((char *)a4 + v18);
      --v5;
    }
    while (v5);
    goto LABEL_29;
  }
  do
  {
    v21 = (unsigned __int16)*v7;
    if (v21 <= (unsigned __int16)*a4)
      LOWORD(v21) = *a4;
    *v7 = v21;
    v22 = (unsigned __int16)*a4;
    if (v22 >= (unsigned __int16)*v6)
      LOWORD(v22) = *v6;
    *v6 = v22;
    a4 += v8;
    --v4;
  }
  while (v4);
LABEL_29:
  v23 = (unsigned __int16)*v7;
  if (v23 <= (unsigned __int16)*a4)
    LOWORD(v23) = *a4;
  *v7 = v23;
  v24 = (unsigned __int16)*a4;
  if (v24 >= (unsigned __int16)*v6)
    LOWORD(v24) = *v6;
  *v6 = v24;
  return result;
}

void sub_2397329F4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v7;
  unsigned __int16 *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  _DWORD v14[5];
  char v15;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v14[0] = 0;
    v14[1] = v3 - 1;
    v7 = *(_DWORD *)(a2 + 44);
    v14[2] = *(_DWORD *)(a2 + 40);
    v14[3] = v2 - 1;
    v14[4] = v7;
    v8 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v8)
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(std::__shared_weak_count **)(a2 + 16);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v9 + 88))(v9, 0, "unknown location");
      v8 = *(unsigned __int16 **)(a2 + 24);
    }
    v15 = 0;
    sub_239732AD8(v14, (uint64_t)&v15, a1, v8);
  }
}

void sub_239732AD8(_DWORD *a1, uint64_t a2, uint64_t a3, unsigned __int16 *a4)
{
  int v7;
  unsigned __int16 *v8;
  int v9;
  uint64_t v10;
  size_t v11;
  uint64_t *v12;
  unsigned int v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  _DWORD *v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  std::string __p;

  if (a1[3])
  {
    v7 = 0;
    while (1)
    {
      v22 = v7;
      v8 = a4;
      if (a1[1])
        break;
LABEL_3:
      sub_239732C9C(a3, v8);
      a4 += a1[4];
      v7 = v22 + 1;
      if ((v22 + 1) >= a1[3])
        goto LABEL_14;
    }
    v9 = 0;
    v8 = a4;
    while (1)
    {
      v12 = **(uint64_t ***)a3;
      v13 = **(unsigned __int8 **)(*(_QWORD *)a3 + 8);
      sub_239732DAC(v8, &__p);
      sub_2399166C0(v12, (uint64_t)&__p, v13);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v15 = *(_QWORD *)(a3 + 8);
      v14 = *(_QWORD **)(a3 + 16);
      v16 = *(_QWORD *)(v15 + 32);
      v17 = *(unsigned int **)v15;
      v18 = *(_DWORD **)(v15 + 8);
      v19 = **(_DWORD **)v15 + 1;
      **(_DWORD **)v15 = v19;
      if (v19 == *v18)
      {
        v20 = v17[1] + 1;
        *v17 = 0;
        v17[1] = v20;
        if (v20 == v18[1])
          goto LABEL_8;
        v10 = 1;
      }
      else
      {
        v10 = 0;
      }
      v11 = strlen(*(const char **)(**(_QWORD **)(v15 + 16) + 8 * v10));
      sub_239458500(v14, *(_QWORD *)(**(_QWORD **)(v15 + 16) + 8 * v10), v11);
      sub_239731C64(v16, v14, *(unsigned int **)v15, v10, **(_DWORD **)(v15 + 24));
LABEL_8:
      v8 += a1[2];
      if (++v9 >= a1[1])
        goto LABEL_3;
    }
  }
LABEL_14:
  if (a1[1])
  {
    v21 = 0;
    do
    {
      sub_239732C9C(a3, a4);
      a4 += a1[2];
      ++v21;
    }
    while (v21 < a1[1]);
  }
  sub_239732C9C(a3, a4);
}

void sub_239732C80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239732C9C(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t *v3;
  unsigned int v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  _DWORD *v9;
  int v10;
  int v11;
  uint64_t v12;
  size_t v13;
  std::string __p;

  v3 = **(uint64_t ***)a1;
  v4 = **(unsigned __int8 **)(*(_QWORD *)a1 + 8);
  sub_239732DAC(a2, &__p);
  sub_2399166C0(v3, (uint64_t)&__p, v4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD **)(a1 + 16);
  v7 = *(_QWORD *)(v6 + 32);
  v8 = *(unsigned int **)v6;
  v9 = *(_DWORD **)(v6 + 8);
  v10 = **(_DWORD **)v6 + 1;
  **(_DWORD **)v6 = v10;
  if (v10 == *v9)
  {
    v11 = v8[1] + 1;
    *v8 = 0;
    v8[1] = v11;
    if (v11 == v9[1])
      return;
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  v13 = strlen(*(const char **)(**(_QWORD **)(v6 + 16) + 8 * v12));
  sub_239458500(v5, *(_QWORD *)(**(_QWORD **)(v6 + 16) + 8 * v12), v13);
  sub_239731C64(v7, v5, *(unsigned int **)v6, v12, **(_DWORD **)(v6 + 24));
}

void sub_239732D90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239732DAC(unsigned __int16 *a1@<X0>, std::string *a2@<X8>)
{
  char *v3;
  int64x2_t v4;
  int8x16_t v5;
  char *v6;
  void **v7;
  void *v8;
  void *__p;
  char *v10;
  uint64_t v11;
  std::string v12;

  __p = 0;
  v10 = 0;
  v11 = 0;
  std::to_string(&v12, *a1);
  v3 = sub_23941ACDC(&__p, (uint64_t)&v12);
  v10 = v3;
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v12.__r_.__value_.__l.__data_);
    v3 = v10;
  }
  *((_BYTE *)&v12.__r_.__value_.__s + 23) = 0;
  v12.__r_.__value_.__s.__data_[0] = 0;
  sub_23941AE44((uint64_t)__p, (uint64_t)v3, (uint64_t)&v12, a2, v4, v5);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v12.__r_.__value_.__l.__data_);
  v6 = (char *)__p;
  if (__p)
  {
    v7 = (void **)v10;
    v8 = __p;
    if (v10 != __p)
    {
      do
      {
        if (*((char *)v7 - 1) < 0)
          operator delete(*(v7 - 3));
        v7 -= 3;
      }
      while (v7 != (void **)v6);
      v8 = __p;
    }
    v10 = v6;
    operator delete(v8);
  }
}

void sub_239732EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_239732EE0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  char *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  char *v40;
  char *v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  unsigned __int8 v53;
  _QWORD v55[2];
  _QWORD v56[2];
  char *v57;
  __int128 v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  void *__p;
  __int128 v65;
  uint64_t v66;
  int v67;
  unsigned __int8 v68;
  uint64_t *v69;
  unsigned __int8 *v70;
  _QWORD *v71;
  uint64_t v72[2];

  if (!*(_DWORD *)(a3 + 56) || !*(_DWORD *)(a3 + 60))
    return;
  v66 = *(_QWORD *)(a3 + 32);
  v67 = *(_DWORD *)(a3 + 40);
  __p = 0;
  v65 = 0uLL;
  if (*(_BYTE *)(a4 + 24))
  {
    v7 = *(char **)(a4 + 8);
    v6 = *(_QWORD *)(a4 + 16);
    __p = *(void **)a4;
    v8 = (char *)__p;
    *(_QWORD *)&v65 = v7;
    *((_QWORD *)&v65 + 1) = v6;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = 0;
    if (v8 != v7)
    {
      v9 = v7 - v8;
      if (v7 - v8 != 8)
        goto LABEL_42;
LABEL_21:
      if ((unint64_t)v7 < *((_QWORD *)&v65 + 1))
      {
        *(_QWORD *)v7 = "\n";
        v14 = (char *)__p;
        v15 = v7 + 8;
LABEL_41:
        *(_QWORD *)&v65 = v15;
        v8 = v14;
        v7 = v15;
        goto LABEL_42;
      }
      v16 = v9 >> 3;
      v17 = *((_QWORD *)&v65 + 1) - (_QWORD)v8;
      if ((uint64_t)(*((_QWORD *)&v65 + 1) - (_QWORD)v8) >> 2 <= (unint64_t)((v9 >> 3) + 1))
        v18 = v16 + 1;
      else
        v18 = v17 >> 2;
      if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8)
        v19 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v19 = v18;
      if (v19 >> 61)
        sub_239418A80();
      v20 = operator new(8 * v19);
      v14 = &v20[8 * v16];
      v21 = &v20[8 * v19];
      *(_QWORD *)v14 = "\n";
      v15 = v14 + 8;
      if (v7 != v8)
      {
        v22 = v7 - v8 - 8;
        if (v22 < 0x58)
        {
          v23 = v7;
          goto LABEL_38;
        }
        if ((unint64_t)(&v7[-(v9 & 0xFFFFFFFFFFFFFFF8)] - v20) < 0x20)
        {
          v23 = v7;
          do
          {
LABEL_38:
            v30 = *((_QWORD *)v23 - 1);
            v23 -= 8;
            *((_QWORD *)v14 - 1) = v30;
            v14 -= 8;
          }
          while (v23 != v8);
          goto LABEL_39;
        }
        v24 = (v22 >> 3) + 1;
        v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
        v23 = &v7[-v25];
        v14 -= v25;
        v26 = &v20[8 * v16 - 16];
        v27 = v7 - 16;
        v28 = v24 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v29 = *(_OWORD *)v27;
          *(v26 - 1) = *((_OWORD *)v27 - 1);
          *v26 = v29;
          v26 -= 2;
          v27 -= 32;
          v28 -= 4;
        }
        while (v28);
        if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL))
          goto LABEL_38;
      }
LABEL_39:
      __p = v14;
      *((_QWORD *)&v65 + 1) = v21;
      if (v8)
        operator delete(v8);
      goto LABEL_41;
    }
    if ((unint64_t)v7 >= v6)
    {
      v11 = v6 - (_QWORD)v7;
      v12 = v11 >> 2;
      if ((unint64_t)(v11 >> 2) <= 1)
        v12 = 1;
      if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
        v13 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v13 = v12;
      if (v13 >> 61)
        sub_239418A80();
      v8 = (char *)operator new(8 * v13);
      *(_QWORD *)v8 = " ";
      v10 = v8 + 8;
      __p = v8;
      *((_QWORD *)&v65 + 1) = &v8[8 * v13];
      if (v7)
        operator delete(v7);
    }
    else
    {
      *(_QWORD *)v7 = " ";
      v8 = (char *)__p;
      v10 = v7 + 8;
    }
    *(_QWORD *)&v65 = v10;
    v7 = v10;
    v9 = v10 - v8;
    if (v10 - v8 == 8)
      goto LABEL_21;
  }
  else
  {
    sub_239916748(3u, (uint64_t)&v66, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), &v57);
    if (__p)
    {
      *(_QWORD *)&v65 = __p;
      operator delete(__p);
    }
    v8 = v57;
    __p = v57;
    v65 = v58;
    v7 = (char *)v58;
  }
LABEL_42:
  v31 = v7 - v8;
  v63 = ((v7 - v8) >> 3) - 1;
  if ((unint64_t)(v7 - v8) <= 0x17)
  {
    while ((unint64_t)v7 < *((_QWORD *)&v65 + 1))
    {
      *(_QWORD *)v7 = "\n";
      v32 = v7 + 8;
LABEL_45:
      *(_QWORD *)&v65 = v32;
      v8 = (char *)__p;
      v31 = v32 - (_BYTE *)__p;
      v7 = v32;
      if ((unint64_t)(v32 - (_BYTE *)__p) >= 0x18)
        goto LABEL_71;
    }
    v33 = v31 >> 3;
    v34 = *((_QWORD *)&v65 + 1) - (_QWORD)v8;
    if ((uint64_t)(*((_QWORD *)&v65 + 1) - (_QWORD)v8) >> 2 <= (v31 >> 3) + 1)
      v35 = v33 + 1;
    else
      v35 = v34 >> 2;
    if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8)
      v36 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v36 = v35;
    if (v36 >> 61)
      sub_239418A80();
    v37 = (char *)operator new(8 * v36);
    v38 = &v37[8 * v33];
    *(_QWORD *)v38 = "\n";
    v32 = v38 + 8;
    if (v7 != v8)
    {
      v39 = v7 - 8 - v8;
      if (v39 < 0x168)
      {
        v40 = v7;
        goto LABEL_68;
      }
      v41 = &v37[v31 & 0xFFFFFFFFFFFFFFF8];
      v42 = &v41[-(v39 & 0xFFFFFFFFFFFFFFF8) - 8] > v41 - 8 || &v7[-(v39 & 0xFFFFFFFFFFFFFFF8) - 8] > v7 - 8;
      if (v42)
      {
        v40 = v7;
        goto LABEL_68;
      }
      if ((unint64_t)(v7 - v41) < 0x20)
      {
        v40 = v7;
        do
        {
LABEL_68:
          v49 = *((_QWORD *)v40 - 1);
          v40 -= 8;
          *((_QWORD *)v38 - 1) = v49;
          v38 -= 8;
        }
        while (v40 != v8);
        goto LABEL_69;
      }
      v43 = (v39 >> 3) + 1;
      v44 = 8 * (v43 & 0x3FFFFFFFFFFFFFFCLL);
      v40 = &v7[-v44];
      v38 -= v44;
      v45 = &v37[(v31 & 0xFFFFFFFFFFFFFFF8) - 16];
      v46 = v7 - 16;
      v47 = v43 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v48 = *(_OWORD *)v46;
        *((_OWORD *)v45 - 1) = *((_OWORD *)v46 - 1);
        *(_OWORD *)v45 = v48;
        v45 -= 32;
        v46 -= 32;
        v47 -= 4;
      }
      while (v47);
      if (v43 != (v43 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_68;
    }
LABEL_69:
    __p = v38;
    *(_QWORD *)&v65 = v32;
    *((_QWORD *)&v65 + 1) = &v37[8 * v36];
    if (v8)
      operator delete(v8);
    goto LABEL_45;
  }
LABEL_71:
  v62 = 0;
  v57 = (char *)&v61;
  *(_QWORD *)&v58 = &v66;
  *((_QWORD *)&v58 + 1) = &__p;
  v59 = &v63;
  v60 = a1;
  v61 = 0;
  LOBYTE(v72[0]) = 0;
  v68 = -1;
  v69 = v72;
  v70 = &v68;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36) && *(_DWORD *)(a3 + 40))
  {
    v55[0] = &v69;
    sub_23973349C((uint64_t)v55, a3);
    v50 = v68;
    if (!v68)
    {
      LOBYTE(v51) = 0;
      goto LABEL_79;
    }
  }
  else
  {
    v50 = 255;
  }
  LOBYTE(v51) = 0;
  do
  {
    LOBYTE(v51) = v51 + 1;
    v42 = v50 > 9;
    v50 /= 0xAu;
  }
  while (v42);
LABEL_79:
  v52 = LOBYTE(v72[0]);
  if (LOBYTE(v72[0]))
  {
    v53 = 0;
    do
    {
      ++v53;
      v42 = v52 > 9;
      v52 /= 0xAu;
    }
    while (v42);
  }
  else
  {
    v53 = 0;
  }
  LODWORD(v51) = v51;
  if (v53 > v51)
    LODWORD(v51) = v53;
  if (v51 <= 1)
    v51 = 1;
  else
    v51 = v51;
  v56[0] = v51;
  v56[1] = 0;
  v55[0] = a2;
  v55[1] = v56;
  LODWORD(v70) = 0;
  v69 = 0;
  sub_239733744(a1, a2, (unsigned int *)&v69, 2u, v63);
  v69 = v55;
  v70 = (unsigned __int8 *)&v57;
  v71 = a2;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36) && *(_DWORD *)(a3 + 40))
  {
    v72[0] = (uint64_t)&v69;
    sub_239733CC8(v72, a3);
  }
  if (__p)
  {
    *(_QWORD *)&v65 = __p;
    operator delete(__p);
  }
}

void sub_239733468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23973349C(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  BOOL v5;
  _QWORD **v8;
  int v9;
  unsigned int v10;
  _BYTE *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unsigned int v17;
  _DWORD v18[5];
  unsigned int v19;
  unsigned int v20;
  uint64_t v21[2];

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (v3)
    v5 = v2 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v8 = (_QWORD **)result;
    v18[0] = 0;
    v18[1] = v3 - 1;
    v9 = *(_DWORD *)(a2 + 48);
    v18[2] = *(_DWORD *)(a2 + 44);
    v18[3] = v2 - 1;
    v10 = v4 - 1;
    v18[4] = v9;
    v19 = v10;
    v20 = *(_DWORD *)(a2 + 52);
    v11 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(_BYTE **)(a2 + 24);
      v10 = v19;
    }
    v21[0] = 0;
    v21[1] = 0;
    if (v10)
    {
      v17 = 0;
      do
      {
        sub_2397335CC((uint64_t)v18, v21, v8, v11);
        v11 += v20;
        ++v17;
      }
      while (v17 < v19);
    }
    return sub_2397335CC((uint64_t)v18, v21, v8, v11);
  }
  return result;
}

uint64_t sub_2397335CC(uint64_t result, uint64_t *a2, _QWORD **a3, _BYTE *a4)
{
  unsigned int v4;
  _BYTE **v5;
  _BYTE *v6;
  unsigned int v7;
  _BYTE *v8;
  unsigned int v9;
  _BYTE **v10;
  uint64_t v11;
  _BYTE *v12;
  unsigned int v13;
  _BYTE *v14;
  unsigned int v15;
  _BYTE **v16;
  uint64_t v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE **v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  _BYTE **v27;
  uint64_t v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE **v33;
  uint64_t v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;

  *a2 = (uint64_t)a4;
  if (*(_DWORD *)(result + 12))
  {
    v4 = 0;
    do
    {
      *a2 = (uint64_t)a4;
      v5 = (_BYTE **)*a3;
      v6 = (_BYTE *)**a3;
      v7 = *v6;
      if (v7 <= *a4)
        LOBYTE(v7) = *a4;
      *v6 = v7;
      v8 = v5[1];
      v9 = *a4;
      if (v9 >= *v8)
        LOBYTE(v9) = *v8;
      *v8 = v9;
      v10 = (_BYTE **)*a3;
      v11 = *a2;
      v12 = (_BYTE *)**a3;
      v13 = *v12;
      if (v13 <= *(unsigned __int8 *)(*a2 + 1))
        LOBYTE(v13) = *(_BYTE *)(*a2 + 1);
      *v12 = v13;
      v14 = v10[1];
      v15 = *(unsigned __int8 *)(v11 + 1);
      if (v15 >= *v14)
        LOBYTE(v15) = *v14;
      *v14 = v15;
      v16 = (_BYTE **)*a3;
      v17 = *a2;
      v18 = (_BYTE *)**a3;
      v19 = *v18;
      if (v19 <= *(unsigned __int8 *)(*a2 + 2))
        LOBYTE(v19) = *(_BYTE *)(*a2 + 2);
      *v18 = v19;
      v20 = v16[1];
      v21 = *(unsigned __int8 *)(v17 + 2);
      if (v21 >= *v20)
        LOBYTE(v21) = *v20;
      *v20 = v21;
      a4 += *(unsigned int *)(result + 16);
      ++v4;
    }
    while (v4 < *(_DWORD *)(result + 12));
  }
  *a2 = (uint64_t)a4;
  v22 = (_BYTE **)*a3;
  v23 = (_BYTE *)**a3;
  v24 = *v23;
  if (v24 <= *a4)
    LOBYTE(v24) = *a4;
  *v23 = v24;
  v25 = v22[1];
  v26 = *a4;
  if (v26 >= *v25)
    LOBYTE(v26) = *v25;
  *v25 = v26;
  v27 = (_BYTE **)*a3;
  v28 = *a2;
  v29 = (_BYTE *)**a3;
  v30 = *v29;
  if (v30 <= *(unsigned __int8 *)(*a2 + 1))
    LOBYTE(v30) = *(_BYTE *)(*a2 + 1);
  *v29 = v30;
  v31 = v27[1];
  v32 = *(unsigned __int8 *)(v28 + 1);
  if (v32 >= *v31)
    LOBYTE(v32) = *v31;
  *v31 = v32;
  v33 = (_BYTE **)*a3;
  v34 = *a2;
  v35 = (_BYTE *)**a3;
  v36 = *v35;
  if (v36 <= *(unsigned __int8 *)(*a2 + 2))
    LOBYTE(v36) = *(_BYTE *)(*a2 + 2);
  *v35 = v36;
  v37 = v33[1];
  v38 = *(unsigned __int8 *)(v34 + 2);
  if (v38 >= *v37)
    LOBYTE(v38) = *v37;
  *v37 = v38;
  return result;
}

_QWORD *sub_239733744(uint64_t a1, _QWORD *a2, unsigned int *a3, unsigned int a4, unsigned int a5)
{
  unsigned int v6;
  uint64_t v9;
  _QWORD *result;
  std::string *v11;
  std::string::size_type size;
  std::string *v13;
  std::string::size_type v14;
  std::string *v15;
  std::string::size_type v16;
  std::string *v17;
  std::string::size_type v18;
  uint64_t v19;
  unsigned int v20;
  std::string v21;

  if (a4 > a5)
  {
    v6 = a4;
    v9 = a4;
    do
    {
      v19 = *(_QWORD *)a3;
      v20 = a3[2];
      ++*(_DWORD *)((char *)&v19 + v9 * 4);
      sub_239458500(a2, (uint64_t)"[", 1);
      std::to_string(&v21, v6);
      if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v11 = &v21;
      else
        v11 = (std::string *)v21.__r_.__value_.__r.__words[0];
      if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v21.__r_.__value_.__r.__words[2]);
      else
        size = v21.__r_.__value_.__l.__size_;
      sub_239458500(a2, (uint64_t)v11, size);
      if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v21.__r_.__value_.__l.__data_);
      sub_239458500(a2, (uint64_t)"d-slice #", 9);
      std::to_string(&v21, a3[v9]);
      if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = &v21;
      else
        v13 = (std::string *)v21.__r_.__value_.__r.__words[0];
      if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v14 = HIBYTE(v21.__r_.__value_.__r.__words[2]);
      else
        v14 = v21.__r_.__value_.__l.__size_;
      sub_239458500(a2, (uint64_t)v13, v14);
      if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v21.__r_.__value_.__l.__data_);
      sub_239458500(a2, (uint64_t)": ", 2);
      sub_239733964(a3, &v21);
      if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v15 = &v21;
      else
        v15 = (std::string *)v21.__r_.__value_.__r.__words[0];
      if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v16 = HIBYTE(v21.__r_.__value_.__r.__words[2]);
      else
        v16 = v21.__r_.__value_.__l.__size_;
      sub_239458500(a2, (uint64_t)v15, v16);
      if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v21.__r_.__value_.__l.__data_);
      sub_239458500(a2, (uint64_t)" to ", 4);
      sub_239733964((unsigned int *)&v19, &v21);
      if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v17 = &v21;
      else
        v17 = (std::string *)v21.__r_.__value_.__r.__words[0];
      if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v18 = HIBYTE(v21.__r_.__value_.__r.__words[2]);
      else
        v18 = v21.__r_.__value_.__l.__size_;
      sub_239458500(a2, (uint64_t)v17, v18);
      if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v21.__r_.__value_.__l.__data_);
      result = sub_239458500(a2, (uint64_t)"]\n", 2);
      --v6;
      --v9;
    }
    while (v6 > a5);
  }
  return result;
}

void sub_23973393C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239733964(unsigned int *a1@<X0>, std::string *a2@<X8>)
{
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *v8;
  void **v9;
  uint64_t v10;
  void *__p[2];
  char v12;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  sub_239733A48((uint64_t)__p, (uint64_t)&v8, a1);
  v12 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v8, (uint64_t)v9, (uint64_t)__p, a2, v3, v4);
  if (v12 < 0)
    operator delete(__p[0]);
  v5 = (void **)v8;
  if (v8)
  {
    v6 = v9;
    v7 = v8;
    if (v9 != v8)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = v8;
    }
    v9 = v5;
    operator delete(v7);
  }
}

void sub_239733A10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

char *sub_239733A48(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  unint64_t v5;
  char *v6;
  unint64_t v7;
  __int128 v8;
  char *v9;
  int v10;
  char *v11;
  unint64_t v12;
  __int128 v13;
  char *v14;
  int v15;
  char *v16;
  unint64_t v17;
  __int128 v18;
  char *v19;
  int v20;
  char *result;
  std::string v22;

  v5 = *(_QWORD *)(a2 + 8);
  if (v5 >= *(_QWORD *)(a2 + 16))
  {
    v6 = sub_239583C68((void **)a2, "{");
  }
  else
  {
    *(_BYTE *)(v5 + 23) = 1;
    *(_WORD *)v5 = 123;
    v6 = (char *)(v5 + 24);
    *(_QWORD *)(a2 + 8) = v5 + 24;
  }
  *(_QWORD *)(a2 + 8) = v6;
  std::to_string(&v22, *a3);
  v7 = *(_QWORD *)(a2 + 8);
  if (v7 < *(_QWORD *)(a2 + 16))
  {
    v8 = *(_OWORD *)&v22.__r_.__value_.__l.__data_;
    *(_QWORD *)(v7 + 16) = *((_QWORD *)&v22.__r_.__value_.__l + 2);
    *(_OWORD *)v7 = v8;
    v9 = (char *)(v7 + 24);
    *(_QWORD *)(a2 + 8) = v7 + 24;
    if (v7 + 24 >= *(_QWORD *)(a2 + 16))
      goto LABEL_11;
LABEL_9:
    v9[23] = 1;
    *(_WORD *)v9 = 44;
    v11 = v9 + 24;
    *(_QWORD *)(a2 + 8) = v11;
    goto LABEL_12;
  }
  v9 = sub_23941ACDC((void **)a2, (uint64_t)&v22);
  v10 = SHIBYTE(v22.__r_.__value_.__r.__words[2]);
  *(_QWORD *)(a2 + 8) = v9;
  if (v10 < 0)
  {
    operator delete(v22.__r_.__value_.__l.__data_);
    v9 = *(char **)(a2 + 8);
    if ((unint64_t)v9 < *(_QWORD *)(a2 + 16))
      goto LABEL_9;
  }
  else if ((unint64_t)v9 < *(_QWORD *)(a2 + 16))
  {
    goto LABEL_9;
  }
LABEL_11:
  v11 = sub_239583C68((void **)a2, ",");
LABEL_12:
  *(_QWORD *)(a2 + 8) = v11;
  std::to_string(&v22, a3[1]);
  v12 = *(_QWORD *)(a2 + 8);
  if (v12 < *(_QWORD *)(a2 + 16))
  {
    v13 = *(_OWORD *)&v22.__r_.__value_.__l.__data_;
    *(_QWORD *)(v12 + 16) = *((_QWORD *)&v22.__r_.__value_.__l + 2);
    *(_OWORD *)v12 = v13;
    v14 = (char *)(v12 + 24);
    *(_QWORD *)(a2 + 8) = v12 + 24;
    if (v12 + 24 >= *(_QWORD *)(a2 + 16))
      goto LABEL_19;
LABEL_17:
    v14[23] = 1;
    *(_WORD *)v14 = 44;
    v16 = v14 + 24;
    *(_QWORD *)(a2 + 8) = v16;
    goto LABEL_20;
  }
  v14 = sub_23941ACDC((void **)a2, (uint64_t)&v22);
  v15 = SHIBYTE(v22.__r_.__value_.__r.__words[2]);
  *(_QWORD *)(a2 + 8) = v14;
  if (v15 < 0)
  {
    operator delete(v22.__r_.__value_.__l.__data_);
    v14 = *(char **)(a2 + 8);
    if ((unint64_t)v14 < *(_QWORD *)(a2 + 16))
      goto LABEL_17;
  }
  else if ((unint64_t)v14 < *(_QWORD *)(a2 + 16))
  {
    goto LABEL_17;
  }
LABEL_19:
  v16 = sub_239583C68((void **)a2, ",");
LABEL_20:
  *(_QWORD *)(a2 + 8) = v16;
  std::to_string(&v22, a3[2]);
  v17 = *(_QWORD *)(a2 + 8);
  if (v17 < *(_QWORD *)(a2 + 16))
  {
    v18 = *(_OWORD *)&v22.__r_.__value_.__l.__data_;
    *(_QWORD *)(v17 + 16) = *((_QWORD *)&v22.__r_.__value_.__l + 2);
    *(_OWORD *)v17 = v18;
    v19 = (char *)(v17 + 24);
    *(_QWORD *)(a2 + 8) = v17 + 24;
    if (v17 + 24 >= *(_QWORD *)(a2 + 16))
      goto LABEL_27;
LABEL_25:
    v19[23] = 1;
    *(_WORD *)v19 = 125;
    result = v19 + 24;
    *(_QWORD *)(a2 + 8) = result;
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v19 = sub_23941ACDC((void **)a2, (uint64_t)&v22);
  v20 = SHIBYTE(v22.__r_.__value_.__r.__words[2]);
  *(_QWORD *)(a2 + 8) = v19;
  if (v20 < 0)
  {
    operator delete(v22.__r_.__value_.__l.__data_);
    v19 = *(char **)(a2 + 8);
    if ((unint64_t)v19 < *(_QWORD *)(a2 + 16))
      goto LABEL_25;
  }
  else if ((unint64_t)v19 < *(_QWORD *)(a2 + 16))
  {
    goto LABEL_25;
  }
LABEL_27:
  result = sub_239583C68((void **)a2, "}");
  *(_QWORD *)(a2 + 8) = result;
  return result;
}

void sub_239733CA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239733CC8(uint64_t *a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  int v19;
  unsigned __int8 *v20;
  uint64_t v21;
  size_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  unsigned int v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  _DWORD *v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  size_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t *v39;
  unsigned int v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  _DWORD *v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  size_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  unsigned int v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  _DWORD *v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  std::string __p;

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v9 = *(unsigned int *)(a2 + 52);
    v11 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v13 + 88))(v13, 0, "unknown location");
      v11 = *(unsigned __int8 **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      if (v2 != 1)
      {
        v19 = 0;
        v64 = v8;
        v63 = v2 - 1;
        while (1)
        {
          v65 = v19;
          v20 = v11;
          do
          {
            v23 = (_QWORD *)*a1;
            v24 = *(_QWORD *)*a1;
            v25 = *(uint64_t **)v24;
            v26 = **(unsigned __int8 **)(v24 + 8);
            sub_239647BEC(v20, &__p);
            sub_2399166C0(v25, (uint64_t)&__p, v26);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            v28 = v23[1];
            v27 = (_QWORD *)v23[2];
            v29 = *(_QWORD *)(v28 + 32);
            v30 = *(unsigned int **)v28;
            v31 = *(_DWORD **)(v28 + 8);
            v32 = **(_DWORD **)v28 + 1;
            **(_DWORD **)v28 = v32;
            if (v32 == *v31)
            {
              v33 = v30[1] + 1;
              *v30 = 0;
              v30[1] = v33;
              if (v33 == v31[1])
              {
                v34 = v30[2] + 1;
                v30[1] = 0;
                v30[2] = v34;
                if (v34 == v31[2])
                  goto LABEL_36;
                v35 = 2;
              }
              else
              {
                v35 = 1;
              }
            }
            else
            {
              v35 = 0;
            }
            v36 = strlen(*(const char **)(**(_QWORD **)(v28 + 16) + 8 * v35));
            sub_239458500(v27, *(_QWORD *)(**(_QWORD **)(v28 + 16) + 8 * v35), v36);
            sub_239733744(v29, v27, *(unsigned int **)v28, v35, **(_DWORD **)(v28 + 24));
LABEL_36:
            v37 = (_QWORD *)*a1;
            v38 = *(_QWORD *)*a1;
            v39 = *(uint64_t **)v38;
            v40 = **(unsigned __int8 **)(v38 + 8);
            sub_239647BEC(v20 + 1, &__p);
            sub_2399166C0(v39, (uint64_t)&__p, v40);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            v42 = v37[1];
            v41 = (_QWORD *)v37[2];
            v43 = *(_QWORD *)(v42 + 32);
            v44 = *(unsigned int **)v42;
            v45 = *(_DWORD **)(v42 + 8);
            v46 = **(_DWORD **)v42 + 1;
            **(_DWORD **)v42 = v46;
            if (v46 == *v45)
            {
              v47 = v44[1] + 1;
              *v44 = 0;
              v44[1] = v47;
              if (v47 == v45[1])
              {
                v48 = v44[2] + 1;
                v44[1] = 0;
                v44[2] = v48;
                if (v48 == v45[2])
                  goto LABEL_45;
                v49 = 2;
              }
              else
              {
                v49 = 1;
              }
            }
            else
            {
              v49 = 0;
            }
            v50 = strlen(*(const char **)(**(_QWORD **)(v42 + 16) + 8 * v49));
            sub_239458500(v41, *(_QWORD *)(**(_QWORD **)(v42 + 16) + 8 * v49), v50);
            sub_239733744(v43, v41, *(unsigned int **)v42, v49, **(_DWORD **)(v42 + 24));
LABEL_45:
            v51 = (_QWORD *)*a1;
            v52 = *(_QWORD *)*a1;
            v53 = *(uint64_t **)v52;
            v54 = **(unsigned __int8 **)(v52 + 8);
            sub_239647BEC(v20 + 2, &__p);
            sub_2399166C0(v53, (uint64_t)&__p, v54);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            v56 = v51[1];
            v55 = (_QWORD *)v51[2];
            v57 = *(_QWORD *)(v56 + 32);
            v58 = *(unsigned int **)v56;
            v59 = *(_DWORD **)(v56 + 8);
            v60 = **(_DWORD **)v56 + 1;
            **(_DWORD **)v56 = v60;
            if (v60 != *v59)
            {
              v21 = 0;
LABEL_25:
              v22 = strlen(*(const char **)(**(_QWORD **)(v56 + 16) + 8 * v21));
              sub_239458500(v55, *(_QWORD *)(**(_QWORD **)(v56 + 16) + 8 * v21), v22);
              sub_239733744(v57, v55, *(unsigned int **)v56, v21, **(_DWORD **)(v56 + 24));
              goto LABEL_26;
            }
            v61 = v58[1] + 1;
            *v58 = 0;
            v58[1] = v61;
            if (v61 != v59[1])
            {
              v21 = 1;
              goto LABEL_25;
            }
            v62 = v58[2] + 1;
            v58[1] = 0;
            v58[2] = v62;
            if (v62 != v59[2])
            {
              v21 = 2;
              goto LABEL_25;
            }
LABEL_26:
            v20 += v10;
            --v18;
          }
          while (v18);
          sub_23973417C(*a1, v20);
          sub_23973417C(*a1, v20 + 1);
          sub_23973417C(*a1, v20 + 2);
          v11 += v9;
          v19 = v65 + 1;
          v18 = v63;
          if (v65 + 1 == v64)
            goto LABEL_53;
        }
      }
      do
      {
        sub_23973417C(*a1, v11);
        sub_23973417C(*a1, v11 + 1);
        sub_23973417C(*a1, v11 + 2);
        v11 += v9;
        --v8;
      }
      while (v8);
    }
LABEL_53:
    while (v18)
    {
      sub_23973417C(*a1, v11);
      sub_23973417C(*a1, v11 + 1);
      sub_23973417C(*a1, v11 + 2);
      v11 += v10;
      --v18;
    }
    sub_23973417C(*a1, v11);
    sub_23973417C(*a1, v11 + 1);
    sub_23973417C(*a1, v11 + 2);
  }
}

void sub_239734158(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23973417C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t *v3;
  unsigned int v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  _DWORD *v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  size_t v14;
  std::string __p;

  v3 = **(uint64_t ***)a1;
  v4 = **(unsigned __int8 **)(*(_QWORD *)a1 + 8);
  sub_239647BEC(a2, &__p);
  sub_2399166C0(v3, (uint64_t)&__p, v4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD **)(a1 + 16);
  v7 = *(_QWORD *)(v6 + 32);
  v8 = *(unsigned int **)v6;
  v9 = *(_DWORD **)(v6 + 8);
  v10 = **(_DWORD **)v6 + 1;
  **(_DWORD **)v6 = v10;
  if (v10 == *v9)
  {
    v11 = v8[1] + 1;
    *v8 = 0;
    v8[1] = v11;
    if (v11 == v9[1])
    {
      v12 = v8[2] + 1;
      v8[1] = 0;
      v8[2] = v12;
      if (v12 == v9[2])
        return;
      v13 = 2;
    }
    else
    {
      v13 = 1;
    }
  }
  else
  {
    v13 = 0;
  }
  v14 = strlen(*(const char **)(**(_QWORD **)(v6 + 16) + 8 * v13));
  sub_239458500(v5, *(_QWORD *)(**(_QWORD **)(v6 + 16) + 8 * v13), v14);
  sub_239733744(v7, v5, *(unsigned int **)v6, v13, **(_DWORD **)(v6 + 24));
}

void sub_239734290(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_UNKNOWN **sub_2397342AC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25693C7A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25693C7A8))
    return &off_256931628;
  __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_256931628, &dword_23940C000);
  __cxa_guard_release(&qword_25693C7A8);
  return &off_256931628;
}

const char *sub_239734320()
{
  return "ImageIO";
}

_QWORD *sub_23973432C(_QWORD *a1, _DWORD *a2)
{
  const char *v2;
  uint64_t v3;

  switch(*a2)
  {
    case 0:
      v2 = "no error";
      v3 = 8;
      break;
    case 1:
      v2 = "file is of a different than specified format";
      v3 = 44;
      break;
    case 2:
      v2 = "file contains different image format";
      v3 = 36;
      break;
    case 3:
      v2 = "image format not supported by io format";
      v3 = 39;
      break;
    case 4:
      v2 = "failed to open file";
      v3 = 19;
      break;
    case 5:
      v2 = "invalid or unsupported file";
      v3 = 27;
      break;
    default:
      v2 = "unknown error code";
      v3 = 18;
      break;
  }
  return sub_239458500(a1, (uint64_t)v2, v3);
}

void sub_2397343C0(int a1@<W1>, std::string *a2@<X8>)
{
  int v2;

  v2 = a1;
  sub_2397343E4(&v2, a2);
}

void sub_2397343E4(_DWORD *a1@<X0>, std::string *a2@<X8>)
{
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *v8;
  void **v9;
  uint64_t v10;
  void *__p[2];
  char v12;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  sub_239735080((uint64_t)__p, (uint64_t)&v8, a1);
  v12 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v8, (uint64_t)v9, (uint64_t)__p, a2, v3, v4);
  if (v12 < 0)
    operator delete(__p[0]);
  v5 = (void **)v8;
  if (v8)
  {
    v6 = v9;
    v7 = v8;
    if (v9 != v8)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = v8;
    }
    v9 = v5;
    operator delete(v7);
  }
}

void sub_239734490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_2397344C8(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  std::string v4;
  void *__p[2];
  char v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  char v12;
  char v13;
  int v14;
  int v15;

  v14 = a2;
  v15 = a1;
  sub_2397345E4("Requested to load ", &v15, " format, but file contains ", &v14, " data.", &v4);
  sub_239A42F9C(__p, (__int128 *)&v4);
  v13 = 1;
  sub_239720830(1u, (__int128 *)__p, a3);
  if (!v13)
    goto LABEL_8;
  if (v12)
  {
    if ((v11 & 0x80000000) == 0)
    {
      if ((v9 & 0x80000000) == 0)
        goto LABEL_5;
LABEL_11:
      operator delete(v8);
      if (!v7)
        goto LABEL_8;
      goto LABEL_6;
    }
    operator delete(v10);
    if (v9 < 0)
      goto LABEL_11;
  }
LABEL_5:
  if (!v7)
    goto LABEL_8;
LABEL_6:
  if (v6 < 0)
    operator delete(__p[0]);
LABEL_8:
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__r_.__value_.__l.__data_);
}

void sub_2397345B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_239523188((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2397345E4(const char *a1@<X0>, int *a2@<X1>, const char *a3@<X2>, int *a4@<X3>, const char *a5@<X4>, std::string *a6@<X8>)
{
  char *v11;
  size_t v12;
  size_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  size_t v19;
  int64x2_t v20;
  int8x16_t v21;
  size_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void *v29;
  char v30;
  void *v31;
  char *v32;
  unint64_t v33;
  void *__p[2];
  char v35;

  v31 = 0;
  v32 = 0;
  v33 = 0;
  v32 = sub_239735154(&v31, a1);
  sub_2397215FC((uint64_t)__p, (uint64_t)&v31, a2);
  v11 = v32;
  if ((unint64_t)v32 >= v33)
  {
    v15 = sub_23972976C(&v31, a3);
    goto LABEL_12;
  }
  v12 = strlen(a3);
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v13 = v12;
  if (v12 >= 0x17)
  {
    v16 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v16 = v12 | 7;
    v17 = v16 + 1;
    v14 = operator new(v16 + 1);
    *((_QWORD *)v11 + 1) = v13;
    *((_QWORD *)v11 + 2) = v17 | 0x8000000000000000;
    *(_QWORD *)v11 = v14;
  }
  else
  {
    v32[23] = v12;
    v14 = v11;
    if (!v12)
      goto LABEL_11;
  }
  memmove(v14, a3, v13);
LABEL_11:
  *((_BYTE *)v14 + v13) = 0;
  v15 = v11 + 24;
LABEL_12:
  v32 = v15;
  sub_2397215FC((uint64_t)&v30, (uint64_t)&v31, a4);
  v18 = v32;
  if ((unint64_t)v32 >= v33)
  {
    v24 = sub_239735380(&v31, a5);
    goto LABEL_23;
  }
  v19 = strlen(a5);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = v19;
  if (v19 >= 0x17)
  {
    v25 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v25 = v19 | 7;
    v26 = v25 + 1;
    v23 = operator new(v25 + 1);
    *((_QWORD *)v18 + 1) = v22;
    *((_QWORD *)v18 + 2) = v26 | 0x8000000000000000;
    *(_QWORD *)v18 = v23;
  }
  else
  {
    v32[23] = v19;
    v23 = v18;
    if (!v19)
      goto LABEL_22;
  }
  memmove(v23, a5, v22);
LABEL_22:
  *((_BYTE *)v23 + v22) = 0;
  v24 = v18 + 24;
LABEL_23:
  v32 = v24;
  v35 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v31, (uint64_t)v24, (uint64_t)__p, a6, v20, v21);
  if (v35 < 0)
    operator delete(__p[0]);
  v27 = (char *)v31;
  if (v31)
  {
    v28 = v32;
    v29 = v31;
    if (v32 != v31)
    {
      do
      {
        if (*(v28 - 1) < 0)
          operator delete(*((void **)v28 - 3));
        v28 -= 24;
      }
      while (v28 != v27);
      v29 = v31;
    }
    v32 = v27;
    operator delete(v29);
  }
}

void sub_23973482C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_2397348A4(unsigned int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  std::string v4;
  void *__p[2];
  char v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  char v12;
  char v13;
  unsigned int v14;
  unsigned int v15;

  v14 = a2;
  v15 = a1;
  sub_2397349C0("Desired image format is ", &v15, " but file contains ", &v14, ".", &v4);
  sub_239A42F9C(__p, (__int128 *)&v4);
  v13 = 1;
  sub_239720830(2u, (__int128 *)__p, a3);
  if (!v13)
    goto LABEL_8;
  if (v12)
  {
    if ((v11 & 0x80000000) == 0)
    {
      if ((v9 & 0x80000000) == 0)
        goto LABEL_5;
LABEL_11:
      operator delete(v8);
      if (!v7)
        goto LABEL_8;
      goto LABEL_6;
    }
    operator delete(v10);
    if (v9 < 0)
      goto LABEL_11;
  }
LABEL_5:
  if (!v7)
    goto LABEL_8;
LABEL_6:
  if (v6 < 0)
    operator delete(__p[0]);
LABEL_8:
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__r_.__value_.__l.__data_);
}

void sub_239734994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_239523188((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2397349C0(const char *a1@<X0>, unsigned int *a2@<X1>, const char *a3@<X2>, unsigned int *a4@<X3>, const char *a5@<X4>, std::string *a6@<X8>)
{
  char *v11;
  size_t v12;
  size_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  size_t v19;
  int64x2_t v20;
  int8x16_t v21;
  size_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void *v29;
  char v30;
  void *v31;
  char *v32;
  unint64_t v33;
  void *__p[2];
  char v35;

  v31 = 0;
  v32 = 0;
  v33 = 0;
  v32 = sub_23941A2D0(&v31, a1);
  sub_23941A18C((uint64_t)__p, (uint64_t)&v31, a2);
  v11 = v32;
  if ((unint64_t)v32 >= v33)
  {
    v15 = sub_2397355AC(&v31, a3);
    goto LABEL_12;
  }
  v12 = strlen(a3);
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v13 = v12;
  if (v12 >= 0x17)
  {
    v16 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v16 = v12 | 7;
    v17 = v16 + 1;
    v14 = operator new(v16 + 1);
    *((_QWORD *)v11 + 1) = v13;
    *((_QWORD *)v11 + 2) = v17 | 0x8000000000000000;
    *(_QWORD *)v11 = v14;
  }
  else
  {
    v32[23] = v12;
    v14 = v11;
    if (!v12)
      goto LABEL_11;
  }
  memmove(v14, a3, v13);
LABEL_11:
  *((_BYTE *)v14 + v13) = 0;
  v15 = v11 + 24;
LABEL_12:
  v32 = v15;
  sub_23941A18C((uint64_t)&v30, (uint64_t)&v31, a4);
  v18 = v32;
  if ((unint64_t)v32 >= v33)
  {
    v24 = sub_239583C68(&v31, a5);
    goto LABEL_23;
  }
  v19 = strlen(a5);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = v19;
  if (v19 >= 0x17)
  {
    v25 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v25 = v19 | 7;
    v26 = v25 + 1;
    v23 = operator new(v25 + 1);
    *((_QWORD *)v18 + 1) = v22;
    *((_QWORD *)v18 + 2) = v26 | 0x8000000000000000;
    *(_QWORD *)v18 = v23;
  }
  else
  {
    v32[23] = v19;
    v23 = v18;
    if (!v19)
      goto LABEL_22;
  }
  memmove(v23, a5, v22);
LABEL_22:
  *((_BYTE *)v23 + v22) = 0;
  v24 = v18 + 24;
LABEL_23:
  v32 = v24;
  v35 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v31, (uint64_t)v24, (uint64_t)__p, a6, v20, v21);
  if (v35 < 0)
    operator delete(__p[0]);
  v27 = (char *)v31;
  if (v31)
  {
    v28 = v32;
    v29 = v31;
    if (v32 != v31)
    {
      do
      {
        if (*(v28 - 1) < 0)
          operator delete(*((void **)v28 - 3));
        v28 -= 24;
      }
      while (v28 != v27);
      v29 = v31;
    }
    v32 = v27;
    operator delete(v29);
  }
}

void sub_239734C08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_239734C80(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  std::string v4;
  void *__p[2];
  char v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  char v12;
  char v13;
  int v14;
  unsigned int v15;

  v14 = a2;
  v15 = a1;
  sub_239734D9C("Requested to load format ", &v15, ", but is not supported by ", &v14, ".", &v4);
  sub_239A42F9C(__p, (__int128 *)&v4);
  v13 = 1;
  sub_239720830(3u, (__int128 *)__p, a3);
  if (!v13)
    goto LABEL_8;
  if (v12)
  {
    if ((v11 & 0x80000000) == 0)
    {
      if ((v9 & 0x80000000) == 0)
        goto LABEL_5;
LABEL_11:
      operator delete(v8);
      if (!v7)
        goto LABEL_8;
      goto LABEL_6;
    }
    operator delete(v10);
    if (v9 < 0)
      goto LABEL_11;
  }
LABEL_5:
  if (!v7)
    goto LABEL_8;
LABEL_6:
  if (v6 < 0)
    operator delete(__p[0]);
LABEL_8:
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__r_.__value_.__l.__data_);
}

void sub_239734D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_239523188((uint64_t)&a16);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239734D9C(const char *a1@<X0>, unsigned int *a2@<X1>, const char *a3@<X2>, int *a4@<X3>, const char *a5@<X4>, std::string *a6@<X8>)
{
  char *v11;
  size_t v12;
  size_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  size_t v19;
  int64x2_t v20;
  int8x16_t v21;
  size_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void *v29;
  char v30;
  void *v31;
  char *v32;
  unint64_t v33;
  void *__p[2];
  char v35;

  v31 = 0;
  v32 = 0;
  v33 = 0;
  v32 = sub_2397357D8(&v31, a1);
  sub_23941A18C((uint64_t)__p, (uint64_t)&v31, a2);
  v11 = v32;
  if ((unint64_t)v32 >= v33)
  {
    v15 = sub_239735A04(&v31, a3);
    goto LABEL_12;
  }
  v12 = strlen(a3);
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v13 = v12;
  if (v12 >= 0x17)
  {
    v16 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v16 = v12 | 7;
    v17 = v16 + 1;
    v14 = operator new(v16 + 1);
    *((_QWORD *)v11 + 1) = v13;
    *((_QWORD *)v11 + 2) = v17 | 0x8000000000000000;
    *(_QWORD *)v11 = v14;
  }
  else
  {
    v32[23] = v12;
    v14 = v11;
    if (!v12)
      goto LABEL_11;
  }
  memmove(v14, a3, v13);
LABEL_11:
  *((_BYTE *)v14 + v13) = 0;
  v15 = v11 + 24;
LABEL_12:
  v32 = v15;
  sub_2397215FC((uint64_t)&v30, (uint64_t)&v31, a4);
  v18 = v32;
  if ((unint64_t)v32 >= v33)
  {
    v24 = sub_239583C68(&v31, a5);
    goto LABEL_23;
  }
  v19 = strlen(a5);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = v19;
  if (v19 >= 0x17)
  {
    v25 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v25 = v19 | 7;
    v26 = v25 + 1;
    v23 = operator new(v25 + 1);
    *((_QWORD *)v18 + 1) = v22;
    *((_QWORD *)v18 + 2) = v26 | 0x8000000000000000;
    *(_QWORD *)v18 = v23;
  }
  else
  {
    v32[23] = v19;
    v23 = v18;
    if (!v19)
      goto LABEL_22;
  }
  memmove(v23, a5, v22);
LABEL_22:
  *((_BYTE *)v23 + v22) = 0;
  v24 = v18 + 24;
LABEL_23:
  v32 = v24;
  v35 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v31, (uint64_t)v24, (uint64_t)__p, a6, v20, v21);
  if (v35 < 0)
    operator delete(__p[0]);
  v27 = (char *)v31;
  if (v31)
  {
    v28 = v32;
    v29 = v31;
    if (v32 != v31)
    {
      do
      {
        if (*(v28 - 1) < 0)
          operator delete(*((void **)v28 - 3));
        v28 -= 24;
      }
      while (v28 != v27);
      v29 = v31;
    }
    v32 = v27;
    operator delete(v29);
  }
}

void sub_239734FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_23973505C(std::error_category *a1)
{
  std::error_category::~error_category(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239735080(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v11;
  uint64_t v12;

  sub_239A43D24(&v12);
  v5 = (_QWORD *)sub_239A43E64(&v12);
  sub_23973432C(v5, a3);
  sub_239A43E70();
  sub_239A43DB8(&v12);
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
    v8 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v9 = SHIBYTE(v11);
    *(_QWORD *)(a2 + 8) = v8;
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v11;
    *(_OWORD *)v6 = v7;
    *(_QWORD *)(a2 + 8) = v6 + 24;
  }
}

void sub_239735124(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_239735154(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23973536C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_239735380(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_239735598(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_2397355AC(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_2397357C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_2397357D8(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_2397359F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_239735A04(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_239735C1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

std::__shared_weak_count_vtbl **sub_239735C30(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_239722BD8(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3F98;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_239735D0C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_239735D24(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239735D38(_QWORD *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count_vtbl *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::string v12;
  void *__dst[2];
  char v14;
  char v15;
  void *v16;
  char v17;
  void *v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  void *v26[2];
  uint64_t v27;
  uint64_t v28;
  void *__p[2];
  uint64_t v30;
  char v31;
  char v32;
  CFStringRef v33;
  std::__shared_weak_count *v34;
  char v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  int v38;

  v38 = a2;
  if (*(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32))
    sub_239EBEBA8();
  sub_2397383EC(a1, &v36);
  sub_23973677C((uint64_t)&v33, v38);
  if (v35)
  {
    v4 = (std::__shared_weak_count_vtbl *)CGImageDestinationCreateWithDataConsumer((CGDataConsumerRef)v36, v33, 1uLL, 0);
    sub_239735C30((std::__shared_weak_count_vtbl **)&v22, v4, 0);
    *(_OWORD *)a3 = v22;
    *(_BYTE *)(a3 + 120) = 1;
    v5 = v34;
    if (v34)
    {
      p_shared_owners = (unint64_t *)&v34->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    goto LABEL_34;
  }
  sub_239736AD8("ImageDestinationRef does not (yet) support format ", &v38, &v12);
  sub_239A42F9C(__dst, (__int128 *)&v12);
  v21 = 1;
  sub_239914D5C((uint64_t)__dst, (uint64_t)&v22);
  *(_OWORD *)a3 = v22;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v32)
  {
    *(_BYTE *)(a3 + 40) = 0;
    if (v25)
    {
      *(_OWORD *)(a3 + 16) = v23;
      *(_QWORD *)(a3 + 32) = v24;
      v24 = 0;
      v23 = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (!v31)
    {
      *(_BYTE *)(a3 + 112) = 1;
      *(_BYTE *)(a3 + 120) = 0;
      if (!v25)
        goto LABEL_23;
      goto LABEL_21;
    }
    v8 = v28;
    *(_QWORD *)(a3 + 64) = v27;
    *(_OWORD *)(a3 + 48) = *(_OWORD *)v26;
    v26[0] = 0;
    v26[1] = 0;
    *(_QWORD *)(a3 + 72) = v8;
    *(_OWORD *)(a3 + 80) = *(_OWORD *)__p;
    *(_QWORD *)(a3 + 96) = v30;
    __p[1] = 0;
    v30 = 0;
    v27 = 0;
    __p[0] = 0;
    *(_BYTE *)(a3 + 104) = 1;
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 120) = 0;
    if (SHIBYTE(v30) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v27) & 0x80000000) == 0)
      {
LABEL_14:
        if (!v25)
          goto LABEL_23;
LABEL_21:
        if (SHIBYTE(v24) < 0)
          operator delete((void *)v23);
        goto LABEL_23;
      }
    }
    else if ((SHIBYTE(v27) & 0x80000000) == 0)
    {
      goto LABEL_14;
    }
    operator delete(v26[0]);
    if (v25)
      goto LABEL_21;
  }
  else
  {
    *(_BYTE *)(a3 + 120) = 0;
  }
LABEL_23:
  if (v21)
  {
    if (v20)
    {
      if (v19 < 0)
        operator delete(v18);
      if (v17 < 0)
        operator delete(v16);
    }
    if (v15 && v14 < 0)
      operator delete(__dst[0]);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v12.__r_.__value_.__l.__data_);
LABEL_34:
  v9 = v37;
  if (v37)
  {
    v10 = (unint64_t *)&v37->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239735FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  uint64_t v15;

  sub_239523188((uint64_t)&a15);
  if (a14 < 0)
  {
    operator delete(__p);
    sub_239600F8C(v15 - 80);
    sub_239416DA0(v15 - 56);
    _Unwind_Resume(a1);
  }
  sub_239600F8C(v15 - 80);
  sub_239416DA0(v15 - 56);
  _Unwind_Resume(a1);
}

void sub_239736068(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count_vtbl *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  CGImageDestinationRef v9;
  _QWORD *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  void *v30[2];
  char v31;
  char v32;
  void *v33;
  char v34;
  void *v35;
  char v36;
  char v37;
  char v38;
  __int128 v39;
  std::string v40;
  void *v41[2];
  char v42;
  char v43;
  void *v44;
  char v45;
  void *__p;
  char v47;
  char v48;
  char v49;
  __int128 __dst;
  __int128 v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  char v60;
  CFStringRef v61;
  std::__shared_weak_count *v62;
  char v63;
  std::__shared_weak_count_vtbl *v64;
  std::__shared_weak_count *v65;
  int v66;

  v66 = a2;
  if (*(char *)(a1 + 23) < 0)
  {
    sub_23941A7F8(&__dst, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    __dst = *(_OWORD *)a1;
    *(_QWORD *)&v51 = *(_QWORD *)(a1 + 16);
  }
  sub_239629EF4((uint64_t)&__dst, &v61);
  v5 = (std::__shared_weak_count_vtbl *)CFURLCreateWithFileSystemPath(0, v61, kCFURLPOSIXPathStyle, 0);
  sub_23962B858(&v64, v5, 0);
  v6 = v62;
  if (!v62)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v62->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
LABEL_8:
    if ((SBYTE7(v51) & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  if (SBYTE7(v51) < 0)
LABEL_9:
    operator delete((void *)__dst);
LABEL_10:
  sub_23973677C((uint64_t)&v61, v66);
  if (!v63)
  {
    sub_239736AD8("ImageDestinationRef does not (yet) support format ", &v66, &v40);
    sub_239A42F9C(v41, (__int128 *)&v40);
    v49 = 1;
    sub_239914D5C((uint64_t)v41, (uint64_t)&__dst);
    *(_OWORD *)a3 = __dst;
    *(_BYTE *)(a3 + 16) = 0;
    *(_BYTE *)(a3 + 112) = 0;
    if (!v60)
    {
      *(_BYTE *)(a3 + 120) = 0;
      goto LABEL_58;
    }
    *(_BYTE *)(a3 + 40) = 0;
    if (v53)
    {
      *(_OWORD *)(a3 + 16) = v51;
      *(_QWORD *)(a3 + 32) = v52;
      v52 = 0;
      v51 = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (!v59)
    {
      *(_BYTE *)(a3 + 112) = 1;
      *(_BYTE *)(a3 + 120) = 0;
      if (!v53)
        goto LABEL_58;
      goto LABEL_56;
    }
    v23 = v56;
    *(_QWORD *)(a3 + 64) = v55;
    *(_OWORD *)(a3 + 48) = v54;
    v54 = 0uLL;
    *(_QWORD *)(a3 + 72) = v23;
    *(_OWORD *)(a3 + 80) = v57;
    *(_QWORD *)(a3 + 96) = v58;
    v58 = 0;
    v55 = 0;
    v57 = 0uLL;
    *(_BYTE *)(a3 + 104) = 1;
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 120) = 0;
    if (SHIBYTE(v58) < 0)
    {
      operator delete((void *)v57);
      if ((SHIBYTE(v55) & 0x80000000) == 0)
      {
LABEL_35:
        if (!v53)
          goto LABEL_58;
        goto LABEL_56;
      }
    }
    else if ((SHIBYTE(v55) & 0x80000000) == 0)
    {
      goto LABEL_35;
    }
    operator delete((void *)v54);
    if (!v53)
      goto LABEL_58;
LABEL_56:
    if (SHIBYTE(v52) < 0)
      operator delete((void *)v51);
LABEL_58:
    if (v49)
    {
      if (v48)
      {
        if (v47 < 0)
          operator delete(__p);
        if (v45 < 0)
          operator delete(v44);
      }
      if (v43 && v42 < 0)
        operator delete(v41[0]);
    }
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v40.__r_.__value_.__l.__data_);
      v22 = v65;
      if (!v65)
        return;
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  v9 = CGImageDestinationCreateWithURL((CFURLRef)v64, v61, 1uLL, 0);
  *(_QWORD *)&__dst = v9;
  v10 = (_QWORD *)operator new();
  *v10 = &off_250AE3F98;
  v10[1] = 0;
  v10[2] = 0;
  v10[3] = v9;
  *((_QWORD *)&__dst + 1) = v10;
  sub_239736BD4((uint64_t)&__dst, &v39);
  v11 = (std::__shared_weak_count *)*((_QWORD *)&__dst + 1);
  if (!*((_QWORD *)&__dst + 1))
    goto LABEL_15;
  v12 = (unint64_t *)(*((_QWORD *)&__dst + 1) + 8);
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v14 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
    v15 = v39;
    if (!*((_QWORD *)&v39 + 1))
      goto LABEL_20;
  }
  else
  {
LABEL_15:
    v14 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
    v15 = v39;
    if (!*((_QWORD *)&v39 + 1))
      goto LABEL_20;
  }
  v16 = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldxr(v16);
  while (__stxr(v17 + 1, v16));
  do
    v18 = __ldaxr(v16);
  while (__stlxr(v18 - 1, v16));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    if (v15)
      goto LABEL_21;
    goto LABEL_42;
  }
LABEL_20:
  if (v15)
  {
LABEL_21:
    *(_OWORD *)a3 = v39;
    *(_BYTE *)(a3 + 120) = 1;
    goto LABEL_22;
  }
LABEL_42:
  sub_239736CD4("Failed to create destination for '", a1, "' with ", &v66, &v40);
  sub_239A42F9C(v30, (__int128 *)&v40);
  v38 = 1;
  sub_239914D5C((uint64_t)v30, (uint64_t)&__dst);
  *(_OWORD *)a3 = __dst;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v60)
  {
    *(_BYTE *)(a3 + 40) = 0;
    if (v53)
    {
      *(_OWORD *)(a3 + 16) = v51;
      *(_QWORD *)(a3 + 32) = v52;
      v52 = 0;
      v51 = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (!v59)
    {
      *(_BYTE *)(a3 + 112) = 1;
      *(_BYTE *)(a3 + 120) = 0;
      if (!v53)
        goto LABEL_82;
      goto LABEL_80;
    }
    v24 = v56;
    *(_QWORD *)(a3 + 64) = v55;
    *(_OWORD *)(a3 + 48) = v54;
    v54 = 0uLL;
    *(_QWORD *)(a3 + 72) = v24;
    *(_OWORD *)(a3 + 80) = v57;
    *(_QWORD *)(a3 + 96) = v58;
    v58 = 0;
    v55 = 0;
    v57 = 0uLL;
    *(_BYTE *)(a3 + 104) = 1;
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 120) = 0;
    if (SHIBYTE(v58) < 0)
    {
      operator delete((void *)v57);
      if ((SHIBYTE(v55) & 0x80000000) == 0)
      {
LABEL_48:
        if (!v53)
          goto LABEL_82;
LABEL_80:
        if (SHIBYTE(v52) < 0)
          operator delete((void *)v51);
        goto LABEL_82;
      }
    }
    else if ((SHIBYTE(v55) & 0x80000000) == 0)
    {
      goto LABEL_48;
    }
    operator delete((void *)v54);
    if (v53)
      goto LABEL_80;
  }
  else
  {
    *(_BYTE *)(a3 + 120) = 0;
  }
LABEL_82:
  if (v38)
  {
    if (v37)
    {
      if (v36 < 0)
        operator delete(v35);
      if (v34 < 0)
        operator delete(v33);
    }
    if (v32 && v31 < 0)
      operator delete(v30[0]);
  }
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v40.__r_.__value_.__l.__data_);
  v27 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
  if (*((_QWORD *)&v39 + 1))
  {
    v28 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
LABEL_22:
  if (!v63)
    goto LABEL_68;
  v19 = v62;
  if (!v62)
    goto LABEL_68;
  v20 = (unint64_t *)&v62->__shared_owners_;
  do
    v21 = __ldaxr(v20);
  while (__stlxr(v21 - 1, v20));
  if (v21)
  {
LABEL_68:
    v22 = v65;
    if (!v65)
      return;
    goto LABEL_69;
  }
  ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
  std::__shared_weak_count::__release_weak(v19);
  v22 = v65;
  if (!v65)
    return;
LABEL_69:
  v25 = (unint64_t *)&v22->__shared_owners_;
  do
    v26 = __ldaxr(v25);
  while (__stlxr(v26 - 1, v25));
  if (!v26)
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
}

void sub_239736690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31)
{
  uint64_t v31;

  sub_239523188((uint64_t)&a10);
  if (a30 < 0)
    operator delete(__p);
  sub_239416DA0((uint64_t)&a23);
  sub_239600F8C(v31 - 96);
  sub_239416DA0(v31 - 72);
  _Unwind_Resume(a1);
}

void sub_239736750(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 - 201) < 0)
    operator delete(*(void **)(v1 - 224));
  _Unwind_Resume(exception_object);
}

void sub_23973677C(uint64_t a1, int a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;

  switch(a2)
  {
    case 3:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0F50;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("public.png");
      *(_QWORD *)a1 = CFSTR("public.png");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      goto LABEL_26;
    case 4:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      v13 = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0F50;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("public.jpeg");
      *(_QWORD *)a1 = CFSTR("public.jpeg");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(v13);
      while (__stlxr(v6 - 1, v13));
      goto LABEL_26;
    case 5:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      v9 = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0F50;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("public.tiff");
      *(_QWORD *)a1 = CFSTR("public.tiff");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(v9);
      while (__stlxr(v6 - 1, v9));
      goto LABEL_26;
    case 6:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      v11 = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0F50;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("public.heic");
      *(_QWORD *)a1 = CFSTR("public.heic");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(v11);
      while (__stlxr(v6 - 1, v11));
      goto LABEL_26;
    case 7:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      v7 = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0F50;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("com.ilm.openexr-image");
      *(_QWORD *)a1 = CFSTR("com.ilm.openexr-image");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 1, v7));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(v7);
      while (__stlxr(v6 - 1, v7));
LABEL_26:
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
      break;
    default:
      *(_BYTE *)a1 = 0;
      *(_BYTE *)(a1 + 16) = 0;
      break;
  }
}

void sub_239736A0C(void *a1)
{
  __cxa_begin_catch(a1);
  j__CFRelease(CFSTR("public.jpeg"));
  __cxa_rethrow();
}

void sub_239736A20()
{
  __break(1u);
}

void sub_239736AC4()
{
  __cxa_end_catch();
  JUMPOUT(0x239736ACCLL);
}

void sub_239736AD8(const char *a1@<X0>, int *a2@<X1>, std::string *a3@<X8>)
{
  int64x2_t v5;
  int8x16_t v6;
  char *v7;
  char *v8;
  void *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  void *__p[2];
  char v14;

  v10 = 0;
  v11 = 0;
  v12 = 0;
  v11 = sub_239737090(&v10, a1);
  sub_2397215FC((uint64_t)__p, (uint64_t)&v10, a2);
  v14 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v10, (uint64_t)v11, (uint64_t)__p, a3, v5, v6);
  if (v14 < 0)
    operator delete(__p[0]);
  v7 = (char *)v10;
  if (v10)
  {
    v8 = v11;
    v9 = v10;
    if (v11 != v10)
    {
      do
      {
        if (*(v8 - 1) < 0)
          operator delete(*((void **)v8 - 3));
        v8 -= 24;
      }
      while (v8 != v7);
      v9 = v10;
    }
    v11 = v7;
    operator delete(v9);
  }
}

void sub_239736B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_239736BD4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *(const void **)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  v15 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_239722BD8(&v16, v3);
  v7 = v17;
  *a2 = v16;
  a2[1] = v7;
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
    v10 = v17;
    if (v17)
    {
      v11 = (unint64_t *)&v17->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  if (v15)
  {
    v13 = (unint64_t *)&v15->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_239736CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239736CD4(const char *a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, int *a4@<X3>, std::string *a5@<X8>)
{
  char *v9;
  size_t v10;
  size_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64x2_t v16;
  int8x16_t v17;
  char *v18;
  char *v19;
  void *v20;
  char v21;
  void *v22;
  char *v23;
  unint64_t v24;
  void *__p[2];
  char v26;

  v22 = 0;
  v23 = 0;
  v24 = 0;
  v23 = sub_239722700(&v22, a1);
  sub_2397372BC((uint64_t)__p, (uint64_t)&v22, a2);
  v9 = v23;
  if ((unint64_t)v23 >= v24)
  {
    v13 = sub_239628298(&v22, a3);
    goto LABEL_12;
  }
  v10 = strlen(a3);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v14 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v14 = v10 | 7;
    v15 = v14 + 1;
    v12 = operator new(v14 + 1);
    *((_QWORD *)v9 + 1) = v11;
    *((_QWORD *)v9 + 2) = v15 | 0x8000000000000000;
    *(_QWORD *)v9 = v12;
  }
  else
  {
    v23[23] = v10;
    v12 = v9;
    if (!v10)
      goto LABEL_11;
  }
  memmove(v12, a3, v11);
LABEL_11:
  *((_BYTE *)v12 + v11) = 0;
  v13 = v9 + 24;
LABEL_12:
  v23 = v13;
  sub_2397215FC((uint64_t)&v21, (uint64_t)&v22, a4);
  v26 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v22, (uint64_t)v23, (uint64_t)__p, a5, v16, v17);
  if (v26 < 0)
    operator delete(__p[0]);
  v18 = (char *)v22;
  if (v22)
  {
    v19 = v23;
    v20 = v22;
    if (v23 != v22)
    {
      do
      {
        if (*(v19 - 1) < 0)
          operator delete(*((void **)v19 - 3));
        v19 -= 24;
      }
      while (v19 != v18);
      v20 = v22;
    }
    v23 = v18;
    operator delete(v20);
  }
}

void sub_239736E68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

CGImageDestinationRef *sub_239736EC4(CGImageDestinationRef *a1, CGImageRef *a2)
{
  std::__shared_weak_count_vtbl *Mutable;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v13;
  void *__p;
  __int128 v15;
  std::__shared_weak_count_vtbl *v16;
  std::__shared_weak_count *v17;
  CFStringRef v18;
  std::__shared_weak_count *v19;

  Mutable = (std::__shared_weak_count_vtbl *)CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD2A8], MEMORY[0x24BDBD6B0]);
  sub_23962C784(&v16, Mutable, 1);
  v5 = (char *)operator new(0x30uLL);
  v15 = xmmword_239ED56E0;
  strcpy(v5, "kCGImageDestinationLossyCompressionQuality");
  v13 = 0x3FEE666666666666;
  __p = v5;
  sub_239629EF4((uint64_t)&__p, &v18);
  sub_2397373B0((uint64_t)&v16, v18, (uint64_t)&v13);
  v6 = v19;
  if (v19)
  {
    p_shared_owners = (unint64_t *)&v19->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  if (SHIBYTE(v15) < 0)
LABEL_6:
    operator delete(__p);
LABEL_7:
  CGImageDestinationAddImage(*a1, *a2, (CFDictionaryRef)Mutable);
  CFRelease(Mutable);
  v9 = v17;
  if (!v17)
    return a1;
  v10 = (unint64_t *)&v17->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_23973703C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, char a18)
{
  sub_239416DA0((uint64_t)&a18);
  if (a15 < 0)
  {
    operator delete(__p);
    sub_239416DA0((uint64_t)&a16);
    _Unwind_Resume(a1);
  }
  sub_239416DA0((uint64_t)&a16);
  _Unwind_Resume(a1);
}

BOOL sub_239737088(CGImageDestinationRef *a1)
{
  return CGImageDestinationFinalize(*a1);
}

char *sub_239737090(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_2397372A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397372BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  __int128 v9;
  char *v10;
  int v11;
  void *__p[2];
  uint64_t v13;
  uint64_t v14;

  sub_239A43D24(&v14);
  v5 = (_QWORD *)sub_239A43E64(&v14);
  v6 = *(unsigned __int8 *)(a3 + 23);
  if ((v6 & 0x80u) == 0)
    v7 = (_BYTE *)a3;
  else
    v7 = *(_BYTE **)a3;
  if ((v6 & 0x80u) != 0)
    v6 = *(_QWORD *)(a3 + 8);
  sub_23962E67C(v5, v7, &v7[v6], 0x22u, 0x5Cu);
  sub_239A43E70();
  sub_239A43DB8(&v14);
  v8 = *(_QWORD *)(a2 + 8);
  if (v8 >= *(_QWORD *)(a2 + 16))
  {
    v10 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v11 = SHIBYTE(v13);
    *(_QWORD *)(a2 + 8) = v10;
    if (v11 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v9 = *(_OWORD *)__p;
    *(_QWORD *)(v8 + 16) = v13;
    *(_OWORD *)v8 = v9;
    *(_QWORD *)(a2 + 8) = v8 + 24;
  }
}

void sub_239737380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_2397373B0(uint64_t a1, const void *a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  const __CFDictionary *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL8 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  void *value;
  std::__shared_weak_count *v22;

  v7 = *(const __CFDictionary **)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return 0;
  }
  else
  {
LABEL_6:
    if (!v7)
      return 0;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, a2))
    return 0;
  sub_239629C3C(&value, a3);
  v12 = value;
  v11 = v22;
  if (v22)
  {
    v13 = (unint64_t *)&v22->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      v16 = v12 != 0;
      if (!v12)
        goto LABEL_15;
      goto LABEL_14;
    }
  }
  v16 = v12 != 0;
  if (v12)
LABEL_14:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, a2, value);
LABEL_15:
  v17 = v22;
  if (v22)
  {
    v18 = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return v16;
}

void sub_239737510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239737524@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v7 = (_QWORD *)a1[3];
  if (v7)
  {
    if (v7 == a1)
    {
      v11 = v10;
      (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v10);
    }
    else
    {
      v11 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v7 + 16))(a1[3]);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_23971E520(v10, a2, a3, 4, a4);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_239737618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (!a13)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*(_QWORD *)a13 + 40))();
  _Unwind_Resume(exception_object);
}

void sub_239737668(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23971F1DC(a1, 4, a2);
}

void sub_239737670(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_23971FD8C(a1, a2, 4, a3);
}

void sub_239737678(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23971FF94(a1, a2, 4, a3);
}

_QWORD *sub_239737680@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v7 = (_QWORD *)a1[3];
  if (v7)
  {
    if (v7 == a1)
    {
      v11 = v10;
      (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v10);
    }
    else
    {
      v11 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v7 + 16))(a1[3]);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_23971E520(v10, a2, a3, 5, a4);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_239737774(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (!a13)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*(_QWORD *)a13 + 40))();
  _Unwind_Resume(exception_object);
}

void sub_2397377C4(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23971F1DC(a1, 5, a2);
}

void sub_2397377CC(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_23971FD8C(a1, a2, 5, a3);
}

void sub_2397377D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23971FF94(a1, a2, 5, a3);
}

BOOL sub_2397377DC(_QWORD *a1)
{
  return *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) == 0;
}

void sub_2397377F8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  const char *v3;

  if (a1[17])
  {
    if ((*(_DWORD *)((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 1) != 0)
      v2 = 26;
    else
      v2 = 15;
    if ((*(_DWORD *)((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 1) != 0)
      v3 = " Stream bad after opening.";
    else
      v3 = " File is empty.";
  }
  else
  {
    v2 = 0;
    v3 = "";
  }
  sub_239737868(a2, (uint64_t)"reading", 7, (uint64_t)v3, v2);
}

void sub_239737868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  std::string v6;
  void *__p[2];
  char v8;
  char v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  char v14;
  char v15;
  _QWORD v16[2];
  _QWORD v17[2];

  v17[0] = a2;
  v17[1] = a3;
  v16[0] = a4;
  v16[1] = a5;
  sub_239737A48("Failed to open file for ", (uint64_t)v17, ".", (uint64_t)v16, &v6);
  sub_239A42F9C(__p, (__int128 *)&v6);
  v15 = 1;
  sub_239720830(4u, (__int128 *)__p, a1);
  if (!v15)
    goto LABEL_8;
  if (v14)
  {
    if ((v13 & 0x80000000) == 0)
    {
      if ((v11 & 0x80000000) == 0)
        goto LABEL_5;
LABEL_11:
      operator delete(v10);
      if (!v9)
        goto LABEL_8;
      goto LABEL_6;
    }
    operator delete(v12);
    if (v11 < 0)
      goto LABEL_11;
  }
LABEL_5:
  if (!v9)
    goto LABEL_8;
LABEL_6:
  if (v8 < 0)
    operator delete(__p[0]);
LABEL_8:
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
}

void sub_239737954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  sub_239523188((uint64_t)&a15);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239737980(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v3[16];
  void *v4;
  char v5;
  char v6;
  void *v7;
  char v8;
  void *__p;
  char v10;
  char v11;
  char v12;

  if (a1[16])
  {
    if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 1) != 0)
    {
      sub_239737868((uint64_t)v3, (uint64_t)"writing", 7, (uint64_t)" Stream bad after opening.", 26);
      if (v12)
      {
        if (v11)
        {
          if (v10 < 0)
            operator delete(__p);
          if (v8 < 0)
            operator delete(v7);
        }
        if (v6 && v5 < 0)
          operator delete(v4);
      }
    }
  }
  sub_239737868(a2, (uint64_t)"writing", 7, (uint64_t)"", 0);
}

void sub_239737A48(const char *a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, uint64_t a4@<X3>, std::string *a5@<X8>)
{
  char *v9;
  size_t v10;
  size_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64x2_t v16;
  int8x16_t v17;
  char *v18;
  char *v19;
  void *v20;
  char v21;
  void *v22;
  char *v23;
  unint64_t v24;
  void *__p[2];
  char v26;

  v22 = 0;
  v23 = 0;
  v24 = 0;
  v23 = sub_23941A2D0(&v22, a1);
  sub_23965DEA4((uint64_t)__p, (uint64_t)&v22, a2);
  v9 = v23;
  if ((unint64_t)v23 >= v24)
  {
    v13 = sub_239583C68(&v22, a3);
    goto LABEL_12;
  }
  v10 = strlen(a3);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v14 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v14 = v10 | 7;
    v15 = v14 + 1;
    v12 = operator new(v14 + 1);
    *((_QWORD *)v9 + 1) = v11;
    *((_QWORD *)v9 + 2) = v15 | 0x8000000000000000;
    *(_QWORD *)v9 = v12;
  }
  else
  {
    v23[23] = v10;
    v12 = v9;
    if (!v10)
      goto LABEL_11;
  }
  memmove(v12, a3, v11);
LABEL_11:
  *((_BYTE *)v12 + v11) = 0;
  v13 = v9 + 24;
LABEL_12:
  v23 = v13;
  sub_23965DEA4((uint64_t)&v21, (uint64_t)&v22, a4);
  v26 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v22, (uint64_t)v23, (uint64_t)__p, a5, v16, v17);
  if (v26 < 0)
    operator delete(__p[0]);
  v18 = (char *)v22;
  if (v22)
  {
    v19 = v23;
    v20 = v22;
    if (v23 != v22)
    {
      do
      {
        if (*(v19 - 1) < 0)
          operator delete(*((void **)v19 - 3));
        v19 -= 24;
      }
      while (v19 != v18);
      v20 = v22;
    }
    v23 = v18;
    operator delete(v20);
  }
}

void sub_239737BDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

_QWORD *sub_239737C38(_QWORD *a1, int a2)
{
  return sub_239458500(a1, (uint64_t)(&off_250AE4420)[2 * a2 + 2], (uint64_t)(&off_250AE4420)[2 * a2 + 3]);
}

std::__shared_weak_count_vtbl **sub_239737C4C(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_2397381A0(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE44C0;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_239737D28(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_239737D40(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_OWORD *sub_239737D58(_OWORD *a1, int a2)
{
  __int128 v4;

  if (a2 == 2)
  {
    sub_2397380A0(&v4);
  }
  else if (a2 == 1)
  {
    sub_239737FB0(&v4);
  }
  else
  {
    if (a2)
      sub_239EC2308();
    sub_239737DC0(&v4);
  }
  *a1 = v4;
  return a1;
}

void sub_239737DC0(_QWORD *a1@<X8>)
{
  CGColorSpaceRef DeviceGray;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  CGColorSpaceRef v7;
  std::__shared_weak_count *v8;

  DeviceGray = CGColorSpaceCreateDeviceGray();
  v7 = DeviceGray;
  v3 = (std::__shared_weak_count *)operator new();
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE44C0;
  v3->__shared_owners_ = 0;
  v3->__shared_weak_owners_ = 0;
  v3[1].__vftable = (std::__shared_weak_count_vtbl *)DeviceGray;
  v8 = v3;
  sub_239737EB0((uint64_t)&v7, a1);
  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_239737E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239737E84(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_239737E9C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239737EB0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *(const void **)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  v15 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_2397381A0(&v16, v3);
  v7 = v17;
  *a2 = v16;
  a2[1] = v7;
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
    v10 = v17;
    if (v17)
    {
      v11 = (unint64_t *)&v17->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  if (v15)
  {
    v13 = (unint64_t *)&v15->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_239737F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239737FB0(_QWORD *a1@<X8>)
{
  CGColorSpaceRef DeviceRGB;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  CGColorSpaceRef v7;
  std::__shared_weak_count *v8;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v7 = DeviceRGB;
  v3 = (std::__shared_weak_count *)operator new();
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE44C0;
  v3->__shared_owners_ = 0;
  v3->__shared_weak_owners_ = 0;
  v3[1].__vftable = (std::__shared_weak_count_vtbl *)DeviceRGB;
  v8 = v3;
  sub_239737EB0((uint64_t)&v7, a1);
  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_239738060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239738074(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973808C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2397380A0(_QWORD *a1@<X8>)
{
  CGColorSpaceRef DeviceCMYK;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  CGColorSpaceRef v7;
  std::__shared_weak_count *v8;

  DeviceCMYK = CGColorSpaceCreateDeviceCMYK();
  v7 = DeviceCMYK;
  v3 = (std::__shared_weak_count *)operator new();
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE44C0;
  v3->__shared_owners_ = 0;
  v3->__shared_weak_owners_ = 0;
  v3[1].__vftable = (std::__shared_weak_count_vtbl *)DeviceCMYK;
  v8 = v3;
  sub_239737EB0((uint64_t)&v7, a1);
  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_239738150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239738164(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973817C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

size_t sub_239738190(CGColorSpaceRef *a1)
{
  return CGColorSpaceGetNumberOfComponents(*a1);
}

uint64_t sub_239738198(CGColorSpaceRef *a1)
{
  return CGColorSpaceGetModel(*a1);
}

_QWORD *sub_2397381A0(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    j__CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_250AE44C0;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_239738200(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_239738218(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239738230(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239738254(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    j__CFRelease(v1);
}

uint64_t sub_239738274(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

std::__shared_weak_count_vtbl **sub_2397382E4(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_23973845C(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE4520;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_2397383C0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_2397383D8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

std::__shared_weak_count_vtbl **sub_2397383EC@<X0>(void *a1@<X0>, std::__shared_weak_count_vtbl **a2@<X8>)
{
  std::__shared_weak_count_vtbl *v3;
  __int128 v5;

  v5 = xmmword_250AE4500;
  v3 = (std::__shared_weak_count_vtbl *)CGDataConsumerCreate(a1, (const CGDataConsumerCallbacks *)&v5);
  return sub_2397382E4(a2, v3, 0);
}

uint64_t sub_239738438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::ostream::write();
  return a3;
}

_QWORD *sub_23973845C(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    j__CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_250AE4520;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_2397384BC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_2397384D4(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2397384EC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239738510(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    j__CFRelease(v1);
}

uint64_t sub_239738530(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

std::__shared_weak_count_vtbl **sub_2397385A0(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_239722A3C(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3EF8;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_23973867C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_239738694(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t *sub_2397386AC(uint64_t *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  sub_239720FF8(&v18, a2);
  v22 = &v18;
  v23 = a3;
  v24 = &v25;
  v25 = a5;
  sub_23973A914((uint64_t)&v20, a4);
  v9 = v21;
  *a1 = v20;
  a1[1] = (uint64_t)v9;
  v20 = 0;
  v21 = 0;
  v10 = v19;
  if (v19)
  {
    p_shared_owners = (unint64_t *)&v19->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    v9 = (std::__shared_weak_count *)a1[1];
  }
  v13 = *a1;
  if (v9)
  {
    v14 = (unint64_t *)&v9->__shared_owners_;
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
    do
      v16 = __ldaxr(v14);
    while (__stlxr(v16 - 1, v14));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (!v13)
  {
    sub_239A444D4((uint64_t)"unknown file", 163, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  return a1;
}

void sub_2397387D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_2397387EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239738800@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  std::__shared_weak_count *v4;
  CGImageRef v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  CGColorSpaceRef ColorSpace;

  v5 = *(CGImageRef *)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  if (!v5)
    sub_239EC2338();
  ColorSpace = CGImageGetColorSpace(*(CGImageRef *)a1);
  return sub_239737D54(a2, ColorSpace);
}

uint64_t sub_23973888C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  std::__shared_weak_count *v4;
  CGImageRef v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  CGDataProviderRef DataProvider;

  v5 = *(CGImageRef *)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  if (!v5)
    sub_239EC1ABC();
  DataProvider = CGImageGetDataProvider(*(CGImageRef *)a1);
  return sub_239769020(a2, DataProvider);
}

unint64_t sub_239738918(uint64_t a1)
{
  std::__shared_weak_count *v2;
  CGImageRef v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  CGImageRef v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int Width;
  std::__shared_weak_count *v13;
  CGImageRef v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;

  v3 = *(CGImageRef *)a1;
  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  if (!v3)
    sub_239EC2368();
  v8 = *(CGImageRef *)a1;
  v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (v7)
  {
    v9 = (unint64_t *)&v7->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    do
      v11 = __ldaxr(v9);
    while (__stlxr(v11 - 1, v9));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (!v8)
    sub_239EC2398();
  Width = CGImageGetWidth(*(CGImageRef *)a1);
  v14 = *(CGImageRef *)a1;
  v13 = *(std::__shared_weak_count **)(a1 + 8);
  if (v13)
  {
    v15 = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (!v14)
    sub_239EBFB64();
  return Width | ((unint64_t)CGImageGetHeight(*(CGImageRef *)a1) << 32);
}

void sub_239738A48(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count *v5;
  CGImageRef v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  size_t BitsPerComponent;
  CGImageByteOrderInfo ByteOrderInfo;
  CGImageByteOrderInfo v12;
  int v13;
  char *v14;
  char *v15;
  char *v16;
  int v17;
  char *v18;
  __int128 v19;
  int v20;
  BOOL v22;
  BOOL v23;
  char *v24;
  char *v25;
  char *v26;
  unint64_t v27;
  CGImageAlphaInfo AlphaInfo;
  __int16 BitmapInfo;
  size_t v30;
  std::__shared_weak_count *v31;
  CGImageRef v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  size_t BitsPerPixel;
  int64x2_t v37;
  int8x16_t v38;
  size_t v39;
  int v40;
  char v41;
  int v42;
  char *v43;
  char *v44;
  const char *v45;
  const std::string::value_type *v46;
  std::string *v47;
  __int128 v48;
  char *v49;
  __int128 v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  __int128 v57;
  __int128 v58;
  int v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  char *v63;
  char *v64;
  void *v65;
  char *v66;
  char *v67;
  BOOL v68;
  int v69;
  BOOL v70;
  int v71;
  BOOL v72;
  int v73;
  BOOL v78;
  int v79;
  _BYTE v84[7];
  __int16 v85;
  char v86;
  unsigned int v87;
  CGColorSpaceRef v88;
  std::__shared_weak_count *v89;
  void *v90;
  char *v91;
  unint64_t v92;
  size_t v93;
  std::string v94;
  std::string __p;
  BOOL v96;
  size_t v97;
  size_t v98;

  v93 = 0;
  v6 = *(CGImageRef *)a1;
  v5 = *(std::__shared_weak_count **)(a1 + 8);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (!v6)
    sub_239EC23C8(a1, a2);
  BitsPerComponent = CGImageGetBitsPerComponent(*(CGImageRef *)a1);
  v92 = 0;
  v93 = BitsPerComponent;
  v90 = 0;
  v91 = 0;
  sub_239738800(a1, (int)&v88);
  v87 = sub_239738198(&v88);
  ByteOrderInfo = CGImageGetByteOrderInfo(*(CGImageRef *)a1);
  v12 = ByteOrderInfo;
  if (v93 == 8 && ByteOrderInfo == kCGImageByteOrderDefault || v93 == 8 && ByteOrderInfo == kCGImageByteOrder32Little)
  {
    v13 = 0;
    goto LABEL_13;
  }
  v13 = 0;
  v22 = v93 == 32 && ByteOrderInfo == kCGImageByteOrder32Little;
  v23 = ByteOrderInfo == kCGImageByteOrder16Little && v93 == 16;
  if (v23 || v22)
    goto LABEL_13;
  v24 = v91;
  if ((unint64_t)v91 >= v92)
  {
    v26 = sub_23972976C(&v90, "Byte order is incompatible.");
    v91 = v26;
    v27 = v93;
    if (v93 != 32)
      goto LABEL_137;
LABEL_136:
    if (v12 == kCGImageByteOrder32Big)
      goto LABEL_139;
    goto LABEL_137;
  }
  v25 = (char *)operator new(0x20uLL);
  *(_QWORD *)v24 = v25;
  *(_OWORD *)(v24 + 8) = xmmword_239ED5830;
  strcpy(v25, "Byte order is incompatible.");
  v26 = v24 + 24;
  v91 = v26;
  v27 = v93;
  if (v93 == 32)
    goto LABEL_136;
LABEL_137:
  if (v27 == 16 && v12 == kCGImageByteOrder16Big)
  {
LABEL_139:
    if ((unint64_t)v26 >= v92)
    {
      v67 = sub_23973E3E8(&v90, "Byte order is inverted.");
    }
    else
    {
      v66 = (char *)operator new(0x19uLL);
      *(_QWORD *)v26 = v66;
      *(_OWORD *)(v26 + 8) = xmmword_239EC7360;
      strcpy(v66, "Byte order is inverted.");
      v67 = v26 + 24;
    }
    v91 = v67;
    v13 = 1;
    goto LABEL_13;
  }
  if (v27 == 8)
    sub_23973E304((uint64_t)&v90, "Byte order and bits per component do not correspond to a supported format.");
  else
    sub_23973E220((uint64_t)&v90, "Byte order size for non-8 bits per component does not match bits per component.");
  v13 = 5;
LABEL_13:
  if (CGImageGetPixelFormatInfo(*(CGImageRef *)a1))
  {
    v14 = v91;
    if ((unint64_t)v91 >= v92)
    {
      v16 = sub_23973EA6C(&v90, "Pixel format is not kCGImagePixelFormatPacked.");
    }
    else
    {
      v15 = (char *)operator new(0x30uLL);
      *(_QWORD *)v14 = v15;
      *(_OWORD *)(v14 + 8) = xmmword_239ECA000;
      strcpy(v15, "Pixel format is not kCGImagePixelFormatPacked.");
      v16 = v14 + 24;
    }
    v91 = v16;
    v17 = 5;
    if (v87 < 2)
      goto LABEL_21;
  }
  else
  {
    v17 = 0;
    if (v87 < 2)
    {
LABEL_21:
      v20 = 0;
      goto LABEL_39;
    }
  }
  sub_23973EC98("Color space model ", (int *)&v87, " not yet supported.", &__p);
  v18 = v91;
  if ((unint64_t)v91 >= v92)
  {
    v91 = sub_23941ACDC(&v90, (uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v19 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *((_QWORD *)v91 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_OWORD *)v18 = v19;
    v91 = v18 + 24;
  }
  v20 = 5;
LABEL_39:
  AlphaInfo = CGImageGetAlphaInfo(*(CGImageRef *)a1);
  BitmapInfo = CGImageGetBitmapInfo(*(CGImageRef *)a1);
  v30 = sub_239738190(&v88);
  v97 = 0;
  v98 = v30;
  v32 = *(CGImageRef *)a1;
  v31 = *(std::__shared_weak_count **)(a1 + 8);
  if (v31)
  {
    v33 = (unint64_t *)&v31->__shared_owners_;
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 1, v33));
    do
      v35 = __ldaxr(v33);
    while (__stlxr(v35 - 1, v33));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  if (!v32)
  {
    sub_239A444D4((uint64_t)"unknown file", 182, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BitsPerPixel = CGImageGetBitsPerPixel(*(CGImageRef *)a1);
  v39 = BitsPerPixel;
  v97 = BitsPerPixel;
  v40 = BitmapInfo & 0xF00;
  v96 = v40 != 0;
  switch(AlphaInfo)
  {
    case kCGImageAlphaNone:
      if (v98 == 3)
      {
        if (v93 == 8 && BitsPerPixel == 24)
        {
          v40 = 0;
          v42 = 21;
          v41 = 1;
        }
        else
        {
          v70 = v93 == 16 && BitsPerPixel == 48;
          v71 = !v70;
          if (!v70 || (BitmapInfo & 0xF00) != 0)
          {
            if ((BitmapInfo & 0xF00) == 0)
              v71 = 1;
            if (v71 == 1)
            {
              if (v93 != 32 || BitsPerPixel != 96 || v40 == 0)
                goto LABEL_111;
              v40 = 0;
              v42 = 24;
              v41 = 1;
            }
            else
            {
              v40 = 0;
              v42 = 23;
              v41 = 1;
            }
          }
          else
          {
            v42 = 22;
            v41 = 1;
          }
        }
      }
      else
      {
        if (v98 != 1)
          goto LABEL_111;
        if (v93 == 8 && BitsPerPixel == 8)
        {
          v40 = 0;
          v41 = 1;
          v42 = 1;
        }
        else
        {
          v68 = v93 == 16 && BitsPerPixel == 16;
          v69 = !v68;
          if (!v68 || (BitmapInfo & 0xF00) != 0)
          {
            if ((BitmapInfo & 0xF00) == 0)
              v69 = 1;
            if (v69 == 1)
            {
              if (v93 != 32 || BitsPerPixel != 32 || v40 == 0)
                goto LABEL_111;
              v40 = 0;
              v42 = 4;
              v41 = 1;
            }
            else
            {
              v40 = 0;
              v42 = 3;
              v41 = 1;
            }
          }
          else
          {
            v42 = 2;
            v41 = 1;
          }
        }
      }
      break;
    case kCGImageAlphaPremultipliedLast:
      v51 = v91;
      if ((unint64_t)v91 >= v92)
      {
        v53 = sub_23973F4D0(&v90, "Color values are premultiplied with alpha.");
      }
      else
      {
        v52 = (char *)operator new(0x30uLL);
        *(_QWORD *)v51 = v52;
        *(_OWORD *)(v51 + 8) = xmmword_239ED56E0;
        strcpy(v52, "Color values are premultiplied with alpha.");
        v53 = v51 + 24;
      }
      v91 = v53;
      if (v98 != 3)
        goto LABEL_111;
      if (v93 == 8 && v39 == 32)
      {
        v42 = 29;
      }
      else
      {
        if (v93 != 16 || v39 != 64 || (BitmapInfo & 0xF00) == 0)
          goto LABEL_111;
        v42 = 31;
      }
      v41 = 1;
      v40 = 4;
      break;
    case kCGImageAlphaLast:
      if (v98 == 1)
        goto LABEL_102;
      if (v98 != 3)
        goto LABEL_111;
      if (v93 == 8 && BitsPerPixel == 32 && (BitmapInfo & 0x2000) != 0)
      {
        v40 = 0;
        v42 = 33;
        v41 = 1;
      }
      else if (v93 == 8 && BitsPerPixel == 32)
      {
        v40 = 0;
        v42 = 29;
        v41 = 1;
      }
      else
      {
        v72 = v93 == 16 && BitsPerPixel == 64;
        v73 = !v72;
        if (!v72 || (BitmapInfo & 0xF00) != 0)
        {
          if ((BitmapInfo & 0xF00) == 0)
            v73 = 1;
          if (v73 == 1)
          {
            if (v93 != 32 || BitsPerPixel != 128 || v40 == 0)
              goto LABEL_111;
            v40 = 0;
            v42 = 32;
            v41 = 1;
          }
          else
          {
            v40 = 0;
            v42 = 31;
            v41 = 1;
          }
        }
        else
        {
          v42 = 30;
          v41 = 1;
        }
      }
      break;
    case kCGImageAlphaFirst:
      if (v98 == 1)
        goto LABEL_83;
      if (v98 != 3)
        goto LABEL_111;
      if (v93 == 8 && BitsPerPixel == 32 && (BitmapInfo & 0x2000) != 0)
      {
        v40 = 0;
        v42 = 25;
        v41 = 1;
      }
      else if (v93 == 8 && BitsPerPixel == 32)
      {
        v40 = 0;
        v42 = 37;
        v41 = 1;
      }
      else
      {
        v78 = v93 == 16 && BitsPerPixel == 64;
        v79 = !v78;
        if (!v78 || (BitmapInfo & 0xF00) != 0)
        {
          if ((BitmapInfo & 0xF00) == 0)
            v79 = 1;
          if (v79 == 1)
          {
            if (v93 != 32 || BitsPerPixel != 128 || v40 == 0)
              goto LABEL_111;
            v40 = 0;
            v42 = 40;
            v41 = 1;
          }
          else
          {
            v40 = 0;
            v42 = 39;
            v41 = 1;
          }
        }
        else
        {
          v42 = 38;
          v41 = 1;
        }
      }
      break;
    case kCGImageAlphaNoneSkipLast:
      v54 = v91;
      if ((unint64_t)v91 >= v92)
      {
        v55 = sub_23973F6FC(&v90, "Skips last component.");
      }
      else
      {
        v91[23] = 21;
        strcpy(v54, "Skips last component.");
        v55 = v54 + 24;
      }
      v91 = v55;
      if (v98 == 1)
      {
LABEL_102:
        if (v93 != 32 || v39 != 64 || (BitmapInfo & 0xF00) == 0)
          goto LABEL_111;
        v42 = 4;
      }
      else
      {
        if (v98 != 3 || (v93 != 8 || v39 != 32) && (v93 != 16 || v39 != 64 || (BitmapInfo & 0xF00) == 0))
          goto LABEL_111;
        v42 = 21;
      }
      v41 = 1;
      v40 = 2;
      break;
    case kCGImageAlphaNoneSkipFirst:
      v43 = v91;
      if ((unint64_t)v91 >= v92)
      {
        v44 = sub_23973F928(&v90, "Skips first component.");
      }
      else
      {
        *(_OWORD *)v91 = *(_OWORD *)"Skips first component.";
        *(_QWORD *)(v43 + 14) = *(_QWORD *)"mponent.";
        *((_WORD *)v43 + 11) = 5632;
        v44 = v43 + 24;
      }
      v91 = v44;
      if (v98 == 1)
      {
LABEL_83:
        if (v93 != 32 || v39 != 64 || (BitmapInfo & 0xF00) == 0)
          goto LABEL_111;
        v42 = 4;
      }
      else
      {
        if (v98 != 3)
          goto LABEL_111;
        if (v93 == 8 && v39 == 32)
        {
          v42 = 21;
        }
        else
        {
          if (v93 != 16 || v39 != 64 || (BitmapInfo & 0xF00) == 0)
            goto LABEL_111;
          v42 = 23;
        }
      }
      v41 = 1;
      v40 = 3;
      break;
    default:
      v94.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
      *(_OWORD *)&v94.__r_.__value_.__r.__words[1] = xmmword_239EC7360;
      strcpy(v94.__r_.__value_.__l.__data_, "Unsupported alpha info ");
      v45 = "invalid alpha";
      if (AlphaInfo == kCGImageAlphaOnly)
        v45 = "kCGImageAlphaOnly";
      if (AlphaInfo == kCGImageAlphaPremultipliedFirst)
        v46 = "kCGImageAlphaPremultipliedFirst";
      else
        v46 = v45;
      v47 = std::string::append(&v94, v46);
      v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v47->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v48;
      v47->__r_.__value_.__l.__size_ = 0;
      v47->__r_.__value_.__r.__words[2] = 0;
      v47->__r_.__value_.__r.__words[0] = 0;
      v49 = v91;
      if ((unint64_t)v91 >= v92)
      {
        v91 = sub_23941ACDC(&v90, (uint64_t)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
      else
      {
        v50 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *((_QWORD *)v91 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
        *(_OWORD *)v49 = v50;
        memset(&__p, 0, sizeof(__p));
        v91 = v49 + 24;
      }
      if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v94.__r_.__value_.__l.__data_);
LABEL_111:
      sub_23973EF40("For channels=", &v98, ", bits_per_component=", &v93, ", bits_per_pixel=", &v97, ", float_components=", &v96, &__p);
      v56 = v91;
      if ((unint64_t)v91 >= v92)
      {
        v91 = sub_23941ACDC(&v90, (uint64_t)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
      else
      {
        v57 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *((_QWORD *)v91 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
        *(_OWORD *)v56 = v57;
        v91 = v56 + 24;
      }
      v41 = 0;
      v42 = 0;
      v40 = 5;
      break;
  }
  *((_BYTE *)&v94.__r_.__value_.__s + 23) = 1;
  LOWORD(v94.__r_.__value_.__l.__data_) = 32;
  sub_23941AE44((uint64_t)v90, (uint64_t)v91, (uint64_t)&v94, &__p, v37, v38);
  v58 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  *(_DWORD *)v84 = __p.__r_.__value_.__r.__words[2];
  *(_DWORD *)&v84[3] = *(_DWORD *)((char *)&__p.__r_.__value_.__r.__words[2] + 3);
  v59 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
  __p.__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v94.__r_.__value_.__l.__data_);
  *(_DWORD *)a3 = v42;
  *(_BYTE *)(a3 + 4) = v41;
  *(_WORD *)(a3 + 5) = v85;
  *(_BYTE *)(a3 + 7) = v86;
  *(_DWORD *)(a3 + 8) = v13;
  *(_DWORD *)(a3 + 12) = v17;
  *(_DWORD *)(a3 + 16) = v20;
  *(_DWORD *)(a3 + 20) = v40;
  if (v59 < 0)
  {
    sub_23941A7F8((_BYTE *)(a3 + 24), (void *)v58, *((unint64_t *)&v58 + 1));
    operator delete((void *)v58);
    v60 = v89;
    if (!v89)
      goto LABEL_126;
  }
  else
  {
    *(_OWORD *)(a3 + 24) = v58;
    *(_DWORD *)(a3 + 40) = *(_DWORD *)v84;
    *(_DWORD *)(a3 + 43) = *(_DWORD *)&v84[3];
    *(_BYTE *)(a3 + 47) = v59;
    v60 = v89;
    if (!v89)
      goto LABEL_126;
  }
  v61 = (unint64_t *)&v60->__shared_owners_;
  do
    v62 = __ldaxr(v61);
  while (__stlxr(v62 - 1, v61));
  if (!v62)
  {
    ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
    std::__shared_weak_count::__release_weak(v60);
  }
LABEL_126:
  v63 = (char *)v90;
  if (v90)
  {
    v64 = v91;
    v65 = v90;
    if (v91 != v90)
    {
      do
      {
        if (*(v64 - 1) < 0)
          operator delete(*((void **)v64 - 3));
        v64 -= 24;
      }
      while (v64 != v63);
      v65 = v90;
    }
    v91 = v63;
    operator delete(v65);
  }
}

void sub_2397395D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
    operator delete(__p);
  if (a23 < 0)
  {
    operator delete(a18);
    sub_239416DA0((uint64_t)&a12);
    sub_23941B08C(&a14);
    _Unwind_Resume(a1);
  }
  sub_239416DA0((uint64_t)&a12);
  sub_23941B08C(&a14);
  _Unwind_Resume(a1);
}

void sub_239739694(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  int v10;
  __int16 v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  CFIndex v16;
  const UInt8 *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __n128 v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  _QWORD v33[2];
  std::__shared_weak_count *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  __int16 v39;
  std::__shared_weak_count_vtbl *v40;
  std::__shared_weak_count *v41;
  CFDataRef v42;
  std::__shared_weak_count *v43;

  v33[0] = &off_250ADB210;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v9 = *(_QWORD *)(a1 + 40);
    v10 = *(_DWORD *)(a1 + 48);
    v11 = *(_WORD *)(a1 + 52);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  else
  {
    v9 = *(_QWORD *)(a1 + 40);
    v10 = *(_DWORD *)(a1 + 48);
    v11 = *(_WORD *)(a1 + 52);
  }
  v13 = *(_QWORD *)(a1 + 24);
  v33[1] = v5;
  v34 = v6;
  v35 = v13;
  v36 = *(_DWORD *)(a1 + 32);
  v37 = v9;
  v38 = v10;
  v39 = v11;
  if (v6)
  {
    v14 = (unint64_t *)&v6->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v16 = sub_239739938((uint64_t)v33, a2);
  sub_23962A5A8(v17, v16, &v42);
  sub_239769024(&v40, &v42);
  v18 = v43;
  if (v43)
  {
    v19 = (unint64_t *)&v43->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = nullsub_4(&v35);
  v22 = v34;
  if (v34)
  {
    v23 = (unint64_t *)&v34->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v22->__on_zero_shared)(v22, v21);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  nullsub_4(v33);
  sub_239720FF8(&v31, (uint64_t)&v40);
  sub_2397386AC(a3, (uint64_t)&v31, a1 + 24, *(_DWORD *)(a1 + 48), *(unsigned int *)(a1 + 32) | 0x100000000);
  v25 = v32;
  if (v32)
  {
    v26 = (unint64_t *)&v32->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v41;
  if (v41)
  {
    v29 = (unint64_t *)&v41->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_2397398D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2397398F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239739908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4 - 64);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239739924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239416FF8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239739938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t *v13;
  unint64_t *v14;
  unint64_t *v15;
  unint64_t *v16;
  unint64_t *v17;
  unint64_t *v18;
  unint64_t *v19;
  unint64_t *v20;
  unint64_t *v21;
  unint64_t *v22;
  unint64_t *v23;
  unint64_t *v24;
  unint64_t *v25;
  unint64_t *v26;
  unint64_t *v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (**v32)();
  uint64_t v33;
  std::__shared_weak_count *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;

  v2 = a1;
  if (*(_BYTE *)(a1 + 52) && *(_QWORD *)(a1 + 40))
  {
    v3 = *(_QWORD *)(a1 + 8);
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v3 + 88))(v3, 0, "unknown location");
  }
  v8 = *(_QWORD *)(v2 + 40);
  switch(*(_DWORD *)(v2 + 48))
  {
    case 0:
      sub_239EC23F4(a1, a2);
    case 1:
      v32 = &off_250ADB350;
      sub_2394949FC(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36)
        v2 = ((v36 - 1) * v38 + (v35 - 1) * v37 + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v10 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      break;
    case 2:
      v32 = &off_250AE3D30;
      sub_23970E070(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36)
        v2 = 2 * ((v36 - 1) * v38 + (v35 - 1) * v37 + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v12 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v12);
      while (__stlxr(v11 - 1, v12));
      break;
    case 3:
      v32 = &off_250AE1C58;
      sub_23964D014(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36)
        v2 = 2 * ((v36 - 1) * v38 + (v35 - 1) * v37 + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v13 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v13);
      while (__stlxr(v11 - 1, v13));
      break;
    case 4:
      v32 = &off_250ADED08;
      sub_23964D668(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36)
        v2 = 4 * ((v36 - 1) * v38 + (v35 - 1) * v37 + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v14 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v14);
      while (__stlxr(v11 - 1, v14));
      break;
    case 5:
      sub_239EC23F4(a1, a2);
    case 6:
      sub_239EC23F4(a1, a2);
    case 7:
      sub_239EC23F4(a1, a2);
    case 8:
      sub_239EC23F4(a1, a2);
    case 9:
      sub_239EC23F4(a1, a2);
    case 0xA:
      sub_239EC23F4(a1, a2);
    case 0xB:
      sub_239EC23F4(a1, a2);
    case 0xC:
      sub_239EC23F4(a1, a2);
    case 0xD:
      sub_239EC23F4(a1, a2);
    case 0xE:
      sub_239EC23F4(a1, a2);
    case 0xF:
      sub_239EC23F4(a1, a2);
    case 0x10:
      sub_239EC23F4(a1, a2);
    case 0x11:
      sub_239EC23F4(a1, a2);
    case 0x12:
      sub_239EC23F4(a1, a2);
    case 0x13:
      sub_239EC23F4(a1, a2);
    case 0x14:
      sub_239EC23F4(a1, a2);
    case 0x15:
      v32 = &off_250ADB468;
      sub_239494110(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v15 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v15);
      while (__stlxr(v11 - 1, v15));
      break;
    case 0x16:
      v32 = &off_250AE3D70;
      sub_23970E7C4(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = 2 * ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v16 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v16);
      while (__stlxr(v11 - 1, v16));
      break;
    case 0x17:
      v32 = &off_250AE3DF0;
      sub_23970F74C(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = 2 * ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v17 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v17);
      while (__stlxr(v11 - 1, v17));
      break;
    case 0x18:
      v32 = &off_250AE3CF0;
      sub_23970D954(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = 4 * ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v18 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v18);
      while (__stlxr(v11 - 1, v18));
      break;
    case 0x19:
      v32 = &off_250AE1B60;
      sub_23964DC14(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v19 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v19);
      while (__stlxr(v11 - 1, v19));
      break;
    case 0x1A:
      sub_239EC23F4(a1, a2);
    case 0x1B:
      sub_239EC23F4(a1, a2);
    case 0x1C:
      sub_239EC23F4(a1, a2);
    case 0x1D:
      v32 = &off_250AE1A68;
      sub_23964E998(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v20 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v20);
      while (__stlxr(v11 - 1, v20));
      break;
    case 0x1E:
      v32 = &off_250AE3DB0;
      sub_23970EF88(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = 2 * ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v21 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v21);
      while (__stlxr(v11 - 1, v21));
      break;
    case 0x1F:
      v32 = &off_250AE3E30;
      sub_23970FE68(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = 2 * ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v22 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v22);
      while (__stlxr(v11 - 1, v22));
      break;
    case 0x20:
      v32 = &off_250AE2038;
      sub_23964EFB0(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = 4 * ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v23 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v23);
      while (__stlxr(v11 - 1, v23));
      break;
    case 0x21:
      v32 = &off_250AE3CB0;
      sub_23970D194(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v24 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v24);
      while (__stlxr(v11 - 1, v24));
      break;
    case 0x22:
      sub_239EC23F4(a1, a2);
    case 0x23:
      sub_239EC23F4(a1, a2);
    case 0x24:
      sub_239EC23F4(a1, a2);
    case 0x25:
      v32 = &off_250AE3C70;
      sub_23970CA7C(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v25 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v25);
      while (__stlxr(v11 - 1, v25));
      break;
    case 0x26:
      v32 = &off_250AE4570;
      sub_239740360(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = 2 * ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v26 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v26);
      while (__stlxr(v11 - 1, v26));
      break;
    case 0x27:
      v32 = &off_250AE4668;
      sub_239740BA8(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = 2 * ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v27 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v27);
      while (__stlxr(v11 - 1, v27));
      break;
    case 0x28:
      v32 = &off_250AE4760;
      sub_2397413F0(v2, (uint64_t)&v33);
      v2 = 0;
      if (v35 && v36 && v37)
        v2 = 4 * ((v36 - 1) * v39 + (v35 - 1) * v38 + v40 * (v37 - 1) + 1);
      v9 = v34;
      if (!v34)
        goto LABEL_151;
      v28 = (unint64_t *)&v34->__shared_owners_;
      do
        v11 = __ldaxr(v28);
      while (__stlxr(v11 - 1, v28));
      break;
    default:
      return v2;
  }
  if (v11)
  {
LABEL_151:
    nullsub_4(&v32);
    if (v8)
      return v2;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    nullsub_4(&v32);
    if (v8)
      return v2;
  }
  if (v2)
    sub_239EBF50C(v29, v30);
  return v2;
}

void sub_23973A384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A3AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A3C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A3FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A49C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23973A4EC(std::string::size_type a1, uint64_t a2)
{
  std::runtime_error *exception;
  std::logic_error *v5;
  uint64_t v6;
  unsigned int v7;
  std::string v8;
  unsigned int v9;
  _DWORD v10[6];
  std::string __p;

  sub_239738A48(a1, a2, (uint64_t)v10);
  if (v10[2] == 5)
  {
LABEL_8:
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, &__p);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  if (v10[3] == 5)
  {
    if ((char *)v8.__r_.__value_.__r.__words + 4 - (char *)&v8 != 16)
      goto LABEL_8;
  }
  else if (v10[4] == 5)
  {
    if ((char *)&v8.__r_.__value_.__r.__words[1] - (char *)&v8 != 16)
      goto LABEL_8;
  }
  else if (v10[5] == 5)
  {
    if ((char *)&v8.__r_.__value_.__r.__words[1] + 4 - (char *)&v8 != 16)
      goto LABEL_8;
  }
  else if ((char *)&v8 - (char *)&v6 != 16)
  {
    goto LABEL_8;
  }
  v9 = v10[0];
  if (v10[0] != *(_DWORD *)(a2 + 48))
  {
    v5 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v7 = *(_DWORD *)(a2 + 48);
    sub_23973A724("Cannot copy CGImage of format ", &v9, " into Image of format ", &v7, &v8);
    std::logic_error::logic_error(v5, &v8);
    v5->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(v5, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v8.__r_.__value_.__r.__words[0] = (std::string::size_type)v10;
  v8.__r_.__value_.__l.__size_ = a1;
  sub_239741AB4(v10[0], (uint64_t *)&v8, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_23973A6CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  void *v26;
  int v27;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v27 & 1) == 0)
    {
LABEL_6:
      if (a26 < 0)
        operator delete(a21);
      _Unwind_Resume(a1);
    }
  }
  else if (!v27)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v26);
  goto LABEL_6;
}

void sub_23973A724(const char *a1@<X0>, unsigned int *a2@<X1>, const char *a3@<X2>, unsigned int *a4@<X3>, std::string *a5@<X8>)
{
  char *v9;
  size_t v10;
  size_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64x2_t v16;
  int8x16_t v17;
  char *v18;
  char *v19;
  void *v20;
  char v21;
  void *v22;
  char *v23;
  unint64_t v24;
  void *__p[2];
  char v26;

  v22 = 0;
  v23 = 0;
  v24 = 0;
  v23 = sub_239729314(&v22, a1);
  sub_23941A18C((uint64_t)__p, (uint64_t)&v22, a2);
  v9 = v23;
  if ((unint64_t)v23 >= v24)
  {
    v13 = sub_23973F928(&v22, a3);
    goto LABEL_12;
  }
  v10 = strlen(a3);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v14 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v14 = v10 | 7;
    v15 = v14 + 1;
    v12 = operator new(v14 + 1);
    *((_QWORD *)v9 + 1) = v11;
    *((_QWORD *)v9 + 2) = v15 | 0x8000000000000000;
    *(_QWORD *)v9 = v12;
  }
  else
  {
    v23[23] = v10;
    v12 = v9;
    if (!v10)
      goto LABEL_11;
  }
  memmove(v12, a3, v11);
LABEL_11:
  *((_BYTE *)v12 + v11) = 0;
  v13 = v9 + 24;
LABEL_12:
  v23 = v13;
  sub_23941A18C((uint64_t)&v21, (uint64_t)&v22, a4);
  v26 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v22, (uint64_t)v23, (uint64_t)__p, a5, v16, v17);
  if (v26 < 0)
    operator delete(__p[0]);
  v18 = (char *)v22;
  if (v22)
  {
    v19 = v23;
    v20 = v22;
    if (v23 != v22)
    {
      do
      {
        if (*(v19 - 1) < 0)
          operator delete(*((void **)v19 - 3));
        v19 -= 24;
      }
      while (v19 != v18);
      v20 = v22;
    }
    v23 = v18;
    operator delete(v20);
  }
}

void sub_23973A8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

void sub_23973A914(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

void sub_23973A94C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent, CGDataProviderRef provider, uint64_t a13, uint64_t a14, uint64_t a15, CGColorSpaceRef space, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  _QWORD *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  CGImageRef v28;
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  CGDataProviderRef v39;
  std::__shared_weak_count *v40;
  CGImageRef v41;
  std::__shared_weak_count *v42;
  __int128 v43;

  sub_239720FF8(&v39, *(_QWORD *)v24);
  v25 = *(unint64_t **)(v24 + 8);
  v26 = **(_QWORD **)(v24 + 16);
  v27 = *v25;
  if ((v26 & 0xFF00000000) != 0)
  {
    if (v26 < v27)
    {
      sub_239A444D4((uint64_t)"unknown file", 103, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  else
  {
    v26 = *v25;
  }
  sub_239737D58(&v43, 0);
  v28 = CGImageCreate(v27, HIDWORD(v27), 8uLL, 8uLL, v26, (CGColorSpaceRef)v43, 0, v39, 0, 0, kCGRenderingIntentDefault);
  v41 = v28;
  v29 = (std::__shared_weak_count *)operator new();
  v29->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3EF8;
  v29->__shared_owners_ = 0;
  v29->__shared_weak_owners_ = 0;
  v29[1].__vftable = (std::__shared_weak_count_vtbl *)v28;
  v42 = v29;
  sub_23973E120((uint64_t)&v41, v23);
  v30 = v42;
  if (v42)
  {
    p_shared_owners = (unint64_t *)&v42->__shared_owners_;
    do
      v32 = __ldaxr(p_shared_owners);
    while (__stlxr(v32 - 1, p_shared_owners));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
  v33 = (std::__shared_weak_count *)*((_QWORD *)&v43 + 1);
  if (*((_QWORD *)&v43 + 1))
  {
    v34 = (unint64_t *)(*((_QWORD *)&v43 + 1) + 8);
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  v36 = v40;
  if (v40)
  {
    v37 = (unint64_t *)&v40->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
}

void sub_23973C1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_5;
  if (16 * (unint64_t)**(_QWORD **)(v6 + 8) > v7)
  {
    v8 = 103;
    goto LABEL_6;
  }
  if ((v7 & 0xF) != 0)
    v8 = 105;
  else
LABEL_5:
    v8 = 134;
LABEL_6:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_5;
  if (8 * (unint64_t)**(_QWORD **)(v6 + 8) > v7)
  {
    v8 = 103;
    goto LABEL_6;
  }
  if ((v7 & 7) != 0)
    v8 = 105;
  else
LABEL_5:
    v8 = 134;
LABEL_6:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (8 * (unint64_t)**(_QWORD **)(v6 + 8) <= v7)
  {
    if ((v7 & 7) == 0)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_5;
  if (12 * (unint64_t)**(unsigned int **)(v6 + 8) > v7)
  {
    v8 = 103;
    goto LABEL_6;
  }
  HIDWORD(v9) = -1431655765 * v7;
  LODWORD(v9) = -1431655765 * v7;
  if ((v9 >> 2) > 0x15555555)
    v8 = 105;
  else
LABEL_5:
    v8 = 134;
LABEL_6:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (6 * (unint64_t)**(unsigned int **)(v6 + 8) <= v7)
  {
    HIDWORD(v9) = -1431655765 * v7;
    LODWORD(v9) = -1431655765 * v7;
    if ((v9 >> 1) <= 0x2AAAAAAA)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (6 * (unint64_t)**(unsigned int **)(v6 + 8) <= v7)
  {
    HIDWORD(v9) = -1431655765 * v7;
    LODWORD(v9) = -1431655765 * v7;
    if ((v9 >> 1) <= 0x2AAAAAAA)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_5;
  if (3 * (unint64_t)**(unsigned int **)(v6 + 8) > v7)
  {
    v8 = 103;
    goto LABEL_6;
  }
  if ((-1431655765 * v7) > 0x55555555)
    v8 = 105;
  else
LABEL_5:
    v8 = 134;
LABEL_6:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_5;
  if (16 * (unint64_t)**(_QWORD **)(v6 + 8) > v7)
  {
    v8 = 103;
    goto LABEL_6;
  }
  if ((v7 & 0xF) != 0)
    v8 = 105;
  else
LABEL_5:
    v8 = 134;
LABEL_6:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (8 * (unint64_t)**(_QWORD **)(v6 + 8) <= v7)
  {
    if ((v7 & 7) == 0)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_5;
  if (8 * (unint64_t)**(_QWORD **)(v6 + 8) > v7)
  {
    v8 = 103;
    goto LABEL_6;
  }
  if ((v7 & 7) != 0)
    v8 = 105;
  else
LABEL_5:
    v8 = 134;
LABEL_6:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_5;
  if (4 * (unint64_t)**(_QWORD **)(v6 + 8) > v7)
  {
    v8 = 103;
    goto LABEL_6;
  }
  if ((v7 & 3) != 0)
    v8 = 105;
  else
LABEL_5:
    v8 = 134;
LABEL_6:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_5;
  if (12 * (unint64_t)**(unsigned int **)(v6 + 8) > v7)
  {
    v8 = 103;
    goto LABEL_6;
  }
  HIDWORD(v9) = -1431655765 * v7;
  LODWORD(v9) = -1431655765 * v7;
  if ((v9 >> 2) > 0x15555555)
    v8 = 105;
  else
LABEL_5:
    v8 = 134;
LABEL_6:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (16 * (unint64_t)**(_QWORD **)(v6 + 8) <= v7)
  {
    if ((v7 & 0xF) == 0)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (8 * (unint64_t)**(_QWORD **)(v6 + 8) <= v7)
  {
    if ((v7 & 7) == 0)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (6 * (unint64_t)**(unsigned int **)(v6 + 8) <= v7)
  {
    HIDWORD(v9) = -1431655765 * v7;
    LODWORD(v9) = -1431655765 * v7;
    if ((v9 >> 1) <= 0x2AAAAAAA)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (8 * (unint64_t)**(_QWORD **)(v6 + 8) <= v7)
  {
    if ((v7 & 7) == 0)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (6 * (unint64_t)**(unsigned int **)(v6 + 8) <= v7)
  {
    HIDWORD(v9) = -1431655765 * v7;
    LODWORD(v9) = -1431655765 * v7;
    if ((v9 >> 1) <= 0x2AAAAAAA)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_5;
  if (3 * (unint64_t)**(unsigned int **)(v6 + 8) > v7)
  {
    v8 = 103;
    goto LABEL_6;
  }
  if ((-1431655765 * v7) > 0x55555555)
    v8 = 105;
  else
LABEL_5:
    v8 = 134;
LABEL_6:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (8 * (unint64_t)**(_QWORD **)(v6 + 8) <= v7)
  {
    if ((v7 & 7) == 0)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (4 * (unint64_t)**(_QWORD **)(v6 + 8) <= v7)
  {
    if ((v7 & 3) == 0)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_2;
  if (4 * (unint64_t)**(_QWORD **)(v6 + 8) <= v7)
  {
    if ((v7 & 3) == 0)
    {
LABEL_2:
      v8 = 134;
      goto LABEL_7;
    }
    v8 = 105;
  }
  else
  {
    v8 = 103;
  }
LABEL_7:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973C598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  sub_239720FF8((uint64_t *)va, *(_QWORD *)v6);
  v7 = **(_QWORD **)(v6 + 16);
  if ((v7 & 0xFF00000000) == 0)
    goto LABEL_5;
  if (2 * (unint64_t)**(_QWORD **)(v6 + 8) > v7)
  {
    v8 = 103;
    goto LABEL_6;
  }
  if ((v7 & 1) != 0)
    v8 = 105;
  else
LABEL_5:
    v8 = 134;
LABEL_6:
  sub_239A444D4((uint64_t)"unknown file", v8, (uint64_t)"", (void (*)(void *))sub_239A4463C);
  sub_239A4475C();
  abort();
}

void sub_23973CF90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_23973CFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D2D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v18 = (unint64_t *)&a16->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v20 = (unint64_t *)(a12 + 8);
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    JUMPOUT(0x23973E0FCLL);
  }
  JUMPOUT(0x23973E118);
}

void sub_23973D3D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  if (a16)
  {
    v19 = (unint64_t *)&a16->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a12)
  {
    v21 = (unint64_t *)&a12->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973D410(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DEA0);
}

void sub_23973D438(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DEC4);
}

void sub_23973D460(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DEE8);
}

void sub_23973D488(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DF0CLL);
}

void sub_23973D4B0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DF30);
}

void sub_23973D4D8(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DF54);
}

void sub_23973D500(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DF78);
}

void sub_23973D528(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DF9CLL);
}

void sub_23973D550(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DFC0);
}

void sub_23973D578(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DFE4);
}

void sub_23973D5A0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973E008);
}

void sub_23973D5C8(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973E02CLL);
}

void sub_23973D5F0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973E050);
}

void sub_23973D618(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973E074);
}

void sub_23973D640(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973E098);
}

void sub_23973D668(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973E0BCLL);
}

void sub_23973D690(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973E0E0);
}

void sub_23973D6B8(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_23973D6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v17;

  __cxa_end_catch();
  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  JUMPOUT(0x23973DE7CLL);
}

void sub_23973DB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DB84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DCA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DCC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DCEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DD34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DD7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DE0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973DE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  unint64_t *p_shared_owners;
  unint64_t v18;

  if (a16)
  {
    p_shared_owners = (unint64_t *)&a16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  _Unwind_Resume(a1);
}

void sub_23973E120(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *(const void **)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  v15 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_239722A3C(&v16, v3);
  v7 = v17;
  *a2 = v16;
  a2[1] = v7;
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
    v10 = v17;
    if (v17)
    {
      v11 = (unint64_t *)&v17->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  if (v15)
  {
    v13 = (unint64_t *)&v15->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_23973E20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_23973E220(uint64_t a1, char *__s)
{
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(char **)(a1 + 8);
  if ((unint64_t)v4 < *(_QWORD *)(a1 + 16))
  {
    v5 = strlen(__s);
    if (v5 >= 0x7FFFFFFFFFFFFFF8)
      sub_23941A5AC();
    v6 = v5;
    if (v5 >= 0x17)
    {
      v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v9 = v5 | 7;
      v10 = v9 + 1;
      v7 = operator new(v9 + 1);
      *((_QWORD *)v4 + 1) = v6;
      *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
      *(_QWORD *)v4 = v7;
    }
    else
    {
      v4[23] = v5;
      v7 = v4;
      if (!v5)
        goto LABEL_11;
    }
    memmove(v7, __s, v6);
LABEL_11:
    *((_BYTE *)v7 + v6) = 0;
    v8 = v4 + 24;
    *(_QWORD *)(a1 + 8) = v4 + 24;
    goto LABEL_12;
  }
  v8 = sub_23973E614((void **)a1, __s);
LABEL_12:
  *(_QWORD *)(a1 + 8) = v8;
  return v8 - 24;
}

void sub_23973E2FC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_23973E304(uint64_t a1, char *__s)
{
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(char **)(a1 + 8);
  if ((unint64_t)v4 < *(_QWORD *)(a1 + 16))
  {
    v5 = strlen(__s);
    if (v5 >= 0x7FFFFFFFFFFFFFF8)
      sub_23941A5AC();
    v6 = v5;
    if (v5 >= 0x17)
    {
      v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v9 = v5 | 7;
      v10 = v9 + 1;
      v7 = operator new(v9 + 1);
      *((_QWORD *)v4 + 1) = v6;
      *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
      *(_QWORD *)v4 = v7;
    }
    else
    {
      v4[23] = v5;
      v7 = v4;
      if (!v5)
        goto LABEL_11;
    }
    memmove(v7, __s, v6);
LABEL_11:
    *((_BYTE *)v7 + v6) = 0;
    v8 = v4 + 24;
    *(_QWORD *)(a1 + 8) = v4 + 24;
    goto LABEL_12;
  }
  v8 = sub_23973E840((void **)a1, __s);
LABEL_12:
  *(_QWORD *)(a1 + 8) = v8;
  return v8 - 24;
}

void sub_23973E3E0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_23973E3E8(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23973E600(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23973E614(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23973E82C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23973E840(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23973EA58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23973EA6C(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23973EC84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23973EC98(const char *a1@<X0>, int *a2@<X1>, const char *a3@<X2>, std::string *a4@<X8>)
{
  char *v7;
  size_t v8;
  int64x2_t v9;
  int8x16_t v10;
  size_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void *v18;
  void *v19;
  char *v20;
  unint64_t v21;
  void *__p[2];
  char v23;

  v19 = 0;
  v20 = 0;
  v21 = 0;
  v20 = sub_239735154(&v19, a1);
  sub_23973EE6C((uint64_t)__p, (uint64_t)&v19, a2);
  v7 = v20;
  if ((unint64_t)v20 >= v21)
  {
    v13 = sub_2397355AC(&v19, a3);
    goto LABEL_12;
  }
  v8 = strlen(a3);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v8;
  if (v8 >= 0x17)
  {
    v14 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v14 = v8 | 7;
    v15 = v14 + 1;
    v12 = operator new(v14 + 1);
    *((_QWORD *)v7 + 1) = v11;
    *((_QWORD *)v7 + 2) = v15 | 0x8000000000000000;
    *(_QWORD *)v7 = v12;
  }
  else
  {
    v20[23] = v8;
    v12 = v7;
    if (!v8)
      goto LABEL_11;
  }
  memmove(v12, a3, v11);
LABEL_11:
  *((_BYTE *)v12 + v11) = 0;
  v13 = v7 + 24;
LABEL_12:
  v20 = v13;
  v23 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v19, (uint64_t)v13, (uint64_t)__p, a4, v9, v10);
  if (v23 < 0)
    operator delete(__p[0]);
  v16 = (char *)v19;
  if (v19)
  {
    v17 = v20;
    v18 = v19;
    if (v20 != v19)
    {
      do
      {
        if (*(v17 - 1) < 0)
          operator delete(*((void **)v17 - 3));
        v17 -= 24;
      }
      while (v17 != v16);
      v18 = v19;
    }
    v20 = v16;
    operator delete(v18);
  }
}

void sub_23973EE14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_23973EE6C(uint64_t a1, uint64_t a2, int *a3)
{
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v11;
  uint64_t v12;

  sub_239A43D24(&v12);
  v5 = (_QWORD *)sub_239A43E64(&v12);
  sub_239737C38(v5, *a3);
  sub_239A43E70();
  sub_239A43DB8(&v12);
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
    v8 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v9 = SHIBYTE(v11);
    *(_QWORD *)(a2 + 8) = v8;
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v11;
    *(_OWORD *)v6 = v7;
    *(_QWORD *)(a2 + 8) = v6 + 24;
  }
}

void sub_23973EF10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23973EF40(const char *a1@<X0>, unint64_t *a2@<X1>, const char *a3@<X2>, unint64_t *a4@<X3>, const char *a5@<X4>, unint64_t *a6@<X5>, const char *a7@<X6>, _BYTE *a8@<X7>, std::string *a9@<X8>)
{
  char *v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  char *v21;
  char *v22;
  const char *v23;
  const char *v24;
  _BYTE *v25;
  size_t v26;
  size_t v27;
  std::string *v28;
  void *v29;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _OWORD *v34;
  __int128 v35;
  char *v36;
  char *v37;
  size_t v38;
  size_t v39;
  void *v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _OWORD *v45;
  __int128 v46;
  char *v47;
  char *v48;
  size_t v49;
  size_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int v55;
  const char *v56;
  size_t v57;
  int64x2_t v58;
  int8x16_t v59;
  char *v60;
  char *v61;
  char *v62;
  void *v63;
  unint64_t *v64;
  void *__p;
  char *v66;
  unint64_t v67;
  std::string v68;

  __p = 0;
  v66 = 0;
  v67 = 0;
  v17 = sub_23973FB54(&__p, a1);
  v18 = *a2;
  v66 = v17;
  std::to_string(&v68, v18);
  v19 = v66;
  if ((unint64_t)v66 < v67)
  {
    v20 = *(_OWORD *)&v68.__r_.__value_.__l.__data_;
    *((_QWORD *)v66 + 2) = *((_QWORD *)&v68.__r_.__value_.__l + 2);
    *v19 = v20;
    v21 = (char *)v19 + 24;
    v66 = (char *)v19 + 24;
    if ((unint64_t)v19 + 24 >= v67)
      goto LABEL_16;
LABEL_6:
    v64 = a4;
    v23 = a5;
    v24 = a7;
    v25 = a8;
    v26 = strlen(a3);
    if (v26 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v27 = v26;
    v28 = a9;
    if (v26 >= 0x17)
    {
      v30 = a6;
      v31 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v26 | 7) != 0x17)
        v31 = v26 | 7;
      v32 = v31 + 1;
      v29 = operator new(v31 + 1);
      *((_QWORD *)v21 + 1) = v27;
      *((_QWORD *)v21 + 2) = v32 | 0x8000000000000000;
      *(_QWORD *)v21 = v29;
      a6 = v30;
    }
    else
    {
      v21[23] = v26;
      v29 = v21;
      if (!v26)
        goto LABEL_14;
    }
    memmove(v29, a3, v27);
LABEL_14:
    *((_BYTE *)v29 + v27) = 0;
    v33 = v21 + 24;
    a9 = v28;
    a8 = v25;
    a7 = v24;
    a5 = v23;
    a4 = v64;
    goto LABEL_17;
  }
  v22 = sub_23941ACDC(&__p, (uint64_t)&v68);
  v21 = v22;
  v66 = v22;
  if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v68.__r_.__value_.__l.__data_);
    v21 = v66;
    if ((unint64_t)v66 < v67)
      goto LABEL_6;
  }
  else if ((unint64_t)v22 < v67)
  {
    goto LABEL_6;
  }
LABEL_16:
  v33 = sub_23973F6FC(&__p, a3);
LABEL_17:
  v66 = v33;
  std::to_string(&v68, *a4);
  v34 = v66;
  if ((unint64_t)v66 < v67)
  {
    v35 = *(_OWORD *)&v68.__r_.__value_.__l.__data_;
    *((_QWORD *)v66 + 2) = *((_QWORD *)&v68.__r_.__value_.__l + 2);
    *v34 = v35;
    v36 = (char *)v34 + 24;
    v66 = (char *)v34 + 24;
    if ((unint64_t)v34 + 24 >= v67)
      goto LABEL_32;
LABEL_22:
    v38 = strlen(a5);
    if (v38 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v39 = v38;
    if (v38 >= 0x17)
    {
      v41 = a6;
      v42 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v38 | 7) != 0x17)
        v42 = v38 | 7;
      v43 = v42 + 1;
      v40 = operator new(v42 + 1);
      *((_QWORD *)v36 + 1) = v39;
      *((_QWORD *)v36 + 2) = v43 | 0x8000000000000000;
      *(_QWORD *)v36 = v40;
      a6 = v41;
    }
    else
    {
      v36[23] = v38;
      v40 = v36;
      if (!v38)
        goto LABEL_30;
    }
    memmove(v40, a5, v39);
LABEL_30:
    *((_BYTE *)v40 + v39) = 0;
    v44 = v36 + 24;
    goto LABEL_33;
  }
  v37 = sub_23941ACDC(&__p, (uint64_t)&v68);
  v36 = v37;
  v66 = v37;
  if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v68.__r_.__value_.__l.__data_);
    v36 = v66;
    if ((unint64_t)v66 < v67)
      goto LABEL_22;
  }
  else if ((unint64_t)v37 < v67)
  {
    goto LABEL_22;
  }
LABEL_32:
  v44 = sub_23973FD80(&__p, a5);
LABEL_33:
  v66 = v44;
  std::to_string(&v68, *a6);
  v45 = v66;
  if ((unint64_t)v66 < v67)
  {
    v46 = *(_OWORD *)&v68.__r_.__value_.__l.__data_;
    *((_QWORD *)v66 + 2) = *((_QWORD *)&v68.__r_.__value_.__l + 2);
    *v45 = v46;
    v47 = (char *)v45 + 24;
    v66 = (char *)v45 + 24;
    if ((unint64_t)v45 + 24 >= v67)
      goto LABEL_48;
LABEL_38:
    v49 = strlen(a7);
    if (v49 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v50 = v49;
    if (v49 >= 0x17)
    {
      v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v49 | 7) != 0x17)
        v52 = v49 | 7;
      v53 = v52 + 1;
      v51 = operator new(v52 + 1);
      *((_QWORD *)v47 + 1) = v50;
      *((_QWORD *)v47 + 2) = v53 | 0x8000000000000000;
      *(_QWORD *)v47 = v51;
    }
    else
    {
      v47[23] = v49;
      v51 = v47;
      if (!v49)
        goto LABEL_46;
    }
    memmove(v51, a7, v50);
LABEL_46:
    *((_BYTE *)v51 + v50) = 0;
    v54 = v47 + 24;
    goto LABEL_49;
  }
  v48 = sub_23941ACDC(&__p, (uint64_t)&v68);
  v47 = v48;
  v66 = v48;
  if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v68.__r_.__value_.__l.__data_);
    v47 = v66;
    if ((unint64_t)v66 < v67)
      goto LABEL_38;
  }
  else if ((unint64_t)v48 < v67)
  {
    goto LABEL_38;
  }
LABEL_48:
  v54 = sub_2397355AC(&__p, a7);
LABEL_49:
  v66 = v54;
  v55 = *a8;
  if (*a8)
    v56 = "true";
  else
    v56 = "false";
  v68.__r_.__value_.__r.__words[0] = (std::string::size_type)v56;
  if ((unint64_t)v54 >= v67)
  {
    v60 = sub_23973FFAC(&__p, (const char **)&v68.__r_.__value_.__l.__data_);
  }
  else
  {
    if (v55)
      v57 = 4;
    else
      v57 = 5;
    v54[23] = v57;
    memcpy(v54, v56, v57);
    v54[v57] = 0;
    v60 = v54 + 24;
  }
  v66 = v60;
  *((_BYTE *)&v68.__r_.__value_.__s + 23) = 0;
  v68.__r_.__value_.__s.__data_[0] = 0;
  sub_23941AE44((uint64_t)__p, (uint64_t)v60, (uint64_t)&v68, a9, v58, v59);
  if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v68.__r_.__value_.__l.__data_);
  v61 = (char *)__p;
  if (__p)
  {
    v62 = v66;
    v63 = __p;
    if (v66 != __p)
    {
      do
      {
        if (*(v62 - 1) < 0)
          operator delete(*((void **)v62 - 3));
        v62 -= 24;
      }
      while (v62 != v61);
      v63 = __p;
    }
    v66 = v61;
    operator delete(v63);
  }
}

void sub_23973F428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

char *sub_23973F4D0(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23973F6E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23973F6FC(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23973F914(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23973F928(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23973FB40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23973FB54(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23973FD6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23973FD80(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_23973FF98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23973FFAC(void **a1, const char **a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  const char *v9;
  size_t v10;
  size_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  char *v20;
  char *v22;
  char *v23;
  char *v24;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v22 = v8;
  v23 = v8;
  v24 = &v7[24 * v6];
  v9 = *a2;
  v10 = strlen(*a2);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v16 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v16 = v10 | 7;
    v17 = v16 + 1;
    v18 = (char *)operator new(v16 + 1);
    *((_QWORD *)v8 + 1) = v11;
    *((_QWORD *)v8 + 2) = v17 | 0x8000000000000000;
    *(_QWORD *)v8 = v18;
    v8 = v18;
  }
  else
  {
    v8[23] = v10;
    if (!v10)
    {
      *v8 = 0;
      v12 = v8;
      v13 = v8 + 24;
      v14 = (char *)*a1;
      v15 = (char *)a1[1];
      if (v15 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, v9, v11);
  v8[v11] = 0;
  v12 = v22;
  v13 = v23 + 24;
  v14 = (char *)*a1;
  v15 = (char *)a1[1];
  if (v15 == *a1)
  {
LABEL_23:
    *a1 = v12;
    a1[1] = v13;
    a1[2] = v24;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v19 = *(_OWORD *)(v15 - 24);
    *((_QWORD *)v12 - 1) = *((_QWORD *)v15 - 1);
    *(_OWORD *)(v12 - 24) = v19;
    v12 -= 24;
    *((_QWORD *)v15 - 2) = 0;
    *((_QWORD *)v15 - 1) = 0;
    *((_QWORD *)v15 - 3) = 0;
    v15 -= 24;
  }
  while (v15 != v14);
  v20 = (char *)*a1;
  v15 = (char *)a1[1];
  *a1 = v12;
  a1[1] = v13;
  a1[2] = v24;
  if (v15 != v20)
  {
    do
    {
      if (*(v15 - 1) < 0)
        operator delete(*((void **)v15 - 3));
      v15 -= 24;
    }
    while (v15 != v20);
    v15 = v20;
  }
LABEL_28:
  if (v15)
    operator delete(v15);
  return v13;
}

void sub_2397401C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_2397401DC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_239740244(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2397402B0()
{
  return 38;
}

uint64_t sub_2397402B8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2397402C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2397402DC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_239740360(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 38)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239740630(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397405E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_239740630(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2397406A8();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2397406A8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931648);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931648))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_23974097C();
    sub_2397408AC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397408AC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931630, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931630, &dword_23940C000);
          __cxa_guard_release(&qword_256931648);
          return &stru_256931630;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931630;
}

void sub_2397407F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931648);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931648);
  _Unwind_Resume(a1);
}

void sub_2397408AC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239740940(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_23974097C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_256931668);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256931668))
    return &xmmword_256931650;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb16u]", &xmmword_256931650);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931650, &dword_23940C000);
  __cxa_guard_release(&qword_256931668);
  return &xmmword_256931650;
}

void sub_239740A0C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256931668);
  _Unwind_Resume(a1);
}

double sub_239740A24(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_239740A8C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239740AF8()
{
  return 39;
}

uint64_t sub_239740B00(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_239740B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_239740B24(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_239740BA8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 39)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239740E78(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_239740E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_239740E78(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239740EF0();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239740EF0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931688);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931688))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_2397411C4();
    sub_2397410F4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397410F4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931670, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931670, &dword_23940C000);
          __cxa_guard_release(&qword_256931688);
          return &stru_256931670;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931670;
}

void sub_239741040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931688);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931688);
  _Unwind_Resume(a1);
}

void sub_2397410F4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239741188(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_2397411C4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569316A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569316A8))
    return &xmmword_256931690;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb16f]", &xmmword_256931690);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256931690, &dword_23940C000);
  __cxa_guard_release(&qword_2569316A8);
  return &xmmword_256931690;
}

void sub_239741254(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569316A8);
  _Unwind_Resume(a1);
}

double sub_23974126C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_2397412D4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239741340()
{
  return 40;
}

uint64_t sub_239741348(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_239741350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_23974136C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2397413F0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 40)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397416C0(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_239741674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2397416C0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239741738();
  v5 = sub_239494728();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239741738()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569316C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569316C8))
  {
    sub_23941A4FC(v7, "ConstImageView");
    v2 = sub_239741A0C();
    sub_23974193C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23974193C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569316B0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569316B0, &dword_23940C000);
          __cxa_guard_release(&qword_2569316C8);
          return &stru_2569316B0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569316B0;
}

void sub_239741888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569316C8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569316C8);
  _Unwind_Resume(a1);
}

void sub_23974193C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397419D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

__int128 *sub_239741A0C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569316E8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569316E8))
    return &xmmword_2569316D0;
  sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb32f]", &xmmword_2569316D0);
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569316D0, &dword_23940C000);
  __cxa_guard_release(&qword_2569316E8);
  return &xmmword_2569316D0;
}

void sub_239741A9C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569316E8);
  _Unwind_Resume(a1);
}

double sub_239741AB4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t (***v8)();
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t (***v14)();
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (***v20)();
  uint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t (***v26)();
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t (***v32)();
  uint64_t v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t (***v38)();
  uint64_t v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  uint64_t (***v44)();
  uint64_t v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t (***v50)();
  uint64_t v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  uint64_t (***v56)();
  uint64_t v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  uint64_t (***v62)();
  uint64_t v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  uint64_t (***v68)();
  uint64_t v69;
  uint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  uint64_t (***v74)();
  uint64_t v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  uint64_t (***v80)();
  uint64_t v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  uint64_t (***v86)();
  uint64_t v87;
  uint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t (***v92)();
  uint64_t v93;
  uint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  uint64_t (***v98)();
  uint64_t v99;
  uint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  uint64_t (***v104)();
  uint64_t v105;
  uint64_t v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  uint64_t (***v110)();
  uint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  unint64_t *v115;
  unint64_t *v116;
  unint64_t *v117;
  unint64_t *v118;
  unint64_t *v119;
  unint64_t *v120;
  unint64_t *v121;
  unint64_t *v122;
  unint64_t *v123;
  unint64_t *v124;
  unint64_t *v125;
  unint64_t *v126;
  unint64_t *v127;
  unint64_t *v128;
  unint64_t *v129;
  unint64_t *v130;
  unint64_t *v131;
  double result;
  uint64_t (**v133)();
  uint64_t v134;
  std::__shared_weak_count *v135;
  uint64_t v136;
  std::__shared_weak_count *v137;
  uint64_t (**v138)();
  uint64_t (***v139)();
  uint64_t (***v140)();
  uint64_t v141;

  v141 = *MEMORY[0x24BDAC8D0];
  switch((int)a1)
  {
    case 0:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 1:
      v133 = &off_250ADB3D0;
      sub_239419AD8(a3, (uint64_t)&v134);
      v4 = a2[1];
      v138 = &off_250AE4858;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v4);
      sub_2397436E4((uint64_t)&v138, (uint64_t)&v136, *a2);
      v5 = v137;
      if (v137)
      {
        p_shared_owners = (unint64_t *)&v137->__shared_owners_;
        do
          v7 = __ldaxr(p_shared_owners);
        while (__stlxr(v7 - 1, p_shared_owners));
        if (!v7)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
      v8 = v140;
      if (v140 == &v138)
      {
        v9 = 4;
        v8 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_208;
        v9 = 5;
      }
      (*v8)[v9]();
LABEL_208:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v124 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v124);
      while (__stlxr(v114 - 1, v124));
      goto LABEL_253;
    case 2:
      v133 = &off_250AE4080;
      sub_23972FE3C(a3, (uint64_t)&v134);
      v64 = a2[1];
      v138 = &off_250AE48E8;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v64);
      sub_239744498((uint64_t)&v138, (uint64_t)&v136, *a2);
      v65 = v137;
      if (v137)
      {
        v66 = (unint64_t *)&v137->__shared_owners_;
        do
          v67 = __ldaxr(v66);
        while (__stlxr(v67 - 1, v66));
        if (!v67)
        {
          ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
          std::__shared_weak_count::__release_weak(v65);
        }
      }
      v68 = v140;
      if (v140 == &v138)
      {
        v69 = 4;
        v68 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_202;
        v69 = 5;
      }
      (*v68)[v69]();
LABEL_202:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v123 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v123);
      while (__stlxr(v114 - 1, v123));
      goto LABEL_253;
    case 3:
      v133 = &off_250AE1970;
      sub_239746F80(a3, (uint64_t)&v134);
      v46 = a2[1];
      v138 = &off_250AE4978;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v46);
      sub_239745A94((uint64_t)&v138, (uint64_t)&v136, *a2);
      v47 = v137;
      if (v137)
      {
        v48 = (unint64_t *)&v137->__shared_owners_;
        do
          v49 = __ldaxr(v48);
        while (__stlxr(v49 - 1, v48));
        if (!v49)
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
      }
      v50 = v140;
      if (v140 == &v138)
      {
        v51 = 4;
        v50 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_184;
        v51 = 5;
      }
      (*v50)[v51]();
LABEL_184:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v120 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v120);
      while (__stlxr(v114 - 1, v120));
      goto LABEL_253;
    case 4:
      v133 = &off_250AE1F40;
      sub_2397493A0(a3, (uint64_t)&v134);
      v40 = a2[1];
      v138 = &off_250AE4B00;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v40);
      sub_23974752C((uint64_t)&v138, (uint64_t)&v136, *a2);
      v41 = v137;
      if (v137)
      {
        v42 = (unint64_t *)&v137->__shared_owners_;
        do
          v43 = __ldaxr(v42);
        while (__stlxr(v43 - 1, v42));
        if (!v43)
        {
          ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
          std::__shared_weak_count::__release_weak(v41);
        }
      }
      v44 = v140;
      if (v140 == &v138)
      {
        v45 = 4;
        v44 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_178;
        v45 = 5;
      }
      (*v44)[v45]();
LABEL_178:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v119 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v119);
      while (__stlxr(v114 - 1, v119));
      goto LABEL_253;
    case 5:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 6:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 7:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 8:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 9:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 10:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 11:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 12:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 13:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 14:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 15:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 16:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 17:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 18:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 19:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 20:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 21:
      v133 = &off_250ADCAF8;
      sub_2397303E8(a3, (uint64_t)&v134);
      v76 = a2[1];
      v138 = &off_250AE4C88;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v76);
      sub_23974994C((uint64_t)&v138, (uint64_t)&v136, *a2);
      v77 = v137;
      if (v137)
      {
        v78 = (unint64_t *)&v137->__shared_owners_;
        do
          v79 = __ldaxr(v78);
        while (__stlxr(v79 - 1, v78));
        if (!v79)
        {
          ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
          std::__shared_weak_count::__release_weak(v77);
        }
      }
      v80 = v140;
      if (v140 == &v138)
      {
        v81 = 4;
        v80 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_220;
        v81 = 5;
      }
      (*v80)[v81]();
LABEL_220:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v126 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v126);
      while (__stlxr(v114 - 1, v126));
      goto LABEL_253;
    case 22:
      v133 = &off_250AE4D98;
      sub_23974CDB0(a3, (uint64_t)&v134);
      v88 = a2[1];
      v138 = &off_250AE4D18;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v88);
      sub_23974B534((uint64_t)&v138, (uint64_t)&v136, *a2);
      v89 = v137;
      if (v137)
      {
        v90 = (unint64_t *)&v137->__shared_owners_;
        do
          v91 = __ldaxr(v90);
        while (__stlxr(v91 - 1, v90));
        if (!v91)
        {
          ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
          std::__shared_weak_count::__release_weak(v89);
        }
      }
      v92 = v140;
      if (v140 == &v138)
      {
        v93 = 4;
        v92 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_232;
        v93 = 5;
      }
      (*v92)[v93]();
LABEL_232:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v128 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v128);
      while (__stlxr(v114 - 1, v128));
      goto LABEL_253;
    case 23:
      v133 = &off_250AE4F20;
      sub_23974EDB8(a3, (uint64_t)&v134);
      v94 = a2[1];
      v138 = &off_250AE4EA0;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v94);
      sub_23974D434((uint64_t)&v138, (uint64_t)&v136, *a2);
      v95 = v137;
      if (v137)
      {
        v96 = (unint64_t *)&v137->__shared_owners_;
        do
          v97 = __ldaxr(v96);
        while (__stlxr(v97 - 1, v96));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
          std::__shared_weak_count::__release_weak(v95);
        }
      }
      v98 = v140;
      if (v140 == &v138)
      {
        v99 = 4;
        v98 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_238;
        v99 = 5;
      }
      (*v98)[v99]();
LABEL_238:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v129 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v129);
      while (__stlxr(v114 - 1, v129));
      goto LABEL_253;
    case 24:
      v133 = &off_250AE50A8;
      sub_239750B70(a3, (uint64_t)&v134);
      v52 = a2[1];
      v138 = &off_250AE5028;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v52);
      sub_23974F43C((uint64_t)&v138, (uint64_t)&v136, *a2);
      v53 = v137;
      if (v137)
      {
        v54 = (unint64_t *)&v137->__shared_owners_;
        do
          v55 = __ldaxr(v54);
        while (__stlxr(v55 - 1, v54));
        if (!v55)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      v56 = v140;
      if (v140 == &v138)
      {
        v57 = 4;
        v56 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_190;
        v57 = 5;
      }
      (*v56)[v57]();
LABEL_190:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v121 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v121);
      while (__stlxr(v114 - 1, v121));
      goto LABEL_253;
    case 25:
      v133 = &off_250AE1878;
      sub_239751F44(a3, (uint64_t)&v134);
      v22 = a2[1];
      v138 = &off_250AE51B0;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v22);
      sub_23975118C((uint64_t)&v138, (uint64_t)&v136, *a2);
      v23 = v137;
      if (v137)
      {
        v24 = (unint64_t *)&v137->__shared_owners_;
        do
          v25 = __ldaxr(v24);
        while (__stlxr(v25 - 1, v24));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      v26 = v140;
      if (v140 == &v138)
      {
        v27 = 4;
        v26 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_160;
        v27 = 5;
      }
      (*v26)[v27]();
LABEL_160:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v116 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v116);
      while (__stlxr(v114 - 1, v116));
      goto LABEL_253;
    case 26:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 27:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 28:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 29:
      v133 = &off_250AE1760;
      sub_2397539F0(a3, (uint64_t)&v134);
      v100 = a2[1];
      v138 = &off_250AE5240;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v100);
      sub_23975255C((uint64_t)&v138, (uint64_t)&v136, *a2);
      v101 = v137;
      if (v137)
      {
        v102 = (unint64_t *)&v137->__shared_owners_;
        do
          v103 = __ldaxr(v102);
        while (__stlxr(v103 - 1, v102));
        if (!v103)
        {
          ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
          std::__shared_weak_count::__release_weak(v101);
        }
      }
      v104 = v140;
      if (v140 == &v138)
      {
        v105 = 4;
        v104 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_244;
        v105 = 5;
      }
      (*v104)[v105]();
LABEL_244:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v130 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v130);
      while (__stlxr(v114 - 1, v130));
      goto LABEL_253;
    case 30:
      v133 = &off_250AE5350;
      sub_23975567C(a3, (uint64_t)&v134);
      v70 = a2[1];
      v138 = &off_250AE52D0;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v70);
      sub_239754070((uint64_t)&v138, (uint64_t)&v136, *a2);
      v71 = v137;
      if (v137)
      {
        v72 = (unint64_t *)&v137->__shared_owners_;
        do
          v73 = __ldaxr(v72);
        while (__stlxr(v73 - 1, v72));
        if (!v73)
        {
          ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
          std::__shared_weak_count::__release_weak(v71);
        }
      }
      v74 = v140;
      if (v140 == &v138)
      {
        v75 = 4;
        v74 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_214;
        v75 = 5;
      }
      (*v74)[v75]();
LABEL_214:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v125 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v125);
      while (__stlxr(v114 - 1, v125));
      goto LABEL_253;
    case 31:
      v133 = &off_250AE54D8;
      sub_2397570F8(a3, (uint64_t)&v134);
      v28 = a2[1];
      v138 = &off_250AE5458;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v28);
      sub_239755D00((uint64_t)&v138, (uint64_t)&v136, *a2);
      v29 = v137;
      if (v137)
      {
        v30 = (unint64_t *)&v137->__shared_owners_;
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      v32 = v140;
      if (v140 == &v138)
      {
        v33 = 4;
        v32 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_166;
        v33 = 5;
      }
      (*v32)[v33]();
LABEL_166:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v117 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v117);
      while (__stlxr(v114 - 1, v117));
      goto LABEL_253;
    case 32:
      v133 = &off_250AE1D50;
      sub_239758938(a3, (uint64_t)&v134);
      v58 = a2[1];
      v138 = &off_250AE55E0;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v58);
      sub_239757714((uint64_t)&v138, (uint64_t)&v136, *a2);
      v59 = v137;
      if (v137)
      {
        v60 = (unint64_t *)&v137->__shared_owners_;
        do
          v61 = __ldaxr(v60);
        while (__stlxr(v61 - 1, v60));
        if (!v61)
        {
          ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
          std::__shared_weak_count::__release_weak(v59);
        }
      }
      v62 = v140;
      if (v140 == &v138)
      {
        v63 = 4;
        v62 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_196;
        v63 = 5;
      }
      (*v62)[v63]();
LABEL_196:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v122 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v122);
      while (__stlxr(v114 - 1, v122));
      goto LABEL_253;
    case 33:
      v133 = &off_250AE56F0;
      sub_23975A10C(a3, (uint64_t)&v134);
      v34 = a2[1];
      v138 = &off_250AE5670;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v34);
      sub_239758FBC((uint64_t)&v138, (uint64_t)&v136, *a2);
      v35 = v137;
      if (v137)
      {
        v36 = (unint64_t *)&v137->__shared_owners_;
        do
          v37 = __ldaxr(v36);
        while (__stlxr(v37 - 1, v36));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      v38 = v140;
      if (v140 == &v138)
      {
        v39 = 4;
        v38 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_172;
        v39 = 5;
      }
      (*v38)[v39]();
LABEL_172:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v118 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v118);
      while (__stlxr(v114 - 1, v118));
      goto LABEL_253;
    case 34:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 35:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 36:
      sub_239EC23F4(a1, (uint64_t)a2);
    case 37:
      v133 = &off_250AE5878;
      sub_23975B8DC(a3, (uint64_t)&v134);
      v16 = a2[1];
      v138 = &off_250AE57F8;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v16);
      sub_23975A78C((uint64_t)&v138, (uint64_t)&v136, *a2);
      v17 = v137;
      if (v137)
      {
        v18 = (unint64_t *)&v137->__shared_owners_;
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      v20 = v140;
      if (v140 == &v138)
      {
        v21 = 4;
        v20 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_154;
        v21 = 5;
      }
      (*v20)[v21]();
LABEL_154:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v115 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v115);
      while (__stlxr(v114 - 1, v115));
      goto LABEL_253;
    case 38:
      v133 = &off_250AE5A00;
      sub_23975D568(a3, (uint64_t)&v134);
      v10 = a2[1];
      v138 = &off_250AE5980;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v10);
      sub_23975BF5C((uint64_t)&v138, (uint64_t)&v136, *a2);
      v11 = v137;
      if (v137)
      {
        v12 = (unint64_t *)&v137->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      v14 = v140;
      if (v140 == &v138)
      {
        v15 = 4;
        v14 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_148;
        v15 = 5;
      }
      (*v14)[v15]();
LABEL_148:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v113 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v113);
      while (__stlxr(v114 - 1, v113));
      goto LABEL_253;
    case 39:
      v133 = &off_250AE5B88;
      sub_23975F260(a3, (uint64_t)&v134);
      v82 = a2[1];
      v138 = &off_250AE5B08;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v82);
      sub_23975DBEC((uint64_t)&v138, (uint64_t)&v136, *a2);
      v83 = v137;
      if (v137)
      {
        v84 = (unint64_t *)&v137->__shared_owners_;
        do
          v85 = __ldaxr(v84);
        while (__stlxr(v85 - 1, v84));
        if (!v85)
        {
          ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
          std::__shared_weak_count::__release_weak(v83);
        }
      }
      v86 = v140;
      if (v140 == &v138)
      {
        v87 = 4;
        v86 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_226;
        v87 = 5;
      }
      (*v86)[v87]();
LABEL_226:
      v112 = v135;
      if (!v135)
        goto LABEL_255;
      v127 = (unint64_t *)&v135->__shared_owners_;
      do
        v114 = __ldaxr(v127);
      while (__stlxr(v114 - 1, v127));
      goto LABEL_253;
    case 40:
      v133 = &off_250AE5D10;
      sub_239760EA0(a3, (uint64_t)&v134);
      v106 = a2[1];
      v138 = &off_250AE5C90;
      v139 = &v133;
      v140 = &v138;
      sub_23972292C(&v136, v106);
      sub_23975F8E4((uint64_t)&v138, (uint64_t)&v136, *a2);
      v107 = v137;
      if (v137)
      {
        v108 = (unint64_t *)&v137->__shared_owners_;
        do
          v109 = __ldaxr(v108);
        while (__stlxr(v109 - 1, v108));
        if (!v109)
        {
          ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
          std::__shared_weak_count::__release_weak(v107);
        }
      }
      v110 = v140;
      if (v140 == &v138)
      {
        v111 = 4;
        v110 = &v138;
      }
      else
      {
        if (!v140)
          goto LABEL_250;
        v111 = 5;
      }
      (*v110)[v111]();
LABEL_250:
      v112 = v135;
      if (v135)
      {
        v131 = (unint64_t *)&v135->__shared_owners_;
        do
          v114 = __ldaxr(v131);
        while (__stlxr(v114 - 1, v131));
LABEL_253:
        if (!v114)
        {
          ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
          std::__shared_weak_count::__release_weak(v112);
        }
      }
LABEL_255:
      *(_QWORD *)&result = nullsub_4(&v133).n128_u64[0];
      return result;
    default:
      return result;
  }
}

void sub_239742AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, std::__shared_weak_count *a12)
{
  uint64_t v12;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;

  v14 = *(std::__shared_weak_count **)(v12 - 64);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(_QWORD **)(v12 - 32);
  if (v17 == (_QWORD *)(v12 - 56))
  {
    v18 = 4;
    v17 = (_QWORD *)(v12 - 56);
  }
  else
  {
    if (!v17)
      goto LABEL_11;
    v18 = 5;
  }
  (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_11:
  v19 = a12;
  if (a12)
  {
    v20 = (unint64_t *)&a12->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  nullsub_4(&a10);
  _Unwind_Resume(a1);
}

void sub_239743578(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23974358C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397435A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397435B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397435C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397435DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397435F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239743604(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239743618(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23974362C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239743640(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239743654(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239743668(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23974367C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239743690(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397436A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397436B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397436CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2397436E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  size_t BytesPerRow;
  uint64_t v22;
  __n128 v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  size_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  __n128 v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t (**v42)();
  uint64_t v43;
  std::__shared_weak_count *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  std::__shared_weak_count *v47;
  unsigned int v48;
  unint64_t v49;
  CFDataRef v50;
  std::__shared_weak_count *v51;
  size_t v52;
  const UInt8 *v53;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v45);
  sub_239769054((uint64_t)&v45, (int)&v50);
  v11 = v46;
  if (v46)
  {
    v12 = (unint64_t *)&v46->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v50);
  v15 = sub_23962A55C(&v50);
  if (!v14 && v15)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v49 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v48 = BytesPerRow;
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v45, v22, &v49);
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v42 = &off_250ADB350;
    if (HIDWORD(v49))
      v28 = (_DWORD)v49 == 0;
    else
      v28 = 1;
    v29 = BytesPerRow << 32;
    if (v28)
      v29 = 0;
    v52 = v29 | ((_DWORD)v49 != 0);
    v53 = v14;
    sub_239646100(&v53, &v49, (uint64_t *)&v52, (uint64_t)&v43);
    sub_239743BF0((uint64_t)&v42, (uint64_t)&v45);
    v30 = v44;
    if (v44)
    {
      v31 = (unint64_t *)&v44->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    v23 = nullsub_4(&v42);
  }
  else
  {
    v33 = v25 | *(_DWORD *)(a3 + 16);
    if (!v33 && !*(_DWORD *)(a3 + 20) && v24 == 1)
    {
      sub_239743B68(&v42, (uint64_t)v14, &v49, &v48);
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v28 = v24 == 0;
    v34 = v33 != 0;
    if (!v28)
      v34 = 1;
    if (!v34)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  v35 = v47;
  if (v47)
  {
    v36 = (unint64_t *)&v47->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v35->__on_zero_shared)(v35, v23);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
  v38 = nullsub_4(&v45);
  v39 = v51;
  if (v51)
  {
    v40 = (unint64_t *)&v51->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v39->__on_zero_shared)(v39, v38);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
}

void sub_239743ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v16;

  sub_2394176A0((uint64_t)&a9);
  sub_23941965C((uint64_t)&a16);
  sub_239416DA0(v16 - 80);
  _Unwind_Resume(a1);
}

void sub_239743B04(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 80);
  _Unwind_Resume(a1);
}

void sub_239743B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239743B2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 80);
  _Unwind_Resume(a1);
}

void sub_239743B40(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 80);
  _Unwind_Resume(a1);
}

void sub_239743B54(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 80);
  _Unwind_Resume(a1);
}

_QWORD *sub_239743B68(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  unint64_t v8;
  uint64_t v9;

  *a1 = &off_250ADB350;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (*a3 != 0);
  v9 = a2;
  sub_239646100(&v9, a3, (uint64_t *)&v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_239743BDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239743BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 49))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 49))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_239743E58(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239743DF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_239743E58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 44);
  if (v5 == *(_DWORD *)(a2 + 44) && v5 == v4)
  {
    v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v4;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = *(unsigned int *)(a1 + 32);
    return (void *)sub_239743FF8(a1, a2, &v21);
  }
  return result;
}

uint64_t sub_239743FF8(uint64_t a1, uint64_t a2, size_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_23949F87C(a3, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239744224(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23974428C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2397442A0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE4858;
  result[1] = v3;
  return result;
}

uint64_t sub_2397442D4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE4858;
  a2[1] = v2;
  return result;
}

void sub_2397442F0(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int16 v14;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 32) != *a2 || *(_DWORD *)(v3 + 36) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250ADB3D0;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 48);
    v9 = v3 + 24;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v9;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v9 + 16);
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 48) = v8;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v14 = *(_WORD *)(v3 + 48);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v3 + 40);
    *(_WORD *)(a3 + 48) = v14;
  }
}

uint64_t sub_239744420(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_23974448C()
{
  return &unk_250AE48C8;
}

void sub_239744498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  BOOL v46;
  std::__shared_weak_count *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int16 *v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  _WORD *v68;
  std::__shared_weak_count *v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  int v75;
  int v76;
  _WORD *v77;
  unsigned __int16 *v78;
  int v79;
  uint64_t v80;
  const UInt8 *v81;
  unint64_t *v82;
  unint64_t *v83;
  unint64_t v84;
  __n128 v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  uint64_t (**v89)();
  uint64_t v90;
  std::__shared_weak_count *v91;
  unsigned __int16 *v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  char v97;
  char v98;
  uint64_t v99;
  std::__shared_weak_count *v100;
  std::__shared_weak_count *v101;
  _WORD *v102;
  unsigned int v103;
  unsigned int v104;
  char v105;
  char v106;
  unint64_t v107;
  CFDataRef v108;
  std::__shared_weak_count *v109;
  uint64_t v110;
  const UInt8 *v111;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v99);
  sub_239769054((uint64_t)&v99, (int)&v108);
  v11 = v100;
  if (v100)
  {
    v12 = (unint64_t *)&v100->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v108);
  v15 = sub_23962A55C(&v108);
  if (!v14 && v15 >= 2)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v107 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v99, v22, &v107);
  v23 = BytesPerRow >> 1;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v89 = &off_250AE3D30;
    if (HIDWORD(v107))
      v28 = (_DWORD)v107 == 0;
    else
      v28 = 1;
    v29 = v23 << 32;
    if (v28)
      v29 = 0;
    v110 = v29 | ((_DWORD)v107 != 0);
    v111 = v14;
    sub_239744FB8(&v111, &v107, &v110, (uint64_t)&v90);
    sub_239744D50((uint64_t)&v89, (uint64_t)&v99);
    v30 = v91;
    if (v91)
    {
      v31 = (unint64_t *)&v91->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      goto LABEL_121;
    }
    goto LABEL_123;
  }
  v33 = v25 | *(_DWORD *)(a3 + 16);
  if (v33 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v46 = v33 != 0;
    if (v24)
      v46 = 1;
    if (!v46)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v47 = v101;
    if (!v101)
      goto LABEL_128;
    goto LABEL_124;
  }
  v89 = &off_250AE3D30;
  if (HIDWORD(v107))
    v34 = (_DWORD)v107 == 0;
  else
    v34 = 1;
  v35 = v23 << 32;
  if (v34)
    v35 = 0;
  v110 = v35 | ((_DWORD)v107 != 0);
  v111 = v14;
  sub_239744FB8(&v111, &v107, &v110, (uint64_t)&v90);
  v36 = v90;
  if (!v90)
    goto LABEL_67;
  v37 = v91;
  if (v91)
  {
    v38 = (unint64_t *)&v91->__shared_owners_;
    do
      v39 = __ldxr(v38);
    while (__stxr(v39 + 1, v38));
    do
      v40 = __ldaxr(v38);
    while (__stlxr(v40 - 1, v38));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
    v36 = v90;
    v41 = v91;
    if (v91)
    {
      v42 = (unint64_t *)&v91->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
  }
  if (v98)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v36 + 96))(&v111, v36, 0);
    v45 = v100;
    if (!v100)
      goto LABEL_83;
  }
  else
  {
LABEL_67:
    v111 = 0;
    v45 = v100;
    if (!v100)
      goto LABEL_83;
  }
  v48 = v101;
  if (v101)
  {
    v49 = (unint64_t *)&v101->__shared_owners_;
    do
      v50 = __ldxr(v49);
    while (__stxr(v50 + 1, v49));
    do
      v51 = __ldaxr(v49);
    while (__stlxr(v51 - 1, v49));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
    v45 = v100;
    v52 = v101;
    if (v101)
    {
      v53 = (unint64_t *)&v101->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      do
        v55 = __ldaxr(v53);
      while (__stlxr(v55 - 1, v53));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }
  }
  if (!v106)
  {
LABEL_83:
    v110 = 0;
    v56 = v93;
    if (!v93)
      goto LABEL_114;
LABEL_84:
    v57 = v94;
    if (!v94)
      goto LABEL_114;
    v58 = v95;
    v59 = v96;
    v60 = v103;
    v61 = v104;
    v62 = v92;
    if (v97 && v92)
    {
      v63 = v90;
      v64 = v91;
      if (v91)
      {
        v65 = (unint64_t *)&v91->__shared_owners_;
        do
          v66 = __ldxr(v65);
        while (__stxr(v66 + 1, v65));
        do
          v67 = __ldaxr(v65);
        while (__stlxr(v67 - 1, v65));
        if (!v67)
        {
          ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
          std::__shared_weak_count::__release_weak(v64);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v63 + 88))(v63, 0, "unknown location");
      v62 = v92;
    }
    v68 = v102;
    if (v105 && v102)
    {
      v69 = v100;
      v70 = v101;
      if (v101)
      {
        v71 = (unint64_t *)&v101->__shared_owners_;
        do
          v72 = __ldxr(v71);
        while (__stxr(v72 + 1, v71));
        do
          v73 = __ldaxr(v71);
        while (__stlxr(v73 - 1, v71));
        if (!v73)
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
      }
      ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v69->__vftable[2].~__shared_weak_count_0)(v69, 1, "unknown location");
      v68 = v102;
    }
    v74 = v56 - 1;
    v75 = v57 - 1;
    if (v57 != 1)
    {
      if (v56 == 1)
      {
        do
        {
          *v68 = bswap32(*v62) >> 16;
          v62 += v59;
          v68 += v61;
          --v75;
        }
        while (v75);
LABEL_113:
        *v68 = bswap32(*v62) >> 16;
        goto LABEL_114;
      }
      v76 = 0;
      do
      {
        v77 = v68;
        v78 = v62;
        v79 = v56 - 1;
        do
        {
          *v77 = bswap32(*v78) >> 16;
          v78 += v58;
          v77 += v60;
          --v79;
        }
        while (v79);
        *v77 = bswap32(*v78) >> 16;
        v62 += v59;
        v68 += v61;
        ++v76;
      }
      while (v76 != v75);
    }
    if (v56 != 1)
    {
      do
      {
        *v68 = bswap32(*v62) >> 16;
        v62 += v58;
        v68 += v60;
        --v74;
      }
      while (v74);
    }
    goto LABEL_113;
  }
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v45->__vftable[2].__on_zero_shared)(&v110, v45, 1);
  v56 = v93;
  if (v93)
    goto LABEL_84;
LABEL_114:
  v80 = v110;
  v110 = 0;
  if (v80)
    (*(void (**)(uint64_t))(*(_QWORD *)v80 + 8))(v80);
  v81 = v111;
  v111 = 0;
  if (v81)
    (*(void (**)(const UInt8 *))(*(_QWORD *)v81 + 8))(v81);
  v30 = v91;
  if (v91)
  {
    v82 = (unint64_t *)&v91->__shared_owners_;
    do
      v32 = __ldaxr(v82);
    while (__stlxr(v32 - 1, v82));
LABEL_121:
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
LABEL_123:
  nullsub_4(&v89);
  v47 = v101;
  if (v101)
  {
LABEL_124:
    v83 = (unint64_t *)&v47->__shared_owners_;
    do
      v84 = __ldaxr(v83);
    while (__stlxr(v84 - 1, v83));
    if (!v84)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
LABEL_128:
  v85 = nullsub_4(&v99);
  v86 = v109;
  if (v109)
  {
    v87 = (unint64_t *)&v109->__shared_owners_;
    do
      v88 = __ldaxr(v87);
    while (__stlxr(v88 - 1, v87));
    if (!v88)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v86->__on_zero_shared)(v86, v85);
      std::__shared_weak_count::__release_weak(v86);
    }
  }
}

void sub_239744C40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_239708268((uint64_t)va);
  sub_23972FCB8((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_239744CEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239744D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239744D14(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239744D28(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239744D3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_239744D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 49))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 49))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_2397451D0(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239744F54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239744FB8(_QWORD *a1@<X0>, _DWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;

  v12 = 0;
  v13 = 0;
  if (a2[1])
    v4 = *a2 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a2;
  if (v4)
    v5 = 0;
  v6 = *a3;
  *(_QWORD *)&v10 = *a1;
  *((_QWORD *)&v10 + 1) = v5;
  v11 = v6;
  if (HIDWORD(v5) * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_2397450AC(a4, &v12, &v10);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_239745098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2397450AC(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  _WORD *v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    *(_QWORD *)(result + 32) = *((_QWORD *)a3 + 2);
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v9 = (_WORD *)(result + 40);
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 40) = 0;
    *(_BYTE *)(result + 41) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v12 = *a3;
  *(_QWORD *)(result + 32) = *((_QWORD *)a3 + 2);
  *(_OWORD *)(result + 16) = v12;
  if (!v4)
    goto LABEL_17;
  v9 = (_WORD *)(result + 40);
LABEL_12:
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *v9 = v15 & 0xFF00 | v14;
  return v3;
}

void sub_2397451B8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void *sub_2397451D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 44);
  if (v5 == *(_DWORD *)(a2 + 44) && v5 == v4)
  {
    v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v4;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = *(unsigned int *)(a1 + 32);
    return (void *)sub_239745370(a1, a2, &v21);
  }
  return result;
}

uint64_t sub_239745370(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_239745600(a3, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23974559C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239745600(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  _OWORD v28[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(char **)(a2 + 24);
    }
    v17 = *(char **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(char **)(a3 + 24);
    }
    memset(v28, 0, sizeof(v28));
    return (uint64_t *)sub_239745784(&v23, (uint64_t)v28, v8, v11, v17);
  }
  return result;
}

_DWORD *sub_239745784(_DWORD *result, uint64_t a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  int v9;
  int v10;
  unsigned int v11;
  _DWORD *v12;
  unsigned int i;
  uint64_t v14;
  uint64_t v15;

  v5 = __dst;
  v6 = __src;
  v9 = result[3];
  v10 = result[4];
  *(_QWORD *)a2 = __src;
  *(_DWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = __dst;
  *(_DWORD *)(a2 + 24) = v10;
  v11 = result[5];
  if (v11)
  {
    v12 = result;
    for (i = 0; i < v11; ++i)
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 16) = v5;
      v14 = *a3;
      if (!v6 && v14)
        sub_239EBF50C((uint64_t)result, a2);
      if (!v5 && v14)
        sub_239EBF50C((uint64_t)result, a2);
      if (v14)
      {
        result = memmove(v5, v6, 2 * v14);
        v11 = v12[5];
      }
      v6 += 2 * v12[6];
      v5 += 2 * v12[7];
    }
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 16) = v5;
  v15 = *a3;
  if (!v6 && v15)
    sub_239EBF50C((uint64_t)result, a2);
  if (!v5 && v15)
    sub_239EBF50C((uint64_t)result, a2);
  if (v15)
    return memmove(v5, v6, 2 * v15);
  return result;
}

void sub_239745888()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23974589C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE48E8;
  result[1] = v3;
  return result;
}

uint64_t sub_2397458D0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE48E8;
  a2[1] = v2;
  return result;
}

void sub_2397458EC(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int16 v14;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 32) != *a2 || *(_DWORD *)(v3 + 36) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE4080;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 48);
    v9 = v3 + 24;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v9;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v9 + 16);
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 48) = v8;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v14 = *(_WORD *)(v3 + 48);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v3 + 40);
    *(_WORD *)(a3 + 48) = v14;
  }
}

uint64_t sub_239745A1C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_239745A88()
{
  return &unk_250AE4958;
}

void sub_239745A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  uint64_t v29;
  __n128 v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  BOOL v47;
  std::__shared_weak_count *v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int16 *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  _WORD *v69;
  std::__shared_weak_count *v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  _WORD *v80;
  unsigned __int16 *v81;
  int v82;
  uint64_t v83;
  const UInt8 *v84;
  unint64_t *v85;
  unint64_t *v86;
  unint64_t v87;
  __n128 v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t (**v92)();
  uint64_t v93;
  std::__shared_weak_count *v94;
  unsigned __int16 *v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  char v100;
  char v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  std::__shared_weak_count *v104;
  _WORD *v105;
  unsigned int v106;
  unsigned int v107;
  char v108;
  char v109;
  unint64_t v110;
  CFDataRef v111;
  std::__shared_weak_count *v112;
  uint64_t v113;
  const UInt8 *v114;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v102);
  sub_239769054((uint64_t)&v102, (int)&v111);
  v11 = v103;
  if (v103)
  {
    v12 = (unint64_t *)&v103->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v111);
  v15 = sub_23962A55C(&v111);
  if (!v14 && v15 >= 2)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v110 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v102, v22, &v110);
  v23 = BytesPerRow >> 1;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v92 = &off_250AE1C58;
    if (HIDWORD(v110))
      v28 = (_DWORD)v110 == 0;
    else
      v28 = 1;
    v29 = v23 << 32;
    if (v28)
      v29 = 0;
    v113 = v29 | ((_DWORD)v110 != 0);
    v114 = v14;
    sub_2396464A8(&v114, &v110, &v113, (uint64_t)&v93);
    sub_239746344((uint64_t)&v92, (uint64_t)&v102, v30);
    v31 = v94;
    if (v94)
    {
      v32 = (unint64_t *)&v94->__shared_owners_;
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      goto LABEL_121;
    }
    goto LABEL_123;
  }
  v34 = v25 | *(_DWORD *)(a3 + 16);
  if (v34 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v47 = v34 != 0;
    if (v24)
      v47 = 1;
    if (!v47)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v48 = v104;
    if (!v104)
      goto LABEL_128;
    goto LABEL_124;
  }
  v92 = &off_250AE1C58;
  if (HIDWORD(v110))
    v35 = (_DWORD)v110 == 0;
  else
    v35 = 1;
  v36 = v23 << 32;
  if (v35)
    v36 = 0;
  v113 = v36 | ((_DWORD)v110 != 0);
  v114 = v14;
  sub_2396464A8(&v114, &v110, &v113, (uint64_t)&v93);
  v37 = v93;
  if (!v93)
    goto LABEL_67;
  v38 = v94;
  if (v94)
  {
    v39 = (unint64_t *)&v94->__shared_owners_;
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 1, v39));
    do
      v41 = __ldaxr(v39);
    while (__stlxr(v41 - 1, v39));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
    v37 = v93;
    v42 = v94;
    if (v94)
    {
      v43 = (unint64_t *)&v94->__shared_owners_;
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 1, v43));
      do
        v45 = __ldaxr(v43);
      while (__stlxr(v45 - 1, v43));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
      }
    }
  }
  if (v101)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v37 + 96))(&v114, v37, 0);
    v46 = v103;
    if (!v103)
      goto LABEL_83;
  }
  else
  {
LABEL_67:
    v114 = 0;
    v46 = v103;
    if (!v103)
      goto LABEL_83;
  }
  v49 = v104;
  if (v104)
  {
    v50 = (unint64_t *)&v104->__shared_owners_;
    do
      v51 = __ldxr(v50);
    while (__stxr(v51 + 1, v50));
    do
      v52 = __ldaxr(v50);
    while (__stlxr(v52 - 1, v50));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
    v46 = v103;
    v53 = v104;
    if (v104)
    {
      v54 = (unint64_t *)&v104->__shared_owners_;
      do
        v55 = __ldxr(v54);
      while (__stxr(v55 + 1, v54));
      do
        v56 = __ldaxr(v54);
      while (__stlxr(v56 - 1, v54));
      if (!v56)
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
    }
  }
  if (v109)
  {
    ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v46->__vftable[2].__on_zero_shared)(&v113, v46, 1);
    v57 = v96;
    if (!v96)
      goto LABEL_114;
    goto LABEL_84;
  }
LABEL_83:
  v113 = 0;
  v57 = v96;
  if (!v96)
    goto LABEL_114;
LABEL_84:
  v58 = v97;
  if (v97)
  {
    v60 = v98;
    v59 = v99;
    v62 = v106;
    v61 = v107;
    v63 = v95;
    if (v100 && v95)
    {
      v64 = v93;
      v65 = v94;
      if (v94)
      {
        v66 = (unint64_t *)&v94->__shared_owners_;
        do
          v67 = __ldxr(v66);
        while (__stxr(v67 + 1, v66));
        do
          v68 = __ldaxr(v66);
        while (__stlxr(v68 - 1, v66));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
          std::__shared_weak_count::__release_weak(v65);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v64 + 88))(v64, 0, "unknown location");
      v63 = v95;
    }
    v69 = v105;
    if (v108 && v105)
    {
      v70 = v103;
      v71 = v104;
      if (v104)
      {
        v72 = (unint64_t *)&v104->__shared_owners_;
        do
          v73 = __ldxr(v72);
        while (__stxr(v73 + 1, v72));
        do
          v74 = __ldaxr(v72);
        while (__stlxr(v74 - 1, v72));
        if (!v74)
        {
          ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
          std::__shared_weak_count::__release_weak(v71);
        }
      }
      ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v70->__vftable[2].~__shared_weak_count_0)(v70, 1, "unknown location");
      v69 = v105;
    }
    v75 = v57 - 1;
    v76 = 2 * v60;
    v77 = 2 * v62;
    v78 = v58 - 1;
    if (v58 != 1)
    {
      if (v57 == 1)
      {
        do
        {
          *v69 = bswap32(*v63) >> 16;
          v63 += v59;
          v69 += v61;
          --v78;
        }
        while (v78);
      }
      else
      {
        v79 = 0;
        do
        {
          v80 = v69;
          v81 = v63;
          v82 = v57 - 1;
          do
          {
            *v80 = bswap32(*v81) >> 16;
            v81 = (unsigned __int16 *)((char *)v81 + v76);
            v80 = (_WORD *)((char *)v80 + v77);
            --v82;
          }
          while (v82);
          *v80 = bswap32(*v81) >> 16;
          v63 += v59;
          v69 += v61;
          ++v79;
        }
        while (v79 != v78);
      }
    }
    if (v57 != 1)
    {
      do
      {
        *v69 = bswap32(*v63) >> 16;
        v63 = (unsigned __int16 *)((char *)v63 + v76);
        v69 = (_WORD *)((char *)v69 + v77);
        --v75;
      }
      while (v75);
    }
    *v69 = bswap32(*v63) >> 16;
  }
LABEL_114:
  v83 = v113;
  v113 = 0;
  if (v83)
    (*(void (**)(uint64_t))(*(_QWORD *)v83 + 8))(v83);
  v84 = v114;
  v114 = 0;
  if (v84)
    (*(void (**)(const UInt8 *))(*(_QWORD *)v84 + 8))(v84);
  v31 = v94;
  if (v94)
  {
    v85 = (unint64_t *)&v94->__shared_owners_;
    do
      v33 = __ldaxr(v85);
    while (__stlxr(v33 - 1, v85));
LABEL_121:
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
LABEL_123:
  nullsub_4(&v92);
  v48 = v104;
  if (v104)
  {
LABEL_124:
    v86 = (unint64_t *)&v48->__shared_owners_;
    do
      v87 = __ldaxr(v86);
    while (__stlxr(v87 - 1, v86));
    if (!v87)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
  }
LABEL_128:
  v88 = nullsub_4(&v102);
  v89 = v112;
  if (v112)
  {
    v90 = (unint64_t *)&v112->__shared_owners_;
    do
      v91 = __ldaxr(v90);
    while (__stlxr(v91 - 1, v90));
    if (!v91)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v89->__on_zero_shared)(v89, v88);
      std::__shared_weak_count::__release_weak(v89);
    }
  }
}

void sub_239746234(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_239643D9C((uint64_t)va);
  sub_239643AF4((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_2397462E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_2397462F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239746308(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974631C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239746330(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_239746344(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_39;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v27, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (!v14)
    goto LABEL_32;
LABEL_18:
  v15 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v15)
    goto LABEL_40;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldxr(v16);
  while (__stxr(v17 + 1, v16));
  do
    v18 = __ldaxr(v16);
  while (__stlxr(v18 - 1, v16));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  v14 = *(_QWORD *)(a2 + 8);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_40;
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (*(_BYTE *)(a2 + 49))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 49))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v26, v14, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v26 = 0;
LABEL_33:
  v23.n128_u64[0] = sub_2397465AC(a1, a2, a3);
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v24 + 8))(v24, v23.n128_f32[0]);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v23);
  return result;
}

void sub_239746548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_2397465AC@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 32);
  v6 = *(_DWORD *)(a1 + 44);
  if (v6 != *(_DWORD *)(a2 + 44) || v6 != v5)
  {
    v33 = *(unsigned int *)(a1 + 32);
    sub_2397467BC(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v5;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

uint64_t sub_2397467BC(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_42;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    a4.n128_f64[0] = sub_239746A4C(a3, a1, a2);
LABEL_36:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2397469E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239746A4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  _OWORD v29[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v25 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v24 = 0;
    v27 = v3 - 1;
    v28 = v9 | (v10 << 32);
    v11 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(_QWORD *)(a2 + 24);
    }
    v17 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(_QWORD *)(a3 + 24);
    }
    memset(v29, 0, sizeof(v29));
    *(_QWORD *)&result = sub_239746BD0(&v24, (uint64_t)v29, a1, v11, v17);
  }
  return result;
}

__int16 sub_239746BD0@<H0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>)
{
  int v5;
  int v6;
  unsigned int v7;
  unsigned int i;
  uint64_t v9;
  unint64_t v10;
  _WORD *v11;
  __int16 *v12;
  unint64_t v13;
  unint64_t v14;
  __int128 *v15;
  _OWORD *v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int16 *v20;
  __int16 v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _WORD *v26;
  __int16 *v27;
  __int128 *v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  __int16 *v32;
  __int16 v33;

  v5 = a1[3];
  v6 = a1[4];
  *(_QWORD *)a2 = a4;
  *(_DWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = a5;
  *(_DWORD *)(a2 + 24) = v6;
  v7 = a1[5];
  if (v7)
  {
    for (i = 0; i < v7; ++i)
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v9 = *a3;
      if (!a4 && v9)
        sub_239EBF50C((uint64_t)a1, a2);
      if (!a5 && v9)
        sub_239EBF50C((uint64_t)a1, a2);
      if (v9)
      {
        v10 = (v9 - 1) & 0x7FFFFFFFFFFFFFFFLL;
        v11 = (_WORD *)a5;
        v12 = (__int16 *)a4;
        if (v10 < 0xF)
          goto LABEL_15;
        v11 = (_WORD *)a5;
        v12 = (__int16 *)a4;
        if ((unint64_t)(a5 - a4) < 0x20)
          goto LABEL_15;
        v13 = v10 + 1;
        v14 = 2 * (v13 & 0xFFFFFFFFFFFFFFF0);
        v11 = (_WORD *)(a5 + v14);
        v12 = (__int16 *)(a4 + v14);
        v15 = (__int128 *)(a4 + 16);
        v16 = (_OWORD *)(a5 + 16);
        v17 = v13 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v18 = *(v15 - 1);
          v19 = *v15;
          *(v16 - 1) = v18;
          *v16 = v19;
          v15 += 2;
          v16 += 2;
          v17 -= 16;
        }
        while (v17);
        if (v13 != (v13 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_15:
          v20 = (__int16 *)(a4 + 2 * v9);
          do
          {
            v21 = *v12++;
            LOWORD(v18) = v21;
            *v11++ = v21;
          }
          while (v12 != v20);
        }
        v7 = a1[5];
      }
      a4 += 2 * a1[6];
      a5 += 2 * a1[7];
    }
  }
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  v22 = *a3;
  if (!a4 && v22)
    sub_239EBF50C((uint64_t)a1, a2);
  if (!a5 && v22)
    sub_239EBF50C((uint64_t)a1, a2);
  if (v22)
  {
    v23 = (v22 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v23 < 0xF || (unint64_t)(a5 - a4) < 0x20)
    {
      v26 = (_WORD *)a5;
      v27 = (__int16 *)a4;
    }
    else
    {
      v24 = v23 + 1;
      v25 = (v23 + 1) & 0xFFFFFFFFFFFFFFF0;
      v26 = (_WORD *)(a5 + 2 * v25);
      v27 = (__int16 *)(a4 + 2 * v25);
      v28 = (__int128 *)(a4 + 16);
      v29 = (_OWORD *)(a5 + 16);
      v30 = v25;
      do
      {
        v18 = *(v28 - 1);
        v31 = *v28;
        *(v29 - 1) = v18;
        *v29 = v31;
        v28 += 2;
        v29 += 2;
        v30 -= 16;
      }
      while (v30);
      if (v24 == v25)
        return v18;
    }
    v32 = (__int16 *)(a4 + 2 * v22);
    do
    {
      v33 = *v27++;
      LOWORD(v18) = v33;
      *v26++ = v33;
    }
    while (v27 != v32);
  }
  return v18;
}

void sub_239746D74()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239746D88(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE4978;
  result[1] = v3;
  return result;
}

uint64_t sub_239746DBC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE4978;
  a2[1] = v2;
  return result;
}

void sub_239746DD8(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int16 v14;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 32) != *a2 || *(_DWORD *)(v3 + 36) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE1970;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 48);
    v9 = v3 + 24;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v9;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v9 + 16);
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 48) = v8;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v14 = *(_WORD *)(v3 + 48);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v3 + 40);
    *(_WORD *)(a3 + 48) = v14;
  }
}

uint64_t sub_239746F08(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_239746F74()
{
  return &unk_250AE49E8;
}

void sub_239746F80(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _BOOL8 v11;
  _BOOL4 v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int16 v18;
  std::__shared_weak_count *size;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::logic_error *exception;
  std::string v24;

  if (*(_DWORD *)(a1 + 48) != 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2397471E0(a1, &v24);
    std::logic_error::logic_error(exception, &v24);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v24.__r_.__value_.__r.__words[0] = v4;
      v24.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_DWORD *)(a1 + 24);
  v11 = v10 != 0;
  v12 = v10 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v12 = 1;
  v13 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v14 = !v12;
  if (v12)
    v13 = 0;
  v15 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v15 = 0;
  if (HIDWORD(v15) * HIDWORD(v13) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v16 = *(_QWORD *)(a1 + 40);
  v17 = v13 | v11;
  v18 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v24.__r_.__value_.__l.__size_;
  if (v24.__r_.__value_.__l.__size_)
  {
    v20 = (unint64_t *)(v24.__r_.__value_.__l.__size_ + 8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    *(_QWORD *)a2 = v24.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_WORD *)(a2 + 40) = v18;
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v24.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_WORD *)(a2 + 40) = v18;
  }
}

void sub_239747194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_2397471E0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239747258();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239747258()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931708);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931708))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23964D5C0();
    sub_23974745C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23974745C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569316F0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569316F0, &dword_23940C000);
          __cxa_guard_release(&qword_256931708);
          return &stru_2569316F0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569316F0;
}

void sub_2397473A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931708);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931708);
  _Unwind_Resume(a1);
}

void sub_23974745C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2397474F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_23974752C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  _BOOL4 v28;
  _BOOL4 v29;
  BOOL v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  BOOL v48;
  BOOL v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int *v74;
  std::__shared_weak_count *v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  _DWORD *v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  int v86;
  int v87;
  int v88;
  _DWORD *v89;
  unsigned int *v90;
  int v91;
  std::__shared_weak_count *v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  unint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  int v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int *v125;
  std::__shared_weak_count *v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  unsigned int *v131;
  uint64_t v132;
  std::__shared_weak_count *v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int *v140;
  unsigned int *v141;
  int v142;
  int v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unsigned int *v149;
  std::__shared_weak_count *v150;
  std::__shared_weak_count *v151;
  unint64_t *v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  std::__shared_weak_count *v156;
  unint64_t *v157;
  unint64_t v158;
  unint64_t v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int *v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t *v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t *v172;
  std::__shared_weak_count *v173;
  unint64_t *v174;
  unint64_t v175;
  __n128 v176;
  std::__shared_weak_count *v177;
  unint64_t *v178;
  unint64_t v179;
  uint64_t (**v180)();
  std::__shared_weak_count *v181;
  std::__shared_weak_count *v182;
  unsigned int *v183;
  int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  char v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  std::__shared_weak_count *v194;
  _DWORD *v195;
  unsigned int v196;
  unsigned int v197;
  char v198;
  char v199;
  unint64_t v200;
  CFDataRef v201;
  std::__shared_weak_count *v202;
  uint64_t v203;
  const UInt8 *v204;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v180);
  sub_239769054((uint64_t)&v180, (int)&v201);
  v11 = v181;
  if (v181)
  {
    v12 = (unint64_t *)&v181->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v201);
  v15 = sub_23962A55C(&v201);
  if (!v14 && v15 >= 4)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v200 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v192, v22, &v200);
  v24 = BytesPerRow >> 2;
  v25 = *(_DWORD *)(a3 + 8);
  v26 = *(_DWORD *)(a3 + 12);
  v27 = *(_DWORD *)(a3 + 20);
  v28 = v25 == 0;
  v29 = v26 == 0;
  if (!v26)
    v29 = *(_QWORD *)(a3 + 16) == 0;
  if (!v25)
    v28 = v29;
  if (!v28)
  {
    v35 = v26 | *(_DWORD *)(a3 + 16);
    if (!v35 && !v27 && v25 == 1)
    {
      v180 = &off_250ADED08;
      if (HIDWORD(v200))
        v36 = (_DWORD)v200 == 0;
      else
        v36 = 1;
      v37 = v24 << 32;
      if (v36)
        v37 = 0;
      v203 = v37 | ((_DWORD)v200 != 0);
      v204 = v14;
      sub_239581874(&v204, &v200, &v203, (uint64_t)&v181);
      v38 = v181;
      if (!v181)
        goto LABEL_87;
      v39 = v182;
      if (v182)
      {
        v40 = (unint64_t *)&v182->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
        v38 = v181;
        v43 = v182;
        if (v182)
        {
          v44 = (unint64_t *)&v182->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
      }
      if (BYTE1(v188))
      {
        ((void (*)(const UInt8 **__return_ptr, std::__shared_weak_count *, _QWORD))v38->__vftable[2].__on_zero_shared)(&v204, v38, 0);
        v47 = v193;
        if (!v193)
          goto LABEL_103;
      }
      else
      {
LABEL_87:
        v204 = 0;
        v47 = v193;
        if (!v193)
          goto LABEL_103;
      }
      v60 = v194;
      if (v194)
      {
        v61 = (unint64_t *)&v194->__shared_owners_;
        do
          v62 = __ldxr(v61);
        while (__stxr(v62 + 1, v61));
        do
          v63 = __ldaxr(v61);
        while (__stlxr(v63 - 1, v61));
        if (!v63)
        {
          ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
          std::__shared_weak_count::__release_weak(v60);
        }
        v47 = v193;
        v64 = v194;
        if (v194)
        {
          v65 = (unint64_t *)&v194->__shared_owners_;
          do
            v66 = __ldxr(v65);
          while (__stxr(v66 + 1, v65));
          do
            v67 = __ldaxr(v65);
          while (__stlxr(v67 - 1, v65));
          if (!v67)
          {
            ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
            std::__shared_weak_count::__release_weak(v64);
          }
        }
      }
      if (v199)
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v47 + 96))(&v203, v47, 1);
        v68 = v184;
        if (!v184)
          goto LABEL_243;
LABEL_104:
        v69 = v185;
        if (v185)
        {
          v70 = v186;
          v71 = v187;
          v72 = v196;
          v73 = v197;
          v74 = v183;
          if ((_BYTE)v188 && v183)
          {
            v75 = v181;
            v76 = v182;
            if (v182)
            {
              v77 = (unint64_t *)&v182->__shared_owners_;
              do
                v78 = __ldxr(v77);
              while (__stxr(v78 + 1, v77));
              do
                v79 = __ldaxr(v77);
              while (__stlxr(v79 - 1, v77));
              if (!v79)
              {
                ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
                std::__shared_weak_count::__release_weak(v76);
              }
            }
            ((void (*)(std::__shared_weak_count *, _QWORD, const char *))v75->__vftable[2].~__shared_weak_count_0)(v75, 0, "unknown location");
            v74 = v183;
          }
          v80 = v195;
          if (v198 && v195)
          {
            v81 = v193;
            v82 = v194;
            if (v194)
            {
              v83 = (unint64_t *)&v194->__shared_owners_;
              do
                v84 = __ldxr(v83);
              while (__stxr(v84 + 1, v83));
              do
                v85 = __ldaxr(v83);
              while (__stlxr(v85 - 1, v83));
              if (!v85)
              {
                ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
                std::__shared_weak_count::__release_weak(v82);
              }
            }
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v81 + 88))(v81, 1, "unknown location");
            v80 = v195;
          }
          v86 = v68 - 1;
          v87 = v69 - 1;
          if (v69 != 1)
          {
            if (v68 == 1)
            {
              do
              {
                *v80 = bswap32(*v74);
                v74 += v71;
                v80 += v73;
                --v87;
              }
              while (v87);
LABEL_242:
              *v80 = bswap32(*v74);
              goto LABEL_243;
            }
            v88 = 0;
            do
            {
              v89 = v80;
              v90 = v74;
              v91 = v68 - 1;
              do
              {
                *v89 = bswap32(*v90);
                v90 += v70;
                v89 += v72;
                --v91;
              }
              while (v91);
              *v89 = bswap32(*v90);
              v74 += v71;
              v80 += v73;
              ++v88;
            }
            while (v88 != v87);
          }
          if (v68 != 1)
          {
            do
            {
              *v80 = bswap32(*v74);
              v74 += v70;
              v80 += v72;
              --v86;
            }
            while (v86);
          }
          goto LABEL_242;
        }
LABEL_243:
        v166 = v203;
        v203 = 0;
        if (v166)
          (*(void (**)(uint64_t))(*(_QWORD *)v166 + 8))(v166);
        v167 = (uint64_t)v204;
        v204 = 0;
        if (v167)
          (*(void (**)(uint64_t))(*(_QWORD *)v167 + 8))(v167);
        v32 = v182;
        if (!v182)
          goto LABEL_265;
        v168 = (unint64_t *)&v182->__shared_owners_;
        do
          v34 = __ldaxr(v168);
        while (__stlxr(v34 - 1, v168));
        goto LABEL_263;
      }
LABEL_103:
      v203 = 0;
      v68 = v184;
      if (!v184)
        goto LABEL_243;
      goto LABEL_104;
    }
    v30 = v25 == 0;
    v48 = v35 != 0;
    if (!v30)
      v48 = 1;
    if (v48)
      goto LABEL_266;
    if ((v27 & 0xFFFFFFFE) != 2)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v180 = &off_250AE4A08;
    if (HIDWORD(v200))
      v49 = (_DWORD)v200 == 0;
    else
      v49 = 1;
    v50 = v24 << 32;
    if (v49)
      v50 = 0;
    v203 = v50 | (2 * ((_DWORD)v200 != 0));
    v204 = v14;
    sub_239748DF8((uint64_t *)&v204, &v200, &v203, (uint64_t)&v181);
    if (*(_DWORD *)(a3 + 20) == 2)
    {
      v51 = v181;
      if (!v181)
        goto LABEL_147;
      v52 = v182;
      if (v182)
      {
        v53 = (unint64_t *)&v182->__shared_owners_;
        do
          v54 = __ldxr(v53);
        while (__stxr(v54 + 1, v53));
        do
          v55 = __ldaxr(v53);
        while (__stlxr(v55 - 1, v53));
        if (!v55)
        {
          ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
          std::__shared_weak_count::__release_weak(v52);
        }
        v51 = v181;
        v56 = v182;
        if (v182)
        {
          v57 = (unint64_t *)&v182->__shared_owners_;
          do
            v58 = __ldxr(v57);
          while (__stxr(v58 + 1, v57));
          do
            v59 = __ldaxr(v57);
          while (__stlxr(v59 - 1, v57));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
            std::__shared_weak_count::__release_weak(v56);
          }
        }
      }
      if (v191)
        ((void (*)(const UInt8 **__return_ptr, std::__shared_weak_count *, _QWORD))v51->__vftable[2].__on_zero_shared)(&v204, v51, 0);
      else
LABEL_147:
        v204 = 0;
      v101 = v193;
      if (!v193)
        goto LABEL_179;
      v102 = v194;
      if (v194)
      {
        v103 = (unint64_t *)&v194->__shared_owners_;
        do
          v104 = __ldxr(v103);
        while (__stxr(v104 + 1, v103));
        do
          v105 = __ldaxr(v103);
        while (__stlxr(v105 - 1, v103));
        if (!v105)
        {
          ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
          std::__shared_weak_count::__release_weak(v102);
        }
        v101 = v193;
        v106 = v194;
        if (v194)
        {
          v107 = (unint64_t *)&v194->__shared_owners_;
          do
            v108 = __ldxr(v107);
          while (__stxr(v108 + 1, v107));
          do
            v109 = __ldaxr(v107);
          while (__stlxr(v109 - 1, v107));
          if (!v109)
          {
            ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
            std::__shared_weak_count::__release_weak(v106);
          }
        }
      }
      if (v199)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v101 + 96))(&v203, v101, 1);
      else
LABEL_179:
        v203 = 0;
      if (!v184)
        goto LABEL_256;
      v119 = v185;
      if (!v185)
        goto LABEL_256;
      v120 = v186;
      if (!v186)
        goto LABEL_256;
      v121 = v188;
      v122 = v189;
      v123 = v196;
      v124 = v197;
      v125 = v183;
      if (v190 && v183)
      {
        v126 = v181;
        v127 = v182;
        if (v182)
        {
          v128 = (unint64_t *)&v182->__shared_owners_;
          do
            v129 = __ldxr(v128);
          while (__stxr(v129 + 1, v128));
          do
            v130 = __ldaxr(v128);
          while (__stlxr(v130 - 1, v128));
          if (!v130)
          {
            ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
            std::__shared_weak_count::__release_weak(v127);
          }
        }
        ((void (*)(std::__shared_weak_count *, _QWORD, const char *))v126->__vftable[2].~__shared_weak_count_0)(v126, 0, "unknown location");
        v125 = v183;
      }
      v131 = v195;
      if (v198 && v195)
      {
        v132 = v193;
        v133 = v194;
        if (v194)
        {
          v134 = (unint64_t *)&v194->__shared_owners_;
          do
            v135 = __ldxr(v134);
          while (__stxr(v135 + 1, v134));
          do
            v136 = __ldaxr(v134);
          while (__stlxr(v136 - 1, v134));
          if (!v136)
          {
            ((void (*)(std::__shared_weak_count *))v133->__on_zero_shared)(v133);
            std::__shared_weak_count::__release_weak(v133);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v132 + 88))(v132, 1, "unknown location");
        v131 = v195;
      }
      v137 = v119 - 1;
      v138 = v120 - 1;
      if (v120 != 1)
      {
        if (v119 == 1)
        {
          do
          {
            *v131 = *v125;
            v125 += v122;
            v131 += v124;
            --v138;
          }
          while (v138);
LABEL_252:
          v169 = *v125;
LABEL_255:
          *v131 = v169;
LABEL_256:
          v170 = v203;
          v203 = 0;
          if (v170)
            (*(void (**)(uint64_t))(*(_QWORD *)v170 + 8))(v170);
          v171 = (uint64_t)v204;
          v204 = 0;
          if (v171)
            (*(void (**)(uint64_t))(*(_QWORD *)v171 + 8))(v171);
          v32 = v182;
          if (!v182)
            goto LABEL_265;
          v172 = (unint64_t *)&v182->__shared_owners_;
          do
            v34 = __ldaxr(v172);
          while (__stlxr(v34 - 1, v172));
          goto LABEL_263;
        }
        v139 = 0;
        do
        {
          v140 = v131;
          v141 = v125;
          v142 = v119 - 1;
          do
          {
            *v140 = *v141;
            v141 += v121;
            v140 += v123;
            --v142;
          }
          while (v142);
          *v140 = *v141;
          v125 += v122;
          v131 += v124;
          ++v139;
        }
        while (v139 != v138);
      }
      if (v119 != 1)
      {
        do
        {
          *v131 = *v125;
          v125 += v121;
          v131 += v123;
          --v137;
        }
        while (v137);
      }
      goto LABEL_252;
    }
    v92 = v181;
    if (!v181)
      goto LABEL_163;
    v93 = v182;
    if (v182)
    {
      v94 = (unint64_t *)&v182->__shared_owners_;
      do
        v95 = __ldxr(v94);
      while (__stxr(v95 + 1, v94));
      do
        v96 = __ldaxr(v94);
      while (__stlxr(v96 - 1, v94));
      if (!v96)
      {
        ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
        std::__shared_weak_count::__release_weak(v93);
      }
      v92 = v181;
      v97 = v182;
      if (v182)
      {
        v98 = (unint64_t *)&v182->__shared_owners_;
        do
          v99 = __ldxr(v98);
        while (__stxr(v99 + 1, v98));
        do
          v100 = __ldaxr(v98);
        while (__stlxr(v100 - 1, v98));
        if (!v100)
        {
          ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
          std::__shared_weak_count::__release_weak(v97);
        }
      }
    }
    if (v191)
      ((void (*)(const UInt8 **__return_ptr, std::__shared_weak_count *, _QWORD))v92->__vftable[2].__on_zero_shared)(&v204, v92, 0);
    else
LABEL_163:
      v204 = 0;
    v110 = v193;
    if (!v193)
      goto LABEL_210;
    v111 = v194;
    if (v194)
    {
      v112 = (unint64_t *)&v194->__shared_owners_;
      do
        v113 = __ldxr(v112);
      while (__stxr(v113 + 1, v112));
      do
        v114 = __ldaxr(v112);
      while (__stlxr(v114 - 1, v112));
      if (!v114)
      {
        ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
        std::__shared_weak_count::__release_weak(v111);
      }
      v110 = v193;
      v115 = v194;
      if (v194)
      {
        v116 = (unint64_t *)&v194->__shared_owners_;
        do
          v117 = __ldxr(v116);
        while (__stxr(v117 + 1, v116));
        do
          v118 = __ldaxr(v116);
        while (__stlxr(v118 - 1, v116));
        if (!v118)
        {
          ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
          std::__shared_weak_count::__release_weak(v115);
        }
      }
    }
    if (v199)
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v110 + 96))(&v203, v110, 1);
    else
LABEL_210:
      v203 = 0;
    if (!v184)
      goto LABEL_256;
    v143 = v185;
    if (!v185)
      goto LABEL_256;
    v144 = v186;
    if (!v186)
      goto LABEL_256;
    v145 = v188;
    v146 = v189;
    v147 = v196;
    v148 = v197;
    v149 = v183;
    if (v190 && v183)
    {
      v150 = v181;
      v151 = v182;
      if (v182)
      {
        v152 = (unint64_t *)&v182->__shared_owners_;
        do
          v153 = __ldxr(v152);
        while (__stxr(v153 + 1, v152));
        do
          v154 = __ldaxr(v152);
        while (__stlxr(v154 - 1, v152));
        if (!v154)
        {
          ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
          std::__shared_weak_count::__release_weak(v151);
        }
      }
      ((void (*)(std::__shared_weak_count *, _QWORD, const char *))v150->__vftable[2].~__shared_weak_count_0)(v150, 0, "unknown location");
      v149 = v183;
    }
    v131 = v195;
    if (v198 && v195)
    {
      v155 = v193;
      v156 = v194;
      if (v194)
      {
        v157 = (unint64_t *)&v194->__shared_owners_;
        do
          v158 = __ldxr(v157);
        while (__stxr(v158 + 1, v157));
        do
          v159 = __ldaxr(v157);
        while (__stlxr(v159 - 1, v157));
        if (!v159)
        {
          ((void (*)(std::__shared_weak_count *))v156->__on_zero_shared)(v156);
          std::__shared_weak_count::__release_weak(v156);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v155 + 88))(v155, 1, "unknown location");
      v131 = v195;
    }
    v160 = v143 - 1;
    v161 = v144 - 1;
    if (v144 != 1)
    {
      if (v143 == 1)
      {
        do
        {
          *v131 = v149[1];
          v149 += v146;
          v131 += v148;
          --v161;
        }
        while (v161);
LABEL_254:
        v169 = v149[1];
        goto LABEL_255;
      }
      v162 = 0;
      do
      {
        v163 = v131;
        v164 = 1;
        v165 = v143 - 1;
        do
        {
          *v163 = v149[v164];
          v164 += v145;
          v163 += v147;
          --v165;
        }
        while (v165);
        *v163 = v149[v164];
        v149 += v146;
        v131 += v148;
        ++v162;
      }
      while (v162 != v161);
    }
    if (v143 != 1)
    {
      do
      {
        *v131 = v149[1];
        v149 += v145;
        v131 += v147;
        --v160;
      }
      while (v160);
    }
    goto LABEL_254;
  }
  v180 = &off_250ADED08;
  if (HIDWORD(v200))
    v30 = (_DWORD)v200 == 0;
  else
    v30 = 1;
  v31 = v24 << 32;
  if (v30)
    v31 = 0;
  v203 = v31 | ((_DWORD)v200 != 0);
  v204 = v14;
  sub_239581874(&v204, &v200, &v203, (uint64_t)&v181);
  sub_239748574((uint64_t)&v180, (uint64_t)&v192);
  v32 = v182;
  if (!v182)
    goto LABEL_265;
  v33 = (unint64_t *)&v182->__shared_owners_;
  do
    v34 = __ldaxr(v33);
  while (__stlxr(v34 - 1, v33));
LABEL_263:
  if (!v34)
  {
    ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
    std::__shared_weak_count::__release_weak(v32);
  }
LABEL_265:
  v23 = nullsub_4(&v180);
LABEL_266:
  v173 = v194;
  if (v194)
  {
    v174 = (unint64_t *)&v194->__shared_owners_;
    do
      v175 = __ldaxr(v174);
    while (__stlxr(v175 - 1, v174));
    if (!v175)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v173->__on_zero_shared)(v173, v23);
      std::__shared_weak_count::__release_weak(v173);
    }
  }
  v176 = nullsub_4(&v192);
  v177 = v202;
  if (v202)
  {
    v178 = (unint64_t *)&v202->__shared_owners_;
    do
      v179 = __ldaxr(v178);
    while (__stlxr(v179 - 1, v178));
    if (!v179)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v177->__on_zero_shared)(v177, v176);
      std::__shared_weak_count::__release_weak(v177);
    }
  }
}

void sub_2397483EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v21;

  v21 = *(_QWORD *)(v19 - 88);
  *(_QWORD *)(v19 - 88) = 0;
  if (v21)
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
  sub_2397487DC((uint64_t)&a9);
  sub_239644044((uint64_t)&a19);
  sub_239416DA0(v19 - 112);
  _Unwind_Resume(a1);
}

void sub_239748460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v21;

  v21 = *(_QWORD *)(v19 - 88);
  *(_QWORD *)(v19 - 88) = 0;
  if (v21)
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
  sub_23957E154((uint64_t)&a9);
  sub_239644044((uint64_t)&a19);
  sub_239416DA0(v19 - 112);
  _Unwind_Resume(a1);
}

void sub_239748510(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239748524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239748538(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974854C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_239748560(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_239748574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 49))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 49))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_239748844(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239748778(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2397487DC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void *sub_239748844(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a1 + 44);
  if (v5 == *(_DWORD *)(a2 + 44) && v5 == v4)
  {
    v8 = *(unsigned int *)(a1 + 36) * (unint64_t)v4;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = *(unsigned int *)(a1 + 32);
    return (void *)sub_2397489E4(a1, a2, &v21);
  }
  return result;
}

uint64_t sub_2397489E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_239748C74(a3, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239748C10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239748C74(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  _OWORD v28[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "unknown location");
      v11 = *(char **)(a2 + 24);
    }
    v17 = *(char **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
      v17 = *(char **)(a3 + 24);
    }
    memset(v28, 0, sizeof(v28));
    return (uint64_t *)sub_239717CA4(&v23, (uint64_t)v28, v8, v11, v17);
  }
  return result;
}

void sub_239748DF8(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 2;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23974906C(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239748F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239748F50(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239748FBC()
{
  return 8;
}

uint64_t sub_239748FC4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_239748FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_239748FE8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_23974906C(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_239749178(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void sub_239749194()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2397491A8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE4B00;
  result[1] = v3;
  return result;
}

uint64_t sub_2397491DC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE4B00;
  a2[1] = v2;
  return result;
}

void sub_2397491F8(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int16 v14;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 32) != *a2 || *(_DWORD *)(v3 + 36) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE1F40;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 48);
    v9 = v3 + 24;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v9;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v9 + 16);
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 48) = v8;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v14 = *(_WORD *)(v3 + 48);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v3 + 40);
    *(_WORD *)(a3 + 48) = v14;
  }
}

uint64_t sub_239749328(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_239749394()
{
  return &unk_250AE4B70;
}

void sub_2397493A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _BOOL8 v11;
  _BOOL4 v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int16 v18;
  std::__shared_weak_count *size;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::logic_error *exception;
  std::string v24;

  if (*(_DWORD *)(a1 + 48) != 4)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239749600(a1, &v24);
    std::logic_error::logic_error(exception, &v24);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v24.__r_.__value_.__r.__words[0] = v4;
      v24.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_DWORD *)(a1 + 24);
  v11 = v10 != 0;
  v12 = v10 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v12 = 1;
  v13 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v14 = !v12;
  if (v12)
    v13 = 0;
  v15 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v15 = 0;
  if (HIDWORD(v15) * HIDWORD(v13) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v16 = *(_QWORD *)(a1 + 40);
  v17 = v13 | v11;
  v18 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v24.__r_.__value_.__l.__size_;
  if (v24.__r_.__value_.__l.__size_)
  {
    v20 = (unint64_t *)(v24.__r_.__value_.__l.__size_ + 8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    *(_QWORD *)a2 = v24.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_WORD *)(a2 + 40) = v18;
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v24.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_WORD *)(a2 + 40) = v18;
  }
}

void sub_2397495B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_239749600(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239749678();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239749678()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931728);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931728))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_239542650();
    sub_23974987C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23974987C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931710, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931710, &dword_23940C000);
          __cxa_guard_release(&qword_256931728);
          return &stru_256931710;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931710;
}

void sub_2397497C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931728);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931728);
  _Unwind_Resume(a1);
}

void sub_23974987C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239749910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_23974994C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  size_t BytesPerRow;
  uint64_t v22;
  __n128 v23;
  int v24;
  int v25;
  int v26;
  _BOOL4 v27;
  _BOOL4 v28;
  uint64_t v29;
  BOOL v30;
  size_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  int v35;
  BOOL v36;
  BOOL v37;
  size_t v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  _BYTE *v87;
  std::__shared_weak_count *v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  int v94;
  int v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  _BYTE *v99;
  int v100;
  char v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  uint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  unint64_t v113;
  std::__shared_weak_count *v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  int v119;
  int v120;
  int v121;
  _BYTE *v122;
  _BYTE *v123;
  _BYTE *v124;
  _BYTE *v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t *v129;
  std::__shared_weak_count *v130;
  unint64_t *v131;
  unint64_t v132;
  __n128 v133;
  std::__shared_weak_count *v134;
  unint64_t *v135;
  unint64_t v136;
  uint64_t (**v137)();
  uint64_t v138;
  std::__shared_weak_count *v139;
  _BYTE *v140;
  int v141;
  int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  char v146;
  char v147;
  uint64_t v148;
  std::__shared_weak_count *v149;
  std::__shared_weak_count *v150;
  _BYTE *v151;
  unsigned int v152;
  unsigned int v153;
  char v154;
  char v155;
  unsigned int v156;
  unint64_t v157;
  CFDataRef v158;
  std::__shared_weak_count *v159;
  uint64_t v160;
  const UInt8 *v161;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v148);
  sub_239769054((uint64_t)&v148, (int)&v158);
  v11 = v149;
  if (v149)
  {
    v12 = (unint64_t *)&v149->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v158);
  v15 = sub_23962A55C(&v158);
  if (!v14 && v15)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v157 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v156 = BytesPerRow;
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v148, v22, &v157);
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = *(_DWORD *)(a3 + 20);
  v27 = v24 == 0;
  v28 = v25 == 0;
  if (!v25)
    v28 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v27 = v28;
  if (!v27)
  {
    v35 = v25 | *(_DWORD *)(a3 + 16);
    if (!v35 && !v26 && v24 == 1)
    {
      sub_23974A62C(&v137, (uint64_t)v14, &v157, &v156);
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v30 = v24 == 0;
    v36 = v35 != 0;
    if (!v30)
      v36 = 1;
    if (v36)
      goto LABEL_192;
    if ((v26 & 0xFFFFFFFE) != 2)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v137 = &off_250AE4B90;
    if (HIDWORD(v157))
      v37 = (_DWORD)v157 == 0;
    else
      v37 = 1;
    v38 = BytesPerRow << 32;
    if (v37)
      v38 = 0;
    v160 = v38 | (4 * ((_DWORD)v157 != 0));
    v161 = v14;
    sub_23974AF18((uint64_t *)&v161, &v157, &v160, (uint64_t)&v138);
    if (*(_DWORD *)(a3 + 20) == 2)
    {
      v39 = v138;
      if (!v138)
        goto LABEL_85;
      v40 = v139;
      if (v139)
      {
        v41 = (unint64_t *)&v139->__shared_owners_;
        do
          v42 = __ldxr(v41);
        while (__stxr(v42 + 1, v41));
        do
          v43 = __ldaxr(v41);
        while (__stlxr(v43 - 1, v41));
        if (!v43)
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
        }
        v39 = v138;
        v44 = v139;
        if (v139)
        {
          v45 = (unint64_t *)&v139->__shared_owners_;
          do
            v46 = __ldxr(v45);
          while (__stxr(v46 + 1, v45));
          do
            v47 = __ldaxr(v45);
          while (__stlxr(v47 - 1, v45));
          if (!v47)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }
      }
      if (v147)
      {
        (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v39 + 96))(&v161, v39, 0);
        v48 = v149;
        if (!v149)
          goto LABEL_115;
      }
      else
      {
LABEL_85:
        v161 = 0;
        v48 = v149;
        if (!v149)
          goto LABEL_115;
      }
      v59 = v150;
      if (v150)
      {
        v60 = (unint64_t *)&v150->__shared_owners_;
        do
          v61 = __ldxr(v60);
        while (__stxr(v61 + 1, v60));
        do
          v62 = __ldaxr(v60);
        while (__stlxr(v62 - 1, v60));
        if (!v62)
        {
          ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
          std::__shared_weak_count::__release_weak(v59);
        }
        v48 = v149;
        v63 = v150;
        if (v150)
        {
          v64 = (unint64_t *)&v150->__shared_owners_;
          do
            v65 = __ldxr(v64);
          while (__stxr(v65 + 1, v64));
          do
            v66 = __ldaxr(v64);
          while (__stlxr(v66 - 1, v64));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
            std::__shared_weak_count::__release_weak(v63);
          }
        }
      }
      if (v155)
      {
        ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v48->__vftable[2].__on_zero_shared)(&v160, v48, 1);
        goto LABEL_116;
      }
LABEL_115:
      v160 = 0;
LABEL_116:
      if (!v141)
        goto LABEL_182;
      v75 = v142;
      if (!v142)
        goto LABEL_182;
      v76 = v143;
      if (!v143)
        goto LABEL_182;
      v77 = v144;
      v78 = v145;
      v79 = v152;
      v80 = v153;
      v81 = v140;
      if (v146 && v140)
      {
        v82 = v138;
        v83 = v139;
        if (v139)
        {
          v84 = (unint64_t *)&v139->__shared_owners_;
          do
            v85 = __ldxr(v84);
          while (__stxr(v85 + 1, v84));
          do
            v86 = __ldaxr(v84);
          while (__stlxr(v86 - 1, v84));
          if (!v86)
          {
            ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
            std::__shared_weak_count::__release_weak(v83);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v82 + 88))(v82, 0, "unknown location");
        v81 = v140;
      }
      v87 = v151;
      if (v154 && v151)
      {
        v88 = v149;
        v89 = v150;
        if (v150)
        {
          v90 = (unint64_t *)&v150->__shared_owners_;
          do
            v91 = __ldxr(v90);
          while (__stxr(v91 + 1, v90));
          do
            v92 = __ldaxr(v90);
          while (__stlxr(v92 - 1, v90));
          if (!v92)
          {
            ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
            std::__shared_weak_count::__release_weak(v89);
          }
        }
        ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v88->__vftable[2].~__shared_weak_count_0)(v88, 1, "unknown location");
        v87 = v151;
      }
      v93 = v75 - 1;
      v94 = v76 - 1;
      if (v76 != 1)
      {
        if (v75 == 1)
        {
          do
          {
            *v87 = *v81;
            v87[1] = v81[1];
            v87[2] = v81[2];
            v81 += v78;
            v87 += v80;
            --v94;
          }
          while (v94);
        }
        else
        {
          v95 = 0;
          v96 = v87 + 2;
          v97 = v81 + 2;
          do
          {
            v98 = v97;
            v99 = v96;
            v100 = v75 - 1;
            do
            {
              *(v99 - 2) = *(v98 - 2);
              *(v99 - 1) = *(v98 - 1);
              *v99 = *v98;
              v99 += v79;
              v98 += v77;
              --v100;
            }
            while (v100);
            *(v99 - 2) = *(v98 - 2);
            *(v99 - 1) = *(v98 - 1);
            *v99 = *v98;
            v81 += v78;
            v87 += v80;
            ++v95;
            v96 += v80;
            v97 += v78;
          }
          while (v95 != v94);
        }
      }
      if (v75 != 1)
      {
        do
        {
          *v87 = *v81;
          v87[1] = v81[1];
          v87[2] = v81[2];
          v81 += v77;
          v87 += v79;
          --v93;
        }
        while (v93);
      }
      *v87 = *v81;
      v87[1] = v81[1];
      v101 = v81[2];
LABEL_181:
      v87[2] = v101;
LABEL_182:
      v127 = v160;
      v160 = 0;
      if (v127)
        (*(void (**)(uint64_t))(*(_QWORD *)v127 + 8))(v127);
      v128 = (uint64_t)v161;
      v161 = 0;
      if (v128)
        (*(void (**)(uint64_t))(*(_QWORD *)v128 + 8))(v128);
      v32 = v139;
      if (!v139)
        goto LABEL_191;
      v129 = (unint64_t *)&v139->__shared_owners_;
      do
        v34 = __ldaxr(v129);
      while (__stlxr(v34 - 1, v129));
      goto LABEL_189;
    }
    v49 = v138;
    if (!v138)
      goto LABEL_100;
    v50 = v139;
    if (v139)
    {
      v51 = (unint64_t *)&v139->__shared_owners_;
      do
        v52 = __ldxr(v51);
      while (__stxr(v52 + 1, v51));
      do
        v53 = __ldaxr(v51);
      while (__stlxr(v53 - 1, v51));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
        std::__shared_weak_count::__release_weak(v50);
      }
      v49 = v138;
      v54 = v139;
      if (v139)
      {
        v55 = (unint64_t *)&v139->__shared_owners_;
        do
          v56 = __ldxr(v55);
        while (__stxr(v56 + 1, v55));
        do
          v57 = __ldaxr(v55);
        while (__stlxr(v57 - 1, v55));
        if (!v57)
        {
          ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
          std::__shared_weak_count::__release_weak(v54);
        }
      }
    }
    if (v147)
    {
      (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v49 + 96))(&v161, v49, 0);
      v58 = v149;
      if (!v149)
        goto LABEL_148;
    }
    else
    {
LABEL_100:
      v161 = 0;
      v58 = v149;
      if (!v149)
        goto LABEL_148;
    }
    v67 = v150;
    if (v150)
    {
      v68 = (unint64_t *)&v150->__shared_owners_;
      do
        v69 = __ldxr(v68);
      while (__stxr(v69 + 1, v68));
      do
        v70 = __ldaxr(v68);
      while (__stlxr(v70 - 1, v68));
      if (!v70)
      {
        ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
        std::__shared_weak_count::__release_weak(v67);
      }
      v58 = v149;
      v71 = v150;
      if (v150)
      {
        v72 = (unint64_t *)&v150->__shared_owners_;
        do
          v73 = __ldxr(v72);
        while (__stxr(v73 + 1, v72));
        do
          v74 = __ldaxr(v72);
        while (__stlxr(v74 - 1, v72));
        if (!v74)
        {
          ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
          std::__shared_weak_count::__release_weak(v71);
        }
      }
    }
    if (v155)
    {
      ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v58->__vftable[2].__on_zero_shared)(&v160, v58, 1);
      goto LABEL_149;
    }
LABEL_148:
    v160 = 0;
LABEL_149:
    if (!v141)
      goto LABEL_182;
    v102 = v142;
    if (!v142)
      goto LABEL_182;
    v103 = v143;
    if (!v143)
      goto LABEL_182;
    v104 = v144;
    v105 = v145;
    v106 = v152;
    v107 = v153;
    v108 = v140;
    if (v146 && v140)
    {
      v109 = v138;
      v110 = v139;
      if (v139)
      {
        v111 = (unint64_t *)&v139->__shared_owners_;
        do
          v112 = __ldxr(v111);
        while (__stxr(v112 + 1, v111));
        do
          v113 = __ldaxr(v111);
        while (__stlxr(v113 - 1, v111));
        if (!v113)
        {
          ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
          std::__shared_weak_count::__release_weak(v110);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v109 + 88))(v109, 0, "unknown location");
      v108 = v140;
    }
    v87 = v151;
    if (v154 && v151)
    {
      v114 = v149;
      v115 = v150;
      if (v150)
      {
        v116 = (unint64_t *)&v150->__shared_owners_;
        do
          v117 = __ldxr(v116);
        while (__stxr(v117 + 1, v116));
        do
          v118 = __ldaxr(v116);
        while (__stlxr(v118 - 1, v116));
        if (!v118)
        {
          ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
          std::__shared_weak_count::__release_weak(v115);
        }
      }
      ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v114->__vftable[2].~__shared_weak_count_0)(v114, 1, "unknown location");
      v87 = v151;
    }
    v119 = v102 - 1;
    v120 = v103 - 1;
    if (v103 != 1)
    {
      if (v102 == 1)
      {
        do
        {
          *v87 = v108[1];
          v87[1] = v108[2];
          v87[2] = v108[3];
          v108 += v105;
          v87 += v107;
          --v120;
        }
        while (v120);
      }
      else
      {
        v121 = 0;
        v122 = v87 + 2;
        v123 = v108 + 3;
        do
        {
          v124 = v123;
          v125 = v122;
          v126 = v102 - 1;
          do
          {
            *(v125 - 2) = *(v124 - 2);
            *(v125 - 1) = *(v124 - 1);
            *v125 = *v124;
            v125 += v106;
            v124 += v104;
            --v126;
          }
          while (v126);
          *(v125 - 2) = *(v124 - 2);
          *(v125 - 1) = *(v124 - 1);
          *v125 = *v124;
          v108 += v105;
          v87 += v107;
          ++v121;
          v122 += v107;
          v123 += v105;
        }
        while (v121 != v120);
      }
    }
    if (v102 != 1)
    {
      do
      {
        *v87 = v108[1];
        v87[1] = v108[2];
        v87[2] = v108[3];
        v108 += v104;
        v87 += v106;
        --v119;
      }
      while (v119);
    }
    *v87 = v108[1];
    v87[1] = v108[2];
    v101 = v108[3];
    goto LABEL_181;
  }
  v137 = &off_250ADB468;
  v29 = 3;
  if (!(_DWORD)v157)
    v29 = 0;
  if (HIDWORD(v157))
    v30 = (_DWORD)v157 == 0;
  else
    v30 = 1;
  v31 = BytesPerRow << 32;
  if (v30)
    v31 = 0;
  v160 = v31 | v29;
  v161 = v14;
  sub_23974A988((uint64_t *)&v161, &v157, &v160, (uint64_t)&v138);
  sub_23974A6B8((uint64_t)&v137, (uint64_t)&v148);
  v32 = v139;
  if (!v139)
    goto LABEL_191;
  v33 = (unint64_t *)&v139->__shared_owners_;
  do
    v34 = __ldaxr(v33);
  while (__stlxr(v34 - 1, v33));
LABEL_189:
  if (!v34)
  {
    ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
    std::__shared_weak_count::__release_weak(v32);
  }
LABEL_191:
  v23 = nullsub_4(&v137);
LABEL_192:
  v130 = v150;
  if (v150)
  {
    v131 = (unint64_t *)&v150->__shared_owners_;
    do
      v132 = __ldaxr(v131);
    while (__stlxr(v132 - 1, v131));
    if (!v132)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v130->__on_zero_shared)(v130, v23);
      std::__shared_weak_count::__release_weak(v130);
    }
  }
  v133 = nullsub_4(&v148);
  v134 = v159;
  if (v159)
  {
    v135 = (unint64_t *)&v159->__shared_owners_;
    do
      v136 = __ldaxr(v135);
    while (__stlxr(v136 - 1, v135));
    if (!v136)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v134->__on_zero_shared)(v134, v133);
      std::__shared_weak_count::__release_weak(v134);
    }
  }
}

void sub_23974A4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v21;

  v21 = *(_QWORD *)(v19 - 88);
  *(_QWORD *)(v19 - 88) = 0;
  if (v21)
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
  sub_23974A920((uint64_t)&a9);
  sub_23949ABF8((uint64_t)&a19);
  sub_239416DA0(v19 - 112);
  _Unwind_Resume(a1);
}

void sub_23974A558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;

  nullsub_4(&a9);
  sub_23949ABF8((uint64_t)&a19);
  sub_239416DA0(v19 - 112);
  _Unwind_Resume(a1);
}

void sub_23974A5C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974A5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23974A5F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974A604(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974A618(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

_QWORD *sub_23974A62C(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  unint64_t v9;
  uint64_t v10;

  *a1 = &off_250ADB468;
  v5 = 3;
  if (!*a3)
    v5 = 0;
  if (a3[1])
    v6 = *a3 == 0;
  else
    v6 = 1;
  v7 = (unint64_t)*a4 << 32;
  if (v6)
    v7 = 0;
  v9 = v7 | v5;
  v10 = a2;
  sub_23974A988(&v10, a3, &v9, (uint64_t)(a1 + 1));
  return a1;
}

void sub_23974A6A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23974A6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_23974AAE0(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23974A8BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23974A920(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23974A988(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 3;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23941D0C4(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_23974AACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_23974AAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_23974AC80(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_23974AC80(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23974AEB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23974AF18(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 4;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23974B18C(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_23974B05C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23974B070(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23974B0DC()
{
  return 13;
}

uint64_t sub_23974B0E4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23974B0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_23974B108(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_23974B18C(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_23974B298(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void sub_23974B2B4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23974B2C8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE4C88;
  result[1] = v3;
  return result;
}

uint64_t sub_23974B2FC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE4C88;
  a2[1] = v2;
  return result;
}

void sub_23974B318(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250ADCAF8;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_23974B454(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_23974B4C0()
{
  return &unk_250AE4CF8;
}

double sub_23974B4CC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23974B534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  BOOL v48;
  std::__shared_weak_count *v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int16 *v64;
  uint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  unint64_t v69;
  _WORD *v70;
  std::__shared_weak_count *v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  int v76;
  int v77;
  int v78;
  _WORD *v79;
  unsigned __int16 *v80;
  unsigned __int16 *v81;
  _WORD *v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t *v86;
  unint64_t *v87;
  unint64_t v88;
  __n128 v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  uint64_t (**v93)();
  uint64_t v94;
  std::__shared_weak_count *v95;
  unsigned __int16 *v96;
  int v97;
  int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  char v102;
  char v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  std::__shared_weak_count *v106;
  _WORD *v107;
  unsigned int v108;
  unsigned int v109;
  char v110;
  char v111;
  unint64_t v112;
  CFDataRef v113;
  std::__shared_weak_count *v114;
  uint64_t v115;
  const UInt8 *v116;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v104);
  sub_239769054((uint64_t)&v104, (int)&v113);
  v11 = v105;
  if (v105)
  {
    v12 = (unint64_t *)&v105->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v113);
  v15 = sub_23962A55C(&v113);
  if (!v14 && v15 >= 2)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v112 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v104, v22, &v112);
  v23 = BytesPerRow >> 1;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v93 = &off_250AE3D70;
    v28 = 3;
    if (!(_DWORD)v112)
      v28 = 0;
    if (HIDWORD(v112))
      v29 = (_DWORD)v112 == 0;
    else
      v29 = 1;
    v30 = v23 << 32;
    if (v29)
      v30 = 0;
    v115 = v30 | v28;
    v116 = v14;
    sub_23974C10C((uint64_t *)&v116, &v112, &v115, (uint64_t)&v94);
    sub_23974BEA4((uint64_t)&v93, (uint64_t)&v104);
    v31 = v95;
    if (v95)
    {
      v32 = (unint64_t *)&v95->__shared_owners_;
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      goto LABEL_126;
    }
    goto LABEL_128;
  }
  v34 = v25 | *(_DWORD *)(a3 + 16);
  if (v34 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v48 = v34 != 0;
    if (v24)
      v48 = 1;
    if (!v48)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v49 = v106;
    if (!v106)
      goto LABEL_133;
    goto LABEL_129;
  }
  v93 = &off_250AE3D70;
  v35 = 3;
  if (!(_DWORD)v112)
    v35 = 0;
  if (HIDWORD(v112))
    v36 = (_DWORD)v112 == 0;
  else
    v36 = 1;
  v37 = v23 << 32;
  if (v36)
    v37 = 0;
  v115 = v37 | v35;
  v116 = v14;
  sub_23974C10C((uint64_t *)&v116, &v112, &v115, (uint64_t)&v94);
  v38 = v94;
  if (!v94)
    goto LABEL_71;
  v39 = v95;
  if (v95)
  {
    v40 = (unint64_t *)&v95->__shared_owners_;
    do
      v41 = __ldxr(v40);
    while (__stxr(v41 + 1, v40));
    do
      v42 = __ldaxr(v40);
    while (__stlxr(v42 - 1, v40));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
    v38 = v94;
    v43 = v95;
    if (v95)
    {
      v44 = (unint64_t *)&v95->__shared_owners_;
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
      do
        v46 = __ldaxr(v44);
      while (__stlxr(v46 - 1, v44));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
  }
  if (v103)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v38 + 96))(&v116, v38, 0);
    v47 = v105;
    if (!v105)
      goto LABEL_86;
  }
  else
  {
LABEL_71:
    v116 = 0;
    v47 = v105;
    if (!v105)
    {
LABEL_86:
      v115 = 0;
      goto LABEL_87;
    }
  }
  v50 = v106;
  if (v106)
  {
    v51 = (unint64_t *)&v106->__shared_owners_;
    do
      v52 = __ldxr(v51);
    while (__stxr(v52 + 1, v51));
    do
      v53 = __ldaxr(v51);
    while (__stlxr(v53 - 1, v51));
    if (!v53)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
    v47 = v105;
    v54 = v106;
    if (v106)
    {
      v55 = (unint64_t *)&v106->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
      do
        v57 = __ldaxr(v55);
      while (__stlxr(v57 - 1, v55));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
        std::__shared_weak_count::__release_weak(v54);
      }
    }
  }
  if (!v111)
    goto LABEL_86;
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v47->__vftable[2].__on_zero_shared)(&v115, v47, 1);
LABEL_87:
  if (v97)
  {
    v58 = v98;
    if (v98)
    {
      v59 = v99;
      if (v99)
      {
        v60 = v100;
        v61 = v101;
        v62 = v108;
        v63 = v109;
        v64 = v96;
        if (v102 && v96)
        {
          v65 = v94;
          v66 = v95;
          if (v95)
          {
            v67 = (unint64_t *)&v95->__shared_owners_;
            do
              v68 = __ldxr(v67);
            while (__stxr(v68 + 1, v67));
            do
              v69 = __ldaxr(v67);
            while (__stlxr(v69 - 1, v67));
            if (!v69)
            {
              ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
              std::__shared_weak_count::__release_weak(v66);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v65 + 88))(v65, 0, "unknown location");
          v64 = v96;
        }
        v70 = v107;
        if (v110 && v107)
        {
          v71 = v105;
          v72 = v106;
          if (v106)
          {
            v73 = (unint64_t *)&v106->__shared_owners_;
            do
              v74 = __ldxr(v73);
            while (__stxr(v74 + 1, v73));
            do
              v75 = __ldaxr(v73);
            while (__stlxr(v75 - 1, v73));
            if (!v75)
            {
              ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
              std::__shared_weak_count::__release_weak(v72);
            }
          }
          ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v71->__vftable[2].~__shared_weak_count_0)(v71, 1, "unknown location");
          v70 = v107;
        }
        v76 = v58 - 1;
        v77 = v59 - 1;
        if (v59 != 1)
        {
          if (v58 == 1)
          {
            do
            {
              *v70 = bswap32(*v64) >> 16;
              v70[1] = bswap32(v64[1]) >> 16;
              v70[2] = bswap32(v64[2]) >> 16;
              v64 += v61;
              v70 += v63;
              --v77;
            }
            while (v77);
LABEL_118:
            *v70 = bswap32(*v64) >> 16;
            v70[1] = bswap32(v64[1]) >> 16;
            v70[2] = bswap32(v64[2]) >> 16;
            goto LABEL_119;
          }
          v78 = 0;
          v79 = v70 + 2;
          v80 = v64 + 2;
          do
          {
            v81 = v80;
            v82 = v79;
            v83 = v58 - 1;
            do
            {
              *(v82 - 2) = bswap32(*(v81 - 2)) >> 16;
              *(v82 - 1) = bswap32(*(v81 - 1)) >> 16;
              *v82 = bswap32(*v81) >> 16;
              v82 += v62;
              v81 += v60;
              --v83;
            }
            while (v83);
            *(v82 - 2) = bswap32(*(v81 - 2)) >> 16;
            *(v82 - 1) = bswap32(*(v81 - 1)) >> 16;
            *v82 = bswap32(*v81) >> 16;
            v64 += v61;
            v70 += v63;
            ++v78;
            v79 += v63;
            v80 += v61;
          }
          while (v78 != v77);
        }
        if (v58 != 1)
        {
          do
          {
            *v70 = bswap32(*v64) >> 16;
            v70[1] = bswap32(v64[1]) >> 16;
            v70[2] = bswap32(v64[2]) >> 16;
            v64 += v60;
            v70 += v62;
            --v76;
          }
          while (v76);
        }
        goto LABEL_118;
      }
    }
  }
LABEL_119:
  v84 = v115;
  v115 = 0;
  if (v84)
    (*(void (**)(uint64_t))(*(_QWORD *)v84 + 8))(v84);
  v85 = (uint64_t)v116;
  v116 = 0;
  if (v85)
    (*(void (**)(uint64_t))(*(_QWORD *)v85 + 8))(v85);
  v31 = v95;
  if (v95)
  {
    v86 = (unint64_t *)&v95->__shared_owners_;
    do
      v33 = __ldaxr(v86);
    while (__stlxr(v33 - 1, v86));
LABEL_126:
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
LABEL_128:
  nullsub_4(&v93);
  v49 = v106;
  if (v106)
  {
LABEL_129:
    v87 = (unint64_t *)&v49->__shared_owners_;
    do
      v88 = __ldaxr(v87);
    while (__stlxr(v88 - 1, v87));
    if (!v88)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
  }
LABEL_133:
  v89 = nullsub_4(&v104);
  v90 = v114;
  if (v114)
  {
    v91 = (unint64_t *)&v114->__shared_owners_;
    do
      v92 = __ldaxr(v91);
    while (__stlxr(v92 - 1, v91));
    if (!v92)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v90->__on_zero_shared)(v90, v89);
      std::__shared_weak_count::__release_weak(v90);
    }
  }
}

void sub_23974BD94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_2397082D0((uint64_t)va);
  sub_23974B4CC((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_23974BE40(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974BE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23974BE68(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974BE7C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974BE90(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_23974BEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_23974C388(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23974C0A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23974C10C(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 3;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23974C264(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_23974C250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23974C264(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_23974C370(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void *sub_23974C388(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_23974C528(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_23974C528(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23974C7C0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23974C75C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned int *sub_23974C7C0(unsigned int *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _QWORD v32[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t *)result;
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(char **)(a2 + 24);
    }
    v19 = *(char **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(char **)(a3 + 24);
    }
    v32[2] = 0;
    v32[3] = 0;
    v32[0] = 0;
    v32[1] = 1;
    v32[4] = 1;
    v32[5] = 0;
    return sub_23974C96C((unsigned int *)&v25, (uint64_t)v32, v10, v13, v19);
  }
  return result;
}

unsigned int *sub_23974C96C(unsigned int *result, uint64_t a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int i;
  uint64_t v16;
  uint64_t v17;

  v5 = __dst;
  v6 = __src;
  v9 = result[6];
  v10 = result[7];
  v11 = result[3] | (unint64_t)(v9 << 32);
  v12 = result[4] | (unint64_t)(v10 << 32);
  *(_QWORD *)a2 = __src;
  *(_QWORD *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = __dst;
  *(_QWORD *)(a2 + 32) = v12;
  *(_DWORD *)(a2 + 40) = v10;
  v13 = result[8];
  if (v13)
  {
    v14 = result;
    for (i = 0; i < v13; ++i)
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 24) = v5;
      v16 = *a3;
      if (!v6 && v16)
        sub_239EBF50C((uint64_t)result, a2);
      if (!v5 && v16)
        sub_239EBF50C((uint64_t)result, a2);
      if (v16)
      {
        result = (unsigned int *)memmove(v5, v6, 2 * v16);
        v13 = v14[8];
      }
      v6 += 2 * v14[9];
      v5 += 2 * v14[10];
    }
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 24) = v5;
  v17 = *a3;
  if (!v6 && v17)
    sub_239EBF50C((uint64_t)result, a2);
  if (!v5 && v17)
    sub_239EBF50C((uint64_t)result, a2);
  if (v17)
    return (unsigned int *)memmove(v5, v6, 2 * v17);
  return result;
}

void sub_23974CA7C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23974CA90(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE4D18;
  result[1] = v3;
  return result;
}

uint64_t sub_23974CAC4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE4D18;
  a2[1] = v2;
  return result;
}

void sub_23974CAE0(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE4D98;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_23974CC1C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_23974CC88()
{
  return &unk_250AE4E80;
}

void sub_23974CC94(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23974CD00()
{
  return 22;
}

uint64_t sub_23974CD08(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23974CD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_23974CD2C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23974CDB0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 22)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23974D080(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23974D034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23974D080(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23974D0F8();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23974D0F8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931748);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931748))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23970EDE0();
    sub_23974D2FC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23974D2FC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931730, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931730, &dword_23940C000);
          __cxa_guard_release(&qword_256931748);
          return &stru_256931730;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931730;
}

void sub_23974D248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931748);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931748);
  _Unwind_Resume(a1);
}

void sub_23974D2FC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23974D390(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_23974D3CC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23974D434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  __n128 v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  BOOL v49;
  std::__shared_weak_count *v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int16 *v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  _WORD *v71;
  std::__shared_weak_count *v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int v81;
  _WORD *v82;
  unsigned __int16 *v83;
  unsigned __int16 *v84;
  _WORD *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t *v89;
  unint64_t *v90;
  unint64_t v91;
  __n128 v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  uint64_t (**v96)();
  uint64_t v97;
  std::__shared_weak_count *v98;
  unsigned __int16 *v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  char v105;
  char v106;
  uint64_t v107;
  std::__shared_weak_count *v108;
  std::__shared_weak_count *v109;
  _WORD *v110;
  unsigned int v111;
  unsigned int v112;
  char v113;
  char v114;
  unint64_t v115;
  CFDataRef v116;
  std::__shared_weak_count *v117;
  uint64_t v118;
  const UInt8 *v119;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v107);
  sub_239769054((uint64_t)&v107, (int)&v116);
  v11 = v108;
  if (v108)
  {
    v12 = (unint64_t *)&v108->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v116);
  v15 = sub_23962A55C(&v116);
  if (!v14 && v15 >= 2)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v115 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v107, v22, &v115);
  v23 = BytesPerRow >> 1;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v96 = &off_250AE3DF0;
    v28 = 3;
    if (!(_DWORD)v115)
      v28 = 0;
    if (HIDWORD(v115))
      v29 = (_DWORD)v115 == 0;
    else
      v29 = 1;
    v30 = v23 << 32;
    if (v29)
      v30 = 0;
    v118 = v30 | v28;
    v119 = v14;
    sub_23974E004((uint64_t *)&v119, &v115, &v118, (uint64_t)&v97);
    sub_23974DD9C((uint64_t)&v96, (uint64_t)&v107, v31);
    v32 = v98;
    if (v98)
    {
      v33 = (unint64_t *)&v98->__shared_owners_;
      do
        v34 = __ldaxr(v33);
      while (__stlxr(v34 - 1, v33));
      goto LABEL_126;
    }
    goto LABEL_128;
  }
  v35 = v25 | *(_DWORD *)(a3 + 16);
  if (v35 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v49 = v35 != 0;
    if (v24)
      v49 = 1;
    if (!v49)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v50 = v109;
    if (!v109)
      goto LABEL_133;
    goto LABEL_129;
  }
  v96 = &off_250AE3DF0;
  v36 = 3;
  if (!(_DWORD)v115)
    v36 = 0;
  if (HIDWORD(v115))
    v37 = (_DWORD)v115 == 0;
  else
    v37 = 1;
  v38 = v23 << 32;
  if (v37)
    v38 = 0;
  v118 = v38 | v36;
  v119 = v14;
  sub_23974E004((uint64_t *)&v119, &v115, &v118, (uint64_t)&v97);
  v39 = v97;
  if (!v97)
    goto LABEL_71;
  v40 = v98;
  if (v98)
  {
    v41 = (unint64_t *)&v98->__shared_owners_;
    do
      v42 = __ldxr(v41);
    while (__stxr(v42 + 1, v41));
    do
      v43 = __ldaxr(v41);
    while (__stlxr(v43 - 1, v41));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
    v39 = v97;
    v44 = v98;
    if (v98)
    {
      v45 = (unint64_t *)&v98->__shared_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
      do
        v47 = __ldaxr(v45);
      while (__stlxr(v47 - 1, v45));
      if (!v47)
      {
        ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
        std::__shared_weak_count::__release_weak(v44);
      }
    }
  }
  if (v106)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v39 + 96))(&v119, v39, 0);
    v48 = v108;
    if (!v108)
      goto LABEL_86;
  }
  else
  {
LABEL_71:
    v119 = 0;
    v48 = v108;
    if (!v108)
    {
LABEL_86:
      v118 = 0;
      goto LABEL_87;
    }
  }
  v51 = v109;
  if (v109)
  {
    v52 = (unint64_t *)&v109->__shared_owners_;
    do
      v53 = __ldxr(v52);
    while (__stxr(v53 + 1, v52));
    do
      v54 = __ldaxr(v52);
    while (__stlxr(v54 - 1, v52));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
      std::__shared_weak_count::__release_weak(v51);
    }
    v48 = v108;
    v55 = v109;
    if (v109)
    {
      v56 = (unint64_t *)&v109->__shared_owners_;
      do
        v57 = __ldxr(v56);
      while (__stxr(v57 + 1, v56));
      do
        v58 = __ldaxr(v56);
      while (__stlxr(v58 - 1, v56));
      if (!v58)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
  }
  if (!v114)
    goto LABEL_86;
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v48->__vftable[2].__on_zero_shared)(&v118, v48, 1);
LABEL_87:
  if (v100)
  {
    v59 = v101;
    if (v101)
    {
      v60 = v102;
      if (v102)
      {
        v62 = v103;
        v61 = v104;
        v64 = v111;
        v63 = v112;
        v65 = v99;
        if (v105 && v99)
        {
          v66 = v97;
          v67 = v98;
          if (v98)
          {
            v68 = (unint64_t *)&v98->__shared_owners_;
            do
              v69 = __ldxr(v68);
            while (__stxr(v69 + 1, v68));
            do
              v70 = __ldaxr(v68);
            while (__stlxr(v70 - 1, v68));
            if (!v70)
            {
              ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
              std::__shared_weak_count::__release_weak(v67);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v66 + 88))(v66, 0, "unknown location");
          v65 = v99;
        }
        v71 = v110;
        if (v113 && v110)
        {
          v72 = v108;
          v73 = v109;
          if (v109)
          {
            v74 = (unint64_t *)&v109->__shared_owners_;
            do
              v75 = __ldxr(v74);
            while (__stxr(v75 + 1, v74));
            do
              v76 = __ldaxr(v74);
            while (__stlxr(v76 - 1, v74));
            if (!v76)
            {
              ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
              std::__shared_weak_count::__release_weak(v73);
            }
          }
          ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v72->__vftable[2].~__shared_weak_count_0)(v72, 1, "unknown location");
          v71 = v110;
        }
        v77 = v59 - 1;
        v78 = 2 * v62;
        v79 = 2 * v64;
        v80 = v60 - 1;
        if (v60 != 1)
        {
          if (v59 == 1)
          {
            do
            {
              *v71 = bswap32(*v65) >> 16;
              v71[1] = bswap32(v65[1]) >> 16;
              v71[2] = bswap32(v65[2]) >> 16;
              v65 += v61;
              v71 += v63;
              --v80;
            }
            while (v80);
          }
          else
          {
            v81 = 0;
            v82 = v71 + 2;
            v83 = v65 + 2;
            do
            {
              v84 = v83;
              v85 = v82;
              v86 = v59 - 1;
              do
              {
                *(v85 - 2) = bswap32(*(v84 - 2)) >> 16;
                *(v85 - 1) = bswap32(*(v84 - 1)) >> 16;
                *v85 = bswap32(*v84) >> 16;
                v85 = (_WORD *)((char *)v85 + v79);
                v84 = (unsigned __int16 *)((char *)v84 + v78);
                --v86;
              }
              while (v86);
              *(v85 - 2) = bswap32(*(v84 - 2)) >> 16;
              *(v85 - 1) = bswap32(*(v84 - 1)) >> 16;
              *v85 = bswap32(*v84) >> 16;
              v65 += v61;
              v71 += v63;
              ++v81;
              v82 += v63;
              v83 += v61;
            }
            while (v81 != v80);
          }
        }
        if (v59 != 1)
        {
          do
          {
            *v71 = bswap32(*v65) >> 16;
            v71[1] = bswap32(v65[1]) >> 16;
            v71[2] = bswap32(v65[2]) >> 16;
            v65 = (unsigned __int16 *)((char *)v65 + v78);
            v71 = (_WORD *)((char *)v71 + v79);
            --v77;
          }
          while (v77);
        }
        *v71 = bswap32(*v65) >> 16;
        v71[1] = bswap32(v65[1]) >> 16;
        v71[2] = bswap32(v65[2]) >> 16;
      }
    }
  }
  v87 = v118;
  v118 = 0;
  if (v87)
    (*(void (**)(uint64_t))(*(_QWORD *)v87 + 8))(v87);
  v88 = (uint64_t)v119;
  v119 = 0;
  if (v88)
    (*(void (**)(uint64_t))(*(_QWORD *)v88 + 8))(v88);
  v32 = v98;
  if (v98)
  {
    v89 = (unint64_t *)&v98->__shared_owners_;
    do
      v34 = __ldaxr(v89);
    while (__stlxr(v34 - 1, v89));
LABEL_126:
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
LABEL_128:
  nullsub_4(&v96);
  v50 = v109;
  if (v109)
  {
LABEL_129:
    v90 = (unint64_t *)&v50->__shared_owners_;
    do
      v91 = __ldaxr(v90);
    while (__stlxr(v91 - 1, v90));
    if (!v91)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
LABEL_133:
  v92 = nullsub_4(&v107);
  v93 = v117;
  if (v117)
  {
    v94 = (unint64_t *)&v117->__shared_owners_;
    do
      v95 = __ldaxr(v94);
    while (__stlxr(v95 - 1, v94));
    if (!v95)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v93->__on_zero_shared)(v93, v92);
      std::__shared_weak_count::__release_weak(v93);
    }
  }
}

void sub_23974DC8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_2397083A0((uint64_t)va);
  sub_23974D3CC((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_23974DD38(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974DD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23974DD60(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974DD74(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974DD88(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_23974DD9C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_39;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v27, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (!v14)
    goto LABEL_32;
LABEL_18:
  v15 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v15)
    goto LABEL_40;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldxr(v16);
  while (__stxr(v17 + 1, v16));
  do
    v18 = __ldaxr(v16);
  while (__stlxr(v18 - 1, v16));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  v14 = *(_QWORD *)(a2 + 8);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_40;
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v26, v14, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v26 = 0;
LABEL_33:
  v23.n128_u64[0] = sub_23974E280(a1, a2, a3);
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v24 + 8))(v24, v23.n128_f32[0]);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v23);
  return result;
}

void sub_23974DFA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23974E004(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 3;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23974E15C(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_23974E148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23974E15C(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_23974E268(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_23974E280@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 a3@<Q0>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v8;
  __n128 *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  __n128 *v27;
  __n128 *v28;
  unint64_t v29;
  __n128 v30;
  unsigned __int16 v31;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(a1 + 52);
  v6 = 3 * *(_DWORD *)(a1 + 56);
  if (v5 != *(_DWORD *)(a2 + 52) || v5 != v6)
  {
    v33 = (3 * *(_DWORD *)(a1 + 56));
    sub_23974E490(a1, a2, &v33, a3);
    return a3.n128_u16[0];
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v6;
  v9 = *(__n128 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(__n128 **)(v4 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(__n128 **)(a2 + 24);
  if (*(_BYTE *)(a2 + 72) && v16)
  {
    v17 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
    v16 = *(__n128 **)(a2 + 24);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v22 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0xF || (unint64_t)((char *)v16 - (char *)v9) < 0x20)
    {
      v25 = (unsigned __int16 *)v16;
      v26 = (unsigned __int16 *)v9;
    }
    else
    {
      v23 = v22 + 1;
      v24 = (v22 + 1) & 0xFFFFFFFFFFFFFFF0;
      v25 = (unsigned __int16 *)v16 + v24;
      v26 = (unsigned __int16 *)v9 + v24;
      v27 = v9 + 1;
      v28 = v16 + 1;
      v29 = v24;
      do
      {
        a3 = v27[-1];
        v30 = *v27;
        v28[-1] = a3;
        *v28 = v30;
        v27 += 2;
        v28 += 2;
        v29 -= 16;
      }
      while (v29);
      if (v23 == v24)
        return a3.n128_u16[0];
    }
    do
    {
      v31 = *v26++;
      a3.n128_u16[0] = v31;
      *v25++ = v31;
    }
    while (v26 != (unsigned __int16 *)((char *)v9 + 2 * v8));
  }
  return a3.n128_u16[0];
}

uint64_t sub_23974E490(uint64_t a1, uint64_t a2, uint64_t *a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23974E728(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23974E6C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23974E728(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  double result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _QWORD v33[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_QWORD *)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    v33[2] = 0;
    v33[3] = 0;
    v33[0] = 0;
    v33[1] = 1;
    v33[4] = 1;
    v33[5] = 0;
    *(_QWORD *)&result = sub_23974E8D4((unsigned int *)&v26, (uint64_t)v33, a1, v13, v19);
  }
  return result;
}

__int16 sub_23974E8D4@<H0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int i;
  uint64_t v11;
  unint64_t v12;
  _WORD *v13;
  __int16 *v14;
  unint64_t v15;
  unint64_t v16;
  __int128 *v17;
  _OWORD *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int16 *v22;
  __int16 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _WORD *v28;
  __int16 *v29;
  __int128 *v30;
  _OWORD *v31;
  unint64_t v32;
  __int128 v33;
  __int16 *v34;
  __int16 v35;

  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[3] | (unint64_t)(v5 << 32);
  v8 = a1[4] | (unint64_t)(v6 << 32);
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 8) = v7;
  *(_DWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = a5;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = v6;
  v9 = a1[8];
  if (v9)
  {
    for (i = 0; i < v9; ++i)
    {
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 24) = a5;
      v11 = *a3;
      if (!a4 && v11)
        sub_239EBF50C((uint64_t)a1, a2);
      if (!a5 && v11)
        sub_239EBF50C((uint64_t)a1, a2);
      if (v11)
      {
        v12 = (v11 - 1) & 0x7FFFFFFFFFFFFFFFLL;
        v13 = (_WORD *)a5;
        v14 = (__int16 *)a4;
        if (v12 < 0xF)
          goto LABEL_15;
        v13 = (_WORD *)a5;
        v14 = (__int16 *)a4;
        if ((unint64_t)(a5 - a4) < 0x20)
          goto LABEL_15;
        v15 = v12 + 1;
        v16 = 2 * (v15 & 0xFFFFFFFFFFFFFFF0);
        v13 = (_WORD *)(a5 + v16);
        v14 = (__int16 *)(a4 + v16);
        v17 = (__int128 *)(a4 + 16);
        v18 = (_OWORD *)(a5 + 16);
        v19 = v15 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v20 = *(v17 - 1);
          v21 = *v17;
          *(v18 - 1) = v20;
          *v18 = v21;
          v17 += 2;
          v18 += 2;
          v19 -= 16;
        }
        while (v19);
        if (v15 != (v15 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_15:
          v22 = (__int16 *)(a4 + 2 * v11);
          do
          {
            v23 = *v14++;
            LOWORD(v20) = v23;
            *v13++ = v23;
          }
          while (v14 != v22);
        }
        v9 = a1[8];
      }
      a4 += 2 * a1[9];
      a5 += 2 * a1[10];
    }
  }
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 24) = a5;
  v24 = *a3;
  if (!a4 && v24)
    sub_239EBF50C((uint64_t)a1, a2);
  if (!a5 && v24)
    sub_239EBF50C((uint64_t)a1, a2);
  if (v24)
  {
    v25 = (v24 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v25 < 0xF || (unint64_t)(a5 - a4) < 0x20)
    {
      v28 = (_WORD *)a5;
      v29 = (__int16 *)a4;
    }
    else
    {
      v26 = v25 + 1;
      v27 = (v25 + 1) & 0xFFFFFFFFFFFFFFF0;
      v28 = (_WORD *)(a5 + 2 * v27);
      v29 = (__int16 *)(a4 + 2 * v27);
      v30 = (__int128 *)(a4 + 16);
      v31 = (_OWORD *)(a5 + 16);
      v32 = v27;
      do
      {
        v20 = *(v30 - 1);
        v33 = *v30;
        *(v31 - 1) = v20;
        *v31 = v33;
        v30 += 2;
        v31 += 2;
        v32 -= 16;
      }
      while (v32);
      if (v26 == v27)
        return v20;
    }
    v34 = (__int16 *)(a4 + 2 * v24);
    do
    {
      v35 = *v29++;
      LOWORD(v20) = v35;
      *v28++ = v35;
    }
    while (v29 != v34);
  }
  return v20;
}

void sub_23974EA84()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23974EA98(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE4EA0;
  result[1] = v3;
  return result;
}

uint64_t sub_23974EACC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE4EA0;
  a2[1] = v2;
  return result;
}

void sub_23974EAE8(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE4F20;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_23974EC24(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_23974EC90()
{
  return &unk_250AE5008;
}

void sub_23974EC9C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23974ED08()
{
  return 23;
}

uint64_t sub_23974ED10(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_23974ED18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_23974ED34(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_23974EDB8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 23)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23974F088(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_23974F03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_23974F088(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23974F100();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23974F100()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931768);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931768))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_2396277D4();
    sub_23974F304((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23974F304((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931750, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931750, &dword_23940C000);
          __cxa_guard_release(&qword_256931768);
          return &stru_256931750;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931750;
}

void sub_23974F250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931768);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931768);
  _Unwind_Resume(a1);
}

void sub_23974F304(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23974F398(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_23974F3D4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_23974F43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  BOOL v48;
  std::__shared_weak_count *v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int *v64;
  uint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  unint64_t v69;
  _DWORD *v70;
  std::__shared_weak_count *v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  int v76;
  int v77;
  int v78;
  _DWORD *v79;
  unsigned int *v80;
  unsigned int *v81;
  _DWORD *v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t *v86;
  unint64_t *v87;
  unint64_t v88;
  __n128 v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  uint64_t (**v93)();
  uint64_t v94;
  std::__shared_weak_count *v95;
  unsigned int *v96;
  int v97;
  int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  char v102;
  char v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  std::__shared_weak_count *v106;
  _DWORD *v107;
  unsigned int v108;
  unsigned int v109;
  char v110;
  char v111;
  unint64_t v112;
  CFDataRef v113;
  std::__shared_weak_count *v114;
  uint64_t v115;
  const UInt8 *v116;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v104);
  sub_239769054((uint64_t)&v104, (int)&v113);
  v11 = v105;
  if (v105)
  {
    v12 = (unint64_t *)&v105->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v113);
  v15 = sub_23962A55C(&v113);
  if (!v14 && v15 >= 4)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v112 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v104, v22, &v112);
  v23 = BytesPerRow >> 2;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v93 = &off_250AE3CF0;
    v28 = 3;
    if (!(_DWORD)v112)
      v28 = 0;
    if (HIDWORD(v112))
      v29 = (_DWORD)v112 == 0;
    else
      v29 = 1;
    v30 = v23 << 32;
    if (v29)
      v30 = 0;
    v115 = v30 | v28;
    v116 = v14;
    sub_23974FFD8((uint64_t *)&v116, &v112, &v115, (uint64_t)&v94);
    sub_23974FD70((uint64_t)&v93, (uint64_t)&v104);
    v31 = v95;
    if (v95)
    {
      v32 = (unint64_t *)&v95->__shared_owners_;
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      goto LABEL_126;
    }
    goto LABEL_128;
  }
  v34 = v25 | *(_DWORD *)(a3 + 16);
  if (v34 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v48 = v34 != 0;
    if (v24)
      v48 = 1;
    if (!v48)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v49 = v106;
    if (!v106)
      goto LABEL_133;
    goto LABEL_129;
  }
  v93 = &off_250AE3CF0;
  v35 = 3;
  if (!(_DWORD)v112)
    v35 = 0;
  if (HIDWORD(v112))
    v36 = (_DWORD)v112 == 0;
  else
    v36 = 1;
  v37 = v23 << 32;
  if (v36)
    v37 = 0;
  v115 = v37 | v35;
  v116 = v14;
  sub_23974FFD8((uint64_t *)&v116, &v112, &v115, (uint64_t)&v94);
  v38 = v94;
  if (!v94)
    goto LABEL_71;
  v39 = v95;
  if (v95)
  {
    v40 = (unint64_t *)&v95->__shared_owners_;
    do
      v41 = __ldxr(v40);
    while (__stxr(v41 + 1, v40));
    do
      v42 = __ldaxr(v40);
    while (__stlxr(v42 - 1, v40));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
    v38 = v94;
    v43 = v95;
    if (v95)
    {
      v44 = (unint64_t *)&v95->__shared_owners_;
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
      do
        v46 = __ldaxr(v44);
      while (__stlxr(v46 - 1, v44));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
  }
  if (v103)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v38 + 96))(&v116, v38, 0);
    v47 = v105;
    if (!v105)
      goto LABEL_86;
  }
  else
  {
LABEL_71:
    v116 = 0;
    v47 = v105;
    if (!v105)
    {
LABEL_86:
      v115 = 0;
      goto LABEL_87;
    }
  }
  v50 = v106;
  if (v106)
  {
    v51 = (unint64_t *)&v106->__shared_owners_;
    do
      v52 = __ldxr(v51);
    while (__stxr(v52 + 1, v51));
    do
      v53 = __ldaxr(v51);
    while (__stlxr(v53 - 1, v51));
    if (!v53)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
    v47 = v105;
    v54 = v106;
    if (v106)
    {
      v55 = (unint64_t *)&v106->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
      do
        v57 = __ldaxr(v55);
      while (__stlxr(v57 - 1, v55));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
        std::__shared_weak_count::__release_weak(v54);
      }
    }
  }
  if (!v111)
    goto LABEL_86;
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v47->__vftable[2].__on_zero_shared)(&v115, v47, 1);
LABEL_87:
  if (v97)
  {
    v58 = v98;
    if (v98)
    {
      v59 = v99;
      if (v99)
      {
        v60 = v100;
        v61 = v101;
        v62 = v108;
        v63 = v109;
        v64 = v96;
        if (v102 && v96)
        {
          v65 = v94;
          v66 = v95;
          if (v95)
          {
            v67 = (unint64_t *)&v95->__shared_owners_;
            do
              v68 = __ldxr(v67);
            while (__stxr(v68 + 1, v67));
            do
              v69 = __ldaxr(v67);
            while (__stlxr(v69 - 1, v67));
            if (!v69)
            {
              ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
              std::__shared_weak_count::__release_weak(v66);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v65 + 88))(v65, 0, "unknown location");
          v64 = v96;
        }
        v70 = v107;
        if (v110 && v107)
        {
          v71 = v105;
          v72 = v106;
          if (v106)
          {
            v73 = (unint64_t *)&v106->__shared_owners_;
            do
              v74 = __ldxr(v73);
            while (__stxr(v74 + 1, v73));
            do
              v75 = __ldaxr(v73);
            while (__stlxr(v75 - 1, v73));
            if (!v75)
            {
              ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
              std::__shared_weak_count::__release_weak(v72);
            }
          }
          ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v71->__vftable[2].~__shared_weak_count_0)(v71, 1, "unknown location");
          v70 = v107;
        }
        v76 = v58 - 1;
        v77 = v59 - 1;
        if (v59 != 1)
        {
          if (v58 == 1)
          {
            do
            {
              *v70 = bswap32(*v64);
              v70[1] = bswap32(v64[1]);
              v70[2] = bswap32(v64[2]);
              v64 += v61;
              v70 += v63;
              --v77;
            }
            while (v77);
LABEL_118:
            *v70 = bswap32(*v64);
            v70[1] = bswap32(v64[1]);
            v70[2] = bswap32(v64[2]);
            goto LABEL_119;
          }
          v78 = 0;
          v79 = v70 + 2;
          v80 = v64 + 2;
          do
          {
            v81 = v80;
            v82 = v79;
            v83 = v58 - 1;
            do
            {
              *(v82 - 2) = bswap32(*(v81 - 2));
              *(v82 - 1) = bswap32(*(v81 - 1));
              *v82 = bswap32(*v81);
              v82 += v62;
              v81 += v60;
              --v83;
            }
            while (v83);
            *(v82 - 2) = bswap32(*(v81 - 2));
            *(v82 - 1) = bswap32(*(v81 - 1));
            *v82 = bswap32(*v81);
            v64 += v61;
            v70 += v63;
            ++v78;
            v79 += v63;
            v80 += v61;
          }
          while (v78 != v77);
        }
        if (v58 != 1)
        {
          do
          {
            *v70 = bswap32(*v64);
            v70[1] = bswap32(v64[1]);
            v70[2] = bswap32(v64[2]);
            v64 += v60;
            v70 += v62;
            --v76;
          }
          while (v76);
        }
        goto LABEL_118;
      }
    }
  }
LABEL_119:
  v84 = v115;
  v115 = 0;
  if (v84)
    (*(void (**)(uint64_t))(*(_QWORD *)v84 + 8))(v84);
  v85 = (uint64_t)v116;
  v116 = 0;
  if (v85)
    (*(void (**)(uint64_t))(*(_QWORD *)v85 + 8))(v85);
  v31 = v95;
  if (v95)
  {
    v86 = (unint64_t *)&v95->__shared_owners_;
    do
      v33 = __ldaxr(v86);
    while (__stlxr(v33 - 1, v86));
LABEL_126:
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
LABEL_128:
  nullsub_4(&v93);
  v49 = v106;
  if (v106)
  {
LABEL_129:
    v87 = (unint64_t *)&v49->__shared_owners_;
    do
      v88 = __ldaxr(v87);
    while (__stlxr(v88 - 1, v87));
    if (!v88)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
  }
LABEL_133:
  v89 = nullsub_4(&v104);
  v90 = v114;
  if (v114)
  {
    v91 = (unint64_t *)&v114->__shared_owners_;
    do
      v92 = __ldaxr(v91);
    while (__stlxr(v92 - 1, v91));
    if (!v92)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v90->__on_zero_shared)(v90, v89);
      std::__shared_weak_count::__release_weak(v90);
    }
  }
}

void sub_23974FC60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 88);
  *(_QWORD *)(v2 - 88) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  sub_239708200((uint64_t)va);
  sub_23974F3D4((uint64_t)va1);
  sub_239416DA0(v2 - 112);
  _Unwind_Resume(a1);
}

void sub_23974FD0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974FD20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23974FD34(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974FD48(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_23974FD5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_23974FD70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_239750254(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23974FF74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23974FFD8(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _BYTE v19[12];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v17 = 0;
  v18 = 0;
  v4 = *a1;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  *(_QWORD *)&v19[4] = v6;
  *(_DWORD *)v19 = 3;
  v7 = *(_QWORD *)v19;
  *(_DWORD *)v19 = 1;
  *(_QWORD *)&v19[4] = *a3;
  *(_QWORD *)&v11 = v4;
  *((_QWORD *)&v11 + 1) = v7;
  v12 = HIDWORD(v6);
  v13 = *(_QWORD *)v19;
  v14 = *(_DWORD *)&v19[8];
  v15 = v6;
  v16 = *(_QWORD *)&v19[4];
  if (*(_DWORD *)&v19[8] * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239750130(a4, &v17, &v11);
  v8 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_23975011C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239750130(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  _WORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    v9 = a3[2];
    *(_OWORD *)(result + 32) = a3[1];
    *(_OWORD *)(result + 48) = v9;
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v10 = (_WORD *)(result + 64);
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 64) = 0;
    *(_BYTE *)(result + 65) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v13 = *a3;
  v14 = a3[2];
  *(_OWORD *)(result + 32) = a3[1];
  *(_OWORD *)(result + 48) = v14;
  *(_OWORD *)(result + 16) = v13;
  if (!v4)
    goto LABEL_17;
  v10 = (_WORD *)(result + 64);
LABEL_12:
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *v10 = v17 & 0xFF00 | v16;
  return v3;
}

void sub_23975023C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 8))
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void *sub_239750254(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v21 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2397503F4(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_2397503F4(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23975068C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239750628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned int *sub_23975068C(unsigned int *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _QWORD v32[6];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = (uint64_t *)result;
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(char **)(a2 + 24);
    }
    v19 = *(char **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(char **)(a3 + 24);
    }
    v32[2] = 0;
    v32[3] = 0;
    v32[0] = 0;
    v32[1] = 1;
    v32[4] = 1;
    v32[5] = 0;
    return sub_239718ABC((unsigned int *)&v25, (uint64_t)v32, v10, v13, v19);
  }
  return result;
}

void sub_23975083C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239750850(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE5028;
  result[1] = v3;
  return result;
}

uint64_t sub_239750884(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE5028;
  a2[1] = v2;
  return result;
}

void sub_2397508A0(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE50A8;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_2397509DC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_239750A48()
{
  return &unk_250AE5190;
}

void sub_239750A54(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239750AC0()
{
  return 24;
}

uint64_t sub_239750AC8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_239750AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_239750AEC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_239750B70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  std::__shared_weak_count *size;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::logic_error *exception;
  std::string v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 24)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239750E40(a1, &v27);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v27.__r_.__value_.__r.__words[0] = v4;
      v27.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v27.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v28[4] = v16;
  *(_DWORD *)v28 = 3;
  v17 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_QWORD *)&v28[4] = v14 | v12;
  v18 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v19 = *(_QWORD *)v28;
  v20 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v27.__r_.__value_.__l.__size_;
  if (v27.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  *(_QWORD *)a2 = v27.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v17;
  *(_DWORD *)(a2 + 32) = HIDWORD(v16);
  *(_QWORD *)(a2 + 36) = v19;
  *(_DWORD *)(a2 + 44) = v18;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v20;
  if (size)
  {
    v24 = (unint64_t *)&size->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_239750DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_239750E40(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239750EB8();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239750EB8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256931788);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256931788))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_239609A98();
    sub_2397510BC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2397510BC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931770, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931770, &dword_23940C000);
          __cxa_guard_release(&qword_256931788);
          return &stru_256931770;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931770;
}

void sub_239751008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256931788);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256931788);
  _Unwind_Resume(a1);
}

void sub_2397510BC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239751150(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_23975118C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  size_t BytesPerRow;
  uint64_t v22;
  __n128 v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  size_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  __n128 v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t (**v42)();
  uint64_t v43;
  std::__shared_weak_count *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  std::__shared_weak_count *v47;
  unsigned int v48;
  unint64_t v49;
  CFDataRef v50;
  std::__shared_weak_count *v51;
  uint64_t v52;
  const UInt8 *v53;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v45);
  sub_239769054((uint64_t)&v45, (int)&v50);
  v11 = v46;
  if (v46)
  {
    v12 = (unint64_t *)&v46->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v50);
  v15 = sub_23962A55C(&v50);
  if (!v14 && v15)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v49 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v48 = BytesPerRow;
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v45, v22, &v49);
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v42 = &off_250AE1B60;
    if (HIDWORD(v49))
      v28 = (_DWORD)v49 == 0;
    else
      v28 = 1;
    v29 = BytesPerRow << 32;
    if (v28)
      v29 = 0;
    v52 = v29 | (4 * ((_DWORD)v49 != 0));
    v53 = v14;
    sub_239645C0C((uint64_t *)&v53, &v49, &v52, (uint64_t)&v43);
    sub_239751688((uint64_t)&v42, (uint64_t)&v45);
    v30 = v44;
    if (v44)
    {
      v31 = (unint64_t *)&v44->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    v23 = nullsub_4(&v42);
  }
  else
  {
    v33 = v25 | *(_DWORD *)(a3 + 16);
    if (!v33 && !*(_DWORD *)(a3 + 20) && v24 == 1)
    {
      sub_239751600(&v42, (uint64_t)v14, &v49, &v48);
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v28 = v24 == 0;
    v34 = v33 != 0;
    if (!v28)
      v34 = 1;
    if (!v34)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  v35 = v47;
  if (v47)
  {
    v36 = (unint64_t *)&v47->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v35->__on_zero_shared)(v35, v23);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
  v38 = nullsub_4(&v45);
  v39 = v51;
  if (v51)
  {
    v40 = (unint64_t *)&v51->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v39->__on_zero_shared)(v39, v38);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
}

void sub_239751554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;

  sub_239643D34((uint64_t)&a9);
  sub_239643A8C((uint64_t)&a19);
  sub_239416DA0(v19 - 96);
  _Unwind_Resume(a1);
}

void sub_23975159C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_2397515B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2397515C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_2397515D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_2397515EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1 - 96);
  _Unwind_Resume(a1);
}

_QWORD *sub_239751600(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *a1 = &off_250AE1B60;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (4 * (*a3 != 0));
  v9 = a2;
  sub_239645C0C(&v9, a3, &v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_239751674(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239751688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_2397518F0(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23975188C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397518F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_239751A90(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_239751A90(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239751CC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239751D2C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239751D40(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE51B0;
  result[1] = v3;
  return result;
}

uint64_t sub_239751D74(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE51B0;
  a2[1] = v2;
  return result;
}

void sub_239751D90(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE1878;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_239751ECC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_239751F38()
{
  return &unk_250AE5220;
}

void sub_239751F44(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 25)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239752210(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2397521C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_239752210(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239752288();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239752288()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569317A8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569317A8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23964E22C();
    sub_23975248C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23975248C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256931790, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256931790, &dword_23940C000);
          __cxa_guard_release(&qword_2569317A8);
          return &stru_256931790;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256931790;
}

void sub_2397523D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569317A8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569317A8);
  _Unwind_Resume(a1);
}

void sub_23975248C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239752520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_23975255C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  size_t BytesPerRow;
  uint64_t v22;
  __n128 v23;
  int v24;
  int v25;
  int v26;
  _BOOL4 v27;
  _BOOL4 v28;
  BOOL v29;
  size_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  int v34;
  BOOL v35;
  BOOL v36;
  size_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 *v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t v65;
  unsigned __int8 *v66;
  std::__shared_weak_count *v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  int v73;
  int v74;
  unsigned __int8 *v75;
  unsigned __int8 *v76;
  unsigned __int8 *v77;
  unsigned __int8 *v78;
  unsigned __int8 *v79;
  int v80;
  unsigned __int8 *v81;
  unsigned __int8 *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t *v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  __n128 v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 *v98;
  uint64_t (**v99)();
  uint64_t v100;
  std::__shared_weak_count *v101;
  unsigned __int8 *v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  char v108;
  char v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  std::__shared_weak_count *v112;
  unsigned __int8 *v113;
  unsigned int v114;
  unsigned int v115;
  char v116;
  char v117;
  unsigned int v118;
  unint64_t v119;
  CFDataRef v120;
  std::__shared_weak_count *v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  unsigned __int8 *v126;
  unsigned __int8 *v127[2];

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v110);
  sub_239769054((uint64_t)&v110, (int)&v120);
  v11 = v111;
  if (v111)
  {
    v12 = (unint64_t *)&v111->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v120);
  v15 = sub_23962A55C(&v120);
  if (!v14 && v15)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v119 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v118 = BytesPerRow;
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v110, v22, &v119);
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = *(_DWORD *)(a3 + 20);
  v27 = v24 == 0;
  v28 = v25 == 0;
  if (!v25)
    v28 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v27 = v28;
  if (!v27)
  {
    v34 = v25 | *(_DWORD *)(a3 + 16);
    if (!v34 && !v26 && v24 == 1)
    {
      sub_239752EE4(&v99, (uint64_t)v14, &v119, &v118);
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v29 = v24 == 0;
    v35 = v34 != 0;
    if (!v29)
      v35 = 1;
    if (v35)
      goto LABEL_123;
    if (v26 != 4)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    *(_QWORD *)&v124 = v14;
    v99 = &off_250AE1A68;
    if (HIDWORD(v119))
      v36 = (_DWORD)v119 == 0;
    else
      v36 = 1;
    v37 = BytesPerRow << 32;
    if (v36)
      v37 = 0;
    v127[0] = (unsigned __int8 *)(v37 | (4 * ((_DWORD)v119 != 0)));
    sub_239645718((uint64_t *)&v124, &v119, v127, (uint64_t)&v100);
    v38 = v100;
    if (!v100)
      goto LABEL_66;
    v39 = v101;
    if (v101)
    {
      v40 = (unint64_t *)&v101->__shared_owners_;
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
      do
        v42 = __ldaxr(v40);
      while (__stlxr(v42 - 1, v40));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
      }
      v38 = v100;
      v43 = v101;
      if (v101)
      {
        v44 = (unint64_t *)&v101->__shared_owners_;
        do
          v45 = __ldxr(v44);
        while (__stxr(v45 + 1, v44));
        do
          v46 = __ldaxr(v44);
        while (__stlxr(v46 - 1, v44));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
          std::__shared_weak_count::__release_weak(v43);
        }
      }
    }
    if (v109)
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v38 + 96))(&v123, v38, 0);
      v47 = v111;
      if (!v111)
        goto LABEL_81;
    }
    else
    {
LABEL_66:
      v123 = 0;
      v47 = v111;
      if (!v111)
        goto LABEL_81;
    }
    v48 = v112;
    if (v112)
    {
      v49 = (unint64_t *)&v112->__shared_owners_;
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (!v51)
      {
        ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
        std::__shared_weak_count::__release_weak(v48);
      }
      v47 = v111;
      v52 = v112;
      if (v112)
      {
        v53 = (unint64_t *)&v112->__shared_owners_;
        do
          v54 = __ldxr(v53);
        while (__stxr(v54 + 1, v53));
        do
          v55 = __ldaxr(v53);
        while (__stlxr(v55 - 1, v53));
        if (!v55)
        {
          ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
          std::__shared_weak_count::__release_weak(v52);
        }
      }
    }
    if (v117)
    {
      ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v47->__vftable[2].__on_zero_shared)(&v122, v47, 1);
LABEL_82:
      if (!v103)
        goto LABEL_113;
      v56 = v104;
      if (!v104)
        goto LABEL_113;
      v57 = v105;
      if (!v105)
        goto LABEL_113;
      v58 = v106;
      v59 = v114;
      v96 = v115;
      v97 = v107;
      v60 = v102;
      if (v108 && v102)
      {
        v61 = v100;
        v62 = v101;
        if (v101)
        {
          v63 = (unint64_t *)&v101->__shared_owners_;
          do
            v64 = __ldxr(v63);
          while (__stxr(v64 + 1, v63));
          do
            v65 = __ldaxr(v63);
          while (__stlxr(v65 - 1, v63));
          if (!v65)
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v62);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v61 + 88))(v61, 0, "unknown location");
        v60 = v102;
      }
      v66 = v113;
      if (v116 && v113)
      {
        v67 = v111;
        v68 = v112;
        if (v112)
        {
          v69 = (unint64_t *)&v112->__shared_owners_;
          do
            v70 = __ldxr(v69);
          while (__stxr(v70 + 1, v69));
          do
            v71 = __ldaxr(v69);
          while (__stlxr(v71 - 1, v69));
          if (!v71)
          {
            ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
            std::__shared_weak_count::__release_weak(v68);
          }
        }
        ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v67->__vftable[2].~__shared_weak_count_0)(v67, 1, "unknown location");
        v66 = v113;
      }
      v72 = v56 - 1;
      v124 = 0u;
      v125 = 0u;
      v73 = v57 - 1;
      if (v57 != 1)
      {
        if (v56 == 1)
        {
          v93 = 0;
          v94 = 0;
          do
          {
            v126 = &v66[v93];
            v127[0] = &v60[v94];
            *(_QWORD *)&v124 = &v60[v94];
            *(_QWORD *)&v125 = &v66[v93];
            sub_23975360C((unsigned __int8 **)&v124, v127, &v126);
            v94 += v97;
            v93 += v96;
            --v73;
          }
          while (v73);
          v126 = &v66[v93];
          v127[0] = &v60[v94];
          *(_QWORD *)&v124 = &v60[v94];
          *(_QWORD *)&v125 = &v66[v93];
LABEL_112:
          sub_23975360C((unsigned __int8 **)&v124, v127, &v126);
LABEL_113:
          v83 = v122;
          v122 = 0;
          if (v83)
            (*(void (**)(uint64_t))(*(_QWORD *)v83 + 8))(v83);
          v84 = v123;
          v123 = 0;
          if (v84)
            (*(void (**)(uint64_t))(*(_QWORD *)v84 + 8))(v84);
          v31 = v101;
          if (!v101)
            goto LABEL_122;
          v85 = (unint64_t *)&v101->__shared_owners_;
          do
            v33 = __ldaxr(v85);
          while (__stlxr(v33 - 1, v85));
          goto LABEL_120;
        }
        v74 = 0;
        v75 = &v60[v58];
        v76 = &v66[v59];
        v95 = v73;
        do
        {
          v126 = v66;
          v127[0] = v60;
          v77 = v76;
          v78 = v60;
          v79 = v75;
          v80 = v72;
          v98 = v78;
          *(_QWORD *)&v124 = v78;
          *(_QWORD *)&v125 = v66;
          do
          {
            sub_23975360C((unsigned __int8 **)&v124, v127, &v126);
            v126 = v77;
            v127[0] = v79;
            v79 += v58;
            v77 += v59;
            --v80;
          }
          while (v80);
          sub_23975360C((unsigned __int8 **)&v124, v127, &v126);
          v60 = &v98[v97];
          v66 += v96;
          ++v74;
          v75 += v97;
          v76 += v96;
        }
        while (v74 != v95);
      }
      v126 = v66;
      v127[0] = v60;
      *(_QWORD *)&v124 = v60;
      *(_QWORD *)&v125 = v66;
      if (v72)
      {
        v81 = &v60[v58];
        v82 = &v66[v59];
        do
        {
          sub_23975360C((unsigned __int8 **)&v124, v127, &v126);
          v126 = v82;
          v127[0] = v81;
          v81 += v58;
          v82 += v59;
          --v72;
        }
        while (v72);
      }
      goto LABEL_112;
    }
LABEL_81:
    v122 = 0;
    goto LABEL_82;
  }
  *(_QWORD *)&v124 = v14;
  v99 = &off_250AE1A68;
  if (HIDWORD(v119))
    v29 = (_DWORD)v119 == 0;
  else
    v29 = 1;
  v30 = BytesPerRow << 32;
  if (v29)
    v30 = 0;
  v127[0] = (unsigned __int8 *)(v30 | (4 * ((_DWORD)v119 != 0)));
  sub_239645718((uint64_t *)&v124, &v119, v127, (uint64_t)&v100);
  sub_239752F6C((uint64_t)&v99, (uint64_t)&v110);
  v31 = v101;
  if (!v101)
    goto LABEL_122;
  v32 = (unint64_t *)&v101->__shared_owners_;
  do
    v33 = __ldaxr(v32);
  while (__stlxr(v33 - 1, v32));
LABEL_120:
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
    std::__shared_weak_count::__release_weak(v31);
  }
LABEL_122:
  v23 = nullsub_4(&v99);
LABEL_123:
  v86 = v112;
  if (v112)
  {
    v87 = (unint64_t *)&v112->__shared_owners_;
    do
      v88 = __ldaxr(v87);
    while (__stlxr(v88 - 1, v87));
    if (!v88)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v86->__on_zero_shared)(v86, v23);
      std::__shared_weak_count::__release_weak(v86);
    }
  }
  v89 = nullsub_4(&v110);
  v90 = v121;
  if (v121)
  {
    v91 = (unint64_t *)&v121->__shared_owners_;
    do
      v92 = __ldaxr(v91);
    while (__stlxr(v92 - 1, v91));
    if (!v92)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v90->__on_zero_shared)(v90, v89);
      std::__shared_weak_count::__release_weak(v90);
    }
  }
}

void sub_239752DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v7 = *(_QWORD *)(v5 - 152);
  *(_QWORD *)(v5 - 152) = 0;
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  sub_239643CCC((uint64_t)va);
  sub_239643A24((uint64_t)va1);
  sub_239416DA0(v5 - 176);
  _Unwind_Resume(a1);
}

_QWORD *sub_239752EE4(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *a1 = &off_250AE1A68;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (4 * (*a3 != 0));
  v9 = a2;
  sub_239645718(&v9, a3, &v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_239752F58(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239752F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_39;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_39;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_39:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v25 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_32;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
    goto LABEL_32;
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_40;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_40;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_30;
  }
  else
  {
LABEL_40:
    if (*(_BYTE *)(a2 + 73))
    {
LABEL_30:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v24, v13, 1);
      goto LABEL_33;
    }
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  sub_2397531D4(a1, a2);
  v22 = v24;
  v24 = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239753170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_2397531D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 52) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && result)
    {
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(std::__shared_weak_count **)(a2 + 16);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "unknown location");
      result = *(void **)(a2 + 24);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v21 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_239753374(a1, a2, (unsigned int *)&v21);
  }
  return result;
}

uint64_t sub_239753374(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_23949E424(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2397535A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23975360C(unsigned __int8 **a1, unsigned __int8 **a2, unsigned __int8 **a3)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t result;
  float v7;
  uint64_t v8;
  unsigned int v9;
  float v10;
  int v11;
  unsigned int v12;
  unsigned int v14;
  float v15;
  int v16;
  unsigned int v17;
  unsigned int v19;
  float v20;
  int v21;
  unsigned int v22;

  v4 = *a2;
  *a1 = *a2;
  v5 = *a3;
  a1[2] = *a3;
  result = v4[3];
  if ((_DWORD)result == 255)
  {
    if (!v5)
      sub_239EBF50C(result, (uint64_t)a2);
    *(_DWORD *)v5 = *(_DWORD *)v4;
  }
  else if (v4[3])
  {
    v7 = 255.0 / (float)result;
    result = (uint64_t)sub_239769304(result);
    v9 = **a1;
    v10 = floorf(v7 * (float)v9);
    if (v10 > 255.0)
      v10 = 255.0;
    v11 = (int)v10;
    v12 = *(unsigned __int8 *)(result + (int)v10);
    if (v12 != v9)
    {
      if (v12 >= v9 || v11 == 255)
      {
        if (v12 <= v9 || v11 == 0)
          sub_239EC244C(result, v8);
        LOBYTE(v11) = v11 - 1;
      }
      else
      {
        LOBYTE(v11) = v11 + 1;
      }
    }
    *a1[2] = v11;
    v14 = (*a1)[1];
    v15 = floorf(v7 * (float)v14);
    if (v15 > 255.0)
      v15 = 255.0;
    v16 = (int)v15;
    v17 = *(unsigned __int8 *)(result + (int)v15);
    if (v17 != v14)
    {
      if (v17 >= v14 || v16 == 255)
      {
        if (v17 <= v14 || v16 == 0)
          sub_239EC244C(result, v8);
        LOBYTE(v16) = v16 - 1;
      }
      else
      {
        LOBYTE(v16) = v16 + 1;
      }
    }
    a1[2][1] = v16;
    v19 = (*a1)[2];
    v20 = floorf(v7 * (float)v19);
    if (v20 > 255.0)
      v20 = 255.0;
    v21 = (int)v20;
    v22 = *(unsigned __int8 *)(result + (int)v20);
    if (v22 != v19)
    {
      if (v22 >= v19 || v21 == 255)
      {
        if (v22 <= v19 || v21 == 0)
          sub_239EC244C(result, v8);
        LOBYTE(v21) = v21 - 1;
      }
      else
      {
        LOBYTE(v21) = v21 + 1;
      }
    }
    a1[2][2] = v21;
    a1[2][3] = (*a1)[3];
  }
  else
  {
    if (!v5)
      sub_239EBF50C(result, (uint64_t)a2);
    *(_DWORD *)v5 = 0;
  }
  return result;
}

void sub_2397537D8()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2397537EC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AE5240;
  result[1] = v3;
  return result;
}

uint64_t sub_239753820(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AE5240;
  a2[1] = v2;
  return result;
}

void sub_23975383C(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int16 v8;
  _OWORD *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 + 56) != *a2 || *(_DWORD *)(v3 + 60) != a2[1])
    sub_239EC2420(a1, (uint64_t)a2);
  *(_QWORD *)a3 = &off_250AE1760;
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(std::__shared_weak_count **)(v3 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_WORD *)(v3 + 72);
    v9 = (_OWORD *)(v3 + 24);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v9[1];
    *(_OWORD *)(a3 + 24) = *v9;
    *(_OWORD *)(a3 + 40) = v11;
    *(_OWORD *)(a3 + 56) = v9[2];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = v5;
    *(_WORD *)(a3 + 72) = v8;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v15 = *(_WORD *)(v3 + 72);
    *(_QWORD *)(a3 + 8) = v4;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v3 + 56);
    *(_WORD *)(a3 + 72) = v15;
  }
}

uint64_t sub_239753978(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2397539E4()
{
  return &unk_250AE52B0;
}

void sub_2397539F0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int16 v21;
  std::__shared_weak_count *size;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::string v28;
  _BYTE v29[12];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 29)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239753CBC(a1, &v28);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v28.__r_.__value_.__r.__words[0] = v4;
      v28.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_QWORD *)&v29[4] = v17;
  *(_DWORD *)v29 = 4;
  v18 = *(_QWORD *)v29;
  *(_DWORD *)v29 = 1;
  *(_QWORD *)&v29[4] = v16;
  v19 = HIDWORD(v15);
  if (HIDWORD(v17) * (_DWORD)v19 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *(_QWORD *)v29;
  v21 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v28.__r_.__value_.__l.__size_;
  if (v28.__r_.__value_.__l.__size_)
  {
    v23 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  *(_QWORD *)a2 = v28.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = HIDWORD(v17);
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v21;
  if (size)
  {
    v25 = (unint64_t *)&size->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_239753C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_239753CBC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239753D34();
  v5 = sub_23941B830();
  v6 = *(_DWORD *)(a1 + 48);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239753D34()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569317C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569317C8))
  {
    sub_23941A4FC(v7, "ImageView");
    v2 = sub_23962144C();
    sub_239753F38((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239753F38((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569317B0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569317B0, &dword_23940C000);
          __cxa_guard_release(&qword_2569317C8);
          return &stru_2569317B0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569317B0;
}

void sub_239753E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569317C8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569317C8);
  _Unwind_Resume(a1);
}

void sub_239753F38(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239753FCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

double sub_239754008(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

void sub_239754070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const UInt8 *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  CGImageRef v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int BytesPerRow;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _BOOL4 v27;
  BOOL v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  BOOL v46;
  std::__shared_weak_count *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int16 *v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  _WORD *v68;
  std::__shared_weak_count *v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  int v75;
  int v76;
  _WORD *v77;
  unsigned __int16 *v78;
  unsigned __int16 *v79;
  _WORD *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t *v84;
  unint64_t *v85;
  unint64_t v86;
  __n128 v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  uint64_t (**v91)();
  uint64_t v92;
  std::__shared_weak_count *v93;
  unsigned __int16 *v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  char v100;
  char v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  std::__shared_weak_count *v104;
  _WORD *v105;
  unsigned int v106;
  unsigned int v107;
  char v108;
  char v109;
  unint64_t v110;
  CFDataRef v111;
  std::__shared_weak_count *v112;
  uint64_t v113;
  const UInt8 *v114;

  v7 = *(CGImageRef *)a2;
  v6 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  sub_23973888C(a2, (int)&v102);
  sub_239769054((uint64_t)&v102, (int)&v111);
  v11 = v103;
  if (v103)
  {
    v12 = (unint64_t *)&v103->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = sub_23962A554(&v111);
  v15 = sub_23962A55C(&v111);
  if (!v14 && v15 >= 2)
  {
    sub_239A444D4((uint64_t)"unknown file", 248, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v110 = sub_239738918(a2);
  v17 = *(CGImageRef *)a2;
  v16 = *(std::__shared_weak_count **)(a2 + 8);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (!v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 187, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  BytesPerRow = CGImageGetBytesPerRow(*(CGImageRef *)a2);
  v22 = *(_QWORD *)(a1 + 24);
  if (!v22)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t *))(*(_QWORD *)v22 + 48))(&v102, v22, &v110);
  v23 = BytesPerRow >> 1;
  v24 = *(_DWORD *)(a3 + 8);
  v25 = *(_DWORD *)(a3 + 12);
  v26 = v24 == 0;
  v27 = v25 == 0;
  if (!v25)
    v27 = *(_QWORD *)(a3 + 16) == 0;
  if (!v24)
    v26 = v27;
  if (v26)
  {
    v91 = &off_250AE3DB0;
    if (HIDWORD(v110))
      v28 = (_DWORD)v110 == 0;
    else
      v28 = 1;
    v29 = v23 << 32;
    if (v28)
      v29 = 0;
    v113 = v29 | (4 * ((_DWORD)v110 != 0));
    v114 = v14;
    sub_239754C90((uint64_t *)&v114, &v110, &v113, (uint64_t)&v92);
    sub_239754A28((uint64_t)&v91, (uint64_t)&v102);
    v30 = v93;
    if (v93)
    {
      v31 = (unint64_t *)&v93->__shared_owners_;
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      goto LABEL_122;
    }
    goto LABEL_124;
  }
  v33 = v25 | *(_DWORD *)(a3 + 16);
  if (v33 || *(_DWORD *)(a3 + 20) || v24 != 1)
  {
    v46 = v33 != 0;
    if (v24)
      v46 = 1;
    if (!v46)
    {
      sub_239A444D4((uint64_t)"unknown file", 549, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v47 = v104;
    if (!v104)
      goto LABEL_129;
    goto LABEL_125;
  }
  v91 = &off_250AE3DB0;
  if (HIDWORD(v110))
    v34 = (_DWORD)v110 == 0;
  else
    v34 = 1;
  v35 = v23 << 32;
  if (v34)
    v35 = 0;
  v113 = v35 | (4 * ((_DWORD)v110 != 0));
  v114 = v14;
  sub_239754C90((uint64_t *)&v114, &v110, &v113, (uint64_t)&v92);
  v36 = v92;
  if (!v92)
    goto LABEL_67;
  v37 = v93;
  if (v93)
  {
    v38 = (unint64_t *)&v93->__shared_owners_;
    do
      v39 = __ldxr(v38);
    while (__stxr(v39 + 1, v38));
    do
      v40 = __ldaxr(v38);
    while (__stlxr(v40 - 1, v38));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
    v36 = v92;
    v41 = v93;
    if (v93)
    {
      v42 = (unint64_t *)&v93->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
  }
  if (v101)
  {
    (*(void (**)(const UInt8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v36 + 96))(&v114, v36, 0);
    v45 = v103;
    if (!v103)
      goto LABEL_82;
  }
  else
  {
LABEL_67:
    v114 = 0;
    v45 = v103;
    if (!v103)
    {
LABEL_82:
      v113 = 0;
      goto LABEL_83;
    }
  }
  v48 = v104;
  if (v104)
  {
    v49 = (unint64_t *)&v104->__shared_owners_;
    do
      v50 = __ldxr(v49);
    while (__stxr(v50 + 1, v49));
    do
      v51 = __ldaxr(v49);
    while (__stlxr(v51 - 1, v49));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
    v45 = v103;
    v52 = v104;
    if (v104)
    {
      v53 = (unint64_t *)&v104->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      do
        v55 = __ldaxr(v53);
      while (__stlxr(v55 - 1, v53));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }
  }
  if (!v109)
    goto LABEL_82;
  ((void (*)(uint64_t *__return_ptr, std::__shared_weak_count *, uint64_t))v45->__vftable[2].__on_zero_shared)(&v113, v45, 1);
LABEL_83:
  if (v95)
  {
    v56 = v96;
    if (v96)
    {
      v57 = v97;
      if (v97)
      {
        v58 = v98;
        v59 = v99;
        v60 = v106;
        v61 = v107;
        v62 = v94;
        if (v100 && v94)
        {
          v63 = v92;
          v64 = v93;
          if (v93)
          {
            v65 = (unint64_t *)&v93->__shared_owners_;
            do
              v66 = __ldxr(v65);
            while (__stxr(v66 + 1, v65));
            do
              v67 = __ldaxr(v65);
            while (__stlxr(v67 - 1, v65));
            if (!v67)
            {
              ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
              std::__shared_weak_count::__release_weak(v64);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v63 + 88))(v63, 0, "unknown location");
          v62 = v94;
        }
        v68 = v105;
        if (v108 && v105)
        {
          v69 = v103;
          v70 = v104;
          if (v104)
          {
            v71 = (unint64_t *)&v104->__shared_owners_;
            do
              v72 = __ldxr(v71);
            while (__stxr(v72 + 1, v71));
            do
              v73 = __ldaxr(v71);
            while (__stlxr(v73 - 1, v71));
            if (!v73)
            {
              ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
              std::__shared_weak_count::__release_weak(v70);
            }
          }
          ((void (*)(std::__shared_weak_count *, uint64_t, const char *))v69->__vftable[2].~__shared_weak_count_0)(v69, 1, "unknown location");
          v68 = v105;
        }
        v74 = v56 - 1;
        v75 = v57 - 1;
        if (v57 != 1)
        {
          if (v56 == 1)
          {
            do
            {
              *v68 = bswap32(*v62) >> 16;
              v68[1] = bswap32(v62[1]) >> 16;
              v68[2] = bswap32(v62[2]) >> 16;
              v68[3] = bswap32(v62[3]) >> 16;
              v62 += v59;
              v68 += v61;
              --v75;
            }
            while (v75);
LABEL_114:
            *v68 = bswap32(*v62) >> 16;
            v68[1] = bswap32(v62[1]) >> 16;
            v68[2] = bswap32(v62[2]) >> 16;
            v68[3] = bswap32(v62[3]) >> 16;
            goto LABEL_115;
          }
          v76 = 0;
          v77 = v68 + 2;
          v78 = v62 + 2;
          do
          {
            v79 = v78;
            v80 = v77;
            v81 = v56 - 1;
            do
            {
              *(v80 - 2) = bswap32(*(v79 - 2)) >> 16;
              *(v80 - 1) = bswap32(*(v79 - 1)) >> 16;
              *v80 = bswap32(*v79) >> 16;
              v80[1] = bswap32(v79[1]) >> 16;
              v80 += v60;
              v79 += v58;
              --v81;
            }
            while (v81);
            *(v80 - 2) = bswap32(*(v79 - 2)) >> 16;
            *(v80 - 1) = bswap32(*(v79 - 1)) >> 16;
            *v80 = bswap32(*v79) >> 16;
            v80[1] = bswap32(v79[1]) >> 16;
            v62 += v59;
            v68 += v61;
            ++v76;
            v77 += v61;
            v78 += v59;
          }
          while (v76 != v75);
        }
        if (v56 != 1)
        {
          do
          {
            *v68 = bswap32(*v62) >> 16;
            v68[1] = bswap32(v62[1]) >> 16;
            v68[2] = bswap32(v62[2]) >> 16;
            v68[3] = bswap32(v62[3]) >> 16;
            v62 += v58;
            v68 += v60;
            --v74;
          }
          while (v74);
        }
        goto LABEL_114;
      }
    }
  }
LABEL_115:
  v82 = v113;
  v113 = 0;
  if (v82)
    (*(void (**)(uint64_t))(*(_QWORD *)v82 + 8))(v82);
  v83 = (uint64_t)v114;
  v114 = 0;
  if (v83)
    (*(void (**)(uint64_t))(*(_QWORD *)v83 + 8))(v83);
  v30 = v93;
  if (v93)
  {
    v84 = (unint64_t *)&v93->__shared_owners_;
    do
      v32 = __ldaxr(v84);
    while (__stlxr(v32 - 1, v84));
LABEL_122:
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
LABEL_124:
  nullsub_4(&v91);
  v47 = v104;
  if (v104)
  {
LABEL_125:
    v85 = (unint64_t *)&v47->__shared_owners_;
    do
      v86 = __ldaxr(v85);
    while (__stlxr(v86 - 1, v85));
    if (!v86)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
LABEL_129:
  v87 = nullsub_4(&v102);
  v88 = v112;
  if (v112)
  {
    v89 = (unint64_t *)&v112->__shared_owners_;
    do
      v90 = __ldaxr(v89);
    while (__stlxr(v90 - 1, v89));
    if (!v90)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v88->__on_zero_shared)(v88, v87);
      std::__shared_weak_count::__release_weak(v88);
    }
  }
}

