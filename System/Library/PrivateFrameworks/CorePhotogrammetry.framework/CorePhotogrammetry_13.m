double sub_2398CED64@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CA0FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6778;
  sub_2397FC2BC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398CEE78(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398CEE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CEE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CEE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE5A00;
  sub_239766F78(a2, &v11);
  sub_2398CEF6C(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397671E4(a2, (uint64_t)(a3 + 1));
}

void sub_2398CEF30(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398CEF44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975BEF4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398CEF58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CEF6C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397F4F98(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398CF1A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398CF204(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398CF228@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398CF30C(a1, a2);
}

double sub_2398CF234@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398CFB18(a1, a2);
}

double sub_2398CF240@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D07AC(a1, a2);
}

double sub_2398CF24C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D144C(a1, a2);
}

double sub_2398CF258@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D1AD0(a1, a2);
}

double sub_2398CF264@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D2778(a1, a2);
}

double sub_2398CF270@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D2EC4(a1, a2);
}

double sub_2398CF27C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D3610(a1, a2);
}

uint64_t sub_2398CF30C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398CF518(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC5A8;
  sub_2397FD434((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398CF420(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398CF3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CF404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CF420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEAFA0;
  sub_2397FE5E8(a2, &v12);
  sub_2398CF7A8(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397FE854(a2, (uint64_t)(a3 + 1));
}

void sub_2398CF4DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398CF4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BDCA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398CF504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398CF518(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 27;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398CF658((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397FFA78((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398CF61C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398CF644(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398CF658(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 27);
  *a2 = &off_250AEC6A0;
  sub_2397FEB58((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398CF770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398CF794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CF7A8(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398CF97C(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398CF958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398CF97C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        a3.n128_f64[0] = sub_2397FDF14(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_u64[0] = sub_2397FE3D8((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2398CFAF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398CFB18@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CF518(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3B18;
  sub_2397E61D4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398CFC2C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398CFBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CFC10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CFC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1878;
  sub_239763C3C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF390[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970AF38(a2, (uint64_t)(a4 + 1));
}

void sub_2398CFD18(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398CFD2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398CFD40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A8C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398CFD54(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398CFD9C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398CFD64(uint64_t **a1, uint64_t a2)
{
  return sub_2398D043C(**a1, (*a1)[1], a2);
}

uint64_t sub_2398CFD74(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398CFEEC(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398CFD9C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  unsigned int v12;
  double v13;
  double v14;
  unsigned int v15;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  double v24;
  double v25;
  double v26;
  unint64_t v27;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v12 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = 255;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v12 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v13 = *(double *)(a3 + 24);
  if (v13 < 0.0)
    v13 = 0.0;
  v12 = (int)v13;
  v14 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v14 = *(double *)(a3 + 32);
  v15 = (int)v14;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v15;
  if (_ZF)
    return sub_2398CFEEC(a1, a2, (uint64_t)v23, _Q0);
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v25 = (double)v12;
  v26 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v15 - (double)v12;
  v24 = _Q0.n128_f64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_2398D0194(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_2398CFEEC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239800914((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D0130(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D0194(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_239800E98(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D03D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D043C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  char v19;
  char v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 23544;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_2398D0504(a1, a2, (uint64_t)v16);
}

uint64_t sub_2398D0504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2398017B8(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398D0748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D07AC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CF518(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC468;
  sub_2397F349C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D08C0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D0888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D08A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D08C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB570;
  sub_2397F412C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF3A8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397F4398(a2, (uint64_t)(a4 + 1));
}

void sub_2398D09AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D09C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D09D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C356C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D09E8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398D0A30(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398D09F8(uint64_t **a1, uint64_t a2)
{
  return sub_2398D10DC(**a1, (*a1)[1], a2);
}

uint64_t sub_2398D0A08(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398D0B8C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398D0A30(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v18;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  double v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = -65536;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
LABEL_14:
  v16 = (unsigned __int16)v15;
  __asm { FCVT            S2, H0 }
  v18 = HIWORD(v15);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v18;
  if (_ZF)
    return sub_2398D0B8C(a1, a2, (uint64_t)v26, _Q0);
  __asm { FCVT            D0, H0 }
  v30 = _D0;
  __asm { FCVT            D1, H1 }
  v28 = (double)v16;
  v29 = 1.0 / (_D1 - _D0);
  v27 = (double)v18 - (double)v16;
  v26[0] = &v30;
  v26[1] = &v29;
  v25[0] = &v28;
  v25[1] = &v27;
  v24[0] = v26;
  v24[1] = v25;
  return sub_2398D0E34(a1, a2, (uint64_t)v24);
}

uint64_t sub_2398D0B8C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23980240C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D0DD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D0E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_23980295C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398D1078(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D10DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 31744;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_2398D11A4(a1, a2, (uint64_t)v16);
}

uint64_t sub_2398D11A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_239803184(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398D13E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D144C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CF518(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC6A0;
  sub_2397FEB58((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D1598(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397FFA78((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D153C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D1560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D157C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D1598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v17, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
LABEL_17:
  sub_239622218(a2, &v16);
  v13.n128_u64[0] = sub_2398D173C(a1, a2);
  v14 = v16;
  v16 = 0;
  if (v14)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v14 + 8))(v14, v13.n128_f32[0]);
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v13);
  return result;
}

void sub_2398D16D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

__int16 sub_2398D173C@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  __int16 *v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  __int16 v26;
  uint64_t v28;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 != *(_DWORD *)(a2 + 108) || v4 != v5)
  {
    v28 = (4 * *(_DWORD *)(a1 + 56));
    sub_2398D1904(a1, a2, &v28);
    return v7;
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(_QWORD *)(v3 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v16)
  {
    a1 = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 32);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v17 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v17 < 0xF || (unint64_t)(v16 - v9) < 0x20)
    {
      v20 = (_WORD *)v16;
      v21 = (__int16 *)v9;
    }
    else
    {
      v18 = v17 + 1;
      v19 = (v17 + 1) & 0xFFFFFFFFFFFFFFF0;
      v20 = (_WORD *)(v16 + 2 * v19);
      v21 = (__int16 *)(v9 + 2 * v19);
      v22 = (__int128 *)(v9 + 16);
      v23 = (_OWORD *)(v16 + 16);
      v24 = v19;
      do
      {
        v7 = *(v22 - 1);
        v25 = *v22;
        *(v23 - 1) = v7;
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 16;
      }
      while (v24);
      if (v18 == v19)
        return v7;
    }
    do
    {
      v26 = *v21++;
      LOWORD(v7) = v26;
      *v20++ = v26;
    }
    while (v21 != (__int16 *)(v9 + 2 * v8));
  }
  return v7;
}

uint64_t sub_2398D1904(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v19 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v19, v6, 0);
LABEL_17:
  sub_239622218(a2, &v18);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    v15.n128_f64[0] = sub_2397DDAD4(a3, a1, a2);
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v16 + 8))(v16, v15);
  result = v19;
  v19 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398D1A6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398D1AD0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CF518(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC8D8;
  sub_239808068((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D1BE4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D1BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D1BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D1BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1E48;
  sub_239808CE0(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF3C0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239808F4C(a2, (uint64_t)(a4 + 1));
}

void sub_2398D1CD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D1CE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D1CF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643FDC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D1D0C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398D1D54(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398D1D1C(uint64_t **a1, uint64_t a2)
{
  return sub_2398D2408(**a1, (*a1)[1], a2);
}

uint64_t sub_2398D1D2C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398D1EB8(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398D1D54(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  float v13;
  double v14;
  float v15;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  unint64_t v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v12 = -3.40282347e38;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        v12 = *(double *)(a3 + 24);
      v13 = v12;
      v14 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v14 = *(double *)(a3 + 32);
      v15 = v14;
      __asm
      {
        FCVT            S4, H0
        FCVT            S5, H1
      }
      if (v13 != _S4 || v15 != _S5)
        goto LABEL_15;
      return sub_2398D1EB8(a1, a2, (uint64_t)v26, _Q0);
    }
  }
  else
  {
    _Q0.n128_u32[0] = 1006632960;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v15 = 1.0;
  v13 = 0.0;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (_S4 != 0.0 || 1.0 != _S5)
  {
LABEL_15:
    __asm { FCVT            D0, H0 }
    v30 = _Q0.n128_u64[0];
    __asm { FCVT            D1, H1 }
    v28 = v13;
    v29 = 1.0 / (_D1 - _Q0.n128_f64[0]);
    _Q0.n128_f64[0] = v15 - v13;
    v27 = _Q0.n128_f64[0];
    v26[0] = &v30;
    v26[1] = &v29;
    v25[0] = &v28;
    v25[1] = &v27;
    v24[0] = v26;
    v24[1] = v25;
    return sub_2398D2160(a1, a2, (uint64_t)v24, _Q0);
  }
  return sub_2398D1EB8(a1, a2, (uint64_t)v26, _Q0);
}

uint64_t sub_2398D1EB8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2398043FC((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D20FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D2160(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f32[0] = sub_2398049C4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D23A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D2408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  _QWORD v14[4];
  __int16 v15;
  __int16 v16;
  float v17;
  float v18;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (v3 < -3.40282347e38)
      v3 = -3.40282347e38;
    _S0 = v3;
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    _S1 = v4;
    v17 = _S1;
    v18 = _S0;
    __asm { FCVT            H0, S0 }
    v16 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v17 = 1.0;
    v18 = 0.0;
    _H0 = 15360;
    v16 = 0;
  }
  v15 = _H0;
  v14[0] = &v16;
  v14[1] = &v18;
  v14[2] = &v15;
  v14[3] = &v17;
  return sub_2398D24D0(a1, a2, (uint64_t)v14);
}

uint64_t sub_2398D24D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2398050F0(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398D2714(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D2778@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CF518(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0A08;
  sub_239627148((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D288C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D2854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D2870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D288C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE54D8;
  sub_239764F34(a2, &v12);
  sub_2398D2980(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23970B0E0(a2, (uint64_t)(a3 + 1));
}

void sub_2398D2944(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D2958(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239755C98((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D296C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D2980(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398D2C18(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D2BB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D2C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2398D2E00(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += 2 * HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_2398D2E00(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_2398D2E00@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _WORD *a4@<X3>, uint64_t a5@<X4>)
{
  unsigned int v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 result;
  __int16 v10;
  __int16 v11;
  __int16 v12;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      v6 = a4[1];
      v7 = a4[2];
      v8 = a4[3];
      *(_WORD *)(a5 + 4) = *a4;
      *(_WORD *)(a2[2] + 2) = v6;
      *(_WORD *)a2[2] = v7;
      *(_WORD *)(a2[2] + 6) = v8;
      a4 += a1[6];
      a5 += 2 * a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
  }
  result = *a4;
  v10 = a4[1];
  v11 = a4[2];
  v12 = a4[3];
  *(_WORD *)(a5 + 4) = *a4;
  *(_WORD *)(a2[2] + 2) = v10;
  *(_WORD *)a2[2] = v11;
  *(_WORD *)(a2[2] + 6) = v12;
  return result;
}

double sub_2398D2EC4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CF518(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC150;
  sub_2397EA604((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D2FD8(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D2FA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D2FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D2FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB858;
  sub_2397ED558(a2, &v12);
  sub_2398D30CC(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397ED7C4(a2, (uint64_t)(a3 + 1));
}

void sub_2398D3090(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D30A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C79B0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D30B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D30CC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398D3364(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D3300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D3364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2398D354C(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += 2 * HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_2398D354C(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_2398D354C@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _WORD *a4@<X3>, uint64_t a5@<X4>)
{
  unsigned int v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 result;
  __int16 v10;
  __int16 v11;
  __int16 v12;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      v6 = a4[1];
      v7 = a4[2];
      v8 = a4[3];
      *(_WORD *)(a5 + 2) = *a4;
      *(_WORD *)(a2[2] + 4) = v6;
      *(_WORD *)(a2[2] + 6) = v7;
      *(_WORD *)a2[2] = v8;
      a4 += a1[6];
      a5 += 2 * a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
    *a2 = a4;
    a2[2] = a5;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
  }
  result = *a4;
  v10 = a4[1];
  v11 = a4[2];
  v12 = a4[3];
  *(_WORD *)(a5 + 2) = *a4;
  *(_WORD *)(a2[2] + 4) = v10;
  *(_WORD *)(a2[2] + 6) = v11;
  *(_WORD *)a2[2] = v12;
  return result;
}

double sub_2398D3610@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398CF518(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE69A0;
  sub_239805808((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D3724(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D36EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D3708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D3724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE5B88;
  sub_239767D98(a2, &v12);
  sub_2398D3818(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239768004(a2, (uint64_t)(a3 + 1));
}

void sub_2398D37DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D37F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975DB84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D3804(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D3818(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2397FFFEC(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D3A4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398D3AB0(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398D3AD4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D3BB8(a1, a2);
}

double sub_2398D3AE0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D43C4(a1, a2);
}

double sub_2398D3AEC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D5024(a1, a2);
}

double sub_2398D3AF8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D5C84(a1, a2);
}

double sub_2398D3B04@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D6914(a1, a2);
}

double sub_2398D3B10@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D6F28(a1, a2);
}

double sub_2398D3B1C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D7644(a1, a2);
}

double sub_2398D3B28@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398D7D54(a1, a2);
}

uint64_t sub_2398D3BB8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398D3DC4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC7E0;
  sub_2398069A4((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398D3CCC(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398D3C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D3CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D3CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEB098;
  sub_239807AF8(a2, &v12);
  sub_2398D4054(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239807D64(a2, (uint64_t)(a3 + 1));
}

void sub_2398D3D88(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D3D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BE878((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D3DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398D3DC4(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 28;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398D3F04((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239808F4C((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398D3EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D3EF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D3F04(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 28);
  *a2 = &off_250AEC8D8;
  sub_239808068((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D401C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D4040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D4054(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398D4228(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398D4204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D4228(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_239807484(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_f32[0] = sub_2398078E0((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2398D43A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D43C4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398D3DC4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3B18;
  sub_2397E61D4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D44D8(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D44A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D44BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D44D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1878;
  sub_239763C3C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF3D8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970AF38(a2, (uint64_t)(a4 + 1));
}

void sub_2398D45C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D45D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D45EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A8C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D4600(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398D4648(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398D4610(uint64_t **a1, uint64_t a2)
{
  return sub_2398D4CC8(**a1, (*a1)[1], a2);
}

uint64_t sub_2398D4620(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398D4778(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398D4648(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  unsigned int v6;
  double v7;
  double v8;
  unsigned int v9;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v7 = *(double *)(a3 + 24);
      if (v7 < 0.0)
        v7 = 0.0;
      v6 = (int)v7;
      v8 = 255.0;
      if (*(double *)(a3 + 32) <= 255.0)
        v8 = *(double *)(a3 + 32);
      v9 = (int)v8;
      if (a4.n128_f32[0] != (float)v6 || v5 != (float)(int)v8)
        goto LABEL_15;
      return sub_2398D4778(a1, a2, (uint64_t)v15, a4);
    }
  }
  else
  {
    v5 = 1.0;
    a4.n128_u32[0] = 0;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v9 = 255;
  if (a4.n128_f32[0] != (float)v6 || v5 != (float)0xFFu)
  {
LABEL_15:
    v19 = a4.n128_f32[0];
    v17 = (double)v6;
    v18 = 1.0 / (v5 - a4.n128_f32[0]);
    a4.n128_f64[0] = (double)v9 - (double)v6;
    v16 = a4.n128_f64[0];
    v15[0] = &v19;
    v15[1] = &v18;
    v14[0] = &v17;
    v14[1] = &v16;
    v13[0] = v15;
    v13[1] = v14;
    return sub_2398D4A20(a1, a2, (uint64_t)v13, a4);
  }
  return sub_2398D4778(a1, a2, (uint64_t)v15, a4);
}

uint64_t sub_2398D4778(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239809D98((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D49BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D4A20(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23980A2FC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D4C64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D4CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1132396544;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2398D4D7C(a1, a2, (uint64_t)v8);
}

uint64_t sub_2398D4D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23980AC08(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398D4FC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D5024@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398D3DC4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC468;
  sub_2397F349C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D5138(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D5100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D511C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D5138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB570;
  sub_2397F412C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF3F0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397F4398(a2, (uint64_t)(a4 + 1));
}

void sub_2398D5224(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D5238(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D524C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C356C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D5260(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398D52A8(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398D5270(uint64_t **a1, uint64_t a2)
{
  return sub_2398D5924(**a1, (*a1)[1], a2);
}

uint64_t sub_2398D5280(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398D53D4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398D52A8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v9 = -65536;
    goto LABEL_14;
  }
  v5 = 1.0;
  a4.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = *(double *)(a3 + 24);
  if (v6 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v8 = *(double *)(a3 + 32);
  v9 = v7 | ((int)v8 << 16);
LABEL_14:
  v10 = (unsigned __int16)v9;
  v11 = HIWORD(v9);
  if (a4.n128_f32[0] == (float)v10 && v5 == (float)v11)
    return sub_2398D53D4(a1, a2, (uint64_t)v16, a4);
  v20 = a4.n128_f32[0];
  v18 = (double)v10;
  v19 = 1.0 / (v5 - a4.n128_f32[0]);
  a4.n128_f64[0] = (double)v11 - (double)v10;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_2398D567C(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_2398D53D4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = (unint64_t)sub_23980B7CC((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D5618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D567C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t **v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t **)&v29;
    a4.n128_u64[0] = (unint64_t)sub_23980BCB4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D58C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D5924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  __int16 v10;
  __int16 v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1199570688;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2398D59DC(a1, a2, (uint64_t)v8);
}

uint64_t sub_2398D59DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23980C440(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398D5C20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D5C84@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398D3DC4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC6A0;
  sub_2397FEB58((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D5D98(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D5D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D5D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D5D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEB668;
  sub_2397FF80C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF408[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397FFA78(a2, (uint64_t)(a4 + 1));
}

void sub_2398D5E84(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D5E98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D5EAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C41B4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D5EC0(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398D5F08(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398D5ED0(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398D65A0(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398D5EE0(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398D6050(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398D5F08(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  float v5;
  double v6;
  unsigned __int16 v11;
  double v12;
  unsigned int v14;
  double v20;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    _Q0.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      _Q0.n128_u64[0] = *(_QWORD *)a3;
    _Q0.n128_f32[0] = _Q0.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v5 = 1.0;
  _Q0.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v6 = *(double *)(a3 + 24);
  _S2 = v6;
  __asm { FCVT            H2, S2 }
  v11 = LOWORD(_S2);
  v12 = 65504.0;
  if (*(double *)(a3 + 32) <= 65504.0)
    v12 = *(double *)(a3 + 32);
  _S2 = v12;
  __asm { FCVT            H2, S2 }
  v14 = v11 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v14;
  _S3 = HIWORD(v14);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (_Q0.n128_f32[0] == _S4 && v5 == _S5)
    return sub_2398D6050(a1, a2, (uint64_t)v25, _Q0);
  v29 = _Q0.n128_f32[0];
  v20 = 1.0 / (v5 - _Q0.n128_f32[0]);
  __asm { FCVT            D0, H2 }
  v27 = _Q0.n128_u64[0];
  v28 = v20;
  __asm { FCVT            D1, H3 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2398D62F8(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2398D6050(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_23980D054((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D6294(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D62F8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23980D684(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D653C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D65A0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  _QWORD v14[4];
  unint64_t v15;
  __int16 v16;
  __int16 v17;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a3;
    if (!*(_BYTE *)(a3 + 8))
      _Q0.n128_f64[0] = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v4 > 65504.0)
      v4 = 65504.0;
    _S1 = v4;
    v17 = _H0;
    __asm { FCVT            H1, S1 }
    v16 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v15 = __PAIR64__(_S2, _Q0.n128_u32[0]);
  }
  else
  {
    v17 = 0;
    v16 = 15360;
    v15 = 1065353216;
  }
  v14[0] = (char *)&v15 + 4;
  v14[1] = &v17;
  v14[2] = &v15;
  v14[3] = &v16;
  return sub_2398D666C(a1, a2, (uint64_t)v14, _Q0);
}

uint64_t sub_2398D666C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_23980DFC8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D68B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D6914@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398D3DC4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC8D8;
  sub_239808068((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D6A60(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239808F4C((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D6A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D6A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D6A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D6A60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2398D6C04(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398D6BA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398D6C04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398D6D5C(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398D6D5C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E3CD4(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398D6EC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398D6F28@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398D3DC4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE08B8;
  sub_23960A1CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D703C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D7004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D7020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D703C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE1D50;
  sub_2397651A0(a2, &v12);
  sub_2398D7130(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23970B1B4(a2, (uint64_t)(a3 + 1));
}

void sub_2398D70F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D7108(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643F74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D711C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D7130(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398D73C8(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D7364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D73C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  int32x4_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  int8x16_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(int32x4_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(int32x4_t **)(a2 + 24);
    }
    v19 = *(int8x16_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(int8x16_t **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2398D75B0(&v27, (int32x4_t **)v34, a1, v13, v19);
        v13 = (int32x4_t *)((char *)v13 + 4 * v33);
        v19 = (int8x16_t *)((char *)v19 + 4 * HIDWORD(v33));
      }
    }
    *(_QWORD *)&result = sub_2398D75B0(&v27, (int32x4_t **)v34, a1, v13, v19).u64[0];
  }
  return result;
}

int8x16_t sub_2398D75B0(_DWORD *a1, int32x4_t **a2, uint64_t a3, int32x4_t *a4, int8x16_t *a5)
{
  int v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t result;
  int8x16_t v9;

  *a2 = a4;
  a2[2] = (int32x4_t *)a5;
  v5 = a1[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = (int32x4_t *)a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      v6 = (int8x16_t)vrev64q_s32(*a4);
      *a5 = vextq_s8(v6, v6, 0xCuLL);
      a4 = (int32x4_t *)((char *)a4 + 4 * a1[6]);
      a5 = (int8x16_t *)((char *)a5 + 4 * a1[7]);
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = (int32x4_t *)a5;
    v7 = (int8x16_t)vrev64q_s32(*a4);
    result = vextq_s8(v7, v7, 0xCuLL);
    *a5 = result;
  }
  else
  {
    *a2 = a4;
    a2[2] = (int32x4_t *)a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
    v9 = (int8x16_t)vrev64q_s32(*a4);
    result = vextq_s8(v9, v9, 0xCuLL);
    *a5 = result;
  }
  return result;
}

double sub_2398D7644@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398D3DC4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC260;
  sub_2397EDAFC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D7758(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D7720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D773C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D7758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB950;
  sub_2397F06F4(a2, &v12);
  sub_2398D784C(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397F0960(a2, (uint64_t)(a3 + 1));
}

void sub_2398D7810(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D7824(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C8588((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D7838(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D784C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398D7AE4(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D7A80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398D7AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  int8x16_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  int8x16_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(int8x16_t **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(int8x16_t **)(a2 + 24);
    }
    v19 = *(int8x16_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(int8x16_t **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2398D7CCC(&v27, (int8x16_t **)v34, a1, v13, v19);
        v13 = (int8x16_t *)((char *)v13 + 4 * v33);
        v19 = (int8x16_t *)((char *)v19 + 4 * HIDWORD(v33));
      }
    }
    *(_QWORD *)&result = sub_2398D7CCC(&v27, (int8x16_t **)v34, a1, v13, v19).u64[0];
  }
  return result;
}

int8x16_t sub_2398D7CCC(_DWORD *a1, int8x16_t **a2, uint64_t a3, int8x16_t *a4, int8x16_t *a5)
{
  int v5;
  int8x16_t result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  if (v5)
  {
    do
    {
      *a2 = a4;
      a2[2] = a5;
      if (!a4)
        sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
      *a5 = vextq_s8(*a4, *a4, 0xCuLL);
      a4 = (int8x16_t *)((char *)a4 + 4 * a1[6]);
      a5 = (int8x16_t *)((char *)a5 + 4 * a1[7]);
      --v5;
    }
    while (v5);
    *a2 = a4;
    a2[2] = a5;
    result = vextq_s8(*a4, *a4, 0xCuLL);
    *a5 = result;
  }
  else
  {
    *a2 = a4;
    a2[2] = a5;
    if (!a4)
      sub_239EBF50C((uint64_t)a1, (uint64_t)a2);
    result = vextq_s8(*a4, *a4, 0xCuLL);
    *a5 = result;
  }
  return result;
}

double sub_2398D7D54@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398D3DC4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6BC8;
  sub_23980ED50((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398D7E68(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398D7E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398D7E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D7E68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE5D10;
  sub_239768BB8(a2, &v12);
  sub_2398D7F5C(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239768E24(a2, (uint64_t)(a3 + 1));
}

void sub_2398D7F20(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398D7F34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975F87C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D7F48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D7F5C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398094C0(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398D8190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398D81F4(uint64_t a1, int a2)
{
  return sub_2398E082C(a2);
}

uint64_t sub_2398D8228(int a1)
{
  return sub_2398E96BC(a1);
}

void sub_2398D824C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_2398263E0((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[36] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D8348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D8364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D8378(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_2398264AC((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[36] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D8474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D8490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D84A4@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398D860C(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE4350;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_2398264AC((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[36] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23980FD4C(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398D85B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239730D5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D85CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239730D5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D85F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239730D5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398D860C@<D0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  _OWORD v7[2];
  _QWORD v8[6];

  v8[5] = &off_250AE4270;
  sub_23981E6B0(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE42B8;
  *(_OWORD *)(v4 + 8) = v7[0];
  *(_OWORD *)(v4 + 20) = *(_OWORD *)((char *)v7 + 12);
  sub_239916924((__n128 *)(v4 + 40), (__n128 *)v8);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)&v8[3];
  *a3 = v4;
  return sub_23980FD4C((uint64_t)v6);
}

void sub_2398D86B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23980FD4C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D86E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23980FD4C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D86F8(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_23982657C((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[36] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D87F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D8810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D8824@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398D898C(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE5FF0;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_23982657C((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[36] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_2398102D0(result);
    return MEMORY[0x23B83E31C](v13, 0x1091C406A8758A4);
  }
  return result;
}

void sub_2398D8938(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239761B58((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D894C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239761B58((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D8970(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239761B58((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D898C@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  _OWORD v7[2];
  _QWORD v8[6];

  v8[5] = &off_250AE5F10;
  sub_23981E8DC(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE5F58;
  *(_OWORD *)(v4 + 8) = v7[0];
  *(_OWORD *)(v4 + 20) = *(_OWORD *)((char *)v7 + 12);
  sub_239916924((__n128 *)(v4 + 40), (__n128 *)v8);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)&v8[3];
  *a3 = v4;
  return sub_2398102D0(v6);
}

void sub_2398D8A34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398102D0(va);
  _Unwind_Resume(a1);
}

void sub_2398D8A64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398102D0(va);
  _Unwind_Resume(a1);
}

void sub_2398D8A78(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239826870((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[36] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D8B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D8B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D8BA4(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239826940((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D8CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D8CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D8CD0@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398D8E38(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED830;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239826940((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239810B84(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398D8DE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D8DF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D8E1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398D8E38@<D0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AED7F8;
  sub_23981EE70(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECA18;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239810B84((uint64_t)v6);
}

void sub_2398D8EF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239810B84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D8F28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810B84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D8F3C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_2398269FC((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D9038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D9054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D9068@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398D91D0(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED8B8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_2398269FC((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239811208(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398D917C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D9190(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D91B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398D91D0@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AED880;
  sub_23981F1F4(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECA98;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239811208((uint64_t)v6);
}

void sub_2398D9290(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239811208((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D92C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239811208((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D92D4(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239826AB8((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D93D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D93EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D9400@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398D9568(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED940;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239826AB8((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239811954(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398D9514(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239811A9C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D9528(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239811A9C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D954C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239811A9C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398D9568@<D0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AED908;
  sub_23981F44C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECB18;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239811954((uint64_t)v6);
}

void sub_2398D9628(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239811954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D9658(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239811954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D966C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239826B74((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D9768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D9784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D9798@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398D9900(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED9C8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239826B74((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239811F90(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398D98AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D98C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D98E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398D9900@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AED990;
  sub_23981F88C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECB98;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239811F90((uint64_t)v6);
}

void sub_2398D99C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239811F90((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D99F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239811F90((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D9A04(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239826C30((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D9B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D9B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D9B30@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398D9C98(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDB48;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239826C30((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_2398125C4(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398D9C44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D9C58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D9C7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398D9C98@<D0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEDB10;
  sub_23981FAE8(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECC18;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_2398125C4((uint64_t)v6);
}

void sub_2398D9D58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398125C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D9D88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398125C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398D9D9C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239826CEC((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398D9E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398D9EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398D9EC8@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DA030(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDCC8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239826CEC((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239812BF8(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398D9FDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398D9FF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DA014(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DA030@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEDC90;
  sub_23981FE5C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECC98;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239812BF8((uint64_t)v6);
}

void sub_2398DA0F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239812BF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DA120(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239812BF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DA134(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239826DA8((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DA230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DA24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DA260@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DA3C8(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDE48;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239826DA8((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239813344(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DA374(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981348C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DA388(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23981348C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DA3AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23981348C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DA3C8@<D0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEDE10;
  sub_2398200B0(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECD18;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239813344((uint64_t)v6);
}

void sub_2398DA488(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239813344((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DA4B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239813344((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DA4CC(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239826E64((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DA5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DA5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DA5F8@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DA760(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDFC8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239826E64((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239813980(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DA70C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DA720(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DA744(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DA760@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEDF90;
  sub_2398204E8(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECD98;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239813980((uint64_t)v6);
}

void sub_2398DA820(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239813980((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DA850(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239813980((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DA864(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239826F20((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DA960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DA97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DA990@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DAAF8(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE050;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239826F20((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239813FB4(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DAAA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DAAB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DAADC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DAAF8@<D0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE018;
  sub_23982073C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECE18;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239813FB4((uint64_t)v6);
}

void sub_2398DABB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239813FB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DABE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239813FB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DABFC(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239826FDC((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DACF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DAD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DAD28@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DAE90(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE0D8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239826FDC((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_2398145E8(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DAE3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DAE50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DAE74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DAE90@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE0A0;
  sub_239820AC0(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECE98;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_2398145E8((uint64_t)v6);
}

void sub_2398DAF50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398145E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DAF80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398145E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DAF94(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827098((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DB090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DB0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DB0C0@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DB228(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE160;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239827098((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239814D34(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DB1D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239814E7C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DB1E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239814E7C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DB20C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239814E7C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DB228@<D0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE128;
  sub_239820D1C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECF18;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239814D34((uint64_t)v6);
}

void sub_2398DB2E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239814D34((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DB318(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239814D34((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DB32C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827154((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DB428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DB444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DB458@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DB5C0(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE1E8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239827154((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239815370(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DB56C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DB580(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DB5A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DB5C0@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE1B0;
  sub_239821164(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECF98;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239815370((uint64_t)v6);
}

void sub_2398DB680(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239815370((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DB6B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239815370((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DB6C4(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827210((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DB7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DB7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DB7F0@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DB958(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE39C8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239827210((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_2398159A4(result);
    return MEMORY[0x23B83E31C](v13, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_2398DB904(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397087BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DB918(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_2397087BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DB93C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_2397087BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DB958@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE3928;
  sub_2398213BC(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE3948;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_2398159A4((uint64_t)v6);
}

void sub_2398DBA18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398159A4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DBA48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398159A4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DBA5C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_2398272CC((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DBB58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DBB74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DBB88@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DBCF0(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE368;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_2398272CC((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239815EF4(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DBC9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DBCB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DBCD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DBCF0@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE330;
  sub_239821730(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED018;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239815EF4((uint64_t)v6);
}

void sub_2398DBDB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239815EF4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DBDE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239815EF4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DBDF4(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827388((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DBEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DBF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DBF20@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DC088(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE4E8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239827388((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_2398165B4(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DC034(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398166FC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DC048(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_2398166FC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DC06C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_2398166FC((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DC088@<D0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE4B0;
  sub_239821984(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED098;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_2398165B4((uint64_t)v6);
}

void sub_2398DC148(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398165B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DC178(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398165B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DC18C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827444((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DC288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DC2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DC2B8@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DC420(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE668;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239827444((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239816BF0(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DC3CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DC3E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DC404(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DC420@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE630;
  sub_239821DBC(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED118;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239816BF0((uint64_t)v6);
}

void sub_2398DC4E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239816BF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DC510(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239816BF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DC524(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_2398277C4((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DC620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DC63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DC650(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827880((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DC74C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DC768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DC77C@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DC8E4(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6230;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239827880((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239817774(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DC890(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239762BE4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DC8A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239762BE4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DC8C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239762BE4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DC8E4@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE6150;
  sub_23982251C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE6198;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239817774((uint64_t)v6);
}

void sub_2398DC9A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239817774((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DC9D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239817774((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DC9E8(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_23982793C((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DCAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DCB00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DCB14@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DCC7C(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0C98;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_23982793C((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239817D50(result);
    return MEMORY[0x23B83E31C](v13, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_2398DCC28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23961ACAC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DCC3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23961ACAC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DCC60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23961ACAC((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DCC7C@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE0BF8;
  sub_239822770(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE0C18;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239817D50(v6);
}

void sub_2398DCD3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239817D50(va);
  _Unwind_Resume(a1);
}

void sub_2398DCD6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239817D50(va);
  _Unwind_Resume(a1);
}

void sub_2398DCD80(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827CE0((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DCE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DCE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DCEAC(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827D9C((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DCFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DCFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DCFD8@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DD140(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3BF8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239827D9C((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_2398187B4(result);
    return MEMORY[0x23B83E31C](v13, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_2398DD0EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23970A838((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DD100(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23970A838((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DD124(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23970A838((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DD140@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE3B58;
  sub_239822F9C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE3B78;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_2398187B4((uint64_t)v6);
}

void sub_2398DD200(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398187B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DD230(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398187B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DD244(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827E58((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DD340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DD35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DD370@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DD4D8(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE6F0;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239827E58((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239818D04(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DD484(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DD498(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DD4BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DD4D8@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE6B8;
  sub_239823320(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED198;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239818D04((uint64_t)v6);
}

void sub_2398DD598(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239818D04((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DD5C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239818D04((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DD5DC(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827F14((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DD6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DD6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DD708@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DD870(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE778;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239827F14((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_2398193C4(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DD81C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981950C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DD830(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23981950C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DD854(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23981950C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DD870@<D0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE740;
  sub_23982357C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED218;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_2398193C4((uint64_t)v6);
}

void sub_2398DD930(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398193C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DD960(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398193C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DD974(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239827FD0((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DDA70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DDA8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DDAA0@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DDC08(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE800;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239827FD0((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_239819A00(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DDBB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DDBC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DDBEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DDC08@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE7C8;
  sub_2398239C4(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED298;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_239819A00((uint64_t)v6);
}

void sub_2398DDCC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239819A00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DDCF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239819A00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DDD0C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_23982808C((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DDE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DDE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DDE38@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DDFA0(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0AE8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_23982808C((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981A034(result);
    return MEMORY[0x23B83E31C](v13, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_2398DDF4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239619774((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DDF60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239619774((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DDF84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239619774((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DDFA0@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE0A48;
  sub_239823C1C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE0A68;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981A034((uint64_t)v6);
}

void sub_2398DE060(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981A034((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DE090(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981A034((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DE0A4(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239828148((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DE1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DE1BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DE1D0@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DE338(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE64B8;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239828148((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981A584(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DE2E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239764488((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DE2F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239764488((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DE31C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239764488((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DE338@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE63D8;
  sub_239823FA0(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE6420;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981A584((uint64_t)v6);
}

void sub_2398DE3F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981A584((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DE428(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981A584((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DE43C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239828204((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DE538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DE554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DE568@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DE6D0(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0D70;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239828204((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981AB60(result);
    return MEMORY[0x23B83E31C](v13, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_2398DE67C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23961B614((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DE690(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23961B614((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DE6B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23961B614((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DE6D0@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE0CD0;
  sub_2398241FC(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE0CF0;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981AB60(v6);
}

void sub_2398DE790(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981AB60(va);
  _Unwind_Resume(a1);
}

void sub_2398DE7C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981AB60(va);
  _Unwind_Resume(a1);
}

void sub_2398DE7D4(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_2398282C0((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DE8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DE8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DE900@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DEA68(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0BC0;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_2398282C0((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981B074(result);
    return MEMORY[0x23B83E31C](v13, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_2398DEA14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23961A344((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DEA28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23961A344((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DEA4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23961A344((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DEA68@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE0B20;
  sub_239824644(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE0B40;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981B074((uint64_t)v6);
}

void sub_2398DEB28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981B074((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DEB58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981B074((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DEB6C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_23982837C((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DEC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DEC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DEC98@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DEE00(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6710;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_23982837C((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981B5C4(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DEDAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239765780((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DEDC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239765780((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DEDE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239765780((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DEE00@<D0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE6630;
  sub_23982489C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE6678;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981B5C4((uint64_t)v6);
}

void sub_2398DEEC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981B5C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DEEF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981B5C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DEF04(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239828438((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DF000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DF01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DF030@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DF198(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE888;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239828438((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981BB14(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DF144(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DF158(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DF17C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DF198@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE850;
  sub_239824C20(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED318;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981BB14((uint64_t)v6);
}

void sub_2398DF258(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981BB14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DF288(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981BB14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DF29C(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_2398284F4((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DF398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DF3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DF3C8@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DF530(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE910;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_2398284F4((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981C1D4(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DF4DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981C31C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DF4F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23981C31C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DF514(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23981C31C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DF530@<D0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE8D8;
  sub_239824E7C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED398;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981C1D4((uint64_t)v6);
}

void sub_2398DF5F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981C1D4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DF620(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981C1D4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DF634(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_2398285B0((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DF730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DF74C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DF760@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DF8C8(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE998;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_2398285B0((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981C810(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DF874(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DF888(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DF8AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DF8C8@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AEE960;
  sub_2398252C4(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED418;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981C810((uint64_t)v6);
}

void sub_2398DF988(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981C810((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DF9B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981C810((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DF9CC(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_23982866C((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DFAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DFAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DFAF8@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DFC60(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3AE0;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_23982866C((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981CE44(result);
    return MEMORY[0x23B83E31C](v13, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_2398DFC0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239709C70((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DFC20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239709C70((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DFC44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239709C70((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DFC60@<X0>(_DWORD *a1@<X0>, _BYTE *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE3A40;
  sub_23982551C(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE3A60;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981CE44((uint64_t)v6);
}

void sub_2398DFD20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981CE44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DFD50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981CE44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398DFD64(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_239828728((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398DFE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398DFE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398DFE90@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398DFFF8(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6950;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_239828728((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981D394(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398DFFA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23976680C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DFFB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23976680C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398DFFDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23976680C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398DFFF8@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE6870;
  sub_2398258A0(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE68B8;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981D394((uint64_t)v6);
}

void sub_2398E00B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981D394((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E00E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981D394((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E00FC(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_2398287E4((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398E01F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398E0214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E0228@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398E0390(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6B78;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_2398287E4((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981D970(result);
    return MEMORY[0x23B83E31C](v13, 0x1091C40A44A61E0);
  }
  return result;
}

void sub_2398E033C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23976762C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E0350(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23976762C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E0374(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23976762C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E0390@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE6A98;
  sub_239825AFC(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE6AE0;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981D970(v6);
}

void sub_2398E0450(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981D970(va);
  _Unwind_Resume(a1);
}

void sub_2398E0480(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981D970(va);
  _Unwind_Resume(a1);
}

void sub_2398E0494(std::__shared_weak_count_vtbl **a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  v12 = *a1;
  if (v12)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = *a1;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  *a1 = 0;
  sub_2398288A0((uint64_t)a2, &v12, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a2[60] = v8 & 0xFF00 | v7;
  v9 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398E0590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239416DA0(v9);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398E05AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E05C0@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  __int16 v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t result;
  double v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2398E0728(a1, a2, &v14);
  v15 = v14;
  if (v14)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v14;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6DA0;
    v4->__shared_owners_ = 0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  }
  else
  {
    v4 = 0;
  }
  v16 = v4;
  v14 = 0;
  sub_2398288A0((uint64_t)a3, &v15, 0);
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a3 + 104))(*(_QWORD *)a3);
  v7 = v6;
  if ((v6 & 0xFFFFFF) <= 0x10000)
    v7 = 0;
  v8 = v6 & 0xFF00;
  if ((v6 & 0xFF0000) == 0)
    v8 = 0;
  a3[60] = v8 & 0xFF00 | v7;
  v9 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  result = v14;
  v14 = 0;
  if (result)
  {
    v13 = sub_23981DE84(result);
    return MEMORY[0x23B83E31C](v13);
  }
  return result;
}

void sub_2398E06D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23976844C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E06E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23976844C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E070C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23976844C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E0728@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _BYTE v6[8];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[7];

  v11[6] = &off_250AE6CC0;
  sub_239825F44(a1, a2, (uint64_t)v6);
  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE6D08;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v8;
  *(_OWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 56) = v10;
  sub_239916924((__n128 *)(v4 + 64), (__n128 *)v11);
  *(_OWORD *)(v4 + 88) = *(_OWORD *)&v11[3];
  *(_QWORD *)(v4 + 104) = v11[5];
  *a3 = v4;
  return sub_23981DE84((uint64_t)v6);
}

void sub_2398E07E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981DE84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E0818(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981DE84((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E082C(int a1)
{
  return ((uint64_t (*)(void))((char *)sub_2398E0848 + 4 * byte_239F01A95[a1]))();
}

void sub_2398E0848(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E0994(a1, a2);
}

void sub_2398E0850(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E0BD8(a1, a2);
}

void sub_2398E0858(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E0E1C(a1, a2);
}

void sub_2398E0860(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E1060(a1, a2);
}

void sub_2398E0868(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E12A4(a1, a2);
}

void sub_2398E0870(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E1750(a1, a2);
}

void sub_2398E0878(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E1BFC(a1, a2);
}

void sub_2398E0880(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E20A8(a1, a2);
}

void sub_2398E0888(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E2554(a1, a2);
}

void sub_2398E0890(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E2A00(a1, a2);
}

void sub_2398E0898(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E2EAC(a1, a2);
}

void sub_2398E08A0(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E3358(a1, a2);
}

void sub_2398E08A8(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E3804(a1, a2);
}

void sub_2398E08B0(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E3CB0(a1, a2);
}

void sub_2398E08B8(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E415C(a1, a2);
}

void sub_2398E08C0(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E4608(a1, a2);
}

void sub_2398E08C8(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E4AB4(a1, a2);
}

void sub_2398E08D0(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E4CF8(a1, a2);
}

void sub_2398E08D8(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E51A4(a1, a2);
}

void sub_2398E08E0(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E5650(a1, a2);
}

void sub_2398E08E8(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E5AFC(a1, a2);
}

void sub_2398E08F0(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E5D40(a1, a2);
}

void sub_2398E08F8(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E5F84(a1, a2);
}

void sub_2398E0900(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E61C8(a1, a2);
}

void sub_2398E0908(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E640C(a1, a2);
}

void sub_2398E0910(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E6650(a1, a2);
}

void sub_2398E0918(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E6AFC(a1, a2);
}

void sub_2398E0920(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E6FA8(a1, a2);
}

void sub_2398E0928(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E7454(a1, a2);
}

void sub_2398E0930(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E7698(a1, a2);
}

void sub_2398E0938(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E78DC(a1, a2);
}

void sub_2398E0940(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E7B20(a1, a2);
}

void sub_2398E0948(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E7D64(a1, a2);
}

void sub_2398E0950(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E7FA8(a1, a2);
}

void sub_2398E0958(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E8454(a1, a2);
}

void sub_2398E0960(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E8900(a1, a2);
}

void sub_2398E0968(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E8DAC(a1, a2);
}

void sub_2398E0970(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E8FF0(a1, a2);
}

void sub_2398E0978(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E9234(a1, a2);
}

void sub_2398E0980(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_2398E9478(a1, a2);
}

void sub_2398E0988(uint64_t a1, uint64_t a2)
{
  sub_239EC23F4(a1, a2);
}

void sub_2398E0994(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  char v11[8];
  uint64_t v12;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v9 = **(_QWORD **)a1;
  v10 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E0AB4(&v9, 1, *(_DWORD **)(a1 + 8), (uint64_t)v11);
  *a2 = &off_250ADB778;
  sub_239709384((uint64_t)v11, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v12);
  nullsub_4(v11);
  v6 = v10;
  if (v10)
  {
    v7 = (unint64_t *)&v10->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_2398E0A70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E0AA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E0AB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250ADB628;
    sub_2398D824C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250ADB628;
    return sub_2395793A0(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E0B94(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E0BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E0BD8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E0CF8(&v10, 2, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239761728((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E0CB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E0CE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E0CF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE4178;
    sub_2398D8378(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE4178;
    return sub_239730A28(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E0DD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E0DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E0E1C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E0F3C(&v10, 3, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239762530((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E0EF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E0F28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E0F3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE5E18;
    sub_2398D86F8(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE5E18;
    return sub_239761908(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E101C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E1030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E1060(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E1180(&v10, 4, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397096A8((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E113C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E116C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E1180@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250ADD920;
    sub_2398D8A78(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250ADD920;
    return sub_239709458(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E1260(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E1274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E12A4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E13C4(&v10, 5, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397CA6BC((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E1380(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E13B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E13C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEBA48;
    sub_2398D8BA4(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEBA48;
    return sub_2398E14E8(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E14A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E14B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E14E8@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E1650(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED830;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239826940((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239810B84(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E15FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E1610(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E1634(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E1650@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AED7F8;
  sub_23981F01C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECA18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239810B84((uint64_t)v5);
}

void sub_2398E170C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239810B84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E173C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810B84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E1750(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E1870(&v10, 6, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397CDB30((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E182C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E185C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E1870@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEBB40;
    sub_2398D8F3C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEBB40;
    return sub_2398E1994(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E1950(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E1964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E1994@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E1AFC(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED8B8;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_2398269FC((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239811208(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E1AA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E1ABC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E1AE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E1AFC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AED880;
  sub_23981F3A4(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECA98;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239811208((uint64_t)v5);
}

void sub_2398E1BB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239811208((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E1BE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239811208((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E1BFC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E1D1C(&v10, 7, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397D0A60((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E1CD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E1D08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E1D1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEBC50;
    sub_2398D92D4(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEBC50;
    return sub_2398E1E40(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E1DFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E1E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E1E40@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E1FA8(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED940;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239826AB8((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239811954(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E1F54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239811A9C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E1F68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239811A9C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E1F8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239811A9C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E1FA8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AED908;
  sub_23981F66C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECB18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239811954((uint64_t)v5);
}

void sub_2398E2064(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239811954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E2094(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239811954((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E20A8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E21C8(&v10, 8, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397D38E4((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E2184(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E21B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E21C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEBD60;
    sub_2398D966C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEBD60;
    return sub_2398E22EC(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E22A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E22BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E22EC@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E2454(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED9C8;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239826B74((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239811F90(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E2400(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E2414(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E2438(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E2454@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AED990;
  sub_23981FA40(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECB98;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239811F90((uint64_t)v5);
}

void sub_2398E2510(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239811F90((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E2540(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239811F90((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E2554(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E2674(&v10, 9, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_23982F700((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E2630(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E2660(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E2674@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEDA18;
    sub_2398D9A04(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEDA18;
    return sub_2398E2798(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E2754(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E2768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E2798@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E2900(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDB48;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239826C30((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_2398125C4(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E28AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E28C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E28E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E2900@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEDB10;
  sub_23981FC8C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECC18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_2398125C4((uint64_t)v5);
}

void sub_2398E29BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398125C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E29EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398125C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E2A00(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E2B20(&v10, 10, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2398302E4((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E2ADC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E2B0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E2B20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEDB98;
    sub_2398D9D9C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEDB98;
    return sub_2398E2C44(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E2C00(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E2C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E2C44@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E2DAC(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDCC8;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239826CEC((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239812BF8(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E2D58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E2D6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E2D90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E2DAC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEDC90;
  sub_239820008(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECC98;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239812BF8((uint64_t)v5);
}

void sub_2398E2E68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239812BF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E2E98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239812BF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E2EAC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E2FCC(&v10, 11, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239830F44((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E2F88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E2FB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E2FCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEDD18;
    sub_2398DA134(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEDD18;
    return sub_2398E30F0(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E30AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E30C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E30F0@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E3258(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDE48;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239826DA8((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239813344(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E3204(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981348C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E3218(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23981348C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E323C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23981348C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E3258@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEDE10;
  sub_2398202CC(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECD18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239813344((uint64_t)v5);
}

void sub_2398E3314(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239813344((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E3344(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239813344((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E3358(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E3478(&v10, 12, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239831AFC((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E3434(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E3464(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E3478@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEDE98;
    sub_2398DA4CC(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEDE98;
    return sub_2398E359C(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E3558(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E356C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E359C@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E3704(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDFC8;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239826E64((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239813980(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E36B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E36C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E36E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E3704@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEDF90;
  sub_239820694(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECD98;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239813980((uint64_t)v5);
}

void sub_2398E37C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239813980((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E37F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239813980((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E3804(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E3924(&v10, 13, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397E5EF8((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E38E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E3910(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E3924@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEBF48;
    sub_2398DA864(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEBF48;
    return sub_2398E3A48(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E3A04(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E3A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E3A48@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E3BB0(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE050;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239826F20((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239813FB4(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E3B5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E3B70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E3B94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E3BB0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE018;
  sub_2398208E8(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECE18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239813FB4((uint64_t)v5);
}

void sub_2398E3C6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239813FB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E3C9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239813FB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E3CB0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E3DD0(&v10, 14, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397F3198((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E3D8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E3DBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E3DD0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEC370;
    sub_2398DABFC(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEC370;
    return sub_2398E3EF4(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E3EB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E3EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E3EF4@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E405C(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE0D8;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239826FDC((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_2398145E8(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E4008(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E401C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E4040(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E405C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE0A0;
  sub_239820C74(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECE98;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_2398145E8((uint64_t)v5);
}

void sub_2398E4118(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398145E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E4148(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398145E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E415C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E427C(&v10, 15, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397FE854((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E4238(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E4268(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E427C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEC5A8;
    sub_2398DAF94(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEC5A8;
    return sub_2398E43A0(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E435C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E4370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E43A0@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E4508(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE160;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239827098((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239814D34(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E44B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239814E7C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E44C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239814E7C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E44EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239814E7C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E4508@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE128;
  sub_239820F40(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECF18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239814D34((uint64_t)v5);
}

void sub_2398E45C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239814D34((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E45F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239814D34((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E4608(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E4728(&v10, 16, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239807D64((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E46E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E4714(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E4728@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEC7E0;
    sub_2398DB32C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEC7E0;
    return sub_2398E484C(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E4808(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E481C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E484C@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E49B4(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE1E8;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239827154((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239815370(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E4960(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E4974(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E4998(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E49B4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE1B0;
  sub_239821314(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECF98;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239815370((uint64_t)v5);
}

void sub_2398E4A70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239815370((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E4AA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239815370((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E4AB4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E4BD4(&v10, 17, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_23970B00C((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E4B90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E4BC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E4BD4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE38E8;
    sub_2398DB6C4(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE38E8;
    return sub_239708470(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E4CB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E4CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E4CF8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E4E18(&v10, 18, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2398356DC((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E4DD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E4E04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E4E18@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEE238;
    sub_2398DBA5C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEE238;
    return sub_2398E4F3C(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E4EF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E4F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E4F3C@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E50A4(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE368;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_2398272CC((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239815EF4(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E5050(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E5064(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E5088(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E50A4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE330;
  sub_2398218DC(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED018;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239815EF4((uint64_t)v5);
}

void sub_2398E5160(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239815EF4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E5190(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239815EF4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E51A4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E52C4(&v10, 19, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_23983633C((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E5280(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E52B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E52C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEE3B8;
    sub_2398DBDF4(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEE3B8;
    return sub_2398E53E8(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E53A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E53B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E53E8@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E5550(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE4E8;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239827388((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_2398165B4(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E54FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398166FC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E5510(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_2398166FC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E5534(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_2398166FC((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E5550@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE4B0;
  sub_239821BA0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED098;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_2398165B4((uint64_t)v5);
}

void sub_2398E560C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398165B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E563C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398165B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E5650(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E5770(&v10, 20, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239836EF4((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E572C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E575C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E5770@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEE538;
    sub_2398DC18C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEE538;
    return sub_2398E5894(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E5850(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E5864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E5894@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E59FC(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE668;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239827444((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239816BF0(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E59A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E59BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E59E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E59FC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE630;
  sub_239821F68(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED118;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239816BF0((uint64_t)v5);
}

void sub_2398E5AB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239816BF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E5AE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239816BF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E5AFC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E5C1C(&v10, 21, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239709138((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E5BD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E5C08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E5C1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250ADBEA0;
    sub_2398DC524(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250ADBEA0;
    return sub_2396192A4(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E5CFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E5D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E5D40(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E5E60(&v10, 22, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397635BC((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E5E1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E5E4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E5E60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE6058;
    sub_2398DC650(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE6058;
    return sub_23976297C(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E5F40(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E5F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E5F84(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E60A4(&v10, 23, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397638FC((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E6060(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E6090(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E60A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE09C8;
    sub_2398DC9E8(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE09C8;
    return sub_23961AA44(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E6184(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E6198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E61C8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E62E8(&v10, 24, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_23970977C((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E62A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E62D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E62E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250ADDC30;
    sub_2398DCD80(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250ADDC30;
    return sub_239619E74(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E63C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E63DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E640C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E652C(&v10, 25, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_23970AF38((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E64E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E6518(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E652C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE3B18;
    sub_2398DCEAC(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE3B18;
    return sub_23970A4EC(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E660C(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E6620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E6650(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E6770(&v10, 26, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397F4398((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E672C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E675C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E6770@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEC468;
    sub_2398DD244(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEC468;
    return sub_2398E6894(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E6850(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E6864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E6894@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E69FC(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE6F0;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239827E58((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239818D04(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E69A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E69BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E69E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E69FC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE6B8;
  sub_2398234D4(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED198;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239818D04((uint64_t)v5);
}

void sub_2398E6AB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239818D04((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E6AE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239818D04((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E6AFC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E6C1C(&v10, 27, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397FFA78((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E6BD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E6C08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E6C1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEC6A0;
    sub_2398DD5DC(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEC6A0;
    return sub_2398E6D40(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E6CFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E6D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E6D40@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E6EA8(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE778;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239827F14((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_2398193C4(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E6E54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981950C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E6E68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23981950C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E6E8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23981950C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E6EA8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE740;
  sub_2398237A0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED218;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_2398193C4((uint64_t)v5);
}

void sub_2398E6F64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398193C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E6F94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398193C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E6FA8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E70C8(&v10, 28, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239808F4C((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E7084(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E70B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E70C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEC8D8;
    sub_2398DD974(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEC8D8;
    return sub_2398E71EC(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E71A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E71BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E71EC@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E7354(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE800;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239827FD0((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_239819A00(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E7300(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E7314(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E7338(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E7354@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE7C8;
  sub_239823B74(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED298;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239819A00((uint64_t)v5);
}

void sub_2398E7410(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239819A00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E7440(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239819A00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E7454(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E7574(&v10, 29, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239709850((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E7530(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E7560(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E7574@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE0988;
    sub_2398DDD0C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE0988;
    return sub_23961950C(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E7654(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E7668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E7698(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E77B8(&v10, 30, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239764E60((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E7774(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E77A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E77B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE62E0;
    sub_2398DE0A4(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE62E0;
    return sub_239764220(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E7898(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E78AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E78DC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E79FC(&v10, 31, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_23970B0E0((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E79B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E79E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E79FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE0A08;
    sub_2398DE43C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE0A08;
    return sub_23961B3AC(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E7ADC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E7AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E7B20(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E7C40(&v10, 32, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_23970B1B4((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E7BFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E7C2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E7C40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE08B8;
    sub_2398DE7D4(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE08B8;
    return sub_23961A0DC(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E7D20(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E7D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E7D64(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E7E84(&v10, 33, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239766158((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E7E40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E7E70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E7E84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE6538;
    sub_2398DEB6C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE6538;
    return sub_239765518(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E7F64(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E7F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E7FA8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E80C8(&v10, 34, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397EA2CC((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E8084(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E80B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E80C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEC040;
    sub_2398DEF04(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEC040;
    return sub_2398E81EC(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E81A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E81BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E81EC@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E8354(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE888;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_239828438((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_23981BB14(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E8300(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E8314(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E8338(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E8354@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE850;
  sub_239824DD4(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED318;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981BB14((uint64_t)v5);
}

void sub_2398E8410(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981BB14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E8440(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981BB14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E8454(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E8574(&v10, 35, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397ED7C4((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E8530(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E8560(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E8574@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEC150;
    sub_2398DF29C(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEC150;
    return sub_2398E8698(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E8654(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E8668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E8698@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E8800(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE910;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_2398284F4((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_23981C1D4(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E87AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981C31C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E87C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_23981C31C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E87E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_23981C31C((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E8800@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE8D8;
  sub_2398250A0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED398;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981C1D4((uint64_t)v5);
}

void sub_2398E88BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981C1D4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E88EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981C1D4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E8900(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E8A20(&v10, 36, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397F0960((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E89DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E8A0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E8A20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AEC260;
    sub_2398DF634(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AEC260;
    return sub_2398E8B44(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E8B00(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E8B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E8B44@<X0>(_DWORD *a1@<X0>, _WORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __int16 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t result;
  double v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_2398E8CAC(a1, &v13);
  v14 = v13;
  if (v13)
  {
    v3 = (std::__shared_weak_count *)operator new();
    v4 = v13;
    v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE998;
    v3->__shared_owners_ = 0;
    v3->__shared_weak_owners_ = 0;
    v3[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  }
  else
  {
    v3 = 0;
  }
  v15 = v3;
  v13 = 0;
  sub_2398285B0((uint64_t)a2, &v14, 0);
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*(_QWORD *)a2);
  v6 = v5;
  if ((v5 & 0xFFFFFF) <= 0x10000)
    v6 = 0;
  v7 = v5 & 0xFF00;
  if ((v5 & 0xFF0000) == 0)
    v7 = 0;
  a2[60] = v7 & 0xFF00 | v6;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  result = v13;
  v13 = 0;
  if (result)
  {
    v12 = sub_23981C810(result);
    return MEMORY[0x23B83E31C](v12);
  }
  return result;
}

void sub_2398E8C58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E8C6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_239416DA0(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398E8C90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398E8CAC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE960;
  sub_239825474(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED418;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981C810((uint64_t)v5);
}

void sub_2398E8D68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981C810((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E8D98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981C810((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E8DAC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E8ECC(&v10, 37, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_23970A418((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E8E88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E8EB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E8ECC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE3A00;
    sub_2398DF9CC(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE3A00;
    return sub_239709924(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E8FAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E8FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E8FF0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E9110(&v10, 38, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_2397671E4((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E90CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E90FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E9110@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE6778;
    sub_2398DFD64(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE6778;
    return sub_2397665A4(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E91F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E9204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E9234(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E9354(&v10, 39, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239768004((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E9310(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E9340(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E9354@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE69A0;
    sub_2398E00FC(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE69A0;
    return sub_2397673C4(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E9434(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E9448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

void sub_2398E9478(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char v12[8];
  uint64_t v13;

  v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 8);
  v10 = **(_QWORD **)a1;
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_2398E9598(&v10, 40, *(_DWORD **)(a1 + 8), (uint64_t)v12);
  *a2 = &off_250ADB778;
  sub_239768E24((uint64_t)v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)&v13);
  v6 = nullsub_4(v12);
  v7 = v11;
  if (v11)
  {
    v8 = (unint64_t *)&v11->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2398E9554(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  j_nullsub_4_89(v2);
  sub_239416DA0((uint64_t)va2);
  nullsub_4((uint64_t *)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398E9584(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E9598@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count_vtbl *v10;
  uint64_t result;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count_vtbl *v13;

  v6 = *a1;
  if (v6)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + 24))(&v12, v8, a2, *(_QWORD *)a3);
    v9 = v12;
    v12 = 0;
    v13 = v9;
    *(_QWORD *)a4 = &off_250AE6BC8;
    sub_2398E0494(&v13, (_WORD *)(a4 + 8));
    v10 = v13;
    v13 = 0;
    if (v10)
      (*((void (**)(std::__shared_weak_count_vtbl *))v10->~__shared_weak_count + 1))(v10);
    result = (uint64_t)v12;
    v12 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    *(_QWORD *)a4 = &off_250AE6BC8;
    return sub_2397681E4(a3, (_WORD *)(a4 + 8));
  }
  return result;
}

void sub_2398E9678(_Unwind_Exception *a1)
{
  uint64_t v1;

  nullsub_4(v1);
  _Unwind_Resume(a1);
}

void sub_2398E968C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_239EC2F9C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_2398E96BC(int a1)
{
  return ((uint64_t (*)(void))((char *)sub_2398E96D8 + 4 * byte_239F01ABE[a1]))();
}

uint64_t sub_2398E96D8@<X0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E9824(a1, a2);
}

double sub_2398E96E0@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E98D8(a1, a2);
}

double sub_2398E96E8@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E998C(a1, a2);
}

double sub_2398E96F0@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E9A40(a1, a2);
}

double sub_2398E96F8@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E9AF4(a1, a2);
}

double sub_2398E9700@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E9BA8(a1, a2);
}

double sub_2398E9708@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E9C5C(a1, a2);
}

double sub_2398E9710@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E9D10(a1, a2);
}

double sub_2398E9718@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E9DC4(a1, a2);
}

double sub_2398E9720@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E9E78(a1, a2);
}

double sub_2398E9728@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E9F2C(a1, a2);
}

double sub_2398E9730@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398E9FE0(a1, a2);
}

double sub_2398E9738@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA094(a1, a2);
}

double sub_2398E9740@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA148(a1, a2);
}

double sub_2398E9748@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA1FC(a1, a2);
}

double sub_2398E9750@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA2B0(a1, a2);
}

double sub_2398E9758@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA364(a1, a2);
}

double sub_2398E9760@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA418(a1, a2);
}

double sub_2398E9768@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA4CC(a1, a2);
}

double sub_2398E9770@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA580(a1, a2);
}

double sub_2398E9778@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA634(a1, a2);
}

double sub_2398E9780@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA6E8(a1, a2);
}

double sub_2398E9788@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA79C(a1, a2);
}

double sub_2398E9790@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA850(a1, a2);
}

double sub_2398E9798@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA904(a1, a2);
}

double sub_2398E97A0@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EA9B8(a1, a2);
}

double sub_2398E97A8@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EAA6C(a1, a2);
}

double sub_2398E97B0@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EAB20(a1, a2);
}

double sub_2398E97B8@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EABD4(a1, a2);
}

double sub_2398E97C0@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EAC88(a1, a2);
}

double sub_2398E97C8@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EAD3C(a1, a2);
}

double sub_2398E97D0@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EADF0(a1, a2);
}

double sub_2398E97D8@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EAEA4(a1, a2);
}

double sub_2398E97E0@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EAF58(a1, a2);
}

double sub_2398E97E8@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EB00C(a1, a2);
}

double sub_2398E97F0@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EB0C0(a1, a2);
}

double sub_2398E97F8@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EB174(a1, a2);
}

double sub_2398E9800@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EB228(a1, a2);
}

double sub_2398E9808@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EB2DC(a1, a2);
}

double sub_2398E9810@<D0>(_DWORD **a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EB390(a1, a2);
}

void sub_2398E9818(uint64_t a1, uint64_t a2)
{
  sub_239EC23F4(a1, a2);
}

uint64_t sub_2398E9824@<X0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  char v5;
  uint64_t (**v6)();
  _WORD v7[40];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250ADB628;
  sub_23949E6D4(v3, (void **)&v5, v7);
  *a2 = &off_250ADB778;
  sub_239709384((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  return nullsub_4(&v6);
}

void sub_2398E98A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E98C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E98D8@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  __int16 v5;
  uint64_t (**v6)();
  _WORD v7[40];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE4178;
  sub_2398D84A4(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_239761728((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398E9954(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E9978(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E998C@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  uint64_t (**v5)();
  _WORD v6[40];

  v3 = *a1;
  v5 = &off_250AE5E18;
  sub_2398D8824(v3, word_239F01AE8, v6);
  *a2 = &off_250ADB778;
  sub_239762530((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v6);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_2398E9A08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v3);
  sub_239416DA0(v2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E9A2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E9A40@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  int v5;
  uint64_t (**v6)();
  _WORD v7[40];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250ADD920;
  sub_23958CFE0(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_2397096A8((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398E9ABC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E9AE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E9AF4@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  char v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEBA48;
  sub_2398D8CD0(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_2397CA6BC((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398E9B70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E9B94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E9BA8@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  __int16 v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEBB40;
  sub_2398D9068(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_2397CDB30((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398E9C24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E9C48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E9C5C@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  uint64_t (**v5)();
  _WORD v6[64];

  v3 = *a1;
  v5 = &off_250AEBC50;
  sub_2398D9400(v3, word_239F01AE8, v6);
  *a2 = &off_250ADB778;
  sub_2397D0A60((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v6);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_2398E9CD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v3);
  sub_239416DA0(v2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E9CFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E9D10@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  int v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEBD60;
  sub_2398D9798(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_2397D38E4((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398E9D8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E9DB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E9DC4@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  char v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEDA18;
  sub_2398D9B30(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_23982F700((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398E9E40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E9E64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E9E78@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  __int16 v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEDB98;
  sub_2398D9EC8(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_2398302E4((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398E9EF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E9F18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E9F2C@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  uint64_t (**v5)();
  _WORD v6[64];

  v3 = *a1;
  v5 = &off_250AEDD18;
  sub_2398DA260(v3, word_239F01AE8, v6);
  *a2 = &off_250ADB778;
  sub_239830F44((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v6);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_2398E9FA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v3);
  sub_239416DA0(v2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398E9FCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398E9FE0@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  int v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEDE98;
  sub_2398DA5F8(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_239831AFC((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA05C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA080(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA094@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  char v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEBF48;
  sub_2398DA990(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_2397E5EF8((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA110(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA134(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA148@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  __int16 v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEC370;
  sub_2398DAD28(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_2397F3198((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA1C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA1E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA1FC@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  uint64_t (**v5)();
  _WORD v6[64];

  v3 = *a1;
  v5 = &off_250AEC5A8;
  sub_2398DB0C0(v3, word_239F01AE8, v6);
  *a2 = &off_250ADB778;
  sub_2397FE854((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v6);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_2398EA278(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v3);
  sub_239416DA0(v2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA29C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA2B0@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  int v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEC7E0;
  sub_2398DB458(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_239807D64((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA32C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA350(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA364@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  char v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE38E8;
  sub_2398DB7F0(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_23970B00C((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA3E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA404(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA418@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  __int16 v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEE238;
  sub_2398DBB88(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_2398356DC((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA494(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA4B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA4CC@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  uint64_t (**v5)();
  _WORD v6[64];

  v3 = *a1;
  v5 = &off_250AEE3B8;
  sub_2398DBF20(v3, word_239F01AE8, v6);
  *a2 = &off_250ADB778;
  sub_23983633C((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v6);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_2398EA548(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v3);
  sub_239416DA0(v2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA56C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA580@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  int v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEE538;
  sub_2398DC2B8(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_239836EF4((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA5FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA620(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA634@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  char v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250ADBEA0;
  sub_23949C9B0(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_239709138((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA6B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA6D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA6E8@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  __int16 v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE6058;
  sub_2398DC77C(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_2397635BC((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA764(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA788(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA79C@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  uint64_t (**v5)();
  _WORD v6[64];

  v3 = *a1;
  v5 = &off_250AE09C8;
  sub_2398DCB14(v3, word_239F01AE8, v6);
  *a2 = &off_250ADB778;
  sub_2397638FC((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v6);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_2398EA818(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v3);
  sub_239416DA0(v2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA83C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA850@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  int v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250ADDC30;
  sub_23958D234(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_23970977C((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA8CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA8F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA904@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  char v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE3B18;
  sub_2398DCFD8(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_23970AF38((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EA980(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EA9A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EA9B8@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  __int16 v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEC468;
  sub_2398DD370(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_2397F4398((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EAA34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EAA58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EAA6C@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  uint64_t (**v5)();
  _WORD v6[64];

  v3 = *a1;
  v5 = &off_250AEC6A0;
  sub_2398DD708(v3, word_239F01AE8, v6);
  *a2 = &off_250ADB778;
  sub_2397FFA78((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v6);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_2398EAAE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v3);
  sub_239416DA0(v2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EAB0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EAB20@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  int v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEC8D8;
  sub_2398DDAA0(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_239808F4C((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EAB9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EABC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EABD4@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  char v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE0988;
  sub_2398DDE38(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_239709850((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EAC50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EAC74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EAC88@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  __int16 v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE62E0;
  sub_2398DE1D0(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_239764E60((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EAD04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EAD28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EAD3C@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  uint64_t (**v5)();
  _WORD v6[64];

  v3 = *a1;
  v5 = &off_250AE0A08;
  sub_2398DE568(v3, word_239F01AE8, v6);
  *a2 = &off_250ADB778;
  sub_23970B0E0((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v6);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_2398EADB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v3);
  sub_239416DA0(v2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EADDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EADF0@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  int v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE08B8;
  sub_2398DE900(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_23970B1B4((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EAE6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EAE90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EAEA4@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  char v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE6538;
  sub_2398DEC98(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_239766158((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EAF20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EAF44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EAF58@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  __int16 v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEC040;
  sub_2398DF030(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_2397EA2CC((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EAFD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EAFF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EB00C@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  uint64_t (**v5)();
  _WORD v6[64];

  v3 = *a1;
  v5 = &off_250AEC150;
  sub_2398DF3C8(v3, word_239F01AE8, v6);
  *a2 = &off_250ADB778;
  sub_2397ED7C4((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v6);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_2398EB088(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v3);
  sub_239416DA0(v2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EB0AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EB0C0@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  int v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AEC260;
  sub_2398DF760(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_2397F0960((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EB13C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EB160(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EB174@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  char v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE3A00;
  sub_2398DFAF8(v3, &v5, v7);
  *a2 = &off_250ADB778;
  sub_23970A418((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EB1F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EB214(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EB228@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  __int16 v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE6778;
  sub_2398DFE90(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_2397671E4((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EB2A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EB2C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EB2DC@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  uint64_t (**v5)();
  _WORD v6[64];

  v3 = *a1;
  v5 = &off_250AE69A0;
  sub_2398E0228(v3, word_239F01AE8, v6);
  *a2 = &off_250ADB778;
  sub_239768004((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v6);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_2398EB358(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v3);
  sub_239416DA0(v2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EB37C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

double sub_2398EB390@<D0>(_DWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v3;
  double result;
  int v5;
  uint64_t (**v6)();
  _WORD v7[64];

  v3 = *a1;
  v5 = 0;
  v6 = &off_250AE6BC8;
  sub_2398E05C0(v3, (uint64_t)&v5, v7);
  *a2 = &off_250ADB778;
  sub_239768E24((uint64_t)&v6, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398EB40C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  j_nullsub_4_89(v2);
  sub_239416DA0(v3);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EB430(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EB444(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
}

uint64_t sub_2398EB450(uint64_t a1)
{
  return nullsub_4(a1);
}

uint64_t sub_2398EB458()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  *v0 = 0;
  return result;
}

uint64_t sub_2398EB464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v12;
  int __dst;

  memcpy(&v12, (const void *)(a3 + 4 * a2 - 8), sizeof(v12));
  *(_QWORD *)a1 = v12;
  memcpy(&__dst, (const void *)(a5 + 4 * a4 - 4), sizeof(__dst));
  *(_DWORD *)(a1 + 8) = __dst * a6;
  if (a2 != a4)
    sub_239EBEFD8();
  return a1;
}

void sub_2398EB4F4(uint64_t a1, int a2)
{
  sub_2398EB5B4(a2);
}

void sub_2398EB524(uint64_t a1, int a2)
{
  sub_2398F0784(a2);
}

void sub_2398EB554(uint64_t a1, int a2)
{
  sub_2398F5698(a2);
}

void sub_2398EB584(uint64_t a1, int a2)
{
  sub_2398F99EC(a2);
}

void sub_2398EB5B4(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398EB5D8@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EB6BC(a1, a2);
}

double sub_2398EB5E4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EC808(a1, a2);
}

double sub_2398EB5F0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EBEC8(a1, a2);
}

double sub_2398EB5FC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EC368(a1, a2);
}

double sub_2398EB608@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398ECCA8(a1, a2);
}

double sub_2398EB614@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398ED2BC(a1, a2);
}

double sub_2398EB620@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EE1DC(a1, a2);
}

double sub_2398EB62C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398EF4D0(a1, a2);
}

uint64_t sub_2398EB6BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398EB8C8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBF48;
  sub_2397E4B58((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398EB7D0(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398EB798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EB7B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EB7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEADB0;
  sub_2397E5C8C(a2, &v11);
  sub_2398EBB58(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397E5EF8(a2, (uint64_t)(a3 + 1));
}

void sub_2398EB88C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398EB8A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BC484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398EB8B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398EB8C8(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 37;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398EBA08((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_23970A418((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398EB9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398EB9F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398EBA08(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 37);
  *a2 = &off_250AE3A00;
  sub_2397F0C3C((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398EBB20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398EBB44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EBB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_2398EBD2C(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398EBD08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398EBD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397E5638((unsigned int *)&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2397E5A94((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398EBEA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398EBEC8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398EB8C8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3B18;
  sub_2397E61D4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398EBFDC(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398EBFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EBFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EBFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE1878;
  sub_239763C3C(a2, &v11);
  sub_2398EC0D0(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23970AF38(a2, (uint64_t)(a3 + 1));
}

void sub_2398EC094(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398EC0A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A8C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398EC0BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EC0D0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E7244(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398EC304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398EC368@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398EB8C8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0988;
  sub_2396214F4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398EC47C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398EC444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EC460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EC47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE1760;
  sub_239763EA8(a2, &v11);
  sub_2398EC570(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239709850(a2, (uint64_t)(a3 + 1));
}

void sub_2398EC534(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398EC548(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A24((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398EC55C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EC570(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E6AF8(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398EC7A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398EC808@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398EB8C8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6538;
  sub_2397E44CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398EC91C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398EC8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EC900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EC91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE56F0;
  sub_239765EEC(a2, &v11);
  sub_2398ECA10(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239766158(a2, (uint64_t)(a3 + 1));
}

void sub_2398EC9D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398EC9E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239758F54((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398EC9FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398ECA10(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397F1560(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398ECC44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398ECCA8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398EB8C8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3A00;
  sub_2397F0C3C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398ECDF4(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_23970A418((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398ECD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398ECDBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398ECDD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398ECDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2398ECF98(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398ECF34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398ECF98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398ED0F0(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398ED0F0(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397CB3C8(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398ED258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398ED2BC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398EB8C8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6778;
  sub_2397FC2BC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398ED3D0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398ED398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398ED3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398ED3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5A00;
  sub_239766F78(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF420[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397671E4(a2, (uint64_t)(a4 + 1));
}

void sub_2398ED4BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398ED4D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398ED4E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975BEF4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398ED4F8(uint64_t **a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  return sub_2398ED540(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7);
}

uint64_t sub_2398ED508(uint64_t **a1, uint64_t a2)
{
  return sub_2398EDBB8(**a1, (*a1)[1], a2);
}

uint64_t sub_2398ED518(uint64_t **a1)
{
  char v2;

  return sub_2398ED668(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2398ED540(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;

  v8 = *(unsigned __int8 *)(a3 + 16);
  if (!*(_BYTE *)(a3 + 16))
  {
    v11 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    LOWORD(v15) = 0;
    v16 = 0xFFFF;
    if (v8)
      goto LABEL_17;
    goto LABEL_15;
  }
  v9 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a3 + 8) <= 255.0)
    v10 = *(double *)(a3 + 8);
  v11 = (int)v10;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
  v16 = HIWORD(v15);
  if (v8 != (unsigned __int16)v15)
    goto LABEL_17;
LABEL_15:
  if (v16 == v11)
    return sub_2398ED668(a1, a2, (uint64_t)v20);
LABEL_17:
  v24 = (double)v8;
  v23 = 1.0 / ((double)v11 - (double)v8);
  v20[0] = &v24;
  v20[1] = &v23;
  v19[0] = &v22;
  v19[1] = &v21;
  v18[0] = v20;
  v18[1] = v19;
  return sub_2398ED910(a1, a2, (uint64_t)v18, (double)v16 - (double)(unsigned __int16)v15, (double)(unsigned __int16)v15, a6, a7, a8);
}

uint64_t sub_2398ED668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397E88F0((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398ED8AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398ED910(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double ****v34;

  v11 = *(_QWORD *)(a1 + 8);
  if (!v11)
    goto LABEL_17;
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  v11 = *(_QWORD *)(a1 + 8);
  v16 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v16)
    goto LABEL_43;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (v19)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v32 = 0;
    v20 = *(_QWORD *)(a2 + 8);
    if (!v20)
      goto LABEL_33;
LABEL_18:
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v20 = *(_QWORD *)(a2 + 8);
    v25 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v25)
      goto LABEL_29;
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
    do
      v28 = __ldaxr(v26);
    while (__stlxr(v28 - 1, v26));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v20 + 96))(&v31, v20, 1);
    v33 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
  std::__shared_weak_count::__release_weak(v16);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v11 + 96))(&v32, v11, 0);
  v20 = *(_QWORD *)(a2 + 8);
  if (v20)
    goto LABEL_18;
LABEL_33:
  v31 = 0;
  v33 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v34 = (double ****)&v33;
    sub_2397E8E14(&v34, a1, a2, a4, a5, a6, a7, a8);
  }
LABEL_37:
  v29 = v31;
  v31 = 0;
  if (v29)
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  result = v32;
  v32 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398EDB54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398EDBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  __int16 *v8;
  __int16 *v9;
  char *v10;
  __int16 *v11;
  char v12;
  char v13;
  __int16 v14;
  __int16 v15;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    if ((int)v6 <= 0xFF)
    {
      v15 = v5;
      v14 = (int)v6;
      v13 = v5;
      v12 = (int)v6;
      v8 = (__int16 *)&v13;
      v9 = &v15;
      v10 = &v12;
      v11 = &v14;
      return sub_2398EDC8C(a1, a2, (uint64_t)&v8);
    }
    v15 = v5;
    LOBYTE(v14) = v5;
  }
  else
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  v8 = &v14;
  v9 = &v15;
  return sub_2398EDF34(a1, a2, (uint64_t)&v8);
}

uint64_t sub_2398EDC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397E9648(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398EDED0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398EDF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397E9CC4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398EE178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398EE1DC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398EB8C8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE69A0;
  sub_239805808((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398EE2F0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398EE2B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EE2D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EE2F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5B88;
  sub_239767D98(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF438[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239768004(a2, (uint64_t)(a4 + 1));
}

void sub_2398EE3DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398EE3F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EE404(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975DB84((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EE418(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398EE52C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398EE428(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2398EEBC0((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2398EEBC0((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2398EE504(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398EE670(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398EE52C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  unsigned int v4;
  double v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  unint64_t v24;
  unint64_t v25;
  double v26;
  double v27;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v5 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    _Q0.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = (int)_Q0.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = 255;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v6;
  if (_ZF)
    return sub_2398EE670(a1, a2, (uint64_t)v23, _Q0);
  v27 = (double)v4;
  __asm { FCVT            D0, H0 }
  v25 = _Q0.n128_u64[0];
  v26 = 1.0 / ((double)v6 - (double)v4);
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v24 = _Q0.n128_u64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_2398EE918(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_2398EE670(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397EB274((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398EE8B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398EE918(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397EB8E4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398EEB5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398EEBC0(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  char *v23;
  __int16 *v24;
  char v25;
  char v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      LOBYTE(v27) = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398EEF80(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 255.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      LOBYTE(v27) = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398EF228(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_2398EE670(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (__int16 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2398EECD8(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2398EECD8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397EC274(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398EEF1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398EEF80(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397ECAA8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398EF1C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398EF228(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397ED154(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398EF46C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398EF4D0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398EB8C8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6BC8;
  sub_23980ED50((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398EF5E4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398EF5AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EF5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EF5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5D10;
  sub_239768BB8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF450[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239768E24(a2, (uint64_t)(a4 + 1));
}

void sub_2398EF6D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398EF6E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398EF6F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975F87C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398EF70C(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_2398EF80C(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_2398EF71C(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_2398EFE8C((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_2398EFE8C((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_2398EF7E4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398EF93C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398EF80C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  unsigned int v12;
  double v13;
  float v14;
  double v16;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v11 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    a4.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = (int)a4.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      a4.n128_u64[0] = 0xC7EFFFFFE0000000;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
      a4.n128_f32[0] = a4.n128_f64[0];
      v13 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v13 = *(double *)(a3 + 32);
      v14 = v13;
      if (a4.n128_f32[0] != (float)v10 || v14 != (float)v12)
        goto LABEL_15;
      return sub_2398EF93C(a1, a2, (uint64_t)v21, a4);
    }
  }
  else
  {
    v12 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v14 = 1.0;
  a4.n128_u32[0] = 0;
  if ((float)v10 != 0.0 || 1.0 != (float)v12)
  {
LABEL_15:
    v25 = (double)v10;
    v23 = a4.n128_f32[0];
    v16 = v14;
    a4.n128_f64[0] = v16 - a4.n128_f32[0];
    v22 = a4.n128_u64[0];
    v21[0] = &v25;
    v21[1] = &v24;
    v20[0] = &v23;
    v20[1] = &v22;
    v19[0] = v21;
    v19[1] = v20;
    return sub_2398EFBE4(a1, a2, (uint64_t)v19, a4, v16, 1.0 / ((double)v12 - (double)v10), 1.0, a8, a9, a10);
  }
  return sub_2398EF93C(a1, a2, (uint64_t)v21, a4);
}

uint64_t sub_2398EF93C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2397EE744((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398EFB80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398EFBE4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f32[0] = sub_2397EED04(&v36, a1, a2, a4.n128_f32[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398EFE28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398EFE8C(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  char *v17;
  float *v18;
  char v19;
  char v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 255.0;
    v3 = a3 >= 255.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOBYTE(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2398F0234(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1132396544;
      if (a3 <= 255.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOBYTE(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2398F04DC(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2398EF93C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2398EFF8C(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_2398EFF8C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397EF464(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F01D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F0234(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397EFCB4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F0478(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F04DC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397F0328(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F0720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398F0784(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398F07A8@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F088C(a1, a2);
}

double sub_2398F07B4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F19D8(a1, a2);
}

double sub_2398F07C0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F1098(a1, a2);
}

double sub_2398F07CC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F1538(a1, a2);
}

double sub_2398F07D8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F1E78(a1, a2);
}

double sub_2398F07E4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F2ACC(a1, a2);
}

double sub_2398F07F0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F30E0(a1, a2);
}

double sub_2398F07FC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F43E4(a1, a2);
}

uint64_t sub_2398F088C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398F0A98(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC370;
  sub_2397F1DD8((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398F09A0(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398F0968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F0984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F09A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEAEA8;
  sub_2397F2F2C(a2, &v11);
  sub_2398F0D28(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397F3198(a2, (uint64_t)(a3 + 1));
}

void sub_2398F0A5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F0A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BD058((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398F0A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398F0A98(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 38;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398F0BD8((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2397671E4((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398F0B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398F0BC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398F0BD8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 38);
  *a2 = &off_250AE6778;
  sub_2397FC2BC((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398F0CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398F0D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F0D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_2398F0EFC(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F0ED8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F0EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397F28B8(&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2397F2D14((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F1074(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F1098@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F0A98(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC468;
  sub_2397F349C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F11AC(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F1174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F1190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F11AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AEB570;
  sub_2397F412C(a2, &v11);
  sub_2398F12A0(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397F4398(a2, (uint64_t)(a3 + 1));
}

void sub_2398F1264(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F1278(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C356C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398F128C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F12A0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397F4F98(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F14D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F1538@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F0A98(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE62E0;
  sub_2397F4674((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F164C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F1614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F1630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F164C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE5350;
  sub_239764BF4(a2, &v11);
  sub_2398F1740(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239764E60(a2, (uint64_t)(a3 + 1));
}

void sub_2398F1704(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F1718(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239754008((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398F172C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F1740(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397F3EA4(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F1974(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F19D8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F0A98(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC040;
  sub_2397E7D68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F1AEC(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F1AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F1AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F1AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AEB760;
  sub_2397EA060(a2, &v11);
  sub_2398F1BE0(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397EA2CC(a2, (uint64_t)(a3 + 1));
}

void sub_2398F1BA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F1BB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C6D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398F1BCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F1BE0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397FCBE0(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F1E14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F1E78@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F0A98(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3A00;
  sub_2397F0C3C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F1F8C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F1F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F1F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F1F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5878;
  sub_23976622C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF468[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970A418(a2, (uint64_t)(a4 + 1));
}

void sub_2398F2078(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F208C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F20A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975A724((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F20B4(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398F20FC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398F20C4(uint64_t **a1, uint64_t a2)
{
  return sub_2398F2774(**a1, (*a1)[1], a2);
}

uint64_t sub_2398F20D4(uint64_t **a1)
{
  char v2;

  return sub_2398F2224(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2398F20FC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (!*(_BYTE *)(a3 + 16))
  {
    v7 = -65536;
    v8 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    v11 = 255;
    v12 = HIWORD(v7);
    if (v8 != (unsigned __int16)v7)
      goto LABEL_17;
    goto LABEL_15;
  }
  v4 = *(double *)a3;
  if (*(double *)a3 < 0.0)
    v4 = 0.0;
  v5 = (int)v4;
  v6 = 65535.0;
  if (*(double *)(a3 + 8) <= 65535.0)
    v6 = *(double *)(a3 + 8);
  v7 = v5 | ((int)v6 << 16);
  v8 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v9 = *(double *)(a3 + 24);
  if (v9 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v10 = *(double *)(a3 + 32);
  v11 = (int)v10;
  v12 = HIWORD(v7);
  if (v8 != (unsigned __int16)v7)
    goto LABEL_17;
LABEL_15:
  if (v12 == v11)
    return sub_2398F2224(a1, a2, (uint64_t)v16);
LABEL_17:
  v20 = (double)(unsigned __int16)v7;
  v18 = (double)v8;
  v19 = 1.0 / ((double)v12 - v20);
  a4.n128_f64[0] = (double)v11 - (double)v8;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_2398F24CC(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_2398F2224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397F586C((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F2468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F24CC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397F5D8C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F2710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F2774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  _QWORD v8[4];
  int v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    HIWORD(v9) = v5;
    LOWORD(v9) = (int)v6;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 255;
  }
  v8[0] = (char *)&v9 + 2;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2398F2824(a1, a2, (uint64_t)v8);
}

uint64_t sub_2398F2824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int16 ***)&v28;
    sub_2397F6694(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F2A68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F2ACC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F0A98(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6778;
  sub_2397FC2BC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F2C18(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2397671E4((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F2BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F2BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F2BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F2C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2398F2DBC(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F2D58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398F2DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398F2F14(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398F2F14(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397D5B2C(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F307C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398F30E0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F0A98(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE69A0;
  sub_239805808((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F31F4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F31BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F31D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F31F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5B88;
  sub_239767D98(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF480[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239768004(a2, (uint64_t)(a4 + 1));
}

void sub_2398F32E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F32F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F3308(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975DB84((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F331C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398F3430(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398F332C(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2398F3AD0((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2398F3AD0((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2398F3408(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398F3580(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398F3430(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  unsigned int v15;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    _Q0.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)_Q0.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  v15 = (unsigned __int16)v6;
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm { FCVT            S3, H0 }
  v18 = HIWORD(v6);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v18;
  if (_ZF)
    return sub_2398F3580(a1, a2, (uint64_t)v25, _Q0);
  v29 = (double)v15;
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  v28 = 1.0 / ((double)v18 - (double)v15);
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2398F3828(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2398F3580(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397F7974((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F37C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F3828(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397F7FE4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F3A6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F3AD0(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  __int16 *v23;
  __int16 *v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      v27 = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398F3E94(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 65535.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      v27 = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398F413C(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_2398F3580(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = &v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2398F3BEC(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2398F3BEC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F8978(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F3E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F3E94(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F91AC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F40D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F413C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F9858(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F4380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F43E4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F0A98(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6BC8;
  sub_23980ED50((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F44F8(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F44C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F44DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F44F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5D10;
  sub_239768BB8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF498[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239768E24(a2, (uint64_t)(a4 + 1));
}

void sub_2398F45E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F45F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F460C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975F87C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F4620(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398F4720(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398F4630(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_2398F4D9C((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_2398F4D9C((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_2398F46F8(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398F484C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398F4720(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  float v8;
  unsigned int v9;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  unint64_t v15;
  double v16;
  double v17;
  double v18;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    a4.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)a4.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v8 = 1.0;
    a4.n128_u32[0] = 0;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  a4.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)(a3 + 24) >= -3.40282347e38)
    a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
  a4.n128_f32[0] = a4.n128_f64[0];
  v7 = 3.40282347e38;
  if (*(double *)(a3 + 32) <= 3.40282347e38)
    v7 = *(double *)(a3 + 32);
  v8 = v7;
LABEL_14:
  v9 = HIWORD(v6);
  if (a4.n128_f32[0] == (float)(unsigned __int16)v6 && v8 == (float)v9)
    return sub_2398F484C(a1, a2, (uint64_t)v14, a4);
  v18 = (double)(unsigned __int16)v6;
  v16 = a4.n128_f32[0];
  v17 = 1.0 / ((double)v9 - v18);
  a4.n128_f64[0] = v8 - a4.n128_f32[0];
  v15 = a4.n128_u64[0];
  v14[0] = &v18;
  v14[1] = &v17;
  v13[0] = &v16;
  v13[1] = &v15;
  v12[0] = v14;
  v12[1] = v13;
  return sub_2398F4AF4(a1, a2, (uint64_t)v12, a4);
}

uint64_t sub_2398F484C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397FA36C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F4A90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F4AF4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t ****)&v29;
    a4.n128_f64[0] = sub_2397FA8A4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F4D38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F4D9C(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  __int16 *v17;
  float *v18;
  __int16 v19;
  __int16 v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 65535.0;
    v3 = a3 >= 65535.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOWORD(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2398F5148(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1199570688;
      if (a3 <= 65535.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOWORD(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2398F53F0(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_2398F484C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_2398F4EA0(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_2398F4EA0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FAF68(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F50E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F5148(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FB6E4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F538C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F53F0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FBD20(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F5634(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398F5698(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398F56BC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F57A0(a1, a2);
}

double sub_2398F56C8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F644C(a1, a2);
}

double sub_2398F56D4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F68EC(a1, a2);
}

double sub_2398F56E0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F5FAC(a1, a2);
}

double sub_2398F56EC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F6D8C(a1, a2);
}

double sub_2398F56F8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F7A20(a1, a2);
}

double sub_2398F5704@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F86C0(a1, a2);
}

double sub_2398F5710@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F8D44(a1, a2);
}

uint64_t sub_2398F57A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398F59AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC5A8;
  sub_2397FD434((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398F58B4(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398F587C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F5898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F58B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEAFA0;
  sub_2397FE5E8(a2, &v12);
  sub_2398F5C3C(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397FE854(a2, (uint64_t)(a3 + 1));
}

void sub_2398F5970(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F5984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BDCA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398F5998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398F59AC(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 39;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398F5AEC((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239768004((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398F5AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398F5AD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398F5AEC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 39);
  *a2 = &off_250AE69A0;
  sub_239805808((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398F5C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398F5C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F5C3C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398F5E10(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F5DEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F5E10(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        a3.n128_f64[0] = sub_2397FDF14(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_u64[0] = sub_2397FE3D8((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2398F5F88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F5FAC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F59AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC6A0;
  sub_2397FEB58((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F60C0(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F6088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F60A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F60C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB668;
  sub_2397FF80C(a2, &v12);
  sub_2398F61B4(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397FFA78(a2, (uint64_t)(a3 + 1));
}

void sub_2398F6178(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F618C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C41B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398F61A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F61B4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2397FFFEC(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F63E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F644C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F59AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0A08;
  sub_239627148((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F6560(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F6528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F6544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F6560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE54D8;
  sub_239764F34(a2, &v12);
  sub_2398F6654(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23970B0E0(a2, (uint64_t)(a3 + 1));
}

void sub_2398F6618(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F662C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239755C98((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398F6640(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F6654(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2397FF560(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F6888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F68EC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F59AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC150;
  sub_2397EA604((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F6A00(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F69C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F69E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F6A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB858;
  sub_2397ED558(a2, &v12);
  sub_2398F6AF4(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397ED7C4(a2, (uint64_t)(a3 + 1));
}

void sub_2398F6AB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F6ACC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C79B0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398F6AE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F6AF4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23980612C(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F6D28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F6D8C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F59AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3A00;
  sub_2397F0C3C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F6EA0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F6E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F6E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F6EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5878;
  sub_23976622C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF4B0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970A418(a2, (uint64_t)(a4 + 1));
}

void sub_2398F6F8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F6FA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F6FB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975A724((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F6FC8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398F7010(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398F6FD8(uint64_t **a1, uint64_t a2)
{
  return sub_2398F76B0(**a1, (*a1)[1], a2);
}

uint64_t sub_2398F6FE8(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398F7160(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398F7010(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  unsigned int v12;
  double v13;
  double v14;
  unsigned int v15;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  double v24;
  double v25;
  double v26;
  unint64_t v27;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v12 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = 255;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v12 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v13 = *(double *)(a3 + 24);
  if (v13 < 0.0)
    v13 = 0.0;
  v12 = (int)v13;
  v14 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v14 = *(double *)(a3 + 32);
  v15 = (int)v14;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v15;
  if (_ZF)
    return sub_2398F7160(a1, a2, (uint64_t)v23, _Q0);
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v25 = (double)v12;
  v26 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v15 - (double)v12;
  v24 = _Q0.n128_f64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_2398F7408(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_2398F7160(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239800914((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F73A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F7408(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_239800E98(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F764C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F76B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  char v19;
  char v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 23544;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_2398F7778(a1, a2, (uint64_t)v16);
}

uint64_t sub_2398F7778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2398017B8(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F79BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F7A20@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F59AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6778;
  sub_2397FC2BC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F7B34(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F7AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F7B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F7B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5A00;
  sub_239766F78(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF4C8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397671E4(a2, (uint64_t)(a4 + 1));
}

void sub_2398F7C20(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F7C34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F7C48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975BEF4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F7C5C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398F7CA4(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398F7C6C(uint64_t **a1, uint64_t a2)
{
  return sub_2398F8350(**a1, (*a1)[1], a2);
}

uint64_t sub_2398F7C7C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398F7E00(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398F7CA4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v18;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  double v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = -65536;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
LABEL_14:
  v16 = (unsigned __int16)v15;
  __asm { FCVT            S2, H0 }
  v18 = HIWORD(v15);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v18;
  if (_ZF)
    return sub_2398F7E00(a1, a2, (uint64_t)v26, _Q0);
  __asm { FCVT            D0, H0 }
  v30 = _D0;
  __asm { FCVT            D1, H1 }
  v28 = (double)v16;
  v29 = 1.0 / (_D1 - _D0);
  v27 = (double)v18 - (double)v16;
  v26[0] = &v30;
  v26[1] = &v29;
  v25[0] = &v28;
  v25[1] = &v27;
  v24[0] = v26;
  v24[1] = v25;
  return sub_2398F80A8(a1, a2, (uint64_t)v24);
}

uint64_t sub_2398F7E00(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23980240C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F8044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F80A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_23980295C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F82EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F8350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 31744;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_2398F8418(a1, a2, (uint64_t)v16);
}

uint64_t sub_2398F8418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_239803184(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F865C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398F86C0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F59AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE69A0;
  sub_239805808((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F880C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239768004((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F87B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F87D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F87F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F880C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v17, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
LABEL_17:
  sub_239622218(a2, &v16);
  v13.n128_u64[0] = sub_2398F89B0(a1, a2);
  v14 = v16;
  v16 = 0;
  if (v14)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v14 + 8))(v14, v13.n128_f32[0]);
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v13);
  return result;
}

void sub_2398F894C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

__int16 sub_2398F89B0@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  __int16 *v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  __int16 v26;
  uint64_t v28;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 != *(_DWORD *)(a2 + 108) || v4 != v5)
  {
    v28 = (4 * *(_DWORD *)(a1 + 56));
    sub_2398F8B78(a1, a2, &v28);
    return v7;
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(_QWORD *)(v3 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v16)
  {
    a1 = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 32);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v17 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v17 < 0xF || (unint64_t)(v16 - v9) < 0x20)
    {
      v20 = (_WORD *)v16;
      v21 = (__int16 *)v9;
    }
    else
    {
      v18 = v17 + 1;
      v19 = (v17 + 1) & 0xFFFFFFFFFFFFFFF0;
      v20 = (_WORD *)(v16 + 2 * v19);
      v21 = (__int16 *)(v9 + 2 * v19);
      v22 = (__int128 *)(v9 + 16);
      v23 = (_OWORD *)(v16 + 16);
      v24 = v19;
      do
      {
        v7 = *(v22 - 1);
        v25 = *v22;
        *(v23 - 1) = v7;
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 16;
      }
      while (v24);
      if (v18 == v19)
        return v7;
    }
    do
    {
      v26 = *v21++;
      LOWORD(v7) = v26;
      *v20++ = v26;
    }
    while (v21 != (__int16 *)(v9 + 2 * v8));
  }
  return v7;
}

uint64_t sub_2398F8B78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v19 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v19, v6, 0);
LABEL_17:
  sub_239622218(a2, &v18);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    v15.n128_f64[0] = sub_2397DDAD4(a3, a1, a2);
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v16 + 8))(v16, v15);
  result = v19;
  v19 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398F8CE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398F8D44@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F59AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6BC8;
  sub_23980ED50((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398F8E58(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398F8E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F8E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F8E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5D10;
  sub_239768BB8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF4E0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239768E24(a2, (uint64_t)(a4 + 1));
}

void sub_2398F8F44(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F8F58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F8F6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975F87C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F8F80(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398F8FC8(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398F8F90(uint64_t **a1, uint64_t a2)
{
  return sub_2398F967C(**a1, (*a1)[1], a2);
}

uint64_t sub_2398F8FA0(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398F912C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398F8FC8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  float v13;
  double v14;
  float v15;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  unint64_t v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v12 = -3.40282347e38;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        v12 = *(double *)(a3 + 24);
      v13 = v12;
      v14 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v14 = *(double *)(a3 + 32);
      v15 = v14;
      __asm
      {
        FCVT            S4, H0
        FCVT            S5, H1
      }
      if (v13 != _S4 || v15 != _S5)
        goto LABEL_15;
      return sub_2398F912C(a1, a2, (uint64_t)v26, _Q0);
    }
  }
  else
  {
    _Q0.n128_u32[0] = 1006632960;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v15 = 1.0;
  v13 = 0.0;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (_S4 != 0.0 || 1.0 != _S5)
  {
LABEL_15:
    __asm { FCVT            D0, H0 }
    v30 = _Q0.n128_u64[0];
    __asm { FCVT            D1, H1 }
    v28 = v13;
    v29 = 1.0 / (_D1 - _Q0.n128_f64[0]);
    _Q0.n128_f64[0] = v15 - v13;
    v27 = _Q0.n128_f64[0];
    v26[0] = &v30;
    v26[1] = &v29;
    v25[0] = &v28;
    v25[1] = &v27;
    v24[0] = v26;
    v24[1] = v25;
    return sub_2398F93D4(a1, a2, (uint64_t)v24, _Q0);
  }
  return sub_2398F912C(a1, a2, (uint64_t)v26, _Q0);
}

uint64_t sub_2398F912C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2398043FC((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F9370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F93D4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f32[0] = sub_2398049C4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398F9618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398F967C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  _QWORD v14[4];
  __int16 v15;
  __int16 v16;
  float v17;
  float v18;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (v3 < -3.40282347e38)
      v3 = -3.40282347e38;
    _S0 = v3;
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    _S1 = v4;
    v17 = _S1;
    v18 = _S0;
    __asm { FCVT            H0, S0 }
    v16 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v17 = 1.0;
    v18 = 0.0;
    _H0 = 15360;
    v16 = 0;
  }
  v15 = _H0;
  v14[0] = &v16;
  v14[1] = &v18;
  v14[2] = &v15;
  v14[3] = &v17;
  return sub_2398F9744(a1, a2, (uint64_t)v14);
}

uint64_t sub_2398F9744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2398050F0(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398F9988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_2398F99EC(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398F9A10@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398F9AF4(a1, a2);
}

double sub_2398F9A1C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FA300(a1, a2);
}

double sub_2398F9A28@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FA7A0(a1, a2);
}

double sub_2398F9A34@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FAC40(a1, a2);
}

double sub_2398F9A40@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FBD40(a1, a2);
}

double sub_2398F9A4C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FC9A0(a1, a2);
}

double sub_2398F9A58@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FD630(a1, a2);
}

double sub_2398F9A64@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FB0E0(a1, a2);
}

uint64_t sub_2398F9AF4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398F9D00(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC7E0;
  sub_2398069A4((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398F9C08(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398F9BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398F9BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F9C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEB098;
  sub_239807AF8(a2, &v12);
  sub_2398F9F90(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239807D64(a2, (uint64_t)(a3 + 1));
}

void sub_2398F9CC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398F9CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BE878((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398F9CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398F9D00(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 40;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398F9E40((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239768E24((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398F9E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398F9E2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398F9E40(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 40);
  *a2 = &off_250AE6BC8;
  sub_23980ED50((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398F9F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398F9F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398F9F90(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_2398FA164(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FA140(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FA164(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_239807484(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_f32[0] = sub_2398078E0((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2398FA2DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398FA300@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F9D00(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC8D8;
  sub_239808068((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398FA414(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398FA3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FA3F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FA414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE1E48;
  sub_239808CE0(a2, &v12);
  sub_2398FA508(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239808F4C(a2, (uint64_t)(a3 + 1));
}

void sub_2398FA4CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398FA4E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643FDC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398FA4F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FA508(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398094C0(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398FA73C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398FA7A0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F9D00(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE08B8;
  sub_23960A1CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398FA8B4(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398FA87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FA898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FA8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE1D50;
  sub_2397651A0(a2, &v12);
  sub_2398FA9A8(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23970B1B4(a2, (uint64_t)(a3 + 1));
}

void sub_2398FA96C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398FA980(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643F74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398FA994(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FA9A8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_239808A70(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398FABDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398FAC40@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F9D00(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC260;
  sub_2397EDAFC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398FAD54(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398FAD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FAD38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FAD54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB950;
  sub_2397F06F4(a2, &v12);
  sub_2398FAE48(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397F0960(a2, (uint64_t)(a3 + 1));
}

void sub_2398FAE0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398FAE20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C8588((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398FAE34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FAE48(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_23980F674(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398FB07C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398FB0E0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F9D00(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3A00;
  sub_2397F0C3C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398FB1F4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398FB1BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FB1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FB1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5878;
  sub_23976622C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF4F8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970A418(a2, (uint64_t)(a4 + 1));
}

void sub_2398FB2E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398FB2F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FB308(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975A724((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FB31C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398FB364(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398FB32C(uint64_t **a1, uint64_t a2)
{
  return sub_2398FB9E4(**a1, (*a1)[1], a2);
}

uint64_t sub_2398FB33C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398FB494(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398FB364(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  unsigned int v6;
  double v7;
  double v8;
  unsigned int v9;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v7 = *(double *)(a3 + 24);
      if (v7 < 0.0)
        v7 = 0.0;
      v6 = (int)v7;
      v8 = 255.0;
      if (*(double *)(a3 + 32) <= 255.0)
        v8 = *(double *)(a3 + 32);
      v9 = (int)v8;
      if (a4.n128_f32[0] != (float)v6 || v5 != (float)(int)v8)
        goto LABEL_15;
      return sub_2398FB494(a1, a2, (uint64_t)v15, a4);
    }
  }
  else
  {
    v5 = 1.0;
    a4.n128_u32[0] = 0;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v9 = 255;
  if (a4.n128_f32[0] != (float)v6 || v5 != (float)0xFFu)
  {
LABEL_15:
    v19 = a4.n128_f32[0];
    v17 = (double)v6;
    v18 = 1.0 / (v5 - a4.n128_f32[0]);
    a4.n128_f64[0] = (double)v9 - (double)v6;
    v16 = a4.n128_f64[0];
    v15[0] = &v19;
    v15[1] = &v18;
    v14[0] = &v17;
    v14[1] = &v16;
    v13[0] = v15;
    v13[1] = v14;
    return sub_2398FB73C(a1, a2, (uint64_t)v13, a4);
  }
  return sub_2398FB494(a1, a2, (uint64_t)v15, a4);
}

uint64_t sub_2398FB494(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239809D98((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398FB6D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FB73C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23980A2FC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398FB980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FB9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1132396544;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2398FBA98(a1, a2, (uint64_t)v8);
}

uint64_t sub_2398FBA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23980AC08(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FBCDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398FBD40@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F9D00(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6778;
  sub_2397FC2BC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398FBE54(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398FBE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FBE38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FBE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5A00;
  sub_239766F78(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF510[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2397671E4(a2, (uint64_t)(a4 + 1));
}

void sub_2398FBF40(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398FBF54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FBF68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975BEF4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FBF7C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398FBFC4(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398FBF8C(uint64_t **a1, uint64_t a2)
{
  return sub_2398FC640(**a1, (*a1)[1], a2);
}

uint64_t sub_2398FBF9C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398FC0F0(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398FBFC4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v9 = -65536;
    goto LABEL_14;
  }
  v5 = 1.0;
  a4.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = *(double *)(a3 + 24);
  if (v6 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v8 = *(double *)(a3 + 32);
  v9 = v7 | ((int)v8 << 16);
LABEL_14:
  v10 = (unsigned __int16)v9;
  v11 = HIWORD(v9);
  if (a4.n128_f32[0] == (float)v10 && v5 == (float)v11)
    return sub_2398FC0F0(a1, a2, (uint64_t)v16, a4);
  v20 = a4.n128_f32[0];
  v18 = (double)v10;
  v19 = 1.0 / (v5 - a4.n128_f32[0]);
  a4.n128_f64[0] = (double)v11 - (double)v10;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_2398FC398(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_2398FC0F0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = (unint64_t)sub_23980B7CC((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398FC334(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FC398(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t **v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t **)&v29;
    a4.n128_u64[0] = (unint64_t)sub_23980BCB4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398FC5DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FC640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  __int16 v10;
  __int16 v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1199570688;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_2398FC6F8(a1, a2, (uint64_t)v8);
}

uint64_t sub_2398FC6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23980C440(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FC93C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398FC9A0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F9D00(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE69A0;
  sub_239805808((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398FCAB4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398FCA7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FCA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FCAB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5B88;
  sub_239767D98(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF528[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239768004(a2, (uint64_t)(a4 + 1));
}

void sub_2398FCBA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398FCBB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FCBC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975DB84((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FCBDC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398FCC24(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398FCBEC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398FD2BC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398FCBFC(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_2398FCD6C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398FCC24(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  float v5;
  double v6;
  unsigned __int16 v11;
  double v12;
  unsigned int v14;
  double v20;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    _Q0.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      _Q0.n128_u64[0] = *(_QWORD *)a3;
    _Q0.n128_f32[0] = _Q0.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v5 = 1.0;
  _Q0.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v6 = *(double *)(a3 + 24);
  _S2 = v6;
  __asm { FCVT            H2, S2 }
  v11 = LOWORD(_S2);
  v12 = 65504.0;
  if (*(double *)(a3 + 32) <= 65504.0)
    v12 = *(double *)(a3 + 32);
  _S2 = v12;
  __asm { FCVT            H2, S2 }
  v14 = v11 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v14;
  _S3 = HIWORD(v14);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (_Q0.n128_f32[0] == _S4 && v5 == _S5)
    return sub_2398FCD6C(a1, a2, (uint64_t)v25, _Q0);
  v29 = _Q0.n128_f32[0];
  v20 = 1.0 / (v5 - _Q0.n128_f32[0]);
  __asm { FCVT            D0, H2 }
  v27 = _Q0.n128_u64[0];
  v28 = v20;
  __asm { FCVT            D1, H3 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_2398FD014(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_2398FCD6C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_23980D054((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398FCFB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FD014(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23980D684(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398FD258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FD2BC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  _QWORD v14[4];
  unint64_t v15;
  __int16 v16;
  __int16 v17;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a3;
    if (!*(_BYTE *)(a3 + 8))
      _Q0.n128_f64[0] = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v4 > 65504.0)
      v4 = 65504.0;
    _S1 = v4;
    v17 = _H0;
    __asm { FCVT            H1, S1 }
    v16 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v15 = __PAIR64__(_S2, _Q0.n128_u32[0]);
  }
  else
  {
    v17 = 0;
    v16 = 15360;
    v15 = 1065353216;
  }
  v14[0] = (char *)&v15 + 4;
  v14[1] = &v17;
  v14[2] = &v15;
  v14[3] = &v16;
  return sub_2398FD388(a1, a2, (uint64_t)v14, _Q0);
}

uint64_t sub_2398FD388(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_23980DFC8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398FD5CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398FD630@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398F9D00(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6BC8;
  sub_23980ED50((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398FD77C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239768E24((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398FD720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FD744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FD760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FD77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2398FD920(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FD8BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398FD920(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398FDA78(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398FDA78(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E3CD4(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FDBE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void sub_2398FDC44(uint64_t a1, int a2)
{
  sub_2398FDD04(a2);
}

void sub_2398FDC74(uint64_t a1, int a2)
{
  sub_239902ED4(a2);
}

void sub_2398FDCA4(uint64_t a1, int a2)
{
  sub_239907DE8(a2);
}

void sub_2398FDCD4(uint64_t a1, int a2)
{
  sub_23990C13C(a2);
}

void sub_2398FDD04(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398FDD28@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FDE0C(a1, a2);
}

double sub_2398FDD34@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FFFEC(a1, a2);
}

double sub_2398FDD40@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239902594(a1, a2);
}

double sub_2398FDD4C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FE618(a1, a2);
}

double sub_2398FDD58@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FEAB8(a1, a2);
}

double sub_2398FDD64@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398FF0CC(a1, a2);
}

double sub_2398FDD70@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2399012E0(a1, a2);
}

double sub_2398FDD7C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239902A34(a1, a2);
}

uint64_t sub_2398FDE0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398FE018(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEBF48;
  sub_2397E4B58((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398FDF20(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398FDEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FDF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FDF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEADB0;
  sub_2397E5C8C(a2, &v11);
  sub_2398FE2A8(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397E5EF8(a2, (uint64_t)(a3 + 1));
}

void sub_2398FDFDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398FDFF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BC484((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398FE004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398FE018(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 29;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398FE158((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239709850((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2398FE11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398FE144(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398FE158(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 29);
  *a2 = &off_250AE0988;
  sub_2396214F4((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398FE270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398FE294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FE2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_2398FE47C(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FE458(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FE47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397E5638((unsigned int *)&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2397E5A94((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FE5F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398FE618@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398FE018(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3B18;
  sub_2397E61D4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398FE72C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398FE6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FE710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FE72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE1878;
  sub_239763C3C(a2, &v11);
  sub_2398FE820(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23970AF38(a2, (uint64_t)(a3 + 1));
}

void sub_2398FE7E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398FE7F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A8C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398FE80C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FE820(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2398C8F50(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FEA54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398FEAB8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398FE018(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0988;
  sub_2396214F4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398FEC04(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239709850((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398FEBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FEBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FEBE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FEC04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2398FEDA8(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FED44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398FEDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398FEF00(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398FEF00(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397CB3C8(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FF068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398FF0CC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398FE018(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE62E0;
  sub_2397F4674((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398FF1E0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398FF1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FF1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FF1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5350;
  sub_239764BF4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF540[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239764E60(a2, (uint64_t)(a4 + 1));
}

void sub_2398FF2CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398FF2E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398FF2F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239754008((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398FF308(uint64_t **a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  return sub_2398FF350(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7);
}

uint64_t sub_2398FF318(uint64_t **a1, uint64_t a2)
{
  return sub_2398FF9C8(**a1, (*a1)[1], a2);
}

uint64_t sub_2398FF328(uint64_t **a1)
{
  char v2;

  return sub_2398FF478(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2398FF350(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;

  v8 = *(unsigned __int8 *)(a3 + 16);
  if (!*(_BYTE *)(a3 + 16))
  {
    v11 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    LOWORD(v15) = 0;
    v16 = 0xFFFF;
    if (v8)
      goto LABEL_17;
    goto LABEL_15;
  }
  v9 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a3 + 8) <= 255.0)
    v10 = *(double *)(a3 + 8);
  v11 = (int)v10;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
  v16 = HIWORD(v15);
  if (v8 != (unsigned __int16)v15)
    goto LABEL_17;
LABEL_15:
  if (v16 == v11)
    return sub_2398FF478(a1, a2, (uint64_t)v20);
LABEL_17:
  v24 = (double)v8;
  v23 = 1.0 / ((double)v11 - (double)v8);
  v20[0] = &v24;
  v20[1] = &v23;
  v19[0] = &v22;
  v19[1] = &v21;
  v18[0] = v20;
  v18[1] = v19;
  return sub_2398FF720(a1, a2, (uint64_t)v18, (double)v16 - (double)(unsigned __int16)v15, (double)(unsigned __int16)v15, a6, a7, a8);
}

uint64_t sub_2398FF478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397E88F0((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FF6BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FF720(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double ****v34;

  v11 = *(_QWORD *)(a1 + 8);
  if (!v11)
    goto LABEL_17;
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  v11 = *(_QWORD *)(a1 + 8);
  v16 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v16)
    goto LABEL_43;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (v19)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v32 = 0;
    v20 = *(_QWORD *)(a2 + 8);
    if (!v20)
      goto LABEL_33;
LABEL_18:
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v20 = *(_QWORD *)(a2 + 8);
    v25 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v25)
      goto LABEL_29;
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
    do
      v28 = __ldaxr(v26);
    while (__stlxr(v28 - 1, v26));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v20 + 96))(&v31, v20, 1);
    v33 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
  std::__shared_weak_count::__release_weak(v16);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v11 + 96))(&v32, v11, 0);
  v20 = *(_QWORD *)(a2 + 8);
  if (v20)
    goto LABEL_18;
LABEL_33:
  v31 = 0;
  v33 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v34 = (double ****)&v33;
    sub_2397E8E14(&v34, a1, a2, a4, a5, a6, a7, a8);
  }
LABEL_37:
  v29 = v31;
  v31 = 0;
  if (v29)
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  result = v32;
  v32 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FF964(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FF9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  __int16 *v8;
  __int16 *v9;
  char *v10;
  __int16 *v11;
  char v12;
  char v13;
  __int16 v14;
  __int16 v15;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    if ((int)v6 <= 0xFF)
    {
      v15 = v5;
      v14 = (int)v6;
      v13 = v5;
      v12 = (int)v6;
      v8 = (__int16 *)&v13;
      v9 = &v15;
      v10 = &v12;
      v11 = &v14;
      return sub_2398FFA9C(a1, a2, (uint64_t)&v8);
    }
    v15 = v5;
    LOBYTE(v14) = v5;
  }
  else
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  v8 = &v14;
  v9 = &v15;
  return sub_2398FFD44(a1, a2, (uint64_t)&v8);
}

uint64_t sub_2398FFA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397E9648(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FFCE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398FFD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_2397E9CC4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398FFF88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2398FFFEC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398FE018(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0A08;
  sub_239627148((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239900100(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2399000C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2399000E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239900100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE54D8;
  sub_239764F34(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF558[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970B0E0(a2, (uint64_t)(a4 + 1));
}

void sub_2399001EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239900200(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239900214(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239755C98((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239900228(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23990033C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239900238(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2399009D0((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2399009D0((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_239900314(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239900480(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23990033C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  unsigned int v4;
  double v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  unint64_t v24;
  unint64_t v25;
  double v26;
  double v27;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v5 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    _Q0.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = (int)_Q0.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = 255;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v6;
  if (_ZF)
    return sub_239900480(a1, a2, (uint64_t)v23, _Q0);
  v27 = (double)v4;
  __asm { FCVT            D0, H0 }
  v25 = _Q0.n128_u64[0];
  v26 = 1.0 / ((double)v6 - (double)v4);
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v24 = _Q0.n128_u64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_239900728(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_239900480(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397EB274((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2399006C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239900728(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397EB8E4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990096C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399009D0(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  char *v23;
  __int16 *v24;
  char v25;
  char v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      LOBYTE(v27) = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_239900D90(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 255.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      LOBYTE(v27) = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_239901038(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_239900480(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (__int16 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_239900AE8(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_239900AE8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397EC274(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239900D2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239900D90(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397ECAA8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239900FD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239901038(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_2397ED154(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990127C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2399012E0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398FE018(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE08B8;
  sub_23960A1CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2399013F4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2399013BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2399013D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2399013F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1D50;
  sub_2397651A0(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF570[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970B1B4(a2, (uint64_t)(a4 + 1));
}

void sub_2399014E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2399014F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239901508(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643F74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990151C(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_23990161C(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_23990152C(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_239901C9C((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_239901C9C((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_2399015F4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23990174C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23990161C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  unsigned int v12;
  double v13;
  float v14;
  double v16;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v11 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    a4.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = (int)a4.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      a4.n128_u64[0] = 0xC7EFFFFFE0000000;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
      a4.n128_f32[0] = a4.n128_f64[0];
      v13 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v13 = *(double *)(a3 + 32);
      v14 = v13;
      if (a4.n128_f32[0] != (float)v10 || v14 != (float)v12)
        goto LABEL_15;
      return sub_23990174C(a1, a2, (uint64_t)v21, a4);
    }
  }
  else
  {
    v12 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v14 = 1.0;
  a4.n128_u32[0] = 0;
  if ((float)v10 != 0.0 || 1.0 != (float)v12)
  {
LABEL_15:
    v25 = (double)v10;
    v23 = a4.n128_f32[0];
    v16 = v14;
    a4.n128_f64[0] = v16 - a4.n128_f32[0];
    v22 = a4.n128_u64[0];
    v21[0] = &v25;
    v21[1] = &v24;
    v20[0] = &v23;
    v20[1] = &v22;
    v19[0] = v21;
    v19[1] = v20;
    return sub_2399019F4(a1, a2, (uint64_t)v19, a4, v16, 1.0 / ((double)v12 - (double)v10), 1.0, a8, a9, a10);
  }
  return sub_23990174C(a1, a2, (uint64_t)v21, a4);
}

uint64_t sub_23990174C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2397EE744((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239901990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399019F4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f32[0] = sub_2397EED04(&v36, a1, a2, a4.n128_f32[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239901C38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239901C9C(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  char *v17;
  float *v18;
  char v19;
  char v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 255.0;
    v3 = a3 >= 255.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOBYTE(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_239902044(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1132396544;
      if (a3 <= 255.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOBYTE(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_2399022EC(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_23990174C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_239901D9C(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_239901D9C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397EF464(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239901FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239902044(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397EFCB4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239902288(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399022EC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2397F0328(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239902530(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239902594@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398FE018(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6538;
  sub_2397E44CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2399026A8(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239902670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990268C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2399026A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE56F0;
  sub_239765EEC(a2, &v11);
  sub_23990279C(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239766158(a2, (uint64_t)(a3 + 1));
}

void sub_239902760(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239902774(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239758F54((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239902788(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990279C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E7244(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2399029D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239902A34@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398FE018(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE3A00;
  sub_2397F0C3C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239902B48(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239902B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239902B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239902B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE5878;
  sub_23976622C(a2, &v11);
  sub_239902C3C(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23970A418(a2, (uint64_t)(a3 + 1));
}

void sub_239902C00(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239902C14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975A724((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239902C28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239902C3C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2398C969C(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239902E70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239902ED4(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_239902EF8@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239902FDC(a1, a2);
}

double sub_239902F04@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2399037E8(a1, a2);
}

double sub_239902F10@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239903C88(a1, a2);
}

double sub_239902F1C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2399048DC(a1, a2);
}

double sub_239902F28@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239904EF0(a1, a2);
}

double sub_239902F34@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2399061F4(a1, a2);
}

double sub_239902F40@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2399074A8(a1, a2);
}

double sub_239902F4C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239907948(a1, a2);
}

uint64_t sub_239902FDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2399031E8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC370;
  sub_2397F1DD8((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2399030F0(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2399030B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2399030D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2399030F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEAEA8;
  sub_2397F2F2C(a2, &v11);
  sub_239903478(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397F3198(a2, (uint64_t)(a3 + 1));
}

void sub_2399031AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2399031C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BD058((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2399031D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2399031E8(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 30;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_239903328((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239764E60((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_2399032EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239903314(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239903328(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 30);
  *a2 = &off_250AE62E0;
  sub_2397F4674((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239903440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239903464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239903478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_23990364C(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239903628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990364C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397F28B8(&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2397F2D14((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2399037C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2399037E8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399031E8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC468;
  sub_2397F349C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2399038FC(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2399038C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2399038E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2399038FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AEB570;
  sub_2397F412C(a2, &v11);
  sub_2399039F0(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397F4398(a2, (uint64_t)(a3 + 1));
}

void sub_2399039B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2399039C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C356C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2399039DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2399039F0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2398CE3BC(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239903C24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239903C88@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399031E8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0988;
  sub_2396214F4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239903D9C(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239903D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239903D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239903D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1760;
  sub_239763EA8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF588[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239709850(a2, (uint64_t)(a4 + 1));
}

void sub_239903E88(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239903E9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239903EB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A24((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239903EC4(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239903F0C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239903ED4(uint64_t **a1, uint64_t a2)
{
  return sub_239904584(**a1, (*a1)[1], a2);
}

uint64_t sub_239903EE4(uint64_t **a1)
{
  char v2;

  return sub_239904034(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_239903F0C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  unsigned int v12;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (!*(_BYTE *)(a3 + 16))
  {
    v7 = -65536;
    v8 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    v11 = 255;
    v12 = HIWORD(v7);
    if (v8 != (unsigned __int16)v7)
      goto LABEL_17;
    goto LABEL_15;
  }
  v4 = *(double *)a3;
  if (*(double *)a3 < 0.0)
    v4 = 0.0;
  v5 = (int)v4;
  v6 = 65535.0;
  if (*(double *)(a3 + 8) <= 65535.0)
    v6 = *(double *)(a3 + 8);
  v7 = v5 | ((int)v6 << 16);
  v8 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v9 = *(double *)(a3 + 24);
  if (v9 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v10 = *(double *)(a3 + 32);
  v11 = (int)v10;
  v12 = HIWORD(v7);
  if (v8 != (unsigned __int16)v7)
    goto LABEL_17;
LABEL_15:
  if (v12 == v11)
    return sub_239904034(a1, a2, (uint64_t)v16);
LABEL_17:
  v20 = (double)(unsigned __int16)v7;
  v18 = (double)v8;
  v19 = 1.0 / ((double)v12 - v20);
  a4.n128_f64[0] = (double)v11 - (double)v8;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_2399042DC(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_239904034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2397F586C((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239904278(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399042DC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397F5D8C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239904520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239904584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  _QWORD v8[4];
  int v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    HIWORD(v9) = v5;
    LOWORD(v9) = (int)v6;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 255;
  }
  v8[0] = (char *)&v9 + 2;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_239904634(a1, a2, (uint64_t)v8);
}

uint64_t sub_239904634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int16 ***)&v28;
    sub_2397F6694(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239904878(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2399048DC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399031E8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE62E0;
  sub_2397F4674((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239904A28(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239764E60((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2399049CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2399049F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239904A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239904A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_239904BCC(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239904B68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_239904BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_239904D24(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_239904D24(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397D5B2C(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239904E8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_239904EF0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399031E8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0A08;
  sub_239627148((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239905004(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239904FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239904FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239905004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE54D8;
  sub_239764F34(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF5A0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970B0E0(a2, (uint64_t)(a4 + 1));
}

void sub_2399050F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239905104(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239905118(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239755C98((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990512C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239905240(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23990513C(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2399058E0((uint64_t)v13, 1006632960, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 1.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2399058E0((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_239905218(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239905390(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239905240(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  unsigned int v15;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    _Q0.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)_Q0.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  v15 = (unsigned __int16)v6;
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm { FCVT            S3, H0 }
  v18 = HIWORD(v6);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v18;
  if (_ZF)
    return sub_239905390(a1, a2, (uint64_t)v25, _Q0);
  v29 = (double)v15;
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  v28 = 1.0 / ((double)v18 - (double)v15);
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_239905638(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_239905390(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397F7974((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2399055D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239905638(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_2397F7FE4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990587C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399058E0(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  __int16 *v23;
  __int16 *v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      v27 = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_239905CA4(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 65535.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      v27 = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_239905F4C(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_239905390(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = &v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2399059FC(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2399059FC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F8978(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239905C40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239905CA4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F91AC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239905EE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239905F4C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_2397F9858(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239906190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2399061F4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399031E8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE08B8;
  sub_23960A1CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239906308(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2399062D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2399062EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239906308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1D50;
  sub_2397651A0(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF5B8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970B1B4(a2, (uint64_t)(a4 + 1));
}

void sub_2399063F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239906408(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990641C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643F74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239906430(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239906530(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239906440(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  float v5;
  _QWORD v7[5];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v3 = (*a1)[1];
  v10[0] = **a1;
  v10[1] = v3;
  v9[0] = v10[0];
  v9[1] = v3;
  v8[0] = v10[0];
  v8[1] = v3;
  v7[0] = v10;
  v7[1] = v9;
  v7[2] = v8;
  v7[3] = v10[0];
  v7[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = 0.0;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 1.0;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    v5 = v4;
    return sub_239906BAC((uint64_t)v7, a3, v5);
  }
  else
  {
    a3.n128_u32[0] = 0;
    return sub_239906BAC((uint64_t)v7, a3, 1.0);
  }
}

uint64_t sub_239906508(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23990665C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239906530(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  float v8;
  unsigned int v9;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  unint64_t v15;
  double v16;
  double v17;
  double v18;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    a4.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)a4.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v8 = 1.0;
    a4.n128_u32[0] = 0;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  a4.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)(a3 + 24) >= -3.40282347e38)
    a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
  a4.n128_f32[0] = a4.n128_f64[0];
  v7 = 3.40282347e38;
  if (*(double *)(a3 + 32) <= 3.40282347e38)
    v7 = *(double *)(a3 + 32);
  v8 = v7;
LABEL_14:
  v9 = HIWORD(v6);
  if (a4.n128_f32[0] == (float)(unsigned __int16)v6 && v8 == (float)v9)
    return sub_23990665C(a1, a2, (uint64_t)v14, a4);
  v18 = (double)(unsigned __int16)v6;
  v16 = a4.n128_f32[0];
  v17 = 1.0 / ((double)v9 - v18);
  a4.n128_f64[0] = v8 - a4.n128_f32[0];
  v15 = a4.n128_u64[0];
  v14[0] = &v18;
  v14[1] = &v17;
  v13[0] = &v16;
  v13[1] = &v15;
  v12[0] = v14;
  v12[1] = v13;
  return sub_239906904(a1, a2, (uint64_t)v12, a4);
}

uint64_t sub_23990665C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_2397FA36C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2399068A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239906904(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t ****)&v29;
    a4.n128_f64[0] = sub_2397FA8A4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239906B48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239906BAC(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  __int16 *v17;
  float *v18;
  __int16 v19;
  __int16 v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 65535.0;
    v3 = a3 >= 65535.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOWORD(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_239906F58(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1199570688;
      if (a3 <= 65535.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOWORD(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_239907200(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_23990665C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_239906CB0(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_239906CB0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FAF68(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239906EF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239906F58(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FB6E4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990719C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239907200(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_2397FBD20(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239907444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2399074A8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399031E8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC040;
  sub_2397E7D68((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2399075BC(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239907584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2399075A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2399075BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AEB760;
  sub_2397EA060(a2, &v11);
  sub_2399076B0(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397EA2CC(a2, (uint64_t)(a3 + 1));
}

void sub_239907674(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239907688(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C6D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23990769C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2399076B0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397F4F98(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2399078E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239907948@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399031E8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6778;
  sub_2397FC2BC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239907A5C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239907A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239907A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239907A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;
  int v13;

  v10 = &off_250AE5A00;
  sub_239766F78(a2, &v11);
  sub_239907B50(a1, (uint64_t)&v10, &v13);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397671E4(a2, (uint64_t)(a3 + 1));
}

void sub_239907B14(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239907B28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975BEF4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239907B3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239907B50(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2398CEADC(a3, a1, a2);
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239907D84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239907DE8(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_239907E0C@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239907EF0(a1, a2);
}

double sub_239907E18@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2399086FC(a1, a2);
}

double sub_239907E24@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239908B9C(a1, a2);
}

double sub_239907E30@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239909830(a1, a2);
}

double sub_239907E3C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990A4D0(a1, a2);
}

double sub_239907E48@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990AB54(a1, a2);
}

double sub_239907E54@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990B7FC(a1, a2);
}

double sub_239907E60@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990BC9C(a1, a2);
}

uint64_t sub_239907EF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2399080FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC5A8;
  sub_2397FD434((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_239908004(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_239907FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239907FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239908004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEAFA0;
  sub_2397FE5E8(a2, &v12);
  sub_23990838C(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397FE854(a2, (uint64_t)(a3 + 1));
}

void sub_2399080C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2399080D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BDCA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2399080E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2399080FC(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 31;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_23990823C((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_23970B0E0((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_239908200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239908228(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23990823C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 31);
  *a2 = &off_250AE0A08;
  sub_239627148((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239908354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239908378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990838C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239908560(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23990853C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239908560(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        a3.n128_f64[0] = sub_2397FDF14(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_u64[0] = sub_2397FE3D8((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2399086D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2399086FC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399080FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC6A0;
  sub_2397FEB58((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239908810(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2399087D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2399087F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239908810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB668;
  sub_2397FF80C(a2, &v12);
  sub_239908904(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397FFA78(a2, (uint64_t)(a3 + 1));
}

void sub_2399088C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2399088DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C41B4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2399088F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_239908904(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398D2C18(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239908B38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239908B9C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399080FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0988;
  sub_2396214F4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239908CB0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239908C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239908C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239908CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1760;
  sub_239763EA8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF5D0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239709850(a2, (uint64_t)(a4 + 1));
}

void sub_239908D9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239908DB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239908DC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A24((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239908DD8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239908E20(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239908DE8(uint64_t **a1, uint64_t a2)
{
  return sub_2399094C0(**a1, (*a1)[1], a2);
}

uint64_t sub_239908DF8(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239908F70(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239908E20(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  unsigned int v12;
  double v13;
  double v14;
  unsigned int v15;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  double v24;
  double v25;
  double v26;
  unint64_t v27;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v12 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = 255;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v12 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v13 = *(double *)(a3 + 24);
  if (v13 < 0.0)
    v13 = 0.0;
  v12 = (int)v13;
  v14 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v14 = *(double *)(a3 + 32);
  v15 = (int)v14;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v15;
  if (_ZF)
    return sub_239908F70(a1, a2, (uint64_t)v23, _Q0);
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v25 = (double)v12;
  v26 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v15 - (double)v12;
  v24 = _Q0.n128_f64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_239909218(a1, a2, (uint64_t)v21, _Q0);
}

uint64_t sub_239908F70(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239800914((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2399091B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239909218(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_239800E98(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990945C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399094C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  char v19;
  char v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 23544;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_239909588(a1, a2, (uint64_t)v16);
}

uint64_t sub_239909588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2398017B8(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2399097CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239909830@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399080FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE62E0;
  sub_2397F4674((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239909944(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990990C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239909928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239909944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5350;
  sub_239764BF4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF5E8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239764E60(a2, (uint64_t)(a4 + 1));
}

void sub_239909A30(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239909A44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239909A58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239754008((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239909A6C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239909AB4(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239909A7C(uint64_t **a1, uint64_t a2)
{
  return sub_23990A160(**a1, (*a1)[1], a2);
}

uint64_t sub_239909A8C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239909C10(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239909AB4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v18;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  double v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = -65536;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
LABEL_14:
  v16 = (unsigned __int16)v15;
  __asm { FCVT            S2, H0 }
  v18 = HIWORD(v15);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v18;
  if (_ZF)
    return sub_239909C10(a1, a2, (uint64_t)v26, _Q0);
  __asm { FCVT            D0, H0 }
  v30 = _D0;
  __asm { FCVT            D1, H1 }
  v28 = (double)v16;
  v29 = 1.0 / (_D1 - _D0);
  v27 = (double)v18 - (double)v16;
  v26[0] = &v30;
  v26[1] = &v29;
  v25[0] = &v28;
  v25[1] = &v27;
  v24[0] = v26;
  v24[1] = v25;
  return sub_239909EB8(a1, a2, (uint64_t)v24);
}

uint64_t sub_239909C10(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23980240C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239909E54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239909EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_23980295C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23990A0FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990A160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 31744;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_23990A228(a1, a2, (uint64_t)v16);
}

uint64_t sub_23990A228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_239803184(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23990A46C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23990A4D0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399080FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0A08;
  sub_239627148((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23990A61C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_23970B0E0((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990A5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990A5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990A600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990A61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v17, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
LABEL_17:
  sub_239622218(a2, &v16);
  v13.n128_u64[0] = sub_23990A7C0(a1, a2);
  v14 = v16;
  v16 = 0;
  if (v14)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v14 + 8))(v14, v13.n128_f32[0]);
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v13);
  return result;
}

void sub_23990A75C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

__int16 sub_23990A7C0@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  __int16 *v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  __int16 v26;
  uint64_t v28;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 != *(_DWORD *)(a2 + 108) || v4 != v5)
  {
    v28 = (4 * *(_DWORD *)(a1 + 56));
    sub_23990A988(a1, a2, &v28);
    return v7;
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(_QWORD *)(v3 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v16)
  {
    a1 = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 32);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v17 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v17 < 0xF || (unint64_t)(v16 - v9) < 0x20)
    {
      v20 = (_WORD *)v16;
      v21 = (__int16 *)v9;
    }
    else
    {
      v18 = v17 + 1;
      v19 = (v17 + 1) & 0xFFFFFFFFFFFFFFF0;
      v20 = (_WORD *)(v16 + 2 * v19);
      v21 = (__int16 *)(v9 + 2 * v19);
      v22 = (__int128 *)(v9 + 16);
      v23 = (_OWORD *)(v16 + 16);
      v24 = v19;
      do
      {
        v7 = *(v22 - 1);
        v25 = *v22;
        *(v23 - 1) = v7;
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 16;
      }
      while (v24);
      if (v18 == v19)
        return v7;
    }
    do
    {
      v26 = *v21++;
      LOWORD(v7) = v26;
      *v20++ = v26;
    }
    while (v21 != (__int16 *)(v9 + 2 * v8));
  }
  return v7;
}

uint64_t sub_23990A988(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v19 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v19, v6, 0);
LABEL_17:
  sub_239622218(a2, &v18);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    v15.n128_f64[0] = sub_2397DDAD4(a3, a1, a2);
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v16 + 8))(v16, v15);
  result = v19;
  v19 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23990AAF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_23990AB54@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399080FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE08B8;
  sub_23960A1CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23990AC68(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990AC30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990AC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990AC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1D50;
  sub_2397651A0(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF600[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970B1B4(a2, (uint64_t)(a4 + 1));
}

void sub_23990AD54(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23990AD68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990AD7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643F74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990AD90(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23990ADD8(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23990ADA0(uint64_t **a1, uint64_t a2)
{
  return sub_23990B48C(**a1, (*a1)[1], a2);
}

uint64_t sub_23990ADB0(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23990AF3C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23990ADD8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  float v13;
  double v14;
  float v15;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  unint64_t v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v12 = -3.40282347e38;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        v12 = *(double *)(a3 + 24);
      v13 = v12;
      v14 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v14 = *(double *)(a3 + 32);
      v15 = v14;
      __asm
      {
        FCVT            S4, H0
        FCVT            S5, H1
      }
      if (v13 != _S4 || v15 != _S5)
        goto LABEL_15;
      return sub_23990AF3C(a1, a2, (uint64_t)v26, _Q0);
    }
  }
  else
  {
    _Q0.n128_u32[0] = 1006632960;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v15 = 1.0;
  v13 = 0.0;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (_S4 != 0.0 || 1.0 != _S5)
  {
LABEL_15:
    __asm { FCVT            D0, H0 }
    v30 = _Q0.n128_u64[0];
    __asm { FCVT            D1, H1 }
    v28 = v13;
    v29 = 1.0 / (_D1 - _Q0.n128_f64[0]);
    _Q0.n128_f64[0] = v15 - v13;
    v27 = _Q0.n128_f64[0];
    v26[0] = &v30;
    v26[1] = &v29;
    v25[0] = &v28;
    v25[1] = &v27;
    v24[0] = v26;
    v24[1] = v25;
    return sub_23990B1E4(a1, a2, (uint64_t)v24, _Q0);
  }
  return sub_23990AF3C(a1, a2, (uint64_t)v26, _Q0);
}

uint64_t sub_23990AF3C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_2398043FC((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990B180(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990B1E4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f32[0] = sub_2398049C4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990B428(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990B48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  _QWORD v14[4];
  __int16 v15;
  __int16 v16;
  float v17;
  float v18;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (v3 < -3.40282347e38)
      v3 = -3.40282347e38;
    _S0 = v3;
    if (v4 > 3.40282347e38)
      v4 = 3.40282347e38;
    _S1 = v4;
    v17 = _S1;
    v18 = _S0;
    __asm { FCVT            H0, S0 }
    v16 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v17 = 1.0;
    v18 = 0.0;
    _H0 = 15360;
    v16 = 0;
  }
  v15 = _H0;
  v14[0] = &v16;
  v14[1] = &v18;
  v14[2] = &v15;
  v14[3] = &v17;
  return sub_23990B554(a1, a2, (uint64_t)v14);
}

uint64_t sub_23990B554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_2398050F0(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23990B798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23990B7FC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399080FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC150;
  sub_2397EA604((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23990B910(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990B8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990B8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990B910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB858;
  sub_2397ED558(a2, &v12);
  sub_23990BA04(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397ED7C4(a2, (uint64_t)(a3 + 1));
}

void sub_23990B9C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23990B9DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C79B0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23990B9F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990BA04(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2397FFFEC(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990BC38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23990BC9C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2399080FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE69A0;
  sub_239805808((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23990BDB0(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990BD78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990BD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990BDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE5B88;
  sub_239767D98(a2, &v12);
  sub_23990BEA4(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239768004(a2, (uint64_t)(a3 + 1));
}

void sub_23990BE68(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23990BE7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975DB84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23990BE90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990BEA4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398D3364(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990C0D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23990C13C(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23990C160@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990C244(a1, a2);
}

double sub_23990C16C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990CA50(a1, a2);
}

double sub_23990C178@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990CEF0(a1, a2);
}

double sub_23990C184@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990DB50(a1, a2);
}

double sub_23990C190@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990E7B0(a1, a2);
}

double sub_23990C19C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990F440(a1, a2);
}

double sub_23990C1A8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990FA54(a1, a2);
}

double sub_23990C1B4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23990FEF4(a1, a2);
}

uint64_t sub_23990C244@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_23990C450(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEC7E0;
  sub_2398069A4((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_23990C358(*(_QWORD *)a1, (uint64_t)&v11, a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_23990C320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990C33C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990C358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEB098;
  sub_239807AF8(a2, &v12);
  sub_23990C6E0(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239807D64(a2, (uint64_t)(a3 + 1));
}

void sub_23990C414(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23990C428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BE878((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23990C43C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23990C450(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 32;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_23990C590((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_23970B1B4((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_23990C554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23990C57C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23990C590(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 32);
  *a2 = &off_250AE08B8;
  sub_23960A1CC((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_23990C6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23990C6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990C6E0(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_23990C8B4(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23990C890(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990C8B4(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_239807484(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_f32[0] = sub_2398078E0((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_23990CA2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23990CA50@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23990C450(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC8D8;
  sub_239808068((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23990CB64(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990CB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990CB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990CB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE1E48;
  sub_239808CE0(a2, &v12);
  sub_23990CC58(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239808F4C(a2, (uint64_t)(a3 + 1));
}

void sub_23990CC1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23990CC30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643FDC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23990CC44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990CC58(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398D73C8(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990CE8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23990CEF0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23990C450(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0988;
  sub_2396214F4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23990D004(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990CFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990CFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990D004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE1760;
  sub_239763EA8(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF618[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239709850(a2, (uint64_t)(a4 + 1));
}

void sub_23990D0F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23990D104(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990D118(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239643A24((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990D12C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23990D174(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23990D13C(uint64_t **a1, uint64_t a2)
{
  return sub_23990D7F4(**a1, (*a1)[1], a2);
}

uint64_t sub_23990D14C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23990D2A4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23990D174(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  unsigned int v6;
  double v7;
  double v8;
  unsigned int v9;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v7 = *(double *)(a3 + 24);
      if (v7 < 0.0)
        v7 = 0.0;
      v6 = (int)v7;
      v8 = 255.0;
      if (*(double *)(a3 + 32) <= 255.0)
        v8 = *(double *)(a3 + 32);
      v9 = (int)v8;
      if (a4.n128_f32[0] != (float)v6 || v5 != (float)(int)v8)
        goto LABEL_15;
      return sub_23990D2A4(a1, a2, (uint64_t)v15, a4);
    }
  }
  else
  {
    v5 = 1.0;
    a4.n128_u32[0] = 0;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v9 = 255;
  if (a4.n128_f32[0] != (float)v6 || v5 != (float)0xFFu)
  {
LABEL_15:
    v19 = a4.n128_f32[0];
    v17 = (double)v6;
    v18 = 1.0 / (v5 - a4.n128_f32[0]);
    a4.n128_f64[0] = (double)v9 - (double)v6;
    v16 = a4.n128_f64[0];
    v15[0] = &v19;
    v15[1] = &v18;
    v14[0] = &v17;
    v14[1] = &v16;
    v13[0] = v15;
    v13[1] = v14;
    return sub_23990D54C(a1, a2, (uint64_t)v13, a4);
  }
  return sub_23990D2A4(a1, a2, (uint64_t)v15, a4);
}

uint64_t sub_23990D2A4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239809D98((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990D4E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990D54C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23980A2FC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990D790(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990D7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1132396544;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_23990D8A8(a1, a2, (uint64_t)v8);
}

uint64_t sub_23990D8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23980AC08(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23990DAEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23990DB50@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23990C450(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE62E0;
  sub_2397F4674((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23990DC64(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990DC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990DC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990DC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE5350;
  sub_239764BF4(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF630[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239764E60(a2, (uint64_t)(a4 + 1));
}

void sub_23990DD50(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23990DD64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990DD78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239754008((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990DD8C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23990DDD4(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23990DD9C(uint64_t **a1, uint64_t a2)
{
  return sub_23990E450(**a1, (*a1)[1], a2);
}

uint64_t sub_23990DDAC(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23990DF00(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23990DDD4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  double v6;
  int v7;
  double v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  double v17;
  double v18;
  double v19;
  double v20;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v9 = -65536;
    goto LABEL_14;
  }
  v5 = 1.0;
  a4.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = *(double *)(a3 + 24);
  if (v6 < 0.0)
    v6 = 0.0;
  v7 = (int)v6;
  v8 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v8 = *(double *)(a3 + 32);
  v9 = v7 | ((int)v8 << 16);
LABEL_14:
  v10 = (unsigned __int16)v9;
  v11 = HIWORD(v9);
  if (a4.n128_f32[0] == (float)v10 && v5 == (float)v11)
    return sub_23990DF00(a1, a2, (uint64_t)v16, a4);
  v20 = a4.n128_f32[0];
  v18 = (double)v10;
  v19 = 1.0 / (v5 - a4.n128_f32[0]);
  a4.n128_f64[0] = (double)v11 - (double)v10;
  v17 = a4.n128_f64[0];
  v16[0] = &v20;
  v16[1] = &v19;
  v15[0] = &v18;
  v15[1] = &v17;
  v14[0] = v16;
  v14[1] = v15;
  return sub_23990E1A8(a1, a2, (uint64_t)v14, a4);
}

uint64_t sub_23990DF00(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = (unint64_t)sub_23980B7CC((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990E144(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990E1A8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t **v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t **)&v29;
    a4.n128_u64[0] = (unint64_t)sub_23980BCB4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990E3EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990E450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  _QWORD v8[4];
  uint64_t v9;
  __int16 v10;
  __int16 v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v11 = v5;
    v10 = (int)v6;
    *(float *)&v9 = (float)(int)v6;
    *((float *)&v9 + 1) = (float)v5;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 1199570688;
  }
  v8[0] = (char *)&v9 + 4;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_23990E508(a1, a2, (uint64_t)v8);
}

uint64_t sub_23990E508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23980C440(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23990E74C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23990E7B0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23990C450(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE0A08;
  sub_239627148((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23990E8C4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990E88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990E8A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990E8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AE54D8;
  sub_239764F34(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEF648[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23970B0E0(a2, (uint64_t)(a4 + 1));
}

void sub_23990E9B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23990E9C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990E9D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239755C98((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990E9EC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23990EA34(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23990E9FC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23990F0CC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23990EA0C(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23990EB7C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23990EA34(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  float v5;
  double v6;
  unsigned __int16 v11;
  double v12;
  unsigned int v14;
  double v20;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    _Q0.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      _Q0.n128_u64[0] = *(_QWORD *)a3;
    _Q0.n128_f32[0] = _Q0.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v5 = 1.0;
  _Q0.n128_u32[0] = 0;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v6 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v6 = *(double *)(a3 + 24);
  _S2 = v6;
  __asm { FCVT            H2, S2 }
  v11 = LOWORD(_S2);
  v12 = 65504.0;
  if (*(double *)(a3 + 32) <= 65504.0)
    v12 = *(double *)(a3 + 32);
  _S2 = v12;
  __asm { FCVT            H2, S2 }
  v14 = v11 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v14;
  _S3 = HIWORD(v14);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (_Q0.n128_f32[0] == _S4 && v5 == _S5)
    return sub_23990EB7C(a1, a2, (uint64_t)v25, _Q0);
  v29 = _Q0.n128_f32[0];
  v20 = 1.0 / (v5 - _Q0.n128_f32[0]);
  __asm { FCVT            D0, H2 }
  v27 = _Q0.n128_u64[0];
  v28 = v20;
  __asm { FCVT            D1, H3 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_23990EE24(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_23990EB7C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_23980D054((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990EDC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990EE24(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23980D684(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990F068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23990F0CC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  _QWORD v14[4];
  unint64_t v15;
  __int16 v16;
  __int16 v17;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a3;
    if (!*(_BYTE *)(a3 + 8))
      _Q0.n128_f64[0] = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 1.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v4 > 65504.0)
      v4 = 65504.0;
    _S1 = v4;
    v17 = _H0;
    __asm { FCVT            H1, S1 }
    v16 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v15 = __PAIR64__(_S2, _Q0.n128_u32[0]);
  }
  else
  {
    v17 = 0;
    v16 = 15360;
    v15 = 1065353216;
  }
  v14[0] = (char *)&v15 + 4;
  v14[1] = &v17;
  v14[2] = &v15;
  v14[3] = &v16;
  return sub_23990F198(a1, a2, (uint64_t)v14, _Q0);
}

uint64_t sub_23990F198(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f64[0] = sub_23980DFC8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990F3DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23990F440@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23990C450(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE08B8;
  sub_23960A1CC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23990F58C(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_23970B1B4((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990F530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990F554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990F570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990F58C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_23990F730(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23990F6CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_23990F730(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 4 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 4 * v8);
  }
  else
  {
    v16 = (4 * *(_DWORD *)(a1 + 56));
    return (void *)sub_23990F888(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_23990F888(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397E3CD4(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23990F9F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_23990FA54@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23990C450(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEC260;
  sub_2397EDAFC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23990FB68(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990FB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990FB4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23990FB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AEB950;
  sub_2397F06F4(a2, &v12);
  sub_23990FC5C(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397F0960(a2, (uint64_t)(a3 + 1));
}

void sub_23990FC20(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23990FC34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397C8588((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23990FC48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_23990FC5C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398094C0(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23990FE90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23990FEF4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23990C450(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6BC8;
  sub_23980ED50((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239910008(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23990FFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23990FFEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239910008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  char v14;

  v11 = &off_250AE5D10;
  sub_239768BB8(a2, &v12);
  sub_2399100FC(a1, (uint64_t)&v11, (uint64_t)&v14, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_239768E24(a2, (uint64_t)(a3 + 1));
}

void sub_2399100C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2399100D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23975F87C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2399100E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_2399100FC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    a4.n128_f64[0] = sub_2398D7AE4(a3, a1, a2);
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239910330(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239910394(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD v6[3];

  v6[1] = 0;
  v6[2] = 0;
  v6[0] = &off_250AEF6A0;
  v2 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (!v2)
    return sub_2399107E4(v6);
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return sub_2399107E4(v6);
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return sub_2399107E4(v6);
}

__IOSurface *sub_239910424@<X0>(IOSurfaceRef *a1@<X0>, _QWORD *a2@<X8>)
{
  __IOSurface *result;
  size_t PlaneCount;
  unint64_t v6;
  char *v7;
  size_t v8;

  result = *a1;
  if (result)
  {
    PlaneCount = IOSurfaceGetPlaneCount(result);
    if (PlaneCount <= 1)
      v6 = 1;
    else
      v6 = PlaneCount;
    a2[1] = 0;
    a2[2] = 0;
    *a2 = 0;
    if (v6 >> 61)
      sub_2394189F8();
    v7 = (char *)operator new(8 * v6);
    *a2 = v7;
    a2[2] = &v7[8 * v6];
    bzero(v7, 8 * v6);
    v8 = 0;
    a2[1] = &v7[8 * v6];
    do
    {
      result = (__IOSurface *)IOSurfaceGetBaseAddressOfPlane(*a1, v8);
      *(_QWORD *)&v7[8 * v8++] = result;
    }
    while (v6 != v8);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  return result;
}

void sub_2399104EC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

std::__shared_weak_count_vtbl **sub_239910514(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_23979B88C(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE9568;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_2399105F0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    j__CFRelease(v1);
  __cxa_rethrow();
}

void sub_239910608(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_23991061C(_QWORD *a1, std::__shared_weak_count_vtbl *a2, int a3, int a4)
{
  std::__shared_weak_count *v6;
  std::__shared_weak_count_vtbl *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count_vtbl *v26;
  std::__shared_weak_count *v27;
  std::__shared_weak_count_vtbl *v28;
  std::__shared_weak_count *v29;

  sub_239910514(&v26, a2, a3);
  v7 = v26;
  v6 = v27;
  v28 = v26;
  v29 = v27;
  if (v27)
  {
    p_shared_owners = (unint64_t *)&v27->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  *a1 = &off_250AEF6A0;
  v10 = (char *)operator new(0xA0uLL);
  v11 = v10;
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_250AEF6D8;
  v12 = v10 + 24;
  if (v6)
  {
    v13 = (unint64_t *)&v6->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    *((_QWORD *)v10 + 3) = v7;
    *((_QWORD *)v10 + 4) = v6;
    do
      v15 = __ldxr(v13);
    while (__stxr(v15 + 1, v13));
  }
  else
  {
    *((_QWORD *)v10 + 3) = v7;
    *((_QWORD *)v10 + 4) = 0;
  }
  *((_DWORD *)v10 + 10) = a4;
  *((_DWORD *)v10 + 11) = 0;
  *((_QWORD *)v10 + 6) = a4 == 1;
  *((_QWORD *)v10 + 7) = a4 == 2;
  *((_QWORD *)v10 + 8) = 850045863;
  v16 = 0uLL;
  *(_OWORD *)(v10 + 72) = 0u;
  *(_OWORD *)(v10 + 88) = 0u;
  *(_OWORD *)(v10 + 104) = 0u;
  *((_QWORD *)v10 + 15) = 0;
  if (v6)
  {
    v17 = (unint64_t *)&v6->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      v16 = 0uLL;
    }
  }
  *((_OWORD *)v11 + 8) = v16;
  *((_OWORD *)v11 + 9) = v16;
  a1[1] = v12;
  a1[2] = v11;
  v19 = v29;
  if (v29)
  {
    v20 = (unint64_t *)&v29->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v22 = v27;
  if (v27)
  {
    v23 = (unint64_t *)&v27->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  return a1;
}

void sub_2399107C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_2399107E4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_250AEF6A0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_239910858(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AEF6A0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2399108CC(uint64_t a1, unsigned int a2)
{
  uint64_t *v2;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t **v14;
  uint64_t *v15;

  v2 = *(uint64_t **)(a1 + 8);
  if (!v2)
    goto LABEL_12;
  v6 = *v2;
  v5 = (std::__shared_weak_count *)v2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (!v6)
LABEL_12:
    sub_239EC2FC0();
  v10 = *(_QWORD *)(a1 + 8);
  v13 = v10;
  v11 = atomic_load((unint64_t *)(v10 + 104));
  if (v11 != -1)
  {
    v15 = &v13;
    v14 = &v15;
    std::__call_once((std::once_flag::_State_type *)(v10 + 104), &v14, (void (__cdecl *)(void *))sub_239910994);
  }
  return *(_QWORD *)(*(_QWORD *)(v10 + 112) + 8 * a2);
}

double sub_239910994(uint64_t ***a1)
{
  uint64_t v1;
  void *v2;
  double result;
  __int128 v4;
  uint64_t v5;

  v1 = ***a1;
  sub_239910424((IOSurfaceRef *)v1, &v4);
  v2 = *(void **)(v1 + 112);
  if (v2)
  {
    *(_QWORD *)(v1 + 120) = v2;
    operator delete(v2);
  }
  result = *(double *)&v4;
  *(_OWORD *)(v1 + 112) = v4;
  *(_QWORD *)(v1 + 128) = v5;
  return result;
}

void sub_2399109EC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEF6D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2399109FC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEF6D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239910A2C(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *(void **)(a1 + 136);
  if (v2)
  {
    *(_QWORD *)(a1 + 144) = v2;
    operator delete(v2);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 64));
  v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

char *sub_239910AA4(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_239910CBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239910CD4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::__shared_weak_count *v4;
  const __CFDictionary *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(const __CFDictionary **)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v4)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if (!v5)
      goto LABEL_10;
  }
  else
  {
LABEL_6:
    if (!v5)
      goto LABEL_10;
  }
  v9 = 0;
  if (sub_23962C8C0(*(const __CFDictionary **)a1, CFSTR("IOSurfaceName"), (const void **)&v9))
  {
    sub_23962A000(v9, a2);
    return;
  }
LABEL_10:
  a2->__r_.__value_.__s.__data_[0] = 0;
  a2[1].__r_.__value_.__s.__data_[0] = 0;
}

uint64_t sub_239910D98(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  std::string __p;

  v4 = atomic_load((unsigned __int8 *)qword_25693C7F0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(qword_25693C7F0))
  {
    sub_239910EAC();
    __cxa_atexit(MEMORY[0x24BEDACF0], byte_25693C878, &dword_23940C000);
    __cxa_guard_release(qword_25693C7F0);
  }
  sub_2399113DC((uint64_t)byte_25693C878, "; ", a2, "; X/X", &__p);
  sub_239911A84(a1, CFSTR("IOSurfaceName"), (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return a1;
}

void sub_239910E78(_Unwind_Exception *a1)
{
  __cxa_guard_abort(qword_25693C7F0);
  _Unwind_Resume(a1);
}

void sub_239910E90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239910EAC()
{
  std::__fs::filesystem::path::__string_view v0;
  std::__fs::filesystem::path *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v2;
  std::basic_string_view<_CharT, _Traits>::size_type v3;
  std::__shared_weak_count *size;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__fs::filesystem::path::__string_view v10;
  std::__fs::filesystem::path *v11;
  std::basic_string_view<_CharT, _Traits>::size_type v12;
  std::basic_string_view<_CharT, _Traits>::size_type v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__fs::filesystem::path::__string_view v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  std::__fs::filesystem::path v23;
  _BYTE v24[8];
  std::__shared_weak_count *v25;
  std::__fs::filesystem::path v26;
  char v27;
  std::__fs::filesystem::path __p;
  std::__fs::filesystem::path __dst;

  sub_239628B4C((uint64_t)v24);
  sub_239628A24((uint64_t)v24, (int)&v23);
  sub_23962B688((uint64_t)&v23, (uint64_t)&v26);
  v0 = std::__fs::filesystem::path::__filename(&v26);
  if (v0.__size_ > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v0.__size_ >= 0x17)
  {
    v2 = (v0.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v0.__size_ | 7) != 0x17)
      v2 = v0.__size_ | 7;
    v3 = v2 + 1;
    p_dst = (std::__fs::filesystem::path *)operator new(v2 + 1);
    __dst.__pn_.__r_.__value_.__l.__size_ = v0.__size_;
    __dst.__pn_.__r_.__value_.__r.__words[2] = v3 | 0x8000000000000000;
    __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    *((_BYTE *)&__dst.__pn_.__r_.__value_.__s + 23) = v0.__size_;
    p_dst = &__dst;
    if (!v0.__size_)
      goto LABEL_9;
  }
  memmove(p_dst, v0.__data_, v0.__size_);
LABEL_9:
  p_dst->__pn_.__r_.__value_.__s.__data_[v0.__size_] = 0;
  __p = __dst;
  if (v27 && SHIBYTE(v26.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v26.__pn_.__r_.__value_.__l.__data_);
  size = (std::__shared_weak_count *)v23.__pn_.__r_.__value_.__l.__size_;
  if (v23.__pn_.__r_.__value_.__l.__size_)
  {
    v5 = (unint64_t *)(v23.__pn_.__r_.__value_.__l.__size_ + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  v7 = v25;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  sub_239628AB0(&v21);
  sub_239628A24((uint64_t)&v21, (int)v24);
  sub_23962B688((uint64_t)v24, (uint64_t)&v26);
  v10 = std::__fs::filesystem::path::__filename(&v26);
  if (v10.__size_ > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v10.__size_ >= 0x17)
  {
    v12 = (v10.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10.__size_ | 7) != 0x17)
      v12 = v10.__size_ | 7;
    v13 = v12 + 1;
    v11 = (std::__fs::filesystem::path *)operator new(v12 + 1);
    __dst.__pn_.__r_.__value_.__l.__size_ = v10.__size_;
    __dst.__pn_.__r_.__value_.__r.__words[2] = v13 | 0x8000000000000000;
    __dst.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
  }
  else
  {
    *((_BYTE *)&__dst.__pn_.__r_.__value_.__s + 23) = v10.__size_;
    v11 = &__dst;
    if (!v10.__size_)
      goto LABEL_30;
  }
  memmove(v11, v10.__data_, v10.__size_);
LABEL_30:
  v11->__pn_.__r_.__value_.__s.__data_[v10.__size_] = 0;
  v23 = __dst;
  if (v27 && SHIBYTE(v26.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v26.__pn_.__r_.__value_.__l.__data_);
  v14 = v25;
  if (v25)
  {
    v15 = (unint64_t *)&v25->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v22;
  if (v22)
  {
    v18 = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v20.__data_ = (const std::string_view::value_type *)&__p;
  else
    v20.__data_ = (const std::string_view::value_type *)__p.__pn_.__r_.__value_.__r.__words[0];
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v20.__size_ = HIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]);
  else
    v20.__size_ = __p.__pn_.__r_.__value_.__l.__size_;
  if (std::__fs::filesystem::path::__compare(&v23, v20))
  {
    if (SHIBYTE(v23.__pn_.__r_.__value_.__r.__words[2]) < 0)
      sub_23941A7F8(&v26, v23.__pn_.__r_.__value_.__l.__data_, v23.__pn_.__r_.__value_.__l.__size_);
    else
      v26 = v23;
    if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
      sub_23941A7F8(&__dst, __p.__pn_.__r_.__value_.__l.__data_, __p.__pn_.__r_.__value_.__l.__size_);
    else
      __dst = __p;
    sub_239911828((uint64_t)&v26, "/", (uint64_t)&__dst, (std::string *)byte_25693C878);
    if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v26.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_64;
    }
    else if ((SHIBYTE(v26.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_64;
    }
    operator delete(v26.__pn_.__r_.__value_.__l.__data_);
  }
  else if (SHIBYTE(v23.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(byte_25693C878, v23.__pn_.__r_.__value_.__l.__data_, v23.__pn_.__r_.__value_.__l.__size_);
  }
  else
  {
    *(std::__fs::filesystem::path *)byte_25693C878 = v23;
  }
LABEL_64:
  if ((SHIBYTE(v23.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_68:
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v23.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_68;
}

void sub_23991128C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((a32 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a32 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a27);
  _Unwind_Resume(exception_object);
}

void sub_2399113A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a23)
  {
    if (a22 < 0)
      operator delete(__p);
  }
  sub_239416DA0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_2399113DC(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, const char *a4@<X3>, std::string *a5@<X8>)
{
  char *v9;
  size_t v10;
  size_t v11;
  void *v12;
  char *v13;
  __int128 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  int64x2_t v19;
  int8x16_t v20;
  size_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void **v27;
  void *v28;
  void *v29;
  char *v30;
  unint64_t v31;
  void *__p;
  char v33;

  v29 = 0;
  v30 = 0;
  v31 = 0;
  v9 = sub_23941A624((char **)&v29, a1);
  v30 = v9;
  if ((unint64_t)v9 >= v31)
  {
    v13 = sub_239583E94(&v29, a2);
    v30 = v13;
    if ((unint64_t)v13 >= v31)
      goto LABEL_15;
    goto LABEL_7;
  }
  v10 = strlen(a2);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v16 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v16 = v10 | 7;
    v17 = v16 + 1;
    v12 = operator new(v16 + 1);
    *((_QWORD *)v9 + 1) = v11;
    *((_QWORD *)v9 + 2) = v17 | 0x8000000000000000;
    *(_QWORD *)v9 = v12;
    goto LABEL_13;
  }
  v9[23] = v10;
  v12 = v9;
  if (v10)
LABEL_13:
    memmove(v12, a2, v11);
  *((_BYTE *)v12 + v11) = 0;
  v13 = v9 + 24;
  v30 = v13;
  if ((unint64_t)v13 >= v31)
  {
LABEL_15:
    v15 = sub_23941A624((char **)&v29, a3);
    v30 = v15;
    if ((unint64_t)v15 < v31)
      goto LABEL_16;
    goto LABEL_26;
  }
LABEL_7:
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v13, *(void **)a3, *(_QWORD *)(a3 + 8));
    v15 = v13 + 24;
    v30 = v13 + 24;
    if ((unint64_t)(v13 + 24) < v31)
    {
LABEL_16:
      v18 = strlen(a4);
      if (v18 > 0x7FFFFFFFFFFFFFF7)
        sub_23941A5AC();
      v21 = v18;
      if (v18 >= 0x17)
      {
        v23 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v18 | 7) != 0x17)
          v23 = v18 | 7;
        v24 = v23 + 1;
        v22 = operator new(v23 + 1);
        *((_QWORD *)v15 + 1) = v21;
        *((_QWORD *)v15 + 2) = v24 | 0x8000000000000000;
        *(_QWORD *)v15 = v22;
      }
      else
      {
        v15[23] = v18;
        v22 = v15;
        if (!v18)
          goto LABEL_24;
      }
      memmove(v22, a4, v21);
LABEL_24:
      *((_BYTE *)v22 + v21) = 0;
      v25 = v15 + 24;
      goto LABEL_27;
    }
  }
  else
  {
    v14 = *(_OWORD *)a3;
    *((_QWORD *)v13 + 2) = *(_QWORD *)(a3 + 16);
    *(_OWORD *)v13 = v14;
    v15 = v13 + 24;
    v30 = v13 + 24;
    if ((unint64_t)(v13 + 24) < v31)
      goto LABEL_16;
  }
LABEL_26:
  v25 = sub_239728EBC(&v29, a4);
LABEL_27:
  v30 = v25;
  v33 = 0;
  LOBYTE(__p) = 0;
  sub_23941AE44((uint64_t)v29, (uint64_t)v25, (uint64_t)&__p, a5, v19, v20);
  if (v33 < 0)
    operator delete(__p);
  v26 = (char *)v29;
  if (v29)
  {
    v27 = (void **)v30;
    v28 = v29;
    if (v30 != v29)
    {
      do
      {
        if (*((char *)v27 - 1) < 0)
          operator delete(*(v27 - 3));
        v27 -= 3;
      }
      while (v27 != (void **)v26);
      v28 = v29;
    }
    v30 = v26;
    operator delete(v28);
  }
}

void sub_239911684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_23941A260(&a9);
  _Unwind_Resume(a1);
}

void sub_2399116C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2399116ECLL);
}

void sub_2399116FC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  const void *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  const void *v14;
  std::__shared_weak_count *v15;
  CFTypeRef v16;

  sub_2397A0AB4(&v14, a1);
  v4 = v14;
  v3 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v16 = v4;
  if (sub_23962BB30(&v16))
  {
    *a2 = v4;
    a2[1] = v3;
    if (!v3)
      goto LABEL_14;
    v7 = (unint64_t *)&v3->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    if (!v3)
      goto LABEL_14;
  }
  v9 = (unint64_t *)&v3->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_14:
  v11 = v15;
  if (v15)
  {
    v12 = (unint64_t *)&v15->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_239911804(_Unwind_Exception *a1, uint64_t a2, ...)
{
  std::__shared_weak_count *v2;
  va_list va;

  va_start(va, a2);
  if (v2)
    sub_239EC2FF0(v2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239911828(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  char *v7;
  size_t v8;
  int64x2_t v9;
  int8x16_t v10;
  size_t v11;
  void *v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void **v19;
  void *v20;
  void *v21;
  char *v22;
  unint64_t v23;
  void *__p;
  char v25;

  v21 = 0;
  v22 = 0;
  v23 = 0;
  v7 = sub_23941A624((char **)&v21, a1);
  v22 = v7;
  if ((unint64_t)v7 >= v23)
  {
    v13 = sub_239583C68(&v21, a2);
    v22 = v13;
    if ((unint64_t)v13 >= v23)
      goto LABEL_6;
    goto LABEL_8;
  }
  v8 = strlen(a2);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v8;
  if (v8 >= 0x17)
  {
    v16 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v16 = v8 | 7;
    v17 = v16 + 1;
    v12 = operator new(v16 + 1);
    *((_QWORD *)v7 + 1) = v11;
    *((_QWORD *)v7 + 2) = v17 | 0x8000000000000000;
    *(_QWORD *)v7 = v12;
LABEL_13:
    memmove(v12, a2, v11);
    *((_BYTE *)v12 + v11) = 0;
    v13 = v7 + 24;
    v22 = v13;
    if ((unint64_t)v13 >= v23)
      goto LABEL_6;
    goto LABEL_8;
  }
  v7[23] = v8;
  v12 = v7;
  if (v8)
    goto LABEL_13;
  *v7 = 0;
  v13 = v7 + 24;
  v22 = v13;
  if ((unint64_t)v13 >= v23)
  {
LABEL_6:
    v14 = sub_23941A624((char **)&v21, a3);
    goto LABEL_17;
  }
LABEL_8:
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v13, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    v15 = *(_OWORD *)a3;
    *((_QWORD *)v13 + 2) = *(_QWORD *)(a3 + 16);
    *(_OWORD *)v13 = v15;
  }
  v14 = v13 + 24;
LABEL_17:
  v22 = v14;
  v25 = 0;
  LOBYTE(__p) = 0;
  sub_23941AE44((uint64_t)v21, (uint64_t)v14, (uint64_t)&__p, a4, v9, v10);
  if (v25 < 0)
    operator delete(__p);
  v18 = (char *)v21;
  if (v21)
  {
    v19 = (void **)v22;
    v20 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v19 - 1) < 0)
          operator delete(*(v19 - 3));
        v19 -= 3;
      }
      while (v19 != (void **)v18);
      v20 = v21;
    }
    v22 = v18;
    operator delete(v20);
  }
}

void sub_239911A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_23941A260(&a9);
  _Unwind_Resume(a1);
}

void sub_239911A2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_239911A84(uint64_t a1, const void *a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CFMutableDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  CFStringRef v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL8 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  CFStringRef v21;
  std::__shared_weak_count *v22;

  v7 = *(CFMutableDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (v7)
        goto LABEL_7;
      return 0;
    }
  }
  if (!v7)
    return 0;
LABEL_7:
  sub_239629EF4(a3, &v21);
  v12 = v21;
  v11 = v22;
  if (v22)
  {
    v13 = (unint64_t *)&v22->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      v16 = v12 != 0;
      if (!v12)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  v16 = v12 != 0;
  if (v12)
LABEL_13:
    sub_23962C8B8((CFMutableDictionaryRef *)a1, a2, v21);
LABEL_14:
  v17 = v22;
  if (v22)
  {
    v18 = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return v16;
}

void sub_239911BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239911BE8(int **a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  int *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *a1;
  v4 = a1[1];
  v5 = (std::__shared_weak_count *)operator new(0x48uLL);
  v5->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  v5->__shared_weak_owners_ = 0;
  v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEF7E8;
  v7 = sub_239911F2C(&v5[1].__vftable, v3, v4);
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  *a2 = &off_250AEF738;
  a2[1] = v7;
  a2[2] = v5;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_239911CE0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_239911CF8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_239911D60(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239911DC8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_239911DD8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_239911DE8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_239911DF8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_239911E08(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 48))(*(_QWORD *)(a1 + 8));
}

void sub_239911E18(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_250AEF798;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239911E2C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_250AEF798;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239911E60(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_239911E7C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEF7E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239911E8C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEF7E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239911EBC(_QWORD *a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  v3 = (std::__shared_weak_count *)a1[5];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

_QWORD *sub_239911F2C(_QWORD *a1, int *a2, int *a3)
{
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  char *v9;

  *a1 = &off_250AEF838;
  v6 = operator new(0x30uLL);
  v6[3] = 0;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &unk_250AEF798;
  v6[4] = 0;
  v6[5] = 0;
  sub_2399124C4((uint64_t)(v6 + 3), a2, a3);
  a1[3] = 0;
  a1[1] = v6 + 3;
  a1[2] = v6;
  a1[4] = 0;
  a1[5] = 0;
  v7 = (char *)a3 - (char *)a2;
  if (a3 != a2)
  {
    if (v7 < 0)
      sub_2394189F8();
    v8 = (char *)operator new((char *)a3 - (char *)a2);
    a1[3] = v8;
    a1[4] = v8;
    v9 = &v8[4 * (v7 >> 2)];
    a1[5] = v9;
    if (a3 != a2)
      memmove(v8, a2, (char *)a3 - (char *)a2);
    a1[4] = v9;
  }
  return a1;
}

void sub_239912010(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void *v5;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 32) = v5;
    operator delete(v5);
  }
  sub_239416DA0(v2);
  _Unwind_Resume(a1);
}

void sub_239912034(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void **v2;
  void *v4;
  void *v5;

  v4 = *v2;
  if (*v2)
  {
    v1[1].__shared_owners_ = (uint64_t)v4;
    operator delete(v4);
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

_QWORD *sub_23991205C(_QWORD *a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = (void *)a1[3];
  if (v2)
  {
    a1[4] = v2;
    operator delete(v2);
  }
  v3 = (std::__shared_weak_count *)a1[2];
  if (!v3)
    return a1;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return a1;
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2399120D4(_QWORD *a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = (void *)a1[3];
  if (v2)
  {
    a1[4] = v2;
    operator delete(v2);
  }
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23991214C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t sub_239912158(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

void sub_239912164(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int **v3;
  unsigned int *v4;
  unsigned int *v5;
  uint64_t v6;
  _OWORD *v7;
  char *v8;
  char *v9;
  _QWORD *v10;
  unsigned int *v11;
  unint64_t v12;
  _QWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unsigned int v19;

  v3 = *(unsigned int ***)(a1 + 8);
  v5 = *v3;
  v4 = v3[1];
  v6 = (char *)v4 - (char *)*v3;
  if (v4 == *v3)
  {
    v7 = 0;
    v9 = 0;
    v8 = 0;
  }
  else
  {
    if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFFDLL)
      sub_2394189F8();
    v7 = operator new(2 * v6);
    v8 = (char *)v7 + 8 * (v6 >> 2);
    bzero(v7, 2 * v6);
    v9 = (char *)v7 + 2 * v6;
    v10 = v7;
    v11 = v5;
    if ((unint64_t)(v6 - 4) < 0xC)
      goto LABEL_14;
    v12 = ((unint64_t)(v6 - 4) >> 2) + 1;
    v10 = (_QWORD *)v7 + (v12 & 0x7FFFFFFFFFFFFFFCLL);
    v11 = &v5[v12 & 0x7FFFFFFFFFFFFFFCLL];
    v13 = v5 + 2;
    v14 = v7 + 1;
    v15 = v12 & 0x7FFFFFFFFFFFFFFCLL;
    do
    {
      v16 = *(v13 - 1);
      *(_QWORD *)&v17 = v16;
      *((_QWORD *)&v17 + 1) = HIDWORD(v16);
      v18 = v17;
      *(_QWORD *)&v17 = *v13;
      *((_QWORD *)&v17 + 1) = HIDWORD(*v13);
      *(v14 - 1) = v18;
      *v14 = v17;
      v13 += 2;
      v14 += 2;
      v15 -= 4;
    }
    while (v15);
    if (v12 != (v12 & 0x7FFFFFFFFFFFFFFCLL))
    {
LABEL_14:
      do
      {
        v19 = *v11++;
        *v10++ = v19;
      }
      while (v11 != v4);
    }
  }
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 24) = 1;
}

void sub_239912284(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399122A0()
{
  return 0;
}

void sub_2399122AC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int v5;
  size_t v6;
  unint64_t v7;
  std::string *p_dst;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  std::string *p_p;
  std::string::size_type size;
  std::string *v14;
  std::string __p;
  std::string __dst;

  v4 = atomic_load((unsigned __int8 *)&qword_2569343E8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569343E8))
  {
    byte_2569343E7 = 6;
    strcpy((char *)&qword_2569343D0, "uint32");
    __cxa_atexit(MEMORY[0x24BEDACF0], &qword_2569343D0, &dword_23940C000);
    __cxa_guard_release(&qword_2569343E8);
  }
  v5 = byte_2569343E7;
  if (byte_2569343E7 >= 0)
    v6 = byte_2569343E7;
  else
    v6 = qword_2569343D8;
  v7 = v6 + 1;
  if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  if (v7 >= 0x17)
  {
    v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v9 = v7 | 7;
    v10 = v9 + 1;
    p_dst = (std::string *)operator new(v9 + 1);
    __dst.__r_.__value_.__l.__size_ = v6 + 1;
    __dst.__r_.__value_.__r.__words[2] = v10 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = &__dst;
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v6 + 1;
    if (!v6)
      goto LABEL_16;
  }
  if (v5 >= 0)
    v11 = &qword_2569343D0;
  else
    v11 = (uint64_t *)qword_2569343D0;
  memmove(p_dst, v11, v6);
LABEL_16:
  *(_WORD *)((char *)&p_dst->__r_.__value_.__l.__data_ + v6) = 58;
  sub_2399126A8((unsigned int **)(a1 + 24), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v14 = std::string::append(&__dst, (const std::string::value_type *)p_p, size);
  *a2 = *v14;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_26:
    operator delete(__dst.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_26;
}

void sub_239912478(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_2399124C4(uint64_t a1, int *a2, int *a3)
{
  int *v4;
  char *v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE *v16;
  _DWORD *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  int v26;

  if (a2 != a3)
  {
    v4 = a2;
    v6 = *(char **)(a1 + 8);
    while (1)
    {
      v8 = *v4;
      v9 = *(_QWORD *)(a1 + 16);
      if ((unint64_t)v6 >= v9)
        break;
      *(_DWORD *)v6 = v8;
      v7 = (uint64_t)(v6 + 4);
LABEL_4:
      *(_QWORD *)(a1 + 8) = v7;
      ++v4;
      v6 = (char *)v7;
      if (v4 == a3)
        return;
    }
    v10 = *(char **)a1;
    v11 = (uint64_t)&v6[-*(_QWORD *)a1];
    v12 = v11 >> 2;
    v13 = (v11 >> 2) + 1;
    if (v13 >> 62)
      sub_2394189F8();
    v14 = v9 - (_QWORD)v10;
    if (v14 >> 1 > v13)
      v13 = v14 >> 1;
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL)
      v15 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v15 = v13;
    if (v15)
    {
      if (v15 >> 62)
        sub_239418A80();
      v16 = operator new(4 * v15);
      v17 = &v16[4 * v12];
      *v17 = v8;
      v7 = (uint64_t)(v17 + 1);
      if (v6 == v10)
        goto LABEL_29;
    }
    else
    {
      v16 = 0;
      v17 = (_DWORD *)(4 * v12);
      *(_DWORD *)(4 * v12) = v8;
      v7 = 4 * v12 + 4;
      if (v6 == v10)
        goto LABEL_29;
    }
    v18 = v6 - 4 - v10;
    if (v18 >= 0xBC)
    {
      if (&v16[v11 - 4 - (v18 & 0xFFFFFFFFFFFFFFFCLL)] > &v16[v11 - 4])
      {
        v19 = v6;
      }
      else if (&v6[-(v18 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v6 - 4)
      {
        v19 = v6;
      }
      else if ((unint64_t)(v6 - v16 - v11) >= 0x20)
      {
        v20 = (v18 >> 2) + 1;
        v21 = 4 * (v20 & 0x7FFFFFFFFFFFFFF8);
        v19 = &v6[-v21];
        v17 = (_DWORD *)((char *)v17 - v21);
        v22 = &v16[4 * v12 - 16];
        v23 = v6 - 16;
        v24 = v20 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v25 = *(_OWORD *)v23;
          *(v22 - 1) = *((_OWORD *)v23 - 1);
          *v22 = v25;
          v22 -= 2;
          v23 -= 32;
          v24 -= 8;
        }
        while (v24);
        if (v20 == (v20 & 0x7FFFFFFFFFFFFFF8))
          goto LABEL_29;
      }
      else
      {
        v19 = v6;
      }
    }
    else
    {
      v19 = v6;
    }
    do
    {
      v26 = *((_DWORD *)v19 - 1);
      v19 -= 4;
      *--v17 = v26;
    }
    while (v19 != v10);
LABEL_29:
    *(_QWORD *)a1 = v17;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = &v16[4 * v15];
    if (v10)
      operator delete(v10);
    goto LABEL_4;
  }
}

void sub_2399126A8(unsigned int **a1@<X0>, std::string *a2@<X8>)
{
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *v8;
  void **v9;
  uint64_t v10;
  void *__p[2];
  char v12;

  v8 = 0;
  v9 = 0;
  v10 = 0;
  sub_23991278C((uint64_t)__p, (uint64_t)&v8, a1);
  v12 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v8, (uint64_t)v9, (uint64_t)__p, a2, v3, v4);
  if (v12 < 0)
    operator delete(__p[0]);
  v5 = (void **)v8;
  if (v8)
  {
    v6 = v9;
    v7 = v8;
    if (v9 != v8)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = v8;
    }
    v9 = v5;
    operator delete(v7);
  }
}

void sub_239912754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_23941A260((void **)&a9);
    _Unwind_Resume(a1);
  }
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

char *sub_23991278C(uint64_t a1, uint64_t a2, unsigned int **a3)
{
  char *v4;
  unint64_t v5;
  char *v7;
  char *result;
  unsigned int *v9;
  unint64_t v10;
  __int128 v11;
  unsigned int *v12;
  unsigned int *v13;
  char *v14;
  int v15;
  __int128 v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  char *v20;
  int v21;
  std::string v22;

  v4 = *(char **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if ((char *)a3[1] - (char *)*a3 > 3)
  {
    if ((unint64_t)v4 >= v5)
    {
      v7 = sub_239583C68((void **)a2, "{");
    }
    else
    {
      v4[23] = 1;
      *(_WORD *)v4 = 123;
      v7 = v4 + 24;
      *(_QWORD *)(a2 + 8) = v4 + 24;
    }
    *(_QWORD *)(a2 + 8) = v7;
    v9 = *a3;
    std::to_string(&v22, **a3);
    v10 = *(_QWORD *)(a2 + 8);
    if (v10 < *(_QWORD *)(a2 + 16))
    {
      v11 = *(_OWORD *)&v22.__r_.__value_.__l.__data_;
      *(_QWORD *)(v10 + 16) = *((_QWORD *)&v22.__r_.__value_.__l + 2);
      *(_OWORD *)v10 = v11;
      *(_QWORD *)(a2 + 8) = v10 + 24;
      v12 = a3[1];
      v13 = v9 + 1;
      if (v13 == v12)
        goto LABEL_23;
      do
      {
LABEL_16:
        v17 = *(_QWORD *)(a2 + 8);
        if (v17 >= *(_QWORD *)(a2 + 16))
        {
          v18 = sub_239583C68((void **)a2, ",");
        }
        else
        {
          *(_BYTE *)(v17 + 23) = 1;
          *(_WORD *)v17 = 44;
          v18 = (char *)(v17 + 24);
          *(_QWORD *)(a2 + 8) = v17 + 24;
        }
        *(_QWORD *)(a2 + 8) = v18;
        std::to_string(&v22, *v13);
        v19 = *(_QWORD *)(a2 + 8);
        if (v19 < *(_QWORD *)(a2 + 16))
        {
          v16 = *(_OWORD *)&v22.__r_.__value_.__l.__data_;
          *(_QWORD *)(v19 + 16) = *((_QWORD *)&v22.__r_.__value_.__l + 2);
          *(_OWORD *)v19 = v16;
          *(_QWORD *)(a2 + 8) = v19 + 24;
        }
        else
        {
          v20 = sub_23941ACDC((void **)a2, (uint64_t)&v22);
          v21 = SHIBYTE(v22.__r_.__value_.__r.__words[2]);
          *(_QWORD *)(a2 + 8) = v20;
          if (v21 < 0)
            operator delete(v22.__r_.__value_.__l.__data_);
        }
        ++v13;
      }
      while (v13 != v12);
      goto LABEL_23;
    }
    v14 = sub_23941ACDC((void **)a2, (uint64_t)&v22);
    v15 = SHIBYTE(v22.__r_.__value_.__r.__words[2]);
    *(_QWORD *)(a2 + 8) = v14;
    if (v15 < 0)
    {
      operator delete(v22.__r_.__value_.__l.__data_);
      v12 = a3[1];
      v13 = v9 + 1;
      if (v13 != v12)
        goto LABEL_16;
    }
    else
    {
      v12 = a3[1];
      v13 = v9 + 1;
      if (v13 != v12)
        goto LABEL_16;
    }
LABEL_23:
    v4 = *(char **)(a2 + 8);
    if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
    {
      result = sub_239583C68((void **)a2, "}");
      goto LABEL_27;
    }
    v4[23] = 1;
    *(_WORD *)v4 = 125;
    goto LABEL_25;
  }
  if ((unint64_t)v4 < v5)
  {
    v4[23] = 2;
    strcpy(v4, "{}");
LABEL_25:
    result = v4 + 24;
    *(_QWORD *)(a2 + 8) = v4 + 24;
    goto LABEL_27;
  }
  result = sub_239583E94((void **)a2, "{}");
LABEL_27:
  *(_QWORD *)(a2 + 8) = result;
  return result;
}

void sub_2399129A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__n128 sub_2399129C4(__n128 *a1, __n128 *a2, uint64_t a3)
{
  __n128 result;
  std::logic_error *exception;

  if (a3 != 16)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239503898(exception, "requires a range of 16 bytes");
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  result = *a2;
  *a1 = *a2;
  return result;
}

void sub_239912A30(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_239912A44(unsigned __int8 *a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  std::string::reserve(a2, 0x24uLL);
  std::string::push_back(a2, byte_239F02620[(unint64_t)*a1 >> 4]);
  std::string::push_back(a2, byte_239F02620[*a1 & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[1] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[1] & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[2] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[2] & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[3] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[3] & 0xF]);
  std::string::push_back(a2, 45);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[4] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[4] & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[5] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[5] & 0xF]);
  std::string::push_back(a2, 45);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[6] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[6] & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[7] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[7] & 0xF]);
  std::string::push_back(a2, 45);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[8] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[8] & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[9] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[9] & 0xF]);
  std::string::push_back(a2, 45);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[10] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[10] & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[11] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[11] & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[12] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[12] & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[13] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[13] & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[14] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[14] & 0xF]);
  std::string::push_back(a2, byte_239F02620[(unint64_t)a1[15] >> 4]);
  std::string::push_back(a2, byte_239F02620[a1[15] & 0xF]);
}

void sub_239912D38(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_239912D6C(unsigned __int8 a1)
{
  std::logic_error *exception;
  unsigned __int8 v3;
  std::string v4;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  v3 = a1;
  sub_239912E38("Invalid ArithmeticType value '", &v3, "'", &v4);
  std::logic_error::logic_error(exception, &v4);
  exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
  __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
}

void sub_239912DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
      goto LABEL_3;
  }
  else if (!v16)
  {
LABEL_3:
    _Unwind_Resume(a1);
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_239912E24(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_239912E38(const char *a1@<X0>, unsigned __int8 *a2@<X1>, const char *a3@<X2>, std::string *a4@<X8>)
{
  char *v7;
  int v8;
  _OWORD *v9;
  __int128 v10;
  char *v11;
  char *v12;
  size_t v13;
  int64x2_t v14;
  int8x16_t v15;
  size_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  void *v23;
  void *__p;
  char *v25;
  unint64_t v26;
  std::string v27;

  __p = 0;
  v25 = 0;
  v26 = 0;
  v7 = sub_239729314(&__p, a1);
  v8 = *a2;
  v25 = v7;
  std::to_string(&v27, v8);
  v9 = v25;
  if ((unint64_t)v25 < v26)
  {
    v10 = *(_OWORD *)&v27.__r_.__value_.__l.__data_;
    *((_QWORD *)v25 + 2) = *((_QWORD *)&v27.__r_.__value_.__l + 2);
    *v9 = v10;
    v11 = (char *)v9 + 24;
    v25 = (char *)v9 + 24;
    if ((unint64_t)v9 + 24 >= v26)
      goto LABEL_16;
LABEL_6:
    v13 = strlen(a3);
    if (v13 >= 0x7FFFFFFFFFFFFFF8)
      sub_23941A5AC();
    v16 = v13;
    if (v13 >= 0x17)
    {
      v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17)
        v18 = v13 | 7;
      v19 = v18 + 1;
      v17 = operator new(v18 + 1);
      *((_QWORD *)v11 + 1) = v16;
      *((_QWORD *)v11 + 2) = v19 | 0x8000000000000000;
      *(_QWORD *)v11 = v17;
    }
    else
    {
      v11[23] = v13;
      v17 = v11;
      if (!v13)
        goto LABEL_14;
    }
    memmove(v17, a3, v16);
LABEL_14:
    *((_BYTE *)v17 + v16) = 0;
    v20 = v11 + 24;
    goto LABEL_17;
  }
  v12 = sub_23941ACDC(&__p, (uint64_t)&v27);
  v11 = v12;
  v25 = v12;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    v11 = v25;
    if ((unint64_t)v25 < v26)
      goto LABEL_6;
  }
  else if ((unint64_t)v12 < v26)
  {
    goto LABEL_6;
  }
LABEL_16:
  v20 = sub_239583C68(&__p, a3);
LABEL_17:
  v25 = v20;
  *((_BYTE *)&v27.__r_.__value_.__s + 23) = 0;
  v27.__r_.__value_.__s.__data_[0] = 0;
  sub_23941AE44((uint64_t)__p, (uint64_t)v20, (uint64_t)&v27, a4, v14, v15);
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v27.__r_.__value_.__l.__data_);
  v21 = (char *)__p;
  if (__p)
  {
    v22 = v25;
    v23 = __p;
    if (v25 != __p)
    {
      do
      {
        if (*(v22 - 1) < 0)
          operator delete(*((void **)v22 - 3));
        v22 -= 24;
      }
      while (v22 != v21);
      v23 = __p;
    }
    v25 = v21;
    operator delete(v23);
  }
}

void sub_239913018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239913074(_QWORD *a1, _BYTE *a2)
{
  const char *v2;
  uint64_t v3;

  switch(*a2)
  {
    case 0:
      v2 = "u8";
      v3 = 2;
      break;
    case 1:
      v2 = "u16";
      v3 = 3;
      break;
    case 2:
      v2 = "u32";
      v3 = 3;
      break;
    case 3:
      v2 = "u64";
      v3 = 3;
      break;
    case 5:
      v2 = "i8";
      v3 = 2;
      break;
    case 6:
      v2 = "i16";
      v3 = 3;
      break;
    case 7:
      v2 = "i32";
      v3 = 3;
      break;
    case 8:
      v2 = "i64";
      v3 = 3;
      break;
    case 0xB:
      v2 = "f32";
      v3 = 3;
      break;
    case 0xC:
      v2 = "f64";
      v3 = 3;
      break;
    default:
      v2 = "unknown arithmetic type";
      v3 = 23;
      break;
  }
  return sub_239458500(a1, (uint64_t)v2, v3);
}

void sub_239913148(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  _QWORD *v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v11;
  uint64_t v12;

  sub_239A43D24(&v12);
  v5 = (_QWORD *)sub_239A43E64(&v12);
  sub_239913074(v5, a3);
  sub_239A43E70();
  sub_239A43DB8(&v12);
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
    v8 = sub_23941ACDC((void **)a2, (uint64_t)__p);
    v9 = SHIBYTE(v11);
    *(_QWORD *)(a2 + 8) = v8;
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v7 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v11;
    *(_OWORD *)v6 = v7;
    *(_QWORD *)(a2 + 8) = v6 + 24;
  }
}

void sub_2399131EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23991321C(uint64_t a1, char a2, uint64_t a3)
{
  _QWORD *v5;

  *(_BYTE *)a1 = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v5 = operator new(8uLL);
  *(_QWORD *)(a1 + 8) = v5;
  *v5++ = a3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v5;
  return a1;
}

uint64_t sub_239913260(uint64_t a1, char a2, char a3)
{
  _BYTE *v5;

  *(_BYTE *)a1 = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v5 = operator new(1uLL);
  *(_QWORD *)(a1 + 8) = v5;
  *v5++ = a3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v5;
  return a1;
}

uint64_t sub_2399132A4(uint64_t a1, char a2, __int16 a3)
{
  _WORD *v5;

  *(_BYTE *)a1 = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v5 = operator new(2uLL);
  *(_QWORD *)(a1 + 8) = v5;
  *v5++ = a3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v5;
  return a1;
}

uint64_t sub_2399132E8(uint64_t a1, char a2, int a3)
{
  _DWORD *v5;

  *(_BYTE *)a1 = a2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v5 = operator new(4uLL);
  *(_QWORD *)(a1 + 8) = v5;
  *v5++ = a3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v5;
  return a1;
}

uint64_t sub_23991332C(uint64_t a1)
{
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = 0;
  if (*(_BYTE *)a1)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_2399133D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_23991340C(unsigned __int8 *a1)
{
  return *a1;
}

void sub_239913414(const char *a1@<X0>, _BYTE *a2@<X1>, const char *a3@<X2>, _BYTE *a4@<X3>, std::string *a5@<X8>)
{
  char *v9;
  size_t v10;
  size_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64x2_t v16;
  int8x16_t v17;
  char *v18;
  char *v19;
  void *v20;
  char v21;
  void *v22;
  char *v23;
  unint64_t v24;
  void *__p[2];
  char v26;

  v22 = 0;
  v23 = 0;
  v24 = 0;
  v23 = sub_2399149FC(&v22, a1);
  sub_239913148((uint64_t)__p, (uint64_t)&v22, a2);
  v9 = v23;
  if ((unint64_t)v23 >= v24)
  {
    v13 = sub_239910AA4(&v22, a3);
    goto LABEL_12;
  }
  v10 = strlen(a3);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v14 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v14 = v10 | 7;
    v15 = v14 + 1;
    v12 = operator new(v14 + 1);
    *((_QWORD *)v9 + 1) = v11;
    *((_QWORD *)v9 + 2) = v15 | 0x8000000000000000;
    *(_QWORD *)v9 = v12;
  }
  else
  {
    v23[23] = v10;
    v12 = v9;
    if (!v10)
      goto LABEL_11;
  }
  memmove(v12, a3, v11);
LABEL_11:
  *((_BYTE *)v12 + v11) = 0;
  v13 = v9 + 24;
LABEL_12:
  v23 = v13;
  sub_239913148((uint64_t)&v21, (uint64_t)&v22, a4);
  v26 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v22, (uint64_t)v23, (uint64_t)__p, a5, v16, v17);
  if (v26 < 0)
    operator delete(__p[0]);
  v18 = (char *)v22;
  if (v22)
  {
    v19 = v23;
    v20 = v22;
    if (v23 != v22)
    {
      do
      {
        if (*(v19 - 1) < 0)
          operator delete(*((void **)v19 - 3));
        v19 -= 24;
      }
      while (v19 != v18);
      v20 = v22;
    }
    v23 = v18;
    operator delete(v20);
  }
}

void sub_2399135A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_23941A260(&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_239913604(uint64_t a1)
{
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = 1;
  if (*(_BYTE *)a1 != 1)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_2399136B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_2399136EC(uint64_t a1)
{
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = 2;
  if (*(_BYTE *)a1 != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_23991379C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_2399137D4(uint64_t a1)
{
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = 3;
  if (*(_BYTE *)a1 != 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_239913884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_2399138BC(uint64_t a1)
{
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = 5;
  if (*(_BYTE *)a1 != 5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_23991396C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_2399139A4(uint64_t a1)
{
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = 6;
  if (*(_BYTE *)a1 != 6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_239913A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_239913A8C(uint64_t a1)
{
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = 7;
  if (*(_BYTE *)a1 != 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_239913B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_239913B74(uint64_t a1)
{
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = 8;
  if (*(_BYTE *)a1 != 8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_239913C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_239913C5C(uint64_t a1)
{
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = 11;
  if (*(_BYTE *)a1 != 11)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_239913D0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_239913D44(uint64_t a1)
{
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = 12;
  if (*(_BYTE *)a1 != 12)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_239913DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_239913E2C(unsigned __int8 *a1, _BYTE *a2)
{
  unint64_t v2;
  int v3;
  unsigned __int8 *v5;
  unsigned __int16 *v6;
  unsigned int v7;
  unsigned int *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  __int16 *v14;
  int v15;
  int *v16;
  uint64_t *v17;
  uint64_t v18;
  float v19;
  unsigned int v20;
  double v21;
  unint64_t v22;
  _DWORD *v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  unint64_t *v27;
  float v28;
  float v29;
  double v30;
  BOOL v31;
  BOOL v32;
  _QWORD *v33;
  unsigned int v34;
  unsigned int v36;
  double v37;
  unsigned int *v38;
  _QWORD *v39;
  _BOOL4 v40;
  _BOOL4 v41;
  double v42;
  _BOOL4 v43;
  double v44;
  _BOOL4 v45;
  uint64_t v46;
  unsigned int v47;
  double v48;
  float v49;
  int8x8_t v50;
  int16x4_t v51;
  BOOL v52;
  BOOL v53;
  double v54;
  double v55;
  int16x4_t v56;
  uint64_t v57;
  unsigned int v58;
  double v59;
  float v60;

  v2 = (unint64_t)a1;
  v3 = *a1;
  switch(v3)
  {
    case 0:
      sub_23991332C(v2);
      v5 = (unsigned __int8 *)sub_23991332C(v2);
      LOBYTE(v3) = *a2;
      v2 = *v5;
      switch(*a2)
      {
        case 0:
          goto LABEL_4;
        case 1:
          goto LABEL_29;
        case 2:
          goto LABEL_21;
        case 3:
          goto LABEL_25;
        case 5:
          goto LABEL_22;
        case 6:
          goto LABEL_23;
        case 7:
          goto LABEL_24;
        case 8:
          goto LABEL_26;
        case 0xB:
          goto LABEL_27;
        case 0xC:
          goto LABEL_28;
        default:
          goto LABEL_20;
      }
    case 1:
      sub_239913604(v2);
      v6 = (unsigned __int16 *)sub_239913604(v2);
      LOBYTE(v3) = *a2;
      v2 = *v6;
      switch(*a2)
      {
        case 0:
LABEL_4:
          sub_23991332C((uint64_t)a2);
          v7 = *(unsigned __int8 *)sub_23991332C((uint64_t)a2);
          goto LABEL_55;
        case 1:
LABEL_29:
          sub_239913604((uint64_t)a2);
          v7 = *(unsigned __int16 *)sub_239913604((uint64_t)a2);
          goto LABEL_55;
        case 2:
          goto LABEL_21;
        case 3:
          goto LABEL_25;
        case 5:
          goto LABEL_22;
        case 6:
          goto LABEL_23;
        case 7:
          goto LABEL_24;
        case 8:
          goto LABEL_26;
        case 0xB:
          goto LABEL_27;
        case 0xC:
          goto LABEL_28;
        default:
          goto LABEL_20;
      }
    case 2:
      sub_2399136EC(v2);
      v8 = (unsigned int *)sub_2399136EC(v2);
      LOBYTE(v3) = *a2;
      v2 = *v8;
      switch(*a2)
      {
        case 0:
          sub_23991332C((uint64_t)a2);
          v7 = *(unsigned __int8 *)sub_23991332C((uint64_t)a2);
          goto LABEL_52;
        case 1:
          sub_239913604((uint64_t)a2);
          v7 = *(unsigned __int16 *)sub_239913604((uint64_t)a2);
          goto LABEL_52;
        case 2:
          goto LABEL_47;
        case 3:
          goto LABEL_25;
        case 5:
          sub_2399138BC((uint64_t)a2);
          v7 = *(char *)sub_2399138BC((uint64_t)a2);
          goto LABEL_52;
        case 6:
          sub_2399139A4((uint64_t)a2);
          v7 = *(__int16 *)sub_2399139A4((uint64_t)a2);
LABEL_52:
          v40 = v2 > v7;
          goto LABEL_56;
        case 7:
          sub_239913A8C((uint64_t)a2);
          v38 = (unsigned int *)sub_239913A8C((uint64_t)a2);
          goto LABEL_54;
        case 8:
          goto LABEL_26;
        case 0xB:
LABEL_27:
          sub_239913C5C((uint64_t)a2);
          v28 = *(float *)sub_239913C5C((uint64_t)a2);
          v29 = (float)v2;
          goto LABEL_96;
        case 0xC:
LABEL_28:
          sub_239913D44((uint64_t)a2);
          v30 = *(double *)sub_239913D44((uint64_t)a2);
          v31 = v30 < (double)v2;
          v32 = v30 <= (double)v2;
          goto LABEL_97;
        default:
          goto LABEL_20;
      }
    case 3:
      sub_2399137D4(v2);
      v9 = (uint64_t *)sub_2399137D4(v2);
      LOBYTE(v3) = *a2;
      v10 = *v9;
      switch(*a2)
      {
        case 0:
          sub_23991332C((uint64_t)a2);
          v11 = *(unsigned __int8 *)sub_23991332C((uint64_t)a2);
          goto LABEL_64;
        case 1:
          sub_239913604((uint64_t)a2);
          v11 = *(unsigned __int16 *)sub_239913604((uint64_t)a2);
          goto LABEL_64;
        case 2:
          sub_2399136EC((uint64_t)a2);
          v11 = *(unsigned int *)sub_2399136EC((uint64_t)a2);
          goto LABEL_64;
        case 3:
          goto LABEL_48;
        case 5:
          sub_2399138BC((uint64_t)a2);
          v11 = *(char *)sub_2399138BC((uint64_t)a2);
          goto LABEL_64;
        case 6:
          sub_2399139A4((uint64_t)a2);
          v11 = *(__int16 *)sub_2399139A4((uint64_t)a2);
          goto LABEL_64;
        case 7:
          sub_239913A8C((uint64_t)a2);
          v11 = *(int *)sub_239913A8C((uint64_t)a2);
LABEL_64:
          v24 = v10 >= v11;
          v41 = v10 > v11;
          if (v24)
            return v41;
          else
            return 0xFFFFFFFFLL;
        case 8:
          sub_239913B74((uint64_t)a2);
          v39 = (_QWORD *)sub_239913B74((uint64_t)a2);
          goto LABEL_68;
        case 0xB:
          sub_239913C5C((uint64_t)a2);
          v28 = *(float *)sub_239913C5C((uint64_t)a2);
          v29 = (float)(unint64_t)v10;
          goto LABEL_96;
        case 0xC:
          sub_239913D44((uint64_t)a2);
          v42 = *(double *)sub_239913D44((uint64_t)a2);
          v31 = v42 < (double)(unint64_t)v10;
          v32 = v42 <= (double)(unint64_t)v10;
          goto LABEL_97;
        default:
          goto LABEL_20;
      }
    case 5:
      sub_2399138BC(v2);
      v12 = (char *)sub_2399138BC(v2);
      LOBYTE(v3) = *a2;
      LODWORD(v2) = *v12;
      v13 = *v12;
      switch(*a2)
      {
        case 0:
          goto LABEL_11;
        case 1:
          goto LABEL_30;
        case 2:
          goto LABEL_21;
        case 3:
          goto LABEL_31;
        case 5:
          goto LABEL_22;
        case 6:
          goto LABEL_23;
        case 7:
          goto LABEL_24;
        case 8:
          goto LABEL_38;
        case 0xB:
          goto LABEL_45;
        case 0xC:
          goto LABEL_46;
        default:
          goto LABEL_20;
      }
    case 6:
      sub_2399139A4(v2);
      v14 = (__int16 *)sub_2399139A4(v2);
      LOBYTE(v3) = *a2;
      LODWORD(v2) = *v14;
      v13 = *v14;
      switch(*a2)
      {
        case 0:
LABEL_11:
          sub_23991332C((uint64_t)a2);
          v15 = *(unsigned __int8 *)sub_23991332C((uint64_t)a2);
          goto LABEL_78;
        case 1:
LABEL_30:
          sub_239913604((uint64_t)a2);
          v15 = *(unsigned __int16 *)sub_239913604((uint64_t)a2);
          goto LABEL_78;
        case 2:
LABEL_21:
          sub_2399136EC((uint64_t)a2);
          v23 = (_DWORD *)sub_2399136EC((uint64_t)a2);
          v24 = *v23 >= v2;
          v25 = *v23 > v2;
          goto LABEL_32;
        case 3:
LABEL_31:
          sub_2399137D4((uint64_t)a2);
          v33 = (_QWORD *)sub_2399137D4((uint64_t)a2);
          v24 = *v33 >= (unint64_t)(int)v2;
          v25 = *v33 > (unint64_t)(int)v2;
          goto LABEL_32;
        case 5:
LABEL_22:
          sub_2399138BC((uint64_t)a2);
          v15 = *(char *)sub_2399138BC((uint64_t)a2);
          goto LABEL_78;
        case 6:
LABEL_23:
          sub_2399139A4((uint64_t)a2);
          v15 = *(__int16 *)sub_2399139A4((uint64_t)a2);
          goto LABEL_78;
        case 7:
LABEL_24:
          sub_239913A8C((uint64_t)a2);
          v26 = *(_DWORD *)sub_239913A8C((uint64_t)a2) < (int)v2;
          goto LABEL_39;
        case 8:
LABEL_38:
          sub_239913B74((uint64_t)a2);
          v26 = *(_QWORD *)sub_239913B74((uint64_t)a2) < v13;
          goto LABEL_39;
        case 0xB:
LABEL_45:
          sub_239913C5C((uint64_t)a2);
          v28 = *(float *)sub_239913C5C((uint64_t)a2);
          v29 = (float)(int)v13;
          goto LABEL_96;
        case 0xC:
LABEL_46:
          sub_239913D44((uint64_t)a2);
          v37 = *(double *)sub_239913D44((uint64_t)a2);
          v31 = v37 < (double)(int)v13;
          v32 = v37 <= (double)(int)v13;
          goto LABEL_97;
        default:
          goto LABEL_20;
      }
    case 7:
      sub_239913A8C(v2);
      v16 = (int *)sub_239913A8C(v2);
      LOBYTE(v3) = *a2;
      v2 = *v16;
      switch(*a2)
      {
        case 0:
          sub_23991332C((uint64_t)a2);
          v15 = *(unsigned __int8 *)sub_23991332C((uint64_t)a2);
          goto LABEL_76;
        case 1:
          sub_239913604((uint64_t)a2);
          v15 = *(unsigned __int16 *)sub_239913604((uint64_t)a2);
          goto LABEL_76;
        case 2:
LABEL_47:
          sub_2399136EC((uint64_t)a2);
          v38 = (unsigned int *)sub_2399136EC((uint64_t)a2);
LABEL_54:
          v7 = *v38;
LABEL_55:
          v40 = v7 < v2;
LABEL_56:
          if (v2 < v7)
            return 0xFFFFFFFFLL;
          else
            return v40;
        case 3:
LABEL_25:
          sub_2399137D4((uint64_t)a2);
          v27 = (unint64_t *)sub_2399137D4((uint64_t)a2);
          v24 = *v27 >= v2;
          v25 = *v27 > v2;
LABEL_32:
          v34 = !v24;
          if (v25)
            return 0xFFFFFFFFLL;
          else
            return v34;
        case 5:
          sub_2399138BC((uint64_t)a2);
          v15 = *(char *)sub_2399138BC((uint64_t)a2);
          goto LABEL_76;
        case 6:
          sub_2399139A4((uint64_t)a2);
          v15 = *(__int16 *)sub_2399139A4((uint64_t)a2);
LABEL_76:
          v43 = (int)v2 > v15;
          goto LABEL_79;
        case 7:
          sub_239913A8C((uint64_t)a2);
          v15 = *(_DWORD *)sub_239913A8C((uint64_t)a2);
LABEL_78:
          v43 = v15 < (int)v2;
LABEL_79:
          if ((int)v2 < v15)
            return 0xFFFFFFFFLL;
          else
            return v43;
        case 8:
LABEL_26:
          sub_239913B74((uint64_t)a2);
          v26 = *(_QWORD *)sub_239913B74((uint64_t)a2) < (uint64_t)v2;
LABEL_39:
          v36 = v26;
          if (v26)
            return v36;
          else
            return 0xFFFFFFFFLL;
        case 0xB:
          sub_239913C5C((uint64_t)a2);
          v28 = *(float *)sub_239913C5C((uint64_t)a2);
          v29 = (float)(int)v2;
          goto LABEL_96;
        case 0xC:
          sub_239913D44((uint64_t)a2);
          v44 = *(double *)sub_239913D44((uint64_t)a2);
          v31 = v44 < (double)(int)v2;
          v32 = v44 <= (double)(int)v2;
          goto LABEL_97;
        default:
          goto LABEL_20;
      }
    case 8:
      sub_239913B74(v2);
      v17 = (uint64_t *)sub_239913B74(v2);
      LOBYTE(v3) = *a2;
      v10 = *v17;
      switch(*a2)
      {
        case 0:
          sub_23991332C((uint64_t)a2);
          v18 = *(unsigned __int8 *)sub_23991332C((uint64_t)a2);
          goto LABEL_89;
        case 1:
          sub_239913604((uint64_t)a2);
          v18 = *(unsigned __int16 *)sub_239913604((uint64_t)a2);
          goto LABEL_89;
        case 2:
          sub_2399136EC((uint64_t)a2);
          v18 = *(unsigned int *)sub_2399136EC((uint64_t)a2);
          goto LABEL_89;
        case 3:
LABEL_48:
          sub_2399137D4((uint64_t)a2);
          v39 = (_QWORD *)sub_2399137D4((uint64_t)a2);
LABEL_68:
          if ((unint64_t)v10 < *v39)
            return 0xFFFFFFFFLL;
          else
            return *v39 < (unint64_t)v10;
        case 5:
          sub_2399138BC((uint64_t)a2);
          v18 = *(char *)sub_2399138BC((uint64_t)a2);
          goto LABEL_89;
        case 6:
          sub_2399139A4((uint64_t)a2);
          v18 = *(__int16 *)sub_2399139A4((uint64_t)a2);
          goto LABEL_89;
        case 7:
          sub_239913A8C((uint64_t)a2);
          v18 = *(int *)sub_239913A8C((uint64_t)a2);
LABEL_89:
          v25 = v10 < v18;
          v45 = v10 > v18;
          if (v25)
            return 0xFFFFFFFFLL;
          else
            return v45;
        case 8:
          sub_239913B74((uint64_t)a2);
          v46 = *(_QWORD *)sub_239913B74((uint64_t)a2);
          if (v10 < v46)
            return 0xFFFFFFFFLL;
          else
            return v46 < v10;
        case 0xB:
          sub_239913C5C((uint64_t)a2);
          v28 = *(float *)sub_239913C5C((uint64_t)a2);
          v29 = (float)v10;
LABEL_96:
          v31 = v28 < v29;
          v32 = v28 <= v29;
          goto LABEL_97;
        case 0xC:
          sub_239913D44((uint64_t)a2);
          v48 = *(double *)sub_239913D44((uint64_t)a2);
          v31 = v48 < (double)v10;
          v32 = v48 <= (double)v10;
          goto LABEL_97;
        default:
          goto LABEL_20;
      }
    case 11:
      sub_239913C5C(v2);
      v19 = *(float *)sub_239913C5C(v2);
      LOBYTE(v3) = *a2;
      switch(*a2)
      {
        case 0:
          sub_23991332C((uint64_t)a2);
          LOBYTE(v20) = *(_BYTE *)sub_23991332C((uint64_t)a2);
          goto LABEL_106;
        case 1:
          sub_239913604((uint64_t)a2);
          LOWORD(v20) = *(_WORD *)sub_239913604((uint64_t)a2);
          goto LABEL_106;
        case 2:
          sub_2399136EC((uint64_t)a2);
          v20 = *(_DWORD *)sub_2399136EC((uint64_t)a2);
LABEL_106:
          v49 = (float)v20;
          goto LABEL_112;
        case 3:
          sub_2399137D4((uint64_t)a2);
          v49 = (float)*(unint64_t *)sub_2399137D4((uint64_t)a2);
          goto LABEL_112;
        case 5:
          sub_2399138BC((uint64_t)a2);
          v50.i8[0] = *(_BYTE *)sub_2399138BC((uint64_t)a2);
          v49 = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v50)).i32[0];
          goto LABEL_112;
        case 6:
          sub_2399139A4((uint64_t)a2);
          v51.i16[0] = *(_WORD *)sub_2399139A4((uint64_t)a2);
          v49 = (float)vmovl_s16(v51).i32[0];
          goto LABEL_112;
        case 7:
          sub_239913A8C((uint64_t)a2);
          v49 = (float)*(int *)sub_239913A8C((uint64_t)a2);
          goto LABEL_112;
        case 8:
          sub_239913B74((uint64_t)a2);
          v49 = (float)*(uint64_t *)sub_239913B74((uint64_t)a2);
LABEL_112:
          v52 = v19 < v49;
          v53 = v19 <= v49;
          goto LABEL_125;
        case 0xB:
          sub_239913C5C((uint64_t)a2);
          v60 = *(float *)sub_239913C5C((uint64_t)a2);
          if (v19 < v60)
            return 0xFFFFFFFFLL;
          else
            return v60 < v19;
        case 0xC:
          sub_239913D44((uint64_t)a2);
          v54 = *(double *)sub_239913D44((uint64_t)a2);
          v31 = v54 < v19;
          v32 = v54 <= v19;
LABEL_97:
          v47 = v31;
          if (v32)
            return v47;
          else
            return 0xFFFFFFFFLL;
        default:
          goto LABEL_20;
      }
    case 12:
      sub_239913D44(v2);
      v21 = *(double *)sub_239913D44(v2);
      LOBYTE(v3) = *a2;
      switch(*a2)
      {
        case 0:
          sub_23991332C((uint64_t)a2);
          LOBYTE(v22) = *(_BYTE *)sub_23991332C((uint64_t)a2);
          goto LABEL_117;
        case 1:
          sub_239913604((uint64_t)a2);
          LOWORD(v22) = *(_WORD *)sub_239913604((uint64_t)a2);
          goto LABEL_117;
        case 2:
          sub_2399136EC((uint64_t)a2);
          LODWORD(v22) = *(_DWORD *)sub_2399136EC((uint64_t)a2);
          goto LABEL_117;
        case 3:
          sub_2399137D4((uint64_t)a2);
          v22 = *(_QWORD *)sub_2399137D4((uint64_t)a2);
LABEL_117:
          v55 = (double)v22;
          goto LABEL_124;
        case 5:
          sub_2399138BC((uint64_t)a2);
          v55 = (double)*(char *)sub_2399138BC((uint64_t)a2);
          goto LABEL_124;
        case 6:
          sub_2399139A4((uint64_t)a2);
          v56.i16[0] = *(_WORD *)sub_2399139A4((uint64_t)a2);
          v57 = vmovl_s16(v56).i32[0];
          goto LABEL_121;
        case 7:
          sub_239913A8C((uint64_t)a2);
          v57 = *(int *)sub_239913A8C((uint64_t)a2);
LABEL_121:
          v55 = (double)v57;
          goto LABEL_124;
        case 8:
          sub_239913B74((uint64_t)a2);
          v55 = (double)*(uint64_t *)sub_239913B74((uint64_t)a2);
          goto LABEL_124;
        case 0xB:
          sub_239913C5C((uint64_t)a2);
          v55 = *(float *)sub_239913C5C((uint64_t)a2);
LABEL_124:
          v52 = v21 < v55;
          v53 = v21 <= v55;
LABEL_125:
          v58 = !v53;
          if (v52)
            return 0xFFFFFFFFLL;
          else
            return v58;
        case 0xC:
          sub_239913D44((uint64_t)a2);
          v59 = *(double *)sub_239913D44((uint64_t)a2);
          if (v21 < v59)
            return 0xFFFFFFFFLL;
          else
            return v59 < v21;
        default:
          goto LABEL_20;
      }
    default:
      break;
  }
LABEL_20:
  sub_239912D6C(v3);
}

BOOL sub_2399149E0(unsigned __int8 *a1, _BYTE *a2)
{
  return sub_239913E2C(a1, a2) == 1;
}

char *sub_2399149FC(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_239418A80();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (char *)*a1;
      v14 = (char *)a1[1];
      if (v14 == *a1)
        goto LABEL_23;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (char *)*a1;
  v14 = (char *)a1[1];
  if (v14 == *a1)
  {
LABEL_23:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 24);
    *((_QWORD *)v11 - 1) = *((_QWORD *)v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *((_QWORD *)v14 - 2) = 0;
    *((_QWORD *)v14 - 1) = 0;
    *((_QWORD *)v14 - 3) = 0;
    v14 -= 24;
  }
  while (v14 != v13);
  v19 = (char *)*a1;
  v14 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  if (v14 != v19)
  {
    do
    {
      if (*(v14 - 1) < 0)
        operator delete(*((void **)v14 - 3));
      v14 -= 24;
    }
    while (v14 != v19);
    v14 = v19;
  }
LABEL_28:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_239914C14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23941A5C0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239914C28(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *__p[2];
  uint64_t v4;
  char v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9[2];
  uint64_t v10;
  char v11;
  char v12;

  LOBYTE(__p[0]) = 0;
  v12 = 0;
  if (*(_BYTE *)(a1 + 96))
  {
    v5 = 0;
    if (*(_BYTE *)(a1 + 24))
    {
      *(_OWORD *)__p = *(_OWORD *)a1;
      v4 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      *(_QWORD *)a1 = 0;
      v5 = 1;
    }
    LOBYTE(v6) = 0;
    v11 = 0;
    if (*(_BYTE *)(a1 + 88))
    {
      v2 = *(_QWORD *)(a1 + 56);
      v7 = *(_QWORD *)(a1 + 48);
      v6 = *(_OWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 40) = 0;
      *(_QWORD *)(a1 + 48) = 0;
      *(_QWORD *)(a1 + 32) = 0;
      v8 = v2;
      *(_OWORD *)v9 = *(_OWORD *)(a1 + 64);
      v10 = *(_QWORD *)(a1 + 80);
      *(_QWORD *)(a1 + 64) = 0;
      *(_QWORD *)(a1 + 72) = 0;
      *(_QWORD *)(a1 + 80) = 0;
      v11 = 1;
    }
    v12 = 1;
  }
  sub_239616578(0x16u, (__int128 *)__p, a2);
  if (v12)
  {
    if (!v11)
      goto LABEL_11;
    if (SHIBYTE(v10) < 0)
    {
      operator delete(v9[0]);
      if ((SHIBYTE(v7) & 0x80000000) == 0)
      {
LABEL_11:
        if (!v5)
          return;
        goto LABEL_12;
      }
    }
    else if ((SHIBYTE(v7) & 0x80000000) == 0)
    {
      goto LABEL_11;
    }
    operator delete((void *)v6);
    if (!v5)
      return;
LABEL_12:
    if (SHIBYTE(v4) < 0)
      operator delete(__p[0]);
  }
}

void sub_239914D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239523188((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239914D5C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *__p[2];
  uint64_t v4;
  char v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9[2];
  uint64_t v10;
  char v11;
  char v12;

  LOBYTE(__p[0]) = 0;
  v12 = 0;
  if (*(_BYTE *)(a1 + 96))
  {
    v5 = 0;
    if (*(_BYTE *)(a1 + 24))
    {
      *(_OWORD *)__p = *(_OWORD *)a1;
      v4 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      *(_QWORD *)a1 = 0;
      v5 = 1;
    }
    LOBYTE(v6) = 0;
    v11 = 0;
    if (*(_BYTE *)(a1 + 88))
    {
      v2 = *(_QWORD *)(a1 + 56);
      v7 = *(_QWORD *)(a1 + 48);
      v6 = *(_OWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 40) = 0;
      *(_QWORD *)(a1 + 48) = 0;
      *(_QWORD *)(a1 + 32) = 0;
      v8 = v2;
      *(_OWORD *)v9 = *(_OWORD *)(a1 + 64);
      v10 = *(_QWORD *)(a1 + 80);
      *(_QWORD *)(a1 + 64) = 0;
      *(_QWORD *)(a1 + 72) = 0;
      *(_QWORD *)(a1 + 80) = 0;
      v11 = 1;
    }
    v12 = 1;
  }
  sub_239616578(0x66u, (__int128 *)__p, a2);
  if (v12)
  {
    if (!v11)
      goto LABEL_11;
    if (SHIBYTE(v10) < 0)
    {
      operator delete(v9[0]);
      if ((SHIBYTE(v7) & 0x80000000) == 0)
      {
LABEL_11:
        if (!v5)
          return;
        goto LABEL_12;
      }
    }
    else if ((SHIBYTE(v7) & 0x80000000) == 0)
    {
      goto LABEL_11;
    }
    operator delete((void *)v6);
    if (!v5)
      return;
LABEL_12:
    if (SHIBYTE(v4) < 0)
      operator delete(__p[0]);
  }
}

void sub_239914E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239523188((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239914E90(_QWORD *a1, unsigned int *a2)
{
  unsigned __int8 v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t *v6;
  unsigned int v7;
  BOOL v8;
  uint64_t *v9;
  unsigned __int8 v10;
  _QWORD *v11;
  _QWORD *v12;
  __int128 *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v22;
  int v23;
  _QWORD *v24;
  uint64_t *v25;
  int v26;
  int v27;
  void *v28;
  char v29;
  uint64_t v30[2];
  std::string __p;
  unsigned int v32;
  __int128 __dst[120];
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v3 = atomic_load((unsigned __int8 *)qword_25693C898);
  if ((v3 & 1) == 0)
  {
    v22 = a1;
    v23 = __cxa_guard_acquire(qword_25693C898);
    a1 = v22;
    if (v23)
    {
      memcpy(__dst, "800L", sizeof(__dst));
      sub_239915280(&qword_25693C8B8, __dst, 80);
      __cxa_atexit((void (*)(void *))sub_239915258, &qword_25693C8B8, &dword_23940C000);
      __cxa_guard_release(qword_25693C898);
      a1 = v22;
    }
  }
  v4 = qword_25693C8C0;
  if (!qword_25693C8C0)
    goto LABEL_13;
  v5 = *a2;
  v6 = &qword_25693C8C0;
  do
  {
    v7 = *(_DWORD *)(v4 + 32);
    v8 = v7 >= v5;
    if (v7 >= v5)
      v9 = (uint64_t *)v4;
    else
      v9 = (uint64_t *)(v4 + 8);
    if (v8)
      v6 = (uint64_t *)v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == &qword_25693C8C0 || v5 < *((_DWORD *)v6 + 8))
LABEL_13:
    v6 = &qword_25693C8C0;
  v10 = atomic_load((unsigned __int8 *)qword_25693C898);
  if ((v10 & 1) == 0)
  {
    v24 = a1;
    v25 = v6;
    v26 = __cxa_guard_acquire(qword_25693C898);
    v6 = v25;
    v27 = v26;
    a1 = v24;
    if (v27)
    {
      memcpy(__dst, "800L", sizeof(__dst));
      sub_239915280(&qword_25693C8B8, __dst, 80);
      __cxa_atexit((void (*)(void *))sub_239915258, &qword_25693C8B8, &dword_23940C000);
      __cxa_guard_release(qword_25693C898);
      a1 = v24;
      v6 = v25;
    }
  }
  if (v6 == &qword_25693C8C0)
  {
    v32 = *a2;
    v12 = sub_239458500(a1, (uint64_t)"Unknown pixel format '", 22);
    v30[0] = (uint64_t)__dst;
    v30[1] = (uint64_t)&v32;
    v29 = 0;
    LOBYTE(v28) = 0;
    sub_2399160CC(__dst, v30);
    sub_23991552C((uint64_t)__dst, (uint64_t)&v28, &__p);
    v13 = (__int128 *)*((_QWORD *)&__dst[4] + 1);
    if (*((__int128 **)&__dst[4] + 1) == &__dst[3])
    {
      v14 = 4;
      v13 = &__dst[3];
    }
    else
    {
      if (!*((_QWORD *)&__dst[4] + 1))
        goto LABEL_22;
      v14 = 5;
    }
    (*(void (**)(__int128 *))(*(_QWORD *)v13 + 8 * v14))(v13);
LABEL_22:
    v15 = *(_QWORD **)&__dst[2];
    if (*(__int128 **)&__dst[2] == (__int128 *)((char *)__dst + 8))
    {
      v16 = 4;
      v15 = (_QWORD *)__dst + 1;
    }
    else
    {
      if (!*(_QWORD *)&__dst[2])
        goto LABEL_27;
      v16 = 5;
    }
    (*(void (**)(_QWORD *))(*v15 + 8 * v16))(v15);
LABEL_27:
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    v19 = sub_239458500(v12, (uint64_t)p_p, size);
    sub_239458500(v19, (uint64_t)"' (=", 4);
    v20 = (_QWORD *)std::ostream::operator<<();
    v11 = sub_239458500(v20, (uint64_t)")", 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((v29 & 0x80000000) == 0)
        return v11;
    }
    else if ((v29 & 0x80000000) == 0)
    {
      return v11;
    }
    operator delete(v28);
    return v11;
  }
  return sub_239458500(a1, v6[5], v6[6]);
}

void sub_2399151E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(qword_25693C898);
  _Unwind_Resume(a1);
}

void sub_2399151F8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(qword_25693C898);
  _Unwind_Resume(a1);
}

void sub_239915210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24)
{
  sub_23966FFB4(&a24);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_239915258(uint64_t a1)
{
  sub_239421038(a1, *(_QWORD **)(a1 + 8));
  return a1;
}

_QWORD **sub_239915280(_QWORD **a1, __int128 *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;
  __int128 v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t *v13;
  uint64_t *v14;

  a1[1] = 0;
  v4 = (uint64_t *)(a1 + 1);
  a1[2] = 0;
  *a1 = a1 + 1;
  if (a3)
  {
    v6 = 24 * a3;
    do
    {
      v7 = sub_23991537C(a1, v4, &v14, &v13, (unsigned int *)a2);
      if (!*v7)
      {
        v8 = operator new(0x38uLL);
        v9 = *a2;
        v8[6] = *((_QWORD *)a2 + 2);
        *((_OWORD *)v8 + 2) = v9;
        v10 = v14;
        *v8 = 0;
        v8[1] = 0;
        v8[2] = v10;
        *v7 = (uint64_t)v8;
        v11 = (_QWORD *)**a1;
        if (v11)
        {
          *a1 = v11;
          v8 = (_QWORD *)*v7;
        }
        sub_2394213B8(a1[1], v8);
        a1[2] = (_QWORD *)((char *)a1[2] + 1);
      }
      a2 = (__int128 *)((char *)a2 + 24);
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_239915364(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239421038(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_23991537C(_QWORD *a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, unsigned int *a5)
{
  uint64_t *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  BOOL v15;
  unsigned int v16;
  uint64_t v18;
  uint64_t *v19;
  unsigned int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  unsigned int v24;

  v5 = a1 + 1;
  if (a1 + 1 == a2 || (v6 = *a5, v7 = *((_DWORD *)a2 + 8), *a5 < v7))
  {
    v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      v9 = (uint64_t *)*a2;
      do
      {
        v10 = v9;
        v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      v14 = a2;
      do
      {
        v10 = (uint64_t *)v14[2];
        v15 = *v10 == (_QWORD)v14;
        v14 = v10;
      }
      while (v15);
    }
    v16 = *a5;
    if (*((_DWORD *)v10 + 8) < *a5)
      goto LABEL_17;
    v18 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          v19 = (uint64_t *)v18;
          v20 = *(_DWORD *)(v18 + 32);
          if (v16 >= v20)
            break;
          v18 = *v19;
          v5 = v19;
          if (!*v19)
            goto LABEL_25;
        }
        if (v20 >= v16)
          break;
        v5 = v19 + 1;
        v18 = v19[1];
      }
      while (v18);
LABEL_25:
      *a3 = v19;
      return v5;
    }
    else
    {
      *a3 = v5;
      return a1 + 1;
    }
  }
  else if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = a2;
    return (uint64_t *)a4;
  }
  else
  {
    v11 = a2[1];
    if (v11)
    {
      v12 = (uint64_t *)a2[1];
      do
      {
        v13 = v12;
        v12 = (uint64_t *)*v12;
      }
      while (v12);
    }
    else
    {
      v21 = a2;
      do
      {
        v13 = (uint64_t *)v21[2];
        v15 = *v13 == (_QWORD)v21;
        v21 = v13;
      }
      while (!v15);
    }
    if (v13 == v5 || v6 < *((_DWORD *)v13 + 8))
    {
      if (v11)
      {
        *a3 = v13;
        return v13;
      }
      else
      {
        *a3 = a2;
        return a2 + 1;
      }
    }
    else
    {
      v22 = *v5;
      if (*v5)
      {
        do
        {
          while (1)
          {
            v23 = (uint64_t *)v22;
            v24 = *(_DWORD *)(v22 + 32);
            if (v6 >= v24)
              break;
            v22 = *v23;
            v5 = v23;
            if (!*v23)
              goto LABEL_41;
          }
          if (v24 >= v6)
            break;
          v5 = v23 + 1;
          v22 = v23[1];
        }
        while (v22);
LABEL_41:
        *a3 = v23;
        return v5;
      }
      else
      {
        *a3 = v5;
        return a1 + 1;
      }
    }
  }
}

void sub_23991552C(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::string::value_type *v12;
  _BYTE v13[24];
  _BYTE *v14;
  char *v15;
  _BYTE v16[24];
  _BYTE *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v15 = *(char **)a1;
  v6 = v16;
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
  {
    if (v7 == a1 + 8)
    {
      v17 = v16;
      (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v7 + 24))(v7, v16);
    }
    else
    {
      v17 = (_BYTE *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    }
  }
  else
  {
    v17 = 0;
  }
  v12 = *(std::string::value_type **)(a1 + 40);
  v8 = v13;
  v9 = *(_QWORD *)(a1 + 72);
  if (!v9)
    goto LABEL_9;
  if (v9 != a1 + 48)
  {
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
LABEL_9:
    v14 = (_BYTE *)v9;
    goto LABEL_11;
  }
  v14 = v13;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v9 + 24))(v9, v13);
LABEL_11:
  sub_23991573C(&v15, &v12, a2, a3);
  if (v14 == v13)
  {
    v10 = 4;
  }
  else
  {
    if (!v14)
      goto LABEL_16;
    v10 = 5;
    v8 = v14;
  }
  (*(void (**)(_QWORD *))(*v8 + 8 * v10))(v8);
LABEL_16:
  if (v17 == v16)
  {
    v11 = 4;
  }
  else
  {
    if (!v17)
      return;
    v11 = 5;
    v6 = v17;
  }
  (*(void (**)(_QWORD *))(*v6 + 8 * v11))(v6);
}

void sub_2399156AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;

  if (a19 == v19)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
    _Unwind_Resume(exception_object);
  }
  if (!a19)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a19 + 40))(a19);
  _Unwind_Resume(exception_object);
}

void sub_23991573C(char **a1@<X0>, std::string::value_type **a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  _QWORD *v8;
  char **v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  std::string::value_type *v14;
  std::string::size_type *v15;
  std::string::size_type *v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char **v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  std::string::value_type **v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  std::string::size_type v34;
  std::string::value_type **v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  const std::string::value_type *v42;
  std::string::size_type v43;
  uint64_t v44;
  std::string::size_type *v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  const std::string::value_type *v49;
  std::string::size_type v50;
  void **v51;
  std::string::size_type v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *__p[2];
  unsigned __int8 v57;
  std::string::value_type *v58;
  _BYTE v59[24];
  _BYTE *v60;
  char *v61;
  _BYTE v62[24];
  _BYTE *v63;
  char *v64;
  _BYTE v65[24];
  _BYTE *v66;
  std::string::value_type *v67;
  _QWORD v68[3];
  _QWORD *v69;
  char *v70;
  _QWORD v71[3];
  _QWORD *v72;
  std::string::value_type *v73;
  std::string::size_type v74;
  unsigned __int8 v75;
  std::string::size_type *v76;
  char *v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t *v80;
  uint64_t v81;

  v81 = *MEMORY[0x24BDAC8D0];
  v70 = *a1;
  v8 = v71;
  v9 = (char **)a1[4];
  if (v9)
  {
    if (v9 == a1 + 1)
    {
      v72 = v71;
      (*((void (**)(char **, _QWORD *))*v9 + 3))(v9, v71);
    }
    else
    {
      v72 = (_QWORD *)(*((uint64_t (**)(char **))*v9 + 2))(v9);
    }
  }
  else
  {
    v72 = 0;
  }
  v67 = *a2;
  v10 = v68;
  v11 = (uint64_t)a2[4];
  if (!v11)
    goto LABEL_9;
  if ((std::string::value_type **)v11 != a2 + 1)
  {
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
LABEL_9:
    v69 = (_QWORD *)v11;
    goto LABEL_11;
  }
  v69 = v68;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v11 + 24))(v11, v68);
LABEL_11:
  v12 = (uint64_t)v72;
  v77 = v70;
  v13 = &v78;
  if (!v72)
  {
LABEL_14:
    v80 = (uint64_t *)v12;
    goto LABEL_16;
  }
  if (v72 != v71)
  {
    v12 = (*(uint64_t (**)(_QWORD *))(*v72 + 16))(v72);
    goto LABEL_14;
  }
  v80 = &v78;
  (*(void (**)(_QWORD *, uint64_t *))(v71[0] + 24))(v71, &v78);
LABEL_16:
  v14 = v67;
  v73 = v67;
  if (!v69)
  {
    v76 = 0;
    v17 = v77;
    goto LABEL_22;
  }
  v15 = &v74;
  if (v69 != v68)
  {
    v16 = (std::string::size_type *)(*(uint64_t (**)(_QWORD *))(*v69 + 16))(v69);
    v76 = v16;
    v17 = v77;
    v14 = v73;
    if (v16 != &v74)
      goto LABEL_19;
LABEL_26:
    v18 = 4;
LABEL_27:
    (*(void (**)(std::string::size_type *))(*v15 + 8 * v18))(v15);
    v19 = v80;
    if (v80 == &v78)
      goto LABEL_28;
    goto LABEL_23;
  }
  v76 = &v74;
  (*(void (**)(_QWORD *, std::string::size_type *))(v68[0] + 24))(v68, &v74);
  v16 = v76;
  v17 = v77;
  v14 = v73;
  if (v76 == &v74)
    goto LABEL_26;
LABEL_19:
  if (v16)
  {
    v18 = 5;
    v15 = v16;
    goto LABEL_27;
  }
LABEL_22:
  v19 = v80;
  if (v80 == &v78)
  {
LABEL_28:
    v20 = 4;
    goto LABEL_29;
  }
LABEL_23:
  if (!v19)
    goto LABEL_30;
  v20 = 5;
  v13 = v19;
LABEL_29:
  (*(void (**)(uint64_t *))(*v13 + 8 * v20))(v13);
LABEL_30:
  if (v69 == v68)
  {
    v21 = 4;
  }
  else
  {
    if (!v69)
      goto LABEL_35;
    v21 = 5;
    v10 = v69;
  }
  (*(void (**)(_QWORD *))(*v10 + 8 * v21))(v10);
LABEL_35:
  v22 = v17 - v14;
  if (v72 == v71)
  {
    v23 = 4;
  }
  else
  {
    if (!v72)
      goto LABEL_40;
    v23 = 5;
    v8 = v72;
  }
  (*(void (**)(_QWORD *))(*v8 + 8 * v23))(v8);
LABEL_40:
  if (v22 <= 1)
    v24 = 1;
  else
    v24 = v17 - v14;
  if (*(char *)(a3 + 23) >= 0)
    v25 = *(unsigned __int8 *)(a3 + 23);
  else
    v25 = *(_QWORD *)(a3 + 8);
  v64 = *a1;
  v26 = (char **)a1[4];
  if (v26)
  {
    if (v26 == a1 + 1)
    {
      v66 = v65;
      (*((void (**)(char **, _BYTE *))a1[1] + 3))(a1 + 1, v65);
    }
    else
    {
      v66 = (_BYTE *)(*((uint64_t (**)(char **))*v26 + 2))(v26);
    }
  }
  else
  {
    v66 = 0;
  }
  v61 = *a2;
  v27 = v62;
  v28 = (uint64_t)a2[4];
  if (!v28)
    goto LABEL_54;
  if ((std::string::value_type **)v28 != a2 + 1)
  {
    v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v28 + 16))(v28);
LABEL_54:
    v63 = (_BYTE *)v28;
    goto LABEL_56;
  }
  v63 = v62;
  (*((void (**)(std::string::value_type **, _BYTE *))a2[1] + 3))(a2 + 1, v62);
LABEL_56:
  v29 = v22;
  v30 = a2;
  v31 = v64;
  if (v64 == v61)
  {
    v32 = 0;
  }
  else
  {
    v32 = 0;
    do
    {
      if (!v66)
        sub_2394172E0();
      (*(void (**)(char **__return_ptr, _BYTE *, char *))(*(_QWORD *)v66 + 48))(&v77, v66, v31 - 1);
      if ((v79 & 0x80u) == 0)
        v33 = v79;
      else
        v33 = v78;
      if ((char)v79 < 0)
        operator delete(v77);
      v32 += v33;
      v31 = v64 - 1;
      v64 = v31;
    }
    while (v31 != v61);
  }
  v34 = v32 + v25 * (v24 - 1);
  if (v63 == v62)
  {
    v38 = 4;
    v35 = v30;
    v36 = v29;
    v37 = v65;
  }
  else
  {
    v35 = v30;
    v36 = v29;
    v37 = v65;
    if (!v63)
      goto LABEL_71;
    v38 = 5;
    v27 = v63;
  }
  (*(void (**)(_QWORD *))(*v27 + 8 * v38))(v27);
LABEL_71:
  if (v66 == v65)
  {
    v39 = 4;
  }
  else
  {
    if (!v66)
      goto LABEL_76;
    v39 = 5;
    v37 = v66;
  }
  (*(void (**)(_QWORD *))(*v37 + 8 * v39))(v37);
LABEL_76:
  a4->__r_.__value_.__r.__words[0] = 0;
  a4->__r_.__value_.__l.__size_ = 0;
  a4->__r_.__value_.__r.__words[2] = 0;
  std::string::reserve(a4, v34);
  v77 = *a1;
  v40 = &v78;
  v41 = (uint64_t)a1[4];
  if (!v41)
  {
LABEL_79:
    v80 = (uint64_t *)v41;
    goto LABEL_81;
  }
  if ((char **)v41 != a1 + 1)
  {
    v41 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v41 + 16))(v41);
    goto LABEL_79;
  }
  v80 = &v78;
  (*((void (**)(char **, uint64_t *))a1[1] + 3))(a1 + 1, &v78);
LABEL_81:
  if (v36 < 1)
    goto LABEL_131;
  if (!v80)
    sub_2394172E0();
  (*(void (**)(std::string::value_type **__return_ptr, uint64_t *, char *))(*v80 + 48))(&v73, v80, v77 - 1);
  if ((v75 & 0x80u) == 0)
    v42 = (const std::string::value_type *)&v73;
  else
    v42 = v73;
  if ((v75 & 0x80u) == 0)
    v43 = v75;
  else
    v43 = v74;
  std::string::append(a4, v42, v43);
  if ((char)v75 < 0)
  {
    operator delete(v73);
    if ((unint64_t)v36 < 2)
      goto LABEL_131;
  }
  else if ((unint64_t)v36 < 2)
  {
    goto LABEL_131;
  }
  v44 = (uint64_t)v80;
  v73 = --v77;
  v45 = &v74;
  if (!v80)
    goto LABEL_96;
  if (v80 != &v78)
  {
    v44 = (*(uint64_t (**)(void))(*v80 + 16))();
LABEL_96:
    v76 = (std::string::size_type *)v44;
    goto LABEL_98;
  }
  v76 = &v74;
  (*(void (**)(uint64_t *, std::string::size_type *))(v78 + 24))(&v78, &v74);
LABEL_98:
  v58 = *v35;
  v46 = v59;
  v47 = (uint64_t)v35[4];
  if (!v47)
  {
LABEL_101:
    v60 = (_BYTE *)v47;
    goto LABEL_103;
  }
  if ((std::string::value_type **)v47 != v35 + 1)
  {
    v47 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v47 + 16))(v47);
    goto LABEL_101;
  }
  v60 = v59;
  (*((void (**)(std::string::value_type **, _BYTE *))v35[1] + 3))(v35 + 1, v59);
LABEL_103:
  while (v73 != v58)
  {
    v48 = *(char *)(a3 + 23);
    if (v48 >= 0)
      v49 = (const std::string::value_type *)a3;
    else
      v49 = *(const std::string::value_type **)a3;
    if (v48 >= 0)
      v50 = *(unsigned __int8 *)(a3 + 23);
    else
      v50 = *(_QWORD *)(a3 + 8);
    std::string::append(a4, v49, v50);
    if (!v76)
      sub_2394172E0();
    (*(void (**)(void **__return_ptr, std::string::size_type *, std::string::value_type *))(*v76 + 48))(__p, v76, v73 - 1);
    if ((v57 & 0x80u) == 0)
      v51 = __p;
    else
      v51 = (void **)__p[0];
    if ((v57 & 0x80u) == 0)
      v52 = v57;
    else
      v52 = (std::string::size_type)__p[1];
    std::string::append(a4, (const std::string::value_type *)v51, v52);
    if ((char)v57 < 0)
      operator delete(__p[0]);
    --v73;
  }
  if (v60 == v59)
  {
    v53 = 4;
    goto LABEL_125;
  }
  if (v60)
  {
    v53 = 5;
    v46 = v60;
LABEL_125:
    (*(void (**)(_QWORD *))(*v46 + 8 * v53))(v46);
  }
  if (v76 == &v74)
  {
    v54 = 4;
  }
  else
  {
    if (!v76)
      goto LABEL_131;
    v54 = 5;
    v45 = v76;
  }
  (*(void (**)(std::string::size_type *))(*v45 + 8 * v54))(v45);
LABEL_131:
  if (v80 == &v78)
  {
    v55 = 4;
  }
  else
  {
    if (!v80)
      return;
    v55 = 5;
    v40 = v80;
  }
  (*(void (**)(uint64_t *))(*v40 + 8 * v55))(v40);
}

void sub_239915E68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;

  v46 = *(_QWORD **)(v44 - 144);
  if (v46 == v42)
  {
    v47 = 4;
  }
  else
  {
    if (!v46)
      goto LABEL_6;
    v47 = 5;
    v42 = *(_QWORD **)(v44 - 144);
  }
  (*(void (**)(_QWORD *))(*v42 + 8 * v47))(v42);
LABEL_6:
  v48 = *(_QWORD **)(v44 - 104);
  if (v48 == v43)
  {
    v49 = 4;
  }
  else
  {
    if (!v48)
      goto LABEL_11;
    v49 = 5;
    v43 = *(_QWORD **)(v44 - 104);
  }
  (*(void (**)(_QWORD *))(*v43 + 8 * v49))(v43);
LABEL_11:
  if (*(char *)(v41 + 23) < 0)
  {
    operator delete(*(void **)v41);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2399160CC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE *v17;
  uint64_t v18;
  _BYTE v19[24];
  _BYTE *v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD *v23;
  uint64_t v24;
  _QWORD v25[3];
  _QWORD *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v3 = a2[1];
  v24 = *a2;
  v25[0] = &off_250AF0018;
  v26 = v25;
  v21 = v3;
  v22[0] = &off_250AF0018;
  v23 = v22;
  sub_2399162CC(&v24, &v21, &v15);
  v4 = v23;
  if (v23 == v22)
  {
    v5 = 4;
    v4 = v22;
  }
  else
  {
    if (!v23)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = v26;
  if (v26 == v25)
  {
    v7 = 4;
    v6 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  v8 = v17;
  *a1 = v15;
  if (v8)
  {
    if (v8 == v16)
    {
      a1[4] = a1 + 1;
      (*(void (**)(_BYTE *))(*(_QWORD *)v8 + 24))(v8);
    }
    else
    {
      a1[4] = v8;
      v17 = 0;
    }
  }
  else
  {
    a1[4] = 0;
  }
  v9 = v20;
  a1[5] = v18;
  if (v9)
  {
    if (v9 == v19)
    {
      a1[9] = a1 + 6;
      (*(void (**)(_BYTE *))(*(_QWORD *)v9 + 24))(v9);
    }
    else
    {
      a1[9] = v9;
      v20 = 0;
    }
  }
  else
  {
    a1[9] = 0;
  }
  v10 = v20;
  if (v20 == v19)
  {
    v11 = 4;
    v10 = v19;
  }
  else
  {
    if (!v20)
      goto LABEL_26;
    v11 = 5;
  }
  (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_26:
  v12 = v17;
  if (v17 == v16)
  {
    v13 = 4;
    v12 = v16;
    goto LABEL_30;
  }
  if (v17)
  {
    v13 = 5;
LABEL_30:
    (*(void (**)(void))(*v12 + 8 * v13))();
  }
  return a1;
}

void sub_2399162BC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

uint64_t sub_2399162CC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v6;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD *v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v19 = *a1;
  v6 = v20;
  v8 = a1 + 4;
  v7 = (uint64_t *)a1[4];
  if (v7)
  {
    if (v7 == a1 + 1)
    {
      v21 = v20;
      (*(void (**)(uint64_t *, _QWORD *))(*v7 + 24))(v7, v20);
    }
    else
    {
      v21 = v7;
      *v8 = 0;
    }
  }
  else
  {
    v21 = 0;
  }
  v16 = *a2;
  v9 = v17;
  result = a2[4];
  if (result)
  {
    if ((uint64_t *)result == a2 + 1)
    {
      v18 = v17;
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 24))(result, v17);
    }
    else
    {
      v18 = (_QWORD *)a2[4];
      a2[4] = 0;
    }
  }
  else
  {
    v18 = 0;
  }
  v11 = v21;
  *a3 = v19;
  v12 = a3 + 1;
  if (v11)
  {
    if (v11 == v20)
    {
      a3[4] = v12;
      result = (*(uint64_t (**)(_QWORD *))(v20[0] + 24))(v20);
    }
    else
    {
      a3[4] = v11;
      v21 = 0;
    }
  }
  else
  {
    a3[4] = 0;
  }
  v13 = v18;
  a3[5] = v16;
  if (v13)
  {
    if (v13 == v17)
    {
      a3[9] = a3 + 6;
      result = (*(uint64_t (**)(_QWORD *))(v17[0] + 24))(v17);
    }
    else
    {
      a3[9] = v13;
      v18 = 0;
    }
  }
  else
  {
    a3[9] = 0;
  }
  if (v18 == v17)
  {
    v14 = 4;
  }
  else
  {
    if (!v18)
      goto LABEL_26;
    v14 = 5;
    v9 = v18;
  }
  result = (*(uint64_t (**)(_QWORD *, _QWORD *))(*v9 + 8 * v14))(v9, v12);
LABEL_26:
  if (v21 == v20)
  {
    v15 = 4;
  }
  else
  {
    if (!v21)
      return result;
    v15 = 5;
    v6 = v21;
  }
  return (*(uint64_t (**)(uint64_t *, _QWORD *))(*v6 + 8 * v15))(v6, v12);
}

void sub_2399164CC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_2399164F0()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239916504()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF0018;
  return result;
}

void sub_239916528(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF0018;
}

void sub_239916540(unsigned __int8 *a1@<X1>, std::string *a2@<X8>)
{
  sub_2399165C0(a1, a2);
}

uint64_t sub_239916548(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn2op8ToStringMUlDpOT_E_E")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3esn2op8ToStringMUlDpOT_E_E" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn2op8ToStringMUlDpOT_E_E"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn2op8ToStringMUlDpOT_E_E" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2399165B4()
{
  return &unk_250AE1740;
}

void sub_2399165C0(unsigned __int8 *a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v3;
  char *v4;
  int64x2_t v5;
  int8x16_t v6;
  char *v7;
  void **v8;
  void *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  void *__p[2];
  char v14;

  v10 = 0;
  v11 = 0;
  v12 = 0;
  v3 = *a1;
  v14 = 1;
  LOWORD(__p[0]) = v3;
  v4 = sub_23941ACDC(&v10, (uint64_t)__p);
  v11 = v4;
  if (v14 < 0)
  {
    operator delete(__p[0]);
    v4 = v11;
  }
  v14 = 0;
  LOBYTE(__p[0]) = 0;
  sub_23941AE44((uint64_t)v10, (uint64_t)v4, (uint64_t)__p, a2, v5, v6);
  if (v14 < 0)
    operator delete(__p[0]);
  v7 = (char *)v10;
  if (v10)
  {
    v8 = (void **)v11;
    v9 = v10;
    if (v11 != v10)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != (void **)v7);
      v9 = v10;
    }
    v11 = v7;
    operator delete(v9);
  }
}

void sub_239916698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  sub_23941A260((void **)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_2399166C0(uint64_t *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 24) = a3;
  *(_DWORD *)((char *)a1 + *(_QWORD *)(v3 - 24) + 8) = *(_DWORD *)((_BYTE *)a1 + *(_QWORD *)(v3 - 24) + 8) & 0xFFFFFF4F | 0x80;
  v4 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v5 = v4;
  }
  return sub_239458500(a1, a2, v5);
}

uint64_t sub_239916708(uint64_t result, unint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  int v7;

  v5 = 3;
  if (a2 > 3)
    v5 = a2;
  if (!a3)
    v5 = 16;
  *(_QWORD *)result = v5;
  if ((a4 & 0xFF00000000) != 0)
    v6 = a4;
  else
    v6 = 8;
  if ((a5 & 0xFF00000000) != 0)
    v7 = a5;
  else
    v7 = 16;
  *(_DWORD *)(result + 8) = v6;
  *(_DWORD *)(result + 12) = v7;
  *(_QWORD *)(result + 16) = v5 - 2;
  return result;
}

double sub_239916748@<D0>(unsigned int a1@<W0>, uint64_t a2@<X2>, unsigned int a3@<W3>, unsigned int a4@<W4>, _QWORD *a5@<X8>)
{
  unsigned int v6;
  _QWORD *v7;
  double result;
  _QWORD *v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v14;
  unint64_t v15;
  BOOL v17;
  _QWORD *v18;
  _OWORD *v19;

  if (a1 == 2)
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
LABEL_5:
    v9 = operator new(0x10uLL);
    a5[2] = v9 + 2;
    *v9 = " ";
    v9[1] = "\n";
    *a5 = v9;
    a5[1] = v9 + 2;
    return result;
  }
  v6 = a1 - 1;
  if (a1 == 1)
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
    v7 = operator new(8uLL);
    *a5 = v7;
    *v7++ = " ";
    a5[1] = v7;
    a5[2] = v7;
    return result;
  }
  if (a1)
  {
    v10 = 0;
    v11 = 1;
    while (1)
    {
      v12 = *(_DWORD *)(a2 + 4 * v10);
      v11 *= v12;
      if (v12 > a3 || v11 > a4)
        break;
      if (a1 == (_DWORD)++v10)
        goto LABEL_16;
    }
    v6 = v10;
  }
  else
  {
    v6 = -1;
  }
LABEL_16:
  if (a1 >= 4)
    LODWORD(v14) = 4;
  else
    LODWORD(v14) = a1;
  if (v14 <= 2)
    v14 = 2;
  else
    v14 = v14;
  v15 = v14 - 2;
  if (v15 >= 2 && v6 >= 3)
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
    v19 = operator new(0x20uLL);
    a5[2] = v19 + 2;
    *(_QWORD *)&result = 0x239F8F822;
    *v19 = xmmword_250AF0088;
    v19[1] = *(_OWORD *)&off_250AF0098;
    *a5 = v19;
    a5[1] = v19 + 2;
  }
  else
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
    if (v15)
      v17 = v6 >= 2;
    else
      v17 = 0;
    if (!v17)
      goto LABEL_5;
    v18 = operator new(0x18uLL);
    a5[2] = v18 + 3;
    *(_QWORD *)&result = 0x239F8F822;
    *(_OWORD *)v18 = xmmword_250AF00A8;
    v18[2] = "\n";
    *a5 = v18;
    a5[1] = v18 + 3;
  }
  return result;
}

_QWORD *sub_2399168C0(_QWORD *a1, size_t size, size_t alignment)
{
  void *memptr;

  *a1 = size;
  a1[1] = 0;
  a1[2] = alignment;
  if (size)
  {
    memptr = 0;
    if (malloc_type_posix_memalign(&memptr, alignment, size, 0xBAA47A55uLL))
      sub_239EBF37C();
    a1[1] = memptr;
  }
  return a1;
}

__n128 sub_239916924(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  return result;
}

_QWORD *sub_23991693C(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = (void *)a1[1];
  if (v4)
    free(v4);
  v5 = a2[2];
  a1[1] = a2[1];
  a1[2] = v5;
  *a2 = 0;
  a2[1] = 0;
  return a1;
}

uint64_t sub_239916980(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  if (v2)
    free(v2);
  *(_QWORD *)(a1 + 8) = 0;
  return a1;
}

uint64_t sub_2399169B0(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_2399169B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD v24[3];
  _QWORD *v25;
  _BYTE v26[24];
  _BYTE *v27;
  _BYTE v28[24];
  _BYTE *v29;
  _BYTE v30[24];
  _BYTE *v31;
  _BYTE v32[24];
  _BYTE *v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a5 + 24))
    sub_23964B158();
  v10 = *(_QWORD *)(a5 + 8);
  v11 = *(_QWORD *)(a5 + 16);
  sub_239586FCC(v24, a6);
  v12 = sub_239971A48(a1, a2, a3, a4, v10, v11, v24);
  v13 = v33;
  if (v33 == v32)
  {
    v14 = 4;
    v13 = v32;
  }
  else
  {
    if (!v33)
      goto LABEL_7;
    v14 = 5;
  }
  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_7:
  v15 = v31;
  if (v31 == v30)
  {
    v16 = 4;
    v15 = v30;
  }
  else
  {
    if (!v31)
      goto LABEL_12;
    v16 = 5;
  }
  (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_12:
  v17 = v29;
  if (v29 == v28)
  {
    v18 = 4;
    v17 = v28;
  }
  else
  {
    if (!v29)
      goto LABEL_17;
    v18 = 5;
  }
  (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_17:
  v19 = v27;
  if (v27 == v26)
  {
    v20 = 4;
    v19 = v26;
  }
  else
  {
    if (!v27)
      goto LABEL_22;
    v20 = 5;
  }
  (*(void (**)(void))(*v19 + 8 * v20))();
LABEL_22:
  v21 = v25;
  if (v25 == v24)
  {
    v22 = 4;
    v21 = v24;
    goto LABEL_26;
  }
  if (v25)
  {
    v22 = 5;
LABEL_26:
    (*(void (**)(void))(*v21 + 8 * v22))();
  }
  return v12;
}

void sub_239916B84(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,__int128 a36,__int128 a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,uint64_t a43,int32x4_t a44,__int128 a45,__int128 a46,__int128 a47,__int128 a48,__int128 a49,int a50,uint64_t a51,int32x4_t a52,__int128 a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,__int128 a58,__int128 a59,__int128 a60,__int128 a61)
{
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  const std::__fs::filesystem::path *v70;
  __int128 v71;
  int v72;
  _BOOL4 v73;
  std::__fs::filesystem::path::__string_view v74;

  sub_239584310((_QWORD *)(v67 - 248));
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    if (*(_DWORD *)(v66 + 24) == 1)
    {
      v70 = *(const std::__fs::filesystem::path **)(v66 + 8);
      a40 = 0;
      a41 = 0;
      a36 = 0u;
      a37 = 0u;
      a38 = 0;
      *(_QWORD *)&v71 = 0x80000000800000;
      *((_QWORD *)&v71 + 1) = 0x80000000800000;
      a44 = vdupq_n_s32(0x7F7FFFFFu);
      a45 = v71;
      a46 = 0u;
      a47 = 0u;
      a48 = 0u;
      a49 = 0u;
      a42 = 0;
      a50 = 0;
      a52 = a44;
      a53 = v71;
      a55 = 0;
      a56 = 0;
      a54 = 0;
      *(__int128 *)((char *)&a61 + 12) = 0u;
      a60 = 0u;
      a61 = 0u;
      a58 = 0u;
      a59 = 0u;
      a57 = 0;
      LODWORD(STACK[0x240]) = 0;
      *(_OWORD *)&STACK[0x220] = 0u;
      *(_OWORD *)&STACK[0x230] = 0u;
      *(_OWORD *)&STACK[0x210] = xmmword_239EC7340;
      sub_239586FCC(&a16, v65);
      v72 = sub_239971A48(v64, v63, v62, v61, (uint64_t)&a36, 1u, &a16);
      sub_239584310(&a16);
      sub_239916D44((std::string *)&__p, (std::string *)"");
      v74.__data_ = (const std::string_view::value_type *)&__p;
      v73 = sub_239916D0C(v70, v74);
      if (a15 < 0)
        operator delete(__p);
      if ((v73 & v72) == 1)
        sub_2399562FC();
      __cxa_end_catch();
      JUMPOUT(0x239916B3CLL);
    }
    sub_23964B158();
  }
  _Unwind_Resume(a1);
}

void sub_239916CCC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239916CF4(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x239916CFCLL);
  sub_239416A48(a1);
}

BOOL sub_239916D0C(const std::__fs::filesystem::path *a1, std::__fs::filesystem::path::__string_view a2)
{
  std::basic_string_view<_CharT, _Traits>::size_type v2;

  v2 = *((_QWORD *)a2.__data_ + 1);
  if (*((char *)a2.__data_ + 23) >= 0)
  {
    a2.__size_ = *((unsigned __int8 *)a2.__data_ + 23);
  }
  else
  {
    a2.__data_ = *(const std::string_view::value_type **)a2.__data_;
    a2.__size_ = v2;
  }
  return std::__fs::filesystem::path::__compare(a1, a2) != 0;
}

std::string *sub_239916D44(std::string *this, std::string *a2)
{
  std::string *v3;
  int v4;

  *(_OWORD *)&this->__r_.__value_.__l.__data_ = 0uLL;
  this->__r_.__value_.__r.__words[2] = 0;
  v3 = (std::string *)((char *)a2 - 1);
  do
  {
    v4 = v3->__r_.__value_.__s.__data_[1];
    v3 = (std::string *)((char *)v3 + 1);
  }
  while (v4);
  sub_23948900C(this, a2, v3);
  return this;
}

void sub_239916D80(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

vm_address_t sub_239916D9C(uint64_t a1)
{
  vm_size_t v1;
  kern_return_t v2;
  vm_address_t result;
  BOOL v4;
  _QWORD *exception;
  std::bad_alloc v6;
  vm_address_t address;

  address = 0;
  v1 = sub_2399D1D84(4 * a1);
  v2 = vm_allocate(*MEMORY[0x24BDAEC58], &address, v1, 1);
  result = address;
  if (v2)
    v4 = 1;
  else
    v4 = address == 0;
  if (v4)
  {
    std::bad_alloc::bad_alloc(&v6);
    exception = __cxa_allocate_exception(8uLL);
    *exception = MEMORY[0x24BEDB8E8] + 16;
    __cxa_throw(exception, (struct type_info *)&unk_250ADB310, (void (*)(void *))MEMORY[0x24BEDB670]);
  }
  return result;
}

void sub_239916E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_alloc a9)
{
  std::bad_alloc::~bad_alloc(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239916E44(unint64_t *a1, float *a2, unint64_t *a3, uint64_t *a4)
{
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  double v13;
  float v14;
  BOOL v15;
  float v16;
  unint64_t v17;
  unint64_t v18;
  float v20;
  float v21;
  unint64_t v22;
  float v23;

  v8 = *a3;
  if (*a3 <= 0x4000)
  {
    if (v8 > 0xF)
    {
      if ((v8 & (v8 - 1)) != 0)
        goto LABEL_25;
      goto LABEL_5;
    }
    v8 = 16;
  }
  else
  {
    v8 = 0x4000;
  }
  *a3 = v8;
  if ((v8 & (v8 - 1)) != 0)
  {
LABEL_25:
    v8 = (1 << vcvtas_u32_f32(log2f((float)v8)));
    *a3 = v8;
    v9 = *a4;
    if (!*a4)
      goto LABEL_26;
LABEL_6:
    v10 = *a1;
    v11 = v9 == 1;
    if (v9 != 1 && (float)v10 * 0.7999 < (double)(v8 * (v9 - 1) * v8))
    {
      v12 = v9 - 2;
      do
      {
        *a4 = v12 + 1;
        v8 = *a3;
        v10 = *a1;
        v11 = v12 == 0;
        if (!v12)
          break;
        v13 = (double)(v8 * v12-- * v8);
      }
      while ((float)v10 * 0.7999 < v13);
    }
    if (v11)
    {
      v14 = *a2;
      v15 = *a2 > 0.0001 && v14 < 0.65;
      v16 = v14 / 0.65;
      if (!v15)
        v16 = 1.0;
      if (v8 >= 0x11)
      {
        v17 = (unint64_t)(float)(fmaxf(fminf(v16, 1.0), 0.1) * (float)(3 * v10));
        if (v8 * v8 > v17)
        {
          do
          {
            v18 = v8;
            v8 >>= 1;
          }
          while (v18 >= 0x22 && v8 * v8 > v17);
          *a3 = v8;
        }
      }
    }
    return 1;
  }
LABEL_5:
  v9 = *a4;
  if (*a4)
    goto LABEL_6;
LABEL_26:
  v20 = (float)*a1 * 0.75;
  v21 = (float)(v8 * v8);
  if (v8 >= 0x11 && v20 <= (float)(v21 * 0.50001))
  {
    do
    {
      v22 = v8;
      v8 >>= 1;
      v21 = (float)(v8 * v8);
    }
    while (v22 >= 0x22 && v20 <= (float)(v21 * 0.50001));
    *a3 = v8;
  }
  v23 = v20 / v21;
  *a4 = (unint64_t)v23;
  if ((unint64_t)v23)
  {
    if ((unint64_t)v23 == 1 && v23 > 1.6)
    {
      *a4 = 2;
      return 1;
    }
    return 1;
  }
  *a4 = 1;
  return 1;
}

uint64_t sub_2399170A8(uint64_t *a1, float *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  uint64_t *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v25;

  v25 = 0;
  v5 = *a1;
  v6 = a1[1];
  if (*a1 == v6)
    goto LABEL_30;
  do
  {
    v10 = *(uint64_t **)(v5 + 32);
    if (v10)
    {
      v11 = v5 + 32;
      v12 = *(_QWORD *)(v5 + 32);
      do
      {
        v13 = *(_DWORD *)(v12 + 28);
        v14 = v13 < 1;
        if (v13 >= 1)
          v15 = (uint64_t *)v12;
        else
          v15 = (uint64_t *)(v12 + 8);
        if (!v14)
          v11 = v12;
        v12 = *v15;
      }
      while (*v15);
      if (v11 != v5 + 32 && *(int *)(v11 + 28) <= 1)
      {
        while (1)
        {
          while (1)
          {
            v16 = *((_DWORD *)v10 + 7);
            if (v16 < 2)
              break;
            v10 = (uint64_t *)*v10;
            if (!v10)
              goto LABEL_36;
          }
          if (v16 == 1)
            break;
          v10 = (uint64_t *)v10[1];
          if (!v10)
LABEL_36:
            sub_23941D898("map::at:  key not found");
        }
        v17 = a1[3] + 48 * *((unsigned __int16 *)v10 + 16);
        v18 = *(_QWORD *)(v17 + 8);
        v19 = *(std::__shared_weak_count **)(v17 + 16);
        if (v19)
        {
          p_shared_owners = (unint64_t *)&v19->__shared_owners_;
          do
            v21 = __ldxr(p_shared_owners);
          while (__stxr(v21 + 1, p_shared_owners));
          v25 += (*(_DWORD *)(v18 + 8) * *(_DWORD *)(v18 + 4));
          do
            v22 = __ldaxr(p_shared_owners);
          while (__stlxr(v22 - 1, p_shared_owners));
          if (!v22)
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
          }
        }
        else
        {
          v25 += (*(_DWORD *)(v18 + 8) * *(_DWORD *)(v18 + 4));
        }
      }
    }
    v5 += 48;
  }
  while (v5 != v6);
  if (!v25)
  {
LABEL_30:
    if (*a3 <= 0x4000)
    {
      if (*a3 > 0xF)
        return 1;
      v23 = 16;
    }
    else
    {
      v23 = 0x4000;
    }
    *a3 = v23;
    return 1;
  }
  sub_239916E44(&v25, a2, a3, a4);
  return 1;
}

uint64_t sub_239917258(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, char a10, _QWORD *a11, char a12, const std::__fs::filesystem::path *a13)
{
  std::chrono::system_clock::time_point v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  size_t v22;
  size_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t v33;
  float32x4_t v34;
  void **v35;
  char *v36;
  size_t v37;
  size_t v38;
  _BYTE *v39;
  _BOOL4 v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char **v54;
  uint64_t *v55;
  unsigned int v56;
  void **v57;
  unint64_t v58;
  __int128 v59;
  uint64_t *v60;
  uint64_t **v61;
  uint64_t **v62;
  int v63;
  _DWORD *v64;
  uint64_t *v65;
  _BYTE *v66;
  unint64_t v67;
  int v68;
  uint64_t v69;
  unint64_t *v70;
  unint64_t v71;
  _BYTE *v72;
  __int128 v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t **v78;
  uint64_t **v79;
  int v80;
  _DWORD *v81;
  uint64_t *v82;
  unint64_t v83;
  int v84;
  uint64_t v85;
  unint64_t *v86;
  unint64_t v87;
  _BYTE *v88;
  __int128 v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t **v94;
  uint64_t **v95;
  int v96;
  _DWORD *v97;
  uint64_t *v98;
  unint64_t v99;
  int v100;
  uint64_t v101;
  unint64_t *v102;
  unint64_t v103;
  _BYTE *v104;
  __int128 v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  uint64_t *v109;
  uint64_t **v110;
  uint64_t **v111;
  int v112;
  _DWORD *v113;
  uint64_t *v114;
  unint64_t v115;
  int v116;
  uint64_t v117;
  unint64_t *v118;
  unint64_t v119;
  _BYTE *v120;
  __int128 v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  uint64_t *v125;
  uint64_t **v126;
  uint64_t **v127;
  int v128;
  _DWORD *v129;
  uint64_t *v130;
  unint64_t v131;
  int v132;
  uint64_t v133;
  unint64_t *v134;
  unint64_t v135;
  _BYTE *v136;
  __int128 v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  uint64_t *v141;
  uint64_t **v142;
  uint64_t **v143;
  int v144;
  _DWORD *v145;
  uint64_t *v146;
  unint64_t v147;
  int v148;
  uint64_t v149;
  unint64_t *v150;
  unint64_t v151;
  _BYTE *v152;
  __int128 v153;
  std::__shared_weak_count *v154;
  unint64_t *v155;
  unint64_t v156;
  uint64_t *v157;
  uint64_t **v158;
  uint64_t **v159;
  int v160;
  _DWORD *v161;
  uint64_t *v162;
  unint64_t v163;
  int v164;
  uint64_t v165;
  unint64_t *v166;
  unint64_t v167;
  _BYTE *v168;
  __int128 v169;
  std::__shared_weak_count *v170;
  unint64_t *v171;
  unint64_t v172;
  uint64_t *v173;
  uint64_t **v174;
  uint64_t **v175;
  int v176;
  _DWORD *v177;
  uint64_t *v178;
  unint64_t v179;
  int v180;
  uint64_t v181;
  unint64_t *v182;
  unint64_t v183;
  _BYTE *v184;
  __int128 v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  uint64_t *v189;
  uint64_t **v190;
  uint64_t **v191;
  int v192;
  _DWORD *v193;
  uint64_t *v194;
  unint64_t v195;
  int v196;
  uint64_t v197;
  unint64_t *v198;
  unint64_t v199;
  _BYTE *v200;
  __int128 v201;
  std::__shared_weak_count *v202;
  unint64_t *v203;
  unint64_t v204;
  float v205;
  uint64_t v206;
  int v207;
  __int128 v208;
  _BYTE *v209;
  char v210;
  float32x4_t v211;
  float32x4_t v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  _QWORD *v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t *v225;
  std::chrono::system_clock::time_point v226;
  std::chrono::system_clock::time_point v227;
  unsigned int v228;
  unint64_t v229;
  unint64_t v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  unint64_t v234;
  char *v235;
  uint64_t v236;
  char *v237;
  int v238;
  uint64_t v239;
  unsigned int v240;
  unsigned int v241;
  uint64_t v242;
  _QWORD *v243;
  _QWORD *v244;
  char *v245;
  unsigned int v246;
  int v247;
  uint64_t v248;
  unsigned int v249;
  uint64_t v250;
  void *v251;
  void *v252;
  uint64_t v253;
  uint64_t **v254;
  _BOOL4 v255;
  _QWORD *v256;
  uint64_t v257;
  std::chrono::system_clock::time_point v258;
  std::chrono::system_clock::time_point v259;
  float v260;
  float v261;
  uint64_t i;
  char *v263;
  unsigned int v264;
  char *v265;
  int v266;
  uint64_t v267;
  uint64_t *v268;
  unsigned int v269;
  uint64_t v270;
  uint64_t v271;
  int64x2_t v272;
  unint64_t v273;
  _QWORD *v274;
  unint64_t v275;
  _OWORD *v276;
  uint64_t v277;
  double v278;
  int v279;
  double v280;
  int v281;
  uint64_t v282;
  _BOOL4 v283;
  int8x16_t v284;
  int8x16_t v285;
  int8x16_t v286;
  int8x16_t v287;
  char *v288;
  uint64_t v289;
  int8x16_t *v290;
  uint64_t v291;
  uint64_t v292;
  int64x2_t v293;
  int64x2_t v294;
  int8x16_t *v295;
  int64x2_t v296;
  uint64_t v297;
  int64x2_t v298;
  int64x2_t v299;
  int64x2_t v300;
  int64x2_t v301;
  int64x2_t v302;
  int64x2_t v303;
  int64x2_t v304;
  int64x2_t v305;
  int64x2_t v306;
  int64x2_t v307;
  int64x2_t v308;
  int64x2_t v309;
  int64x2_t v310;
  int8x16_t v311;
  uint32x4_t v312;
  uint32x4_t v313;
  uint32x4_t v314;
  uint32x4_t v315;
  uint32x4_t v316;
  uint32x4_t v317;
  uint32x4_t v318;
  uint32x4_t v319;
  uint64_t v320;
  int64x2_t v321;
  int64x2_t v322;
  uint64_t *v323;
  uint64_t v324;
  int64x2_t v325;
  int64x2_t v326;
  uint64_t v327;
  uint32x4_t v328;
  uint64_t v329;
  unsigned __int8 *v330;
  unsigned int v331;
  uint64_t v332;
  int8x16_t *v333;
  uint64_t v334;
  int64x2_t v335;
  int64x2_t v336;
  int8x16_t *v337;
  int64x2_t v338;
  uint64_t v339;
  int64x2_t v340;
  int64x2_t v341;
  int64x2_t v342;
  int64x2_t v343;
  int64x2_t v344;
  int64x2_t v345;
  int64x2_t v346;
  int64x2_t v347;
  int64x2_t v348;
  int64x2_t v349;
  int64x2_t v350;
  int64x2_t v351;
  int64x2_t v352;
  int8x16_t v353;
  uint32x4_t v354;
  uint32x4_t v355;
  uint32x4_t v356;
  uint32x4_t v357;
  uint32x4_t v358;
  uint32x4_t v359;
  uint32x4_t v360;
  uint32x4_t v361;
  uint64_t v362;
  int64x2_t v363;
  int64x2_t v364;
  uint64_t *v365;
  uint64_t v366;
  int64x2_t v367;
  int64x2_t v368;
  uint64_t v369;
  uint32x4_t v370;
  uint64_t v371;
  unsigned __int8 *v372;
  unsigned int v373;
  uint64_t v374;
  float v375;
  float v376;
  uint64_t v377;
  float v378;
  uint64_t v379;
  uint64_t v380;
  unint64_t v381;
  __int128 v382;
  char *v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  std::chrono::system_clock::time_point v391;
  _BOOL4 v392;
  unint64_t v393;
  int v394;
  std::chrono::system_clock::time_point v395;
  uint64_t v396;
  std::chrono::system_clock::time_point v397;
  std::chrono::system_clock::time_point v398;
  uint64_t v399;
  uint64_t v400;
  unint64_t v401;
  unint64_t v402;
  uint64_t v403;
  std::string::size_type v404;
  uint64_t v405;
  std::chrono::system_clock::time_point v406;
  const void **v407;
  char *v408;
  unsigned int v409;
  unsigned int v410;
  uint64_t *v411;
  uint64_t v412;
  _QWORD *v413;
  std::__shared_weak_count *size;
  unint64_t *v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  int v420;
  _QWORD *v421;
  uint64_t v422;
  unsigned int v423;
  uint64_t v424;
  uint64_t v425;
  unsigned int v426;
  int v427;
  int v428;
  uint64_t v429;
  int v430;
  uint64_t v431;
  unsigned int v432;
  uint64_t v433;
  unsigned int v434;
  int v435;
  int v436;
  uint64_t v437;
  int *v438;
  int *v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  uint64_t v447;
  unsigned int v448;
  unsigned int v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  unint64_t v453;
  unint64_t v454;
  uint64_t v455;
  __int128 *v457;
  __int128 *v458;
  uint64_t v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  int *v466;
  int *v467;
  int v468;
  double v469;
  uint64_t *v470;
  uint64_t *v471;
  uint64_t **v472;
  uint64_t *v473;
  uint64_t **v474;
  uint64_t **v475;
  int v476;
  _DWORD *v477;
  uint64_t **v478;
  uint64_t **v479;
  uint64_t *v480;
  uint64_t *v481;
  uint64_t *v482;
  uint64_t *v483;
  uint64_t **v484;
  uint64_t *v485;
  uint64_t **v486;
  uint64_t **v487;
  int v488;
  _DWORD *v489;
  uint64_t **v490;
  uint64_t **v491;
  uint64_t *v492;
  uint64_t *v493;
  _BYTE *v494;
  std::string::size_type v495;
  std::__shared_weak_count *v496;
  unint64_t *v497;
  unint64_t v498;
  unint64_t v499;
  char *v500;
  std::string::size_type *v501;
  std::__shared_weak_count *v502;
  unint64_t *v503;
  unint64_t v504;
  BOOL v505;
  _BYTE *v506;
  std::string::size_type v507;
  unint64_t *v508;
  unint64_t v509;
  unint64_t v510;
  char *v511;
  std::string::size_type *v512;
  std::__shared_weak_count *v513;
  unint64_t *v514;
  unint64_t v515;
  BOOL v516;
  unint64_t *v517;
  unint64_t v518;
  unint64_t *v519;
  unsigned int v520;
  uint64_t *v521;
  std::string::size_type v522;
  std::__shared_weak_count *v523;
  unint64_t *v524;
  unint64_t v525;
  unint64_t v526;
  uint64_t *v527;
  std::string::size_type *v528;
  std::__shared_weak_count *v529;
  unint64_t *v530;
  unint64_t v531;
  BOOL v532;
  unint64_t *v533;
  unint64_t v534;
  _BYTE *v535;
  std::string::size_type v536;
  unint64_t *v537;
  unint64_t v538;
  unint64_t v539;
  char *v540;
  std::string::size_type *v541;
  std::__shared_weak_count *v542;
  unint64_t *v543;
  unint64_t v544;
  BOOL v545;
  unint64_t *v546;
  unsigned int v547;
  uint64_t *v548;
  std::__fs::filesystem::path::__string_view v549;
  __int128 *v550;
  std::basic_string_view<_CharT, _Traits>::size_type v551;
  std::basic_string_view<_CharT, _Traits>::size_type v552;
  uint64_t v553;
  void *v554;
  std::string *v555;
  unsigned int v556;
  int v557;
  size_t v558;
  unint64_t v559;
  char *v560;
  uint64_t v561;
  uint64_t v562;
  __int128 *v563;
  std::string *v564;
  std::string::size_type v565;
  std::string *v566;
  __int128 v567;
  std::string *v568;
  std::string::size_type v569;
  std::string *v570;
  __int128 v571;
  const std::string::value_type *v572;
  std::string::size_type v573;
  std::string *v574;
  __int128 v575;
  std::__fs::filesystem::path::__string_view v576;
  std::string *v577;
  std::basic_string_view<_CharT, _Traits>::size_type v578;
  std::basic_string_view<_CharT, _Traits>::size_type v579;
  std::string::size_type v580;
  std::string *v581;
  uint64_t v582;
  uint64_t v583;
  _QWORD *v584;
  uint64_t v585;
  unint64_t v586;
  __int128 v587;
  char *v588;
  uint64_t v589;
  std::string *v590;
  _BYTE *v591;
  std::string::size_type v592;
  std::__shared_weak_count *v593;
  unint64_t *v594;
  unint64_t v595;
  unint64_t v596;
  char *v597;
  std::string::size_type *v598;
  std::__shared_weak_count *v599;
  unint64_t *v600;
  unint64_t v601;
  BOOL v602;
  unint64_t *v603;
  unint64_t v604;
  uint64_t v605;
  char *v606;
  std::__shared_weak_count *v607;
  unint64_t *v608;
  unint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  int v613;
  _QWORD *v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  int v618;
  _QWORD *v619;
  uint64_t v620;
  char *v621;
  size_t v622;
  size_t v623;
  _BYTE *v624;
  uint64_t v625;
  uint64_t v626;
  unsigned int v627;
  _BOOL4 v628;
  uint64_t *v629;
  std::__shared_weak_count *v630;
  uint64_t v631;
  unint64_t *v632;
  unint64_t v633;
  unint64_t v634;
  char *v635;
  size_t v636;
  size_t v637;
  _BYTE *v638;
  unsigned int v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t *v642;
  std::__shared_weak_count *v643;
  uint64_t v644;
  unint64_t *v645;
  unint64_t v646;
  unint64_t v647;
  char *v648;
  size_t v649;
  size_t v650;
  _BYTE *v651;
  unsigned int v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t *v655;
  uint64_t v656;
  std::__shared_weak_count *v657;
  unint64_t *v658;
  unint64_t v659;
  unint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  int v664;
  int32x2_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  std::string::size_type v669;
  uint64_t v670;
  uint64_t v671;
  unint64_t v672;
  uint64_t v673;
  float *v674;
  signed int v675;
  signed int v676;
  double v677;
  double v678;
  double v679;
  uint64_t v680;
  float v681;
  float v682;
  int v683;
  int v684;
  float v685;
  float v686;
  int v687;
  int v688;
  uint64_t v689;
  int v690;
  uint64_t v691;
  int v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  float32x4_t v697;
  float32x4_t *v698;
  float32x4_t v699;
  float32x4_t *v700;
  float32x4_t *v701;
  float32x4_t *v702;
  uint64_t v703;
  float32x4_t *v704;
  float32x4_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  std::__shared_weak_count *v710;
  unint64_t *v711;
  unint64_t v712;
  std::__shared_weak_count *v713;
  unint64_t *v714;
  unint64_t v715;
  std::chrono::system_clock::time_point v716;
  unint64_t v717;
  uint64_t v718;
  const void **v719;
  const void **v720;
  char *v721;
  unsigned int v722;
  char v723;
  unsigned int v724;
  uint64_t *v725;
  uint64_t v726;
  _QWORD *v727;
  uint64_t v728;
  std::__shared_weak_count *v729;
  unint64_t *v730;
  unint64_t v731;
  uint64_t v732;
  float32x4_t v733;
  float v734;
  float v735;
  float v736;
  int v737;
  void *v738;
  uint64_t v739;
  std::chrono::system_clock::time_point v740;
  uint64_t v741;
  int v742;
  _QWORD *v743;
  uint64_t v744;
  _QWORD *v745;
  uint64_t v746;
  char v747;
  unsigned int v748;
  uint64_t v749;
  uint64_t v750;
  int v751;
  uint64_t v752;
  int v753;
  unsigned int v754;
  int v755;
  int v756;
  int v757;
  int v758;
  double v759;
  uint64_t *v760;
  uint64_t *v761;
  uint64_t **v762;
  uint64_t *v763;
  uint64_t **v764;
  uint64_t **v765;
  int v766;
  _DWORD *v767;
  uint64_t **v768;
  uint64_t **v769;
  uint64_t *v770;
  uint64_t *v771;
  int v772;
  uint64_t v773;
  int *v774;
  int *v775;
  int v776;
  int v777;
  int v778;
  int v779;
  int v780;
  int v781;
  int v782;
  _BYTE *v783;
  std::string::size_type v784;
  std::__shared_weak_count *v785;
  unint64_t *v786;
  unint64_t v787;
  unint64_t v788;
  char *v789;
  std::string::size_type *v790;
  std::__shared_weak_count *v791;
  unint64_t *v792;
  unint64_t v793;
  BOOL v794;
  uint64_t *v795;
  uint64_t *v796;
  uint64_t **v797;
  uint64_t *v798;
  uint64_t **v799;
  uint64_t **v800;
  int v801;
  _DWORD *v802;
  uint64_t **v803;
  uint64_t **v804;
  uint64_t *v805;
  uint64_t *v806;
  _BYTE *v807;
  std::string::size_type v808;
  unint64_t *v809;
  unint64_t v810;
  unint64_t v811;
  char *v812;
  std::string::size_type *v813;
  std::__shared_weak_count *v814;
  unint64_t *v815;
  unint64_t v816;
  BOOL v817;
  unint64_t *v818;
  unint64_t v819;
  unint64_t *v820;
  unsigned int v821;
  uint64_t *v822;
  std::string::size_type v823;
  std::__shared_weak_count *v824;
  unint64_t *v825;
  unint64_t v826;
  unint64_t v827;
  uint64_t *v828;
  std::string::size_type *v829;
  std::__shared_weak_count *v830;
  unint64_t *v831;
  unint64_t v832;
  BOOL v833;
  unint64_t *v834;
  unint64_t v835;
  _BYTE *v836;
  std::string::size_type v837;
  unint64_t *v838;
  unint64_t v839;
  unint64_t v840;
  char *v841;
  std::string::size_type *v842;
  std::__shared_weak_count *v843;
  unint64_t *v844;
  unint64_t v845;
  BOOL v846;
  unint64_t *v847;
  std::__shared_weak_count *v848;
  unsigned int v849;
  uint64_t *v850;
  std::__fs::filesystem::path::__string_view v851;
  __int128 *v852;
  std::basic_string_view<_CharT, _Traits>::size_type v853;
  std::basic_string_view<_CharT, _Traits>::size_type v854;
  uint64_t v855;
  void *v856;
  std::string *v857;
  unsigned int v858;
  int v859;
  size_t v860;
  unint64_t v861;
  char *v862;
  uint64_t v863;
  uint64_t v864;
  _BYTE *v865;
  const std::string::value_type *v866;
  std::string::size_type v867;
  std::string *v868;
  __int128 v869;
  std::string *v870;
  std::string::size_type v871;
  std::string *v872;
  __int128 v873;
  std::string *v874;
  std::string::size_type v875;
  std::string *v876;
  __int128 v877;
  int v878;
  std::__fs::filesystem::path::__string_view v879;
  std::string *v880;
  std::basic_string_view<_CharT, _Traits>::size_type v881;
  std::basic_string_view<_CharT, _Traits>::size_type v882;
  uint64_t v883;
  std::string *v884;
  uint64_t v885;
  uint64_t v886;
  _QWORD *v887;
  uint64_t v888;
  unint64_t v889;
  __int128 v890;
  char *v891;
  uint64_t v892;
  std::string *v893;
  void *v894;
  unint64_t *v895;
  unint64_t v896;
  unint64_t *v897;
  unint64_t v898;
  unsigned int v899;
  int v900;
  uint64_t v901;
  uint64_t v902;
  int v903;
  unsigned int v904;
  uint64_t v905;
  unsigned int v906;
  unsigned int v907;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;
  unint64_t v911;
  unint64_t v912;
  uint64_t v913;
  __int128 *v915;
  __int128 *v916;
  uint64_t v917;
  __int128 v918;
  __int128 v919;
  __int128 v920;
  uint64_t v921;
  uint64_t v922;
  uint64_t v923;
  int *v924;
  int *v925;
  int v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  unint64_t v930;
  const void **v931;
  char *v932;
  unsigned int v933;
  char v934;
  unsigned int v935;
  uint64_t *v936;
  uint64_t v937;
  _QWORD *v938;
  std::__shared_weak_count *v939;
  unint64_t *v940;
  unint64_t v941;
  uint64_t v942;
  float32x4_t v943;
  float v944;
  float v945;
  void *v946;
  uint64_t v947;
  uint64_t v948;
  _BOOL4 v949;
  _QWORD *v950;
  uint64_t v951;
  _QWORD *v952;
  uint64_t v953;
  unsigned int v954;
  uint64_t v955;
  uint64_t v956;
  unsigned int v957;
  int v958;
  int v959;
  uint64_t v960;
  int v961;
  uint64_t v962;
  unsigned int v963;
  uint64_t v964;
  unsigned int v965;
  int v966;
  uint64_t v967;
  int *v968;
  int *v969;
  int v970;
  int v971;
  int v972;
  int v973;
  int v974;
  int v975;
  int v976;
  uint64_t v977;
  unsigned int v978;
  unsigned int v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  unint64_t v983;
  unint64_t v984;
  uint64_t v985;
  __int128 *v987;
  __int128 *v988;
  uint64_t v989;
  __int128 v990;
  __int128 v991;
  __int128 v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  int *v996;
  int *v997;
  int v998;
  int v999;
  int v1000;
  uint64_t *v1001;
  uint64_t *v1002;
  uint64_t **v1003;
  uint64_t *v1004;
  uint64_t **v1005;
  uint64_t **v1006;
  int v1007;
  _DWORD *v1008;
  uint64_t **v1009;
  uint64_t **v1010;
  uint64_t *v1011;
  uint64_t *v1012;
  double v1013;
  uint64_t *v1014;
  uint64_t *v1015;
  uint64_t *v1016;
  uint64_t *v1017;
  uint64_t *v1018;
  uint64_t **v1019;
  uint64_t **v1020;
  int v1021;
  _DWORD *v1022;
  _QWORD *v1023;
  uint64_t *v1024;
  unsigned int v1025;
  uint64_t *v1026;
  std::__fs::filesystem::path::__string_view v1027;
  void *v1028;
  std::basic_string_view<_CharT, _Traits>::size_type v1029;
  std::basic_string_view<_CharT, _Traits>::size_type v1030;
  std::string::size_type v1031;
  void *v1032;
  unsigned int v1033;
  int v1034;
  size_t v1035;
  unint64_t v1036;
  char *v1037;
  uint64_t v1038;
  uint64_t v1039;
  _BYTE *v1040;
  const std::string::value_type *v1041;
  std::string::size_type v1042;
  std::string *v1043;
  __int128 v1044;
  std::string *v1045;
  std::string::size_type v1046;
  std::string *v1047;
  __int128 v1048;
  std::string *v1049;
  std::string::size_type v1050;
  std::string *v1051;
  __int128 v1052;
  std::__fs::filesystem::path::__string_view v1053;
  void *v1054;
  std::basic_string_view<_CharT, _Traits>::size_type v1055;
  std::basic_string_view<_CharT, _Traits>::size_type v1056;
  uint64_t v1057;
  std::string *v1058;
  uint64_t v1059;
  uint64_t v1060;
  _QWORD *v1061;
  uint64_t v1062;
  unint64_t v1063;
  __int128 v1064;
  char *v1065;
  uint64_t v1066;
  int v1067;
  uint64_t *v1068;
  uint64_t *v1069;
  int v1070;
  _DWORD *v1071;
  _QWORD *v1072;
  uint64_t *v1073;
  unsigned int v1074;
  uint64_t *v1075;
  std::string::size_type v1076;
  std::__shared_weak_count *v1077;
  unint64_t *v1078;
  unint64_t v1079;
  unint64_t v1080;
  uint64_t *v1081;
  std::string::size_type *v1082;
  std::__shared_weak_count *v1083;
  unint64_t *v1084;
  unint64_t v1085;
  BOOL v1086;
  unint64_t *v1087;
  unint64_t v1088;
  unsigned int v1089;
  uint64_t *v1090;
  std::__shared_weak_count *v1091;
  unint64_t *v1092;
  unint64_t v1093;
  int v1094;
  std::chrono::system_clock::time_point v1095;
  unint64_t v1096;
  uint64_t v1097;
  const void **v1098;
  const void **v1099;
  char *v1100;
  unsigned int v1101;
  char v1102;
  unsigned int v1103;
  uint64_t *v1104;
  uint64_t v1105;
  _QWORD *v1106;
  uint64_t v1107;
  std::__shared_weak_count *v1108;
  unint64_t *v1109;
  unint64_t v1110;
  uint64_t v1111;
  unsigned int v1112;
  uint64_t v1113;
  uint64_t v1114;
  int v1115;
  uint64_t v1116;
  int v1117;
  unsigned int v1118;
  int v1119;
  int v1120;
  int v1121;
  int v1122;
  std::__shared_weak_count *v1123;
  unint64_t *v1124;
  unint64_t v1125;
  int v1126;
  uint64_t v1127;
  int *v1128;
  int *v1129;
  int v1130;
  int v1131;
  int v1132;
  int v1133;
  int v1134;
  int v1135;
  int v1136;
  double v1137;
  uint64_t *v1138;
  uint64_t *v1139;
  uint64_t **v1140;
  uint64_t *v1141;
  uint64_t **v1142;
  uint64_t **v1143;
  int v1144;
  _DWORD *v1145;
  uint64_t **v1146;
  uint64_t **v1147;
  uint64_t *v1148;
  uint64_t *v1149;
  uint64_t *v1150;
  uint64_t *v1151;
  uint64_t **v1152;
  uint64_t *v1153;
  uint64_t **v1154;
  uint64_t **v1155;
  int v1156;
  _DWORD *v1157;
  uint64_t **v1158;
  uint64_t **v1159;
  uint64_t *v1160;
  uint64_t *v1161;
  unsigned int v1162;
  uint64_t *v1163;
  std::string::size_type v1164;
  std::__shared_weak_count *v1165;
  unint64_t *v1166;
  unint64_t v1167;
  unint64_t v1168;
  uint64_t *v1169;
  std::string::size_type *v1170;
  std::__shared_weak_count *v1171;
  unint64_t *v1172;
  unint64_t v1173;
  BOOL v1174;
  unint64_t *v1175;
  unint64_t v1176;
  unsigned int v1177;
  uint64_t *v1178;
  std::__fs::filesystem::path::__string_view v1179;
  void *v1180;
  std::basic_string_view<_CharT, _Traits>::size_type v1181;
  std::basic_string_view<_CharT, _Traits>::size_type v1182;
  std::string::size_type v1183;
  void *v1184;
  std::string *v1185;
  unsigned int v1186;
  int v1187;
  size_t v1188;
  unint64_t v1189;
  char *v1190;
  uint64_t v1191;
  uint64_t v1192;
  __int128 *v1193;
  const std::string::value_type *v1194;
  std::string::size_type v1195;
  std::string *v1196;
  __int128 v1197;
  std::string *v1198;
  std::string::size_type v1199;
  std::string *v1200;
  __int128 v1201;
  const std::string::value_type *v1202;
  std::string::size_type v1203;
  std::string *v1204;
  __int128 v1205;
  std::string *v1206;
  std::__fs::filesystem::path::__string_view v1207;
  void *v1208;
  std::basic_string_view<_CharT, _Traits>::size_type v1209;
  std::basic_string_view<_CharT, _Traits>::size_type v1210;
  std::string::size_type v1211;
  std::string *v1212;
  uint64_t v1213;
  uint64_t v1214;
  _QWORD *v1215;
  uint64_t v1216;
  unsigned int v1217;
  int v1218;
  uint64_t v1219;
  uint64_t v1220;
  int v1221;
  unsigned int v1222;
  uint64_t v1223;
  unsigned int v1224;
  unsigned int v1225;
  uint64_t v1226;
  uint64_t v1227;
  uint64_t v1228;
  unint64_t v1229;
  unint64_t v1230;
  uint64_t v1231;
  __int128 *v1233;
  __int128 *v1234;
  uint64_t v1235;
  __int128 v1236;
  __int128 v1237;
  __int128 v1238;
  uint64_t v1239;
  uint64_t v1240;
  uint64_t v1241;
  int *v1242;
  int *v1243;
  int v1244;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v1245;
  std::chrono::system_clock::time_point v1246;
  unint64_t v1247;
  uint64_t v1248;
  uint64_t v1249;
  int v1251;
  unsigned int v1252;
  char *v1253;
  size_t v1254;
  size_t v1255;
  _BYTE *v1256;
  uint64_t v1257;
  uint64_t v1258;
  unsigned int v1259;
  uint64_t *v1260;
  std::__shared_weak_count *v1261;
  unint64_t *v1262;
  unint64_t v1263;
  unint64_t v1264;
  _DWORD *v1265;
  uint64_t v1266;
  char *v1267;
  unsigned int v1268;
  uint64_t v1269;
  char *v1270;
  unsigned int v1271;
  unsigned int v1272;
  _QWORD *v1273;
  _DWORD *v1274;
  _DWORD *v1275;
  char *v1276;
  _QWORD *v1277;
  _DWORD *v1278;
  _DWORD *v1279;
  unsigned int v1280;
  unsigned int v1281;
  float *v1282;
  float32x4_t v1283;
  float32x4_t v1284;
  float32x4_t v1285;
  float32x4_t v1286;
  float32x4_t v1287;
  std::chrono::system_clock::time_point v1288;
  unint64_t v1289;
  uint64_t v1290;
  double v1291;
  uint64_t v1292;
  const void **v1296;
  unsigned int v1297;
  int v1298;
  uint64_t v1299;
  uint64_t v1300;
  uint64_t v1301;
  _QWORD *v1302;
  std::__shared_weak_count *v1303;
  unint64_t *v1304;
  unint64_t v1305;
  uint64_t v1306;
  uint64_t v1307;
  unint64_t v1308;
  unint64_t v1309;
  int8x16_t *v1310;
  int64x2_t v1311;
  int64x2_t v1312;
  int8x16_t v1313;
  int64x2_t v1314;
  uint64x2_t v1315;
  uint64x2_t v1316;
  int64x2_t v1317;
  unint64_t v1318;
  float *v1319;
  unint64_t v1320;
  float v1321;
  _BOOL4 v1322;
  uint64_t v1323;
  unsigned int v1324;
  uint64_t v1325;
  uint64_t v1326;
  unsigned int v1327;
  int v1328;
  int v1329;
  uint64_t v1330;
  int v1331;
  uint64_t v1332;
  unsigned int v1333;
  uint64_t v1334;
  unsigned int v1335;
  int v1336;
  uint64_t v1337;
  int *v1338;
  int *v1339;
  int v1340;
  int v1341;
  int v1342;
  int v1343;
  int v1344;
  int v1345;
  int v1346;
  uint64_t v1347;
  unsigned int v1348;
  unsigned int v1349;
  uint64_t v1350;
  uint64_t v1351;
  uint64_t v1352;
  unint64_t v1353;
  unint64_t v1354;
  uint64_t v1355;
  __int128 *v1357;
  __int128 *v1358;
  uint64_t v1359;
  __int128 v1360;
  __int128 v1361;
  __int128 v1362;
  uint64_t v1363;
  uint64_t v1364;
  uint64_t v1365;
  int *v1366;
  int *v1367;
  int v1368;
  int v1369;
  uint64_t v1370;
  uint64_t v1371;
  _QWORD *v1372;
  uint64_t v1373;
  int v1374;
  uint64_t v1375;
  _QWORD *v1376;
  std::__shared_weak_count *v1377;
  unint64_t *v1378;
  unint64_t v1379;
  uint64_t v1380;
  std::string::size_type v1381;
  unsigned int v1382;
  uint64_t v1383;
  uint64_t v1384;
  unsigned int v1385;
  int v1386;
  int v1387;
  uint64_t v1388;
  int v1389;
  uint64_t v1390;
  unsigned int v1391;
  uint64_t v1392;
  unsigned int v1393;
  int v1394;
  uint64_t v1395;
  int *v1396;
  int *v1397;
  int v1398;
  int v1399;
  int v1400;
  int v1401;
  int v1402;
  int v1403;
  int v1404;
  uint64_t v1405;
  unsigned int v1406;
  unsigned int v1407;
  uint64_t v1408;
  uint64_t v1409;
  uint64_t v1410;
  unint64_t v1411;
  unint64_t v1412;
  uint64_t v1413;
  __int128 *v1415;
  __int128 *v1416;
  uint64_t v1417;
  __int128 v1418;
  __int128 v1419;
  __int128 v1420;
  uint64_t v1421;
  uint64_t v1422;
  uint64_t v1423;
  int *v1424;
  int *v1425;
  int v1426;
  std::__shared_weak_count *v1427;
  unint64_t *v1428;
  unint64_t v1429;
  uint64_t v1430;
  _QWORD *v1431;
  std::__shared_weak_count *v1432;
  unint64_t *v1433;
  unint64_t v1434;
  uint64_t v1435;
  char *v1436;
  _DWORD *v1437;
  uint64_t v1438;
  char *v1439;
  unint64_t v1440;
  float32x4_t v1441;
  uint64_t v1442;
  uint64_t v1443;
  uint64_t v1444;
  uint64_t *v1445;
  std::__shared_weak_count *v1446;
  uint64_t v1447;
  unint64_t *v1448;
  unint64_t v1449;
  unint64_t v1450;
  float32x4_t v1451;
  uint64_t v1452;
  float *v1453;
  float v1454;
  float v1455;
  uint64_t v1456;
  uint64_t *v1457;
  std::__shared_weak_count *v1458;
  uint64_t v1459;
  unint64_t *v1460;
  unint64_t v1461;
  unint64_t v1462;
  float32x4_t v1463;
  float v1464;
  uint64_t v1465;
  uint64_t *v1466;
  std::__shared_weak_count *v1467;
  uint64_t v1468;
  unint64_t *v1469;
  unint64_t v1470;
  unint64_t v1471;
  uint64_t v1472;
  double v1473;
  uint64_t *v1474;
  uint64_t *v1475;
  uint64_t **v1476;
  uint64_t *v1477;
  uint64_t **v1478;
  uint64_t **v1479;
  int v1480;
  _DWORD *v1481;
  uint64_t **v1482;
  uint64_t **v1483;
  uint64_t *v1484;
  uint64_t *v1485;
  double v1486;
  uint64_t *v1487;
  uint64_t *v1488;
  uint64_t **v1489;
  uint64_t *v1490;
  uint64_t **v1491;
  uint64_t **v1492;
  int v1493;
  _DWORD *v1494;
  uint64_t **v1495;
  uint64_t **v1496;
  uint64_t *v1497;
  uint64_t *v1498;
  std::string::size_type v1499;
  unsigned int v1500;
  uint64_t v1501;
  uint64_t v1502;
  unsigned int v1503;
  int v1504;
  int v1505;
  uint64_t v1506;
  int v1507;
  uint64_t v1508;
  unsigned int v1509;
  uint64_t v1510;
  unsigned int v1511;
  int v1512;
  uint64_t v1513;
  int *v1514;
  int *v1515;
  int v1516;
  int v1517;
  int v1518;
  int v1519;
  int v1520;
  int v1521;
  int v1522;
  uint64_t v1523;
  unsigned int v1524;
  unsigned int v1525;
  uint64_t v1526;
  uint64_t v1527;
  uint64_t v1528;
  unint64_t v1529;
  unint64_t v1530;
  uint64_t v1531;
  __int128 *v1533;
  __int128 *v1534;
  uint64_t v1535;
  __int128 v1536;
  __int128 v1537;
  __int128 v1538;
  uint64_t v1539;
  uint64_t v1540;
  uint64_t v1541;
  int *v1542;
  int *v1543;
  int v1544;
  uint64_t *v1545;
  uint64_t *v1546;
  uint64_t **v1547;
  uint64_t *v1548;
  uint64_t **v1549;
  uint64_t **v1550;
  int v1551;
  _DWORD *v1552;
  uint64_t **v1553;
  uint64_t **v1554;
  uint64_t *v1555;
  uint64_t *v1556;
  uint64_t *v1557;
  uint64_t *v1558;
  uint64_t **v1559;
  uint64_t *v1560;
  uint64_t **v1561;
  uint64_t **v1562;
  int v1563;
  _DWORD *v1564;
  uint64_t **v1565;
  uint64_t **v1566;
  uint64_t *v1567;
  uint64_t *v1568;
  unsigned int v1569;
  uint64_t *v1570;
  std::__shared_weak_count *v1571;
  unint64_t *v1572;
  unint64_t v1573;
  unint64_t v1574;
  uint64_t *v1575;
  std::string::size_type *v1576;
  std::__shared_weak_count *v1577;
  unint64_t *v1578;
  unint64_t v1579;
  BOOL v1580;
  unint64_t *v1581;
  unint64_t v1582;
  std::__shared_weak_count *v1583;
  unint64_t *v1584;
  unint64_t v1585;
  _QWORD *v1586;
  uint64_t v1587;
  int v1588;
  uint64_t v1589;
  uint64_t v1590;
  int v1591;
  _QWORD *v1592;
  char *v1593;
  std::__shared_weak_count *v1594;
  _QWORD *v1595;
  unint64_t *v1596;
  unint64_t v1597;
  std::__shared_weak_count *v1598;
  unint64_t *v1599;
  unint64_t v1600;
  std::__shared_weak_count *v1601;
  uint64_t v1602;
  char *v1603;
  int v1604;
  char *v1605;
  __int128 v1606;
  _QWORD *v1607;
  uint64_t v1608;
  vm_address_t v1609;
  uint64_t v1610;
  uint64_t v1611;
  __int128 *v1612;
  _OWORD *v1613;
  uint64_t v1614;
  __int128 v1615;
  uint64_t v1616;
  uint64_t v1617;
  _DWORD *v1618;
  int *v1619;
  int v1620;
  int v1621;
  _QWORD *v1622;
  char *v1623;
  std::__shared_weak_count *v1624;
  _QWORD *v1625;
  unint64_t *v1626;
  unint64_t v1627;
  std::__shared_weak_count *v1628;
  unint64_t *v1629;
  unint64_t v1630;
  std::__shared_weak_count *v1631;
  uint64_t v1632;
  char *v1633;
  void **v1634;
  __int128 v1635;
  uint64_t *v1636;
  uint64_t *v1637;
  uint64_t **v1638;
  uint64_t *v1639;
  uint64_t **v1640;
  uint64_t **v1641;
  int v1642;
  _DWORD *v1643;
  uint64_t **v1644;
  uint64_t **v1645;
  uint64_t *v1646;
  uint64_t *v1647;
  _QWORD *v1648;
  int v1649;
  uint64_t v1650;
  vm_address_t v1651;
  uint64_t v1652;
  uint64_t v1653;
  __int128 *v1654;
  _OWORD *v1655;
  uint64_t v1656;
  __int128 v1657;
  uint64_t v1658;
  uint64_t v1659;
  _DWORD *v1660;
  int *v1661;
  int v1662;
  vm_address_t v1663;
  _QWORD *v1664;
  std::__shared_weak_count *v1665;
  unint64_t *v1666;
  unint64_t v1667;
  uint64_t v1668;
  uint64_t v1669;
  uint64_t v1670;
  uint64_t v1671;
  int v1672;
  _QWORD *v1673;
  uint64_t v1674;
  uint64_t v1675;
  unsigned int v1676;
  uint64_t v1677;
  uint64_t v1678;
  unsigned int v1679;
  int v1680;
  int v1681;
  uint64_t v1682;
  int v1683;
  uint64_t v1684;
  unsigned int v1685;
  uint64_t v1686;
  unsigned int v1687;
  int v1688;
  uint64_t v1689;
  int *v1690;
  int *v1691;
  int v1692;
  int v1693;
  int v1694;
  int v1695;
  int v1696;
  int v1697;
  int v1698;
  uint64_t v1699;
  unsigned int v1700;
  unsigned int v1701;
  uint64_t v1702;
  uint64_t v1703;
  uint64_t v1704;
  unint64_t v1705;
  unint64_t v1706;
  uint64_t v1707;
  __int128 *v1709;
  __int128 *v1710;
  uint64_t v1711;
  __int128 v1712;
  __int128 v1713;
  __int128 v1714;
  uint64_t v1715;
  uint64_t v1716;
  uint64_t v1717;
  int *v1718;
  int *v1719;
  int v1720;
  int v1721;
  unsigned int v1722;
  uint64_t v1723;
  uint64_t v1724;
  unsigned int v1725;
  int v1726;
  int v1727;
  uint64_t v1728;
  int v1729;
  uint64_t v1730;
  unsigned int v1731;
  uint64_t v1732;
  unsigned int v1733;
  uint64_t v1734;
  uint64_t v1735;
  uint64_t v1736;
  uint64_t v1737;
  unint64_t v1738;
  __int128 *v1739;
  _OWORD *v1740;
  unint64_t v1741;
  __int128 v1742;
  unint64_t v1743;
  uint64_t v1744;
  _DWORD *v1745;
  int *v1746;
  int v1747;
  unint64_t v1748;
  int v1749;
  unsigned int v1750;
  uint64_t *v1751;
  int v1752;
  uint64_t v1753;
  int *v1754;
  int *v1755;
  int v1756;
  int v1757;
  int v1758;
  int v1759;
  int v1760;
  int v1761;
  int v1762;
  uint64_t v1763;
  unsigned int v1764;
  unsigned int v1765;
  uint64_t v1766;
  uint64_t v1767;
  uint64_t v1768;
  unint64_t v1769;
  unint64_t v1770;
  uint64_t v1771;
  __int128 *v1773;
  __int128 *v1774;
  uint64_t v1775;
  __int128 v1776;
  __int128 v1777;
  __int128 v1778;
  uint64_t v1779;
  uint64_t v1780;
  uint64_t v1781;
  int *v1782;
  int *v1783;
  int v1784;
  unsigned int v1785;
  uint64_t *v1786;
  unint64_t *v1787;
  unint64_t v1788;
  std::string *v1789;
  std::string *v1790;
  std::string::size_type v1791;
  std::string *v1792;
  __int128 v1793;
  std::string *v1794;
  std::string::size_type v1795;
  std::string *v1796;
  __int128 v1797;
  const std::string::value_type *v1798;
  std::string::size_type v1799;
  std::string *v1800;
  __int128 v1801;
  uint64_t v1802;
  _QWORD *v1803;
  uint64_t v1804;
  std::__shared_weak_count *v1805;
  unint64_t *v1806;
  unint64_t v1807;
  _QWORD *v1808;
  uint64_t v1809;
  uint64_t v1810;
  uint64_t v1811;
  uint64_t v1812;
  uint64_t v1813;
  __int128 *v1814;
  _OWORD *v1815;
  uint64_t v1816;
  __int128 v1817;
  uint64_t v1818;
  uint64_t v1819;
  _DWORD *v1820;
  int *v1821;
  int v1822;
  unint64_t v1823;
  _QWORD *v1824;
  int v1825;
  uint64_t v1826;
  uint64_t v1827;
  uint64_t v1828;
  uint64_t v1829;
  uint64_t v1830;
  __int128 *v1831;
  _OWORD *v1832;
  uint64_t v1833;
  __int128 v1834;
  uint64_t v1835;
  uint64_t v1836;
  _DWORD *v1837;
  int *v1838;
  int v1839;
  unint64_t v1840;
  char v1841;
  std::__shared_weak_count *v1842;
  unint64_t *v1843;
  unint64_t v1844;
  std::__shared_weak_count *v1845;
  unint64_t *v1846;
  unint64_t v1847;
  int v1848;
  unsigned int v1849;
  char v1850;
  std::__shared_weak_count *v1851;
  uint64_t v1852;
  _QWORD *v1853;
  std::__shared_weak_count *v1854;
  unint64_t *v1855;
  unint64_t v1856;
  std::string::size_type v1857;
  int8x16_t *v1858;
  int8x16_t *v1859;
  unint64_t v1860;
  unint64_t v1861;
  int8x16_t *v1862;
  int8x16_t *v1863;
  unint64_t v1864;
  int8x16_t v1865;
  int16x8_t v1866;
  int16x8_t v1867;
  int8x16_t v1868;
  int16x8_t v1869;
  int16x8_t v1870;
  uint8x8_t *v1871;
  int8x16_t *v1872;
  unint64_t v1873;
  uint8x8_t v1874;
  int16x8_t v1875;
  unint64_t v1876;
  float *v1877;
  unsigned __int8 *v1878;
  float v1880;
  unsigned int v1881;
  uint64_t v1882;
  uint64_t v1883;
  unsigned int v1884;
  int v1885;
  int v1886;
  uint64_t v1887;
  int v1888;
  uint64_t v1889;
  unsigned int v1890;
  uint64_t v1891;
  unsigned int v1892;
  int v1893;
  uint64_t v1894;
  int *v1895;
  int *v1896;
  int v1897;
  int v1898;
  int v1899;
  int v1900;
  int v1901;
  int v1902;
  int v1903;
  uint64_t v1904;
  unsigned int v1905;
  unsigned int v1906;
  uint64_t v1907;
  uint64_t v1908;
  uint64_t v1909;
  unint64_t v1910;
  unint64_t v1911;
  uint64_t v1912;
  __int128 *v1914;
  __int128 *v1915;
  uint64_t v1916;
  __int128 v1917;
  __int128 v1918;
  __int128 v1919;
  uint64_t v1920;
  uint64_t v1921;
  uint64_t v1922;
  int *v1923;
  int *v1924;
  int v1925;
  uint64_t *v1926;
  uint64_t *v1927;
  uint64_t **v1928;
  uint64_t *v1929;
  uint64_t **v1930;
  uint64_t **v1931;
  int v1932;
  _DWORD *v1933;
  uint64_t **v1934;
  uint64_t **v1935;
  uint64_t *v1936;
  uint64_t *v1937;
  unsigned int v1938;
  uint64_t *v1939;
  std::__shared_weak_count *v1940;
  unint64_t *v1941;
  unint64_t v1942;
  unint64_t v1943;
  uint64_t *v1944;
  std::string::size_type *v1945;
  std::__shared_weak_count *v1946;
  unint64_t *v1947;
  unint64_t v1948;
  BOOL v1949;
  unint64_t *v1950;
  unint64_t v1951;
  std::__shared_weak_count *v1952;
  unint64_t *v1953;
  unint64_t v1954;
  float v1955;
  unint64_t *v1956;
  unint64_t v1957;
  unsigned int v1958;
  uint64_t *v1959;
  std::__shared_weak_count *v1960;
  unint64_t *v1961;
  unint64_t v1962;
  unint64_t v1963;
  uint64_t *v1964;
  std::string::size_type *v1965;
  std::__shared_weak_count *v1966;
  unint64_t *v1967;
  unint64_t v1968;
  BOOL v1969;
  unint64_t *v1970;
  unint64_t v1971;
  unsigned int v1972;
  uint64_t *v1973;
  std::__fs::filesystem::path::__string_view v1974;
  __int128 *p_src;
  std::basic_string_view<_CharT, _Traits>::size_type v1976;
  std::basic_string_view<_CharT, _Traits>::size_type v1977;
  uint64_t v1978;
  void *v1979;
  std::string *v1980;
  unsigned int v1981;
  int v1982;
  size_t v1983;
  unint64_t v1984;
  char *v1985;
  uint64_t v1986;
  uint64_t v1987;
  __int128 *v1988;
  const std::string::value_type *v1989;
  std::string::size_type v1990;
  std::string *v1991;
  __int128 v1992;
  std::string *v1993;
  std::string::size_type v1994;
  std::string *v1995;
  __int128 v1996;
  const std::string::value_type *v1997;
  std::string::size_type v1998;
  std::string *v1999;
  __int128 v2000;
  std::__fs::filesystem::path::__string_view v2001;
  _BYTE *v2002;
  std::basic_string_view<_CharT, _Traits>::size_type v2003;
  std::basic_string_view<_CharT, _Traits>::size_type v2004;
  std::string::size_type v2005;
  std::string *v2006;
  uint64_t v2007;
  uint64_t v2008;
  _QWORD *v2009;
  uint64_t v2010;
  unsigned int v2011;
  uint64_t *v2012;
  std::__shared_weak_count *v2013;
  unint64_t *v2014;
  unint64_t v2015;
  unint64_t v2016;
  uint64_t *v2017;
  uint64_t *v2018;
  std::__shared_weak_count *v2019;
  unint64_t *v2020;
  unint64_t v2021;
  BOOL v2022;
  unint64_t *v2023;
  unint64_t v2024;
  unsigned int v2025;
  uint64_t *v2026;
  std::__fs::filesystem::path::__string_view v2027;
  __int128 *v2028;
  std::basic_string_view<_CharT, _Traits>::size_type v2029;
  std::basic_string_view<_CharT, _Traits>::size_type v2030;
  uint64_t v2031;
  void *v2032;
  std::string *v2033;
  unsigned int v2034;
  int v2035;
  size_t v2036;
  unint64_t v2037;
  char *v2038;
  uint64_t v2039;
  uint64_t v2040;
  __int128 *v2041;
  const std::string::value_type *v2042;
  std::string::size_type v2043;
  std::string *v2044;
  __int128 v2045;
  std::string *v2046;
  std::string::size_type v2047;
  std::string *v2048;
  __int128 v2049;
  const std::string::value_type *v2050;
  std::string::size_type v2051;
  std::string *v2052;
  __int128 v2053;
  std::__fs::filesystem::path::__string_view v2054;
  _BYTE *v2055;
  std::basic_string_view<_CharT, _Traits>::size_type v2056;
  std::basic_string_view<_CharT, _Traits>::size_type v2057;
  std::string::size_type v2058;
  std::string *v2059;
  uint64_t v2060;
  uint64_t v2061;
  _QWORD *v2062;
  uint64_t v2063;
  void *v2064;
  std::chrono::system_clock::time_point v2065;
  void **v2066;
  void **v2067;
  void *v2068;
  std::__shared_weak_count *v2069;
  unint64_t *v2070;
  unint64_t v2071;
  void **v2072;
  void **v2073;
  void *v2074;
  std::__shared_weak_count *v2075;
  unint64_t *v2076;
  unint64_t v2077;
  char *v2078;
  char *v2079;
  void *v2080;
  uint64_t v2081;
  char *v2082;
  char *v2083;
  void *v2084;
  uint64_t v2085;
  char *v2086;
  char *v2087;
  void *v2088;
  uint64_t v2089;
  char *v2090;
  char *v2091;
  void *v2092;
  uint64_t v2093;
  uint64_t v2094;
  uint64_t v2095;
  unint64_t v2096;
  uint64_t v2097;
  unint64_t v2098;
  uint64x2_t v2099;
  std::chrono::system_clock::time_point v2100;
  int v2101;
  int8x16_t v2102;
  _QWORD *v2103;
  unint64_t v2104;
  uint64_t v2105;
  uint64_t *v2106;
  _BOOL4 v2107;
  unint64_t v2108;
  _QWORD *v2109;
  uint64_t v2110;
  std::chrono::system_clock::time_point v2111;
  float v2112;
  _QWORD *v2113;
  float32x4_t v2114;
  uint64_t *v2115;
  _QWORD *v2116;
  uint64_t v2117;
  _BYTE *v2118;
  uint64_t v2119;
  uint64_t *v2120;
  uint64_t v2121;
  unint64_t v2122;
  uint64_t v2123;
  uint64_t v2124;
  uint64_t **v2125;
  unsigned int v2126;
  int v2127;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v2128;
  _BOOL4 v2129;
  _BOOL4 v2130;
  int v2131;
  uint64_t *v2132;
  uint64_t v2133;
  unsigned int v2134;
  uint64_t v2137;
  size_t v2139;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v2140;
  unsigned int *v2141;
  float v2142;
  float v2143;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  unsigned int v2145;
  uint64_t v2146;
  unint64_t v2147;
  _BOOL4 __val;
  unint64_t __vala;
  int __valb;
  size_t __valc;
  char *__vald;
  unint64_t __vale[2];
  unint64_t __valf[2];
  uint64_t **v2155;
  uint64_t v2156;
  const void **v2157;
  uint64_t **v2158;
  uint64_t **v2159;
  char *v2160;
  unint64_t v2161;
  uint64_t v2162;
  uint64_t v2163;
  uint64_t **v2164;
  std::string v2165;
  uint64_t v2166[2];
  uint64_t v2167[2];
  std::string v2168;
  std::string v2169;
  std::string v2170;
  uint64_t v2171;
  uint64_t v2172;
  _QWORD *v2173;
  std::__shared_weak_count *v2174;
  _QWORD *v2175;
  std::__shared_weak_count *v2176;
  std::string v2177;
  std::string v2178;
  std::string v2179;
  std::string v2180;
  std::string v2181;
  std::string v2182;
  std::string v2183;
  std::string v2184;
  std::string v2185;
  _QWORD *v2186;
  std::__shared_weak_count *v2187;
  std::string v2188;
  std::string v2189;
  std::string v2190;
  std::string v2191;
  std::string v2192;
  std::string v2193;
  std::string v2194;
  __int128 v2195;
  std::string v2196;
  std::string v2197;
  std::string v2198;
  std::string v2199;
  std::string v2200;
  _BYTE __dst[72];
  __int128 v2202;
  __int128 v2203;
  __int128 v2204;
  __int128 v2205;
  __int128 v2206;
  __int128 v2207;
  __int128 v2208;
  void *v2209;
  void **v2210;
  uint64_t v2211;
  void *v2212;
  void **v2213;
  uint64_t v2214;
  void *v2215;
  char *v2216;
  std::string v2217;
  void *v2218;
  char *v2219;
  void *v2220;
  char *v2221;
  void *v2222;
  char *v2223;
  __int128 __src;
  __int128 v2225;
  __int128 v2226;
  uint64_t v2227;
  std::string __p;
  float32x4_t v2229;
  int v2230;
  float32x4_t v2231;
  float32x4_t v2232;
  void *v2233;
  void *v2234;
  uint64_t v2235;
  void *v2236;
  int v2237[2];
  uint64_t v2238;
  integer_t task_info_out[2];
  char *v2240;
  uint64_t v2241;
  __int16 v2242;
  std::string v2243[3];
  uint64_t v2244;
  uint64_t v2245;
  __int128 v2246;
  __int128 v2247;
  uint64_t v2248;
  __int128 v2249;
  unint64_t v2250;
  std::string v2251;
  __int16 v2252;
  uint64_t v2253;
  uint64_t v2254;
  int v2255;
  std::string v2256;
  __int128 v2257;
  unint64_t v2258;
  std::string v2259;
  std::string v2260;
  std::string v2261;
  std::string v2262;
  std::string v2263;
  std::string v2264;
  std::string v2265;
  __int128 v2266;
  int64_t v2267;
  __int128 v2268;
  int64_t v2269;
  std::string v2270;
  __int128 v2271;
  uint64_t v2272;
  _BYTE v2273[24];
  _BYTE *v2274;
  _QWORD v2275[3];
  _QWORD *v2276;
  _BYTE v2277[24];
  _BYTE *v2278;
  _BYTE v2279[24];
  _BYTE *v2280;
  _BYTE v2281[24];
  _BYTE *v2282;
  _BYTE v2283[24];
  _BYTE *v2284;
  _BYTE v2285[24];
  _BYTE *v2286;
  _BYTE v2287[24];
  _BYTE *v2288;
  _BYTE v2289[24];
  _BYTE *v2290;
  _QWORD v2291[3];
  _QWORD *v2292;
  _QWORD v2293[3];
  _QWORD *v2294;
  _QWORD v2295[3];
  _QWORD *v2296;
  _BYTE v2297[24];
  _BYTE *v2298;
  _BYTE v2299[24];
  _BYTE *v2300;
  _BYTE task_info_outCnt[56];
  _QWORD v2302[3];
  _QWORD *v2303;
  _QWORD v2304[3];
  _QWORD *v2305;
  _QWORD v2306[3];
  _QWORD *v2307;
  _QWORD v2308[3];
  _QWORD *v2309;
  _BYTE v2310[24];
  _BYTE *v2311;
  uint64_t v2312;

  v2312 = *MEMORY[0x24BDAC8D0];
  v2127 = *(unsigned __int8 *)(a5 + 504);
  v17.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  kdebug_trace();
  v18 = (_QWORD *)a11[3];
  if (v18)
  {
    if (v18 == a11)
    {
      v2311 = v2310;
      (*(void (**)(_QWORD *, _BYTE *))(*a11 + 24))(a11, v2310);
    }
    else
    {
      v2311 = (_BYTE *)(*(uint64_t (**)(_QWORD *))(*v18 + 16))(v18);
    }
  }
  else
  {
    v2311 = 0;
  }
  v19 = a11[7];
  if (!v19)
    goto LABEL_9;
  if ((_QWORD *)v19 != a11 + 4)
  {
    v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 16))(v19);
LABEL_9:
    v2309 = (_QWORD *)v19;
    goto LABEL_11;
  }
  v2309 = v2308;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v19 + 24))(v19, v2308);
LABEL_11:
  v20 = a11[11];
  if (!v20)
  {
LABEL_14:
    v2307 = (_QWORD *)v20;
    goto LABEL_16;
  }
  if ((_QWORD *)v20 != a11 + 8)
  {
    v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 16))(v20);
    goto LABEL_14;
  }
  v2307 = v2306;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v20 + 24))(v20, v2306);
LABEL_16:
  v21 = off_256934458;
  v22 = strlen(off_256934458);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = v22;
  rep = v17.__d_.__rep_;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = operator new(v25 + 1);
    *(_QWORD *)&__dst[16] = v26 | 0x8000000000000000;
    *(_QWORD *)__dst = v24;
    *(_QWORD *)&__dst[8] = v23;
    goto LABEL_23;
  }
  __dst[23] = v22;
  v24 = __dst;
  if (v22)
LABEL_23:
    memmove(v24, v21, v23);
  v24[v23] = 0;
  v2241 = 0;
  v2240 = 0;
  *(_QWORD *)task_info_out = &v2240;
  v2155 = (uint64_t **)(a3 + 80);
  v27 = sub_23958C234((uint64_t **)(a3 + 80), (uint64_t)task_info_out, __dst);
  sub_23958B6B4((uint64_t)task_info_out, v2240);
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  v28 = &(*v2155)[2 * v27];
  v29 = *v28;
  v30 = (std::__shared_weak_count *)v28[1];
  if (v30)
  {
    p_shared_owners = (unint64_t *)&v30->__shared_owners_;
    do
      v32 = __ldxr(p_shared_owners);
    while (__stxr(v32 + 1, p_shared_owners));
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
  v2146 = *(_QWORD *)(v29 + 40);
  *(_QWORD *)v2237 = 0;
  v2236 = 0;
  v2238 = 0;
  v2234 = 0;
  v2233 = 0;
  v2235 = 0;
  v2229 = 0uLL;
  v2230 = 0;
  v34.i64[0] = 0x80000000800000;
  v34.i64[1] = 0x80000000800000;
  v2231 = (float32x4_t)vdupq_n_s32(0x7F7FFFFFu);
  v2232 = v34;
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
  __p.__r_.__value_.__s.__data_[0] = 0;
  sub_23992A5B4((uint64_t)task_info_out, &__p, 0, 0);
  v35 = (void **)(a5 + 456);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (&v2236 == v35)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (&v2236 != v35)
LABEL_36:
    sub_23945D3D0(&v2236, *(char **)(a5 + 456), *(char **)(a5 + 464), (uint64_t)(*(_QWORD *)(a5 + 464) - *(_QWORD *)(a5 + 456)) >> 3);
LABEL_37:
  sub_2399F9B40(&v2236);
  sub_23945D3D0(&v2233, (char *)v2236, *(char **)v2237, (uint64_t)(*(_QWORD *)v2237 - (_QWORD)v2236) >> 3);
  if (v27 == -1)
  {
    v40 = 0;
    v41 = (*v2155)[0x1FFFFFFFELL];
    v42 = (std::__shared_weak_count *)(*v2155)[0x1FFFFFFFFLL];
    if (!v42)
      goto LABEL_59;
    goto LABEL_54;
  }
  if (!sub_2399F945C((unint64_t **)&v2233))
  {
    v40 = 0;
    v41 = (*v2155)[0x1FFFFFFFELL];
    v42 = (std::__shared_weak_count *)(*v2155)[0x1FFFFFFFFLL];
    if (!v42)
      goto LABEL_59;
LABEL_54:
    v48 = (unint64_t *)&v42->__shared_owners_;
    do
      v49 = __ldxr(v48);
    while (__stxr(v49 + 1, v48));
    do
      v50 = __ldaxr(v48);
    while (__stlxr(v50 - 1, v48));
    if (!v50)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
    }
    goto LABEL_59;
  }
  v36 = off_256934448[0];
  v37 = strlen(off_256934448[0]);
  if (v37 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v38 = v37;
  if (v37 >= 0x17)
  {
    v43 = (v37 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v37 | 7) != 0x17)
      v43 = v37 | 7;
    v44 = v43 + 1;
    v39 = operator new(v43 + 1);
    *(_QWORD *)&task_info_outCnt[16] = v44 | 0x8000000000000000;
    *(_QWORD *)task_info_outCnt = v39;
    *(_QWORD *)&task_info_outCnt[8] = v38;
    goto LABEL_50;
  }
  task_info_outCnt[23] = v37;
  v39 = task_info_outCnt;
  if (v37)
LABEL_50:
    memmove(v39, v36, v38);
  v39[v38] = 0;
  memset(__dst, 0, 24);
  v45 = sub_23958C0D8(v2155, (uint64_t)__dst, task_info_outCnt);
  v46 = v45;
  if ((__dst[23] & 0x80000000) == 0)
  {
    v40 = v45 != -1;
    if ((task_info_outCnt[23] & 0x80000000) == 0)
      goto LABEL_53;
LABEL_412:
    operator delete(*(void **)task_info_outCnt);
    v225 = &(*v2155)[2 * v46];
    v41 = *v225;
    v42 = (std::__shared_weak_count *)v225[1];
    if (v42)
      goto LABEL_54;
    goto LABEL_59;
  }
  operator delete(*(void **)__dst);
  v40 = v46 != -1;
  if ((task_info_outCnt[23] & 0x80000000) != 0)
    goto LABEL_412;
LABEL_53:
  v47 = &(*v2155)[2 * v46];
  v41 = *v47;
  v42 = (std::__shared_weak_count *)v47[1];
  if (v42)
    goto LABEL_54;
LABEL_59:
  v2137 = a1;
  v2162 = a3;
  v51 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v41 + 16))(v41);
  if (v2309 && ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
    goto LABEL_390;
  __val = v40;
  v2163 = a5;
  v2164 = (uint64_t **)a4;
  v2147 = v51;
  if (v51)
  {
    v52 = 0;
    v53 = 0;
    v54 = (char **)(a4 + 3);
    do
    {
      while (1)
      {
        v55 = *(uint64_t **)(v2146 + 8);
        if (!v55)
LABEL_996:
          sub_23941D898("map::at:  key not found");
        while (1)
        {
          while (1)
          {
            v56 = *((unsigned __int16 *)v55 + 16);
            if (v56 <= (unsigned __int16)v53)
              break;
            v55 = (uint64_t *)*v55;
            if (!v55)
              goto LABEL_996;
          }
          if (v56 >= (unsigned __int16)v53)
            break;
          v55 = (uint64_t *)v55[1];
          if (!v55)
            goto LABEL_996;
        }
        if (*((char *)v55 + 63) < 0)
        {
          sub_23941A7F8(&__src, (void *)v55[5], v55[6]);
        }
        else
        {
          __src = *(_OWORD *)(v55 + 5);
          *(_QWORD *)&v2225 = v55[7];
        }
        *(_QWORD *)task_info_outCnt = &__src;
        *((_WORD *)sub_23958C73C((uint64_t **)a4 + 6, (const void **)&__src, (uint64_t)&unk_239EC6E98, (__int128 **)task_info_outCnt)+ 28) = v53;
        if (SBYTE7(v2225) < 0)
        {
          sub_23941A7F8(&v2226, (void *)__src, *((unint64_t *)&__src + 1));
        }
        else
        {
          v2226 = __src;
          v2227 = v2225;
        }
        if (SHIBYTE(v2227) < 0)
          break;
        *(_OWORD *)__dst = v2226;
        *(_QWORD *)&__dst[32] = 0;
        *(_QWORD *)&__dst[40] = 0;
        *(_QWORD *)&__dst[16] = v2227;
        *(_QWORD *)&__dst[24] = &__dst[32];
        if (!*(_BYTE *)(v2163 + 64))
          goto LABEL_80;
LABEL_93:
        v60 = *(uint64_t **)&__dst[32];
        v61 = (uint64_t **)&__dst[32];
        v62 = (uint64_t **)&__dst[32];
        if (*(_QWORD *)&__dst[32])
        {
          while (1)
          {
            while (1)
            {
              v62 = (uint64_t **)v60;
              v63 = *((_DWORD *)v60 + 7);
              if (v63 < 2)
                break;
              v60 = *v62;
              v61 = v62;
              if (!*v62)
                goto LABEL_100;
            }
            if (v63 == 1)
              break;
            v60 = v62[1];
            if (!v60)
            {
              v61 = v62 + 1;
              goto LABEL_100;
            }
          }
          v64 = v62;
        }
        else
        {
LABEL_100:
          v64 = operator new(0x28uLL);
          v64[7] = 1;
          *((_WORD *)v64 + 16) = 0;
          *(_QWORD *)v64 = 0;
          *((_QWORD *)v64 + 1) = 0;
          *((_QWORD *)v64 + 2) = v62;
          *v61 = (uint64_t *)v64;
          v65 = (uint64_t *)v64;
          if (**(_QWORD **)&__dst[24])
          {
            *(_QWORD *)&__dst[24] = **(_QWORD **)&__dst[24];
            v65 = *v61;
          }
          sub_2394213B8(*(uint64_t **)&__dst[32], v65);
          ++*(_QWORD *)&__dst[40];
        }
        *((_WORD *)v64 + 16) = v52;
        *(_WORD *)&task_info_outCnt[4] = 0;
        memset(&task_info_outCnt[8], 0, 40);
        *(_DWORD *)task_info_outCnt = 1;
        v67 = a4[4];
        if (v67 >= a4[5])
        {
          a4[4] = (uint64_t)sub_23958C410(v54, (uint64_t)task_info_outCnt);
          if ((task_info_outCnt[47] & 0x80000000) != 0)
            goto LABEL_119;
        }
        else
        {
          v68 = *(_DWORD *)task_info_outCnt;
          *(_WORD *)(v67 + 4) = *(_WORD *)&task_info_outCnt[4];
          *(_DWORD *)v67 = v68;
          *(_QWORD *)(v67 + 8) = *(_QWORD *)&task_info_outCnt[8];
          v69 = *(_QWORD *)&task_info_outCnt[16];
          *(_QWORD *)(v67 + 16) = *(_QWORD *)&task_info_outCnt[16];
          if (v69)
          {
            v70 = (unint64_t *)(v69 + 8);
            do
              v71 = __ldxr(v70);
            while (__stxr(v71 + 1, v70));
          }
          v72 = (_BYTE *)(v67 + 24);
          if ((task_info_outCnt[47] & 0x80000000) != 0)
          {
            sub_23941A7F8(v72, *(void **)&task_info_outCnt[24], *(unint64_t *)&task_info_outCnt[32]);
          }
          else
          {
            v73 = *(_OWORD *)&task_info_outCnt[24];
            *(_QWORD *)(v67 + 40) = *(_QWORD *)&task_info_outCnt[40];
            *(_OWORD *)v72 = v73;
          }
          a4[4] = v67 + 48;
          a4[4] = v67 + 48;
          if ((task_info_outCnt[47] & 0x80000000) != 0)
LABEL_119:
            operator delete(*(void **)&task_info_outCnt[24]);
        }
        v74 = *(std::__shared_weak_count **)&task_info_outCnt[16];
        if (!*(_QWORD *)&task_info_outCnt[16])
          goto LABEL_124;
        v75 = (unint64_t *)(*(_QWORD *)&task_info_outCnt[16] + 8);
        do
          v76 = __ldaxr(v75);
        while (__stlxr(v76 - 1, v75));
        if (!v76)
        {
          ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
          std::__shared_weak_count::__release_weak(v74);
          ++v52;
          if (*(_BYTE *)(v2163 + 104))
            goto LABEL_125;
        }
        else
        {
LABEL_124:
          ++v52;
          if (*(_BYTE *)(v2163 + 104))
            goto LABEL_125;
        }
LABEL_81:
        if (!*(_BYTE *)(v2163 + 144))
          goto LABEL_82;
LABEL_154:
        v93 = *(uint64_t **)&__dst[32];
        v94 = (uint64_t **)&__dst[32];
        v95 = (uint64_t **)&__dst[32];
        if (*(_QWORD *)&__dst[32])
        {
          while (1)
          {
            while (1)
            {
              v95 = (uint64_t **)v93;
              v96 = *((_DWORD *)v93 + 7);
              if (v96 < 8)
                break;
              v93 = *v95;
              v94 = v95;
              if (!*v95)
                goto LABEL_161;
            }
            if (v96 == 7)
              break;
            v93 = v95[1];
            if (!v93)
            {
              v94 = v95 + 1;
              goto LABEL_161;
            }
          }
          v97 = v95;
        }
        else
        {
LABEL_161:
          v97 = operator new(0x28uLL);
          v97[7] = 7;
          *((_WORD *)v97 + 16) = 0;
          *(_QWORD *)v97 = 0;
          *((_QWORD *)v97 + 1) = 0;
          *((_QWORD *)v97 + 2) = v95;
          *v94 = (uint64_t *)v97;
          v98 = (uint64_t *)v97;
          if (**(_QWORD **)&__dst[24])
          {
            *(_QWORD *)&__dst[24] = **(_QWORD **)&__dst[24];
            v98 = *v94;
          }
          sub_2394213B8(*(uint64_t **)&__dst[32], v98);
          ++*(_QWORD *)&__dst[40];
        }
        *((_WORD *)v97 + 16) = v52;
        *(_WORD *)&task_info_outCnt[4] = 0;
        memset(&task_info_outCnt[8], 0, 40);
        *(_DWORD *)task_info_outCnt = 7;
        v99 = a4[4];
        if (v99 >= a4[5])
        {
          a4[4] = (uint64_t)sub_23958C410(v54, (uint64_t)task_info_outCnt);
          if ((task_info_outCnt[47] & 0x80000000) != 0)
            goto LABEL_177;
        }
        else
        {
          v100 = *(_DWORD *)task_info_outCnt;
          *(_WORD *)(v99 + 4) = *(_WORD *)&task_info_outCnt[4];
          *(_DWORD *)v99 = v100;
          *(_QWORD *)(v99 + 8) = *(_QWORD *)&task_info_outCnt[8];
          v101 = *(_QWORD *)&task_info_outCnt[16];
          *(_QWORD *)(v99 + 16) = *(_QWORD *)&task_info_outCnt[16];
          if (v101)
          {
            v102 = (unint64_t *)(v101 + 8);
            do
              v103 = __ldxr(v102);
            while (__stxr(v103 + 1, v102));
          }
          v104 = (_BYTE *)(v99 + 24);
          if ((task_info_outCnt[47] & 0x80000000) != 0)
          {
            sub_23941A7F8(v104, *(void **)&task_info_outCnt[24], *(unint64_t *)&task_info_outCnt[32]);
          }
          else
          {
            v105 = *(_OWORD *)&task_info_outCnt[24];
            *(_QWORD *)(v99 + 40) = *(_QWORD *)&task_info_outCnt[40];
            *(_OWORD *)v104 = v105;
          }
          a4[4] = v99 + 48;
          a4[4] = v99 + 48;
          if ((task_info_outCnt[47] & 0x80000000) != 0)
LABEL_177:
            operator delete(*(void **)&task_info_outCnt[24]);
        }
        v106 = *(std::__shared_weak_count **)&task_info_outCnt[16];
        if (!*(_QWORD *)&task_info_outCnt[16])
          goto LABEL_182;
        v107 = (unint64_t *)(*(_QWORD *)&task_info_outCnt[16] + 8);
        do
          v108 = __ldaxr(v107);
        while (__stlxr(v108 - 1, v107));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
          std::__shared_weak_count::__release_weak(v106);
          ++v52;
          if (*(_BYTE *)(v2163 + 224))
            goto LABEL_183;
        }
        else
        {
LABEL_182:
          ++v52;
          if (*(_BYTE *)(v2163 + 224))
            goto LABEL_183;
        }
LABEL_83:
        if (!*(_BYTE *)(v2163 + 184))
          goto LABEL_84;
LABEL_212:
        v125 = *(uint64_t **)&__dst[32];
        v126 = (uint64_t **)&__dst[32];
        v127 = (uint64_t **)&__dst[32];
        if (*(_QWORD *)&__dst[32])
        {
          while (1)
          {
            while (1)
            {
              v127 = (uint64_t **)v125;
              v128 = *((_DWORD *)v125 + 7);
              if (v128 < 5)
                break;
              v125 = *v127;
              v126 = v127;
              if (!*v127)
                goto LABEL_219;
            }
            if (v128 == 4)
              break;
            v125 = v127[1];
            if (!v125)
            {
              v126 = v127 + 1;
              goto LABEL_219;
            }
          }
          v129 = v127;
        }
        else
        {
LABEL_219:
          v129 = operator new(0x28uLL);
          v129[7] = 4;
          *((_WORD *)v129 + 16) = 0;
          *(_QWORD *)v129 = 0;
          *((_QWORD *)v129 + 1) = 0;
          *((_QWORD *)v129 + 2) = v127;
          *v126 = (uint64_t *)v129;
          v130 = (uint64_t *)v129;
          if (**(_QWORD **)&__dst[24])
          {
            *(_QWORD *)&__dst[24] = **(_QWORD **)&__dst[24];
            v130 = *v126;
          }
          sub_2394213B8(*(uint64_t **)&__dst[32], v130);
          ++*(_QWORD *)&__dst[40];
        }
        *((_WORD *)v129 + 16) = v52;
        *(_WORD *)&task_info_outCnt[4] = 0;
        memset(&task_info_outCnt[8], 0, 40);
        *(_DWORD *)task_info_outCnt = 4;
        v131 = a4[4];
        if (v131 >= a4[5])
        {
          a4[4] = (uint64_t)sub_23958C410(v54, (uint64_t)task_info_outCnt);
          if ((task_info_outCnt[47] & 0x80000000) != 0)
            goto LABEL_235;
        }
        else
        {
          v132 = *(_DWORD *)task_info_outCnt;
          *(_WORD *)(v131 + 4) = *(_WORD *)&task_info_outCnt[4];
          *(_DWORD *)v131 = v132;
          *(_QWORD *)(v131 + 8) = *(_QWORD *)&task_info_outCnt[8];
          v133 = *(_QWORD *)&task_info_outCnt[16];
          *(_QWORD *)(v131 + 16) = *(_QWORD *)&task_info_outCnt[16];
          if (v133)
          {
            v134 = (unint64_t *)(v133 + 8);
            do
              v135 = __ldxr(v134);
            while (__stxr(v135 + 1, v134));
          }
          v136 = (_BYTE *)(v131 + 24);
          if ((task_info_outCnt[47] & 0x80000000) != 0)
          {
            sub_23941A7F8(v136, *(void **)&task_info_outCnt[24], *(unint64_t *)&task_info_outCnt[32]);
          }
          else
          {
            v137 = *(_OWORD *)&task_info_outCnt[24];
            *(_QWORD *)(v131 + 40) = *(_QWORD *)&task_info_outCnt[40];
            *(_OWORD *)v136 = v137;
          }
          a4[4] = v131 + 48;
          a4[4] = v131 + 48;
          if ((task_info_outCnt[47] & 0x80000000) != 0)
LABEL_235:
            operator delete(*(void **)&task_info_outCnt[24]);
        }
        v138 = *(std::__shared_weak_count **)&task_info_outCnt[16];
        if (!*(_QWORD *)&task_info_outCnt[16])
          goto LABEL_240;
        v139 = (unint64_t *)(*(_QWORD *)&task_info_outCnt[16] + 8);
        do
          v140 = __ldaxr(v139);
        while (__stlxr(v140 - 1, v139));
        if (!v140)
        {
          ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
          std::__shared_weak_count::__release_weak(v138);
          ++v52;
          if (*(_BYTE *)(v2163 + 264))
            goto LABEL_241;
        }
        else
        {
LABEL_240:
          ++v52;
          if (*(_BYTE *)(v2163 + 264))
            goto LABEL_241;
        }
LABEL_85:
        if (!*(_BYTE *)(v2163 + 304))
          goto LABEL_86;
LABEL_270:
        v157 = *(uint64_t **)&__dst[32];
        v158 = (uint64_t **)&__dst[32];
        v159 = (uint64_t **)&__dst[32];
        if (*(_QWORD *)&__dst[32])
        {
          while (1)
          {
            while (1)
            {
              v159 = (uint64_t **)v157;
              v160 = *((_DWORD *)v157 + 7);
              if (v160 < 9)
                break;
              v157 = *v159;
              v158 = v159;
              if (!*v159)
                goto LABEL_277;
            }
            if (v160 == 8)
              break;
            v157 = v159[1];
            if (!v157)
            {
              v158 = v159 + 1;
              goto LABEL_277;
            }
          }
          v161 = v159;
        }
        else
        {
LABEL_277:
          v161 = operator new(0x28uLL);
          v161[7] = 8;
          *((_WORD *)v161 + 16) = 0;
          *(_QWORD *)v161 = 0;
          *((_QWORD *)v161 + 1) = 0;
          *((_QWORD *)v161 + 2) = v159;
          *v158 = (uint64_t *)v161;
          v162 = (uint64_t *)v161;
          if (**(_QWORD **)&__dst[24])
          {
            *(_QWORD *)&__dst[24] = **(_QWORD **)&__dst[24];
            v162 = *v158;
          }
          sub_2394213B8(*(uint64_t **)&__dst[32], v162);
          ++*(_QWORD *)&__dst[40];
        }
        *((_WORD *)v161 + 16) = v52;
        *(_WORD *)&task_info_outCnt[4] = 0;
        memset(&task_info_outCnt[8], 0, 40);
        *(_DWORD *)task_info_outCnt = 8;
        v163 = a4[4];
        if (v163 >= a4[5])
        {
          a4[4] = (uint64_t)sub_23958C410(v54, (uint64_t)task_info_outCnt);
          if ((task_info_outCnt[47] & 0x80000000) != 0)
            goto LABEL_293;
        }
        else
        {
          v164 = *(_DWORD *)task_info_outCnt;
          *(_WORD *)(v163 + 4) = *(_WORD *)&task_info_outCnt[4];
          *(_DWORD *)v163 = v164;
          *(_QWORD *)(v163 + 8) = *(_QWORD *)&task_info_outCnt[8];
          v165 = *(_QWORD *)&task_info_outCnt[16];
          *(_QWORD *)(v163 + 16) = *(_QWORD *)&task_info_outCnt[16];
          if (v165)
          {
            v166 = (unint64_t *)(v165 + 8);
            do
              v167 = __ldxr(v166);
            while (__stxr(v167 + 1, v166));
          }
          v168 = (_BYTE *)(v163 + 24);
          if ((task_info_outCnt[47] & 0x80000000) != 0)
          {
            sub_23941A7F8(v168, *(void **)&task_info_outCnt[24], *(unint64_t *)&task_info_outCnt[32]);
          }
          else
          {
            v169 = *(_OWORD *)&task_info_outCnt[24];
            *(_QWORD *)(v163 + 40) = *(_QWORD *)&task_info_outCnt[40];
            *(_OWORD *)v168 = v169;
          }
          a4[4] = v163 + 48;
          a4[4] = v163 + 48;
          if ((task_info_outCnt[47] & 0x80000000) != 0)
LABEL_293:
            operator delete(*(void **)&task_info_outCnt[24]);
        }
        v170 = *(std::__shared_weak_count **)&task_info_outCnt[16];
        if (!*(_QWORD *)&task_info_outCnt[16])
          goto LABEL_298;
        v171 = (unint64_t *)(*(_QWORD *)&task_info_outCnt[16] + 8);
        do
          v172 = __ldaxr(v171);
        while (__stlxr(v172 - 1, v171));
        if (!v172)
        {
          ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
          std::__shared_weak_count::__release_weak(v170);
          ++v52;
          if (*(_BYTE *)(v2163 + 344))
            goto LABEL_299;
        }
        else
        {
LABEL_298:
          ++v52;
          if (*(_BYTE *)(v2163 + 344))
            goto LABEL_299;
        }
LABEL_87:
        if (!*(_BYTE *)(v2163 + 384))
          goto LABEL_88;
LABEL_328:
        v189 = *(uint64_t **)&__dst[32];
        v190 = (uint64_t **)&__dst[32];
        v191 = (uint64_t **)&__dst[32];
        if (*(_QWORD *)&__dst[32])
        {
          while (1)
          {
            while (1)
            {
              v191 = (uint64_t **)v189;
              v192 = *((_DWORD *)v189 + 7);
              if (v192 < 14)
                break;
              v189 = *v191;
              v190 = v191;
              if (!*v191)
                goto LABEL_335;
            }
            if (v192 == 13)
              break;
            v189 = v191[1];
            if (!v189)
            {
              v190 = v191 + 1;
              goto LABEL_335;
            }
          }
          v193 = v191;
        }
        else
        {
LABEL_335:
          v193 = operator new(0x28uLL);
          v193[7] = 13;
          *((_WORD *)v193 + 16) = 0;
          *(_QWORD *)v193 = 0;
          *((_QWORD *)v193 + 1) = 0;
          *((_QWORD *)v193 + 2) = v191;
          *v190 = (uint64_t *)v193;
          v194 = (uint64_t *)v193;
          if (**(_QWORD **)&__dst[24])
          {
            *(_QWORD *)&__dst[24] = **(_QWORD **)&__dst[24];
            v194 = *v190;
          }
          sub_2394213B8(*(uint64_t **)&__dst[32], v194);
          ++*(_QWORD *)&__dst[40];
        }
        *((_WORD *)v193 + 16) = v52;
        *(_WORD *)&task_info_outCnt[4] = 0;
        memset(&task_info_outCnt[8], 0, 40);
        *(_DWORD *)task_info_outCnt = 13;
        v195 = a4[4];
        if (v195 >= a4[5])
        {
          a4[4] = (uint64_t)sub_23958C410(v54, (uint64_t)task_info_outCnt);
          if ((task_info_outCnt[47] & 0x80000000) != 0)
            goto LABEL_351;
        }
        else
        {
          v196 = *(_DWORD *)task_info_outCnt;
          *(_WORD *)(v195 + 4) = *(_WORD *)&task_info_outCnt[4];
          *(_DWORD *)v195 = v196;
          *(_QWORD *)(v195 + 8) = *(_QWORD *)&task_info_outCnt[8];
          v197 = *(_QWORD *)&task_info_outCnt[16];
          *(_QWORD *)(v195 + 16) = *(_QWORD *)&task_info_outCnt[16];
          if (v197)
          {
            v198 = (unint64_t *)(v197 + 8);
            do
              v199 = __ldxr(v198);
            while (__stxr(v199 + 1, v198));
          }
          v200 = (_BYTE *)(v195 + 24);
          if ((task_info_outCnt[47] & 0x80000000) != 0)
          {
            sub_23941A7F8(v200, *(void **)&task_info_outCnt[24], *(unint64_t *)&task_info_outCnt[32]);
          }
          else
          {
            v201 = *(_OWORD *)&task_info_outCnt[24];
            *(_QWORD *)(v195 + 40) = *(_QWORD *)&task_info_outCnt[40];
            *(_OWORD *)v200 = v201;
          }
          a4[4] = v195 + 48;
          a4[4] = v195 + 48;
          if ((task_info_outCnt[47] & 0x80000000) != 0)
LABEL_351:
            operator delete(*(void **)&task_info_outCnt[24]);
        }
        v202 = *(std::__shared_weak_count **)&task_info_outCnt[16];
        if (!*(_QWORD *)&task_info_outCnt[16])
          goto LABEL_356;
        v203 = (unint64_t *)(*(_QWORD *)&task_info_outCnt[16] + 8);
        do
          v204 = __ldaxr(v203);
        while (__stlxr(v204 - 1, v203));
        if (!v204)
        {
          ((void (*)(std::__shared_weak_count *))v202->__on_zero_shared)(v202);
          std::__shared_weak_count::__release_weak(v202);
          ++v52;
          v57 = (void **)a4;
          v58 = a4[1];
          if (v58 >= a4[2])
            goto LABEL_357;
        }
        else
        {
LABEL_356:
          ++v52;
          v57 = (void **)a4;
          v58 = a4[1];
          if (v58 >= a4[2])
            goto LABEL_357;
        }
LABEL_89:
        if ((__dst[23] & 0x80000000) != 0)
        {
          sub_23941A7F8((_BYTE *)v58, *(void **)__dst, *(unint64_t *)&__dst[8]);
        }
        else
        {
          v59 = *(_OWORD *)__dst;
          *(_QWORD *)(v58 + 16) = *(_QWORD *)&__dst[16];
          *(_OWORD *)v58 = v59;
        }
        *(_QWORD *)(v58 + 32) = 0;
        *(_QWORD *)(v58 + 24) = v58 + 32;
        *(_QWORD *)(v58 + 40) = 0;
        sub_23958CB58((uint64_t *)(v58 + 24), *(int **)&__dst[24], (int *)&__dst[32]);
        a4[1] = v58 + 48;
        a4[1] = v58 + 48;
        v66 = v2311;
        if (v2311)
          goto LABEL_358;
LABEL_359:
        sub_239421038((uint64_t)&__dst[24], *(_QWORD **)&__dst[32]);
        if ((__dst[23] & 0x80000000) == 0)
          goto LABEL_360;
LABEL_63:
        operator delete(*(void **)__dst);
        if ((SBYTE7(v2225) & 0x80000000) == 0)
          goto LABEL_64;
LABEL_361:
        operator delete((void *)__src);
        if (++v53 == v51)
          goto LABEL_367;
      }
      sub_23941A7F8(__dst, (void *)v2226, *((unint64_t *)&v2226 + 1));
      *(_QWORD *)&__dst[32] = 0;
      *(_QWORD *)&__dst[40] = 0;
      *(_QWORD *)&__dst[24] = &__dst[32];
      if (SHIBYTE(v2227) < 0)
      {
        operator delete((void *)v2226);
        if (*(_BYTE *)(v2163 + 64))
          goto LABEL_93;
      }
      else if (*(_BYTE *)(v2163 + 64))
      {
        goto LABEL_93;
      }
LABEL_80:
      if (!*(_BYTE *)(v2163 + 104))
        goto LABEL_81;
LABEL_125:
      v77 = *(uint64_t **)&__dst[32];
      v78 = (uint64_t **)&__dst[32];
      v79 = (uint64_t **)&__dst[32];
      if (*(_QWORD *)&__dst[32])
      {
        while (1)
        {
          while (1)
          {
            v79 = (uint64_t **)v77;
            v80 = *((_DWORD *)v77 + 7);
            if (v80 < 3)
              break;
            v77 = *v79;
            v78 = v79;
            if (!*v79)
              goto LABEL_132;
          }
          if (v80 == 2)
            break;
          v77 = v79[1];
          if (!v77)
          {
            v78 = v79 + 1;
            goto LABEL_132;
          }
        }
        v81 = v79;
      }
      else
      {
LABEL_132:
        v81 = operator new(0x28uLL);
        v81[7] = 2;
        *((_WORD *)v81 + 16) = 0;
        *(_QWORD *)v81 = 0;
        *((_QWORD *)v81 + 1) = 0;
        *((_QWORD *)v81 + 2) = v79;
        *v78 = (uint64_t *)v81;
        v82 = (uint64_t *)v81;
        if (**(_QWORD **)&__dst[24])
        {
          *(_QWORD *)&__dst[24] = **(_QWORD **)&__dst[24];
          v82 = *v78;
        }
        sub_2394213B8(*(uint64_t **)&__dst[32], v82);
        ++*(_QWORD *)&__dst[40];
      }
      *((_WORD *)v81 + 16) = v52;
      *(_WORD *)&task_info_outCnt[4] = 0;
      memset(&task_info_outCnt[8], 0, 40);
      *(_DWORD *)task_info_outCnt = 2;
      v83 = a4[4];
      if (v83 >= a4[5])
      {
        a4[4] = (uint64_t)sub_23958C410(v54, (uint64_t)task_info_outCnt);
        if ((task_info_outCnt[47] & 0x80000000) != 0)
          goto LABEL_148;
      }
      else
      {
        v84 = *(_DWORD *)task_info_outCnt;
        *(_WORD *)(v83 + 4) = *(_WORD *)&task_info_outCnt[4];
        *(_DWORD *)v83 = v84;
        *(_QWORD *)(v83 + 8) = *(_QWORD *)&task_info_outCnt[8];
        v85 = *(_QWORD *)&task_info_outCnt[16];
        *(_QWORD *)(v83 + 16) = *(_QWORD *)&task_info_outCnt[16];
        if (v85)
        {
          v86 = (unint64_t *)(v85 + 8);
          do
            v87 = __ldxr(v86);
          while (__stxr(v87 + 1, v86));
        }
        v88 = (_BYTE *)(v83 + 24);
        if ((task_info_outCnt[47] & 0x80000000) != 0)
        {
          sub_23941A7F8(v88, *(void **)&task_info_outCnt[24], *(unint64_t *)&task_info_outCnt[32]);
        }
        else
        {
          v89 = *(_OWORD *)&task_info_outCnt[24];
          *(_QWORD *)(v83 + 40) = *(_QWORD *)&task_info_outCnt[40];
          *(_OWORD *)v88 = v89;
        }
        a4[4] = v83 + 48;
        a4[4] = v83 + 48;
        if ((task_info_outCnt[47] & 0x80000000) != 0)
LABEL_148:
          operator delete(*(void **)&task_info_outCnt[24]);
      }
      v90 = *(std::__shared_weak_count **)&task_info_outCnt[16];
      if (!*(_QWORD *)&task_info_outCnt[16])
        goto LABEL_153;
      v91 = (unint64_t *)(*(_QWORD *)&task_info_outCnt[16] + 8);
      do
        v92 = __ldaxr(v91);
      while (__stlxr(v92 - 1, v91));
      if (!v92)
      {
        ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
        std::__shared_weak_count::__release_weak(v90);
        ++v52;
        if (*(_BYTE *)(v2163 + 144))
          goto LABEL_154;
      }
      else
      {
LABEL_153:
        ++v52;
        if (*(_BYTE *)(v2163 + 144))
          goto LABEL_154;
      }
LABEL_82:
      if (!*(_BYTE *)(v2163 + 224))
        goto LABEL_83;
LABEL_183:
      v109 = *(uint64_t **)&__dst[32];
      v110 = (uint64_t **)&__dst[32];
      v111 = (uint64_t **)&__dst[32];
      if (*(_QWORD *)&__dst[32])
      {
        while (1)
        {
          while (1)
          {
            v111 = (uint64_t **)v109;
            v112 = *((_DWORD *)v109 + 7);
            if (v112 < 4)
              break;
            v109 = *v111;
            v110 = v111;
            if (!*v111)
              goto LABEL_190;
          }
          if (v112 == 3)
            break;
          v109 = v111[1];
          if (!v109)
          {
            v110 = v111 + 1;
            goto LABEL_190;
          }
        }
        v113 = v111;
      }
      else
      {
LABEL_190:
        v113 = operator new(0x28uLL);
        v113[7] = 3;
        *((_WORD *)v113 + 16) = 0;
        *(_QWORD *)v113 = 0;
        *((_QWORD *)v113 + 1) = 0;
        *((_QWORD *)v113 + 2) = v111;
        *v110 = (uint64_t *)v113;
        v114 = (uint64_t *)v113;
        if (**(_QWORD **)&__dst[24])
        {
          *(_QWORD *)&__dst[24] = **(_QWORD **)&__dst[24];
          v114 = *v110;
        }
        sub_2394213B8(*(uint64_t **)&__dst[32], v114);
        ++*(_QWORD *)&__dst[40];
      }
      *((_WORD *)v113 + 16) = v52;
      *(_WORD *)&task_info_outCnt[4] = 0;
      memset(&task_info_outCnt[8], 0, 40);
      *(_DWORD *)task_info_outCnt = 3;
      v115 = a4[4];
      if (v115 >= a4[5])
      {
        a4[4] = (uint64_t)sub_23958C410(v54, (uint64_t)task_info_outCnt);
        if ((task_info_outCnt[47] & 0x80000000) != 0)
          goto LABEL_206;
      }
      else
      {
        v116 = *(_DWORD *)task_info_outCnt;
        *(_WORD *)(v115 + 4) = *(_WORD *)&task_info_outCnt[4];
        *(_DWORD *)v115 = v116;
        *(_QWORD *)(v115 + 8) = *(_QWORD *)&task_info_outCnt[8];
        v117 = *(_QWORD *)&task_info_outCnt[16];
        *(_QWORD *)(v115 + 16) = *(_QWORD *)&task_info_outCnt[16];
        if (v117)
        {
          v118 = (unint64_t *)(v117 + 8);
          do
            v119 = __ldxr(v118);
          while (__stxr(v119 + 1, v118));
        }
        v120 = (_BYTE *)(v115 + 24);
        if ((task_info_outCnt[47] & 0x80000000) != 0)
        {
          sub_23941A7F8(v120, *(void **)&task_info_outCnt[24], *(unint64_t *)&task_info_outCnt[32]);
        }
        else
        {
          v121 = *(_OWORD *)&task_info_outCnt[24];
          *(_QWORD *)(v115 + 40) = *(_QWORD *)&task_info_outCnt[40];
          *(_OWORD *)v120 = v121;
        }
        a4[4] = v115 + 48;
        a4[4] = v115 + 48;
        if ((task_info_outCnt[47] & 0x80000000) != 0)
LABEL_206:
          operator delete(*(void **)&task_info_outCnt[24]);
      }
      v122 = *(std::__shared_weak_count **)&task_info_outCnt[16];
      if (!*(_QWORD *)&task_info_outCnt[16])
        goto LABEL_211;
      v123 = (unint64_t *)(*(_QWORD *)&task_info_outCnt[16] + 8);
      do
        v124 = __ldaxr(v123);
      while (__stlxr(v124 - 1, v123));
      if (!v124)
      {
        ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
        std::__shared_weak_count::__release_weak(v122);
        ++v52;
        if (*(_BYTE *)(v2163 + 184))
          goto LABEL_212;
      }
      else
      {
LABEL_211:
        ++v52;
        if (*(_BYTE *)(v2163 + 184))
          goto LABEL_212;
      }
LABEL_84:
      if (!*(_BYTE *)(v2163 + 264))
        goto LABEL_85;
LABEL_241:
      v141 = *(uint64_t **)&__dst[32];
      v142 = (uint64_t **)&__dst[32];
      v143 = (uint64_t **)&__dst[32];
      if (*(_QWORD *)&__dst[32])
      {
        while (1)
        {
          while (1)
          {
            v143 = (uint64_t **)v141;
            v144 = *((_DWORD *)v141 + 7);
            if (v144 < 6)
              break;
            v141 = *v143;
            v142 = v143;
            if (!*v143)
              goto LABEL_248;
          }
          if (v144 == 5)
            break;
          v141 = v143[1];
          if (!v141)
          {
            v142 = v143 + 1;
            goto LABEL_248;
          }
        }
        v145 = v143;
      }
      else
      {
LABEL_248:
        v145 = operator new(0x28uLL);
        v145[7] = 5;
        *((_WORD *)v145 + 16) = 0;
        *(_QWORD *)v145 = 0;
        *((_QWORD *)v145 + 1) = 0;
        *((_QWORD *)v145 + 2) = v143;
        *v142 = (uint64_t *)v145;
        v146 = (uint64_t *)v145;
        if (**(_QWORD **)&__dst[24])
        {
          *(_QWORD *)&__dst[24] = **(_QWORD **)&__dst[24];
          v146 = *v142;
        }
        sub_2394213B8(*(uint64_t **)&__dst[32], v146);
        ++*(_QWORD *)&__dst[40];
      }
      *((_WORD *)v145 + 16) = v52;
      *(_WORD *)&task_info_outCnt[4] = 0;
      memset(&task_info_outCnt[8], 0, 40);
      *(_DWORD *)task_info_outCnt = 5;
      v147 = a4[4];
      if (v147 >= a4[5])
      {
        a4[4] = (uint64_t)sub_23958C410(v54, (uint64_t)task_info_outCnt);
        if ((task_info_outCnt[47] & 0x80000000) != 0)
          goto LABEL_264;
      }
      else
      {
        v148 = *(_DWORD *)task_info_outCnt;
        *(_WORD *)(v147 + 4) = *(_WORD *)&task_info_outCnt[4];
        *(_DWORD *)v147 = v148;
        *(_QWORD *)(v147 + 8) = *(_QWORD *)&task_info_outCnt[8];
        v149 = *(_QWORD *)&task_info_outCnt[16];
        *(_QWORD *)(v147 + 16) = *(_QWORD *)&task_info_outCnt[16];
        if (v149)
        {
          v150 = (unint64_t *)(v149 + 8);
          do
            v151 = __ldxr(v150);
          while (__stxr(v151 + 1, v150));
        }
        v152 = (_BYTE *)(v147 + 24);
        if ((task_info_outCnt[47] & 0x80000000) != 0)
        {
          sub_23941A7F8(v152, *(void **)&task_info_outCnt[24], *(unint64_t *)&task_info_outCnt[32]);
        }
        else
        {
          v153 = *(_OWORD *)&task_info_outCnt[24];
          *(_QWORD *)(v147 + 40) = *(_QWORD *)&task_info_outCnt[40];
          *(_OWORD *)v152 = v153;
        }
        a4[4] = v147 + 48;
        a4[4] = v147 + 48;
        if ((task_info_outCnt[47] & 0x80000000) != 0)
LABEL_264:
          operator delete(*(void **)&task_info_outCnt[24]);
      }
      v154 = *(std::__shared_weak_count **)&task_info_outCnt[16];
      if (!*(_QWORD *)&task_info_outCnt[16])
        goto LABEL_269;
      v155 = (unint64_t *)(*(_QWORD *)&task_info_outCnt[16] + 8);
      do
        v156 = __ldaxr(v155);
      while (__stlxr(v156 - 1, v155));
      if (!v156)
      {
        ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
        std::__shared_weak_count::__release_weak(v154);
        ++v52;
        if (*(_BYTE *)(v2163 + 304))
          goto LABEL_270;
      }
      else
      {
LABEL_269:
        ++v52;
        if (*(_BYTE *)(v2163 + 304))
          goto LABEL_270;
      }
LABEL_86:
      if (!*(_BYTE *)(v2163 + 344))
        goto LABEL_87;
LABEL_299:
      v173 = *(uint64_t **)&__dst[32];
      v174 = (uint64_t **)&__dst[32];
      v175 = (uint64_t **)&__dst[32];
      if (*(_QWORD *)&__dst[32])
      {
        while (1)
        {
          while (1)
          {
            v175 = (uint64_t **)v173;
            v176 = *((_DWORD *)v173 + 7);
            if (v176 < 12)
              break;
            v173 = *v175;
            v174 = v175;
            if (!*v175)
              goto LABEL_306;
          }
          if (v176 == 11)
            break;
          v173 = v175[1];
          if (!v173)
          {
            v174 = v175 + 1;
            goto LABEL_306;
          }
        }
        v177 = v175;
      }
      else
      {
LABEL_306:
        v177 = operator new(0x28uLL);
        v177[7] = 11;
        *((_WORD *)v177 + 16) = 0;
        *(_QWORD *)v177 = 0;
        *((_QWORD *)v177 + 1) = 0;
        *((_QWORD *)v177 + 2) = v175;
        *v174 = (uint64_t *)v177;
        v178 = (uint64_t *)v177;
        if (**(_QWORD **)&__dst[24])
        {
          *(_QWORD *)&__dst[24] = **(_QWORD **)&__dst[24];
          v178 = *v174;
        }
        sub_2394213B8(*(uint64_t **)&__dst[32], v178);
        ++*(_QWORD *)&__dst[40];
      }
      *((_WORD *)v177 + 16) = v52;
      *(_WORD *)&task_info_outCnt[4] = 0;
      memset(&task_info_outCnt[8], 0, 40);
      *(_DWORD *)task_info_outCnt = 11;
      v179 = a4[4];
      if (v179 >= a4[5])
      {
        a4[4] = (uint64_t)sub_23958C410(v54, (uint64_t)task_info_outCnt);
        if ((task_info_outCnt[47] & 0x80000000) != 0)
          goto LABEL_322;
      }
      else
      {
        v180 = *(_DWORD *)task_info_outCnt;
        *(_WORD *)(v179 + 4) = *(_WORD *)&task_info_outCnt[4];
        *(_DWORD *)v179 = v180;
        *(_QWORD *)(v179 + 8) = *(_QWORD *)&task_info_outCnt[8];
        v181 = *(_QWORD *)&task_info_outCnt[16];
        *(_QWORD *)(v179 + 16) = *(_QWORD *)&task_info_outCnt[16];
        if (v181)
        {
          v182 = (unint64_t *)(v181 + 8);
          do
            v183 = __ldxr(v182);
          while (__stxr(v183 + 1, v182));
        }
        v184 = (_BYTE *)(v179 + 24);
        if ((task_info_outCnt[47] & 0x80000000) != 0)
        {
          sub_23941A7F8(v184, *(void **)&task_info_outCnt[24], *(unint64_t *)&task_info_outCnt[32]);
        }
        else
        {
          v185 = *(_OWORD *)&task_info_outCnt[24];
          *(_QWORD *)(v179 + 40) = *(_QWORD *)&task_info_outCnt[40];
          *(_OWORD *)v184 = v185;
        }
        a4[4] = v179 + 48;
        a4[4] = v179 + 48;
        if ((task_info_outCnt[47] & 0x80000000) != 0)
LABEL_322:
          operator delete(*(void **)&task_info_outCnt[24]);
      }
      v186 = *(std::__shared_weak_count **)&task_info_outCnt[16];
      if (!*(_QWORD *)&task_info_outCnt[16])
        goto LABEL_327;
      v187 = (unint64_t *)(*(_QWORD *)&task_info_outCnt[16] + 8);
      do
        v188 = __ldaxr(v187);
      while (__stlxr(v188 - 1, v187));
      if (!v188)
      {
        ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
        std::__shared_weak_count::__release_weak(v186);
        ++v52;
        if (*(_BYTE *)(v2163 + 384))
          goto LABEL_328;
      }
      else
      {
LABEL_327:
        ++v52;
        if (*(_BYTE *)(v2163 + 384))
          goto LABEL_328;
      }
LABEL_88:
      v57 = (void **)a4;
      v58 = a4[1];
      if (v58 < a4[2])
        goto LABEL_89;
LABEL_357:
      a4[1] = (uint64_t)sub_23958C8D8(v57, (uint64_t)__dst);
      v66 = v2311;
      if (!v2311)
        goto LABEL_359;
LABEL_358:
      task_info_outCnt[23] = 0;
      task_info_outCnt[0] = 0;
      v205 = (double)(unint64_t)(v53 + 1) * 10.0 / (double)v51;
      *(float *)&v2271 = v205;
      (*(void (**)(_BYTE *, __int128 *, _BYTE *))(*(_QWORD *)v66 + 48))(v66, &v2271, task_info_outCnt);
      if ((task_info_outCnt[23] & 0x80000000) == 0)
        goto LABEL_359;
      operator delete(*(void **)task_info_outCnt);
      sub_239421038((uint64_t)&__dst[24], *(_QWORD **)&__dst[32]);
      if ((__dst[23] & 0x80000000) != 0)
        goto LABEL_63;
LABEL_360:
      if (SBYTE7(v2225) < 0)
        goto LABEL_361;
LABEL_64:
      ++v53;
    }
    while (v53 != v51);
  }
LABEL_367:
  v206 = v2163;
  if (v2309)
  {
    if (((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
      goto LABEL_390;
  }
  v207 = 0;
  memset(task_info_outCnt, 0, 32);
  __src = 0u;
  v2225 = 0u;
  memset(__dst, 0, 20);
  *(_QWORD *)&v208 = 0x80000000800000;
  *((_QWORD *)&v208 + 1) = 0x80000000800000;
  *(int32x4_t *)&__dst[32] = vdupq_n_s32(0x7F7FFFFFu);
  *(_OWORD *)&__dst[48] = v208;
  if (!__val)
  {
LABEL_372:
    v209 = v2311;
    if (!v2311)
      goto LABEL_376;
    goto LABEL_373;
  }
  if (sub_23992E814(v2162, &v2229))
  {
    v207 = sub_23992E6A0(v2162, task_info_outCnt);
    goto LABEL_372;
  }
  v207 = 0;
  v209 = v2311;
  if (!v2311)
    goto LABEL_376;
LABEL_373:
  HIBYTE(v2272) = 0;
  LOBYTE(v2271) = 0;
  LODWORD(v2268) = 1101004800;
  (*(void (**)(_BYTE *, __int128 *, __int128 *))(*(_QWORD *)v209 + 48))(v209, &v2268, &v2271);
  if (SHIBYTE(v2272) < 0)
    operator delete((void *)v2271);
LABEL_376:
  if (v2309 && ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
    goto LABEL_390;
  if (v207 && sub_23992E814(v2137, (float32x4_t *)__dst))
  {
    v210 = sub_23992E6A0(v2137, &__src);
    if (!a7)
      goto LABEL_384;
    goto LABEL_383;
  }
  v210 = 0;
  if (a7)
  {
LABEL_383:
    v211 = v2229;
    *(_DWORD *)(a6 + 176) = v2230;
    v212 = v2232;
    *(float32x4_t *)(a6 + 192) = v2231;
    *(float32x4_t *)(a6 + 208) = v212;
    v213 = *(_OWORD *)&task_info_outCnt[16];
    *(_OWORD *)(a6 + 128) = *(_OWORD *)task_info_outCnt;
    *(_OWORD *)(a6 + 144) = v213;
    *(float32x4_t *)(a6 + 160) = v211;
    *(_DWORD *)(a6 + 64) = *(_DWORD *)&__dst[16];
    *(_OWORD *)(a6 + 48) = *(_OWORD *)__dst;
    v214 = *(_OWORD *)&__dst[48];
    *(_OWORD *)(a6 + 80) = *(_OWORD *)&__dst[32];
    *(_OWORD *)(a6 + 96) = v214;
    v215 = __src;
    *(_OWORD *)(a6 + 24) = v2225;
    *(_OWORD *)(a6 + 8) = v215;
  }
LABEL_384:
  if (v2311
    && (HIBYTE(v2272) = 0,
        LOBYTE(v2271) = 0,
        LODWORD(v2268) = 1106247680,
        (*(void (**)(_BYTE *, __int128 *, __int128 *))(*(_QWORD *)v2311 + 48))(v2311, &v2268, &v2271),
        SHIBYTE(v2272) < 0))
  {
    operator delete((void *)v2271);
    v216 = v2309;
    if (!v2309)
      goto LABEL_415;
  }
  else
  {
    v216 = v2309;
    if (!v2309)
      goto LABEL_415;
  }
  if (((*(uint64_t (**)(_QWORD *))(*v216 + 48))(v216) & 1) != 0
    || v2309 && ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
  {
LABEL_390:
    sub_23992A6A0((uint64_t)task_info_out);
    v217 = 0;
    goto LABEL_391;
  }
LABEL_415:
  sub_23992A6A0((uint64_t)task_info_out);
  sub_2399FC9C0();
  kdebug_trace();
  v226.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (a7)
    *(double *)(a6 + 280) = (double)(v226.__d_.__rep_ - rep) / 1000000.0 + *(double *)(a6 + 280);
  v227.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  kdebug_trace();
  sub_23992654C(&v2222, v2147);
  sub_239926614(&v2220, v2147);
  sub_2399266DC(&v2218, v2147);
  v228 = *(_DWORD *)(v2163 + 56);
  v229 = *(_QWORD *)(v2162 + 160) - *(_QWORD *)(v2162 + 152);
  *((_BYTE *)&v2217.__r_.__value_.__s + 23) = 0;
  v2217.__r_.__value_.__s.__data_[0] = 0;
  v230 = v228 * (unint64_t)v228;
  v231 = 8 * v230;
  v232 = v230 * v2147;
  v2122 = v230;
  v2123 = 16 * v230;
  v2145 = v228;
  v2124 = 12 * v230;
  sub_23992A5B4((uint64_t)task_info_out, &v2217, 16 * v230 + 21 * v230 * v2147 + 12 * v230 + 2 * (4 * ((v229 >> 1) + (v229 >> 2)) + v229), v229 + 16 * v230 + 8 * v230 + 4 * (v229 + v230) + 4 * ((v229 >> 1) + (v229 >> 2)));
  v2117 = v231;
  if (SHIBYTE(v2217.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v2217.__r_.__value_.__l.__data_);
    if (!v2147)
      goto LABEL_435;
  }
  else if (!v2147)
  {
    goto LABEL_435;
  }
  v233 = 8;
  v234 = v2147;
  do
  {
    v235 = (char *)v2222 + v233;
    *((_DWORD *)v235 - 1) = v2145;
    *(_DWORD *)v235 = v2145;
    *((_DWORD *)v235 + 1) = 1;
    v236 = *((_QWORD *)v235 + 1);
    if (v236)
      MEMORY[0x23B83E2F8](v236, 0x1000C8077774924);
    *((_QWORD *)v235 + 1) = operator new[]();
    v237 = (char *)v2220 + v233;
    *((_DWORD *)v237 - 1) = v2145;
    *(_DWORD *)v237 = v2145;
    v238 = 1;
    *((_DWORD *)v237 + 1) = 1;
    v239 = *((_QWORD *)v237 + 1);
    if (v239)
    {
      MEMORY[0x23B83E2F8](v239 - 16, 0x1000C80451B5BE8);
      v240 = *((_DWORD *)v237 - 1);
      v241 = *(_DWORD *)v237;
      v238 = *((_DWORD *)v237 + 1);
    }
    else
    {
      v241 = v2145;
      v240 = v2145;
    }
    v242 = v241 * v240 * v238;
    v243 = (_QWORD *)operator new[]();
    *v243 = 16;
    v243[1] = v242;
    v244 = v243 + 2;
    if ((_DWORD)v242)
      bzero(v243 + 2, 16 * v242);
    *((_QWORD *)v237 + 1) = v244;
    v245 = (char *)v2218 + v233;
    v246 = v2145;
    *((_DWORD *)v245 - 1) = v2145;
    *(_DWORD *)v245 = v2145;
    v247 = 1;
    *((_DWORD *)v245 + 1) = 1;
    v248 = *((_QWORD *)v245 + 1);
    if (v248)
    {
      MEMORY[0x23B83E2F8](v248, 0x1000C8052888210);
      v246 = *((_DWORD *)v245 - 1);
      v249 = *(_DWORD *)v245;
      v247 = *((_DWORD *)v245 + 1);
    }
    else
    {
      v249 = v2145;
    }
    v250 = v249 * v246 * v247;
    v251 = (void *)operator new[]();
    v252 = v251;
    if ((_DWORD)v250)
      memset(v251, 255, 4 * v250);
    *((_QWORD *)v245 + 1) = v252;
    v233 += 24;
    --v234;
    v206 = v2163;
  }
  while (v234);
LABEL_435:
  if ((v210 & 1) == 0)
  {
    v255 = 0;
    v254 = v2164;
    goto LABEL_447;
  }
  v253 = (uint64_t)v2307;
  v254 = v2164;
  if (v2307)
  {
    if (v2307 == v2306)
    {
      v2305 = v2304;
      (*(void (**)(_QWORD *, _QWORD *))(v2306[0] + 24))(v2306, v2304);
      goto LABEL_442;
    }
    v253 = (*(uint64_t (**)(void))(*v2307 + 16))();
  }
  v2305 = (_QWORD *)v253;
LABEL_442:
  v255 = sub_2399D1B74(v2162, &v2222, (uint64_t *)&v2220, (uint64_t *)&v2218, (uint64_t)&v2236, a6, a7, (uint64_t *)(v206 + 480), v2304, v2127 != 0);
  v256 = v2305;
  if (v2305 == v2304)
  {
    v257 = 4;
    v256 = v2304;
    goto LABEL_446;
  }
  if (v2305)
  {
    v257 = 5;
LABEL_446:
    (*(void (**)(void))(*v256 + 8 * v257))();
  }
LABEL_447:
  if (v2311)
  {
    __dst[23] = 0;
    __dst[0] = 0;
    *(_DWORD *)task_info_outCnt = 1113325568;
    (*(void (**)(_BYTE *, _BYTE *, _BYTE *))(*(_QWORD *)v2311 + 48))(v2311, task_info_outCnt, __dst);
    if ((__dst[23] & 0x80000000) != 0)
      operator delete(*(void **)__dst);
  }
  if (!v2309 || ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) == 0)
  {
    sub_23992A6A0((uint64_t)task_info_out);
    if (!v255)
      goto LABEL_472;
    sub_2399FC9C0();
    kdebug_trace();
    v258.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    if (a7)
      *(double *)(a6 + 288) = (double)(v258.__d_.__rep_ - v227.__d_.__rep_) / 1000000.0;
    v259.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    sub_2399267A4(&v2215, v2147);
    v2213 = 0;
    v2212 = 0;
    v2214 = 0;
    v2210 = 0;
    v2209 = 0;
    v2211 = 0;
    kdebug_trace();
    memset(__dst, 0, 40);
    v2208 = 0uLL;
    *(std::chrono::system_clock::time_point *)&__dst[24] = std::chrono::system_clock::now();
    *(_QWORD *)&__dst[40] = sub_2399FCAC0();
    *(_DWORD *)task_info_outCnt = 93;
    if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, (mach_msg_type_number_t *)task_info_outCnt))
    {
      *(_QWORD *)&__dst[48] = v2241;
      *(_QWORD *)&__dst[56] = *(_QWORD *)task_info_out;
      v2202 = v2246;
      *((_QWORD *)&v2203 + 1) = SHIDWORD(v2240);
      *(_QWORD *)&v2203 = v2244;
      *(_QWORD *)&__dst[64] = v2245;
    }
    v2183.__r_.__value_.__r.__words[0] = 0;
    sub_23993C8E0(&__src, v2137, &v2183, &v2233);
    v2121 = 4 * v2122;
    if ((sub_23993C9D4((uint64_t)&__src) & 1) == 0)
    {
      if (a7)
        *(_DWORD *)(a6 + 384) = 16;
      v278 = 0.0;
      if (v2307)
      {
        HIBYTE(v2241) = 0;
        LOBYTE(task_info_out[0]) = 0;
        *(_DWORD *)task_info_outCnt = 16;
        (*(void (**)(_QWORD *, _BYTE *, integer_t *))(*v2307 + 48))(v2307, task_info_outCnt, task_info_out);
        if (SHIBYTE(v2241) < 0)
          operator delete(*(void **)task_info_out);
      }
      v279 = 1;
      v280 = 0.0;
      v281 = 1;
      goto LABEL_1838;
    }
    sub_23992DD40(v2162);
    v261 = v260 * *(float *)(v206 + 36);
    v2119 = (uint64_t)(*(_QWORD *)(v2137 + 160) - *(_QWORD *)(v2137 + 152)) >> 2;
    if (v2147)
    {
      for (i = 0; i != v2147; ++i)
      {
        v263 = (char *)v2215 + 24 * i;
        v264 = v2145;
        *((_DWORD *)v263 + 1) = v2145;
        v265 = v263 + 4;
        *((_DWORD *)v265 + 1) = v2145;
        v266 = 1;
        *((_DWORD *)v265 + 2) = 1;
        v268 = (uint64_t *)(v265 + 12);
        v267 = *(_QWORD *)(v265 + 12);
        if (v267)
        {
          MEMORY[0x23B83E2F8](v267, 0x1000C80451B5BE8);
          v264 = *(_DWORD *)v265;
          v269 = *((_DWORD *)v265 + 1);
          v266 = *((_DWORD *)v265 + 2);
        }
        else
        {
          v269 = v2145;
        }
        v270 = v269 * v264 * v266;
        v254 = v2164;
        v271 = operator new[]();
        if ((_DWORD)v270)
        {
          v273 = (v270 - 1) & 0xFFFFFFFFFFFFFFFLL;
          v274 = (_QWORD *)v271;
          if (v273 < 7)
            goto LABEL_2921;
          v275 = v273 + 1;
          v274 = (_QWORD *)(v271 + 16 * (v275 & 0x1FFFFFFFFFFFFFF8));
          v276 = (_OWORD *)(v271 + 64);
          v277 = v275 & 0x1FFFFFFFFFFFFFF8;
          do
          {
            *(v276 - 2) = xmmword_239F02830;
            *(v276 - 1) = xmmword_239F02830;
            *(v276 - 4) = xmmword_239F02830;
            *(v276 - 3) = xmmword_239F02830;
            v276[2] = xmmword_239F02830;
            v276[3] = xmmword_239F02830;
            *v276 = xmmword_239F02830;
            v276[1] = xmmword_239F02830;
            v276 += 8;
            v277 -= 8;
          }
          while (v277);
          if (v275 != (v275 & 0x1FFFFFFFFFFFFFF8))
          {
LABEL_2921:
            do
            {
              *v274 = -1082130432;
              v274[1] = 0;
              v274 += 2;
            }
            while (v274 != (_QWORD *)(v271 + 16 * v270));
          }
        }
        *v268 = v271;
      }
      v282 = 0;
      LOBYTE(v283) = 1;
      v284 = (int8x16_t)xmmword_239EC7400;
      v285 = (int8x16_t)xmmword_239EC73F0;
      v286 = (int8x16_t)xmmword_239EC7410;
      v287 = (int8x16_t)xmmword_239EC7420;
      while (1)
      {
        v288 = (char *)v2222 + 24 * v282;
        v289 = (*((_DWORD *)v288 + 2) * *((_DWORD *)v288 + 1));
        if (!(_DWORD)v289)
        {
          v291 = 0;
          goto LABEL_496;
        }
        v290 = (int8x16_t *)*((_QWORD *)v2222 + 3 * v282 + 2);
        if (v289 < 8)
        {
          v291 = 0;
          v292 = 0;
LABEL_494:
          v329 = v289 - v292;
          v330 = &v290->u8[v292];
          do
          {
            v331 = *v330++;
            v291 += v331;
            --v329;
          }
          while (v329);
          goto LABEL_496;
        }
        if (v289 >= 0x20)
        {
          v293 = 0uLL;
          v292 = v289 & 0xFFFFFFE0;
          v294 = 0uLL;
          v295 = v290 + 1;
          v296 = 0uLL;
          v297 = v292;
          v298 = 0uLL;
          v299 = 0uLL;
          v300 = 0uLL;
          v301 = 0uLL;
          v302 = 0uLL;
          v303 = 0uLL;
          v304 = 0uLL;
          v305 = 0uLL;
          v306 = 0uLL;
          v307 = 0uLL;
          v308 = 0uLL;
          v309 = 0uLL;
          v310 = 0uLL;
          do
          {
            v311 = v295[-1];
            v312 = (uint32x4_t)vqtbl1q_s8(v311, v284);
            v313 = (uint32x4_t)vqtbl1q_s8(v311, v285);
            v314 = (uint32x4_t)vqtbl1q_s8(v311, v286);
            v315 = (uint32x4_t)vqtbl1q_s8(v311, v287);
            v316 = (uint32x4_t)vqtbl1q_s8(*v295, v284);
            v317 = (uint32x4_t)vqtbl1q_s8(*v295, v285);
            v318 = (uint32x4_t)vqtbl1q_s8(*v295, v286);
            v319 = (uint32x4_t)vqtbl1q_s8(*v295, v287);
            v294 = (int64x2_t)vaddw_high_u32((uint64x2_t)v294, v313);
            v298 = (int64x2_t)vaddw_high_u32((uint64x2_t)v298, v312);
            v296 = (int64x2_t)vaddw_u32((uint64x2_t)v296, *(uint32x2_t *)v312.i8);
            v293 = (int64x2_t)vaddw_u32((uint64x2_t)v293, *(uint32x2_t *)v313.i8);
            v299 = (int64x2_t)vaddw_u32((uint64x2_t)v299, *(uint32x2_t *)v314.i8);
            v300 = (int64x2_t)vaddw_high_u32((uint64x2_t)v300, v314);
            v301 = (int64x2_t)vaddw_u32((uint64x2_t)v301, *(uint32x2_t *)v315.i8);
            v302 = (int64x2_t)vaddw_high_u32((uint64x2_t)v302, v315);
            v304 = (int64x2_t)vaddw_high_u32((uint64x2_t)v304, v317);
            v306 = (int64x2_t)vaddw_high_u32((uint64x2_t)v306, v316);
            v305 = (int64x2_t)vaddw_u32((uint64x2_t)v305, *(uint32x2_t *)v316.i8);
            v303 = (int64x2_t)vaddw_u32((uint64x2_t)v303, *(uint32x2_t *)v317.i8);
            v307 = (int64x2_t)vaddw_u32((uint64x2_t)v307, *(uint32x2_t *)v318.i8);
            v308 = (int64x2_t)vaddw_high_u32((uint64x2_t)v308, v318);
            v309 = (int64x2_t)vaddw_u32((uint64x2_t)v309, *(uint32x2_t *)v319.i8);
            v295 += 2;
            v310 = (int64x2_t)vaddw_high_u32((uint64x2_t)v310, v319);
            v297 -= 32;
          }
          while (v297);
          v272 = vaddq_s64(v309, v301);
          v291 = vaddvq_s64(vaddq_s64(vaddq_s64(vaddq_s64(vaddq_s64(v303, v293), vaddq_s64(v307, v299)), vaddq_s64(vaddq_s64(v305, v296), v272)), vaddq_s64(vaddq_s64(vaddq_s64(v304, v294), vaddq_s64(v308, v300)), vaddq_s64(vaddq_s64(v306, v298), vaddq_s64(v310, v302)))));
          if (v292 == v289)
            goto LABEL_496;
          if (((v288[8] * v288[4]) & 0x18) == 0)
            goto LABEL_494;
        }
        else
        {
          v291 = 0;
          v292 = 0;
        }
        v320 = v292;
        v292 = v289 & 0xFFFFFFF8;
        v321 = 0uLL;
        v322 = (int64x2_t)(unint64_t)v291;
        v323 = (uint64_t *)((char *)v290->i64 + v320);
        v324 = v320 - v292;
        v325 = 0uLL;
        v326 = 0uLL;
        do
        {
          v327 = *v323++;
          v272.i64[0] = v327;
          v328 = (uint32x4_t)vqtbl1q_s8((int8x16_t)v272, v284);
          v272 = (int64x2_t)vqtbl1q_s8((int8x16_t)v272, v285);
          v326 = (int64x2_t)vaddw_high_u32((uint64x2_t)v326, v328);
          v321 = (int64x2_t)vaddw_high_u32((uint64x2_t)v321, (uint32x4_t)v272);
          v325 = (int64x2_t)vaddw_u32((uint64x2_t)v325, *(uint32x2_t *)v328.i8);
          v322 = (int64x2_t)vaddw_u32((uint64x2_t)v322, *(uint32x2_t *)v272.i8);
          v324 += 8;
        }
        while (v324);
        v291 = vaddvq_s64(vaddq_s64(vaddq_s64(v322, v325), vaddq_s64(v321, v326)));
        if (v292 != v289)
          goto LABEL_494;
LABEL_496:
        if (v283)
        {
          v283 = sub_239978544(v2162, (uint64_t)v288, &__src, v2119, (uint64_t)v2215 + 24 * v282, (uint64_t)v2220 + 24 * v282, (uint64_t)v2218 + 24 * v282, v261);
          v284 = (int8x16_t)xmmword_239EC7400;
          v285 = (int8x16_t)xmmword_239EC73F0;
          v286 = (int8x16_t)xmmword_239EC7410;
          v287 = (int8x16_t)xmmword_239EC7420;
          if ((_DWORD)v289)
            goto LABEL_500;
        }
        else
        {
          v283 = 0;
          if ((_DWORD)v289)
          {
LABEL_500:
            v333 = (int8x16_t *)*((_QWORD *)v2222 + 3 * v282 + 2);
            if (v289 < 8)
            {
              v332 = 0;
              v334 = 0;
LABEL_511:
              v371 = v289 - v334;
              v372 = &v333->u8[v334];
              do
              {
                v373 = *v372++;
                v332 += v373;
                --v371;
              }
              while (v371);
              goto LABEL_513;
            }
            if (v289 >= 0x20)
            {
              v335 = 0uLL;
              v334 = v289 & 0xFFFFFFE0;
              v336 = 0uLL;
              v337 = v333 + 1;
              v338 = 0uLL;
              v339 = v334;
              v340 = 0uLL;
              v341 = 0uLL;
              v342 = 0uLL;
              v343 = 0uLL;
              v344 = 0uLL;
              v345 = 0uLL;
              v346 = 0uLL;
              v347 = 0uLL;
              v348 = 0uLL;
              v349 = 0uLL;
              v350 = 0uLL;
              v351 = 0uLL;
              v352 = 0uLL;
              do
              {
                v353 = v337[-1];
                v354 = (uint32x4_t)vqtbl1q_s8(v353, v284);
                v355 = (uint32x4_t)vqtbl1q_s8(v353, v285);
                v356 = (uint32x4_t)vqtbl1q_s8(v353, v286);
                v357 = (uint32x4_t)vqtbl1q_s8(v353, v287);
                v358 = (uint32x4_t)vqtbl1q_s8(*v337, v284);
                v359 = (uint32x4_t)vqtbl1q_s8(*v337, v285);
                v360 = (uint32x4_t)vqtbl1q_s8(*v337, v286);
                v361 = (uint32x4_t)vqtbl1q_s8(*v337, v287);
                v336 = (int64x2_t)vaddw_high_u32((uint64x2_t)v336, v355);
                v340 = (int64x2_t)vaddw_high_u32((uint64x2_t)v340, v354);
                v338 = (int64x2_t)vaddw_u32((uint64x2_t)v338, *(uint32x2_t *)v354.i8);
                v335 = (int64x2_t)vaddw_u32((uint64x2_t)v335, *(uint32x2_t *)v355.i8);
                v341 = (int64x2_t)vaddw_u32((uint64x2_t)v341, *(uint32x2_t *)v356.i8);
                v342 = (int64x2_t)vaddw_high_u32((uint64x2_t)v342, v356);
                v343 = (int64x2_t)vaddw_u32((uint64x2_t)v343, *(uint32x2_t *)v357.i8);
                v344 = (int64x2_t)vaddw_high_u32((uint64x2_t)v344, v357);
                v346 = (int64x2_t)vaddw_high_u32((uint64x2_t)v346, v359);
                v348 = (int64x2_t)vaddw_high_u32((uint64x2_t)v348, v358);
                v347 = (int64x2_t)vaddw_u32((uint64x2_t)v347, *(uint32x2_t *)v358.i8);
                v345 = (int64x2_t)vaddw_u32((uint64x2_t)v345, *(uint32x2_t *)v359.i8);
                v349 = (int64x2_t)vaddw_u32((uint64x2_t)v349, *(uint32x2_t *)v360.i8);
                v350 = (int64x2_t)vaddw_high_u32((uint64x2_t)v350, v360);
                v351 = (int64x2_t)vaddw_u32((uint64x2_t)v351, *(uint32x2_t *)v361.i8);
                v337 += 2;
                v352 = (int64x2_t)vaddw_high_u32((uint64x2_t)v352, v361);
                v339 -= 32;
              }
              while (v339);
              v272 = vaddq_s64(v351, v343);
              v332 = vaddvq_s64(vaddq_s64(vaddq_s64(vaddq_s64(vaddq_s64(v345, v335), vaddq_s64(v349, v341)), vaddq_s64(vaddq_s64(v347, v338), v272)), vaddq_s64(vaddq_s64(vaddq_s64(v346, v336), vaddq_s64(v350, v342)), vaddq_s64(vaddq_s64(v348, v340), vaddq_s64(v352, v344)))));
              if (v334 == v289)
                goto LABEL_513;
              if ((v289 & 0x18) == 0)
                goto LABEL_511;
            }
            else
            {
              v332 = 0;
              v334 = 0;
            }
            v362 = v334;
            v334 = v289 & 0xFFFFFFF8;
            v363 = 0uLL;
            v364 = (int64x2_t)(unint64_t)v332;
            v365 = (uint64_t *)((char *)v333->i64 + v362);
            v366 = v362 - v334;
            v367 = 0uLL;
            v368 = 0uLL;
            do
            {
              v369 = *v365++;
              v272.i64[0] = v369;
              v370 = (uint32x4_t)vqtbl1q_s8((int8x16_t)v272, v284);
              v272 = (int64x2_t)vqtbl1q_s8((int8x16_t)v272, v285);
              v368 = (int64x2_t)vaddw_high_u32((uint64x2_t)v368, v370);
              v363 = (int64x2_t)vaddw_high_u32((uint64x2_t)v363, (uint32x4_t)v272);
              v367 = (int64x2_t)vaddw_u32((uint64x2_t)v367, *(uint32x2_t *)v370.i8);
              v364 = (int64x2_t)vaddw_u32((uint64x2_t)v364, *(uint32x2_t *)v272.i8);
              v366 += 8;
            }
            while (v366);
            v332 = vaddvq_s64(vaddq_s64(vaddq_s64(v364, v367), vaddq_s64(v363, v368)));
            if (v334 == v289)
              goto LABEL_513;
            goto LABEL_511;
          }
        }
        v332 = 0;
LABEL_513:
        if (a7)
        {
          v374 = *(_QWORD *)(a6 + 320) + v291;
          *(_QWORD *)(a6 + 312) += v332;
          *(_QWORD *)(a6 + 320) = v374;
        }
        if (v2311)
        {
          HIBYTE(v2241) = 0;
          LOBYTE(task_info_out[0]) = 0;
          v375 = (double)(unint64_t)(v282 + 1) * 15.0 / (double)v2147 + 55.0;
          *(float *)&v2265.__r_.__value_.__l.__data_ = v375;
          (*(void (**)(_BYTE *, std::string *, integer_t *))(*(_QWORD *)v2311 + 48))(v2311, &v2265, task_info_out);
          v284 = (int8x16_t)xmmword_239EC7400;
          v285 = (int8x16_t)xmmword_239EC73F0;
          v286 = (int8x16_t)xmmword_239EC7410;
          v287 = (int8x16_t)xmmword_239EC7420;
          if (SHIBYTE(v2241) < 0)
          {
            operator delete(*(void **)task_info_out);
            v287 = (int8x16_t)xmmword_239EC7420;
            v286 = (int8x16_t)xmmword_239EC7410;
            v285 = (int8x16_t)xmmword_239EC73F0;
            v284 = (int8x16_t)xmmword_239EC7400;
          }
        }
        if (v2309)
        {
          v284 = (int8x16_t)xmmword_239EC7400;
          v285 = (int8x16_t)xmmword_239EC73F0;
          v286 = (int8x16_t)xmmword_239EC7410;
          v287 = (int8x16_t)xmmword_239EC7420;
          if (((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
          {
            v279 = 1;
            v278 = 0.0;
            v280 = 0.0;
            v281 = v283;
            goto LABEL_1838;
          }
        }
        if (++v282 == v2147)
          goto LABEL_522;
      }
    }
    v283 = 1;
LABEL_522:
    if (a7)
    {
      v376 = (float)*(unint64_t *)(a6 + 312) / (float)*(unint64_t *)(a6 + 320);
      *(float *)(a6 + 328) = v376;
      if (v376 < 0.1)
        *(_DWORD *)(a6 + 384) = 3;
    }
    v377 = *(_QWORD *)(v2137 + 160) - *(_QWORD *)(v2137 + 152);
    v378 = (float)(unint64_t)(4 * ((v377 >> 1) + (v377 >> 2)));
    *(_QWORD *)&v2208 = (unint64_t)(float)((float)(unint64_t)(float)((float)(16 * v232)
                                                                                 + (float)(v378 * 2.0))
                                                + (float)(v378 * 2.0))
                      + 52428800;
    *((_QWORD *)&v2208 + 1) = 52428800;
    *(std::chrono::system_clock::time_point *)&__dst[32] = std::chrono::system_clock::now();
    v281 = v283;
    *(_QWORD *)&v2204 = sub_2399FCAC0();
    *(_DWORD *)task_info_outCnt = 93;
    if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, (mach_msg_type_number_t *)task_info_outCnt))
    {
      *((_QWORD *)&v2204 + 1) = v2241;
      *(_QWORD *)&v2205 = *(_QWORD *)task_info_out;
      v2206 = v2246;
      *((_QWORD *)&v2207 + 1) = SHIDWORD(v2240);
      *(_QWORD *)&v2207 = v2244;
      *((_QWORD *)&v2205 + 1) = v2245;
    }
    v379 = sub_2399FC9C0();
    v380 = v379;
    v381 = *(_QWORD *)(v379 + 8);
    if (v381 >= *(_QWORD *)(v379 + 16))
    {
      v383 = sub_23992A81C((char **)v379, (uint64_t)__dst);
    }
    else
    {
      if ((__dst[23] & 0x80000000) != 0)
      {
        sub_23941A7F8(*(_BYTE **)(v379 + 8), *(void **)__dst, *(unint64_t *)&__dst[8]);
      }
      else
      {
        v382 = *(_OWORD *)__dst;
        *(_QWORD *)(v381 + 16) = *(_QWORD *)&__dst[16];
        *(_OWORD *)v381 = v382;
      }
      v384 = *(_OWORD *)&__dst[24];
      *(_OWORD *)(v381 + 40) = *(_OWORD *)&__dst[40];
      *(_OWORD *)(v381 + 24) = v384;
      v385 = *(_OWORD *)&__dst[56];
      v386 = v2202;
      v387 = v2203;
      *(_OWORD *)(v381 + 104) = v2204;
      *(_OWORD *)(v381 + 88) = v387;
      *(_OWORD *)(v381 + 72) = v386;
      *(_OWORD *)(v381 + 56) = v385;
      v388 = v2205;
      v389 = v2206;
      v390 = v2207;
      *(_OWORD *)(v381 + 168) = v2208;
      *(_OWORD *)(v381 + 152) = v390;
      *(_OWORD *)(v381 + 136) = v389;
      *(_OWORD *)(v381 + 120) = v388;
      v383 = (char *)(v381 + 184);
      *(_QWORD *)(v380 + 8) = v381 + 184;
    }
    *(_QWORD *)(v380 + 8) = v383;
    kdebug_trace();
    v391.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    if (a7)
      *(double *)(a6 + 296) = (double)(v391.__d_.__rep_ - v259.__d_.__rep_) / 1000000.0;
    v2271 = 0uLL;
    v2272 = 0;
    memset(&v2270, 0, sizeof(v2270));
    if (*(_BYTE *)(v206 + 264))
    {
      v392 = 1;
      v393 = v2147;
    }
    else
    {
      v393 = v2147;
      if (*(_BYTE *)(v206 + 184))
        v392 = *(_BYTE *)(v206 + 48) != 0;
      else
        v392 = 0;
    }
    if (*(_BYTE *)(v206 + 64))
      v394 = 1;
    else
      v394 = v392;
    v278 = 0.0;
    v280 = 0.0;
    if ((v283 & v394) == 1)
    {
      v395.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      if (v392)
        v396 = 0;
      else
        v396 = v2124;
      *((_BYTE *)&v2200.__r_.__value_.__s + 23) = 0;
      v2200.__r_.__value_.__s.__data_[0] = 0;
      sub_23992A5B4((uint64_t)task_info_out, &v2200, 24 * v2122, v396 + v2124);
      if (SHIBYTE(v2200.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v2200.__r_.__value_.__l.__data_);
      if (v2309 && (*(unsigned int (**)(_QWORD *))(*v2309 + 48))(v2309))
      {
        sub_23992A6A0((uint64_t)task_info_out);
        v279 = 1;
        v281 = 1;
        goto LABEL_1834;
      }
      kdebug_trace();
      sub_239926AA0((uint64_t)&v2209, v2147);
      v397.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      v398.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      if (*(_BYTE *)(v206 + 48))
      {
        v399 = v2162;
        sub_239599CC0(&v2271, (uint64_t)(*(_QWORD *)(v2162 + 112) - *(_QWORD *)(v2162 + 104)) >> 2);
        sub_23941C5D8((uint64_t)&v2270, (uint64_t)(*(_QWORD *)(v399 + 112) - *(_QWORD *)(v399 + 104)) >> 2, 0);
        v400 = *(_QWORD *)(v399 + 112) - *(_QWORD *)(v399 + 104);
        if (v400)
        {
          v401 = 0;
          v402 = v400 >> 2;
          v403 = v2271;
          v404 = v2270.__r_.__value_.__r.__words[0];
          if (v402 <= 1)
            v402 = 1;
          do
          {
            *(_DWORD *)(v403 + 4 * v401) = 1065353216;
            *(_QWORD *)(v404 + ((v401 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= ~(1 << v401);
            ++v401;
          }
          while (v402 != v401);
        }
      }
      sub_239926B74(&v2268, 3uLL);
      v280 = (double)(v397.__d_.__rep_ - v395.__d_.__rep_) / 1000000.0 + 0.0;
      v278 = (double)(std::chrono::system_clock::now().__d_.__rep_ - v398.__d_.__rep_) / 1000000.0 + 0.0;
      if (v2147)
      {
        v2107 = v392;
        v2101 = v394;
        __vala = 0;
        v405 = 3 * v2122;
        v2106 = (uint64_t *)(v206 + 480);
        v2103 = a11 + 12;
        v2125 = (uint64_t **)(v2162 + 56);
        if (3 * v2122 <= 1)
          v405 = 1;
        v2110 = 4 * v405;
        LOBYTE(v281) = 1;
        while (1)
        {
          v406.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
          v407 = *(const void ***)(v2146 + 8);
          if (!v407)
LABEL_2850:
            sub_23941D898("map::at:  key not found");
          v408 = (char *)v2222 + 24 * __vala;
          while (1)
          {
            while (1)
            {
              v409 = *((unsigned __int16 *)v407 + 16);
              if (v409 <= (unsigned __int16)__vala)
                break;
              v407 = (const void **)*v407;
              if (!v407)
                goto LABEL_2850;
            }
            if (v409 >= (unsigned __int16)__vala)
              break;
            v407 = (const void **)v407[1];
            if (!v407)
              goto LABEL_2850;
          }
          v2128 = v406.__d_.__rep_;
          *(_QWORD *)task_info_outCnt = v407 + 5;
          v410 = *((unsigned __int16 *)sub_23958C73C(v254 + 6, v407 + 5, (uint64_t)&unk_239EC6E98, (__int128 **)task_info_outCnt)+ 28);
          v411 = *v2164;
          *(_OWORD *)&v2259.__r_.__value_.__l.__data_ = 0uLL;
          v412 = operator new[]();
          v413 = operator new(0x30uLL);
          v413[1] = 0;
          v413[2] = 0;
          *v413 = &off_250ADF208;
          *((_DWORD *)v413 + 6) = 0;
          *((_DWORD *)v413 + 7) = v2145;
          *((_DWORD *)v413 + 8) = v2145;
          *((_DWORD *)v413 + 9) = 3;
          v413[5] = v412;
          size = (std::__shared_weak_count *)v2259.__r_.__value_.__l.__size_;
          v2259.__r_.__value_.__r.__words[0] = (std::string::size_type)(v413 + 3);
          v2259.__r_.__value_.__l.__size_ = (std::string::size_type)v413;
          if (size)
          {
            v415 = (unint64_t *)&size->__shared_owners_;
            do
              v416 = __ldaxr(v415);
            while (__stlxr(v416 - 1, v415));
            if (!v416)
            {
              ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
              std::__shared_weak_count::__release_weak(size);
            }
          }
          v417 = v2259.__r_.__value_.__r.__words[0];
          *(_DWORD *)v2259.__r_.__value_.__l.__data_ = 0;
          if (v2145)
            bzero(*(void **)(v417 + 16), v2110);
          if ((v281 & 1) == 0 || !sub_239976250(v2137, a2, v417, (uint64_t)v408, (uint64_t)v2215 + 24 * __vala))
          {
LABEL_619:
            v435 = 0;
            goto LABEL_620;
          }
          v418 = v2259.__r_.__value_.__r.__words[0];
          v419 = (uint64_t)v2307;
          if (!v2307)
            goto LABEL_580;
          if (v2307 != v2306)
            break;
          v2303 = v2302;
          (*(void (**)(_QWORD *, _QWORD *))(v2306[0] + 24))(v2306, v2302);
LABEL_582:
          v420 = sub_2399FB510(v418, (uint64_t)v408, (uint64_t)&v2236, a6, a7, v2106, v2302, v2127 != 0);
          v421 = v2303;
          if (v2303 == v2302)
          {
            v421 = v2302;
            v422 = 4;
LABEL_586:
            (*(void (**)(void))(*v421 + 8 * v422))();
            if ((v420 & 1) == 0)
              goto LABEL_619;
            goto LABEL_587;
          }
          if (v2303)
          {
            v422 = 5;
            goto LABEL_586;
          }
          if (!v420)
            goto LABEL_619;
LABEL_587:
          v423 = *(_DWORD *)(v2259.__r_.__value_.__r.__words[0] + 8);
          if (v423 >= 2)
          {
            v424 = *(unsigned int *)(v2259.__r_.__value_.__r.__words[0] + 4);
            if ((_DWORD)v424)
            {
              v425 = *(unsigned int *)(v2259.__r_.__value_.__r.__words[0] + 12);
              if ((_DWORD)v425)
              {
                v426 = 0;
                v427 = 0;
                v428 = v423 >> 1;
                v429 = *(_QWORD *)(v2259.__r_.__value_.__r.__words[0] + 16);
                if (v423 >> 1 <= 1)
                  v428 = 1;
                v430 = v424 * v425;
                v431 = v429 + 4 * v425;
                v432 = v424 * v425 * (v423 - 1);
                v433 = v429 + 16;
                v434 = v432;
                while (v425 < 8)
                {
                  v436 = 0;
                  v437 = v424;
                  do
                  {
                    v438 = (int *)(v429 + 4 * (v426 + v436));
                    v439 = (int *)(v429 + 4 * (v434 + v436));
                    v440 = *v438;
                    *v438 = *v439;
                    *v439 = v440;
                    if ((_DWORD)v425 != 1)
                    {
                      v441 = v438[1];
                      v438[1] = v439[1];
                      v439[1] = v441;
                      if ((_DWORD)v425 != 2)
                      {
                        v442 = v438[2];
                        v438[2] = v439[2];
                        v439[2] = v442;
                        if ((_DWORD)v425 != 3)
                        {
                          v443 = v438[3];
                          v438[3] = v439[3];
                          v439[3] = v443;
                          if ((_DWORD)v425 != 4)
                          {
                            v444 = v438[4];
                            v438[4] = v439[4];
                            v439[4] = v444;
                            if ((_DWORD)v425 != 5)
                            {
                              v445 = v438[5];
                              v438[5] = v439[5];
                              v439[5] = v445;
                              if ((_DWORD)v425 != 6)
                              {
                                v446 = v438[6];
                                v438[6] = v439[6];
                                v439[6] = v446;
                              }
                            }
                          }
                        }
                      }
                    }
                    v436 += v425;
                    --v437;
                  }
                  while (v437);
LABEL_593:
                  ++v427;
                  v426 += v430;
                  v434 -= v430;
                  v435 = 1;
                  if (v427 == v428)
                    goto LABEL_620;
                }
                v447 = 0;
                v448 = v434;
                v449 = v426;
                while (2)
                {
                  v450 = 4 * v448;
                  v451 = 4 * v449;
                  v452 = 4 * (v432 + v427 * -((_DWORD)v424 * (_DWORD)v425) + (_DWORD)v447 * (_DWORD)v425);
                  v453 = v431 + v452;
                  v454 = v429 + v452;
                  v455 = 4 * (v427 * v430 + v447 * v425);
                  if (v429 + v455 < v453 && v454 < v431 + v455)
                  {
                    v463 = 0;
                    v206 = v2163;
                    goto LABEL_614;
                  }
                  v457 = (__int128 *)(v433 + v451);
                  v458 = (__int128 *)(v433 + v450);
                  v459 = v425 & 0xFFFFFFF8;
                  do
                  {
                    v460 = *(v457 - 1);
                    v461 = *v457;
                    v462 = *v458;
                    *(v457 - 1) = *(v458 - 1);
                    *v457 = v462;
                    *(v458 - 1) = v460;
                    *v458 = v461;
                    v457 += 2;
                    v458 += 2;
                    v459 -= 8;
                  }
                  while (v459);
                  v463 = v425 & 0xFFFFFFF8;
                  v206 = v2163;
                  if (v463 != v425)
                  {
LABEL_614:
                    v464 = v425 - v463;
                    v465 = 4 * v463;
                    v466 = (int *)(v429 + v465 + v450);
                    v467 = (int *)(v429 + v465 + v451);
                    do
                    {
                      v468 = *v467;
                      *v467++ = *v466;
                      *v466++ = v468;
                      --v464;
                    }
                    while (v464);
                  }
                  ++v447;
                  v449 += v425;
                  v448 += v425;
                  if (v447 == v424)
                    goto LABEL_593;
                  continue;
                }
              }
            }
          }
          v435 = 1;
LABEL_620:
          if (a12)
          {
            if (*(_BYTE *)(v206 + 64))
            {
              task_info_outCnt[23] = 5;
              strcpy(task_info_outCnt, "uchar");
              task_info_outCnt[55] = 4;
              strcpy(&task_info_outCnt[32], ".jpg");
              v469 = *(float *)(v206 + 96) * 100.0;
              if (v469 < 1.0)
                v469 = 1.0;
              if (v469 > 100.0)
                v469 = 100.0;
              *(_WORD *)&task_info_outCnt[24] = (int)v469;
              std::operator+<char>();
              if ((task_info_outCnt[55] & 0x80000000) != 0)
                operator delete(*(void **)&task_info_outCnt[32]);
              *(_OWORD *)&task_info_outCnt[32] = v2247;
              *(_QWORD *)&task_info_outCnt[48] = v2248;
              v470 = &v411[6 * v410];
              v473 = (uint64_t *)v470[4];
              v472 = (uint64_t **)(v470 + 4);
              v471 = v473;
              if (v473)
              {
                while (1)
                {
                  while (1)
                  {
                    v475 = (uint64_t **)v471;
                    v476 = *((_DWORD *)v471 + 7);
                    if (v476 < 2)
                      break;
                    v471 = *v475;
                    v474 = v475;
                    if (!*v475)
                      goto LABEL_635;
                  }
                  if (v476 == 1)
                    break;
                  v471 = v475[1];
                  if (!v471)
                  {
                    v474 = v475 + 1;
                    goto LABEL_635;
                  }
                }
                v477 = v475;
              }
              else
              {
                v474 = v472;
                v475 = v472;
LABEL_635:
                v477 = operator new(0x28uLL);
                v477[7] = 1;
                *((_WORD *)v477 + 16) = 0;
                *(_QWORD *)v477 = 0;
                *((_QWORD *)v477 + 1) = 0;
                *((_QWORD *)v477 + 2) = v475;
                *v474 = (uint64_t *)v477;
                v479 = (uint64_t **)*(v472 - 1);
                v478 = v472 - 1;
                v480 = *v479;
                v481 = (uint64_t *)v477;
                if (*v479)
                {
                  *v478 = v480;
                  v481 = *v474;
                }
                sub_2394213B8(v478[1], v481);
                v478[2] = (uint64_t *)((char *)v478[2] + 1);
              }
              v547 = *((unsigned __int16 *)v477 + 16);
              v548 = v2164[3];
              v549 = std::__fs::filesystem::path::__stem(a13);
              if (v549.__size_ > 0x7FFFFFFFFFFFFFF7)
                sub_23941A5AC();
              if (v549.__size_ >= 0x17)
              {
                v551 = (v549.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v549.__size_ | 7) != 0x17)
                  v551 = v549.__size_ | 7;
                v552 = v551 + 1;
                v550 = (__int128 *)operator new(v551 + 1);
                v2250 = v552 | 0x8000000000000000;
                *(_QWORD *)&v2249 = v550;
                *((_QWORD *)&v2249 + 1) = v549.__size_;
              }
              else
              {
                HIBYTE(v2250) = v549.__size_;
                v550 = &v2249;
                if (!v549.__size_)
                {
LABEL_734:
                  *((_BYTE *)v550 + v549.__size_) = 0;
                  v553 = *((_QWORD *)&v2249 + 1);
                  v554 = (void *)v2249;
                  LODWORD(v2265.__r_.__value_.__l.__data_) = v2250;
                  *(_DWORD *)((char *)v2265.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v2250 + 3);
                  if (SHIBYTE(v2250) < 0)
                  {
                    sub_23941A7F8(&v2266, (void *)v2249, *((unint64_t *)&v2249 + 1));
                    operator delete(v554);
                  }
                  else
                  {
                    v2266 = v2249;
                    LODWORD(v2267) = v2265.__r_.__value_.__l.__data_;
                    *(_DWORD *)((char *)&v2267 + 3) = *(_DWORD *)((char *)v2265.__r_.__value_.__r.__words + 3);
                    HIBYTE(v2267) = HIBYTE(v2250);
                  }
                  v555 = (std::string *)&v548[6 * v547];
                  memset(&v2265, 0, sizeof(v2265));
                  v556 = LODWORD(v555->__r_.__value_.__l.__data_) - 1;
                  if (v556 < 0xD)
                    MEMORY[0x23B83DBFC](&v2265, off_250AF0168[v556], v553);
                  v557 = SHIBYTE(v2267);
                  if (v2267 >= 0)
                    v558 = HIBYTE(v2267);
                  else
                    v558 = *((_QWORD *)&v2266 + 1);
                  v559 = v558 + 1;
                  if (v558 + 1 > 0x7FFFFFFFFFFFFFF7)
                    sub_23941A5AC();
                  if (v559 >= 0x17)
                  {
                    v561 = (v559 & 0xFFFFFFFFFFFFFFF8) + 8;
                    if ((v559 | 7) != 0x17)
                      v561 = v559 | 7;
                    v562 = v561 + 1;
                    v560 = (char *)operator new(v561 + 1);
                    v2261.__r_.__value_.__r.__words[2] = v562 | 0x8000000000000000;
                    v2261.__r_.__value_.__r.__words[0] = (std::string::size_type)v560;
                    v2261.__r_.__value_.__l.__size_ = v558 + 1;
                  }
                  else
                  {
                    memset(&v2261, 0, sizeof(v2261));
                    v560 = (char *)&v2261;
                    *((_BYTE *)&v2261.__r_.__value_.__s + 23) = v558 + 1;
                    if (!v558)
                      goto LABEL_753;
                  }
                  if (v557 >= 0)
                    v563 = &v2266;
                  else
                    v563 = (__int128 *)v2266;
                  memmove(v560, v563, v558);
LABEL_753:
                  *(_WORD *)&v560[v558] = 95;
                  if ((v2265.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v564 = &v2265;
                  else
                    v564 = (std::string *)v2265.__r_.__value_.__r.__words[0];
                  if ((v2265.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v565 = HIBYTE(v2265.__r_.__value_.__r.__words[2]);
                  else
                    v565 = v2265.__r_.__value_.__l.__size_;
                  v566 = std::string::append(&v2261, (const std::string::value_type *)v564, v565);
                  v567 = *(_OWORD *)&v566->__r_.__value_.__l.__data_;
                  v2262.__r_.__value_.__r.__words[2] = v566->__r_.__value_.__r.__words[2];
                  *(_OWORD *)&v2262.__r_.__value_.__l.__data_ = v567;
                  v566->__r_.__value_.__l.__size_ = 0;
                  v566->__r_.__value_.__r.__words[2] = 0;
                  v566->__r_.__value_.__r.__words[0] = 0;
                  std::to_string(&v2260, __vala);
                  if ((v2260.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v568 = &v2260;
                  else
                    v568 = (std::string *)v2260.__r_.__value_.__r.__words[0];
                  if ((v2260.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v569 = HIBYTE(v2260.__r_.__value_.__r.__words[2]);
                  else
                    v569 = v2260.__r_.__value_.__l.__size_;
                  v570 = std::string::append(&v2262, (const std::string::value_type *)v568, v569);
                  v571 = *(_OWORD *)&v570->__r_.__value_.__l.__data_;
                  v2263.__r_.__value_.__r.__words[2] = v570->__r_.__value_.__r.__words[2];
                  *(_OWORD *)&v2263.__r_.__value_.__l.__data_ = v571;
                  v570->__r_.__value_.__l.__size_ = 0;
                  v570->__r_.__value_.__r.__words[2] = 0;
                  v570->__r_.__value_.__r.__words[0] = 0;
                  if (task_info_outCnt[55] >= 0)
                    v572 = &task_info_outCnt[32];
                  else
                    v572 = *(const std::string::value_type **)&task_info_outCnt[32];
                  if (task_info_outCnt[55] >= 0)
                    v573 = task_info_outCnt[55];
                  else
                    v573 = *(_QWORD *)&task_info_outCnt[40];
                  v574 = std::string::append(&v2263, v572, v573);
                  v575 = *(_OWORD *)&v574->__r_.__value_.__l.__data_;
                  v2264.__r_.__value_.__r.__words[2] = v574->__r_.__value_.__r.__words[2];
                  *(_OWORD *)&v2264.__r_.__value_.__l.__data_ = v575;
                  v574->__r_.__value_.__l.__size_ = 0;
                  v574->__r_.__value_.__r.__words[2] = 0;
                  v574->__r_.__value_.__r.__words[0] = 0;
                  if ((SHIBYTE(v2263.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                  {
                    if ((SHIBYTE(v2260.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                      goto LABEL_773;
LABEL_793:
                    operator delete(v2260.__r_.__value_.__l.__data_);
                    if (SHIBYTE(v2262.__r_.__value_.__r.__words[2]) < 0)
                      goto LABEL_794;
LABEL_774:
                    if ((SHIBYTE(v2261.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                      goto LABEL_775;
LABEL_795:
                    operator delete(v2261.__r_.__value_.__l.__data_);
                    goto LABEL_775;
                  }
                  operator delete(v2263.__r_.__value_.__l.__data_);
                  if (SHIBYTE(v2260.__r_.__value_.__r.__words[2]) < 0)
                    goto LABEL_793;
LABEL_773:
                  if ((SHIBYTE(v2262.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    goto LABEL_774;
LABEL_794:
                  operator delete(v2262.__r_.__value_.__l.__data_);
                  if (SHIBYTE(v2261.__r_.__value_.__r.__words[2]) < 0)
                    goto LABEL_795;
LABEL_775:
                  v576 = std::__fs::filesystem::path::__parent_path(a13);
                  if (v576.__size_ > 0x7FFFFFFFFFFFFFF7)
                    sub_23941A5AC();
                  if (v576.__size_ >= 0x17)
                  {
                    v578 = (v576.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                    if ((v576.__size_ | 7) != 0x17)
                      v578 = v576.__size_ | 7;
                    v579 = v578 + 1;
                    v577 = (std::string *)operator new(v578 + 1);
                    v2251.__r_.__value_.__r.__words[2] = v579 | 0x8000000000000000;
                    v2251.__r_.__value_.__r.__words[0] = (std::string::size_type)v577;
                    v2251.__r_.__value_.__l.__size_ = v576.__size_;
                  }
                  else
                  {
                    *((_BYTE *)&v2251.__r_.__value_.__s + 23) = v576.__size_;
                    v577 = &v2251;
                    if (!v576.__size_)
                    {
LABEL_783:
                      v577->__r_.__value_.__s.__data_[v576.__size_] = 0;
                      v2262 = v2251;
                      memset(&v2261, 0, sizeof(v2261));
                      v580 = HIBYTE(v2264.__r_.__value_.__r.__words[2]);
                      if ((v2264.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                        v581 = &v2264;
                      else
                        v581 = (std::string *)v2264.__r_.__value_.__r.__words[0];
                      if ((v2264.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                        v580 = v2264.__r_.__value_.__l.__size_;
                      sub_23948900C(&v2261, v581, (std::string *)((char *)v581 + v580));
                      sub_239498A04((std::__fs::filesystem::path *)&v2261, (uint64_t)&v2262, (std::__fs::filesystem::path *)&v2263);
                      if ((SHIBYTE(v2261.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                      {
                        if ((SHIBYTE(v2262.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                          goto LABEL_790;
LABEL_797:
                        operator delete(v2262.__r_.__value_.__l.__data_);
                        if (v435)
                          goto LABEL_798;
                        goto LABEL_808;
                      }
                      operator delete(v2261.__r_.__value_.__l.__data_);
                      if (SHIBYTE(v2262.__r_.__value_.__r.__words[2]) < 0)
                        goto LABEL_797;
LABEL_790:
                      if (!v435)
                        goto LABEL_808;
LABEL_798:
                      v582 = v2259.__r_.__value_.__r.__words[0];
                      v583 = a11[15];
                      if (v583)
                      {
                        if ((_QWORD *)v583 != v2103)
                        {
                          v583 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v583 + 16))(v583);
                          goto LABEL_801;
                        }
                        v2300 = v2299;
                        (*(void (**)(_QWORD *, _BYTE *))(*v2103 + 24))(v2103, v2299);
                      }
                      else
                      {
LABEL_801:
                        v2300 = (_BYTE *)v583;
                      }
                      v435 = sub_239975928((__int128 *)&v2263, v582, (uint64_t)task_info_outCnt, (uint64_t)v2299, 1);
                      v584 = v2300;
                      if (v2300 == v2299)
                      {
                        v584 = v2299;
                        v585 = 4;
                      }
                      else
                      {
                        if (!v2300)
                          goto LABEL_808;
                        v585 = 5;
                      }
                      (*(void (**)(void))(*v584 + 8 * v585))();
LABEL_808:
                      if (a10)
                      {
                        v586 = *(_QWORD *)(a9 + 8);
                        if (v586 >= *(_QWORD *)(a9 + 16))
                        {
                          v588 = sub_23958837C((char **)a9, (uint64_t)&v2263);
                          v589 = a9;
                        }
                        else
                        {
                          if (SHIBYTE(v2263.__r_.__value_.__r.__words[2]) < 0)
                          {
                            sub_23941A7F8(*(_BYTE **)(a9 + 8), v2263.__r_.__value_.__l.__data_, v2263.__r_.__value_.__l.__size_);
                          }
                          else
                          {
                            v587 = *(_OWORD *)&v2263.__r_.__value_.__l.__data_;
                            *(_QWORD *)(v586 + 16) = *((_QWORD *)&v2263.__r_.__value_.__l + 2);
                            *(_OWORD *)v586 = v587;
                          }
                          v588 = (char *)(v586 + 24);
                          v589 = a9;
                          *(_QWORD *)(a9 + 8) = v586 + 24;
                        }
                        *(_QWORD *)(v589 + 8) = v588;
                      }
                      if (SHIBYTE(v2263.__r_.__value_.__r.__words[2]) < 0)
                        sub_23941A7F8(&v2199, v2263.__r_.__value_.__l.__data_, v2263.__r_.__value_.__l.__size_);
                      else
                        v2199 = v2263;
                      sub_2399272D8(v555, &v2199);
                      if (SHIBYTE(v2199.__r_.__value_.__r.__words[2]) < 0)
                        operator delete(v2199.__r_.__value_.__l.__data_);
                      if (v2107)
                      {
                        v590 = (std::string *)v2209;
                        if (SHIBYTE(v2263.__r_.__value_.__r.__words[2]) < 0)
                          sub_23941A7F8(&v2198, v2263.__r_.__value_.__l.__data_, v2263.__r_.__value_.__l.__size_);
                        else
                          v2198 = v2263;
                        sub_2399272D8(&v590[2 * __vala], &v2198);
                        if (SHIBYTE(v2198.__r_.__value_.__r.__words[2]) < 0)
                          operator delete(v2198.__r_.__value_.__l.__data_);
                        if (a11[15])
                        {
                          v591 = v2209;
                          v593 = (std::__shared_weak_count *)v2259.__r_.__value_.__l.__size_;
                          v592 = v2259.__r_.__value_.__r.__words[0];
                          if (v2259.__r_.__value_.__l.__size_)
                          {
                            v594 = (unint64_t *)(v2259.__r_.__value_.__l.__size_ + 8);
                            do
                              v595 = __ldxr(v594);
                            while (__stxr(v595 + 1, v594));
                            do
                              v596 = __ldxr(v594);
                            while (__stxr(v596 + 1, v594));
                          }
                          v597 = &v591[48 * __vala];
                          *((_QWORD *)v597 + 1) = v592;
                          v598 = (std::string::size_type *)(v597 + 8);
                          v599 = (std::__shared_weak_count *)v598[1];
                          v598[1] = (std::string::size_type)v593;
                          if (v599)
                          {
                            v600 = (unint64_t *)&v599->__shared_owners_;
                            do
                              v601 = __ldaxr(v600);
                            while (__stlxr(v601 - 1, v600));
                            if (!v601)
                            {
                              ((void (*)(std::__shared_weak_count *))v599->__on_zero_shared)(v599);
                              std::__shared_weak_count::__release_weak(v599);
                            }
                            v592 = *v598;
                          }
                          v602 = v592 && *(_QWORD *)(v592 + 16);
                          v591[48 * __vala + 4] = v602;
                          if (v593)
                          {
                            v603 = (unint64_t *)&v593->__shared_owners_;
                            do
                              v604 = __ldaxr(v603);
                            while (__stlxr(v604 - 1, v603));
                            if (!v604)
                            {
                              ((void (*)(std::__shared_weak_count *))v593->__on_zero_shared)(v593);
                              std::__shared_weak_count::__release_weak(v593);
                            }
                          }
                        }
                      }
                      if (SHIBYTE(v2263.__r_.__value_.__r.__words[2]) < 0)
                      {
                        operator delete(v2263.__r_.__value_.__l.__data_);
                        if (SHIBYTE(v2264.__r_.__value_.__r.__words[2]) < 0)
                          goto LABEL_865;
LABEL_849:
                        if ((SHIBYTE(v2265.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                          goto LABEL_850;
LABEL_866:
                        operator delete(v2265.__r_.__value_.__l.__data_);
                        if (SHIBYTE(v2267) < 0)
                          goto LABEL_867;
LABEL_851:
                        if ((task_info_outCnt[55] & 0x80000000) == 0)
                          goto LABEL_852;
LABEL_868:
                        operator delete(*(void **)&task_info_outCnt[32]);
                        if ((task_info_outCnt[23] & 0x80000000) == 0)
                          goto LABEL_853;
                      }
                      else
                      {
                        if ((SHIBYTE(v2264.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                          goto LABEL_849;
LABEL_865:
                        operator delete(v2264.__r_.__value_.__l.__data_);
                        if (SHIBYTE(v2265.__r_.__value_.__r.__words[2]) < 0)
                          goto LABEL_866;
LABEL_850:
                        if ((SHIBYTE(v2267) & 0x80000000) == 0)
                          goto LABEL_851;
LABEL_867:
                        operator delete((void *)v2266);
                        if ((task_info_outCnt[55] & 0x80000000) != 0)
                          goto LABEL_868;
LABEL_852:
                        if ((task_info_outCnt[23] & 0x80000000) == 0)
                          goto LABEL_853;
                      }
                      operator delete(*(void **)task_info_outCnt);
                      goto LABEL_853;
                    }
                  }
                  memmove(v577, v576.__data_, v576.__size_);
                  goto LABEL_783;
                }
              }
              memmove(v550, v549.__data_, v549.__size_);
              goto LABEL_734;
            }
            v494 = v2209;
            v496 = (std::__shared_weak_count *)v2259.__r_.__value_.__l.__size_;
            v495 = v2259.__r_.__value_.__r.__words[0];
            if (v2259.__r_.__value_.__l.__size_)
            {
              v497 = (unint64_t *)(v2259.__r_.__value_.__l.__size_ + 8);
              do
                v498 = __ldxr(v497);
              while (__stxr(v498 + 1, v497));
              do
                v499 = __ldxr(v497);
              while (__stxr(v499 + 1, v497));
            }
            v500 = &v494[48 * __vala];
            *((_QWORD *)v500 + 1) = v495;
            v501 = (std::string::size_type *)(v500 + 8);
            v502 = (std::__shared_weak_count *)v501[1];
            v501[1] = (std::string::size_type)v496;
            if (v502)
            {
              v503 = (unint64_t *)&v502->__shared_owners_;
              do
                v504 = __ldaxr(v503);
              while (__stlxr(v504 - 1, v503));
              if (!v504)
              {
                ((void (*)(std::__shared_weak_count *))v502->__on_zero_shared)(v502);
                std::__shared_weak_count::__release_weak(v502);
              }
              v495 = *v501;
            }
            v505 = v495 && *(_QWORD *)(v495 + 16);
            v494[48 * __vala + 4] = v505;
            if (v496)
            {
              v517 = (unint64_t *)&v496->__shared_owners_;
              do
                v518 = __ldaxr(v517);
              while (__stlxr(v518 - 1, v517));
              goto LABEL_723;
            }
          }
          else if (*(_BYTE *)(v206 + 64))
          {
            v482 = &v411[6 * v410];
            v485 = (uint64_t *)v482[4];
            v484 = (uint64_t **)(v482 + 4);
            v483 = v485;
            if (v485)
            {
              while (1)
              {
                while (1)
                {
                  v487 = (uint64_t **)v483;
                  v488 = *((_DWORD *)v483 + 7);
                  if (v488 < 2)
                    break;
                  v483 = *v487;
                  v486 = v487;
                  if (!*v487)
                    goto LABEL_646;
                }
                if (v488 == 1)
                  break;
                v483 = v487[1];
                if (!v483)
                {
                  v486 = v487 + 1;
                  goto LABEL_646;
                }
              }
              v489 = v487;
            }
            else
            {
              v486 = v484;
              v487 = v484;
LABEL_646:
              v489 = operator new(0x28uLL);
              v489[7] = 1;
              *((_WORD *)v489 + 16) = 0;
              *(_QWORD *)v489 = 0;
              *((_QWORD *)v489 + 1) = 0;
              *((_QWORD *)v489 + 2) = v487;
              *v486 = (uint64_t *)v489;
              v491 = (uint64_t **)*(v484 - 1);
              v490 = v484 - 1;
              v492 = *v491;
              v493 = (uint64_t *)v489;
              if (*v491)
              {
                *v490 = v492;
                v493 = *v486;
              }
              sub_2394213B8(v490[1], v493);
              v490[2] = (uint64_t *)((char *)v490[2] + 1);
            }
            v520 = *((unsigned __int16 *)v489 + 16);
            v521 = v2164[3];
            v523 = (std::__shared_weak_count *)v2259.__r_.__value_.__l.__size_;
            v522 = v2259.__r_.__value_.__r.__words[0];
            if (v2259.__r_.__value_.__l.__size_)
            {
              v524 = (unint64_t *)(v2259.__r_.__value_.__l.__size_ + 8);
              do
                v525 = __ldxr(v524);
              while (__stxr(v525 + 1, v524));
              do
                v526 = __ldxr(v524);
              while (__stxr(v526 + 1, v524));
            }
            v527 = &v521[6 * v520];
            v527[1] = v522;
            v528 = (std::string::size_type *)(v527 + 1);
            v529 = (std::__shared_weak_count *)v528[1];
            v528[1] = (std::string::size_type)v523;
            if (v529)
            {
              v530 = (unint64_t *)&v529->__shared_owners_;
              do
                v531 = __ldaxr(v530);
              while (__stlxr(v531 - 1, v530));
              if (!v531)
              {
                ((void (*)(std::__shared_weak_count *))v529->__on_zero_shared)(v529);
                std::__shared_weak_count::__release_weak(v529);
              }
              v522 = *v528;
            }
            v532 = v522 && *(_QWORD *)(v522 + 16);
            BYTE4(v521[6 * v520]) = v532;
            if (v523)
            {
              v533 = (unint64_t *)&v523->__shared_owners_;
              do
                v534 = __ldaxr(v533);
              while (__stlxr(v534 - 1, v533));
              if (!v534)
              {
                ((void (*)(std::__shared_weak_count *))v523->__on_zero_shared)(v523);
                std::__shared_weak_count::__release_weak(v523);
              }
            }
            if (v2107)
            {
              v535 = v2209;
              v496 = (std::__shared_weak_count *)v2259.__r_.__value_.__l.__size_;
              v536 = v2259.__r_.__value_.__r.__words[0];
              if (v2259.__r_.__value_.__l.__size_)
              {
                v537 = (unint64_t *)(v2259.__r_.__value_.__l.__size_ + 8);
                do
                  v538 = __ldxr(v537);
                while (__stxr(v538 + 1, v537));
                do
                  v539 = __ldxr(v537);
                while (__stxr(v539 + 1, v537));
              }
              v540 = &v535[48 * __vala];
              *((_QWORD *)v540 + 1) = v536;
              v541 = (std::string::size_type *)(v540 + 8);
              v542 = (std::__shared_weak_count *)v541[1];
              v541[1] = (std::string::size_type)v496;
              if (v542)
              {
                v543 = (unint64_t *)&v542->__shared_owners_;
                do
                  v544 = __ldaxr(v543);
                while (__stlxr(v544 - 1, v543));
                if (!v544)
                {
                  ((void (*)(std::__shared_weak_count *))v542->__on_zero_shared)(v542);
                  std::__shared_weak_count::__release_weak(v542);
                }
                v536 = *v541;
              }
              v545 = v536 && *(_QWORD *)(v536 + 16);
              v535[48 * __vala + 4] = v545;
              if (v496)
              {
                v546 = (unint64_t *)&v496->__shared_owners_;
                do
                  v518 = __ldaxr(v546);
                while (__stlxr(v518 - 1, v546));
                goto LABEL_723;
              }
            }
          }
          else
          {
            v506 = v2209;
            v496 = (std::__shared_weak_count *)v2259.__r_.__value_.__l.__size_;
            v507 = v2259.__r_.__value_.__r.__words[0];
            if (v2259.__r_.__value_.__l.__size_)
            {
              v508 = (unint64_t *)(v2259.__r_.__value_.__l.__size_ + 8);
              do
                v509 = __ldxr(v508);
              while (__stxr(v509 + 1, v508));
              do
                v510 = __ldxr(v508);
              while (__stxr(v510 + 1, v508));
            }
            v511 = &v506[48 * __vala];
            *((_QWORD *)v511 + 1) = v507;
            v512 = (std::string::size_type *)(v511 + 8);
            v513 = (std::__shared_weak_count *)v512[1];
            v512[1] = (std::string::size_type)v496;
            if (v513)
            {
              v514 = (unint64_t *)&v513->__shared_owners_;
              do
                v515 = __ldaxr(v514);
              while (__stlxr(v515 - 1, v514));
              if (!v515)
              {
                ((void (*)(std::__shared_weak_count *))v513->__on_zero_shared)(v513);
                std::__shared_weak_count::__release_weak(v513);
              }
              v507 = *v512;
            }
            v516 = v507 && *(_QWORD *)(v507 + 16);
            v506[48 * __vala + 4] = v516;
            if (v496)
            {
              v519 = (unint64_t *)&v496->__shared_owners_;
              do
                v518 = __ldaxr(v519);
              while (__stlxr(v518 - 1, v519));
LABEL_723:
              if (!v518)
              {
                ((void (*)(std::__shared_weak_count *))v496->__on_zero_shared)(v496);
                std::__shared_weak_count::__release_weak(v496);
              }
            }
          }
LABEL_853:
          v280 = v280 + (double)(std::chrono::system_clock::now().__d_.__rep_ - v2128) / 1000000.0;
          if (*(_BYTE *)(v206 + 48))
          {
            v2111.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
            v2266 = 0uLL;
            v605 = operator new[]();
            v606 = (char *)operator new(0x30uLL);
            *((_QWORD *)v606 + 1) = 0;
            *((_QWORD *)v606 + 2) = 0;
            *(_QWORD *)v606 = &off_250ADF208;
            *(_OWORD *)(v606 + 24) = xmmword_239F02840;
            *((_QWORD *)v606 + 5) = v605;
            v607 = (std::__shared_weak_count *)*((_QWORD *)&v2266 + 1);
            *(_QWORD *)&v2266 = v606 + 24;
            *((_QWORD *)&v2266 + 1) = v606;
            if (v607)
            {
              v608 = (unint64_t *)&v607->__shared_owners_;
              do
                v609 = __ldaxr(v608);
              while (__stlxr(v609 - 1, v608));
              if (!v609)
              {
                ((void (*)(std::__shared_weak_count *))v607->__on_zero_shared)(v607);
                std::__shared_weak_count::__release_weak(v607);
              }
            }
            v610 = v2266;
            *(_DWORD *)v2266 = 0;
            bzero(*(void **)(v610 + 16), 0x300000uLL);
            if (!v435)
              goto LABEL_899;
            v611 = v2259.__r_.__value_.__r.__words[0];
            v612 = (uint64_t)v2307;
            if (!v2307)
              goto LABEL_863;
            if (v2307 == v2306)
            {
              v2298 = v2297;
              (*(void (**)(_QWORD *, _BYTE *))(v2306[0] + 24))(v2306, v2297);
            }
            else
            {
              v612 = (*(uint64_t (**)(void))(*v2307 + 16))();
LABEL_863:
              v2298 = (_BYTE *)v612;
            }
            v613 = sub_2399FB73C(v611, v610, (uint64_t)&v2236, a6, a7, (uint64_t)v2297);
            v614 = v2298;
            if (v2298 == v2297)
            {
              v614 = v2297;
              v615 = 4;
LABEL_875:
              (*(void (**)(void))(*v614 + 8 * v615))();
              if ((v613 & 1) != 0)
                goto LABEL_878;
              goto LABEL_899;
            }
            if (v2298)
            {
              v615 = 5;
              goto LABEL_875;
            }
            if (!v613)
              goto LABEL_899;
LABEL_878:
            v616 = v2266;
            v617 = (uint64_t)v2307;
            if (!v2307)
              goto LABEL_881;
            if (v2307 == v2306)
            {
              v2296 = v2295;
              (*(void (**)(_QWORD *, _QWORD *))(v2306[0] + 24))(v2306, v2295);
            }
            else
            {
              v617 = (*(uint64_t (**)(void))(*v2307 + 16))();
LABEL_881:
              v2296 = (_QWORD *)v617;
            }
            v618 = sub_2399FC3B4(v616, (uint64_t)&v2236, a6, a7, v2106, v2295, v2127 != 0);
            v619 = v2296;
            if (v2296 == v2295)
            {
              v619 = v2295;
              v620 = 4;
LABEL_887:
              (*(void (**)(void))(*v619 + 8 * v620))();
              if ((v618 & 1) == 0)
                goto LABEL_899;
            }
            else
            {
              if (v2296)
              {
                v620 = 5;
                goto LABEL_887;
              }
              if (!v618)
              {
LABEL_899:
                v628 = 0;
                v627 = -1;
                goto LABEL_900;
              }
            }
            v621 = off_256934428[0];
            v622 = strlen(off_256934428[0]);
            if (v622 > 0x7FFFFFFFFFFFFFF7)
              sub_23941A5AC();
            v623 = v622;
            if (v622 >= 0x17)
            {
              v625 = (v622 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v622 | 7) != 0x17)
                v625 = v622 | 7;
              v626 = v625 + 1;
              v624 = operator new(v625 + 1);
              *(_QWORD *)&task_info_outCnt[16] = v626 | 0x8000000000000000;
              *(_QWORD *)task_info_outCnt = v624;
              *(_QWORD *)&task_info_outCnt[8] = v623;
            }
            else
            {
              task_info_outCnt[23] = v622;
              v624 = task_info_outCnt;
              if (!v622)
              {
LABEL_896:
                v624[v623] = 0;
                v2252 = 0;
                v627 = sub_23958CE84(v2125, (uint64_t)&v2252, task_info_outCnt);
                v628 = v627 != -1;
                if ((task_info_outCnt[23] & 0x80000000) != 0)
                  operator delete(*(void **)task_info_outCnt);
LABEL_900:
                v629 = &(*v2125)[2 * v627];
                v631 = *v629;
                v630 = (std::__shared_weak_count *)v629[1];
                if (v630)
                {
                  v632 = (unint64_t *)&v630->__shared_owners_;
                  do
                    v633 = __ldxr(v632);
                  while (__stxr(v633 + 1, v632));
                  do
                    v634 = __ldaxr(v632);
                  while (__stlxr(v634 - 1, v632));
                  if (!v634)
                  {
                    ((void (*)(std::__shared_weak_count *))v630->__on_zero_shared)(v630);
                    std::__shared_weak_count::__release_weak(v630);
                  }
                }
                if (!v628)
                {
                  v2129 = 0;
                  v639 = -1;
                  goto LABEL_919;
                }
                v635 = off_256934438[0];
                v636 = strlen(off_256934438[0]);
                if (v636 > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                v637 = v636;
                if (v636 >= 0x17)
                {
                  v640 = (v636 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v636 | 7) != 0x17)
                    v640 = v636 | 7;
                  v641 = v640 + 1;
                  v638 = operator new(v640 + 1);
                  *(_QWORD *)&task_info_outCnt[16] = v641 | 0x8000000000000000;
                  *(_QWORD *)task_info_outCnt = v638;
                  *(_QWORD *)&task_info_outCnt[8] = v637;
                }
                else
                {
                  task_info_outCnt[23] = v636;
                  v638 = task_info_outCnt;
                  if (!v636)
                  {
LABEL_916:
                    v638[v637] = 0;
                    v2253 = 0;
                    v639 = sub_2394E5C88(v2155, (uint64_t)&v2253, task_info_outCnt);
                    if ((task_info_outCnt[23] & 0x80000000) != 0)
                      operator delete(*(void **)task_info_outCnt);
                    v2129 = v639 != -1;
LABEL_919:
                    v642 = &(*v2155)[2 * v639];
                    v644 = *v642;
                    v643 = (std::__shared_weak_count *)v642[1];
                    if (v643)
                    {
                      v645 = (unint64_t *)&v643->__shared_owners_;
                      do
                        v646 = __ldxr(v645);
                      while (__stxr(v646 + 1, v645));
                      do
                        v647 = __ldaxr(v645);
                      while (__stlxr(v647 - 1, v645));
                      if (!v647)
                      {
                        ((void (*)(std::__shared_weak_count *))v643->__on_zero_shared)(v643);
                        std::__shared_weak_count::__release_weak(v643);
                      }
                    }
                    if (v2129)
                    {
                      v648 = off_256934418[0];
                      v649 = strlen(off_256934418[0]);
                      if (v649 > 0x7FFFFFFFFFFFFFF7)
                        sub_23941A5AC();
                      v650 = v649;
                      if (v649 >= 0x17)
                      {
                        v653 = (v649 & 0xFFFFFFFFFFFFFFF8) + 8;
                        if ((v649 | 7) != 0x17)
                          v653 = v649 | 7;
                        v654 = v653 + 1;
                        v651 = operator new(v653 + 1);
                        *(_QWORD *)&task_info_outCnt[16] = v654 | 0x8000000000000000;
                        *(_QWORD *)task_info_outCnt = v651;
                        *(_QWORD *)&task_info_outCnt[8] = v650;
                      }
                      else
                      {
                        task_info_outCnt[23] = v649;
                        v651 = task_info_outCnt;
                        if (!v649)
                          goto LABEL_935;
                      }
                      memmove(v651, v648, v650);
LABEL_935:
                      v651[v650] = 0;
                      v2255 = 0;
                      v2254 = 0;
                      v652 = sub_2394E5DE4(v2125, (uint64_t)&v2254, task_info_outCnt);
                      v2130 = v652 != -1;
                      if ((task_info_outCnt[23] & 0x80000000) != 0)
                        operator delete(*(void **)task_info_outCnt);
                    }
                    else
                    {
                      v2130 = 0;
                      v652 = -1;
                    }
                    v655 = &(*v2125)[2 * v652];
                    v656 = *v655;
                    v657 = (std::__shared_weak_count *)v655[1];
                    if (v657)
                    {
                      v658 = (unint64_t *)&v657->__shared_owners_;
                      do
                        v659 = __ldxr(v658);
                      while (__stxr(v659 + 1, v658));
                      do
                        v660 = __ldaxr(v658);
                      while (__stlxr(v660 - 1, v658));
                      if (!v660)
                      {
                        ((void (*)(std::__shared_weak_count *))v657->__on_zero_shared)(v657);
                        std::__shared_weak_count::__release_weak(v657);
                      }
                    }
                    *(_DWORD *)&task_info_outCnt[8] = 0;
                    *(_QWORD *)task_info_outCnt = 0;
                    v662 = *(_QWORD *)(v2162 + 152);
                    v661 = *(_QWORD *)(v2162 + 160);
                    if (v661 != v662)
                    {
                      v663 = 0;
                      v664 = 0;
                      while (1)
                      {
                        LODWORD(v2265.__r_.__value_.__l.__data_) = v663;
                        if (__vala == *(unsigned __int16 *)(*(_QWORD *)(v631 + 40) + 2 * v663))
                          break;
LABEL_946:
                        if (++v663 >= (unint64_t)((v661 - v662) >> 2))
                          goto LABEL_970;
                      }
                      sub_23996362C(v2162, (unsigned int *)&v2265, (uint64_t)&v2268);
                      v666 = 0;
                      v667 = *(_QWORD *)(v656 + 40) + 12 * LODWORD(v2265.__r_.__value_.__l.__data_);
                      v668 = v2268;
                      v669 = v2270.__r_.__value_.__r.__words[0];
                      v670 = v2266;
                      v671 = v2271;
                      while (2)
                      {
                        v672 = *(unsigned int *)(v668 + 4 * v666);
                        v673 = *(_QWORD *)(v669 + 8 * (v672 >> 6));
                        if (((1 << v672) & v673) == 0)
                        {
                          v674 = (float *)(*(_QWORD *)(v644 + 40) + 8 * *(unsigned int *)(v667 + 4 * v666));
                          v676 = *(_DWORD *)(v670 + 4);
                          v675 = *(_DWORD *)(v670 + 8);
                          v677 = (float)(*v674 * (float)v676) + -0.5;
                          if (v677 < 0.0)
                            v677 = 0.0;
                          if (v677 > (double)(v676 - 1))
                            v677 = (double)(v676 - 1);
                          v678 = (float)((float)(1.0 - v674[1]) * (float)v675) + -0.5;
                          v679 = (double)(v675 - 1);
                          if (v678 < 0.0)
                            v678 = 0.0;
                          if (v678 > v679)
                            v678 = (double)(v675 - 1);
                          v680 = *(unsigned int *)(v670 + 12);
                          if ((int)v680 >= 1)
                          {
                            v681 = v677;
                            v682 = v678;
                            v683 = (int)vcvtms_s32_f32(v681) % v676;
                            v684 = (int)vcvtms_s32_f32(v682) % v675;
                            v685 = v681 - (float)v683;
                            v686 = v682 - (float)v684;
                            v687 = (int)vcvtps_s32_f32(v682) % v675;
                            v688 = (int)vcvtps_s32_f32(v681) % v676;
                            v689 = *(_QWORD *)(v670 + 16);
                            v690 = v684 * v676;
                            v691 = ((v684 * v676 + v683) * v680);
                            v692 = v687 * v676;
                            v693 = ((v692 + v683) * v680);
                            v694 = ((v688 + v690) * v680);
                            v695 = ((v692 + v688) * v680);
                            *(float *)&v679 = 1.0 - v686;
                            *(float *)v665.i32 = 1.0 - v685;
                            if (v680 < 8)
                            {
                              v696 = 0;
                              goto LABEL_967;
                            }
                            v697 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v679, 0);
                            v698 = (float32x4_t *)(v689 + 16 + 4 * v691);
                            v699 = (float32x4_t)vdupq_lane_s32(v665, 0);
                            v696 = v680 & 0xFFFFFFF8;
                            v700 = (float32x4_t *)(v689 + 16 + 4 * v693);
                            v701 = (float32x4_t *)(v689 + 16 + 4 * v695);
                            v702 = (float32x4_t *)&task_info_outCnt[16];
                            v703 = v696;
                            v704 = (float32x4_t *)(v689 + 16 + 4 * v694);
                            do
                            {
                              v705 = vmlaq_f32(vmulq_n_f32(vmlaq_f32(vmulq_n_f32(*v701, v686), *v704, v697), v685), vmlaq_f32(vmulq_n_f32(*v700, v686), *v698, v697), v699);
                              v702[-1] = vmlaq_f32(vmulq_n_f32(vmlaq_f32(vmulq_n_f32(v701[-1], v686), v704[-1], v697), v685), vmlaq_f32(vmulq_n_f32(v700[-1], v686), v698[-1], v697), v699);
                              *v702 = v705;
                              v698 += 2;
                              v702 += 2;
                              v700 += 2;
                              v701 += 2;
                              v704 += 2;
                              v703 -= 8;
                            }
                            while (v703);
                            v206 = v2163;
                            if (v696 != v680)
                            {
LABEL_967:
                              v706 = v689 + 4 * v691;
                              v707 = v689 + 4 * v693;
                              v708 = v689 + 4 * v694;
                              v709 = v689 + 4 * v695;
                              do
                              {
                                *(float *)&task_info_outCnt[4 * v696] = (float)(v685
                                                                              * (float)((float)(v686
                                                                                              * *(float *)(v709 + 4 * v696))
                                                                                      + (float)(*(float *)&v679
                                                                                              * *(float *)(v708 + 4 * v696))))
                                                                      + (float)(*(float *)v665.i32
                                                                              * (float)((float)(v686
                                                                                              * *(float *)(v707 + 4 * v696))
                                                                                      + (float)(*(float *)&v679
                                                                                              * *(float *)(v706 + 4 * v696))));
                                ++v696;
                              }
                              while (v680 != v696);
                            }
                            v664 = *(_DWORD *)task_info_outCnt;
                          }
                          *(_DWORD *)(v671 + 4 * v672) = v664;
                          *(_QWORD *)(v669 + 8 * (v672 >> 6)) = (1 << v672) | v673;
                        }
                        if (++v666 == 3)
                        {
                          v662 = *(_QWORD *)(v2162 + 152);
                          v661 = *(_QWORD *)(v2162 + 160);
                          goto LABEL_946;
                        }
                        continue;
                      }
                    }
LABEL_970:
                    v710 = (std::__shared_weak_count *)*((_QWORD *)&v2266 + 1);
                    v435 = v2130;
                    if (*((_QWORD *)&v2266 + 1))
                    {
                      v711 = (unint64_t *)(*((_QWORD *)&v2266 + 1) + 8);
                      do
                        v712 = __ldaxr(v711);
                      while (__stlxr(v712 - 1, v711));
                      if (!v712)
                      {
                        ((void (*)(std::__shared_weak_count *))v710->__on_zero_shared)(v710);
                        std::__shared_weak_count::__release_weak(v710);
                      }
                    }
                    v278 = v278 + (double)(std::chrono::system_clock::now().__d_.__rep_ - v2111.__d_.__rep_) / 1000000.0;
                    goto LABEL_976;
                  }
                }
                memmove(v638, v635, v637);
                goto LABEL_916;
              }
            }
            memmove(v624, v621, v623);
            goto LABEL_896;
          }
LABEL_976:
          v281 = v435 != 0;
          v713 = (std::__shared_weak_count *)v2259.__r_.__value_.__l.__size_;
          if (v2259.__r_.__value_.__l.__size_)
          {
            v714 = (unint64_t *)(v2259.__r_.__value_.__l.__size_ + 8);
            do
              v715 = __ldaxr(v714);
            while (__stlxr(v715 - 1, v714));
            if (!v715)
            {
              ((void (*)(std::__shared_weak_count *))v713->__on_zero_shared)(v713);
              std::__shared_weak_count::__release_weak(v713);
            }
          }
          if (++__vala == v2147)
          {
            if (*(_BYTE *)(v206 + 48))
            {
              v716.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
              v254 = v2164;
              v394 = v2101;
              if ((v281 & 1) != 0)
LABEL_993:
                v281 = sub_23996C564(v2162, (uint64_t)&v2271);
              else
                v281 = 0;
              v278 = v278 + (double)(std::chrono::system_clock::now().__d_.__rep_ - v716.__d_.__rep_) / 1000000.0;
            }
            else
            {
              v254 = v2164;
              v394 = v2101;
            }
            goto LABEL_999;
          }
        }
        v419 = (*(uint64_t (**)(void))(*v2307 + 16))();
LABEL_580:
        v2303 = (_QWORD *)v419;
        goto LABEL_582;
      }
      if (*(_BYTE *)(v206 + 48))
      {
        v716.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
        goto LABEL_993;
      }
      v281 = 1;
LABEL_999:
      kdebug_trace();
      if ((_QWORD)v2268)
      {
        *((_QWORD *)&v2268 + 1) = v2268;
        operator delete((void *)v2268);
      }
      sub_23992A6A0((uint64_t)task_info_out);
      v393 = v2147;
    }
    if ((v394 & v281) == 1)
      sub_2399FC9C0();
    std::chrono::system_clock::now();
    std::chrono::system_clock::now();
    kdebug_trace();
    __valb = *(unsigned __int8 *)(v206 + 264);
    if (*(_BYTE *)(v206 + 184) | __valb)
    {
      sub_23992686C((uint64_t)__dst);
      sub_239926AA0((uint64_t)&v2212, v393);
      if (!v393)
        goto LABEL_1333;
      v717 = 0;
      v2158 = v254 + 6;
      v2115 = (uint64_t *)(v206 + 480);
      v2109 = a11 + 12;
      if (v2122 <= 1)
        v718 = 1;
      else
        v718 = v2122;
      v2139 = 4 * v718;
      while (1)
      {
        if (v2309 && ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
          goto LABEL_1833;
        *((_DWORD *)v2212 + 12 * v717) = 4;
        v719 = *(const void ***)(v2146 + 8);
        if (!v719)
LABEL_2851:
          sub_23941D898("map::at:  key not found");
        v720 = (const void **)v2222;
        v721 = (char *)v2222 + 24 * v717;
        while (1)
        {
          while (1)
          {
            v722 = *((unsigned __int16 *)v719 + 16);
            if (v722 <= (unsigned __int16)v717)
              break;
            v719 = (const void **)*v719;
            if (!v719)
              goto LABEL_2851;
          }
          if (v722 >= (unsigned __int16)v717)
            break;
          v719 = (const void **)v719[1];
          if (!v719)
            goto LABEL_2851;
        }
        v723 = v281;
        *(_QWORD *)task_info_out = v719 + 5;
        v724 = *((unsigned __int16 *)sub_23958C73C(v2158, v719 + 5, (uint64_t)&unk_239EC6E98, (__int128 **)task_info_out)
               + 28);
        v725 = *v254;
        *(_OWORD *)&v2261.__r_.__value_.__l.__data_ = 0uLL;
        v726 = operator new[]();
        v727 = operator new(0x30uLL);
        v727[1] = 0;
        v727[2] = 0;
        *v727 = &off_250ADF208;
        *((_DWORD *)v727 + 6) = 0;
        *((_DWORD *)v727 + 7) = v2145;
        *((_DWORD *)v727 + 8) = v2145;
        *((_DWORD *)v727 + 9) = 1;
        v727[5] = v726;
        v729 = (std::__shared_weak_count *)v2261.__r_.__value_.__l.__size_;
        v2261.__r_.__value_.__r.__words[0] = (std::string::size_type)(v727 + 3);
        v2261.__r_.__value_.__l.__size_ = (std::string::size_type)v727;
        if (v729)
        {
          v730 = (unint64_t *)&v729->__shared_owners_;
          do
            v731 = __ldaxr(v730);
          while (__stlxr(v731 - 1, v730));
          if (!v731)
          {
            ((void (*)(std::__shared_weak_count *))v729->__on_zero_shared)(v729);
            std::__shared_weak_count::__release_weak(v729);
          }
        }
        v732 = v2261.__r_.__value_.__r.__words[0];
        *(_DWORD *)v2261.__r_.__value_.__l.__data_ = 1;
        if (v2145)
          bzero(*(void **)(v732 + 16), v2139);
        v733 = vsubq_f32(v2232, v2231);
        v734 = v733.f32[1];
        if (v733.f32[0] >= v733.f32[1])
          v734 = v733.f32[0];
        if (v734 >= v733.f32[2])
          v735 = v734;
        else
          v735 = v733.f32[2];
        if ((v723 & 1) == 0)
        {
          if (!*(_BYTE *)(v206 + 48))
            goto LABEL_1069;
          v740.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
          goto LABEL_1057;
        }
        v736 = *(float *)(v206 + 44);
        v737 = *(_DWORD *)(v206 + 40);
        v738 = v2215;
        v739 = (uint64_t)v2309;
        if (!v2309)
          goto LABEL_1035;
        if (v2309 != v2308)
          break;
        v2294 = v2293;
        (*(void (**)(_QWORD *, _QWORD *))(v2308[0] + 24))(v2308, v2293);
LABEL_1039:
        v741 = (uint64_t)v2307;
        if (!v2307)
          goto LABEL_1042;
        if (v2307 != v2306)
        {
          v741 = (*(uint64_t (**)(void))(*v2307 + 16))();
LABEL_1042:
          v2292 = (_QWORD *)v741;
          goto LABEL_1044;
        }
        v2292 = v2291;
        (*(void (**)(_QWORD *, _QWORD *))(v2306[0] + 24))(v2306, v2291);
LABEL_1044:
        v742 = sub_23996DC7C(v2137, (uint64_t)v721, (uint64_t)v738 + 24 * v717, v732, &__src, v737, v2293, fmaxf(v735 * 0.00001, 0.0000005), v736, v728, a6, a7, v2115, v2291, v2127 != 0);
        v743 = v2292;
        if (v2292 == v2291)
        {
          v743 = v2291;
          v744 = 4;
        }
        else
        {
          if (!v2292)
            goto LABEL_1049;
          v744 = 5;
        }
        (*(void (**)(void))(*v743 + 8 * v744))();
LABEL_1049:
        v745 = v2294;
        if (v2294 == v2293)
        {
          v745 = v2293;
          v746 = 4;
        }
        else
        {
          if (!v2294)
            goto LABEL_1054;
          v746 = 5;
        }
        (*(void (**)(void))(*v745 + 8 * v746))();
LABEL_1054:
        if (*(_BYTE *)(v206 + 48))
        {
          v740.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
          if (v742)
          {
            v747 = sub_23996C740(v2162, &v2271, (uint64_t)v721, (uint64_t)v2220 + 24 * v717, (uint64_t)v2218 + 24 * v717, (uint64_t)v2261.__r_.__value_.__l.__data_);
            goto LABEL_1058;
          }
LABEL_1057:
          v747 = 0;
LABEL_1058:
          v278 = v278 + (double)(std::chrono::system_clock::now().__d_.__rep_ - v740.__d_.__rep_) / 1000000.0;
          if ((v747 & 1) == 0)
            goto LABEL_1069;
          goto LABEL_1061;
        }
        if (!v742)
          goto LABEL_1069;
LABEL_1061:
        if (!sub_239927458((uint64_t)v2261.__r_.__value_.__l.__data_, v720[3 * v717 + 2], -1))
        {
LABEL_1069:
          v2131 = 0;
          v758 = *(unsigned __int8 *)(v206 + 184);
          if (!a12)
            goto LABEL_1111;
          goto LABEL_1070;
        }
        v748 = *(_DWORD *)(v2261.__r_.__value_.__r.__words[0] + 8);
        if (v748 < 2)
          goto LABEL_1110;
        v749 = *(unsigned int *)(v2261.__r_.__value_.__r.__words[0] + 4);
        if (!(_DWORD)v749)
          goto LABEL_1110;
        v750 = *(unsigned int *)(v2261.__r_.__value_.__r.__words[0] + 12);
        if (!(_DWORD)v750)
          goto LABEL_1110;
        v751 = v748 >> 1;
        v752 = *(_QWORD *)(v2261.__r_.__value_.__r.__words[0] + 16);
        if (v748 >> 1 <= 1)
          v751 = 1;
        v753 = v749 * v750;
        v754 = v748 - 1;
        v755 = v749 * v750 * (v748 - 1);
        if (v750 < 8)
        {
          v756 = 0;
          v757 = 0;
          do
          {
            v772 = 0;
            v773 = v749;
            do
            {
              v774 = (int *)(v752 + 4 * (v756 + v772));
              v775 = (int *)(v752 + 4 * (v755 + v772));
              v776 = *v774;
              *v774 = *v775;
              *v775 = v776;
              if ((_DWORD)v750 != 1)
              {
                v777 = v774[1];
                v774[1] = v775[1];
                v775[1] = v777;
                if ((_DWORD)v750 != 2)
                {
                  v778 = v774[2];
                  v774[2] = v775[2];
                  v775[2] = v778;
                  if ((_DWORD)v750 != 3)
                  {
                    v779 = v774[3];
                    v774[3] = v775[3];
                    v775[3] = v779;
                    if ((_DWORD)v750 != 4)
                    {
                      v780 = v774[4];
                      v774[4] = v775[4];
                      v775[4] = v780;
                      if ((_DWORD)v750 != 5)
                      {
                        v781 = v774[5];
                        v774[5] = v775[5];
                        v775[5] = v781;
                        if ((_DWORD)v750 != 6)
                        {
                          v782 = v774[6];
                          v774[6] = v775[6];
                          v775[6] = v782;
                        }
                      }
                    }
                  }
                }
              }
              v772 += v750;
              --v773;
            }
            while (v773);
            ++v757;
            v755 -= v753;
            v756 += v753;
          }
          while (v757 != v751);
LABEL_1110:
          v2131 = 1;
          v758 = *(unsigned __int8 *)(v206 + 184);
          if (!a12)
            goto LABEL_1111;
LABEL_1070:
          if (v758)
          {
            HIBYTE(v2241) = 5;
            strcpy((char *)task_info_out, "uchar");
            *((_BYTE *)&v2243[0].__r_.__value_.__s + 23) = 4;
            strcpy((char *)v2243, ".jpg");
            v759 = *(float *)(v206 + 216) * 100.0;
            if (v759 < 1.0)
              v759 = 1.0;
            if (v759 > 100.0)
              v759 = 100.0;
            v2242 = (int)v759;
            std::operator+<char>();
            if (SHIBYTE(v2243[0].__r_.__value_.__r.__words[2]) < 0)
              operator delete(v2243[0].__r_.__value_.__l.__data_);
            v2243[0] = v2256;
            v760 = &v725[6 * v724];
            v763 = (uint64_t *)v760[4];
            v762 = (uint64_t **)(v760 + 4);
            v761 = v763;
            if (v763)
            {
              while (1)
              {
                while (1)
                {
                  v765 = (uint64_t **)v761;
                  v766 = *((_DWORD *)v761 + 7);
                  if (v766 < 5)
                    break;
                  v761 = *v765;
                  v764 = v765;
                  if (!*v765)
                    goto LABEL_1084;
                }
                if (v766 == 4)
                  break;
                v761 = v765[1];
                if (!v761)
                {
                  v764 = v765 + 1;
                  goto LABEL_1084;
                }
              }
              v767 = v765;
            }
            else
            {
              v764 = v762;
              v765 = v762;
LABEL_1084:
              v767 = operator new(0x28uLL);
              v767[7] = 4;
              *((_WORD *)v767 + 16) = 0;
              *(_QWORD *)v767 = 0;
              *((_QWORD *)v767 + 1) = 0;
              *((_QWORD *)v767 + 2) = v765;
              *v764 = (uint64_t *)v767;
              v769 = (uint64_t **)*(v762 - 1);
              v768 = v762 - 1;
              v770 = *v769;
              v771 = (uint64_t *)v767;
              if (*v769)
              {
                *v768 = v770;
                v771 = *v764;
              }
              sub_2394213B8(v768[1], v771);
              v768[2] = (uint64_t *)((char *)v768[2] + 1);
            }
            v849 = *((unsigned __int16 *)v767 + 16);
            v850 = v254[3];
            v851 = std::__fs::filesystem::path::__stem(a13);
            if (v851.__size_ > 0x7FFFFFFFFFFFFFF7)
              sub_23941A5AC();
            if (v851.__size_ >= 0x17)
            {
              v853 = (v851.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v851.__size_ | 7) != 0x17)
                v853 = v851.__size_ | 7;
              v854 = v853 + 1;
              v852 = (__int128 *)operator new(v853 + 1);
              v2258 = v854 | 0x8000000000000000;
              *(_QWORD *)&v2257 = v852;
              *((_QWORD *)&v2257 + 1) = v851.__size_;
            }
            else
            {
              HIBYTE(v2258) = v851.__size_;
              v852 = &v2257;
              if (!v851.__size_)
              {
LABEL_1195:
                *((_BYTE *)v852 + v851.__size_) = 0;
                v855 = *((_QWORD *)&v2257 + 1);
                v856 = (void *)v2257;
                LODWORD(v2268) = v2258;
                *(_DWORD *)((char *)&v2268 + 3) = *(_DWORD *)((char *)&v2258 + 3);
                if (SHIBYTE(v2258) < 0)
                {
                  sub_23941A7F8(task_info_outCnt, (void *)v2257, *((unint64_t *)&v2257 + 1));
                  operator delete(v856);
                }
                else
                {
                  *(_OWORD *)task_info_outCnt = v2257;
                  *(_DWORD *)&task_info_outCnt[16] = v2268;
                  *(_DWORD *)&task_info_outCnt[19] = *(_DWORD *)((char *)&v2268 + 3);
                  task_info_outCnt[23] = HIBYTE(v2258);
                }
                v857 = (std::string *)&v850[6 * v849];
                v2268 = 0uLL;
                v2269 = 0;
                v858 = LODWORD(v857->__r_.__value_.__l.__data_) - 1;
                if (v858 < 0xD)
                  MEMORY[0x23B83DBFC](&v2268, off_250AF0168[v858], v855);
                v859 = task_info_outCnt[23];
                if (task_info_outCnt[23] >= 0)
                  v860 = task_info_outCnt[23];
                else
                  v860 = *(_QWORD *)&task_info_outCnt[8];
                v861 = v860 + 1;
                if (v860 + 1 > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                if (v861 >= 0x17)
                {
                  v863 = (v861 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v861 | 7) != 0x17)
                    v863 = v861 | 7;
                  v864 = v863 + 1;
                  v862 = (char *)operator new(v863 + 1);
                  v2263.__r_.__value_.__r.__words[2] = v864 | 0x8000000000000000;
                  v2263.__r_.__value_.__r.__words[0] = (std::string::size_type)v862;
                  v2263.__r_.__value_.__l.__size_ = v860 + 1;
                }
                else
                {
                  memset(&v2263, 0, sizeof(v2263));
                  v862 = (char *)&v2263;
                  *((_BYTE *)&v2263.__r_.__value_.__s + 23) = v860 + 1;
                  if (!v860)
                    goto LABEL_1214;
                }
                if (v859 >= 0)
                  v865 = task_info_outCnt;
                else
                  v865 = *(_BYTE **)task_info_outCnt;
                memmove(v862, v865, v860);
LABEL_1214:
                *(_WORD *)&v862[v860] = 95;
                if (v2269 >= 0)
                  v866 = (const std::string::value_type *)&v2268;
                else
                  v866 = (const std::string::value_type *)v2268;
                if (v2269 >= 0)
                  v867 = HIBYTE(v2269);
                else
                  v867 = *((_QWORD *)&v2268 + 1);
                v868 = std::string::append(&v2263, v866, v867);
                v869 = *(_OWORD *)&v868->__r_.__value_.__l.__data_;
                v2264.__r_.__value_.__r.__words[2] = v868->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v2264.__r_.__value_.__l.__data_ = v869;
                v868->__r_.__value_.__l.__size_ = 0;
                v868->__r_.__value_.__r.__words[2] = 0;
                v868->__r_.__value_.__r.__words[0] = 0;
                std::to_string(&v2262, v717);
                if ((v2262.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v870 = &v2262;
                else
                  v870 = (std::string *)v2262.__r_.__value_.__r.__words[0];
                if ((v2262.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v871 = HIBYTE(v2262.__r_.__value_.__r.__words[2]);
                else
                  v871 = v2262.__r_.__value_.__l.__size_;
                v872 = std::string::append(&v2264, (const std::string::value_type *)v870, v871);
                v873 = *(_OWORD *)&v872->__r_.__value_.__l.__data_;
                v2265.__r_.__value_.__r.__words[2] = v872->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v2265.__r_.__value_.__l.__data_ = v873;
                v872->__r_.__value_.__l.__size_ = 0;
                v872->__r_.__value_.__r.__words[2] = 0;
                v872->__r_.__value_.__r.__words[0] = 0;
                if ((v2243[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v874 = v2243;
                else
                  v874 = (std::string *)v2243[0].__r_.__value_.__r.__words[0];
                if ((v2243[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v875 = HIBYTE(v2243[0].__r_.__value_.__r.__words[2]);
                else
                  v875 = v2243[0].__r_.__value_.__l.__size_;
                v876 = std::string::append(&v2265, (const std::string::value_type *)v874, v875);
                v877 = *(_OWORD *)&v876->__r_.__value_.__l.__data_;
                v2267 = v876->__r_.__value_.__r.__words[2];
                v2266 = v877;
                v876->__r_.__value_.__l.__size_ = 0;
                v876->__r_.__value_.__r.__words[2] = 0;
                v876->__r_.__value_.__r.__words[0] = 0;
                if ((SHIBYTE(v2265.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                {
                  v878 = v2131;
                  if ((SHIBYTE(v2262.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    goto LABEL_1234;
LABEL_1257:
                  operator delete(v2262.__r_.__value_.__l.__data_);
                  if (SHIBYTE(v2264.__r_.__value_.__r.__words[2]) < 0)
                    goto LABEL_1258;
LABEL_1235:
                  if ((SHIBYTE(v2263.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    goto LABEL_1236;
LABEL_1259:
                  operator delete(v2263.__r_.__value_.__l.__data_);
                  goto LABEL_1236;
                }
                operator delete(v2265.__r_.__value_.__l.__data_);
                v878 = v2131;
                if (SHIBYTE(v2262.__r_.__value_.__r.__words[2]) < 0)
                  goto LABEL_1257;
LABEL_1234:
                if ((SHIBYTE(v2264.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                  goto LABEL_1235;
LABEL_1258:
                operator delete(v2264.__r_.__value_.__l.__data_);
                if (SHIBYTE(v2263.__r_.__value_.__r.__words[2]) < 0)
                  goto LABEL_1259;
LABEL_1236:
                v879 = std::__fs::filesystem::path::__parent_path(a13);
                if (v879.__size_ > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                if (v879.__size_ >= 0x17)
                {
                  v881 = (v879.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v879.__size_ | 7) != 0x17)
                    v881 = v879.__size_ | 7;
                  v882 = v881 + 1;
                  v880 = (std::string *)operator new(v881 + 1);
                  v2259.__r_.__value_.__r.__words[2] = v882 | 0x8000000000000000;
                  v2259.__r_.__value_.__r.__words[0] = (std::string::size_type)v880;
                  v2259.__r_.__value_.__l.__size_ = v879.__size_;
                }
                else
                {
                  *((_BYTE *)&v2259.__r_.__value_.__s + 23) = v879.__size_;
                  v880 = &v2259;
                  if (!v879.__size_)
                  {
LABEL_1244:
                    v880->__r_.__value_.__s.__data_[v879.__size_] = 0;
                    v2264 = v2259;
                    memset(&v2263, 0, sizeof(v2263));
                    v883 = HIBYTE(v2267);
                    if (v2267 >= 0)
                      v884 = (std::string *)&v2266;
                    else
                      v884 = (std::string *)v2266;
                    if (v2267 < 0)
                      v883 = *((_QWORD *)&v2266 + 1);
                    sub_23948900C(&v2263, v884, (std::string *)((char *)v884 + v883));
                    v254 = v2164;
                    sub_239498A04((std::__fs::filesystem::path *)&v2263, (uint64_t)&v2264, (std::__fs::filesystem::path *)&v2265);
                    if (SHIBYTE(v2263.__r_.__value_.__r.__words[2]) < 0)
                    {
                      operator delete(v2263.__r_.__value_.__l.__data_);
                      if (SHIBYTE(v2264.__r_.__value_.__r.__words[2]) < 0)
                        goto LABEL_1261;
LABEL_1251:
                      if (v878)
                        goto LABEL_1252;
LABEL_1262:
                      v281 = 0;
                    }
                    else
                    {
                      if ((SHIBYTE(v2264.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                        goto LABEL_1251;
LABEL_1261:
                      operator delete(v2264.__r_.__value_.__l.__data_);
                      if (!v878)
                        goto LABEL_1262;
LABEL_1252:
                      v885 = v2261.__r_.__value_.__r.__words[0];
                      v886 = a11[15];
                      if (v886)
                      {
                        if ((_QWORD *)v886 != v2109)
                        {
                          v886 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v886 + 16))(v886);
                          goto LABEL_1255;
                        }
                        v2290 = v2289;
                        (*(void (**)(_QWORD *, _BYTE *))(*v2109 + 24))(v2109, v2289);
                      }
                      else
                      {
LABEL_1255:
                        v2290 = (_BYTE *)v886;
                      }
                      v281 = sub_239975928((__int128 *)&v2265, v885, (uint64_t)task_info_out, (uint64_t)v2289, 1);
                      v887 = v2290;
                      if (v2290 == v2289)
                      {
                        v887 = v2289;
                        v888 = 4;
LABEL_1268:
                        (*(void (**)(void))(*v887 + 8 * v888))();
                      }
                      else if (v2290)
                      {
                        v888 = 5;
                        goto LABEL_1268;
                      }
                    }
                    if (a10)
                    {
                      v889 = *(_QWORD *)(a9 + 8);
                      if (v889 >= *(_QWORD *)(a9 + 16))
                      {
                        v891 = sub_23958837C((char **)a9, (uint64_t)&v2265);
                        v892 = a9;
                      }
                      else
                      {
                        if (SHIBYTE(v2265.__r_.__value_.__r.__words[2]) < 0)
                        {
                          sub_23941A7F8(*(_BYTE **)(a9 + 8), v2265.__r_.__value_.__l.__data_, v2265.__r_.__value_.__l.__size_);
                        }
                        else
                        {
                          v890 = *(_OWORD *)&v2265.__r_.__value_.__l.__data_;
                          *(_QWORD *)(v889 + 16) = *((_QWORD *)&v2265.__r_.__value_.__l + 2);
                          *(_OWORD *)v889 = v890;
                        }
                        v891 = (char *)(v889 + 24);
                        v892 = a9;
                        *(_QWORD *)(a9 + 8) = v889 + 24;
                      }
                      *(_QWORD *)(v892 + 8) = v891;
                    }
                    if (SHIBYTE(v2265.__r_.__value_.__r.__words[2]) < 0)
                      sub_23941A7F8(&v2197, v2265.__r_.__value_.__l.__data_, v2265.__r_.__value_.__l.__size_);
                    else
                      v2197 = v2265;
                    sub_2399272D8(v857, &v2197);
                    if (SHIBYTE(v2197.__r_.__value_.__r.__words[2]) < 0)
                      operator delete(v2197.__r_.__value_.__l.__data_);
                    if (__valb)
                    {
                      v893 = (std::string *)v2212;
                      if (SHIBYTE(v2265.__r_.__value_.__r.__words[2]) < 0)
                        sub_23941A7F8(&v2196, v2265.__r_.__value_.__l.__data_, v2265.__r_.__value_.__l.__size_);
                      else
                        v2196 = v2265;
                      sub_2399272D8(&v893[2 * v717], &v2196);
                      if (SHIBYTE(v2196.__r_.__value_.__r.__words[2]) < 0)
                        operator delete(v2196.__r_.__value_.__l.__data_);
                      if (a11[15])
                      {
                        v894 = v2212;
                        v2195 = *(_OWORD *)&v2261.__r_.__value_.__l.__data_;
                        if (v2261.__r_.__value_.__l.__size_)
                        {
                          v895 = (unint64_t *)(v2261.__r_.__value_.__l.__size_ + 8);
                          do
                            v896 = __ldxr(v895);
                          while (__stxr(v896 + 1, v895));
                        }
                        sub_2399273B0((uint64_t)v894 + 48 * v717, (uint64_t *)&v2195);
                        sub_239416DA0((uint64_t)&v2195);
                      }
                    }
                    if (SHIBYTE(v2265.__r_.__value_.__r.__words[2]) < 0)
                    {
                      operator delete(v2265.__r_.__value_.__l.__data_);
                      if (SHIBYTE(v2267) < 0)
                        goto LABEL_1307;
LABEL_1295:
                      if ((SHIBYTE(v2269) & 0x80000000) == 0)
                        goto LABEL_1296;
LABEL_1308:
                      operator delete((void *)v2268);
                      if ((task_info_outCnt[23] & 0x80000000) != 0)
                        goto LABEL_1309;
LABEL_1297:
                      if ((SHIBYTE(v2243[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                        goto LABEL_1298;
LABEL_1310:
                      operator delete(v2243[0].__r_.__value_.__l.__data_);
                      if ((SHIBYTE(v2241) & 0x80000000) == 0)
                        goto LABEL_1299;
                    }
                    else
                    {
                      if ((SHIBYTE(v2267) & 0x80000000) == 0)
                        goto LABEL_1295;
LABEL_1307:
                      operator delete((void *)v2266);
                      if (SHIBYTE(v2269) < 0)
                        goto LABEL_1308;
LABEL_1296:
                      if ((task_info_outCnt[23] & 0x80000000) == 0)
                        goto LABEL_1297;
LABEL_1309:
                      operator delete(*(void **)task_info_outCnt);
                      if (SHIBYTE(v2243[0].__r_.__value_.__r.__words[2]) < 0)
                        goto LABEL_1310;
LABEL_1298:
                      if ((SHIBYTE(v2241) & 0x80000000) == 0)
                        goto LABEL_1299;
                    }
                    operator delete(*(void **)task_info_out);
                    v848 = (std::__shared_weak_count *)v2261.__r_.__value_.__l.__size_;
                    if (v2261.__r_.__value_.__l.__size_)
                      goto LABEL_1300;
                    goto LABEL_1304;
                  }
                }
                memmove(v880, v879.__data_, v879.__size_);
                goto LABEL_1244;
              }
            }
            memmove(v852, v851.__data_, v851.__size_);
            goto LABEL_1195;
          }
          v783 = v2212;
          v785 = (std::__shared_weak_count *)v2261.__r_.__value_.__l.__size_;
          v784 = v2261.__r_.__value_.__r.__words[0];
          v281 = v2131;
          if (v2261.__r_.__value_.__l.__size_)
          {
            v786 = (unint64_t *)(v2261.__r_.__value_.__l.__size_ + 8);
            do
              v787 = __ldxr(v786);
            while (__stxr(v787 + 1, v786));
            do
              v788 = __ldxr(v786);
            while (__stxr(v788 + 1, v786));
          }
          v789 = &v783[48 * v717];
          *((_QWORD *)v789 + 1) = v784;
          v790 = (std::string::size_type *)(v789 + 8);
          v791 = (std::__shared_weak_count *)v790[1];
          v790[1] = (std::string::size_type)v785;
          if (v791)
          {
            v792 = (unint64_t *)&v791->__shared_owners_;
            do
              v793 = __ldaxr(v792);
            while (__stlxr(v793 - 1, v792));
            if (!v793)
            {
              ((void (*)(std::__shared_weak_count *))v791->__on_zero_shared)(v791);
              std::__shared_weak_count::__release_weak(v791);
            }
            v784 = *v790;
          }
          v794 = v784 && *(_QWORD *)(v784 + 16);
          v783[48 * v717 + 4] = v794;
          if (!v785)
            goto LABEL_1299;
          v818 = (unint64_t *)&v785->__shared_owners_;
          do
            v819 = __ldaxr(v818);
          while (__stlxr(v819 - 1, v818));
LABEL_1183:
          if (v819)
            goto LABEL_1299;
          ((void (*)(std::__shared_weak_count *))v785->__on_zero_shared)(v785);
          std::__shared_weak_count::__release_weak(v785);
          v848 = (std::__shared_weak_count *)v2261.__r_.__value_.__l.__size_;
          if (v2261.__r_.__value_.__l.__size_)
            goto LABEL_1300;
          goto LABEL_1304;
        }
        v899 = 0;
        v900 = 0;
        v901 = v752 + 4 * v750;
        v902 = v752 + 16;
        v903 = v749 * v750;
        v904 = v749 * v750 * v754;
        while (2)
        {
          v905 = 0;
          v906 = v904;
          v907 = v899;
          do
          {
            v908 = 4 * v906;
            v909 = 4 * v907;
            v910 = 4 * (v755 + v900 * -(v749 * v750) + v905 * v750);
            v911 = v901 + v910;
            v912 = v752 + v910;
            v913 = 4 * (v900 * v753 + v905 * v750);
            if (v752 + v913 < v911 && v912 < v901 + v913)
            {
              v921 = 0;
LABEL_1325:
              v922 = v750 - v921;
              v923 = 4 * v921;
              v924 = (int *)(v752 + v923 + v908);
              v925 = (int *)(v752 + v923 + v909);
              do
              {
                v926 = *v925;
                *v925++ = *v924;
                *v924++ = v926;
                --v922;
              }
              while (v922);
              goto LABEL_1316;
            }
            v915 = (__int128 *)(v902 + v909);
            v916 = (__int128 *)(v902 + v908);
            v917 = v750 & 0xFFFFFFF8;
            do
            {
              v918 = *(v915 - 1);
              v919 = *v915;
              v920 = *v916;
              *(v915 - 1) = *(v916 - 1);
              *v915 = v920;
              *(v916 - 1) = v918;
              *v916 = v919;
              v915 += 2;
              v916 += 2;
              v917 -= 8;
            }
            while (v917);
            v921 = v750 & 0xFFFFFFF8;
            if (v921 != v750)
              goto LABEL_1325;
LABEL_1316:
            ++v905;
            v907 += v750;
            v906 += v750;
          }
          while (v905 != v749);
          ++v900;
          v899 += v903;
          v904 -= v903;
          if (v900 != v751)
            continue;
          break;
        }
        v2131 = 1;
        v254 = v2164;
        v206 = v2163;
        v758 = *(unsigned __int8 *)(v2163 + 184);
        if (a12)
          goto LABEL_1070;
LABEL_1111:
        if (!v758)
        {
          v807 = v2212;
          v785 = (std::__shared_weak_count *)v2261.__r_.__value_.__l.__size_;
          v808 = v2261.__r_.__value_.__r.__words[0];
          v281 = v2131;
          if (v2261.__r_.__value_.__l.__size_)
          {
            v809 = (unint64_t *)(v2261.__r_.__value_.__l.__size_ + 8);
            do
              v810 = __ldxr(v809);
            while (__stxr(v810 + 1, v809));
            do
              v811 = __ldxr(v809);
            while (__stxr(v811 + 1, v809));
          }
          v812 = &v807[48 * v717];
          *((_QWORD *)v812 + 1) = v808;
          v813 = (std::string::size_type *)(v812 + 8);
          v814 = (std::__shared_weak_count *)v813[1];
          v813[1] = (std::string::size_type)v785;
          if (v814)
          {
            v815 = (unint64_t *)&v814->__shared_owners_;
            do
              v816 = __ldaxr(v815);
            while (__stlxr(v816 - 1, v815));
            if (!v816)
            {
              ((void (*)(std::__shared_weak_count *))v814->__on_zero_shared)(v814);
              std::__shared_weak_count::__release_weak(v814);
            }
            v808 = *v813;
          }
          v817 = v808 && *(_QWORD *)(v808 + 16);
          v807[48 * v717 + 4] = v817;
          if (!v785)
            goto LABEL_1299;
          v820 = (unint64_t *)&v785->__shared_owners_;
          do
            v819 = __ldaxr(v820);
          while (__stlxr(v819 - 1, v820));
          goto LABEL_1183;
        }
        v795 = &v725[6 * v724];
        v798 = (uint64_t *)v795[4];
        v797 = (uint64_t **)(v795 + 4);
        v796 = v798;
        if (v798)
        {
          while (1)
          {
            while (1)
            {
              v800 = (uint64_t **)v796;
              v801 = *((_DWORD *)v796 + 7);
              if (v801 < 5)
                break;
              v796 = *v800;
              v799 = v800;
              if (!*v800)
                goto LABEL_1119;
            }
            if (v801 == 4)
              break;
            v796 = v800[1];
            if (!v796)
            {
              v799 = v800 + 1;
              goto LABEL_1119;
            }
          }
          v802 = v800;
        }
        else
        {
          v799 = v797;
          v800 = v797;
LABEL_1119:
          v802 = operator new(0x28uLL);
          v802[7] = 4;
          *((_WORD *)v802 + 16) = 0;
          *(_QWORD *)v802 = 0;
          *((_QWORD *)v802 + 1) = 0;
          *((_QWORD *)v802 + 2) = v800;
          *v799 = (uint64_t *)v802;
          v804 = (uint64_t **)*(v797 - 1);
          v803 = v797 - 1;
          v805 = *v804;
          v806 = (uint64_t *)v802;
          if (*v804)
          {
            *v803 = v805;
            v806 = *v799;
          }
          sub_2394213B8(v803[1], v806);
          v803[2] = (uint64_t *)((char *)v803[2] + 1);
        }
        v821 = *((unsigned __int16 *)v802 + 16);
        v822 = v254[3];
        v824 = (std::__shared_weak_count *)v2261.__r_.__value_.__l.__size_;
        v823 = v2261.__r_.__value_.__r.__words[0];
        if (v2261.__r_.__value_.__l.__size_)
        {
          v825 = (unint64_t *)(v2261.__r_.__value_.__l.__size_ + 8);
          do
            v826 = __ldxr(v825);
          while (__stxr(v826 + 1, v825));
          do
            v827 = __ldxr(v825);
          while (__stxr(v827 + 1, v825));
        }
        v828 = &v822[6 * v821];
        v828[1] = v823;
        v829 = (std::string::size_type *)(v828 + 1);
        v830 = (std::__shared_weak_count *)v829[1];
        v829[1] = (std::string::size_type)v824;
        if (v830)
        {
          v831 = (unint64_t *)&v830->__shared_owners_;
          do
            v832 = __ldaxr(v831);
          while (__stlxr(v832 - 1, v831));
          if (!v832)
          {
            ((void (*)(std::__shared_weak_count *))v830->__on_zero_shared)(v830);
            std::__shared_weak_count::__release_weak(v830);
          }
          v823 = *v829;
        }
        v833 = v823 && *(_QWORD *)(v823 + 16);
        v281 = v2131;
        BYTE4(v822[6 * v821]) = v833;
        if (v824)
        {
          v834 = (unint64_t *)&v824->__shared_owners_;
          do
            v835 = __ldaxr(v834);
          while (__stlxr(v835 - 1, v834));
          if (!v835)
          {
            ((void (*)(std::__shared_weak_count *))v824->__on_zero_shared)(v824);
            std::__shared_weak_count::__release_weak(v824);
          }
        }
        if (__valb)
        {
          v836 = v2212;
          v785 = (std::__shared_weak_count *)v2261.__r_.__value_.__l.__size_;
          v837 = v2261.__r_.__value_.__r.__words[0];
          if (v2261.__r_.__value_.__l.__size_)
          {
            v838 = (unint64_t *)(v2261.__r_.__value_.__l.__size_ + 8);
            do
              v839 = __ldxr(v838);
            while (__stxr(v839 + 1, v838));
            do
              v840 = __ldxr(v838);
            while (__stxr(v840 + 1, v838));
          }
          v841 = &v836[48 * v717];
          *((_QWORD *)v841 + 1) = v837;
          v842 = (std::string::size_type *)(v841 + 8);
          v843 = (std::__shared_weak_count *)v842[1];
          v842[1] = (std::string::size_type)v785;
          if (v843)
          {
            v844 = (unint64_t *)&v843->__shared_owners_;
            do
              v845 = __ldaxr(v844);
            while (__stlxr(v845 - 1, v844));
            if (!v845)
            {
              ((void (*)(std::__shared_weak_count *))v843->__on_zero_shared)(v843);
              std::__shared_weak_count::__release_weak(v843);
            }
            v837 = *v842;
          }
          v846 = v837 && *(_QWORD *)(v837 + 16);
          v836[48 * v717 + 4] = v846;
          if (v785)
          {
            v847 = (unint64_t *)&v785->__shared_owners_;
            do
              v819 = __ldaxr(v847);
            while (__stlxr(v819 - 1, v847));
            goto LABEL_1183;
          }
        }
LABEL_1299:
        v848 = (std::__shared_weak_count *)v2261.__r_.__value_.__l.__size_;
        if (v2261.__r_.__value_.__l.__size_)
        {
LABEL_1300:
          v897 = (unint64_t *)&v848->__shared_owners_;
          do
            v898 = __ldaxr(v897);
          while (__stlxr(v898 - 1, v897));
          if (!v898)
          {
            ((void (*)(std::__shared_weak_count *))v848->__on_zero_shared)(v848);
            std::__shared_weak_count::__release_weak(v848);
          }
        }
LABEL_1304:
        ++v717;
        v393 = v2147;
        if (v717 == v2147)
        {
LABEL_1333:
          v927 = 0x100000;
          if (v2122 < 0x100000)
            v927 = v2122;
          v928 = v927
               - v2122
               + 8 * v2122
               + (v2117 & 0x7FFFFFFFFFFFFFF8)
               + 2 * (v2122 & 0x1FFFFFFFFFFFFFFFLL)
               + 76 * v927
               + 8 * v927;
          sub_239926914((uint64_t)__dst, v928, v928);
          v929 = sub_2399FC9C0();
          sub_2399269C0(v929, (uint64_t)__dst);
          goto LABEL_1336;
        }
      }
      v739 = (*(uint64_t (**)(void))(*v2309 + 16))();
LABEL_1035:
      v2294 = (_QWORD *)v739;
      goto LABEL_1039;
    }
LABEL_1336:
    kdebug_trace();
    kdebug_trace();
    if (*(_BYTE *)(v206 + 384) && v393)
    {
      v930 = 0;
      v2159 = v254 + 6;
      v2132 = (uint64_t *)(v206 + 480);
      v2116 = a11 + 12;
      while (1)
      {
        if (v2309 && ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
          goto LABEL_1833;
        v931 = *(const void ***)(v2146 + 8);
        if (!v931)
LABEL_2852:
          sub_23941D898("map::at:  key not found");
        v932 = (char *)v2222 + 24 * v930;
        while (1)
        {
          while (1)
          {
            v933 = *((unsigned __int16 *)v931 + 16);
            if (v933 <= (unsigned __int16)v930)
              break;
            v931 = (const void **)*v931;
            if (!v931)
              goto LABEL_2852;
          }
          if (v933 >= (unsigned __int16)v930)
            break;
          v931 = (const void **)v931[1];
          if (!v931)
            goto LABEL_2852;
        }
        v934 = v281;
        *(_QWORD *)task_info_out = v931 + 5;
        v935 = *((unsigned __int16 *)sub_23958C73C(v2159, v931 + 5, (uint64_t)&unk_239EC6E98, (__int128 **)task_info_out)
               + 28);
        v936 = *v2164;
        *(_OWORD *)&v2192.__r_.__value_.__l.__data_ = 0uLL;
        v937 = operator new[]();
        v938 = operator new(0x30uLL);
        v938[1] = 0;
        v938[2] = 0;
        *v938 = &off_250ADF208;
        *((_DWORD *)v938 + 6) = 0;
        *((_DWORD *)v938 + 7) = v2145;
        *((_DWORD *)v938 + 8) = v2145;
        *((_DWORD *)v938 + 9) = 4;
        v938[5] = v937;
        v939 = (std::__shared_weak_count *)v2192.__r_.__value_.__l.__size_;
        v2192.__r_.__value_.__r.__words[0] = (std::string::size_type)(v938 + 3);
        v2192.__r_.__value_.__l.__size_ = (std::string::size_type)v938;
        if (v939)
        {
          v940 = (unint64_t *)&v939->__shared_owners_;
          do
            v941 = __ldaxr(v940);
          while (__stlxr(v941 - 1, v940));
          if (!v941)
          {
            ((void (*)(std::__shared_weak_count *))v939->__on_zero_shared)(v939);
            std::__shared_weak_count::__release_weak(v939);
          }
        }
        v942 = v2192.__r_.__value_.__r.__words[0];
        *(_DWORD *)v2192.__r_.__value_.__l.__data_ = 0;
        if (v2121)
          bzero(*(void **)(v942 + 16), v2123);
        v943 = vsubq_f32(v2232, v2231);
        v944 = v943.f32[1];
        if (v943.f32[0] >= v943.f32[1])
          v944 = v943.f32[0];
        if (v944 >= v943.f32[2])
          v945 = v944;
        else
          v945 = v943.f32[2];
        if ((v934 & 1) == 0)
        {
LABEL_1428:
          v999 = 0;
          if (!a12)
            goto LABEL_1412;
          goto LABEL_1429;
        }
        v946 = v2215;
        v947 = (uint64_t)v2309;
        if (!v2309)
          goto LABEL_1364;
        if (v2309 != v2308)
          break;
        v2288 = v2287;
        (*(void (**)(_QWORD *, _BYTE *))(v2308[0] + 24))(v2308, v2287);
LABEL_1366:
        v948 = (uint64_t)v2307;
        if (!v2307)
          goto LABEL_1369;
        if (v2307 != v2306)
        {
          v948 = (*(uint64_t (**)(void))(*v2307 + 16))();
LABEL_1369:
          v2286 = (_BYTE *)v948;
          goto LABEL_1371;
        }
        v2286 = v2285;
        (*(void (**)(_QWORD *, _BYTE *))(v2306[0] + 24))(v2306, v2285);
LABEL_1371:
        v949 = sub_2399742BC(v2137, (uint64_t)v932, (uint64_t)v946 + 24 * v930, v942, &__src, fmaxf(v945 * 0.00001, 0.0000005), (uint64_t)v2287, a6, a7, v2132, (uint64_t)v2285, v2127 != 0);
        v950 = v2286;
        if (v2286 == v2285)
        {
          v950 = v2285;
          v951 = 4;
        }
        else
        {
          if (!v2286)
            goto LABEL_1376;
          v951 = 5;
        }
        (*(void (**)(void))(*v950 + 8 * v951))();
LABEL_1376:
        v952 = v2288;
        if (v2288 == v2287)
        {
          v952 = v2287;
          v953 = 4;
LABEL_1380:
          (*(void (**)(void))(*v952 + 8 * v953))();
          if (!v949)
            goto LABEL_1428;
          goto LABEL_1381;
        }
        if (v2288)
        {
          v953 = 5;
          goto LABEL_1380;
        }
        if (!v949)
          goto LABEL_1428;
LABEL_1381:
        v954 = *(_DWORD *)(v2192.__r_.__value_.__r.__words[0] + 8);
        if (v954 >= 2)
        {
          v955 = *(unsigned int *)(v2192.__r_.__value_.__r.__words[0] + 4);
          if ((_DWORD)v955)
          {
            v956 = *(unsigned int *)(v2192.__r_.__value_.__r.__words[0] + 12);
            if ((_DWORD)v956)
            {
              v957 = 0;
              v958 = 0;
              v959 = v954 >> 1;
              v960 = *(_QWORD *)(v2192.__r_.__value_.__r.__words[0] + 16);
              if (v954 >> 1 <= 1)
                v959 = 1;
              v961 = v955 * v956;
              v962 = v960 + 4 * v956;
              v963 = v955 * v956 * (v954 - 1);
              v964 = v960 + 16;
              v965 = v963;
              while (v956 < 8)
              {
                v966 = 0;
                v967 = v955;
                do
                {
                  v968 = (int *)(v960 + 4 * (v957 + v966));
                  v969 = (int *)(v960 + 4 * (v965 + v966));
                  v970 = *v968;
                  *v968 = *v969;
                  *v969 = v970;
                  if ((_DWORD)v956 != 1)
                  {
                    v971 = v968[1];
                    v968[1] = v969[1];
                    v969[1] = v971;
                    if ((_DWORD)v956 != 2)
                    {
                      v972 = v968[2];
                      v968[2] = v969[2];
                      v969[2] = v972;
                      if ((_DWORD)v956 != 3)
                      {
                        v973 = v968[3];
                        v968[3] = v969[3];
                        v969[3] = v973;
                        if ((_DWORD)v956 != 4)
                        {
                          v974 = v968[4];
                          v968[4] = v969[4];
                          v969[4] = v974;
                          if ((_DWORD)v956 != 5)
                          {
                            v975 = v968[5];
                            v968[5] = v969[5];
                            v969[5] = v975;
                            if ((_DWORD)v956 != 6)
                            {
                              v976 = v968[6];
                              v968[6] = v969[6];
                              v969[6] = v976;
                            }
                          }
                        }
                      }
                    }
                  }
                  v966 += v956;
                  --v967;
                }
                while (v967);
LABEL_1387:
                ++v958;
                v957 += v961;
                v965 -= v961;
                if (v958 == v959)
                  goto LABEL_1411;
              }
              v977 = 0;
              v978 = v965;
              v979 = v957;
              while (2)
              {
                v980 = 4 * v978;
                v981 = 4 * v979;
                v982 = 4 * (v963 + v958 * -((_DWORD)v955 * (_DWORD)v956) + (_DWORD)v977 * (_DWORD)v956);
                v983 = v962 + v982;
                v984 = v960 + v982;
                v985 = 4 * (v958 * v961 + v977 * v956);
                if (v960 + v985 < v983 && v984 < v962 + v985)
                {
                  v993 = 0;
                  v206 = v2163;
                  goto LABEL_1408;
                }
                v987 = (__int128 *)(v964 + v981);
                v988 = (__int128 *)(v964 + v980);
                v989 = v956 & 0xFFFFFFF8;
                do
                {
                  v990 = *(v987 - 1);
                  v991 = *v987;
                  v992 = *v988;
                  *(v987 - 1) = *(v988 - 1);
                  *v987 = v992;
                  *(v988 - 1) = v990;
                  *v988 = v991;
                  v987 += 2;
                  v988 += 2;
                  v989 -= 8;
                }
                while (v989);
                v993 = v956 & 0xFFFFFFF8;
                v206 = v2163;
                if (v993 != v956)
                {
LABEL_1408:
                  v994 = v956 - v993;
                  v995 = 4 * v993;
                  v996 = (int *)(v960 + v995 + v980);
                  v997 = (int *)(v960 + v995 + v981);
                  do
                  {
                    v998 = *v997;
                    *v997++ = *v996;
                    *v996++ = v998;
                    --v994;
                  }
                  while (v994);
                }
                ++v977;
                v979 += v956;
                v978 += v956;
                if (v977 == v955)
                  goto LABEL_1387;
                continue;
              }
            }
          }
        }
LABEL_1411:
        v999 = 1;
        if (!a12)
        {
LABEL_1412:
          if (*(_BYTE *)(v206 + 384))
            v1000 = v999;
          else
            v1000 = 0;
          if (v1000 == 1)
          {
            v1001 = &v936[6 * v935];
            v1004 = (uint64_t *)v1001[4];
            v1003 = (uint64_t **)(v1001 + 4);
            v1002 = v1004;
            if (v1004)
            {
              while (1)
              {
                while (1)
                {
                  v1006 = (uint64_t **)v1002;
                  v1007 = *((_DWORD *)v1002 + 7);
                  if (v1007 < 14)
                    break;
                  v1002 = *v1006;
                  v1005 = v1006;
                  if (!*v1006)
                    goto LABEL_1423;
                }
                if (v1007 == 13)
                  break;
                v1002 = v1006[1];
                if (!v1002)
                {
                  v1005 = v1006 + 1;
                  goto LABEL_1423;
                }
              }
              v1008 = v1006;
            }
            else
            {
              v1005 = v1003;
              v1006 = v1003;
LABEL_1423:
              v1008 = operator new(0x28uLL);
              v1008[7] = 13;
              *((_WORD *)v1008 + 16) = 0;
              *(_QWORD *)v1008 = 0;
              *((_QWORD *)v1008 + 1) = 0;
              *((_QWORD *)v1008 + 2) = v1006;
              *v1005 = (uint64_t *)v1008;
              v1010 = (uint64_t **)*(v1003 - 1);
              v1009 = v1003 - 1;
              v1011 = *v1010;
              v1012 = (uint64_t *)v1008;
              if (*v1010)
              {
                *v1009 = v1011;
                v1012 = *v1005;
              }
              sub_2394213B8(v1009[1], v1012);
              v1009[2] = (uint64_t *)((char *)v1009[2] + 1);
            }
            v1074 = *((unsigned __int16 *)v1008 + 16);
            v1075 = v2164[3];
            v1077 = (std::__shared_weak_count *)v2192.__r_.__value_.__l.__size_;
            v1076 = v2192.__r_.__value_.__r.__words[0];
            if (v2192.__r_.__value_.__l.__size_)
            {
              v1078 = (unint64_t *)(v2192.__r_.__value_.__l.__size_ + 8);
              do
                v1079 = __ldxr(v1078);
              while (__stxr(v1079 + 1, v1078));
              do
                v1080 = __ldxr(v1078);
              while (__stxr(v1080 + 1, v1078));
            }
            v1081 = &v1075[6 * v1074];
            v1081[1] = v1076;
            v1082 = (std::string::size_type *)(v1081 + 1);
            v1083 = (std::__shared_weak_count *)v1082[1];
            v1082[1] = (std::string::size_type)v1077;
            if (v1083)
            {
              v1084 = (unint64_t *)&v1083->__shared_owners_;
              do
                v1085 = __ldaxr(v1084);
              while (__stlxr(v1085 - 1, v1084));
              if (!v1085)
              {
                ((void (*)(std::__shared_weak_count *))v1083->__on_zero_shared)(v1083);
                std::__shared_weak_count::__release_weak(v1083);
              }
              v1076 = *v1082;
            }
            v1086 = v1076 && *(_QWORD *)(v1076 + 16);
            BYTE4(v1075[6 * v1074]) = v1086;
            if (v1077)
            {
              v1087 = (unint64_t *)&v1077->__shared_owners_;
              do
                v1088 = __ldaxr(v1087);
              while (__stlxr(v1088 - 1, v1087));
              if (!v1088)
              {
                ((void (*)(std::__shared_weak_count *))v1077->__on_zero_shared)(v1077);
                std::__shared_weak_count::__release_weak(v1077);
              }
            }
            v281 = 1;
          }
          else
          {
            v281 = v999;
          }
          goto LABEL_1583;
        }
LABEL_1429:
        HIBYTE(v2241) = 5;
        strcpy((char *)task_info_out, "uchar");
        *((_BYTE *)&v2243[0].__r_.__value_.__s + 23) = 4;
        strcpy((char *)v2243, ".jpg");
        v1013 = *(float *)(v206 + 416) * 100.0;
        if (v1013 < 1.0)
          v1013 = 1.0;
        if (v1013 > 100.0)
          v1013 = 100.0;
        v2242 = (int)v1013;
        std::operator+<char>();
        if (SHIBYTE(v2243[0].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v2243[0].__r_.__value_.__l.__data_);
        v2243[0] = v2260;
        v1014 = &v936[6 * v935];
        v1017 = (uint64_t *)v1014[4];
        v1016 = v1014 + 4;
        v1015 = v1017;
        v1018 = v1016 - 1;
        v1019 = (uint64_t **)v1016;
        v1020 = (uint64_t **)v1016;
        if (v1017)
        {
          while (1)
          {
            while (1)
            {
              v1020 = (uint64_t **)v1015;
              v1021 = *((_DWORD *)v1015 + 7);
              if (v1021 < 14)
                break;
              v1015 = *v1020;
              v1019 = v1020;
              if (!*v1020)
                goto LABEL_1442;
            }
            if (v1021 == 13)
              break;
            v1015 = v1020[1];
            if (!v1015)
            {
              v1019 = v1020 + 1;
              goto LABEL_1442;
            }
          }
          v1022 = v1020;
        }
        else
        {
LABEL_1442:
          v1022 = operator new(0x28uLL);
          v1022[7] = 13;
          *((_WORD *)v1022 + 16) = 0;
          *(_QWORD *)v1022 = 0;
          *((_QWORD *)v1022 + 1) = 0;
          *((_QWORD *)v1022 + 2) = v1020;
          *v1019 = (uint64_t *)v1022;
          v1023 = *(_QWORD **)*v1018;
          v1024 = (uint64_t *)v1022;
          if (v1023)
          {
            *v1018 = (uint64_t)v1023;
            v1024 = *v1019;
          }
          sub_2394213B8((uint64_t *)*v1016, v1024);
          ++v1016[1];
        }
        v1025 = *((unsigned __int16 *)v1022 + 16);
        v1026 = v2164[3];
        v1027 = std::__fs::filesystem::path::__stem(a13);
        if (v1027.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v1027.__size_ >= 0x17)
        {
          v1029 = (v1027.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v1027.__size_ | 7) != 0x17)
            v1029 = v1027.__size_ | 7;
          v1030 = v1029 + 1;
          v1028 = operator new(v1029 + 1);
          v2261.__r_.__value_.__r.__words[2] = v1030 | 0x8000000000000000;
          v2261.__r_.__value_.__r.__words[0] = (std::string::size_type)v1028;
          v2261.__r_.__value_.__l.__size_ = v1027.__size_;
LABEL_1453:
          memmove(v1028, v1027.__data_, v1027.__size_);
          goto LABEL_1454;
        }
        *((_BYTE *)&v2261.__r_.__value_.__s + 23) = v1027.__size_;
        v1028 = &v2261;
        if (v1027.__size_)
          goto LABEL_1453;
LABEL_1454:
        *((_BYTE *)v1028 + v1027.__size_) = 0;
        v1031 = v2261.__r_.__value_.__l.__size_;
        v1032 = (void *)v2261.__r_.__value_.__r.__words[0];
        LODWORD(v2268) = v2261.__r_.__value_.__r.__words[2];
        *(_DWORD *)((char *)&v2268 + 3) = *(_DWORD *)((char *)&v2261.__r_.__value_.__r.__words[2] + 3);
        if (SHIBYTE(v2261.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_23941A7F8(task_info_outCnt, v2261.__r_.__value_.__l.__data_, v2261.__r_.__value_.__l.__size_);
          operator delete(v1032);
        }
        else
        {
          *(_OWORD *)task_info_outCnt = *(_OWORD *)&v2261.__r_.__value_.__l.__data_;
          *(_DWORD *)&task_info_outCnt[16] = v2268;
          *(_DWORD *)&task_info_outCnt[19] = *(_DWORD *)((char *)&v2268 + 3);
          task_info_outCnt[23] = *((_BYTE *)&v2261.__r_.__value_.__s + 23);
        }
        v2268 = 0uLL;
        v2269 = 0;
        v1033 = LODWORD(v1026[6 * v1025]) - 1;
        if (v1033 < 0xD)
          MEMORY[0x23B83DBFC](&v2268, off_250AF0168[v1033], v1031);
        v1034 = task_info_outCnt[23];
        if (task_info_outCnt[23] >= 0)
          v1035 = task_info_outCnt[23];
        else
          v1035 = *(_QWORD *)&task_info_outCnt[8];
        v1036 = v1035 + 1;
        v206 = v2163;
        if (v1035 + 1 > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v1036 >= 0x17)
        {
          v1038 = (v1036 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v1036 | 7) != 0x17)
            v1038 = v1036 | 7;
          v1039 = v1038 + 1;
          v1037 = (char *)operator new(v1038 + 1);
          v2263.__r_.__value_.__r.__words[2] = v1039 | 0x8000000000000000;
          v2263.__r_.__value_.__r.__words[0] = (std::string::size_type)v1037;
          v2263.__r_.__value_.__l.__size_ = v1035 + 1;
        }
        else
        {
          memset(&v2263, 0, sizeof(v2263));
          v1037 = (char *)&v2263;
          *((_BYTE *)&v2263.__r_.__value_.__s + 23) = v1035 + 1;
          if (!v1035)
            goto LABEL_1473;
        }
        if (v1034 >= 0)
          v1040 = task_info_outCnt;
        else
          v1040 = *(_BYTE **)task_info_outCnt;
        memmove(v1037, v1040, v1035);
LABEL_1473:
        *(_WORD *)&v1037[v1035] = 95;
        if (v2269 >= 0)
          v1041 = (const std::string::value_type *)&v2268;
        else
          v1041 = (const std::string::value_type *)v2268;
        if (v2269 >= 0)
          v1042 = HIBYTE(v2269);
        else
          v1042 = *((_QWORD *)&v2268 + 1);
        v1043 = std::string::append(&v2263, v1041, v1042);
        v1044 = *(_OWORD *)&v1043->__r_.__value_.__l.__data_;
        v2264.__r_.__value_.__r.__words[2] = v1043->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v2264.__r_.__value_.__l.__data_ = v1044;
        v1043->__r_.__value_.__l.__size_ = 0;
        v1043->__r_.__value_.__r.__words[2] = 0;
        v1043->__r_.__value_.__r.__words[0] = 0;
        std::to_string(&v2261, v930);
        if ((v2261.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v1045 = &v2261;
        else
          v1045 = (std::string *)v2261.__r_.__value_.__r.__words[0];
        if ((v2261.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v1046 = HIBYTE(v2261.__r_.__value_.__r.__words[2]);
        else
          v1046 = v2261.__r_.__value_.__l.__size_;
        v1047 = std::string::append(&v2264, (const std::string::value_type *)v1045, v1046);
        v1048 = *(_OWORD *)&v1047->__r_.__value_.__l.__data_;
        v2265.__r_.__value_.__r.__words[2] = v1047->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v2265.__r_.__value_.__l.__data_ = v1048;
        v1047->__r_.__value_.__l.__size_ = 0;
        v1047->__r_.__value_.__r.__words[2] = 0;
        v1047->__r_.__value_.__r.__words[0] = 0;
        if ((v2243[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v1049 = v2243;
        else
          v1049 = (std::string *)v2243[0].__r_.__value_.__r.__words[0];
        if ((v2243[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v1050 = HIBYTE(v2243[0].__r_.__value_.__r.__words[2]);
        else
          v1050 = v2243[0].__r_.__value_.__l.__size_;
        v1051 = std::string::append(&v2265, (const std::string::value_type *)v1049, v1050);
        v1052 = *(_OWORD *)&v1051->__r_.__value_.__l.__data_;
        v2267 = v1051->__r_.__value_.__r.__words[2];
        v2266 = v1052;
        v1051->__r_.__value_.__l.__size_ = 0;
        v1051->__r_.__value_.__r.__words[2] = 0;
        v1051->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v2265.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v2265.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v2261.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_1493:
            if (SHIBYTE(v2264.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_1514;
            goto LABEL_1494;
          }
        }
        else if ((SHIBYTE(v2261.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_1493;
        }
        operator delete(v2261.__r_.__value_.__l.__data_);
        if (SHIBYTE(v2264.__r_.__value_.__r.__words[2]) < 0)
        {
LABEL_1514:
          operator delete(v2264.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v2263.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_1495;
          goto LABEL_1515;
        }
LABEL_1494:
        if ((SHIBYTE(v2263.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_1495;
LABEL_1515:
        operator delete(v2263.__r_.__value_.__l.__data_);
LABEL_1495:
        v1053 = std::__fs::filesystem::path::__parent_path(a13);
        if (v1053.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v1053.__size_ >= 0x17)
        {
          v1055 = (v1053.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v1053.__size_ | 7) != 0x17)
            v1055 = v1053.__size_ | 7;
          v1056 = v1055 + 1;
          v1054 = operator new(v1055 + 1);
          v2262.__r_.__value_.__r.__words[2] = v1056 | 0x8000000000000000;
          v2262.__r_.__value_.__r.__words[0] = (std::string::size_type)v1054;
          v2262.__r_.__value_.__l.__size_ = v1053.__size_;
LABEL_1502:
          memmove(v1054, v1053.__data_, v1053.__size_);
          goto LABEL_1503;
        }
        *((_BYTE *)&v2262.__r_.__value_.__s + 23) = v1053.__size_;
        v1054 = &v2262;
        if (v1053.__size_)
          goto LABEL_1502;
LABEL_1503:
        *((_BYTE *)v1054 + v1053.__size_) = 0;
        v2264 = v2262;
        memset(&v2263, 0, sizeof(v2263));
        v1057 = HIBYTE(v2267);
        if (v2267 >= 0)
          v1058 = (std::string *)&v2266;
        else
          v1058 = (std::string *)v2266;
        if (v2267 < 0)
          v1057 = *((_QWORD *)&v2266 + 1);
        sub_23948900C(&v2263, v1058, (std::string *)((char *)v1058 + v1057));
        sub_239498A04((std::__fs::filesystem::path *)&v2263, (uint64_t)&v2264, (std::__fs::filesystem::path *)&v2265);
        if (SHIBYTE(v2263.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v2263.__r_.__value_.__l.__data_);
          if (SHIBYTE(v2264.__r_.__value_.__r.__words[2]) < 0)
          {
LABEL_1517:
            operator delete(v2264.__r_.__value_.__l.__data_);
            if (!v999)
              goto LABEL_1528;
            goto LABEL_1518;
          }
        }
        else if (SHIBYTE(v2264.__r_.__value_.__r.__words[2]) < 0)
        {
          goto LABEL_1517;
        }
        if (!v999)
          goto LABEL_1528;
LABEL_1518:
        v1059 = v2192.__r_.__value_.__r.__words[0];
        v1060 = a11[15];
        if (v1060)
        {
          if ((_QWORD *)v1060 == v2116)
          {
            v2284 = v2283;
            (*(void (**)(_QWORD *, _BYTE *))(*v2116 + 24))(v2116, v2283);
            goto LABEL_1523;
          }
          v1060 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1060 + 16))(v1060);
        }
        v2284 = (_BYTE *)v1060;
LABEL_1523:
        v999 = sub_239975928((__int128 *)&v2265, v1059, (uint64_t)task_info_out, (uint64_t)v2283, 0);
        v1061 = v2284;
        if (v2284 == v2283)
        {
          v1061 = v2283;
          v1062 = 4;
        }
        else
        {
          if (!v2284)
            goto LABEL_1528;
          v1062 = 5;
        }
        (*(void (**)(void))(*v1061 + 8 * v1062))();
LABEL_1528:
        if (a10)
        {
          v1063 = *(_QWORD *)(a9 + 8);
          if (v1063 >= *(_QWORD *)(a9 + 16))
          {
            v1065 = sub_23958837C((char **)a9, (uint64_t)&v2265);
            v1066 = a9;
          }
          else
          {
            if (SHIBYTE(v2265.__r_.__value_.__r.__words[2]) < 0)
            {
              sub_23941A7F8(*(_BYTE **)(a9 + 8), v2265.__r_.__value_.__l.__data_, v2265.__r_.__value_.__l.__size_);
            }
            else
            {
              v1064 = *(_OWORD *)&v2265.__r_.__value_.__l.__data_;
              *(_QWORD *)(v1063 + 16) = *((_QWORD *)&v2265.__r_.__value_.__l + 2);
              *(_OWORD *)v1063 = v1064;
            }
            v1065 = (char *)(v1063 + 24);
            v1066 = a9;
            *(_QWORD *)(a9 + 8) = v1063 + 24;
          }
          *(_QWORD *)(v1066 + 8) = v1065;
        }
        if (*(_BYTE *)(v2163 + 384))
          v1067 = v999;
        else
          v1067 = 0;
        if (v1067 == 1)
        {
          v1068 = (uint64_t *)*v1016;
          v1069 = v1016;
          if (*v1016)
          {
            while (1)
            {
              while (1)
              {
                v1069 = v1068;
                v1070 = *((_DWORD *)v1068 + 7);
                if (v1070 < 14)
                  break;
                v1068 = (uint64_t *)*v1069;
                v1016 = v1069;
                if (!*v1069)
                  goto LABEL_1547;
              }
              if (v1070 == 13)
                break;
              v1068 = (uint64_t *)v1069[1];
              if (!v1068)
              {
                v1016 = v1069 + 1;
                goto LABEL_1547;
              }
            }
            v1071 = v1069;
          }
          else
          {
LABEL_1547:
            v1071 = operator new(0x28uLL);
            v1071[7] = 13;
            *((_WORD *)v1071 + 16) = 0;
            *(_QWORD *)v1071 = 0;
            *((_QWORD *)v1071 + 1) = 0;
            *((_QWORD *)v1071 + 2) = v1069;
            *v1016 = (uint64_t)v1071;
            v1072 = *(_QWORD **)*v1018;
            v1073 = (uint64_t *)v1071;
            if (v1072)
            {
              *v1018 = (uint64_t)v1072;
              v1073 = (uint64_t *)*v1016;
            }
            sub_2394213B8((uint64_t *)v1018[1], v1073);
            ++v1018[2];
          }
          v1089 = *((unsigned __int16 *)v1071 + 16);
          v1090 = v2164[3];
          if (SHIBYTE(v2265.__r_.__value_.__r.__words[2]) < 0)
            sub_23941A7F8(&v2194, v2265.__r_.__value_.__l.__data_, v2265.__r_.__value_.__l.__size_);
          else
            v2194 = v2265;
          sub_2399272D8((std::string *)&v1090[6 * v1089], &v2194);
          if (SHIBYTE(v2194.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v2194.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v2265.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v2265.__r_.__value_.__l.__data_);
          v281 = v999;
          if ((SHIBYTE(v2267) & 0x80000000) == 0)
          {
LABEL_1579:
            if ((SHIBYTE(v2269) & 0x80000000) == 0)
              goto LABEL_1580;
            goto LABEL_1592;
          }
        }
        else
        {
          v281 = v999;
          if ((SHIBYTE(v2267) & 0x80000000) == 0)
            goto LABEL_1579;
        }
        operator delete((void *)v2266);
        if ((SHIBYTE(v2269) & 0x80000000) == 0)
        {
LABEL_1580:
          if ((task_info_outCnt[23] & 0x80000000) == 0)
            goto LABEL_1581;
          goto LABEL_1593;
        }
LABEL_1592:
        operator delete((void *)v2268);
        if ((task_info_outCnt[23] & 0x80000000) == 0)
        {
LABEL_1581:
          if (SHIBYTE(v2243[0].__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_1594;
          goto LABEL_1582;
        }
LABEL_1593:
        operator delete(*(void **)task_info_outCnt);
        if (SHIBYTE(v2243[0].__r_.__value_.__r.__words[2]) < 0)
        {
LABEL_1594:
          operator delete(v2243[0].__r_.__value_.__l.__data_);
          if ((SHIBYTE(v2241) & 0x80000000) == 0)
            goto LABEL_1583;
          goto LABEL_1595;
        }
LABEL_1582:
        if ((SHIBYTE(v2241) & 0x80000000) == 0)
          goto LABEL_1583;
LABEL_1595:
        operator delete(*(void **)task_info_out);
LABEL_1583:
        v1091 = (std::__shared_weak_count *)v2192.__r_.__value_.__l.__size_;
        if (v2192.__r_.__value_.__l.__size_)
        {
          v1092 = (unint64_t *)(v2192.__r_.__value_.__l.__size_ + 8);
          do
            v1093 = __ldaxr(v1092);
          while (__stlxr(v1093 - 1, v1092));
          if (!v1093)
          {
            ((void (*)(std::__shared_weak_count *))v1091->__on_zero_shared)(v1091);
            std::__shared_weak_count::__release_weak(v1091);
          }
        }
        ++v930;
        v393 = v2147;
        if (v930 == v2147)
          goto LABEL_1599;
      }
      v947 = (*(uint64_t (**)(void))(*v2309 + 16))();
LABEL_1364:
      v2288 = (_BYTE *)v947;
      goto LABEL_1366;
    }
LABEL_1599:
    kdebug_trace();
    if (!*(_BYTE *)(v206 + 224))
      goto LABEL_1831;
    v1094 = *(unsigned __int8 *)(v206 + 260);
    kdebug_trace();
    v1095.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    sub_23941A4FC(&v2193, "");
    sub_23992A5B4((uint64_t)task_info_out, &v2193, v2121, v2121);
    if (SHIBYTE(v2193.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v2193.__r_.__value_.__l.__data_);
    v2140 = v1095.__d_.__rep_;
    if (!v393)
      goto LABEL_1828;
    v1096 = 0;
    v2113 = a11 + 12;
    if (v2122 <= 1)
      v1097 = 1;
    else
      v1097 = v2122;
    __valc = 4 * v1097;
LABEL_1607:
    if (v2309 && ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
    {
      sub_23992A6A0((uint64_t)task_info_out);
LABEL_1833:
      v279 = 1;
      goto LABEL_1834;
    }
    v1098 = *(const void ***)(v2146 + 8);
    if (!v1098)
LABEL_2853:
      sub_23941D898("map::at:  key not found");
    v1099 = (const void **)v2222;
    v1100 = (char *)v2222 + 24 * v1096;
    while (1)
    {
      while (1)
      {
        v1101 = *((unsigned __int16 *)v1098 + 16);
        if (v1101 <= (unsigned __int16)v1096)
          break;
        v1098 = (const void **)*v1098;
        if (!v1098)
          goto LABEL_2853;
      }
      if (v1101 >= (unsigned __int16)v1096)
        break;
      v1098 = (const void **)v1098[1];
      if (!v1098)
        goto LABEL_2853;
    }
    v1102 = v281;
    *(_QWORD *)task_info_outCnt = v1098 + 5;
    v1103 = *((unsigned __int16 *)sub_23958C73C(v2164 + 6, v1098 + 5, (uint64_t)&unk_239EC6E98, (__int128 **)task_info_outCnt)+ 28);
    v1104 = *v2164;
    *(_OWORD *)&v2184.__r_.__value_.__l.__data_ = 0uLL;
    v1105 = operator new[]();
    v1106 = operator new(0x30uLL);
    v1106[1] = 0;
    v1106[2] = 0;
    *v1106 = &off_250ADF208;
    *((_DWORD *)v1106 + 6) = 0;
    *((_DWORD *)v1106 + 7) = v2145;
    *((_DWORD *)v1106 + 8) = v2145;
    *((_DWORD *)v1106 + 9) = 1;
    v1106[5] = v1105;
    v1108 = (std::__shared_weak_count *)v2184.__r_.__value_.__l.__size_;
    v2184.__r_.__value_.__r.__words[0] = (std::string::size_type)(v1106 + 3);
    v2184.__r_.__value_.__l.__size_ = (std::string::size_type)v1106;
    if (v1108)
    {
      v1109 = (unint64_t *)&v1108->__shared_owners_;
      do
        v1110 = __ldaxr(v1109);
      while (__stlxr(v1110 - 1, v1109));
      if (!v1110)
      {
        ((void (*)(std::__shared_weak_count *))v1108->__on_zero_shared)(v1108);
        std::__shared_weak_count::__release_weak(v1108);
      }
    }
    v1111 = v2184.__r_.__value_.__r.__words[0];
    *(_DWORD *)v2184.__r_.__value_.__l.__data_ = 1;
    if (v2145)
      bzero(*(void **)(v1111 + 16), __valc);
    if (!v1094)
    {
      if ((v1102 & 1) == 0
        || !sub_2399790B4(v2162, (uint64_t)v2222 + 24 * v1096, &__src, v2119, (uint64_t)v2220 + 24 * v1096, (uint64_t)v2218 + 24 * v1096, v1111, v261, v1107, a6, a7))
      {
LABEL_1638:
        v281 = 0;
        goto LABEL_1639;
      }
      v1122 = sub_239926C0C((uint64_t)v2184.__r_.__value_.__l.__data_);
      if (v1122)
        goto LABEL_1657;
LABEL_1824:
      v281 = v1122;
      goto LABEL_1639;
    }
    if ((v1102 & 1) == 0
      || !sub_2399781C4(v1111, (uint64_t)v1100, (uint64_t)v2215 + 24 * v1096, a6, a7)
      || !sub_239927458((uint64_t)v2184.__r_.__value_.__l.__data_, v1099[3 * v1096 + 2], 5))
    {
      goto LABEL_1638;
    }
    v1112 = *(_DWORD *)(v2184.__r_.__value_.__r.__words[0] + 8);
    if (v1112 < 2)
      goto LABEL_1656;
    v1113 = *(unsigned int *)(v2184.__r_.__value_.__r.__words[0] + 4);
    if (!(_DWORD)v1113)
      goto LABEL_1656;
    v1114 = *(unsigned int *)(v2184.__r_.__value_.__r.__words[0] + 12);
    if (!(_DWORD)v1114)
      goto LABEL_1656;
    v1115 = v1112 >> 1;
    v1116 = *(_QWORD *)(v2184.__r_.__value_.__r.__words[0] + 16);
    if (v1112 >> 1 <= 1)
      v1115 = 1;
    v1117 = v1113 * v1114;
    v1118 = v1112 - 1;
    v1119 = v1113 * v1114 * (v1112 - 1);
    if (v1114 < 8)
    {
      v1120 = 0;
      v1121 = 0;
      do
      {
        v1126 = 0;
        v1127 = v1113;
        do
        {
          v1128 = (int *)(v1116 + 4 * (v1120 + v1126));
          v1129 = (int *)(v1116 + 4 * (v1119 + v1126));
          v1130 = *v1128;
          *v1128 = *v1129;
          *v1129 = v1130;
          if ((_DWORD)v1114 != 1)
          {
            v1131 = v1128[1];
            v1128[1] = v1129[1];
            v1129[1] = v1131;
            if ((_DWORD)v1114 != 2)
            {
              v1132 = v1128[2];
              v1128[2] = v1129[2];
              v1129[2] = v1132;
              if ((_DWORD)v1114 != 3)
              {
                v1133 = v1128[3];
                v1128[3] = v1129[3];
                v1129[3] = v1133;
                if ((_DWORD)v1114 != 4)
                {
                  v1134 = v1128[4];
                  v1128[4] = v1129[4];
                  v1129[4] = v1134;
                  if ((_DWORD)v1114 != 5)
                  {
                    v1135 = v1128[5];
                    v1128[5] = v1129[5];
                    v1129[5] = v1135;
                    if ((_DWORD)v1114 != 6)
                    {
                      v1136 = v1128[6];
                      v1128[6] = v1129[6];
                      v1129[6] = v1136;
                    }
                  }
                }
              }
            }
          }
          v1126 += v1114;
          --v1127;
        }
        while (v1127);
        ++v1121;
        v1119 -= v1117;
        v1120 += v1117;
      }
      while (v1121 != v1115);
LABEL_1656:
      v1122 = 1;
      goto LABEL_1657;
    }
    v1217 = 0;
    v1218 = 0;
    v1219 = v1116 + 4 * v1114;
    v1220 = v1116 + 16;
    v1221 = v1113 * v1114;
    v1222 = v1113 * v1114 * v1118;
LABEL_1810:
    v1223 = 0;
    v1224 = v1222;
    v1225 = v1217;
    while (1)
    {
      v1226 = 4 * v1224;
      v1227 = 4 * v1225;
      v1228 = 4 * (v1119 + v1218 * -(v1113 * v1114) + v1223 * v1114);
      v1229 = v1219 + v1228;
      v1230 = v1116 + v1228;
      v1231 = 4 * (v1218 * v1117 + v1223 * v1114);
      if (v1116 + v1231 >= v1229 || v1230 >= v1219 + v1231)
      {
        v1233 = (__int128 *)(v1220 + v1227);
        v1234 = (__int128 *)(v1220 + v1226);
        v1235 = v1114 & 0xFFFFFFF8;
        do
        {
          v1236 = *(v1233 - 1);
          v1237 = *v1233;
          v1238 = *v1234;
          *(v1233 - 1) = *(v1234 - 1);
          *v1233 = v1238;
          *(v1234 - 1) = v1236;
          *v1234 = v1237;
          v1233 += 2;
          v1234 += 2;
          v1235 -= 8;
        }
        while (v1235);
        v1239 = v1114 & 0xFFFFFFF8;
        if (v1239 == v1114)
          goto LABEL_1811;
      }
      else
      {
        v1239 = 0;
      }
      v1240 = v1114 - v1239;
      v1241 = 4 * v1239;
      v1242 = (int *)(v1116 + v1241 + v1226);
      v1243 = (int *)(v1116 + v1241 + v1227);
      do
      {
        v1244 = *v1243;
        *v1243++ = *v1242;
        *v1242++ = v1244;
        --v1240;
      }
      while (v1240);
LABEL_1811:
      ++v1223;
      v1225 += v1114;
      v1224 += v1114;
      if (v1223 == v1113)
      {
        ++v1218;
        v1217 += v1221;
        v1222 -= v1221;
        if (v1218 != v1115)
          goto LABEL_1810;
        v1122 = 1;
        v206 = v2163;
LABEL_1657:
        if (!*(_BYTE *)(v206 + 224))
          goto LABEL_1824;
        if (!a12)
        {
          v1150 = &v1104[6 * v1103];
          v1153 = (uint64_t *)v1150[4];
          v1152 = (uint64_t **)(v1150 + 4);
          v1151 = v1153;
          if (v1153)
          {
            while (1)
            {
              while (1)
              {
                v1155 = (uint64_t **)v1151;
                v1156 = *((_DWORD *)v1151 + 7);
                if (v1156 < 4)
                  break;
                v1151 = *v1155;
                v1154 = v1155;
                if (!*v1155)
                  goto LABEL_1682;
              }
              if (v1156 == 3)
                break;
              v1151 = v1155[1];
              if (!v1151)
              {
                v1154 = v1155 + 1;
                goto LABEL_1682;
              }
            }
            v1157 = v1155;
          }
          else
          {
            v1154 = v1152;
            v1155 = v1152;
LABEL_1682:
            v1157 = operator new(0x28uLL);
            v1157[7] = 3;
            *((_WORD *)v1157 + 16) = 0;
            *(_QWORD *)v1157 = 0;
            *((_QWORD *)v1157 + 1) = 0;
            *((_QWORD *)v1157 + 2) = v1155;
            *v1154 = (uint64_t *)v1157;
            v1159 = (uint64_t **)*(v1152 - 1);
            v1158 = v1152 - 1;
            v1160 = *v1159;
            v1161 = (uint64_t *)v1157;
            if (*v1159)
            {
              *v1158 = v1160;
              v1161 = *v1154;
            }
            sub_2394213B8(v1158[1], v1161);
            v1158[2] = (uint64_t *)((char *)v1158[2] + 1);
          }
          v1162 = *((unsigned __int16 *)v1157 + 16);
          v1163 = v2164[3];
          v1165 = (std::__shared_weak_count *)v2184.__r_.__value_.__l.__size_;
          v1164 = v2184.__r_.__value_.__r.__words[0];
          if (v2184.__r_.__value_.__l.__size_)
          {
            v1166 = (unint64_t *)(v2184.__r_.__value_.__l.__size_ + 8);
            do
              v1167 = __ldxr(v1166);
            while (__stxr(v1167 + 1, v1166));
            do
              v1168 = __ldxr(v1166);
            while (__stxr(v1168 + 1, v1166));
          }
          v1169 = &v1163[6 * v1162];
          v1169[1] = v1164;
          v1170 = (std::string::size_type *)(v1169 + 1);
          v1171 = (std::__shared_weak_count *)v1170[1];
          v1170[1] = (std::string::size_type)v1165;
          if (v1171)
          {
            v1172 = (unint64_t *)&v1171->__shared_owners_;
            do
              v1173 = __ldaxr(v1172);
            while (__stlxr(v1173 - 1, v1172));
            if (!v1173)
            {
              ((void (*)(std::__shared_weak_count *))v1171->__on_zero_shared)(v1171);
              std::__shared_weak_count::__release_weak(v1171);
            }
            v1164 = *v1170;
          }
          v1174 = v1164 && *(_QWORD *)(v1164 + 16);
          BYTE4(v1163[6 * v1162]) = v1174;
          if (v1165)
          {
            v1175 = (unint64_t *)&v1165->__shared_owners_;
            do
              v1176 = __ldaxr(v1175);
            while (__stlxr(v1176 - 1, v1175));
            if (!v1176)
            {
              ((void (*)(std::__shared_weak_count *))v1165->__on_zero_shared)(v1165);
              std::__shared_weak_count::__release_weak(v1165);
            }
          }
          v281 = 1;
          goto LABEL_1639;
        }
        task_info_outCnt[23] = 5;
        strcpy(task_info_outCnt, "uchar");
        task_info_outCnt[55] = 4;
        strcpy(&task_info_outCnt[32], ".jpg");
        v1137 = *(float *)(v206 + 256) * 100.0;
        if (v1137 < 1.0)
          v1137 = 1.0;
        if (v1137 > 100.0)
          v1137 = 100.0;
        *(_WORD *)&task_info_outCnt[24] = (int)v1137;
        std::operator+<char>();
        if ((task_info_outCnt[55] & 0x80000000) != 0)
          operator delete(*(void **)&task_info_outCnt[32]);
        *(std::string *)&task_info_outCnt[32] = v2263;
        v1138 = &v1104[6 * v1103];
        v1141 = (uint64_t *)v1138[4];
        v1140 = (uint64_t **)(v1138 + 4);
        v1139 = v1141;
        if (v1141)
        {
          while (1)
          {
            while (1)
            {
              v1143 = (uint64_t **)v1139;
              v1144 = *((_DWORD *)v1139 + 7);
              if (v1144 < 4)
                break;
              v1139 = *v1143;
              v1142 = v1143;
              if (!*v1143)
                goto LABEL_1672;
            }
            if (v1144 == 3)
              break;
            v1139 = v1143[1];
            if (!v1139)
            {
              v1142 = v1143 + 1;
              goto LABEL_1672;
            }
          }
          v1145 = v1143;
        }
        else
        {
          v1142 = v1140;
          v1143 = v1140;
LABEL_1672:
          v1145 = operator new(0x28uLL);
          v1145[7] = 3;
          *((_WORD *)v1145 + 16) = 0;
          *(_QWORD *)v1145 = 0;
          *((_QWORD *)v1145 + 1) = 0;
          *((_QWORD *)v1145 + 2) = v1143;
          *v1142 = (uint64_t *)v1145;
          v1147 = (uint64_t **)*(v1140 - 1);
          v1146 = v1140 - 1;
          v1148 = *v1147;
          v1149 = (uint64_t *)v1145;
          if (*v1147)
          {
            *v1146 = v1148;
            v1149 = *v1142;
          }
          sub_2394213B8(v1146[1], v1149);
          v1146[2] = (uint64_t *)((char *)v1146[2] + 1);
        }
        v1177 = *((unsigned __int16 *)v1145 + 16);
        v1178 = v2164[3];
        v1179 = std::__fs::filesystem::path::__stem(a13);
        if (v1179.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v1179.__size_ >= 0x17)
        {
          v1181 = (v1179.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v1179.__size_ | 7) != 0x17)
            v1181 = v1179.__size_ | 7;
          v1182 = v1181 + 1;
          v1180 = operator new(v1181 + 1);
          v2264.__r_.__value_.__r.__words[2] = v1182 | 0x8000000000000000;
          v2264.__r_.__value_.__r.__words[0] = (std::string::size_type)v1180;
          v2264.__r_.__value_.__l.__size_ = v1179.__size_;
LABEL_1714:
          memmove(v1180, v1179.__data_, v1179.__size_);
          goto LABEL_1715;
        }
        *((_BYTE *)&v2264.__r_.__value_.__s + 23) = v1179.__size_;
        v1180 = &v2264;
        if (v1179.__size_)
          goto LABEL_1714;
LABEL_1715:
        *((_BYTE *)v1180 + v1179.__size_) = 0;
        v1183 = v2264.__r_.__value_.__l.__size_;
        v1184 = (void *)v2264.__r_.__value_.__r.__words[0];
        LODWORD(v2266) = v2264.__r_.__value_.__r.__words[2];
        *(_DWORD *)((char *)&v2266 + 3) = *(_DWORD *)((char *)&v2264.__r_.__value_.__r.__words[2] + 3);
        if (SHIBYTE(v2264.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_23941A7F8(&v2268, v2264.__r_.__value_.__l.__data_, v2264.__r_.__value_.__l.__size_);
          operator delete(v1184);
        }
        else
        {
          v2268 = *(_OWORD *)&v2264.__r_.__value_.__l.__data_;
          LODWORD(v2269) = v2266;
          *(_DWORD *)((char *)&v2269 + 3) = *(_DWORD *)((char *)&v2266 + 3);
          HIBYTE(v2269) = *((_BYTE *)&v2264.__r_.__value_.__s + 23);
        }
        v1185 = (std::string *)&v1178[6 * v1177];
        v2266 = 0uLL;
        v2267 = 0;
        v1186 = LODWORD(v1185->__r_.__value_.__l.__data_) - 1;
        if (v1186 < 0xD)
          MEMORY[0x23B83DBFC](&v2266, off_250AF0168[v1186], v1183);
        v1187 = SHIBYTE(v2269);
        if (v2269 >= 0)
          v1188 = HIBYTE(v2269);
        else
          v1188 = *((_QWORD *)&v2268 + 1);
        v1189 = v1188 + 1;
        if (v1188 + 1 > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v1189 >= 0x17)
        {
          v1191 = (v1189 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v1189 | 7) != 0x17)
            v1191 = v1189 | 7;
          v1192 = v1191 + 1;
          v1190 = (char *)operator new(v1191 + 1);
          v2191.__r_.__value_.__r.__words[2] = v1192 | 0x8000000000000000;
          v2191.__r_.__value_.__r.__words[0] = (std::string::size_type)v1190;
          v2191.__r_.__value_.__l.__size_ = v1188 + 1;
        }
        else
        {
          memset(&v2191, 0, sizeof(v2191));
          v1190 = (char *)&v2191;
          *((_BYTE *)&v2191.__r_.__value_.__s + 23) = v1188 + 1;
          if (!v1188)
            goto LABEL_1734;
        }
        if (v1187 >= 0)
          v1193 = &v2268;
        else
          v1193 = (__int128 *)v2268;
        memmove(v1190, v1193, v1188);
LABEL_1734:
        *(_WORD *)&v1190[v1188] = 95;
        if (v2267 >= 0)
          v1194 = (const std::string::value_type *)&v2266;
        else
          v1194 = (const std::string::value_type *)v2266;
        if (v2267 >= 0)
          v1195 = HIBYTE(v2267);
        else
          v1195 = *((_QWORD *)&v2266 + 1);
        v1196 = std::string::append(&v2191, v1194, v1195);
        v1197 = *(_OWORD *)&v1196->__r_.__value_.__l.__data_;
        v2192.__r_.__value_.__r.__words[2] = v1196->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v2192.__r_.__value_.__l.__data_ = v1197;
        v1196->__r_.__value_.__l.__size_ = 0;
        v1196->__r_.__value_.__r.__words[2] = 0;
        v1196->__r_.__value_.__r.__words[0] = 0;
        std::to_string(&v2190, v1096);
        if ((v2190.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v1198 = &v2190;
        else
          v1198 = (std::string *)v2190.__r_.__value_.__r.__words[0];
        if ((v2190.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v1199 = HIBYTE(v2190.__r_.__value_.__r.__words[2]);
        else
          v1199 = v2190.__r_.__value_.__l.__size_;
        v1200 = std::string::append(&v2192, (const std::string::value_type *)v1198, v1199);
        v1201 = *(_OWORD *)&v1200->__r_.__value_.__l.__data_;
        v2263.__r_.__value_.__r.__words[2] = v1200->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v2263.__r_.__value_.__l.__data_ = v1201;
        v1200->__r_.__value_.__l.__size_ = 0;
        v1200->__r_.__value_.__r.__words[2] = 0;
        v1200->__r_.__value_.__r.__words[0] = 0;
        if (task_info_outCnt[55] >= 0)
          v1202 = &task_info_outCnt[32];
        else
          v1202 = *(const std::string::value_type **)&task_info_outCnt[32];
        if (task_info_outCnt[55] >= 0)
          v1203 = task_info_outCnt[55];
        else
          v1203 = *(_QWORD *)&task_info_outCnt[40];
        v1204 = std::string::append(&v2263, v1202, v1203);
        v1205 = *(_OWORD *)&v1204->__r_.__value_.__l.__data_;
        v2264.__r_.__value_.__r.__words[2] = v1204->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v2264.__r_.__value_.__l.__data_ = v1205;
        v1204->__r_.__value_.__l.__size_ = 0;
        v1204->__r_.__value_.__r.__words[2] = 0;
        v1204->__r_.__value_.__r.__words[0] = 0;
        if ((SHIBYTE(v2263.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          if ((SHIBYTE(v2190.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_1754;
LABEL_1774:
          operator delete(v2190.__r_.__value_.__l.__data_);
          if (SHIBYTE(v2192.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_1775;
LABEL_1755:
          v1206 = v1185;
          if ((SHIBYTE(v2191.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_1756;
LABEL_1776:
          operator delete(v2191.__r_.__value_.__l.__data_);
          goto LABEL_1756;
        }
        operator delete(v2263.__r_.__value_.__l.__data_);
        if (SHIBYTE(v2190.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_1774;
LABEL_1754:
        if ((SHIBYTE(v2192.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_1755;
LABEL_1775:
        operator delete(v2192.__r_.__value_.__l.__data_);
        v1206 = v1185;
        if (SHIBYTE(v2191.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_1776;
LABEL_1756:
        v1207 = std::__fs::filesystem::path::__parent_path(a13);
        if (v1207.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v1207.__size_ >= 0x17)
        {
          v1209 = (v1207.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v1207.__size_ | 7) != 0x17)
            v1209 = v1207.__size_ | 7;
          v1210 = v1209 + 1;
          v1208 = operator new(v1209 + 1);
          v2265.__r_.__value_.__r.__words[2] = v1210 | 0x8000000000000000;
          v2265.__r_.__value_.__r.__words[0] = (std::string::size_type)v1208;
          v2265.__r_.__value_.__l.__size_ = v1207.__size_;
LABEL_1763:
          memmove(v1208, v1207.__data_, v1207.__size_);
          goto LABEL_1764;
        }
        *((_BYTE *)&v2265.__r_.__value_.__s + 23) = v1207.__size_;
        v1208 = &v2265;
        if (v1207.__size_)
          goto LABEL_1763;
LABEL_1764:
        *((_BYTE *)v1208 + v1207.__size_) = 0;
        v2192 = v2265;
        memset(&v2265, 0, sizeof(v2265));
        v1211 = HIBYTE(v2264.__r_.__value_.__r.__words[2]);
        if ((v2264.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v1212 = &v2264;
        else
          v1212 = (std::string *)v2264.__r_.__value_.__r.__words[0];
        if ((v2264.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v1211 = v2264.__r_.__value_.__l.__size_;
        sub_23948900C(&v2265, v1212, (std::string *)((char *)v1212 + v1211));
        sub_239498A04((std::__fs::filesystem::path *)&v2265, (uint64_t)&v2192, (std::__fs::filesystem::path *)&v2263);
        if (SHIBYTE(v2265.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v2265.__r_.__value_.__l.__data_);
          if (SHIBYTE(v2192.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_1778;
LABEL_1771:
          v1213 = v2184.__r_.__value_.__r.__words[0];
          v1214 = a11[15];
          if (!v1214)
            goto LABEL_1781;
LABEL_1779:
          if ((_QWORD *)v1214 != v2113)
          {
            v1214 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1214 + 16))(v1214);
            goto LABEL_1781;
          }
          v2282 = v2281;
          (*(void (**)(_QWORD *, _BYTE *))(*v2113 + 24))(v2113, v2281);
        }
        else
        {
          if ((SHIBYTE(v2192.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_1771;
LABEL_1778:
          operator delete(v2192.__r_.__value_.__l.__data_);
          v1213 = v2184.__r_.__value_.__r.__words[0];
          v1214 = a11[15];
          if (v1214)
            goto LABEL_1779;
LABEL_1781:
          v2282 = (_BYTE *)v1214;
        }
        v281 = sub_239975928((__int128 *)&v2263, v1213, (uint64_t)task_info_outCnt, (uint64_t)v2281, 1);
        v1215 = v2282;
        if (v2282 == v2281)
        {
          v1215 = v2281;
          v1216 = 4;
LABEL_1787:
          (*(void (**)(void))(*v1215 + 8 * v1216))();
        }
        else if (v2282)
        {
          v1216 = 5;
          goto LABEL_1787;
        }
        if (a10)
          sub_239927244(a9, (uint64_t)&v2263);
        if (SHIBYTE(v2263.__r_.__value_.__r.__words[2]) < 0)
          sub_23941A7F8(&v2189, v2263.__r_.__value_.__l.__data_, v2263.__r_.__value_.__l.__size_);
        else
          v2189 = v2263;
        sub_2399272D8(v1206, &v2189);
        if (SHIBYTE(v2189.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v2189.__r_.__value_.__l.__data_);
          if (SHIBYTE(v2263.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_1802;
LABEL_1795:
          if ((SHIBYTE(v2264.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_1796;
LABEL_1803:
          operator delete(v2264.__r_.__value_.__l.__data_);
          if (SHIBYTE(v2267) < 0)
            goto LABEL_1804;
LABEL_1797:
          if ((SHIBYTE(v2269) & 0x80000000) == 0)
            goto LABEL_1798;
LABEL_1805:
          operator delete((void *)v2268);
          if ((task_info_outCnt[55] & 0x80000000) != 0)
            goto LABEL_1806;
LABEL_1799:
          if ((task_info_outCnt[23] & 0x80000000) != 0)
LABEL_1807:
            operator delete(*(void **)task_info_outCnt);
        }
        else
        {
          if ((SHIBYTE(v2263.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_1795;
LABEL_1802:
          operator delete(v2263.__r_.__value_.__l.__data_);
          if (SHIBYTE(v2264.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_1803;
LABEL_1796:
          if ((SHIBYTE(v2267) & 0x80000000) == 0)
            goto LABEL_1797;
LABEL_1804:
          operator delete((void *)v2266);
          if (SHIBYTE(v2269) < 0)
            goto LABEL_1805;
LABEL_1798:
          if ((task_info_outCnt[55] & 0x80000000) == 0)
            goto LABEL_1799;
LABEL_1806:
          operator delete(*(void **)&task_info_outCnt[32]);
          if ((task_info_outCnt[23] & 0x80000000) != 0)
            goto LABEL_1807;
        }
LABEL_1639:
        v1123 = (std::__shared_weak_count *)v2184.__r_.__value_.__l.__size_;
        if (v2184.__r_.__value_.__l.__size_)
        {
          v1124 = (unint64_t *)(v2184.__r_.__value_.__l.__size_ + 8);
          do
            v1125 = __ldaxr(v1124);
          while (__stlxr(v1125 - 1, v1124));
          if (!v1125)
          {
            ((void (*)(std::__shared_weak_count *))v1123->__on_zero_shared)(v1123);
            std::__shared_weak_count::__release_weak(v1123);
          }
        }
        if (++v1096 == v2147)
        {
LABEL_1828:
          if ((v281 & 1) != 0)
            sub_2399FC9C0();
          v1245 = std::chrono::system_clock::now().__d_.__rep_;
          kdebug_trace();
          v280 = v280 + (double)(v1245 - v2140) / 1000000.0;
          sub_23992A6A0((uint64_t)task_info_out);
LABEL_1831:
          v279 = 0;
LABEL_1834:
          if (v2270.__r_.__value_.__r.__words[0])
            operator delete(v2270.__r_.__value_.__l.__data_);
          if ((_QWORD)v2271)
          {
            *((_QWORD *)&v2271 + 1) = v2271;
            operator delete((void *)v2271);
          }
LABEL_1838:
          sub_23993C9C4(&__src);
          if ((__dst[23] & 0x80000000) != 0)
            operator delete(*(void **)__dst);
          if (v279)
          {
            v217 = 0;
            goto LABEL_2861;
          }
          std::chrono::system_clock::now();
          if (a7)
            *(double *)(a6 + 360) = v278;
          v1246.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
          kdebug_trace();
          v1247 = v2147;
          v1248 = 0;
          memset(&v2192, 0, sizeof(v2192));
          if (*(unsigned __int8 *)(v206 + 104) | *(unsigned __int8 *)(v206 + 264) && *(_DWORD *)(v206 + 32))
          {
            v1249 = *(_QWORD *)(v2162 + 160) - *(_QWORD *)(v2162 + 152);
            v1248 = 16 * ((v1249 >> 1) + (v1249 >> 2));
          }
          *((_BYTE *)&v2188.__r_.__value_.__s + 23) = 0;
          v2188.__r_.__value_.__s.__data_[0] = 0;
          sub_23992A5B4((uint64_t)task_info_out, &v2188, v1248, 0);
          if (SHIBYTE(v2188.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v2188.__r_.__value_.__l.__data_);
          if (*(unsigned __int8 *)(v206 + 104) | *(unsigned __int8 *)(v206 + 264))
            _ZF = *(_DWORD *)(v206 + 32) == 0;
          else
            _ZF = 1;
          v1251 = _ZF;
          v1252 = v1251 & v281;
          if (!_ZF && ((v281 ^ 1) & 1) == 0)
            v1252 = sub_239975BC8(v2162, &v2192);
          v1253 = off_256934408[0];
          v1254 = strlen(off_256934408[0]);
          if (v1254 > 0x7FFFFFFFFFFFFFF7)
            sub_23941A5AC();
          v1255 = v1254;
          v2126 = v1252;
          if (v1254 >= 0x17)
          {
            v1257 = (v1254 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v1254 | 7) != 0x17)
              v1257 = v1254 | 7;
            v1258 = v1257 + 1;
            v1256 = operator new(v1257 + 1);
            *(_QWORD *)&__dst[16] = v1258 | 0x8000000000000000;
            *(_QWORD *)__dst = v1256;
            *(_QWORD *)&__dst[8] = v1255;
          }
          else
          {
            __dst[23] = v1254;
            v1256 = __dst;
            if (!v1254)
            {
LABEL_1866:
              v1256[v1255] = 0;
              *(_OWORD *)task_info_outCnt = 0uLL;
              v1259 = sub_2394E5F40((uint64_t **)(v2162 + 8), (uint64_t)task_info_outCnt, __dst);
              if ((__dst[23] & 0x80000000) != 0)
                operator delete(*(void **)__dst);
              v1260 = (uint64_t *)(*(_QWORD *)(v2162 + 8) + 16 * v1259);
              v1261 = (std::__shared_weak_count *)v1260[1];
              v2156 = *v1260;
              if (v1261)
              {
                v1262 = (unint64_t *)&v1261->__shared_owners_;
                do
                  v1263 = __ldxr(v1262);
                while (__stxr(v1263 + 1, v1262));
                do
                  v1264 = __ldaxr(v1262);
                while (__stlxr(v1264 - 1, v1262));
                if (!v1264)
                {
                  ((void (*)(std::__shared_weak_count *))v1261->__on_zero_shared)(v1261);
                  std::__shared_weak_count::__release_weak(v1261);
                }
              }
              v1265 = operator new(0xCuLL);
              *(_QWORD *)&__dst[16] = v1265 + 3;
              *(_QWORD *)v1265 = -1;
              v1265[2] = -1;
              *(_QWORD *)__dst = v1265;
              *(_QWORD *)&__dst[8] = v1265 + 3;
              if (!v2147)
                goto LABEL_1890;
              v1266 = 0;
              do
              {
                v2133 = v1266;
                v1267 = (char *)v2222 + 24 * v1266;
                v1268 = *((_DWORD *)v1267 + 2);
                v2141 = (unsigned int *)(v1267 + 8);
                if (v1268)
                {
                  v1269 = 24 * v2133;
                  v1270 = (char *)v2222 + 24 * v2133;
                  v1271 = *((_DWORD *)v1270 + 1);
                  v2160 = v1270 + 4;
                  if (v1271)
                  {
                    v1272 = 0;
                    v1273 = (char *)v2218 + v1269 + 16;
                    v1274 = (char *)v2218 + v1269 + 4;
                    v1275 = (char *)v2218 + v1269 + 12;
                    v1276 = (char *)v2220 + v1269;
                    v1277 = v1276 + 16;
                    v1278 = v1276 + 4;
                    v1279 = v1276 + 12;
                    v1280 = *((_DWORD *)v1270 + 1);
                    do
                    {
                      if (v1280)
                      {
                        v1281 = 0;
                        do
                        {
                          if (*(_BYTE *)(*(_QWORD *)(v2160 + 12) + *((_DWORD *)v2160 + 2) * (v1281 + v1272 * v1280)))
                          {
                            *(_DWORD *)task_info_outCnt = *(_DWORD *)(*v1273 + 4 * (v1281 + v1272 * *v1274) * *v1275);
                            sub_23996362C(v2162, (unsigned int *)task_info_outCnt, (uint64_t)__dst);
                            v1282 = (float *)(*v1277 + 16 * (v1281 + v1272 * *v1278) * *v1279);
                            v1283 = vaddq_f32(vaddq_f32(vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v2156 + 40)+ 16 * **(_DWORD **)__dst), *v1282), vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v2156 + 40)+ 16 * *(unsigned int *)(*(_QWORD *)__dst + 4)), v1282[1])), vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v2156 + 40)+ 16 * *(unsigned int *)(*(_QWORD *)__dst + 8)), v1282[2]));
                            v1284 = vmulq_f32(v1283, v1283);
                            v1284.i32[3] = 0;
                            v1285 = vpaddq_f32(v1284, v1284);
                            v1286 = vpaddq_f32(v1285, v1285);
                            v1287 = (float32x4_t)xmmword_239F02850;
                            if (v1286.f32[0] > 0.0)
                              v1287 = vdivq_f32(v1283, vsqrtq_f32(v1286));
                            *(float32x4_t *)v1282 = v1287;
                            v1271 = *(_DWORD *)v2160;
                          }
                          ++v1281;
                          v1280 = v1271;
                        }
                        while (v1281 < v1271);
                        v1268 = *v2141;
                        v1280 = v1271;
                      }
                      ++v1272;
                    }
                    while (v1272 < v1268);
                  }
                }
                v1266 = v2133 + 1;
                v1247 = v2147;
              }
              while (v2133 + 1 != v2147);
              v1265 = *(_DWORD **)__dst;
              v206 = v2163;
              if (*(_QWORD *)__dst)
              {
LABEL_1890:
                *(_QWORD *)&__dst[8] = v1265;
                operator delete(v1265);
              }
              sub_23992A6A0((uint64_t)task_info_out);
              sub_2399FC9C0();
              kdebug_trace();
              v1288.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
              if (a7)
                *(double *)(a6 + 304) = (double)(v1288.__d_.__rep_ - v1246.__d_.__rep_) / 1000000.0;
              v2100.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
              if (!v1247)
              {
LABEL_2841:
                v2064 = (void *)v2192.__r_.__value_.__r.__words[0];
                memset(&v2192, 0, sizeof(v2192));
                if (v2064)
                  operator delete(v2064);
                v217 = v2126;
                if (v2311)
                {
                  sub_23941A4FC(task_info_out, "");
                  LODWORD(v2191.__r_.__value_.__l.__data_) = 1120403456;
                  if (!v2311)
                    sub_2394172E0();
                  (*(void (**)(_BYTE *, std::string *, integer_t *))(*(_QWORD *)v2311 + 48))(v2311, &v2191, task_info_out);
                  if (SHIBYTE(v2241) < 0)
                    operator delete(*(void **)task_info_out);
                }
                v2065.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
                if (a7)
                  *(double *)(a6 + 368) = v280 + (double)(v2065.__d_.__rep_ - v2100.__d_.__rep_) / 1000000.0;
LABEL_2859:
                if (v2192.__r_.__value_.__r.__words[0])
                {
                  v2192.__r_.__value_.__l.__size_ = v2192.__r_.__value_.__r.__words[0];
                  operator delete(v2192.__r_.__value_.__l.__data_);
                }
LABEL_2861:
                v2066 = (void **)v2209;
                if (v2209)
                {
                  v2067 = v2210;
                  v2068 = v2209;
                  if (v2210 != v2209)
                  {
                    do
                    {
                      if (*((char *)v2067 - 1) < 0)
                        operator delete(*(v2067 - 3));
                      v2069 = (std::__shared_weak_count *)*(v2067 - 4);
                      if (v2069)
                      {
                        v2070 = (unint64_t *)&v2069->__shared_owners_;
                        do
                          v2071 = __ldaxr(v2070);
                        while (__stlxr(v2071 - 1, v2070));
                        if (!v2071)
                        {
                          ((void (*)(std::__shared_weak_count *))v2069->__on_zero_shared)(v2069);
                          std::__shared_weak_count::__release_weak(v2069);
                        }
                      }
                      v2067 -= 6;
                    }
                    while (v2067 != v2066);
                    v2068 = v2209;
                  }
                  v2210 = v2066;
                  operator delete(v2068);
                }
                v2072 = (void **)v2212;
                if (v2212)
                {
                  v2073 = v2213;
                  v2074 = v2212;
                  if (v2213 != v2212)
                  {
                    do
                    {
                      if (*((char *)v2073 - 1) < 0)
                        operator delete(*(v2073 - 3));
                      v2075 = (std::__shared_weak_count *)*(v2073 - 4);
                      if (v2075)
                      {
                        v2076 = (unint64_t *)&v2075->__shared_owners_;
                        do
                          v2077 = __ldaxr(v2076);
                        while (__stlxr(v2077 - 1, v2076));
                        if (!v2077)
                        {
                          ((void (*)(std::__shared_weak_count *))v2075->__on_zero_shared)(v2075);
                          std::__shared_weak_count::__release_weak(v2075);
                        }
                      }
                      v2073 -= 6;
                    }
                    while (v2073 != v2072);
                    v2074 = v2212;
                  }
                  v2213 = v2072;
                  operator delete(v2074);
                }
                v2078 = (char *)v2215;
                if (v2215)
                {
                  v2079 = v2216;
                  v2080 = v2215;
                  if (v2216 != v2215)
                  {
                    do
                    {
                      v2081 = *((_QWORD *)v2079 - 1);
                      if (v2081)
                      {
                        MEMORY[0x23B83E2F8](v2081, 0x1000C80451B5BE8);
                        *((_QWORD *)v2079 - 1) = 0;
                      }
                      v2079 -= 24;
                    }
                    while (v2079 != v2078);
                    v2080 = v2215;
                  }
                  v2216 = v2078;
                  operator delete(v2080);
                }
                goto LABEL_2895;
              }
              v1289 = 0;
              v1290 = 3 * v2122;
              v2118 = (_BYTE *)(v206 + 264);
              v2097 = (uint64_t)(a11 + 12);
              v1291 = (double)v1247;
              if (3 * v2122 <= 1)
                v1290 = 1;
              v2105 = 4 * v1290;
              if (v2122 <= 1)
                v1292 = 1;
              else
                v1292 = v2122;
              v2108 = v1290;
              v2104 = v1290 & 0xFFFFFFFFFFFFFFFCLL;
              v2098 = v1292 & 0xFFFFFFFFFFFFFFE0;
              v2094 = v1292 & 0x18;
              v2099 = (uint64x2_t)vdupq_n_s64(0x5555555555555554uLL);
              v2161 = v1292;
              __asm { FMOV            V0.4S, #1.0 }
              v2102 = _Q0;
              v2096 = v1292 & 0xFFFFFFFFFFFFFFF8;
              v2095 = -(uint64_t)(v1292 & 0xFFFFFFFFFFFFFFF8);
              while (2)
              {
                if (v2309 && ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
                {
LABEL_2858:
                  v217 = 0;
                  goto LABEL_2859;
                }
                v1296 = *(const void ***)(v2146 + 8);
                if (!v1296)
LABEL_2849:
                  sub_23941D898("map::at:  key not found");
                v2157 = (const void **)v2222;
                __vald = (char *)v2222 + 24 * v1289;
                while (1)
                {
                  while (1)
                  {
                    v1297 = *((unsigned __int16 *)v1296 + 16);
                    if (v1297 <= (unsigned __int16)v1289)
                      break;
                    v1296 = (const void **)*v1296;
                    if (!v1296)
                      goto LABEL_2849;
                  }
                  if (v1297 >= (unsigned __int16)v1289)
                    break;
                  v1296 = (const void **)v1296[1];
                  if (!v1296)
                    goto LABEL_2849;
                }
                *(_QWORD *)__dst = v1296 + 5;
                v2134 = *((unsigned __int16 *)sub_23958C73C(v2164 + 6, v1296 + 5, (uint64_t)&unk_239EC6E98, (__int128 **)__dst)+ 28);
                v2120 = *v2164;
                v2187 = 0;
                v2186 = 0;
                if ((v2126 & 1) == 0)
                {
                  v2126 = 0;
                  goto LABEL_1984;
                }
                v1298 = *(unsigned __int8 *)(v206 + 104);
                if (*(_BYTE *)(v206 + 104))
                  v1299 = v2124;
                else
                  v1299 = 0;
                if (*(_BYTE *)(v206 + 104))
                  v1300 = 28 * v2122;
                else
                  v1300 = v2123;
                *((_BYTE *)&v2185.__r_.__value_.__s + 23) = 0;
                v2185.__r_.__value_.__s.__data_[0] = 0;
                sub_23992A5B4((uint64_t)task_info_out, &v2185, v1299, v1300);
                if (SHIBYTE(v2185.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v2185.__r_.__value_.__l.__data_);
                if (!v1298)
                {
                  v2126 = 1;
                  goto LABEL_1981;
                }
                if (v2309 && ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
                {
                  v2126 = 1;
                  goto LABEL_1990;
                }
                kdebug_trace();
                v1301 = operator new[]();
                v1302 = operator new(0x30uLL);
                v1302[1] = 0;
                v1302[2] = 0;
                *v1302 = &off_250ADF208;
                *((_DWORD *)v1302 + 6) = 0;
                *((_DWORD *)v1302 + 7) = v2145;
                *((_DWORD *)v1302 + 8) = v2145;
                *((_DWORD *)v1302 + 9) = 3;
                v1302[5] = v1301;
                v1303 = v2187;
                v2186 = v1302 + 3;
                v2187 = (std::__shared_weak_count *)v1302;
                if (v1303)
                {
                  v1304 = (unint64_t *)&v1303->__shared_owners_;
                  do
                    v1305 = __ldaxr(v1304);
                  while (__stlxr(v1305 - 1, v1304));
                  if (!v1305)
                  {
                    ((void (*)(std::__shared_weak_count *))v1303->__on_zero_shared)(v1303);
                    std::__shared_weak_count::__release_weak(v1303);
                  }
                }
                v1306 = (uint64_t)v2186;
                *(_DWORD *)v2186 = 0;
                if (v2145)
                {
                  v1307 = *(_QWORD *)(v1306 + 16);
                  if (v2108 >= 4)
                  {
                    v1309 = v2104;
                    v1310 = *(int8x16_t **)(v1306 + 16);
                    v1311 = (int64x2_t)xmmword_239EC6860;
                    v1312 = (int64x2_t)xmmword_239F02860;
                    v1313.i64[0] = 0x3F0000003F000000;
                    v1313.i64[1] = 0x3F0000003F000000;
                    do
                    {
                      v1314 = vdupq_n_s64(2uLL);
                      v1315 = (uint64x2_t)vsubq_s64(v1312, v1314);
                      v1315.i64[0] *= 0xAAAAAAAAAAAAAAABLL;
                      v1316 = (uint64x2_t)vsubq_s64(v1311, v1314);
                      v1315.i64[1] *= 0xAAAAAAAAAAAAAAABLL;
                      v1316.i64[0] *= 0xAAAAAAAAAAAAAAABLL;
                      v1316.i64[1] *= 0xAAAAAAAAAAAAAAABLL;
                      *v1310++ = vbslq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vcgeq_u64(v2099, v1316), (int32x4_t)vcgeq_u64(v2099, v1315)), v2102, v1313);
                      v1317 = vdupq_n_s64(4uLL);
                      v1312 = vaddq_s64(v1312, v1317);
                      v1311 = vaddq_s64(v1311, v1317);
                      v1309 -= 4;
                    }
                    while (v1309);
                    v1308 = v2104;
                    if (v2108 != v2104)
                      goto LABEL_1935;
                  }
                  else
                  {
                    v1308 = 0;
LABEL_1935:
                    v1318 = v2108 - v1308;
                    v1319 = (float *)(v1307 + 4 * v1308);
                    v1320 = v1308 - 2;
                    do
                    {
                      if (v1320 == 3 * (v1308 / 3))
                        v1321 = 1.0;
                      else
                        v1321 = 0.5;
                      *v1319++ = v1321;
                      ++v1308;
                      ++v1320;
                      --v1318;
                    }
                    while (v1318);
                  }
                }
                if (*(_DWORD *)(v206 + 32))
                  v1322 = sub_23997763C(v2137, v2162, v1306, (uint64_t)__vald, (uint64_t)v2215 + 24 * v1289, (uint64_t)v2220 + 24 * v1289, (uint64_t)v2218 + 24 * v1289, &v2192);
                else
                  v1322 = sub_239977A5C(v2137, v1306, (uint64_t)__vald, (uint64_t)v2215 + 24 * v1289, (uint64_t)v2220 + 24 * v1289);
                if (!v1322 || !sub_239927458((uint64_t)v2186, v2157[3 * v1289 + 2], -1))
                {
                  v1369 = 0;
                  goto LABEL_1976;
                }
                v1323 = (uint64_t)v2186;
                v1324 = *((_DWORD *)v2186 + 2);
                if (v1324 >= 2)
                {
                  v1325 = *((unsigned int *)v2186 + 1);
                  if ((_DWORD)v1325)
                  {
                    v1326 = *((unsigned int *)v2186 + 3);
                    if ((_DWORD)v1326)
                    {
                      v1327 = 0;
                      v1328 = 0;
                      v1329 = v1324 >> 1;
                      v1330 = v2186[2];
                      if (v1324 >> 1 <= 1)
                        v1329 = 1;
                      v1331 = v1325 * v1326;
                      v1332 = v1330 + 4 * v1326;
                      v1333 = v1325 * v1326 * (v1324 - 1);
                      v1334 = v1330 + 16;
                      v1335 = v1333;
                      while (v1326 < 8)
                      {
                        v1336 = 0;
                        v1337 = v1325;
                        do
                        {
                          v1338 = (int *)(v1330 + 4 * (v1327 + v1336));
                          v1339 = (int *)(v1330 + 4 * (v1335 + v1336));
                          v1340 = *v1338;
                          *v1338 = *v1339;
                          *v1339 = v1340;
                          if ((_DWORD)v1326 != 1)
                          {
                            v1341 = v1338[1];
                            v1338[1] = v1339[1];
                            v1339[1] = v1341;
                            if ((_DWORD)v1326 != 2)
                            {
                              v1342 = v1338[2];
                              v1338[2] = v1339[2];
                              v1339[2] = v1342;
                              if ((_DWORD)v1326 != 3)
                              {
                                v1343 = v1338[3];
                                v1338[3] = v1339[3];
                                v1339[3] = v1343;
                                if ((_DWORD)v1326 != 4)
                                {
                                  v1344 = v1338[4];
                                  v1338[4] = v1339[4];
                                  v1339[4] = v1344;
                                  if ((_DWORD)v1326 != 5)
                                  {
                                    v1345 = v1338[5];
                                    v1338[5] = v1339[5];
                                    v1339[5] = v1345;
                                    if ((_DWORD)v1326 != 6)
                                    {
                                      v1346 = v1338[6];
                                      v1338[6] = v1339[6];
                                      v1339[6] = v1346;
                                    }
                                  }
                                }
                              }
                            }
                          }
                          v1336 += v1326;
                          --v1337;
                        }
                        while (v1337);
LABEL_1951:
                        ++v1328;
                        v1327 += v1331;
                        v1335 -= v1331;
                        if (v1328 == v1329)
                          goto LABEL_2093;
                      }
                      v1347 = 0;
                      v1348 = v1335;
                      v1349 = v1327;
                      while (2)
                      {
                        v1350 = 4 * v1348;
                        v1351 = 4 * v1349;
                        v1352 = 4 * (v1333 + v1328 * -((_DWORD)v1325 * (_DWORD)v1326) + (_DWORD)v1347 * (_DWORD)v1326);
                        v1353 = v1332 + v1352;
                        v1354 = v1330 + v1352;
                        v1355 = 4 * (v1328 * v1331 + v1347 * v1326);
                        if (v1330 + v1355 < v1353 && v1354 < v1332 + v1355)
                        {
                          v1363 = 0;
                          goto LABEL_1972;
                        }
                        v1357 = (__int128 *)(v1334 + v1351);
                        v1358 = (__int128 *)(v1334 + v1350);
                        v1359 = v1326 & 0xFFFFFFF8;
                        do
                        {
                          v1360 = *(v1357 - 1);
                          v1361 = *v1357;
                          v1362 = *v1358;
                          *(v1357 - 1) = *(v1358 - 1);
                          *v1357 = v1362;
                          *(v1358 - 1) = v1360;
                          *v1358 = v1361;
                          v1357 += 2;
                          v1358 += 2;
                          v1359 -= 8;
                        }
                        while (v1359);
                        v1363 = v1326 & 0xFFFFFFF8;
                        if (v1363 != v1326)
                        {
LABEL_1972:
                          v1364 = v1326 - v1363;
                          v1365 = 4 * v1363;
                          v1366 = (int *)(v1330 + v1365 + v1350);
                          v1367 = (int *)(v1330 + v1365 + v1351);
                          do
                          {
                            v1368 = *v1367;
                            *v1367++ = *v1366;
                            *v1366++ = v1368;
                            --v1364;
                          }
                          while (v1364);
                        }
                        ++v1347;
                        v1349 += v1326;
                        v1348 += v1326;
                        if (v1347 == v1325)
                          goto LABEL_1951;
                        continue;
                      }
                    }
                  }
                }
LABEL_2093:
                if (!*(_BYTE *)(v206 + 104))
                {
                  v1369 = 1;
                  goto LABEL_1976;
                }
                if (!a12)
                {
                  v1636 = &v2120[6 * v2134];
                  v1639 = (uint64_t *)v1636[4];
                  v1638 = (uint64_t **)(v1636 + 4);
                  v1637 = v1639;
                  if (v1639)
                  {
                    while (1)
                    {
                      while (1)
                      {
                        v1641 = (uint64_t **)v1637;
                        v1642 = *((_DWORD *)v1637 + 7);
                        if (v1642 < 3)
                          break;
                        v1637 = *v1641;
                        v1640 = v1641;
                        if (!*v1641)
                          goto LABEL_2258;
                      }
                      if (v1642 == 2)
                        break;
                      v1637 = v1641[1];
                      if (!v1637)
                      {
                        v1640 = v1641 + 1;
                        goto LABEL_2258;
                      }
                    }
                    v1643 = v1641;
                  }
                  else
                  {
                    v1640 = v1638;
                    v1641 = v1638;
LABEL_2258:
                    v1643 = operator new(0x28uLL);
                    v1643[7] = 2;
                    *((_WORD *)v1643 + 16) = 0;
                    *(_QWORD *)v1643 = 0;
                    *((_QWORD *)v1643 + 1) = 0;
                    *((_QWORD *)v1643 + 2) = v1641;
                    *v1640 = (uint64_t *)v1643;
                    v1645 = (uint64_t **)*(v1638 - 1);
                    v1644 = v1638 - 1;
                    v1646 = *v1645;
                    v1647 = (uint64_t *)v1643;
                    if (*v1645)
                    {
                      *v1644 = v1646;
                      v1647 = *v1640;
                    }
                    sub_2394213B8(v1644[1], v1647);
                    v1644[2] = (uint64_t *)((char *)v1644[2] + 1);
                    v1323 = (uint64_t)v2186;
                  }
                  v2011 = *((unsigned __int16 *)v1643 + 16);
                  v2012 = v2164[3];
                  v2013 = v2187;
                  if (v2187)
                  {
                    v2014 = (unint64_t *)&v2187->__shared_owners_;
                    do
                      v2015 = __ldxr(v2014);
                    while (__stxr(v2015 + 1, v2014));
                    do
                      v2016 = __ldxr(v2014);
                    while (__stxr(v2016 + 1, v2014));
                  }
                  v2017 = &v2012[6 * v2011];
                  v2017[1] = v1323;
                  v2018 = v2017 + 1;
                  v2019 = (std::__shared_weak_count *)v2018[1];
                  v2018[1] = (uint64_t)v2013;
                  if (v2019)
                  {
                    v2020 = (unint64_t *)&v2019->__shared_owners_;
                    do
                      v2021 = __ldaxr(v2020);
                    while (__stlxr(v2021 - 1, v2020));
                    if (!v2021)
                    {
                      ((void (*)(std::__shared_weak_count *))v2019->__on_zero_shared)(v2019);
                      std::__shared_weak_count::__release_weak(v2019);
                    }
                    v1323 = *v2018;
                  }
                  v2022 = v1323 && *(_QWORD *)(v1323 + 16);
                  BYTE4(v2012[6 * v2011]) = v2022;
                  if (v2013)
                  {
                    v2023 = (unint64_t *)&v2013->__shared_owners_;
                    do
                      v2024 = __ldaxr(v2023);
                    while (__stlxr(v2024 - 1, v2023));
                    if (!v2024)
                    {
                      ((void (*)(std::__shared_weak_count *))v2013->__on_zero_shared)(v2013);
                      std::__shared_weak_count::__release_weak(v2013);
                    }
                  }
                  v1369 = 1;
                  goto LABEL_1976;
                }
                __dst[23] = 5;
                strcpy(__dst, "uchar");
                __dst[55] = 4;
                strcpy(&__dst[32], ".jpg");
                v1486 = *(float *)(v206 + 136) * 100.0;
                if (v1486 < 1.0)
                  v1486 = 1.0;
                if (v1486 > 100.0)
                  v1486 = 100.0;
                *(_WORD *)&__dst[24] = (int)v1486;
                std::operator+<char>();
                if ((__dst[55] & 0x80000000) != 0)
                  operator delete(*(void **)&__dst[32]);
                *(_OWORD *)&__dst[32] = v2266;
                *(_QWORD *)&__dst[48] = v2267;
                v1487 = &v2120[6 * v2134];
                v1490 = (uint64_t *)v1487[4];
                v1489 = (uint64_t **)(v1487 + 4);
                v1488 = v1490;
                if (v1490)
                {
                  while (1)
                  {
                    while (1)
                    {
                      v1492 = (uint64_t **)v1488;
                      v1493 = *((_DWORD *)v1488 + 7);
                      if (v1493 < 3)
                        break;
                      v1488 = *v1492;
                      v1491 = v1492;
                      if (!*v1492)
                        goto LABEL_2108;
                    }
                    if (v1493 == 2)
                      break;
                    v1488 = v1492[1];
                    if (!v1488)
                    {
                      v1491 = v1492 + 1;
                      goto LABEL_2108;
                    }
                  }
                  v1494 = v1492;
                }
                else
                {
                  v1491 = v1489;
                  v1492 = v1489;
LABEL_2108:
                  v1494 = operator new(0x28uLL);
                  v1494[7] = 2;
                  *((_WORD *)v1494 + 16) = 0;
                  *(_QWORD *)v1494 = 0;
                  *((_QWORD *)v1494 + 1) = 0;
                  *((_QWORD *)v1494 + 2) = v1492;
                  *v1491 = (uint64_t *)v1494;
                  v1496 = (uint64_t **)*(v1489 - 1);
                  v1495 = v1489 - 1;
                  v1497 = *v1496;
                  v1498 = (uint64_t *)v1494;
                  if (*v1496)
                  {
                    *v1495 = v1497;
                    v1498 = *v1491;
                  }
                  sub_2394213B8(v1495[1], v1498);
                  v1495[2] = (uint64_t *)((char *)v1495[2] + 1);
                }
                v2025 = *((unsigned __int16 *)v1494 + 16);
                v2026 = v2164[3];
                v2027 = std::__fs::filesystem::path::__stem(a13);
                if (v2027.__size_ > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                if (v2027.__size_ >= 0x17)
                {
                  v2029 = (v2027.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v2027.__size_ | 7) != 0x17)
                    v2029 = v2027.__size_ | 7;
                  v2030 = v2029 + 1;
                  v2028 = (__int128 *)operator new(v2029 + 1);
                  v2269 = v2030 | 0x8000000000000000;
                  *(_QWORD *)&v2268 = v2028;
                  *((_QWORD *)&v2268 + 1) = v2027.__size_;
                }
                else
                {
                  HIBYTE(v2269) = v2027.__size_;
                  v2028 = &v2268;
                  if (!v2027.__size_)
                  {
LABEL_2742:
                    *((_BYTE *)v2028 + v2027.__size_) = 0;
                    v2031 = *((_QWORD *)&v2268 + 1);
                    v2032 = (void *)v2268;
                    LODWORD(v2191.__r_.__value_.__l.__data_) = v2269;
                    *(_DWORD *)((char *)v2191.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v2269 + 3);
                    if (SHIBYTE(v2269) < 0)
                    {
                      sub_23941A7F8(&v2266, (void *)v2268, *((unint64_t *)&v2268 + 1));
                      operator delete(v2032);
                    }
                    else
                    {
                      v2266 = v2268;
                      LODWORD(v2267) = v2191.__r_.__value_.__l.__data_;
                      *(_DWORD *)((char *)&v2267 + 3) = *(_DWORD *)((char *)v2191.__r_.__value_.__r.__words + 3);
                      HIBYTE(v2267) = HIBYTE(v2269);
                    }
                    v2033 = (std::string *)&v2026[6 * v2025];
                    v2268 = 0uLL;
                    v2269 = 0;
                    v2034 = LODWORD(v2033->__r_.__value_.__l.__data_) - 1;
                    if (v2034 < 0xD)
                      MEMORY[0x23B83DBFC](&v2268, off_250AF0168[v2034], v2031);
                    v2035 = SHIBYTE(v2267);
                    if (v2267 >= 0)
                      v2036 = HIBYTE(v2267);
                    else
                      v2036 = *((_QWORD *)&v2266 + 1);
                    v2037 = v2036 + 1;
                    if (v2036 + 1 > 0x7FFFFFFFFFFFFFF7)
                      sub_23941A5AC();
                    if (v2037 >= 0x17)
                    {
                      v2039 = (v2037 & 0xFFFFFFFFFFFFFFF8) + 8;
                      if ((v2037 | 7) != 0x17)
                        v2039 = v2037 | 7;
                      v2040 = v2039 + 1;
                      v2038 = (char *)operator new(v2039 + 1);
                      v2183.__r_.__value_.__r.__words[2] = v2040 | 0x8000000000000000;
                      v2183.__r_.__value_.__r.__words[0] = (std::string::size_type)v2038;
                      v2183.__r_.__value_.__l.__size_ = v2036 + 1;
                    }
                    else
                    {
                      memset(&v2183, 0, sizeof(v2183));
                      v2038 = (char *)&v2183;
                      *((_BYTE *)&v2183.__r_.__value_.__s + 23) = v2036 + 1;
                      if (!v2036)
                        goto LABEL_2761;
                    }
                    if (v2035 >= 0)
                      v2041 = &v2266;
                    else
                      v2041 = (__int128 *)v2266;
                    memmove(v2038, v2041, v2036);
LABEL_2761:
                    *(_WORD *)&v2038[v2036] = 95;
                    if (v2269 >= 0)
                      v2042 = (const std::string::value_type *)&v2268;
                    else
                      v2042 = (const std::string::value_type *)v2268;
                    if (v2269 >= 0)
                      v2043 = HIBYTE(v2269);
                    else
                      v2043 = *((_QWORD *)&v2268 + 1);
                    v2044 = std::string::append(&v2183, v2042, v2043);
                    v2045 = *(_OWORD *)&v2044->__r_.__value_.__l.__data_;
                    v2184.__r_.__value_.__r.__words[2] = v2044->__r_.__value_.__r.__words[2];
                    *(_OWORD *)&v2184.__r_.__value_.__l.__data_ = v2045;
                    v2044->__r_.__value_.__l.__size_ = 0;
                    v2044->__r_.__value_.__r.__words[2] = 0;
                    v2044->__r_.__value_.__r.__words[0] = 0;
                    std::to_string(&v2182, v1289);
                    if ((v2182.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                      v2046 = &v2182;
                    else
                      v2046 = (std::string *)v2182.__r_.__value_.__r.__words[0];
                    if ((v2182.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                      v2047 = HIBYTE(v2182.__r_.__value_.__r.__words[2]);
                    else
                      v2047 = v2182.__r_.__value_.__l.__size_;
                    v2048 = std::string::append(&v2184, (const std::string::value_type *)v2046, v2047);
                    v2049 = *(_OWORD *)&v2048->__r_.__value_.__l.__data_;
                    v2190.__r_.__value_.__r.__words[2] = v2048->__r_.__value_.__r.__words[2];
                    *(_OWORD *)&v2190.__r_.__value_.__l.__data_ = v2049;
                    v2048->__r_.__value_.__l.__size_ = 0;
                    v2048->__r_.__value_.__r.__words[2] = 0;
                    v2048->__r_.__value_.__r.__words[0] = 0;
                    if (__dst[55] >= 0)
                      v2050 = &__dst[32];
                    else
                      v2050 = *(const std::string::value_type **)&__dst[32];
                    if (__dst[55] >= 0)
                      v2051 = __dst[55];
                    else
                      v2051 = *(_QWORD *)&__dst[40];
                    v2052 = std::string::append(&v2190, v2050, v2051);
                    v2053 = *(_OWORD *)&v2052->__r_.__value_.__l.__data_;
                    v2191.__r_.__value_.__r.__words[2] = v2052->__r_.__value_.__r.__words[2];
                    *(_OWORD *)&v2191.__r_.__value_.__l.__data_ = v2053;
                    v2052->__r_.__value_.__l.__size_ = 0;
                    v2052->__r_.__value_.__r.__words[2] = 0;
                    v2052->__r_.__value_.__r.__words[0] = 0;
                    if ((SHIBYTE(v2190.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    {
                      if ((SHIBYTE(v2182.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                        goto LABEL_2781;
LABEL_2801:
                      operator delete(v2182.__r_.__value_.__l.__data_);
                      if (SHIBYTE(v2184.__r_.__value_.__r.__words[2]) < 0)
                        goto LABEL_2802;
LABEL_2782:
                      if ((SHIBYTE(v2183.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                        goto LABEL_2783;
LABEL_2803:
                      operator delete(v2183.__r_.__value_.__l.__data_);
                      goto LABEL_2783;
                    }
                    operator delete(v2190.__r_.__value_.__l.__data_);
                    if (SHIBYTE(v2182.__r_.__value_.__r.__words[2]) < 0)
                      goto LABEL_2801;
LABEL_2781:
                    if ((SHIBYTE(v2184.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                      goto LABEL_2782;
LABEL_2802:
                    operator delete(v2184.__r_.__value_.__l.__data_);
                    if (SHIBYTE(v2183.__r_.__value_.__r.__words[2]) < 0)
                      goto LABEL_2803;
LABEL_2783:
                    v2054 = std::__fs::filesystem::path::__parent_path(a13);
                    if (v2054.__size_ > 0x7FFFFFFFFFFFFFF7)
                      sub_23941A5AC();
                    if (v2054.__size_ >= 0x17)
                    {
                      v2056 = (v2054.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                      if ((v2054.__size_ | 7) != 0x17)
                        v2056 = v2054.__size_ | 7;
                      v2057 = v2056 + 1;
                      v2055 = operator new(v2056 + 1);
                      v2270.__r_.__value_.__r.__words[2] = v2057 | 0x8000000000000000;
                      v2270.__r_.__value_.__r.__words[0] = (std::string::size_type)v2055;
                      v2270.__r_.__value_.__l.__size_ = v2054.__size_;
                    }
                    else
                    {
                      *((_BYTE *)&v2270.__r_.__value_.__s + 23) = v2054.__size_;
                      v2055 = &v2270;
                      if (!v2054.__size_)
                      {
LABEL_2791:
                        v2055[v2054.__size_] = 0;
                        v2184 = v2270;
                        memset(&v2270, 0, sizeof(v2270));
                        v2058 = HIBYTE(v2191.__r_.__value_.__r.__words[2]);
                        if ((v2191.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                          v2059 = &v2191;
                        else
                          v2059 = (std::string *)v2191.__r_.__value_.__r.__words[0];
                        if ((v2191.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                          v2058 = v2191.__r_.__value_.__l.__size_;
                        sub_23948900C(&v2270, v2059, (std::string *)((char *)v2059 + v2058));
                        sub_239498A04((std::__fs::filesystem::path *)&v2270, (uint64_t)&v2184, (std::__fs::filesystem::path *)&v2190);
                        if (SHIBYTE(v2270.__r_.__value_.__r.__words[2]) < 0)
                        {
                          operator delete(v2270.__r_.__value_.__l.__data_);
                          if (SHIBYTE(v2184.__r_.__value_.__r.__words[2]) < 0)
                            goto LABEL_2805;
LABEL_2798:
                          v2060 = (uint64_t)v2186;
                          v2061 = a11[15];
                          if (!v2061)
                            goto LABEL_2808;
LABEL_2806:
                          if (v2061 != v2097)
                          {
                            v2061 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2061 + 16))(v2061);
                            goto LABEL_2808;
                          }
                          v2280 = v2279;
                          (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v2097 + 24))(v2097, v2279);
                        }
                        else
                        {
                          if ((SHIBYTE(v2184.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                            goto LABEL_2798;
LABEL_2805:
                          operator delete(v2184.__r_.__value_.__l.__data_);
                          v2060 = (uint64_t)v2186;
                          v2061 = a11[15];
                          if (v2061)
                            goto LABEL_2806;
LABEL_2808:
                          v2280 = (_BYTE *)v2061;
                        }
                        v1369 = sub_239975928((__int128 *)&v2190, v2060, (uint64_t)__dst, (uint64_t)v2279, 1);
                        v2062 = v2280;
                        if (v2280 == v2279)
                        {
                          v2062 = v2279;
                          v2063 = 4;
LABEL_2814:
                          (*(void (**)(void))(*v2062 + 8 * v2063))();
                        }
                        else if (v2280)
                        {
                          v2063 = 5;
                          goto LABEL_2814;
                        }
                        if (a10)
                          sub_239927244(a9, (uint64_t)&v2190);
                        if (SHIBYTE(v2190.__r_.__value_.__r.__words[2]) < 0)
                          sub_23941A7F8(&v2181, v2190.__r_.__value_.__l.__data_, v2190.__r_.__value_.__l.__size_);
                        else
                          v2181 = v2190;
                        sub_2399272D8(v2033, &v2181);
                        if (SHIBYTE(v2181.__r_.__value_.__r.__words[2]) < 0)
                        {
                          operator delete(v2181.__r_.__value_.__l.__data_);
                          if (SHIBYTE(v2190.__r_.__value_.__r.__words[2]) < 0)
                            goto LABEL_2829;
LABEL_2822:
                          if ((SHIBYTE(v2191.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                            goto LABEL_2823;
LABEL_2830:
                          operator delete(v2191.__r_.__value_.__l.__data_);
                          if (SHIBYTE(v2269) < 0)
                            goto LABEL_2831;
LABEL_2824:
                          if ((SHIBYTE(v2267) & 0x80000000) == 0)
                            goto LABEL_2825;
LABEL_2832:
                          operator delete((void *)v2266);
                          if ((__dst[55] & 0x80000000) != 0)
                            goto LABEL_2833;
LABEL_2826:
                          if ((__dst[23] & 0x80000000) != 0)
LABEL_2834:
                            operator delete(*(void **)__dst);
                        }
                        else
                        {
                          if ((SHIBYTE(v2190.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                            goto LABEL_2822;
LABEL_2829:
                          operator delete(v2190.__r_.__value_.__l.__data_);
                          if (SHIBYTE(v2191.__r_.__value_.__r.__words[2]) < 0)
                            goto LABEL_2830;
LABEL_2823:
                          if ((SHIBYTE(v2269) & 0x80000000) == 0)
                            goto LABEL_2824;
LABEL_2831:
                          operator delete((void *)v2268);
                          if (SHIBYTE(v2267) < 0)
                            goto LABEL_2832;
LABEL_2825:
                          if ((__dst[55] & 0x80000000) == 0)
                            goto LABEL_2826;
LABEL_2833:
                          operator delete(*(void **)&__dst[32]);
                          if ((__dst[23] & 0x80000000) != 0)
                            goto LABEL_2834;
                        }
LABEL_1976:
                        if (a12)
                        {
                          v1370 = (uint64_t)v2186;
                          v1371 = v2186[2];
                          if (v1371)
                          {
                            MEMORY[0x23B83E2F8](v1371, 0x1000C8052888210);
                            v1370 = (uint64_t)v2186;
                          }
                          *(_QWORD *)(v1370 + 16) = 0;
                        }
                        kdebug_trace();
                        v2126 = v1369 != 0;
LABEL_1981:
                        v1372 = v2220;
                        v1373 = *((_QWORD *)v2220 + 3 * v1289 + 2);
                        if (v1373)
                        {
                          MEMORY[0x23B83E2F8](v1373 - 16, 0x1000C80451B5BE8);
                          v1372 = v2220;
                        }
                        v1372[3 * v1289 + 2] = 0;
                        sub_23992A6A0((uint64_t)task_info_out);
LABEL_1984:
                        sub_2399FC9C0();
                        v1374 = *(unsigned __int8 *)(v206 + 144);
                        if (!*(_BYTE *)(v206 + 144) || ((v2126 ^ 1) & 1) != 0)
                          goto LABEL_2037;
                        *((_BYTE *)&v2180.__r_.__value_.__s + 23) = 0;
                        v2180.__r_.__value_.__s.__data_[0] = 0;
                        sub_23992A5B4((uint64_t)task_info_out, &v2180, v2124, v2124);
                        if (SHIBYTE(v2180.__r_.__value_.__r.__words[2]) < 0)
                          operator delete(v2180.__r_.__value_.__l.__data_);
                        if (v2309 && (*(unsigned int (**)(_QWORD *))(*v2309 + 48))(v2309))
                        {
LABEL_1990:
                          sub_23992A6A0((uint64_t)task_info_out);
                          goto LABEL_2478;
                        }
                        kdebug_trace();
                        *(_OWORD *)&v2170.__r_.__value_.__l.__data_ = 0uLL;
                        v1375 = operator new[]();
                        v1376 = operator new(0x30uLL);
                        v1376[1] = 0;
                        v1376[2] = 0;
                        *v1376 = &off_250ADF208;
                        *((_DWORD *)v1376 + 6) = 0;
                        *((_DWORD *)v1376 + 7) = v2145;
                        *((_DWORD *)v1376 + 8) = v2145;
                        *((_DWORD *)v1376 + 9) = 3;
                        v1376[5] = v1375;
                        v1377 = (std::__shared_weak_count *)v2170.__r_.__value_.__l.__size_;
                        v2170.__r_.__value_.__r.__words[0] = (std::string::size_type)(v1376 + 3);
                        v2170.__r_.__value_.__l.__size_ = (std::string::size_type)v1376;
                        if (v1377)
                        {
                          v1378 = (unint64_t *)&v1377->__shared_owners_;
                          do
                            v1379 = __ldaxr(v1378);
                          while (__stlxr(v1379 - 1, v1378));
                          if (!v1379)
                          {
                            ((void (*)(std::__shared_weak_count *))v1377->__on_zero_shared)(v1377);
                            std::__shared_weak_count::__release_weak(v1377);
                          }
                        }
                        v1380 = v2170.__r_.__value_.__r.__words[0];
                        *(_DWORD *)v2170.__r_.__value_.__l.__data_ = 0;
                        if (v2145)
                          bzero(*(void **)(v1380 + 16), v2105);
                        if (!sub_239977EA0(v2137, v1380, (uint64_t)__vald, (uint64_t)v2215 + 24 * v1289)
                          || !sub_239927458((uint64_t)v2170.__r_.__value_.__l.__data_, v2157[3 * v1289 + 2], 5))
                        {
                          v2126 = 0;
                          goto LABEL_2031;
                        }
                        v1381 = v2170.__r_.__value_.__r.__words[0];
                        v1382 = *(_DWORD *)(v2170.__r_.__value_.__r.__words[0] + 8);
                        if (v1382 >= 2)
                        {
                          v1383 = *(unsigned int *)(v2170.__r_.__value_.__r.__words[0] + 4);
                          if ((_DWORD)v1383)
                          {
                            v1384 = *(unsigned int *)(v2170.__r_.__value_.__r.__words[0] + 12);
                            if ((_DWORD)v1384)
                            {
                              v1385 = 0;
                              v1386 = 0;
                              v1387 = v1382 >> 1;
                              v1388 = *(_QWORD *)(v2170.__r_.__value_.__r.__words[0] + 16);
                              if (v1382 >> 1 <= 1)
                                v1387 = 1;
                              v1389 = v1383 * v1384;
                              v1390 = v1388 + 4 * v1384;
                              v1391 = v1383 * v1384 * (v1382 - 1);
                              v1392 = v1388 + 16;
                              v1393 = v1391;
                              while (v1384 < 8)
                              {
                                v1394 = 0;
                                v1395 = v1383;
                                do
                                {
                                  v1396 = (int *)(v1388 + 4 * (v1385 + v1394));
                                  v1397 = (int *)(v1388 + 4 * (v1393 + v1394));
                                  v1398 = *v1396;
                                  *v1396 = *v1397;
                                  *v1397 = v1398;
                                  if ((_DWORD)v1384 != 1)
                                  {
                                    v1399 = v1396[1];
                                    v1396[1] = v1397[1];
                                    v1397[1] = v1399;
                                    if ((_DWORD)v1384 != 2)
                                    {
                                      v1400 = v1396[2];
                                      v1396[2] = v1397[2];
                                      v1397[2] = v1400;
                                      if ((_DWORD)v1384 != 3)
                                      {
                                        v1401 = v1396[3];
                                        v1396[3] = v1397[3];
                                        v1397[3] = v1401;
                                        if ((_DWORD)v1384 != 4)
                                        {
                                          v1402 = v1396[4];
                                          v1396[4] = v1397[4];
                                          v1397[4] = v1402;
                                          if ((_DWORD)v1384 != 5)
                                          {
                                            v1403 = v1396[5];
                                            v1396[5] = v1397[5];
                                            v1397[5] = v1403;
                                            if ((_DWORD)v1384 != 6)
                                            {
                                              v1404 = v1396[6];
                                              v1396[6] = v1397[6];
                                              v1397[6] = v1404;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  v1394 += v1384;
                                  --v1395;
                                }
                                while (v1395);
LABEL_2006:
                                ++v1386;
                                v1385 += v1389;
                                v1393 -= v1389;
                                if (v1386 == v1387)
                                  goto LABEL_2075;
                              }
                              v1405 = 0;
                              v1406 = v1393;
                              v1407 = v1385;
                              while (2)
                              {
                                v1408 = 4 * v1406;
                                v1409 = 4 * v1407;
                                v1410 = 4
                                      * (v1391 + v1386 * -((_DWORD)v1383 * (_DWORD)v1384) + (_DWORD)v1405
                                                                                          * (_DWORD)v1384);
                                v1411 = v1390 + v1410;
                                v1412 = v1388 + v1410;
                                v1413 = 4 * (v1386 * v1389 + v1405 * v1384);
                                if (v1388 + v1413 < v1411 && v1412 < v1390 + v1413)
                                {
                                  v1421 = 0;
                                  goto LABEL_2027;
                                }
                                v1415 = (__int128 *)(v1392 + v1409);
                                v1416 = (__int128 *)(v1392 + v1408);
                                v1417 = v1384 & 0xFFFFFFF8;
                                do
                                {
                                  v1418 = *(v1415 - 1);
                                  v1419 = *v1415;
                                  v1420 = *v1416;
                                  *(v1415 - 1) = *(v1416 - 1);
                                  *v1415 = v1420;
                                  *(v1416 - 1) = v1418;
                                  *v1416 = v1419;
                                  v1415 += 2;
                                  v1416 += 2;
                                  v1417 -= 8;
                                }
                                while (v1417);
                                v1421 = v1384 & 0xFFFFFFF8;
                                if (v1421 != v1384)
                                {
LABEL_2027:
                                  v1422 = v1384 - v1421;
                                  v1423 = 4 * v1421;
                                  v1424 = (int *)(v1388 + v1423 + v1408);
                                  v1425 = (int *)(v1388 + v1423 + v1409);
                                  do
                                  {
                                    v1426 = *v1425;
                                    *v1425++ = *v1424;
                                    *v1424++ = v1426;
                                    --v1422;
                                  }
                                  while (v1422);
                                }
                                ++v1405;
                                v1407 += v1384;
                                v1406 += v1384;
                                if (v1405 == v1383)
                                  goto LABEL_2006;
                                continue;
                              }
                            }
                          }
                        }
LABEL_2075:
                        if (*(_BYTE *)(v206 + 144))
                        {
                          if (a12)
                          {
                            __dst[23] = 5;
                            strcpy(__dst, "uchar");
                            __dst[55] = 4;
                            strcpy(&__dst[32], ".jpg");
                            v1473 = *(float *)(v206 + 176) * 100.0;
                            if (v1473 < 1.0)
                              v1473 = 1.0;
                            if (v1473 > 100.0)
                              v1473 = 100.0;
                            *(_WORD *)&__dst[24] = (int)v1473;
                            std::operator+<char>();
                            if ((__dst[55] & 0x80000000) != 0)
                              operator delete(*(void **)&__dst[32]);
                            *(_OWORD *)&__dst[32] = v2271;
                            *(_QWORD *)&__dst[48] = v2272;
                            v1474 = &v2120[6 * v2134];
                            v1477 = (uint64_t *)v1474[4];
                            v1476 = (uint64_t **)(v1474 + 4);
                            v1475 = v1477;
                            if (v1477)
                            {
                              while (1)
                              {
                                while (1)
                                {
                                  v1479 = (uint64_t **)v1475;
                                  v1480 = *((_DWORD *)v1475 + 7);
                                  if (v1480 < 8)
                                    break;
                                  v1475 = *v1479;
                                  v1478 = v1479;
                                  if (!*v1479)
                                    goto LABEL_2090;
                                }
                                if (v1480 == 7)
                                  break;
                                v1475 = v1479[1];
                                if (!v1475)
                                {
                                  v1478 = v1479 + 1;
                                  goto LABEL_2090;
                                }
                              }
                              v1481 = v1479;
                            }
                            else
                            {
                              v1478 = v1476;
                              v1479 = v1476;
LABEL_2090:
                              v1481 = operator new(0x28uLL);
                              v1481[7] = 7;
                              *((_WORD *)v1481 + 16) = 0;
                              *(_QWORD *)v1481 = 0;
                              *((_QWORD *)v1481 + 1) = 0;
                              *((_QWORD *)v1481 + 2) = v1479;
                              *v1478 = (uint64_t *)v1481;
                              v1483 = (uint64_t **)*(v1476 - 1);
                              v1482 = v1476 - 1;
                              v1484 = *v1483;
                              v1485 = (uint64_t *)v1481;
                              if (*v1483)
                              {
                                *v1482 = v1484;
                                v1485 = *v1478;
                              }
                              sub_2394213B8(v1482[1], v1485);
                              v1482[2] = (uint64_t *)((char *)v1482[2] + 1);
                            }
                            v1972 = *((unsigned __int16 *)v1481 + 16);
                            v1973 = v2164[3];
                            v1974 = std::__fs::filesystem::path::__stem(a13);
                            if (v1974.__size_ > 0x7FFFFFFFFFFFFFF7)
                              sub_23941A5AC();
                            if (v1974.__size_ >= 0x17)
                            {
                              v1976 = (v1974.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                              if ((v1974.__size_ | 7) != 0x17)
                                v1976 = v1974.__size_ | 7;
                              v1977 = v1976 + 1;
                              p_src = (__int128 *)operator new(v1976 + 1);
                              *(_QWORD *)&v2225 = v1977 | 0x8000000000000000;
                              *(_QWORD *)&__src = p_src;
                              *((_QWORD *)&__src + 1) = v1974.__size_;
                            }
                            else
                            {
                              BYTE7(v2225) = v1974.__size_;
                              p_src = &__src;
                              if (!v1974.__size_)
                              {
LABEL_2619:
                                *((_BYTE *)p_src + v1974.__size_) = 0;
                                v1978 = *((_QWORD *)&__src + 1);
                                v1979 = (void *)__src;
                                LODWORD(v2191.__r_.__value_.__l.__data_) = v2225;
                                *(_DWORD *)((char *)v2191.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v2225 + 3);
                                if (SBYTE7(v2225) < 0)
                                {
                                  sub_23941A7F8(&v2271, (void *)__src, *((unint64_t *)&__src + 1));
                                  operator delete(v1979);
                                }
                                else
                                {
                                  v2271 = __src;
                                  LODWORD(v2272) = v2191.__r_.__value_.__l.__data_;
                                  *(_DWORD *)((char *)&v2272 + 3) = *(_DWORD *)((char *)v2191.__r_.__value_.__r.__words
                                                                              + 3);
                                  HIBYTE(v2272) = BYTE7(v2225);
                                }
                                v1980 = (std::string *)&v1973[6 * v1972];
                                __src = 0uLL;
                                *(_QWORD *)&v2225 = 0;
                                v1981 = LODWORD(v1980->__r_.__value_.__l.__data_) - 1;
                                if (v1981 < 0xD)
                                  MEMORY[0x23B83DBFC](&__src, off_250AF0168[v1981], v1978);
                                v1982 = SHIBYTE(v2272);
                                if (v2272 >= 0)
                                  v1983 = HIBYTE(v2272);
                                else
                                  v1983 = *((_QWORD *)&v2271 + 1);
                                v1984 = v1983 + 1;
                                if (v1983 + 1 > 0x7FFFFFFFFFFFFFF7)
                                  sub_23941A5AC();
                                if (v1984 >= 0x17)
                                {
                                  v1986 = (v1984 & 0xFFFFFFFFFFFFFFF8) + 8;
                                  if ((v1984 | 7) != 0x17)
                                    v1986 = v1984 | 7;
                                  v1987 = v1986 + 1;
                                  v1985 = (char *)operator new(v1986 + 1);
                                  v2183.__r_.__value_.__r.__words[2] = v1987 | 0x8000000000000000;
                                  v2183.__r_.__value_.__r.__words[0] = (std::string::size_type)v1985;
                                  v2183.__r_.__value_.__l.__size_ = v1983 + 1;
                                }
                                else
                                {
                                  memset(&v2183, 0, sizeof(v2183));
                                  v1985 = (char *)&v2183;
                                  *((_BYTE *)&v2183.__r_.__value_.__s + 23) = v1983 + 1;
                                  if (!v1983)
                                    goto LABEL_2638;
                                }
                                if (v1982 >= 0)
                                  v1988 = &v2271;
                                else
                                  v1988 = (__int128 *)v2271;
                                memmove(v1985, v1988, v1983);
LABEL_2638:
                                *(_WORD *)&v1985[v1983] = 95;
                                if ((SBYTE7(v2225) & 0x80u) == 0)
                                  v1989 = (const std::string::value_type *)&__src;
                                else
                                  v1989 = (const std::string::value_type *)__src;
                                if ((SBYTE7(v2225) & 0x80u) == 0)
                                  v1990 = BYTE7(v2225);
                                else
                                  v1990 = *((_QWORD *)&__src + 1);
                                v1991 = std::string::append(&v2183, v1989, v1990);
                                v1992 = *(_OWORD *)&v1991->__r_.__value_.__l.__data_;
                                v2184.__r_.__value_.__r.__words[2] = v1991->__r_.__value_.__r.__words[2];
                                *(_OWORD *)&v2184.__r_.__value_.__l.__data_ = v1992;
                                v1991->__r_.__value_.__l.__size_ = 0;
                                v1991->__r_.__value_.__r.__words[2] = 0;
                                v1991->__r_.__value_.__r.__words[0] = 0;
                                std::to_string(&v2182, v1289);
                                if ((v2182.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                                  v1993 = &v2182;
                                else
                                  v1993 = (std::string *)v2182.__r_.__value_.__r.__words[0];
                                if ((v2182.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                                  v1994 = HIBYTE(v2182.__r_.__value_.__r.__words[2]);
                                else
                                  v1994 = v2182.__r_.__value_.__l.__size_;
                                v1995 = std::string::append(&v2184, (const std::string::value_type *)v1993, v1994);
                                v1996 = *(_OWORD *)&v1995->__r_.__value_.__l.__data_;
                                v2190.__r_.__value_.__r.__words[2] = v1995->__r_.__value_.__r.__words[2];
                                *(_OWORD *)&v2190.__r_.__value_.__l.__data_ = v1996;
                                v1995->__r_.__value_.__l.__size_ = 0;
                                v1995->__r_.__value_.__r.__words[2] = 0;
                                v1995->__r_.__value_.__r.__words[0] = 0;
                                if (__dst[55] >= 0)
                                  v1997 = &__dst[32];
                                else
                                  v1997 = *(const std::string::value_type **)&__dst[32];
                                if (__dst[55] >= 0)
                                  v1998 = __dst[55];
                                else
                                  v1998 = *(_QWORD *)&__dst[40];
                                v1999 = std::string::append(&v2190, v1997, v1998);
                                v2000 = *(_OWORD *)&v1999->__r_.__value_.__l.__data_;
                                v2191.__r_.__value_.__r.__words[2] = v1999->__r_.__value_.__r.__words[2];
                                *(_OWORD *)&v2191.__r_.__value_.__l.__data_ = v2000;
                                v1999->__r_.__value_.__l.__size_ = 0;
                                v1999->__r_.__value_.__r.__words[2] = 0;
                                v1999->__r_.__value_.__r.__words[0] = 0;
                                if ((SHIBYTE(v2190.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                {
                                  if ((SHIBYTE(v2182.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                    goto LABEL_2658;
LABEL_2678:
                                  operator delete(v2182.__r_.__value_.__l.__data_);
                                  if (SHIBYTE(v2184.__r_.__value_.__r.__words[2]) < 0)
                                    goto LABEL_2679;
LABEL_2659:
                                  if ((SHIBYTE(v2183.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                    goto LABEL_2660;
LABEL_2680:
                                  operator delete(v2183.__r_.__value_.__l.__data_);
                                  goto LABEL_2660;
                                }
                                operator delete(v2190.__r_.__value_.__l.__data_);
                                if (SHIBYTE(v2182.__r_.__value_.__r.__words[2]) < 0)
                                  goto LABEL_2678;
LABEL_2658:
                                if ((SHIBYTE(v2184.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                  goto LABEL_2659;
LABEL_2679:
                                operator delete(v2184.__r_.__value_.__l.__data_);
                                if (SHIBYTE(v2183.__r_.__value_.__r.__words[2]) < 0)
                                  goto LABEL_2680;
LABEL_2660:
                                v2001 = std::__fs::filesystem::path::__parent_path(a13);
                                if (v2001.__size_ > 0x7FFFFFFFFFFFFFF7)
                                  sub_23941A5AC();
                                if (v2001.__size_ >= 0x17)
                                {
                                  v2003 = (v2001.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                                  if ((v2001.__size_ | 7) != 0x17)
                                    v2003 = v2001.__size_ | 7;
                                  v2004 = v2003 + 1;
                                  v2002 = operator new(v2003 + 1);
                                  *(_QWORD *)&task_info_outCnt[16] = v2004 | 0x8000000000000000;
                                  *(_QWORD *)task_info_outCnt = v2002;
                                  *(_QWORD *)&task_info_outCnt[8] = v2001.__size_;
                                }
                                else
                                {
                                  task_info_outCnt[23] = v2001.__size_;
                                  v2002 = task_info_outCnt;
                                  if (!v2001.__size_)
                                  {
LABEL_2668:
                                    v2002[v2001.__size_] = 0;
                                    v2184 = *(std::string *)task_info_outCnt;
                                    memset(task_info_outCnt, 0, 24);
                                    v2005 = HIBYTE(v2191.__r_.__value_.__r.__words[2]);
                                    if ((v2191.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                                      v2006 = &v2191;
                                    else
                                      v2006 = (std::string *)v2191.__r_.__value_.__r.__words[0];
                                    if ((v2191.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                                      v2005 = v2191.__r_.__value_.__l.__size_;
                                    sub_23948900C((std::string *)task_info_outCnt, v2006, (std::string *)((char *)v2006 + v2005));
                                    sub_239498A04((std::__fs::filesystem::path *)task_info_outCnt, (uint64_t)&v2184, (std::__fs::filesystem::path *)&v2190);
                                    if ((task_info_outCnt[23] & 0x80000000) != 0)
                                    {
                                      operator delete(*(void **)task_info_outCnt);
                                      if (SHIBYTE(v2184.__r_.__value_.__r.__words[2]) < 0)
                                        goto LABEL_2682;
LABEL_2675:
                                      v2007 = v2170.__r_.__value_.__r.__words[0];
                                      v2008 = a11[15];
                                      if (!v2008)
                                        goto LABEL_2685;
LABEL_2683:
                                      if (v2008 != v2097)
                                      {
                                        v2008 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2008 + 16))(v2008);
                                        goto LABEL_2685;
                                      }
                                      v2278 = v2277;
                                      (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v2097 + 24))(v2097, v2277);
                                    }
                                    else
                                    {
                                      if ((SHIBYTE(v2184.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                        goto LABEL_2675;
LABEL_2682:
                                      operator delete(v2184.__r_.__value_.__l.__data_);
                                      v2007 = v2170.__r_.__value_.__r.__words[0];
                                      v2008 = a11[15];
                                      if (v2008)
                                        goto LABEL_2683;
LABEL_2685:
                                      v2278 = (_BYTE *)v2008;
                                    }
                                    v2126 = sub_239975928((__int128 *)&v2190, v2007, (uint64_t)__dst, (uint64_t)v2277, 1);
                                    v2009 = v2278;
                                    if (v2278 == v2277)
                                    {
                                      v2009 = v2277;
                                      v2010 = 4;
LABEL_2691:
                                      (*(void (**)(void))(*v2009 + 8 * v2010))();
                                    }
                                    else if (v2278)
                                    {
                                      v2010 = 5;
                                      goto LABEL_2691;
                                    }
                                    if (a10)
                                      sub_239927244(a9, (uint64_t)&v2190);
                                    if (SHIBYTE(v2190.__r_.__value_.__r.__words[2]) < 0)
                                      sub_23941A7F8(&v2179, v2190.__r_.__value_.__l.__data_, v2190.__r_.__value_.__l.__size_);
                                    else
                                      v2179 = v2190;
                                    sub_2399272D8(v1980, &v2179);
                                    if (SHIBYTE(v2179.__r_.__value_.__r.__words[2]) < 0)
                                    {
                                      operator delete(v2179.__r_.__value_.__l.__data_);
                                      if (SHIBYTE(v2190.__r_.__value_.__r.__words[2]) < 0)
                                        goto LABEL_2706;
LABEL_2699:
                                      if ((SHIBYTE(v2191.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                        goto LABEL_2700;
LABEL_2707:
                                      operator delete(v2191.__r_.__value_.__l.__data_);
                                      if (SBYTE7(v2225) < 0)
                                        goto LABEL_2708;
LABEL_2701:
                                      if ((SHIBYTE(v2272) & 0x80000000) == 0)
                                        goto LABEL_2702;
LABEL_2709:
                                      operator delete((void *)v2271);
                                      if ((__dst[55] & 0x80000000) != 0)
                                        goto LABEL_2710;
LABEL_2703:
                                      if ((__dst[23] & 0x80000000) != 0)
LABEL_2711:
                                        operator delete(*(void **)__dst);
                                    }
                                    else
                                    {
                                      if ((SHIBYTE(v2190.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                        goto LABEL_2699;
LABEL_2706:
                                      operator delete(v2190.__r_.__value_.__l.__data_);
                                      if (SHIBYTE(v2191.__r_.__value_.__r.__words[2]) < 0)
                                        goto LABEL_2707;
LABEL_2700:
                                      if ((SBYTE7(v2225) & 0x80000000) == 0)
                                        goto LABEL_2701;
LABEL_2708:
                                      operator delete((void *)__src);
                                      if (SHIBYTE(v2272) < 0)
                                        goto LABEL_2709;
LABEL_2702:
                                      if ((__dst[55] & 0x80000000) == 0)
                                        goto LABEL_2703;
LABEL_2710:
                                      operator delete(*(void **)&__dst[32]);
                                      if ((__dst[23] & 0x80000000) != 0)
                                        goto LABEL_2711;
                                    }
LABEL_2031:
                                    kdebug_trace();
                                    v1427 = (std::__shared_weak_count *)v2170.__r_.__value_.__l.__size_;
                                    if (v2170.__r_.__value_.__l.__size_)
                                    {
                                      v1428 = (unint64_t *)(v2170.__r_.__value_.__l.__size_ + 8);
                                      do
                                        v1429 = __ldaxr(v1428);
                                      while (__stlxr(v1429 - 1, v1428));
                                      if (!v1429)
                                      {
                                        ((void (*)(std::__shared_weak_count *))v1427->__on_zero_shared)(v1427);
                                        std::__shared_weak_count::__release_weak(v1427);
                                      }
                                    }
                                    sub_23992A6A0((uint64_t)task_info_out);
LABEL_2037:
                                    if (v1374 && v2126)
                                      sub_2399FC9C0();
                                    if (!v2126)
                                      goto LABEL_2193;
                                    *((_BYTE *)&v2178.__r_.__value_.__s + 23) = 0;
                                    v2178.__r_.__value_.__s.__data_[0] = 0;
                                    sub_23992A5B4((uint64_t)task_info_out, &v2178, 4 * v2122, 20 * v2122);
                                    if (SHIBYTE(v2178.__r_.__value_.__r.__words[2]) < 0)
                                      operator delete(v2178.__r_.__value_.__l.__data_);
                                    if (!*(_BYTE *)(v206 + 344))
                                      goto LABEL_2190;
                                    if (v2309
                                      && ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) != 0)
                                    {
LABEL_2477:
                                      sub_23992A6A0((uint64_t)task_info_out);
                                      v1850 = 0;
                                      v2126 = 1;
                                      v1851 = v2187;
                                      if (!v2187)
                                        goto LABEL_2581;
                                      goto LABEL_2577;
                                    }
                                    kdebug_trace();
                                    *(_OWORD *)&v2191.__r_.__value_.__l.__data_ = 0uLL;
                                    v1430 = operator new[]();
                                    v1431 = operator new(0x30uLL);
                                    v1431[1] = 0;
                                    v1431[2] = 0;
                                    *v1431 = &off_250ADF208;
                                    *((_DWORD *)v1431 + 6) = 0;
                                    *((_DWORD *)v1431 + 7) = v2145;
                                    *((_DWORD *)v1431 + 8) = v2145;
                                    *((_DWORD *)v1431 + 9) = 3;
                                    v1431[5] = v1430;
                                    v1432 = (std::__shared_weak_count *)v2191.__r_.__value_.__l.__size_;
                                    v2191.__r_.__value_.__r.__words[0] = (std::string::size_type)(v1431 + 3);
                                    v2191.__r_.__value_.__l.__size_ = (std::string::size_type)v1431;
                                    if (v1432)
                                    {
                                      v1433 = (unint64_t *)&v1432->__shared_owners_;
                                      do
                                        v1434 = __ldaxr(v1433);
                                      while (__stlxr(v1434 - 1, v1433));
                                      if (!v1434)
                                      {
                                        ((void (*)(std::__shared_weak_count *))v1432->__on_zero_shared)(v1432);
                                        std::__shared_weak_count::__release_weak(v1432);
                                      }
                                    }
                                    v1435 = v2191.__r_.__value_.__r.__words[0];
                                    *(_DWORD *)v2191.__r_.__value_.__l.__data_ = 0;
                                    v1436 = (char *)v2215;
                                    v1437 = operator new(0xCuLL);
                                    *(_QWORD *)&__dst[16] = v1437 + 3;
                                    *(_QWORD *)v1437 = -1;
                                    v1437[2] = -1;
                                    *(_QWORD *)__dst = v1437;
                                    *(_QWORD *)&__dst[8] = v1437 + 3;
                                    if (v2145)
                                    {
                                      v1438 = 0;
                                      v1439 = &v1436[24 * v1289 + 16];
                                      v1440 = v2161;
                                      do
                                      {
                                        while (!*((_BYTE *)v2157[3 * v1289 + 2] + v1438))
                                        {
                                          v1472 = *(_QWORD *)(v1435 + 16) + 12 * v1438;
                                          *(_QWORD *)v1472 = 0;
                                          *(_DWORD *)(v1472 + 8) = 0;
                                          if (++v1438 == v1440)
                                            goto LABEL_2111;
                                        }
                                        v1443 = *(_QWORD *)v1439;
                                        LODWORD(v2190.__r_.__value_.__l.__data_) = *(_DWORD *)(*(_QWORD *)v1439
                                                                                             + 16 * v1438
                                                                                             + 4);
                                        sub_23996362C(v2137, (unsigned int *)&v2190, (uint64_t)__dst);
                                        v1444 = **(_DWORD **)__dst;
                                        v1445 = (uint64_t *)(*(_QWORD *)(v2137 + 8)
                                                          + 16 * *(unsigned int *)(v2137 + 176));
                                        v1447 = *v1445;
                                        v1446 = (std::__shared_weak_count *)v1445[1];
                                        if (v1446)
                                        {
                                          v1448 = (unint64_t *)&v1446->__shared_owners_;
                                          do
                                            v1449 = __ldxr(v1448);
                                          while (__stxr(v1449 + 1, v1448));
                                          do
                                            v1450 = __ldaxr(v1448);
                                          while (__stlxr(v1450 - 1, v1448));
                                          if (!v1450)
                                          {
                                            ((void (*)(std::__shared_weak_count *))v1446->__on_zero_shared)(v1446);
                                            std::__shared_weak_count::__release_weak(v1446);
                                          }
                                        }
                                        v1451 = *(float32x4_t *)(*(_QWORD *)(v1447 + 40) + 16 * v1444);
                                        v1452 = v1443 + 16 * v1438;
                                        v1454 = *(float *)(v1452 + 8);
                                        v1453 = (float *)(v1452 + 8);
                                        v1455 = v1454;
                                        v1456 = *(unsigned int *)(*(_QWORD *)__dst + 4);
                                        v1457 = (uint64_t *)(*(_QWORD *)(v2137 + 8)
                                                          + 16 * *(unsigned int *)(v2137 + 176));
                                        v1459 = *v1457;
                                        v1458 = (std::__shared_weak_count *)v1457[1];
                                        if (v1458)
                                        {
                                          v1460 = (unint64_t *)&v1458->__shared_owners_;
                                          do
                                            v1461 = __ldxr(v1460);
                                          while (__stxr(v1461 + 1, v1460));
                                          do
                                            v1462 = __ldaxr(v1460);
                                          while (__stlxr(v1462 - 1, v1460));
                                          if (!v1462)
                                          {
                                            *(float32x4_t *)__vale = v1451;
                                            v2142 = v1455;
                                            ((void (*)(std::__shared_weak_count *))v1458->__on_zero_shared)(v1458);
                                            std::__shared_weak_count::__release_weak(v1458);
                                            v1455 = v2142;
                                            v1451 = *(float32x4_t *)__vale;
                                          }
                                        }
                                        v1463 = *(float32x4_t *)(*(_QWORD *)(v1459 + 40) + 16 * v1456);
                                        v1464 = v1453[1];
                                        v1465 = *(unsigned int *)(*(_QWORD *)__dst + 8);
                                        v1466 = (uint64_t *)(*(_QWORD *)(v2137 + 8)
                                                          + 16 * *(unsigned int *)(v2137 + 176));
                                        v1468 = *v1466;
                                        v1467 = (std::__shared_weak_count *)v1466[1];
                                        if (v1467)
                                        {
                                          v1469 = (unint64_t *)&v1467->__shared_owners_;
                                          do
                                            v1470 = __ldxr(v1469);
                                          while (__stxr(v1470 + 1, v1469));
                                          do
                                            v1471 = __ldaxr(v1469);
                                          while (__stlxr(v1471 - 1, v1469));
                                          if (!v1471)
                                          {
                                            *(float32x4_t *)__valf = v1451;
                                            v2143 = v1455;
                                            v2112 = v1464;
                                            v2114 = v1463;
                                            ((void (*)(std::__shared_weak_count *))v1467->__on_zero_shared)(v1467);
                                            std::__shared_weak_count::__release_weak(v1467);
                                            v1464 = v2112;
                                            v1463 = v2114;
                                            v1455 = v2143;
                                            v1451 = *(float32x4_t *)__valf;
                                          }
                                        }
                                        v1441 = vaddq_f32(vaddq_f32(vmulq_n_f32(v1451, v1455), vmulq_n_f32(v1463, v1464)), vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v1468 + 40) + 16 * v1465), (float)(1.0 - *v1453) - v1453[1]));
                                        v1435 = v2191.__r_.__value_.__r.__words[0];
                                        v1442 = *(_QWORD *)(v2191.__r_.__value_.__r.__words[0] + 16) + 12 * v1438;
                                        *(_QWORD *)v1442 = v1441.i64[0];
                                        *(_DWORD *)(v1442 + 8) = v1441.i32[2];
                                        v1440 = v2161;
                                        ++v1438;
                                      }
                                      while (v1438 != v2161);
                                    }
LABEL_2111:
                                    sub_239927458(v1435, v2157[3 * v1289 + 2], 5);
                                    v1499 = v2191.__r_.__value_.__r.__words[0];
                                    v1500 = *(_DWORD *)(v2191.__r_.__value_.__r.__words[0] + 8);
                                    if (v1500 >= 2)
                                    {
                                      v1501 = *(unsigned int *)(v2191.__r_.__value_.__r.__words[0] + 4);
                                      if ((_DWORD)v1501)
                                      {
                                        v1502 = *(unsigned int *)(v2191.__r_.__value_.__r.__words[0] + 12);
                                        if ((_DWORD)v1502)
                                        {
                                          v1503 = 0;
                                          v1504 = 0;
                                          v1505 = v1500 >> 1;
                                          v1506 = *(_QWORD *)(v2191.__r_.__value_.__r.__words[0] + 16);
                                          if (v1500 >> 1 <= 1)
                                            v1505 = 1;
                                          v1507 = v1501 * v1502;
                                          v1508 = v1506 + 4 * v1502;
                                          v1509 = v1501 * v1502 * (v1500 - 1);
                                          v1510 = v1506 + 16;
                                          v1511 = v1509;
                                          while (v1502 < 8)
                                          {
                                            v1512 = 0;
                                            v1513 = v1501;
                                            do
                                            {
                                              v1514 = (int *)(v1506 + 4 * (v1503 + v1512));
                                              v1515 = (int *)(v1506 + 4 * (v1511 + v1512));
                                              v1516 = *v1514;
                                              *v1514 = *v1515;
                                              *v1515 = v1516;
                                              if ((_DWORD)v1502 != 1)
                                              {
                                                v1517 = v1514[1];
                                                v1514[1] = v1515[1];
                                                v1515[1] = v1517;
                                                if ((_DWORD)v1502 != 2)
                                                {
                                                  v1518 = v1514[2];
                                                  v1514[2] = v1515[2];
                                                  v1515[2] = v1518;
                                                  if ((_DWORD)v1502 != 3)
                                                  {
                                                    v1519 = v1514[3];
                                                    v1514[3] = v1515[3];
                                                    v1515[3] = v1519;
                                                    if ((_DWORD)v1502 != 4)
                                                    {
                                                      v1520 = v1514[4];
                                                      v1514[4] = v1515[4];
                                                      v1515[4] = v1520;
                                                      if ((_DWORD)v1502 != 5)
                                                      {
                                                        v1521 = v1514[5];
                                                        v1514[5] = v1515[5];
                                                        v1515[5] = v1521;
                                                        if ((_DWORD)v1502 != 6)
                                                        {
                                                          v1522 = v1514[6];
                                                          v1514[6] = v1515[6];
                                                          v1515[6] = v1522;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              v1512 += v1502;
                                              --v1513;
                                            }
                                            while (v1513);
LABEL_2117:
                                            ++v1504;
                                            v1503 += v1507;
                                            v1511 -= v1507;
                                            if (v1504 == v1505)
                                              goto LABEL_2141;
                                          }
                                          v1523 = 0;
                                          v1524 = v1511;
                                          v1525 = v1503;
                                          while (2)
                                          {
                                            v1526 = 4 * v1524;
                                            v1527 = 4 * v1525;
                                            v1528 = 4
                                                  * (v1509
                                                   + v1504 * -((_DWORD)v1501 * (_DWORD)v1502)
                                                   + (_DWORD)v1523 * (_DWORD)v1502);
                                            v1529 = v1508 + v1528;
                                            v1530 = v1506 + v1528;
                                            v1531 = 4 * (v1504 * v1507 + v1523 * v1502);
                                            if (v1506 + v1531 < v1529 && v1530 < v1508 + v1531)
                                            {
                                              v1539 = 0;
                                              goto LABEL_2138;
                                            }
                                            v1533 = (__int128 *)(v1510 + v1527);
                                            v1534 = (__int128 *)(v1510 + v1526);
                                            v1535 = v1502 & 0xFFFFFFF8;
                                            do
                                            {
                                              v1536 = *(v1533 - 1);
                                              v1537 = *v1533;
                                              v1538 = *v1534;
                                              *(v1533 - 1) = *(v1534 - 1);
                                              *v1533 = v1538;
                                              *(v1534 - 1) = v1536;
                                              *v1534 = v1537;
                                              v1533 += 2;
                                              v1534 += 2;
                                              v1535 -= 8;
                                            }
                                            while (v1535);
                                            v1539 = v1502 & 0xFFFFFFF8;
                                            if (v1539 != v1502)
                                            {
LABEL_2138:
                                              v1540 = v1502 - v1539;
                                              v1541 = 4 * v1539;
                                              v1542 = (int *)(v1506 + v1541 + v1526);
                                              v1543 = (int *)(v1506 + v1541 + v1527);
                                              do
                                              {
                                                v1544 = *v1543;
                                                *v1543++ = *v1542;
                                                *v1542++ = v1544;
                                                --v1540;
                                              }
                                              while (v1540);
                                            }
                                            ++v1523;
                                            v1525 += v1502;
                                            v1524 += v1502;
                                            if (v1523 == v1501)
                                              goto LABEL_2117;
                                            continue;
                                          }
                                        }
                                      }
                                    }
LABEL_2141:
                                    if (*(_BYTE *)(v206 + 344))
                                    {
                                      v1545 = &v2120[6 * v2134];
                                      v1548 = (uint64_t *)v1545[4];
                                      v1547 = (uint64_t **)(v1545 + 4);
                                      v1546 = v1548;
                                      if (v1548)
                                      {
                                        while (1)
                                        {
                                          while (1)
                                          {
                                            v1550 = (uint64_t **)v1546;
                                            v1551 = *((_DWORD *)v1546 + 7);
                                            if (v1551 < 12)
                                              break;
                                            v1546 = *v1550;
                                            v1549 = v1550;
                                            if (!*v1550)
                                              goto LABEL_2149;
                                          }
                                          if (v1551 == 11)
                                            break;
                                          v1546 = v1550[1];
                                          if (!v1546)
                                          {
                                            v1549 = v1550 + 1;
                                            goto LABEL_2149;
                                          }
                                        }
                                        v1552 = v1550;
                                      }
                                      else
                                      {
                                        v1549 = v1547;
                                        v1550 = v1547;
LABEL_2149:
                                        v1552 = operator new(0x28uLL);
                                        v1552[7] = 11;
                                        *((_WORD *)v1552 + 16) = 0;
                                        *(_QWORD *)v1552 = 0;
                                        *((_QWORD *)v1552 + 1) = 0;
                                        *((_QWORD *)v1552 + 2) = v1550;
                                        *v1549 = (uint64_t *)v1552;
                                        v1554 = (uint64_t **)*(v1547 - 1);
                                        v1553 = v1547 - 1;
                                        v1555 = *v1554;
                                        v1556 = (uint64_t *)v1552;
                                        if (*v1554)
                                        {
                                          *v1553 = v1555;
                                          v1556 = *v1549;
                                        }
                                        sub_2394213B8(v1553[1], v1556);
                                        v1553[2] = (uint64_t *)((char *)v1553[2] + 1);
                                        v1499 = v2191.__r_.__value_.__r.__words[0];
                                      }
                                      v1569 = *((unsigned __int16 *)v1552 + 16);
                                      v1570 = v2164[3];
                                      v1571 = (std::__shared_weak_count *)v2191.__r_.__value_.__l.__size_;
                                      if (v2191.__r_.__value_.__l.__size_)
                                      {
                                        v1572 = (unint64_t *)(v2191.__r_.__value_.__l.__size_ + 8);
                                        do
                                          v1573 = __ldxr(v1572);
                                        while (__stxr(v1573 + 1, v1572));
                                        do
                                          v1574 = __ldxr(v1572);
                                        while (__stxr(v1574 + 1, v1572));
                                      }
                                      v1575 = &v1570[6 * v1569];
                                      v1575[1] = v1499;
                                      v1576 = (std::string::size_type *)(v1575 + 1);
                                      v1577 = (std::__shared_weak_count *)v1576[1];
                                      v1576[1] = (std::string::size_type)v1571;
                                      if (v1577)
                                      {
                                        v1578 = (unint64_t *)&v1577->__shared_owners_;
                                        do
                                          v1579 = __ldaxr(v1578);
                                        while (__stlxr(v1579 - 1, v1578));
                                        if (!v1579)
                                        {
                                          ((void (*)(std::__shared_weak_count *))v1577->__on_zero_shared)(v1577);
                                          std::__shared_weak_count::__release_weak(v1577);
                                        }
                                        v1499 = *v1576;
                                      }
                                      v1580 = v1499 && *(_QWORD *)(v1499 + 16);
                                      BYTE4(v1570[6 * v1569]) = v1580;
                                      if (v1571)
                                      {
                                        v1581 = (unint64_t *)&v1571->__shared_owners_;
                                        do
                                          v1582 = __ldaxr(v1581);
                                        while (__stlxr(v1582 - 1, v1581));
                                        if (!v1582)
                                        {
                                          ((void (*)(std::__shared_weak_count *))v1571->__on_zero_shared)(v1571);
                                          std::__shared_weak_count::__release_weak(v1571);
                                        }
                                      }
                                    }
                                    if (*(_QWORD *)__dst)
                                    {
                                      *(_QWORD *)&__dst[8] = *(_QWORD *)__dst;
                                      operator delete(*(void **)__dst);
                                    }
                                    kdebug_trace();
                                    v1583 = (std::__shared_weak_count *)v2191.__r_.__value_.__l.__size_;
                                    if (v2191.__r_.__value_.__l.__size_)
                                    {
                                      v1584 = (unint64_t *)(v2191.__r_.__value_.__l.__size_ + 8);
                                      do
                                        v1585 = __ldaxr(v1584);
                                      while (__stlxr(v1585 - 1, v1584));
                                      if (!v1585)
                                      {
                                        ((void (*)(std::__shared_weak_count *))v1583->__on_zero_shared)(v1583);
                                        std::__shared_weak_count::__release_weak(v1583);
                                      }
                                    }
LABEL_2190:
                                    v1586 = v2215;
                                    v1587 = *((_QWORD *)v2215 + 3 * v1289 + 2);
                                    if (v1587)
                                    {
                                      MEMORY[0x23B83E2F8](v1587, 0x1000C80451B5BE8);
                                      v1586 = v2215;
                                    }
                                    v1586[3 * v1289 + 2] = 0;
                                    sub_23992A6A0((uint64_t)task_info_out);
LABEL_2193:
                                    sub_2399FC9C0();
                                    if (!v2126)
                                    {
                                      v2126 = 0;
                                      goto LABEL_2470;
                                    }
                                    v1588 = *v2118;
                                    if (*v2118)
                                    {
                                      if (v2213 == v2212)
                                      {
                                        v1589 = 0;
                                      }
                                      else
                                      {
                                        v1589 = 4 * v2122;
                                        if (*((_BYTE *)v2212 + 48 * v1289 + 4))
                                          v1589 = 0;
                                      }
                                      v1590 = v2124 + v1589;
                                    }
                                    else
                                    {
                                      v1590 = 0;
                                    }
                                    *((_BYTE *)&v2177.__r_.__value_.__s + 23) = 0;
                                    v2177.__r_.__value_.__s.__data_[0] = 0;
                                    sub_23992A5B4((uint64_t)task_info_out, &v2177, v1590, v1590);
                                    if (SHIBYTE(v2177.__r_.__value_.__r.__words[2]) < 0)
                                      operator delete(v2177.__r_.__value_.__l.__data_);
                                    v2176 = 0;
                                    v2175 = 0;
                                    v1591 = *v2118;
                                    if (*v2118)
                                    {
                                      v1592 = v2212;
                                      if (*((_BYTE *)v2212 + 48 * v1289 + 4))
                                      {
                                        v1593 = (char *)v2212 + 48 * v1289;
                                        v1595 = (_QWORD *)*((_QWORD *)v1593 + 1);
                                        v1594 = (std::__shared_weak_count *)*((_QWORD *)v1593 + 2);
                                        if (v1594)
                                        {
                                          v1596 = (unint64_t *)&v1594->__shared_owners_;
                                          do
                                            v1597 = __ldxr(v1596);
                                          while (__stxr(v1597 + 1, v1596));
                                          v1598 = v2176;
                                          v2175 = v1595;
                                          v2176 = v1594;
                                          if (v1598)
                                          {
                                            v1599 = (unint64_t *)&v1598->__shared_owners_;
                                            do
                                              v1600 = __ldaxr(v1599);
                                            while (__stlxr(v1600 - 1, v1599));
                                            if (!v1600)
                                            {
                                              ((void (*)(std::__shared_weak_count *))v1598->__on_zero_shared)(v1598);
                                              std::__shared_weak_count::__release_weak(v1598);
                                            }
                                          }
                                        }
                                        else
                                        {
                                          v2175 = v1595;
                                          v2176 = 0;
                                        }
                                        v2126 = 1;
                                      }
                                      else
                                      {
                                        v1601 = (std::__shared_weak_count *)operator new(0x30uLL);
                                        v1601->__shared_owners_ = 0;
                                        v1601->__shared_weak_owners_ = 0;
                                        v1601->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADF208;
                                        v1601[1].__vftable = 0;
                                        v1602 = (uint64_t)&v1601[1];
                                        v1601[1].__shared_owners_ = 0;
                                        v1601[1].__shared_weak_owners_ = 0;
                                        v2175 = &v1601[1].__vftable;
                                        v2176 = v1601;
                                        v1603 = (char *)&v1592[6 * v1289];
                                        v1604 = v1603[47];
                                        v1605 = v1603 + 24;
                                        if (v1604 < 0)
                                        {
                                          sub_23941A7F8(&v2191, *(void **)v1605, v1592[6 * v1289 + 4]);
                                          v1602 = (uint64_t)v2175;
                                        }
                                        else
                                        {
                                          v1606 = *(_OWORD *)v1605;
                                          v2191.__r_.__value_.__r.__words[2] = *((_QWORD *)v1605 + 2);
                                          *(_OWORD *)&v2191.__r_.__value_.__l.__data_ = v1606;
                                        }
                                        *(std::string *)__dst = v2191;
                                        memset(&v2191, 0, sizeof(v2191));
                                        v2126 = sub_239975620((const std::__fs::filesystem::path *)__dst, v1602);
                                        if ((__dst[23] & 0x80000000) != 0)
                                          operator delete(*(void **)__dst);
                                        if (SHIBYTE(v2191.__r_.__value_.__r.__words[2]) < 0)
                                          operator delete(v2191.__r_.__value_.__l.__data_);
                                      }
                                      v1607 = v2175;
                                      v1608 = (*((_DWORD *)v2175 + 2) * *((_DWORD *)v2175 + 1));
                                      v1609 = sub_239916D9C(v1608);
                                      v1610 = v1607[2];
                                      if ((_DWORD)v1608)
                                      {
                                        v1611 = 0;
                                        if (v1608 < 8)
                                          goto LABEL_2231;
                                        if (v1609 - v1610 < 0x20)
                                          goto LABEL_2231;
                                        v1611 = v1608 & 0xFFFFFFF8;
                                        v1612 = (__int128 *)(v1610 + 16);
                                        v1613 = (_OWORD *)(v1609 + 16);
                                        v1614 = v1611;
                                        do
                                        {
                                          v1615 = *v1612;
                                          *(v1613 - 1) = *(v1612 - 1);
                                          *v1613 = v1615;
                                          v1612 += 2;
                                          v1613 += 2;
                                          v1614 -= 8;
                                        }
                                        while (v1614);
                                        if (v1611 != v1608)
                                        {
LABEL_2231:
                                          v1616 = v1608 - v1611;
                                          v1617 = 4 * v1611;
                                          v1618 = (_DWORD *)(v1609 + 4 * v1611);
                                          v1619 = (int *)(v1610 + v1617);
                                          do
                                          {
                                            v1620 = *v1619++;
                                            *v1618++ = v1620;
                                            --v1616;
                                          }
                                          while (v1616);
                                        }
LABEL_2235:
                                        MEMORY[0x23B83E2F8]();
                                      }
                                      else if (v1610)
                                      {
                                        goto LABEL_2235;
                                      }
                                      v1607[2] = v1609;
                                      v1621 = *v2118;
                                      v2174 = 0;
                                      v2173 = 0;
                                      if (v1621)
                                      {
                                        v1622 = v2209;
                                        if (*((_BYTE *)v2209 + 48 * v1289 + 4))
                                        {
                                          v1623 = (char *)v2209 + 48 * v1289;
                                          v1625 = (_QWORD *)*((_QWORD *)v1623 + 1);
                                          v1624 = (std::__shared_weak_count *)*((_QWORD *)v1623 + 2);
                                          if (v1624)
                                          {
                                            v1626 = (unint64_t *)&v1624->__shared_owners_;
                                            do
                                              v1627 = __ldxr(v1626);
                                            while (__stxr(v1627 + 1, v1626));
                                            v1628 = v2174;
                                            v2173 = v1625;
                                            v2174 = v1624;
                                            if (v1628)
                                            {
                                              v1629 = (unint64_t *)&v1628->__shared_owners_;
                                              do
                                                v1630 = __ldaxr(v1629);
                                              while (__stlxr(v1630 - 1, v1629));
                                              if (!v1630)
                                              {
                                                ((void (*)(std::__shared_weak_count *))v1628->__on_zero_shared)(v1628);
                                                std::__shared_weak_count::__release_weak(v1628);
                                              }
                                            }
                                          }
                                          else
                                          {
                                            v2173 = v1625;
                                            v2174 = 0;
                                          }
                                        }
                                        else
                                        {
                                          v1631 = (std::__shared_weak_count *)operator new(0x30uLL);
                                          v1631->__shared_owners_ = 0;
                                          v1631->__shared_weak_owners_ = 0;
                                          v1631->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADF208;
                                          v1631[1].__vftable = 0;
                                          v1632 = (uint64_t)&v1631[1];
                                          v1631[1].__shared_owners_ = 0;
                                          v1631[1].__shared_weak_owners_ = 0;
                                          v2173 = &v1631[1].__vftable;
                                          v2174 = v1631;
                                          if (v2126)
                                          {
                                            v1633 = (char *)&v1622[6 * v1289];
                                            v1634 = (void **)(v1633 + 24);
                                            if (v1633[47] < 0)
                                            {
                                              sub_23941A7F8(&v2191, *v1634, v1622[6 * v1289 + 4]);
                                              v1632 = (uint64_t)v2173;
                                            }
                                            else
                                            {
                                              v1635 = *(_OWORD *)v1634;
                                              v2191.__r_.__value_.__r.__words[2] = *((_QWORD *)v1633 + 5);
                                              *(_OWORD *)&v2191.__r_.__value_.__l.__data_ = v1635;
                                            }
                                            *(std::string *)__dst = v2191;
                                            memset(&v2191, 0, sizeof(v2191));
                                            v2126 = sub_239975620((const std::__fs::filesystem::path *)__dst, v1632);
                                            if ((__dst[23] & 0x80000000) != 0)
                                              operator delete(*(void **)__dst);
                                            if (SHIBYTE(v2191.__r_.__value_.__r.__words[2]) < 0)
                                              operator delete(v2191.__r_.__value_.__l.__data_);
                                          }
                                          else
                                          {
                                            v2126 = 0;
                                          }
                                        }
                                        v1648 = v2173;
                                        v1649 = *((_DWORD *)v2173 + 2) * *((_DWORD *)v2173 + 1);
                                        v1650 = (3 * v1649);
                                        v1651 = sub_239916D9C(v1650);
                                        v1652 = v1648[2];
                                        if (v1649)
                                        {
                                          v1653 = 0;
                                          if (v1650 < 8)
                                            goto LABEL_2272;
                                          if (v1651 - v1652 < 0x20)
                                            goto LABEL_2272;
                                          v1653 = v1650 & 0xFFFFFFF8;
                                          v1654 = (__int128 *)(v1652 + 16);
                                          v1655 = (_OWORD *)(v1651 + 16);
                                          v1656 = v1653;
                                          do
                                          {
                                            v1657 = *v1654;
                                            *(v1655 - 1) = *(v1654 - 1);
                                            *v1655 = v1657;
                                            v1654 += 2;
                                            v1655 += 2;
                                            v1656 -= 8;
                                          }
                                          while (v1656);
                                          if (v1653 != v1650)
                                          {
LABEL_2272:
                                            v1658 = v1650 - v1653;
                                            v1659 = 4 * v1653;
                                            v1660 = (_DWORD *)(v1651 + 4 * v1653);
                                            v1661 = (int *)(v1652 + v1659);
                                            do
                                            {
                                              v1662 = *v1661++;
                                              *v1660++ = v1662;
                                              --v1658;
                                            }
                                            while (v1658);
                                          }
LABEL_2276:
                                          MEMORY[0x23B83E2F8]();
                                        }
                                        else if (v1652)
                                        {
                                          goto LABEL_2276;
                                        }
                                        v1648[2] = v1651;
                                      }
                                    }
                                    else
                                    {
                                      v2174 = 0;
                                      v2173 = 0;
                                      v2126 = 1;
                                    }
                                    if (!v1588)
                                      goto LABEL_2434;
                                    if (!v2309
                                      || ((*(uint64_t (**)(_QWORD *))(*v2309 + 48))(v2309) & 1) == 0)
                                    {
                                      kdebug_trace();
                                      v2172 = 0;
                                      v2171 = 0;
                                      v1663 = sub_239916D9C(v2122);
                                      v1664 = operator new(0x30uLL);
                                      v1664[1] = 0;
                                      v1664[2] = 0;
                                      *v1664 = &off_250ADF208;
                                      *((_DWORD *)v1664 + 6) = 0;
                                      *((_DWORD *)v1664 + 7) = v2145;
                                      *((_DWORD *)v1664 + 8) = v2145;
                                      *((_DWORD *)v1664 + 9) = 1;
                                      v1664[5] = v1663;
                                      v1665 = (std::__shared_weak_count *)v2172;
                                      v2171 = (uint64_t)(v1664 + 3);
                                      v2172 = (uint64_t)v1664;
                                      if (v1665)
                                      {
                                        v1666 = (unint64_t *)&v1665->__shared_owners_;
                                        do
                                          v1667 = __ldaxr(v1666);
                                        while (__stlxr(v1667 - 1, v1666));
                                        if (!v1667)
                                        {
                                          ((void (*)(std::__shared_weak_count *))v1665->__on_zero_shared)(v1665);
                                          std::__shared_weak_count::__release_weak(v1665);
                                        }
                                      }
                                      v1668 = v2171;
                                      *(_DWORD *)v2171 = 1;
                                      if ((v2126 & 1) != 0)
                                      {
                                        v1669 = (uint64_t)v2173;
                                        v1670 = (uint64_t)v2175;
                                        v1671 = (uint64_t)v2307;
                                        if (!v2307)
                                          goto LABEL_2290;
                                        if (v2307 == v2306)
                                        {
                                          v2276 = v2275;
                                          (*(void (**)(_QWORD *, _QWORD *))(v2306[0] + 24))(v2306, v2275);
                                        }
                                        else
                                        {
                                          v1671 = (*(uint64_t (**)(void))(*v2307 + 16))();
LABEL_2290:
                                          v2276 = (_QWORD *)v1671;
                                        }
                                        v1672 = sub_2399D265C(v1669, v1670, v1668, (uint64_t)&v2236, a6, a7, (uint64_t *)(v206 + 480), v2275, v2127 != 0);
                                        v1673 = v2276;
                                        if (v2276 == v2275)
                                        {
                                          v1673 = v2275;
                                          v1674 = 4;
LABEL_2296:
                                          (*(void (**)(void))(*v1673 + 8 * v1674))();
                                          if ((v1672 & 1) != 0)
                                            goto LABEL_2299;
                                        }
                                        else
                                        {
                                          if (v2276)
                                          {
                                            v1674 = 5;
                                            goto LABEL_2296;
                                          }
                                          if (v1672)
                                          {
LABEL_2299:
                                            v1675 = v2171;
                                            v1676 = *(_DWORD *)(v2171 + 8);
                                            if (v1676 >= 2)
                                            {
                                              v1677 = *(unsigned int *)(v2171 + 4);
                                              if ((_DWORD)v1677)
                                              {
                                                v1678 = *(unsigned int *)(v2171 + 12);
                                                if ((_DWORD)v1678)
                                                {
                                                  v1679 = 0;
                                                  v1680 = 0;
                                                  v1681 = v1676 >> 1;
                                                  v1682 = *(_QWORD *)(v2171 + 16);
                                                  if (v1676 >> 1 <= 1)
                                                    v1681 = 1;
                                                  v1683 = v1677 * v1678;
                                                  v1684 = v1682 + 4 * v1678;
                                                  v1685 = v1677 * v1678 * (v1676 - 1);
                                                  v1686 = v1682 + 16;
                                                  v1687 = v1685;
                                                  while (v1678 < 8)
                                                  {
                                                    v1688 = 0;
                                                    v1689 = v1677;
                                                    do
                                                    {
                                                      v1690 = (int *)(v1682 + 4 * (v1679 + v1688));
                                                      v1691 = (int *)(v1682 + 4 * (v1687 + v1688));
                                                      v1692 = *v1690;
                                                      *v1690 = *v1691;
                                                      *v1691 = v1692;
                                                      if ((_DWORD)v1678 != 1)
                                                      {
                                                        v1693 = v1690[1];
                                                        v1690[1] = v1691[1];
                                                        v1691[1] = v1693;
                                                        if ((_DWORD)v1678 != 2)
                                                        {
                                                          v1694 = v1690[2];
                                                          v1690[2] = v1691[2];
                                                          v1691[2] = v1694;
                                                          if ((_DWORD)v1678 != 3)
                                                          {
                                                            v1695 = v1690[3];
                                                            v1690[3] = v1691[3];
                                                            v1691[3] = v1695;
                                                            if ((_DWORD)v1678 != 4)
                                                            {
                                                              v1696 = v1690[4];
                                                              v1690[4] = v1691[4];
                                                              v1691[4] = v1696;
                                                              if ((_DWORD)v1678 != 5)
                                                              {
                                                                v1697 = v1690[5];
                                                                v1690[5] = v1691[5];
                                                                v1691[5] = v1697;
                                                                if ((_DWORD)v1678 != 6)
                                                                {
                                                                  v1698 = v1690[6];
                                                                  v1690[6] = v1691[6];
                                                                  v1691[6] = v1698;
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      v1688 += v1678;
                                                      --v1689;
                                                    }
                                                    while (v1689);
LABEL_2305:
                                                    ++v1680;
                                                    v1679 += v1683;
                                                    v1687 -= v1683;
                                                    if (v1680 == v1681)
                                                      goto LABEL_2329;
                                                  }
                                                  v1699 = 0;
                                                  v1700 = v1687;
                                                  v1701 = v1679;
                                                  while (2)
                                                  {
                                                    v1702 = 4 * v1700;
                                                    v1703 = 4 * v1701;
                                                    v1704 = 4
                                                          * (v1685
                                                           + v1680 * -((_DWORD)v1677 * (_DWORD)v1678)
                                                           + (_DWORD)v1699 * (_DWORD)v1678);
                                                    v1705 = v1684 + v1704;
                                                    v1706 = v1682 + v1704;
                                                    v1707 = 4 * (v1680 * v1683 + v1699 * v1678);
                                                    if (v1682 + v1707 < v1705 && v1706 < v1684 + v1707)
                                                    {
                                                      v1715 = 0;
                                                      goto LABEL_2326;
                                                    }
                                                    v1709 = (__int128 *)(v1686 + v1703);
                                                    v1710 = (__int128 *)(v1686 + v1702);
                                                    v1711 = v1678 & 0xFFFFFFF8;
                                                    do
                                                    {
                                                      v1712 = *(v1709 - 1);
                                                      v1713 = *v1709;
                                                      v1714 = *v1710;
                                                      *(v1709 - 1) = *(v1710 - 1);
                                                      *v1709 = v1714;
                                                      *(v1710 - 1) = v1712;
                                                      *v1710 = v1713;
                                                      v1709 += 2;
                                                      v1710 += 2;
                                                      v1711 -= 8;
                                                    }
                                                    while (v1711);
                                                    v1715 = v1678 & 0xFFFFFFF8;
                                                    if (v1715 != v1678)
                                                    {
LABEL_2326:
                                                      v1716 = v1678 - v1715;
                                                      v1717 = 4 * v1715;
                                                      v1718 = (int *)(v1682 + v1717 + v1702);
                                                      v1719 = (int *)(v1682 + v1717 + v1703);
                                                      do
                                                      {
                                                        v1720 = *v1719;
                                                        *v1719++ = *v1718;
                                                        *v1718++ = v1720;
                                                        --v1716;
                                                      }
                                                      while (v1716);
                                                    }
                                                    ++v1699;
                                                    v1701 += v1678;
                                                    v1700 += v1678;
                                                    if (v1699 == v1677)
                                                      goto LABEL_2305;
                                                    continue;
                                                  }
                                                }
                                              }
                                            }
LABEL_2329:
                                            v1721 = 1;
                                            if (sub_239927458(v1675, v2157[3 * v1289 + 2], 5))
                                            {
                                              v1722 = *(_DWORD *)(v2171 + 8);
                                              if (v1722 >= 2)
                                              {
                                                v1723 = *(unsigned int *)(v2171 + 4);
                                                if ((_DWORD)v1723)
                                                {
                                                  v1724 = *(unsigned int *)(v2171 + 12);
                                                  if ((_DWORD)v1724)
                                                  {
                                                    v1725 = 0;
                                                    v1726 = 0;
                                                    v1727 = v1722 >> 1;
                                                    v1728 = *(_QWORD *)(v2171 + 16);
                                                    if (v1722 >> 1 <= 1)
                                                      v1727 = 1;
                                                    v1729 = v1723 * v1724;
                                                    v1730 = v1728 + 4 * v1724;
                                                    v1731 = v1723 * v1724 * (v1722 - 1);
                                                    v1732 = v1728 + 16;
                                                    v1733 = v1731;
                                                    while (v1724 < 8)
                                                    {
                                                      v1752 = 0;
                                                      v1753 = v1723;
                                                      do
                                                      {
                                                        v1754 = (int *)(v1728 + 4 * (v1725 + v1752));
                                                        v1755 = (int *)(v1728 + 4 * (v1733 + v1752));
                                                        v1756 = *v1754;
                                                        *v1754 = *v1755;
                                                        *v1755 = v1756;
                                                        if ((_DWORD)v1724 != 1)
                                                        {
                                                          v1757 = v1754[1];
                                                          v1754[1] = v1755[1];
                                                          v1755[1] = v1757;
                                                          if ((_DWORD)v1724 != 2)
                                                          {
                                                            v1758 = v1754[2];
                                                            v1754[2] = v1755[2];
                                                            v1755[2] = v1758;
                                                            if ((_DWORD)v1724 != 3)
                                                            {
                                                              v1759 = v1754[3];
                                                              v1754[3] = v1755[3];
                                                              v1755[3] = v1759;
                                                              if ((_DWORD)v1724 != 4)
                                                              {
                                                                v1760 = v1754[4];
                                                                v1754[4] = v1755[4];
                                                                v1755[4] = v1760;
                                                                if ((_DWORD)v1724 != 5)
                                                                {
                                                                  v1761 = v1754[5];
                                                                  v1754[5] = v1755[5];
                                                                  v1755[5] = v1761;
                                                                  if ((_DWORD)v1724 != 6)
                                                                  {
                                                                    v1762 = v1754[6];
                                                                    v1754[6] = v1755[6];
                                                                    v1755[6] = v1762;
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        v1752 += v1724;
                                                        --v1753;
                                                      }
                                                      while (v1753);
LABEL_2352:
                                                      ++v1726;
                                                      v1725 += v1729;
                                                      v1733 -= v1729;
                                                      v1721 = 1;
                                                      if (v1726 == v1727)
                                                        goto LABEL_2337;
                                                    }
                                                    v1763 = 0;
                                                    v1764 = v1733;
                                                    v1765 = v1725;
                                                    while (2)
                                                    {
                                                      v1766 = 4 * v1764;
                                                      v1767 = 4 * v1765;
                                                      v1768 = 4
                                                            * (v1731
                                                             + v1726 * -((_DWORD)v1723 * (_DWORD)v1724)
                                                             + (_DWORD)v1763 * (_DWORD)v1724);
                                                      v1769 = v1730 + v1768;
                                                      v1770 = v1728 + v1768;
                                                      v1771 = 4 * (v1726 * v1729 + v1763 * v1724);
                                                      if (v1728 + v1771 < v1769 && v1770 < v1730 + v1771)
                                                      {
                                                        v1779 = 0;
                                                        goto LABEL_2373;
                                                      }
                                                      v1773 = (__int128 *)(v1732 + v1767);
                                                      v1774 = (__int128 *)(v1732 + v1766);
                                                      v1775 = v1724 & 0xFFFFFFF8;
                                                      do
                                                      {
                                                        v1776 = *(v1773 - 1);
                                                        v1777 = *v1773;
                                                        v1778 = *v1774;
                                                        *(v1773 - 1) = *(v1774 - 1);
                                                        *v1773 = v1778;
                                                        *(v1774 - 1) = v1776;
                                                        *v1774 = v1777;
                                                        v1773 += 2;
                                                        v1774 += 2;
                                                        v1775 -= 8;
                                                      }
                                                      while (v1775);
                                                      v1779 = v1724 & 0xFFFFFFF8;
                                                      if (v1779 != v1724)
                                                      {
LABEL_2373:
                                                        v1780 = v1724 - v1779;
                                                        v1781 = 4 * v1779;
                                                        v1782 = (int *)(v1728 + v1781 + v1766);
                                                        v1783 = (int *)(v1728 + v1781 + v1767);
                                                        do
                                                        {
                                                          v1784 = *v1783;
                                                          *v1783++ = *v1782;
                                                          *v1782++ = v1784;
                                                          --v1780;
                                                        }
                                                        while (v1780);
                                                      }
                                                      ++v1763;
                                                      v1765 += v1724;
                                                      v1764 += v1724;
                                                      if (v1763 == v1723)
                                                        goto LABEL_2352;
                                                      continue;
                                                    }
                                                  }
                                                }
                                              }
LABEL_2337:
                                              v1734 = v2171;
                                              v1735 = operator new[]();
                                              v1736 = v1735;
                                              v1737 = *(_QWORD *)(v1734 + 16);
                                              if ((_DWORD)v2122)
                                              {
                                                v1738 = 0;
                                                if (v2122 < 8uLL)
                                                  goto LABEL_2343;
                                                if ((unint64_t)(v1735 - v1737) < 0x20)
                                                  goto LABEL_2343;
                                                v1739 = (__int128 *)(v1737 + 16);
                                                v1740 = (_OWORD *)(v1735 + 16);
                                                v1741 = v2122 - (v2122 & 7);
                                                do
                                                {
                                                  v1742 = *v1739;
                                                  *(v1740 - 1) = *(v1739 - 1);
                                                  *v1740 = v1742;
                                                  v1739 += 2;
                                                  v1740 += 2;
                                                  v1741 -= 8;
                                                }
                                                while (v1741);
                                                v1738 = v2122 - (v2122 & 7);
                                                if ((v2122 & 7) != 0)
                                                {
LABEL_2343:
                                                  v1743 = v2122 - v1738;
                                                  v1744 = 4 * v1738;
                                                  v1745 = (_DWORD *)(v1735 + 4 * v1738);
                                                  v1746 = (int *)(v1737 + v1744);
                                                  do
                                                  {
                                                    v1747 = *v1746++;
                                                    *v1745++ = v1747;
                                                    --v1743;
                                                  }
                                                  while (v1743);
                                                }
                                              }
                                              v1748 = sub_2399D1D84(4 * v2122);
                                              MEMORY[0x23B83F150](*MEMORY[0x24BDAEC58], v1737, v1748);
                                              *(_QWORD *)(v1734 + 16) = v1736;
                                              if (*v2118)
                                                v1749 = v1721;
                                              else
                                                v1749 = 0;
                                              if (v1749 == 1)
                                              {
                                                if (a12)
                                                {
                                                  __dst[23] = 5;
                                                  strcpy(__dst, "uchar");
                                                  strcpy(&__dst[24], "d");
                                                  __dst[55] = 4;
                                                  strcpy(&__dst[32], ".jpg");
                                                  sub_239926E78((uint64_t)v2118, (uint64_t)__dst);
                                                  LODWORD(v2191.__r_.__value_.__l.__data_) = 5;
                                                  v1750 = *(unsigned __int16 *)sub_239926484((uint64_t **)&v2120[6 * v2134 + 3], (int *)&v2191);
                                                  v1751 = v2164[3];
                                                  sub_239926F04(a13, (uint64_t)&v2190);
                                                  if (SHIBYTE(v2190.__r_.__value_.__r.__words[2]) < 0)
                                                  {
                                                    sub_23941A7F8(&v2191, v2190.__r_.__value_.__l.__data_, v2190.__r_.__value_.__l.__size_);
                                                    if (SHIBYTE(v2190.__r_.__value_.__r.__words[2]) < 0)
                                                      operator delete(v2190.__r_.__value_.__l.__data_);
                                                  }
                                                  else
                                                  {
                                                    v2191 = v2190;
                                                  }
                                                  v1789 = (std::string *)&v1751[6 * v1750];
                                                  sub_239926FC4(v1789, &v2190);
                                                  sub_239927028("_", (const void **)&v2191.__r_.__value_.__l.__data_, &v2170);
                                                  if ((v2190.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                                                    v1790 = &v2190;
                                                  else
                                                    v1790 = (std::string *)v2190.__r_.__value_.__r.__words[0];
                                                  if ((v2190.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                                                    v1791 = HIBYTE(v2190.__r_.__value_.__r.__words[2]);
                                                  else
                                                    v1791 = v2190.__r_.__value_.__l.__size_;
                                                  v1792 = std::string::append(&v2170, (const std::string::value_type *)v1790, v1791);
                                                  v1793 = *(_OWORD *)&v1792->__r_.__value_.__l.__data_;
                                                  v2182.__r_.__value_.__r.__words[2] = v1792->__r_.__value_.__r.__words[2];
                                                  *(_OWORD *)&v2182.__r_.__value_.__l.__data_ = v1793;
                                                  v1792->__r_.__value_.__l.__size_ = 0;
                                                  v1792->__r_.__value_.__r.__words[2] = 0;
                                                  v1792->__r_.__value_.__r.__words[0] = 0;
                                                  std::to_string(&v2169, v1289);
                                                  if ((v2169.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                                                    v1794 = &v2169;
                                                  else
                                                    v1794 = (std::string *)v2169.__r_.__value_.__r.__words[0];
                                                  if ((v2169.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                                                    v1795 = HIBYTE(v2169.__r_.__value_.__r.__words[2]);
                                                  else
                                                    v1795 = v2169.__r_.__value_.__l.__size_;
                                                  v1796 = std::string::append(&v2182, (const std::string::value_type *)v1794, v1795);
                                                  v1797 = *(_OWORD *)&v1796->__r_.__value_.__l.__data_;
                                                  v2183.__r_.__value_.__r.__words[2] = v1796->__r_.__value_.__r.__words[2];
                                                  *(_OWORD *)&v2183.__r_.__value_.__l.__data_ = v1797;
                                                  v1796->__r_.__value_.__l.__size_ = 0;
                                                  v1796->__r_.__value_.__r.__words[2] = 0;
                                                  v1796->__r_.__value_.__r.__words[0] = 0;
                                                  if (__dst[55] >= 0)
                                                    v1798 = &__dst[32];
                                                  else
                                                    v1798 = *(const std::string::value_type **)&__dst[32];
                                                  if (__dst[55] >= 0)
                                                    v1799 = __dst[55];
                                                  else
                                                    v1799 = *(_QWORD *)&__dst[40];
                                                  v1800 = std::string::append(&v2183, v1798, v1799);
                                                  v1801 = *(_OWORD *)&v1800->__r_.__value_.__l.__data_;
                                                  v2184.__r_.__value_.__r.__words[2] = v1800->__r_.__value_.__r.__words[2];
                                                  *(_OWORD *)&v2184.__r_.__value_.__l.__data_ = v1801;
                                                  v1800->__r_.__value_.__l.__size_ = 0;
                                                  v1800->__r_.__value_.__r.__words[2] = 0;
                                                  v1800->__r_.__value_.__r.__words[0] = 0;
                                                  if ((SHIBYTE(v2183.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                                  {
                                                    if ((SHIBYTE(v2169.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                                      goto LABEL_2403;
LABEL_2413:
                                                    operator delete(v2169.__r_.__value_.__l.__data_);
                                                    if (SHIBYTE(v2182.__r_.__value_.__r.__words[2]) < 0)
                                                      goto LABEL_2414;
LABEL_2404:
                                                    if ((SHIBYTE(v2170.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                                      goto LABEL_2405;
LABEL_2415:
                                                    operator delete(v2170.__r_.__value_.__l.__data_);
                                                    goto LABEL_2405;
                                                  }
                                                  operator delete(v2183.__r_.__value_.__l.__data_);
                                                  if (SHIBYTE(v2169.__r_.__value_.__r.__words[2]) < 0)
                                                    goto LABEL_2413;
LABEL_2403:
                                                  if ((SHIBYTE(v2182.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                                    goto LABEL_2404;
LABEL_2414:
                                                  operator delete(v2182.__r_.__value_.__l.__data_);
                                                  if (SHIBYTE(v2170.__r_.__value_.__r.__words[2]) < 0)
                                                    goto LABEL_2415;
LABEL_2405:
                                                  sub_239927120(a13, (uint64_t)&v2182);
                                                  sub_2399271E0(&v2170, &v2184);
                                                  sub_239498A04((std::__fs::filesystem::path *)&v2170, (uint64_t)&v2182, (std::__fs::filesystem::path *)&v2183);
                                                  if (SHIBYTE(v2170.__r_.__value_.__r.__words[2]) < 0)
                                                    operator delete(v2170.__r_.__value_.__l.__data_);
                                                  if (SHIBYTE(v2182.__r_.__value_.__r.__words[2]) < 0)
                                                    operator delete(v2182.__r_.__value_.__l.__data_);
                                                  v1802 = v2171;
                                                  sub_2394A4DCC((uint64_t)v2273, v2097);
                                                  v2126 = sub_239975928((__int128 *)&v2183, v1802, (uint64_t)__dst, (uint64_t)v2273, 1);
                                                  v1803 = v2274;
                                                  if (v2274 == v2273)
                                                  {
                                                    v1803 = v2273;
                                                    v1804 = 4;
LABEL_2417:
                                                    (*(void (**)(void))(*v1803 + 8 * v1804))();
                                                  }
                                                  else if (v2274)
                                                  {
                                                    v1804 = 5;
                                                    goto LABEL_2417;
                                                  }
                                                  if (a10)
                                                    sub_239927244(a9, (uint64_t)&v2183);
                                                  if (SHIBYTE(v2183.__r_.__value_.__r.__words[2]) < 0)
                                                    sub_23941A7F8(&v2168, v2183.__r_.__value_.__l.__data_, v2183.__r_.__value_.__l.__size_);
                                                  else
                                                    v2168 = v2183;
                                                  sub_2399272D8(v1789, &v2168);
                                                  if (SHIBYTE(v2168.__r_.__value_.__r.__words[2]) < 0)
                                                  {
                                                    operator delete(v2168.__r_.__value_.__l.__data_);
                                                    if (SHIBYTE(v2183.__r_.__value_.__r.__words[2]) < 0)
                                                      goto LABEL_2585;
LABEL_2425:
                                                    if ((SHIBYTE(v2184.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                                      goto LABEL_2426;
LABEL_2586:
                                                    operator delete(v2184.__r_.__value_.__l.__data_);
                                                    if (SHIBYTE(v2190.__r_.__value_.__r.__words[2]) < 0)
                                                      goto LABEL_2587;
LABEL_2427:
                                                    if (SHIBYTE(v2191.__r_.__value_.__r.__words[2]) < 0)
LABEL_2588:
                                                      operator delete(v2191.__r_.__value_.__l.__data_);
                                                  }
                                                  else
                                                  {
                                                    if ((SHIBYTE(v2183.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                                      goto LABEL_2425;
LABEL_2585:
                                                    operator delete(v2183.__r_.__value_.__l.__data_);
                                                    if (SHIBYTE(v2184.__r_.__value_.__r.__words[2]) < 0)
                                                      goto LABEL_2586;
LABEL_2426:
                                                    if ((SHIBYTE(v2190.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                                      goto LABEL_2427;
LABEL_2587:
                                                    operator delete(v2190.__r_.__value_.__l.__data_);
                                                    if (SHIBYTE(v2191.__r_.__value_.__r.__words[2]) < 0)
                                                      goto LABEL_2588;
                                                  }
                                                  sub_239586ACC((uint64_t)__dst);
                                                }
                                                else
                                                {
                                                  *(_DWORD *)__dst = 5;
                                                  v1785 = *(unsigned __int16 *)sub_239926484((uint64_t **)&v2120[6 * v2134 + 3], (int *)__dst);
                                                  v1786 = v2164[3];
                                                  v2167[0] = v2171;
                                                  v2167[1] = v2172;
                                                  if (v2172)
                                                  {
                                                    v1787 = (unint64_t *)(v2172 + 8);
                                                    do
                                                      v1788 = __ldxr(v1787);
                                                    while (__stxr(v1788 + 1, v1787));
                                                  }
                                                  sub_2399273B0((uint64_t)&v1786[6 * v1785], v2167);
                                                  sub_239416DA0((uint64_t)v2167);
                                                  v2126 = 1;
                                                }
                                              }
                                              else
                                              {
                                                v2126 = v1721;
                                              }
                                              kdebug_trace();
                                              v1805 = (std::__shared_weak_count *)v2172;
                                              if (v2172)
                                              {
                                                v1806 = (unint64_t *)(v2172 + 8);
                                                do
                                                  v1807 = __ldaxr(v1806);
                                                while (__stlxr(v1807 - 1, v1806));
                                                if (!v1807)
                                                {
                                                  ((void (*)(std::__shared_weak_count *))v1805->__on_zero_shared)(v1805);
                                                  std::__shared_weak_count::__release_weak(v1805);
                                                }
                                              }
LABEL_2434:
                                              if (v1591)
                                              {
                                                v1808 = v2175;
                                                v1809 = (*((_DWORD *)v2175 + 2) * *((_DWORD *)v2175 + 1));
                                                v1810 = operator new[]();
                                                v1811 = v1810;
                                                v1812 = v1808[2];
                                                if ((_DWORD)v1809)
                                                {
                                                  v1813 = 0;
                                                  if (v1809 < 8)
                                                    goto LABEL_2441;
                                                  if ((unint64_t)(v1810 - v1812) < 0x20)
                                                    goto LABEL_2441;
                                                  v1813 = v1809 & 0xFFFFFFF8;
                                                  v1814 = (__int128 *)(v1812 + 16);
                                                  v1815 = (_OWORD *)(v1810 + 16);
                                                  v1816 = v1813;
                                                  do
                                                  {
                                                    v1817 = *v1814;
                                                    *(v1815 - 1) = *(v1814 - 1);
                                                    *v1815 = v1817;
                                                    v1814 += 2;
                                                    v1815 += 2;
                                                    v1816 -= 8;
                                                  }
                                                  while (v1816);
                                                  if (v1813 != v1809)
                                                  {
LABEL_2441:
                                                    v1818 = v1809 - v1813;
                                                    v1819 = 4 * v1813;
                                                    v1820 = (_DWORD *)(v1810 + 4 * v1813);
                                                    v1821 = (int *)(v1812 + v1819);
                                                    do
                                                    {
                                                      v1822 = *v1821++;
                                                      *v1820++ = v1822;
                                                      --v1818;
                                                    }
                                                    while (v1818);
                                                  }
                                                }
                                                v1823 = sub_2399D1D84(4 * v1809);
                                                MEMORY[0x23B83F150](*MEMORY[0x24BDAEC58], v1812, v1823);
                                                v1808[2] = v1811;
                                              }
                                              if (*v2118)
                                              {
                                                v1824 = v2173;
                                                v1825 = *((_DWORD *)v2173 + 2) * *((_DWORD *)v2173 + 1);
                                                v1826 = (3 * v1825);
                                                v1827 = operator new[]();
                                                v1828 = v1827;
                                                v1829 = v1824[2];
                                                if (v1825)
                                                {
                                                  v1830 = 0;
                                                  if (v1826 < 8)
                                                    goto LABEL_2451;
                                                  if ((unint64_t)(v1827 - v1829) < 0x20)
                                                    goto LABEL_2451;
                                                  v1830 = v1826 & 0xFFFFFFF8;
                                                  v1831 = (__int128 *)(v1829 + 16);
                                                  v1832 = (_OWORD *)(v1827 + 16);
                                                  v1833 = v1830;
                                                  do
                                                  {
                                                    v1834 = *v1831;
                                                    *(v1832 - 1) = *(v1831 - 1);
                                                    *v1832 = v1834;
                                                    v1831 += 2;
                                                    v1832 += 2;
                                                    v1833 -= 8;
                                                  }
                                                  while (v1833);
                                                  if (v1830 != v1826)
                                                  {
LABEL_2451:
                                                    v1835 = v1826 - v1830;
                                                    v1836 = 4 * v1830;
                                                    v1837 = (_DWORD *)(v1827 + 4 * v1830);
                                                    v1838 = (int *)(v1829 + v1836);
                                                    do
                                                    {
                                                      v1839 = *v1838++;
                                                      *v1837++ = v1839;
                                                      --v1835;
                                                    }
                                                    while (v1835);
                                                  }
                                                }
                                                v1840 = sub_2399D1D84(4 * (3 * v1825));
                                                MEMORY[0x23B83F150](*MEMORY[0x24BDAEC58], v1829, v1840);
                                                v1824[2] = v1828;
                                              }
                                              if (v2213 != v2212 && *((_BYTE *)v2212 + 48 * v1289 + 4))
                                              {
                                                v2166[1] = 0;
                                                v2166[0] = 0;
                                                sub_2399273B0((uint64_t)v2212 + 48 * v1289, v2166);
                                                sub_239416DA0((uint64_t)v2166);
                                              }
                                              v1841 = 1;
                                              v1842 = v2174;
                                              if (!v2174)
                                              {
LABEL_2464:
                                                v1845 = v2176;
                                                if (v2176)
                                                {
                                                  v1846 = (unint64_t *)&v2176->__shared_owners_;
                                                  do
                                                    v1847 = __ldaxr(v1846);
                                                  while (__stlxr(v1847 - 1, v1846));
                                                  if (!v1847)
                                                  {
                                                    ((void (*)(std::__shared_weak_count *))v1845->__on_zero_shared)(v1845);
                                                    std::__shared_weak_count::__release_weak(v1845);
                                                  }
                                                }
                                                sub_23992A6A0((uint64_t)task_info_out);
                                                if ((v1841 & 1) != 0)
                                                {
LABEL_2470:
                                                  sub_2399FC9C0();
                                                  v1848 = *(unsigned __int8 *)(v206 + 304);
                                                  v1849 = v2126;
                                                  if (!*(_BYTE *)(v206 + 304))
                                                    v1849 = 0;
                                                  if (v1849 == 1)
                                                  {
                                                    *((_BYTE *)&v2165.__r_.__value_.__s + 23) = 0;
                                                    v2165.__r_.__value_.__s.__data_[0] = 0;
                                                    sub_23992A5B4((uint64_t)task_info_out, &v2165, v2121, v2121);
                                                    if (SHIBYTE(v2165.__r_.__value_.__r.__words[2]) < 0)
                                                      operator delete(v2165.__r_.__value_.__l.__data_);
                                                    if (v2309
                                                      && (*(unsigned int (**)(_QWORD *))(*v2309 + 48))(v2309))
                                                    {
                                                      goto LABEL_2477;
                                                    }
                                                    kdebug_trace();
                                                    *(_OWORD *)&v2191.__r_.__value_.__l.__data_ = 0uLL;
                                                    v1852 = operator new[]();
                                                    v1853 = operator new(0x30uLL);
                                                    v1853[1] = 0;
                                                    v1853[2] = 0;
                                                    *v1853 = &off_250ADF208;
                                                    *((_DWORD *)v1853 + 6) = 0;
                                                    *((_DWORD *)v1853 + 7) = v2145;
                                                    *((_DWORD *)v1853 + 8) = v2145;
                                                    *((_DWORD *)v1853 + 9) = 1;
                                                    v1853[5] = v1852;
                                                    v1854 = (std::__shared_weak_count *)v2191.__r_.__value_.__l.__size_;
                                                    v2191.__r_.__value_.__r.__words[0] = (std::string::size_type)(v1853 + 3);
                                                    v2191.__r_.__value_.__l.__size_ = (std::string::size_type)v1853;
                                                    if (v1854)
                                                    {
                                                      v1855 = (unint64_t *)&v1854->__shared_owners_;
                                                      do
                                                        v1856 = __ldaxr(v1855);
                                                      while (__stlxr(v1856 - 1, v1855));
                                                      if (!v1856)
                                                      {
                                                        ((void (*)(std::__shared_weak_count *))v1854->__on_zero_shared)(v1854);
                                                        std::__shared_weak_count::__release_weak(v1854);
                                                      }
                                                    }
                                                    v1857 = v2191.__r_.__value_.__r.__words[0];
                                                    *(_DWORD *)v2191.__r_.__value_.__l.__data_ = 1;
                                                    if (v2145)
                                                    {
                                                      v1858 = (int8x16_t *)v2157[3 * v1289 + 2];
                                                      v1859 = *(int8x16_t **)(v1857 + 16);
                                                      if (v2161 >= 8)
                                                      {
                                                        if (v2161 >= 0x20)
                                                        {
                                                          v1862 = v1858 + 1;
                                                          v1863 = v1859 + 4;
                                                          v1864 = v2098;
                                                          do
                                                          {
                                                            v1865 = vceqzq_s8(v1862[-1]);
                                                            v1866 = vmovl_high_s8(v1865);
                                                            v1867 = vmovl_s8(*(int8x8_t *)v1865.i8);
                                                            v1868 = vceqzq_s8(*v1862);
                                                            v1869 = vmovl_high_s8(v1868);
                                                            v1870 = vmovl_s8(*(int8x8_t *)v1868.i8);
                                                            v1863[-2] = vbicq_s8(v2102, (int8x16_t)vmovl_s16(*(int16x4_t *)v1866.i8));
                                                            v1863[-1] = vbicq_s8(v2102, (int8x16_t)vmovl_high_s16(v1866));
                                                            v1863[-4] = vbicq_s8(v2102, (int8x16_t)vmovl_s16(*(int16x4_t *)v1867.i8));
                                                            v1863[-3] = vbicq_s8(v2102, (int8x16_t)vmovl_high_s16(v1867));
                                                            v1863[2] = vbicq_s8(v2102, (int8x16_t)vmovl_s16(*(int16x4_t *)v1869.i8));
                                                            v1863[3] = vbicq_s8(v2102, (int8x16_t)vmovl_high_s16(v1869));
                                                            *v1863 = vbicq_s8(v2102, (int8x16_t)vmovl_s16(*(int16x4_t *)v1870.i8));
                                                            v1863[1] = vbicq_s8(v2102, (int8x16_t)vmovl_high_s16(v1870));
                                                            v1863 += 8;
                                                            v1862 += 2;
                                                            v1864 -= 32;
                                                          }
                                                          while (v1864);
                                                          if (v2161 == v2098)
                                                            goto LABEL_2502;
                                                          v1860 = v2098;
                                                          v1861 = v2098;
                                                          if (!v2094)
                                                            goto LABEL_2497;
                                                        }
                                                        else
                                                        {
                                                          v1861 = 0;
                                                        }
                                                        v1871 = (uint8x8_t *)&v1858->i8[v1861];
                                                        v1872 = (int8x16_t *)((char *)v1859 + 4 * v1861);
                                                        v1873 = v2095 + v1861;
                                                        do
                                                        {
                                                          v1874 = *v1871++;
                                                          v1875 = vceqzq_s16((int16x8_t)vmovl_u8(v1874));
                                                          *v1872 = vbicq_s8(v2102, (int8x16_t)vmovl_s16(*(int16x4_t *)v1875.i8));
                                                          v1872[1] = vbicq_s8(v2102, (int8x16_t)vmovl_high_s16(v1875));
                                                          v1872 += 2;
                                                          v1873 += 8;
                                                        }
                                                        while (v1873);
                                                        v1860 = v2096;
                                                        if (v2161 != v2096)
                                                          goto LABEL_2497;
                                                      }
                                                      else
                                                      {
                                                        v1860 = 0;
LABEL_2497:
                                                        v1876 = v2161 - v1860;
                                                        v1877 = (float *)&v1859->i32[v1860];
                                                        v1878 = &v1858->u8[v1860];
                                                        do
                                                        {
                                                          if (*v1878++)
                                                            v1880 = 1.0;
                                                          else
                                                            v1880 = 0.0;
                                                          *v1877++ = v1880;
                                                          --v1876;
                                                        }
                                                        while (v1876);
                                                      }
                                                    }
LABEL_2502:
                                                    v1881 = *(_DWORD *)(v1857 + 8);
                                                    if (v1881 >= 2)
                                                    {
                                                      v1882 = *(unsigned int *)(v1857 + 4);
                                                      if ((_DWORD)v1882)
                                                      {
                                                        v1883 = *(unsigned int *)(v1857 + 12);
                                                        if ((_DWORD)v1883)
                                                        {
                                                          v1884 = 0;
                                                          v1885 = 0;
                                                          v1886 = v1881 >> 1;
                                                          v1887 = *(_QWORD *)(v1857 + 16);
                                                          if (v1881 >> 1 <= 1)
                                                            v1886 = 1;
                                                          v1888 = v1882 * v1883;
                                                          v1889 = v1887 + 4 * v1883;
                                                          v1890 = v1882 * v1883 * (v1881 - 1);
                                                          v1891 = v1887 + 16;
                                                          v1892 = v1890;
                                                          while (v1883 < 8)
                                                          {
                                                            v1893 = 0;
                                                            v1894 = v1882;
                                                            do
                                                            {
                                                              v1895 = (int *)(v1887 + 4 * (v1884 + v1893));
                                                              v1896 = (int *)(v1887 + 4 * (v1892 + v1893));
                                                              v1897 = *v1895;
                                                              *v1895 = *v1896;
                                                              *v1896 = v1897;
                                                              if ((_DWORD)v1883 != 1)
                                                              {
                                                                v1898 = v1895[1];
                                                                v1895[1] = v1896[1];
                                                                v1896[1] = v1898;
                                                                if ((_DWORD)v1883 != 2)
                                                                {
                                                                  v1899 = v1895[2];
                                                                  v1895[2] = v1896[2];
                                                                  v1896[2] = v1899;
                                                                  if ((_DWORD)v1883 != 3)
                                                                  {
                                                                    v1900 = v1895[3];
                                                                    v1895[3] = v1896[3];
                                                                    v1896[3] = v1900;
                                                                    if ((_DWORD)v1883 != 4)
                                                                    {
                                                                      v1901 = v1895[4];
                                                                      v1895[4] = v1896[4];
                                                                      v1896[4] = v1901;
                                                                      if ((_DWORD)v1883 != 5)
                                                                      {
                                                                        v1902 = v1895[5];
                                                                        v1895[5] = v1896[5];
                                                                        v1896[5] = v1902;
                                                                        if ((_DWORD)v1883 != 6)
                                                                        {
                                                                          v1903 = v1895[6];
                                                                          v1895[6] = v1896[6];
                                                                          v1896[6] = v1903;
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              v1893 += v1883;
                                                              --v1894;
                                                            }
                                                            while (v1894);
LABEL_2508:
                                                            ++v1885;
                                                            v1884 += v1888;
                                                            v1892 -= v1888;
                                                            if (v1885 == v1886)
                                                              goto LABEL_2532;
                                                          }
                                                          v1904 = 0;
                                                          v1905 = v1892;
                                                          v1906 = v1884;
                                                          while (2)
                                                          {
                                                            v1907 = 4 * v1905;
                                                            v1908 = 4 * v1906;
                                                            v1909 = 4
                                                                  * (v1890
                                                                   + v1885 * -((_DWORD)v1882 * (_DWORD)v1883)
                                                                   + (_DWORD)v1904 * (_DWORD)v1883);
                                                            v1910 = v1889 + v1909;
                                                            v1911 = v1887 + v1909;
                                                            v1912 = 4 * (v1885 * v1888 + v1904 * v1883);
                                                            if (v1887 + v1912 < v1910 && v1911 < v1889 + v1912)
                                                            {
                                                              v1920 = 0;
                                                              goto LABEL_2529;
                                                            }
                                                            v1914 = (__int128 *)(v1891 + v1908);
                                                            v1915 = (__int128 *)(v1891 + v1907);
                                                            v1916 = v1883 & 0xFFFFFFF8;
                                                            do
                                                            {
                                                              v1917 = *(v1914 - 1);
                                                              v1918 = *v1914;
                                                              v1919 = *v1915;
                                                              *(v1914 - 1) = *(v1915 - 1);
                                                              *v1914 = v1919;
                                                              *(v1915 - 1) = v1917;
                                                              *v1915 = v1918;
                                                              v1914 += 2;
                                                              v1915 += 2;
                                                              v1916 -= 8;
                                                            }
                                                            while (v1916);
                                                            v1920 = v1883 & 0xFFFFFFF8;
                                                            if (v1920 != v1883)
                                                            {
LABEL_2529:
                                                              v1921 = v1883 - v1920;
                                                              v1922 = 4 * v1920;
                                                              v1923 = (int *)(v1887 + v1922 + v1907);
                                                              v1924 = (int *)(v1887 + v1922 + v1908);
                                                              do
                                                              {
                                                                v1925 = *v1924;
                                                                *v1924++ = *v1923;
                                                                *v1923++ = v1925;
                                                                --v1921;
                                                              }
                                                              while (v1921);
                                                            }
                                                            ++v1904;
                                                            v1906 += v1883;
                                                            v1905 += v1883;
                                                            if (v1904 == v1882)
                                                              goto LABEL_2508;
                                                            continue;
                                                          }
                                                        }
                                                      }
                                                    }
LABEL_2532:
                                                    if (*(_BYTE *)(v206 + 304))
                                                    {
                                                      v1926 = &v2120[6 * v2134];
                                                      v1929 = (uint64_t *)v1926[4];
                                                      v1928 = (uint64_t **)(v1926 + 4);
                                                      v1927 = v1929;
                                                      if (v1929)
                                                      {
                                                        while (1)
                                                        {
                                                          while (1)
                                                          {
                                                            v1931 = (uint64_t **)v1927;
                                                            v1932 = *((_DWORD *)v1927 + 7);
                                                            if (v1932 < 9)
                                                              break;
                                                            v1927 = *v1931;
                                                            v1930 = v1931;
                                                            if (!*v1931)
                                                              goto LABEL_2540;
                                                          }
                                                          if (v1932 == 8)
                                                            break;
                                                          v1927 = v1931[1];
                                                          if (!v1927)
                                                          {
                                                            v1930 = v1931 + 1;
                                                            goto LABEL_2540;
                                                          }
                                                        }
                                                        v1933 = v1931;
                                                      }
                                                      else
                                                      {
                                                        v1930 = v1928;
                                                        v1931 = v1928;
LABEL_2540:
                                                        v1933 = operator new(0x28uLL);
                                                        v1933[7] = 8;
                                                        *((_WORD *)v1933 + 16) = 0;
                                                        *(_QWORD *)v1933 = 0;
                                                        *((_QWORD *)v1933 + 1) = 0;
                                                        *((_QWORD *)v1933 + 2) = v1931;
                                                        *v1930 = (uint64_t *)v1933;
                                                        v1935 = (uint64_t **)*(v1928 - 1);
                                                        v1934 = v1928 - 1;
                                                        v1936 = *v1935;
                                                        v1937 = (uint64_t *)v1933;
                                                        if (*v1935)
                                                        {
                                                          *v1934 = v1936;
                                                          v1937 = *v1930;
                                                        }
                                                        sub_2394213B8(v1934[1], v1937);
                                                        v1934[2] = (uint64_t *)((char *)v1934[2] + 1);
                                                        v1857 = v2191.__r_.__value_.__r.__words[0];
                                                      }
                                                      v1938 = *((unsigned __int16 *)v1933 + 16);
                                                      v1939 = v2164[3];
                                                      v1940 = (std::__shared_weak_count *)v2191.__r_.__value_.__l.__size_;
                                                      if (v2191.__r_.__value_.__l.__size_)
                                                      {
                                                        v1941 = (unint64_t *)(v2191.__r_.__value_.__l.__size_ + 8);
                                                        do
                                                          v1942 = __ldxr(v1941);
                                                        while (__stxr(v1942 + 1, v1941));
                                                        do
                                                          v1943 = __ldxr(v1941);
                                                        while (__stxr(v1943 + 1, v1941));
                                                      }
                                                      v1944 = &v1939[6 * v1938];
                                                      v1944[1] = v1857;
                                                      v1945 = (std::string::size_type *)(v1944 + 1);
                                                      v1946 = (std::__shared_weak_count *)v1945[1];
                                                      v1945[1] = (std::string::size_type)v1940;
                                                      if (v1946)
                                                      {
                                                        v1947 = (unint64_t *)&v1946->__shared_owners_;
                                                        do
                                                          v1948 = __ldaxr(v1947);
                                                        while (__stlxr(v1948 - 1, v1947));
                                                        if (!v1948)
                                                        {
                                                          ((void (*)(std::__shared_weak_count *))v1946->__on_zero_shared)(v1946);
                                                          std::__shared_weak_count::__release_weak(v1946);
                                                        }
                                                        v1857 = *v1945;
                                                      }
                                                      v1949 = v1857 && *(_QWORD *)(v1857 + 16);
                                                      BYTE4(v1939[6 * v1938]) = v1949;
                                                      if (v1940)
                                                      {
                                                        v1950 = (unint64_t *)&v1940->__shared_owners_;
                                                        do
                                                          v1951 = __ldaxr(v1950);
                                                        while (__stlxr(v1951 - 1, v1950));
                                                        if (!v1951)
                                                        {
                                                          ((void (*)(std::__shared_weak_count *))v1940->__on_zero_shared)(v1940);
                                                          std::__shared_weak_count::__release_weak(v1940);
                                                        }
                                                      }
                                                    }
                                                    kdebug_trace();
                                                    v1952 = (std::__shared_weak_count *)v2191.__r_.__value_.__l.__size_;
                                                    if (v2191.__r_.__value_.__l.__size_)
                                                    {
                                                      v1953 = (unint64_t *)(v2191.__r_.__value_.__l.__size_ + 8);
                                                      do
                                                        v1954 = __ldaxr(v1953);
                                                      while (__stlxr(v1954 - 1, v1953));
                                                      if (!v1954)
                                                      {
                                                        ((void (*)(std::__shared_weak_count *))v1952->__on_zero_shared)(v1952);
                                                        std::__shared_weak_count::__release_weak(v1952);
                                                      }
                                                    }
                                                    sub_23992A6A0((uint64_t)task_info_out);
                                                    v1848 = *(unsigned __int8 *)(v206 + 304);
                                                  }
                                                  if (v1848)
                                                    sub_2399FC9C0();
                                                  if (v2311)
                                                  {
                                                    HIBYTE(v2241) = 0;
                                                    LOBYTE(task_info_out[0]) = 0;
                                                    v1955 = (double)(v1289 + 1) * 29.0 / v1291 + 70.0;
                                                    *(float *)__dst = v1955;
                                                    (*(void (**)(_BYTE *, _BYTE *, integer_t *))(*(_QWORD *)v2311 + 48))(v2311, __dst, task_info_out);
                                                    if (SHIBYTE(v2241) < 0)
                                                      operator delete(*(void **)task_info_out);
                                                  }
                                                  v1850 = 1;
                                                  v1851 = v2187;
                                                  if (!v2187)
                                                  {
LABEL_2581:
                                                    if ((v1850 & 1) == 0)
                                                      goto LABEL_2858;
                                                    if (++v1289 == v2147)
                                                      goto LABEL_2841;
                                                    continue;
                                                  }
                                                }
                                                else
                                                {
LABEL_2478:
                                                  v1850 = 0;
                                                  v1851 = v2187;
                                                  if (!v2187)
                                                    goto LABEL_2581;
                                                }
LABEL_2577:
                                                v1956 = (unint64_t *)&v1851->__shared_owners_;
                                                do
                                                  v1957 = __ldaxr(v1956);
                                                while (__stlxr(v1957 - 1, v1956));
                                                if (!v1957)
                                                {
                                                  ((void (*)(std::__shared_weak_count *))v1851->__on_zero_shared)(v1851);
                                                  std::__shared_weak_count::__release_weak(v1851);
                                                }
                                                goto LABEL_2581;
                                              }
LABEL_2460:
                                              v1843 = (unint64_t *)&v1842->__shared_owners_;
                                              do
                                                v1844 = __ldaxr(v1843);
                                              while (__stlxr(v1844 - 1, v1843));
                                              if (!v1844)
                                              {
                                                ((void (*)(std::__shared_weak_count *))v1842->__on_zero_shared)(v1842);
                                                std::__shared_weak_count::__release_weak(v1842);
                                              }
                                              goto LABEL_2464;
                                            }
                                          }
                                        }
                                      }
                                      v1721 = 0;
                                      goto LABEL_2337;
                                    }
                                    v1841 = 0;
                                    v1842 = v2174;
                                    if (!v2174)
                                      goto LABEL_2464;
                                    goto LABEL_2460;
                                  }
                                }
                                memmove(v2002, v2001.__data_, v2001.__size_);
                                goto LABEL_2668;
                              }
                            }
                            memmove(p_src, v1974.__data_, v1974.__size_);
                            goto LABEL_2619;
                          }
                          v1557 = &v2120[6 * v2134];
                          v1560 = (uint64_t *)v1557[4];
                          v1559 = (uint64_t **)(v1557 + 4);
                          v1558 = v1560;
                          if (v1560)
                          {
                            while (1)
                            {
                              while (1)
                              {
                                v1562 = (uint64_t **)v1558;
                                v1563 = *((_DWORD *)v1558 + 7);
                                if (v1563 < 8)
                                  break;
                                v1558 = *v1562;
                                v1561 = v1562;
                                if (!*v1562)
                                  goto LABEL_2159;
                              }
                              if (v1563 == 7)
                                break;
                              v1558 = v1562[1];
                              if (!v1558)
                              {
                                v1561 = v1562 + 1;
                                goto LABEL_2159;
                              }
                            }
                            v1564 = v1562;
                          }
                          else
                          {
                            v1561 = v1559;
                            v1562 = v1559;
LABEL_2159:
                            v1564 = operator new(0x28uLL);
                            v1564[7] = 7;
                            *((_WORD *)v1564 + 16) = 0;
                            *(_QWORD *)v1564 = 0;
                            *((_QWORD *)v1564 + 1) = 0;
                            *((_QWORD *)v1564 + 2) = v1562;
                            *v1561 = (uint64_t *)v1564;
                            v1566 = (uint64_t **)*(v1559 - 1);
                            v1565 = v1559 - 1;
                            v1567 = *v1566;
                            v1568 = (uint64_t *)v1564;
                            if (*v1566)
                            {
                              *v1565 = v1567;
                              v1568 = *v1561;
                            }
                            sub_2394213B8(v1565[1], v1568);
                            v1565[2] = (uint64_t *)((char *)v1565[2] + 1);
                            v1381 = v2170.__r_.__value_.__r.__words[0];
                          }
                          v1958 = *((unsigned __int16 *)v1564 + 16);
                          v1959 = v2164[3];
                          v1960 = (std::__shared_weak_count *)v2170.__r_.__value_.__l.__size_;
                          if (v2170.__r_.__value_.__l.__size_)
                          {
                            v1961 = (unint64_t *)(v2170.__r_.__value_.__l.__size_ + 8);
                            do
                              v1962 = __ldxr(v1961);
                            while (__stxr(v1962 + 1, v1961));
                            do
                              v1963 = __ldxr(v1961);
                            while (__stxr(v1963 + 1, v1961));
                          }
                          v1964 = &v1959[6 * v1958];
                          v1964[1] = v1381;
                          v1965 = (std::string::size_type *)(v1964 + 1);
                          v1966 = (std::__shared_weak_count *)v1965[1];
                          v1965[1] = (std::string::size_type)v1960;
                          if (v1966)
                          {
                            v1967 = (unint64_t *)&v1966->__shared_owners_;
                            do
                              v1968 = __ldaxr(v1967);
                            while (__stlxr(v1968 - 1, v1967));
                            if (!v1968)
                            {
                              ((void (*)(std::__shared_weak_count *))v1966->__on_zero_shared)(v1966);
                              std::__shared_weak_count::__release_weak(v1966);
                            }
                            v1381 = *v1965;
                          }
                          v1969 = v1381 && *(_QWORD *)(v1381 + 16);
                          BYTE4(v1959[6 * v1958]) = v1969;
                          if (v1960)
                          {
                            v1970 = (unint64_t *)&v1960->__shared_owners_;
                            do
                              v1971 = __ldaxr(v1970);
                            while (__stlxr(v1971 - 1, v1970));
                            if (!v1971)
                            {
                              ((void (*)(std::__shared_weak_count *))v1960->__on_zero_shared)(v1960);
                              std::__shared_weak_count::__release_weak(v1960);
                            }
                          }
                        }
                        v2126 = 1;
                        goto LABEL_2031;
                      }
                    }
                    memmove(v2055, v2054.__data_, v2054.__size_);
                    goto LABEL_2791;
                  }
                }
                break;
              }
              memmove(v2028, v2027.__data_, v2027.__size_);
              goto LABEL_2742;
            }
          }
          memmove(v1256, v1253, v1255);
          goto LABEL_1866;
        }
        goto LABEL_1607;
      }
    }
  }
  sub_23992A6A0((uint64_t)task_info_out);
LABEL_472:
  v217 = 0;
LABEL_2895:
  v2082 = (char *)v2218;
  if (v2218)
  {
    v2083 = v2219;
    v2084 = v2218;
    if (v2219 != v2218)
    {
      do
      {
        v2085 = *((_QWORD *)v2083 - 1);
        if (v2085)
        {
          MEMORY[0x23B83E2F8](v2085, 0x1000C8052888210);
          *((_QWORD *)v2083 - 1) = 0;
        }
        v2083 -= 24;
      }
      while (v2083 != v2082);
      v2084 = v2218;
    }
    v2219 = v2082;
    operator delete(v2084);
  }
  v2086 = (char *)v2220;
  if (v2220)
  {
    v2087 = v2221;
    v2088 = v2220;
    if (v2221 != v2220)
    {
      do
      {
        v2089 = *((_QWORD *)v2087 - 1);
        if (v2089)
        {
          MEMORY[0x23B83E2F8](v2089 - 16, 0x1000C80451B5BE8);
          *((_QWORD *)v2087 - 1) = 0;
        }
        v2087 -= 24;
      }
      while (v2087 != v2086);
      v2088 = v2220;
    }
    v2221 = v2086;
    operator delete(v2088);
  }
  v2090 = (char *)v2222;
  if (v2222)
  {
    v2091 = v2223;
    v2092 = v2222;
    if (v2223 != v2222)
    {
      do
      {
        v2093 = *((_QWORD *)v2091 - 1);
        if (v2093)
        {
          MEMORY[0x23B83E2F8](v2093, 0x1000C8077774924);
          *((_QWORD *)v2091 - 1) = 0;
        }
        v2091 -= 24;
      }
      while (v2091 != v2090);
      v2092 = v2222;
    }
    v2223 = v2090;
    operator delete(v2092);
  }
LABEL_391:
  if (v2233)
  {
    v2234 = v2233;
    operator delete(v2233);
  }
  if (v2236)
  {
    *(_QWORD *)v2237 = v2236;
    operator delete(v2236);
  }
  v218 = v2307;
  if (v2307 == v2306)
  {
    v219 = 4;
    v218 = v2306;
  }
  else
  {
    if (!v2307)
      goto LABEL_400;
    v219 = 5;
  }
  (*(void (**)(void))(*v218 + 8 * v219))();
LABEL_400:
  v220 = v2309;
  if (v2309 == v2308)
  {
    v221 = 4;
    v220 = v2308;
  }
  else
  {
    if (!v2309)
      goto LABEL_405;
    v221 = 5;
  }
  (*(void (**)(void))(*v220 + 8 * v221))();
LABEL_405:
  v222 = v2311;
  if (v2311 == v2310)
  {
    v223 = 4;
    v222 = v2310;
    goto LABEL_409;
  }
  if (v2311)
  {
    v223 = 5;
LABEL_409:
    (*(void (**)(void))(*v222 + 8 * v223))();
  }
  return v217;
}

void sub_239926394()
{
  uint64_t v0;

  __cxa_end_catch();
  sub_23992A6A0((uint64_t)&v0);
  JUMPOUT(0x239925430);
}

void sub_239926450()
{
  __cxa_end_catch();
  JUMPOUT(0x239925C14);
}

void sub_239926478(uint64_t a1, int a2)
{
  if (!a2)
    JUMPOUT(0x239925CCCLL);
  JUMPOUT(0x239925A50);
}

uint64_t **sub_239926484(uint64_t **a1, int *a2)
{
  uint64_t *v3;
  uint64_t **v4;
  int v5;
  uint64_t **v6;
  int v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;

  v4 = a1 + 1;
  v3 = a1[1];
  v5 = *a2;
  if (v3)
  {
    while (1)
    {
      while (1)
      {
        v6 = (uint64_t **)v3;
        v7 = *((_DWORD *)v3 + 7);
        if (v5 >= v7)
          break;
        v3 = *v6;
        v4 = v6;
        if (!*v6)
          goto LABEL_8;
      }
      if (v7 >= v5)
        break;
      v3 = v6[1];
      if (!v3)
      {
        v4 = v6 + 1;
        goto LABEL_8;
      }
    }
  }
  else
  {
    v6 = a1 + 1;
LABEL_8:
    v8 = (uint64_t *)v6;
    v6 = (uint64_t **)operator new(0x28uLL);
    *((_DWORD *)v6 + 7) = v5;
    *((_WORD *)v6 + 16) = 0;
    *v6 = 0;
    v6[1] = 0;
    v6[2] = v8;
    *v4 = (uint64_t *)v6;
    v9 = (uint64_t *)**a1;
    v10 = (uint64_t *)v6;
    if (v9)
    {
      *a1 = v9;
      v10 = *v4;
    }
    sub_2394213B8(a1[1], v10);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v6 + 4;
}

_QWORD *sub_23992654C(_QWORD *a1, unint64_t a2)
{
  char *v4;
  size_t v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      sub_2394189F8();
    v4 = (char *)operator new(24 * a2);
    *a1 = v4;
    a1[2] = &v4[24 * a2];
    v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_2399265F4(_Unwind_Exception *exception_object)
{
  uint64_t *v1;

  if (*v1)
    sub_239EC303C((uint64_t)(v1 + 1), *v1);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239926614(_QWORD *a1, unint64_t a2)
{
  char *v4;
  size_t v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      sub_2394189F8();
    v4 = (char *)operator new(24 * a2);
    *a1 = v4;
    a1[2] = &v4[24 * a2];
    v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_2399266BC(_Unwind_Exception *exception_object)
{
  uint64_t *v1;

  if (*v1)
    sub_239EC3088((uint64_t)(v1 + 1), *v1);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2399266DC(_QWORD *a1, unint64_t a2)
{
  char *v4;
  size_t v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      sub_2394189F8();
    v4 = (char *)operator new(24 * a2);
    *a1 = v4;
    a1[2] = &v4[24 * a2];
    v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_239926784(_Unwind_Exception *exception_object)
{
  uint64_t *v1;

  if (*v1)
    sub_239EC30D8((uint64_t)(v1 + 1), *v1);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2399267A4(_QWORD *a1, unint64_t a2)
{
  char *v4;
  size_t v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      sub_2394189F8();
    v4 = (char *)operator new(24 * a2);
    *a1 = v4;
    a1[2] = &v4[24 * a2];
    v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_23992684C(_Unwind_Exception *exception_object)
{
  uint64_t *v1;

  if (*v1)
    sub_239EC3124((uint64_t)(v1 + 1), *v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23992686C(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[3];
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  *(std::chrono::system_clock::time_point *)(a1 + 24) = std::chrono::system_clock::now();
  *(_QWORD *)(a1 + 40) = sub_2399FCAC0();
  task_info_outCnt = 93;
  if (task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    return 0;
  v3 = *(_QWORD *)task_info_out;
  v4 = v10;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v3;
  *(_OWORD *)(a1 + 72) = v12;
  v5 = v8;
  *(_QWORD *)(a1 + 88) = v4;
  *(_QWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 64) = v11;
  return 1;
}

uint64_t sub_239926914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[3];
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  *(_QWORD *)(a1 + 168) = a2;
  *(_QWORD *)(a1 + 176) = a3;
  *(std::chrono::system_clock::time_point *)(a1 + 32) = std::chrono::system_clock::now();
  *(_QWORD *)(a1 + 104) = sub_2399FCAC0();
  task_info_outCnt = 93;
  if (task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    return 0;
  v5 = *(_QWORD *)task_info_out;
  v6 = v12;
  *(_QWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 120) = v5;
  *(_OWORD *)(a1 + 136) = v14;
  v7 = v10;
  *(_QWORD *)(a1 + 152) = v6;
  *(_QWORD *)(a1 + 160) = v7;
  *(_QWORD *)(a1 + 128) = v13;
  return 1;
}

char *sub_2399269C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  char *result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >= *(_QWORD *)(a1 + 16))
  {
    result = sub_23992A81C((char **)a1, a2);
    *(_QWORD *)(a1 + 8) = result;
  }
  else
  {
    if (*(char *)(a2 + 23) < 0)
    {
      sub_23941A7F8(*(_BYTE **)(a1 + 8), *(void **)a2, *(_QWORD *)(a2 + 8));
    }
    else
    {
      v5 = *(_OWORD *)a2;
      *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 16);
      *(_OWORD *)v4 = v5;
    }
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(v4 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(v4 + 24) = v7;
    v8 = *(_OWORD *)(a2 + 56);
    v9 = *(_OWORD *)(a2 + 72);
    v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(v4 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(v4 + 88) = v10;
    *(_OWORD *)(v4 + 72) = v9;
    *(_OWORD *)(v4 + 56) = v8;
    v11 = *(_OWORD *)(a2 + 120);
    v12 = *(_OWORD *)(a2 + 136);
    v13 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(v4 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(v4 + 152) = v13;
    *(_OWORD *)(v4 + 136) = v12;
    *(_OWORD *)(v4 + 120) = v11;
    result = (char *)(v4 + 184);
    *(_QWORD *)(a1 + 8) = v4 + 184;
    *(_QWORD *)(a1 + 8) = v4 + 184;
  }
  return result;
}

void sub_239926A98(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_239926AA0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *(_QWORD *)a1) >> 4);
  v5 = a2 >= v4;
  v6 = a2 - v4;
  if (v6 != 0 && v5)
  {
    sub_23992AAE8((void **)a1, v6);
    return;
  }
  if (!v5)
  {
    v7 = *(_QWORD *)a1 + 48 * a2;
    while (1)
    {
      if (v3 == v7)
      {
        *(_QWORD *)(a1 + 8) = v7;
        return;
      }
      if (*(char *)(v3 - 1) < 0)
      {
        operator delete(*(void **)(v3 - 24));
        v8 = *(std::__shared_weak_count **)(v3 - 32);
        if (!v8)
          goto LABEL_6;
      }
      else
      {
        v8 = *(std::__shared_weak_count **)(v3 - 32);
        if (!v8)
          goto LABEL_6;
      }
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
LABEL_6:
      v3 -= 48;
    }
  }
}

_QWORD *sub_239926B74(_QWORD *a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >> 62)
      sub_2394189F8();
    v4 = 4 * a2;
    v5 = (char *)operator new(4 * a2);
    *a1 = v5;
    a1[2] = &v5[4 * a2];
    memset(v5, 255, 4 * a2);
    a1[1] = &v5[v4];
  }
  return a1;
}

void sub_239926BF0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239926C0C(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int *v13;
  int *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __int128 *v39;
  __int128 *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  int *v46;
  int *v47;
  uint64_t v48;
  int v49;

  v1 = *(_DWORD *)(a1 + 8);
  if (v1 < 2)
    return 1;
  v2 = *(unsigned int *)(a1 + 4);
  if (!(_DWORD)v2)
    return 1;
  v3 = *(unsigned int *)(a1 + 12);
  if (!(_DWORD)v3)
    return 1;
  v4 = v1 >> 1;
  v5 = *(_QWORD *)(a1 + 16);
  if (v1 >> 1 <= 1)
    v4 = 1;
  v6 = v1 - 1;
  if (v3 >= 8)
  {
    v22 = 0;
    v23 = 0;
    v24 = v5 + 4 * v3;
    v25 = v2 * v3 * v6;
    v26 = v5 + 16;
    v27 = v2 * v3;
    v28 = v25;
    while (1)
    {
      v29 = 0;
      v30 = v28;
      v31 = v22;
      do
      {
        v32 = 4 * v31;
        v33 = 4 * v30;
        v34 = 4 * (v25 + v23 * -((_DWORD)v2 * (_DWORD)v3) + (_DWORD)v29 * (_DWORD)v3);
        v35 = v24 + v34;
        v36 = v5 + v34;
        v37 = 4 * (v23 * v2 * v3 + v29 * v3);
        if (v5 + v37 < v35 && v36 < v24 + v37)
        {
          v45 = 0;
LABEL_30:
          v46 = (int *)(v5 + 4 * v45 + v32);
          v47 = (int *)(v5 + 4 * v45 + v33);
          v48 = v3 - v45;
          do
          {
            v49 = *v46;
            *v46++ = *v47;
            *v47++ = v49;
            --v48;
          }
          while (v48);
          goto LABEL_21;
        }
        v39 = (__int128 *)(v26 + v32);
        v40 = (__int128 *)(v26 + v33);
        v41 = v3 & 0xFFFFFFF8;
        do
        {
          v42 = *(v39 - 1);
          v43 = *v39;
          v44 = *v40;
          *(v39 - 1) = *(v40 - 1);
          *v39 = v44;
          *(v40 - 1) = v42;
          *v40 = v43;
          v39 += 2;
          v40 += 2;
          v41 -= 8;
        }
        while (v41);
        v45 = v3 & 0xFFFFFFF8;
        if (v45 != v3)
          goto LABEL_30;
LABEL_21:
        ++v29;
        v31 += v3;
        v30 += v3;
      }
      while (v29 != v2);
      ++v23;
      v22 += v27;
      v28 -= v27;
      if (v23 == v4)
        return 1;
    }
  }
  v7 = 0;
  v8 = 0;
  v9 = v2 * v3;
  v10 = v2 * v3 * v6;
  do
  {
    v11 = 0;
    v12 = v2;
    do
    {
      v13 = (int *)(v5 + 4 * (v7 + v11));
      v14 = (int *)(v5 + 4 * (v10 + v11));
      v15 = *v13;
      *v13 = *v14;
      *v14 = v15;
      if ((_DWORD)v3 != 1)
      {
        v16 = v13[1];
        v13[1] = v14[1];
        v14[1] = v16;
        if ((_DWORD)v3 != 2)
        {
          v17 = v13[2];
          v13[2] = v14[2];
          v14[2] = v17;
          if ((_DWORD)v3 != 3)
          {
            v18 = v13[3];
            v13[3] = v14[3];
            v14[3] = v18;
            if ((_DWORD)v3 != 4)
            {
              v19 = v13[4];
              v13[4] = v14[4];
              v14[4] = v19;
              if ((_DWORD)v3 != 5)
              {
                v20 = v13[5];
                v13[5] = v14[5];
                v14[5] = v20;
                if ((_DWORD)v3 != 6)
                {
                  v21 = v13[6];
                  v13[6] = v14[6];
                  v14[6] = v21;
                }
              }
            }
          }
        }
      }
      v11 += v3;
      --v12;
    }
    while (v12);
    ++v8;
    v10 -= v9;
    v7 += v9;
  }
  while (v8 != v4);
  return 1;
}

double sub_239926E78(uint64_t a1, uint64_t a2)
{
  double v3;
  void **v4;
  double result;
  __int128 v6;
  uint64_t v7;

  v3 = *(float *)(a1 + 32) * 100.0;
  if (v3 < 1.0)
    v3 = 1.0;
  if (v3 > 100.0)
    v3 = 100.0;
  *(_WORD *)(a2 + 24) = (int)v3;
  std::operator+<char>();
  v4 = (void **)(a2 + 32);
  if (*(char *)(a2 + 55) < 0)
    operator delete(*v4);
  result = *(double *)&v6;
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

double sub_239926F04@<D0>(const std::__fs::filesystem::path *a1@<X0>, uint64_t a2@<X8>)
{
  std::__fs::filesystem::path::__string_view v3;
  __int128 *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v5;
  std::basic_string_view<_CharT, _Traits>::size_type v6;
  double result;
  __int128 __dst;
  unint64_t v9;

  v3 = std::__fs::filesystem::path::__stem(a1);
  if (v3.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  if (v3.__size_ >= 0x17)
  {
    v5 = (v3.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3.__size_ | 7) != 0x17)
      v5 = v3.__size_ | 7;
    v6 = v5 + 1;
    p_dst = (__int128 *)operator new(v5 + 1);
    *((_QWORD *)&__dst + 1) = v3.__size_;
    v9 = v6 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
  }
  else
  {
    HIBYTE(v9) = v3.__size_;
    p_dst = &__dst;
    if (!v3.__size_)
      goto LABEL_9;
  }
  memmove(p_dst, v3.__data_, v3.__size_);
LABEL_9:
  *((_BYTE *)p_dst + v3.__size_) = 0;
  result = *(double *)&__dst;
  *(_OWORD *)a2 = __dst;
  *(_QWORD *)(a2 + 16) = v9;
  return result;
}

_DWORD *sub_239926FC4@<X0>(_DWORD *result@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v3 = *result - 1;
  if (v3 < 0xD)
    return (_DWORD *)MEMORY[0x23B83DBFC](a2, off_250AF0168[v3]);
  return result;
}

void sub_23992700C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239927028@<X0>(char *__s@<X1>, const void **a2@<X0>, _QWORD *a3@<X8>)
{
  int v6;
  size_t v7;
  _QWORD *result;
  unint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  char *v14;

  v6 = *((char *)a2 + 23);
  if (v6 >= 0)
    v7 = *((unsigned __int8 *)a2 + 23);
  else
    v7 = (size_t)a2[1];
  result = (_QWORD *)strlen(__s);
  v9 = (unint64_t)result + v7;
  if ((unint64_t)result + v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = (size_t)result;
  if (v9 <= 0x16)
  {
    a3[1] = 0;
    a3[2] = 0;
    *a3 = 0;
    *((_BYTE *)a3 + 23) = v9;
    if (!v7)
      goto LABEL_15;
LABEL_11:
    if (v6 >= 0)
      v13 = a2;
    else
      v13 = *a2;
    result = memmove(a3, v13, v7);
    goto LABEL_15;
  }
  v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v9 | 7) != 0x17)
    v11 = v9 | 7;
  v12 = v11 + 1;
  result = operator new(v11 + 1);
  a3[1] = v9;
  a3[2] = v12 | 0x8000000000000000;
  *a3 = result;
  a3 = result;
  if (v7)
    goto LABEL_11;
LABEL_15:
  v14 = (char *)a3 + v7;
  if (v10)
    result = memmove(v14, __s, v10);
  v14[v10] = 0;
  return result;
}

double sub_239927120@<D0>(const std::__fs::filesystem::path *a1@<X0>, uint64_t a2@<X8>)
{
  std::__fs::filesystem::path::__string_view v3;
  __int128 *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v5;
  std::basic_string_view<_CharT, _Traits>::size_type v6;
  double result;
  __int128 __dst;
  unint64_t v9;

  v3 = std::__fs::filesystem::path::__parent_path(a1);
  if (v3.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  if (v3.__size_ >= 0x17)
  {
    v5 = (v3.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3.__size_ | 7) != 0x17)
      v5 = v3.__size_ | 7;
    v6 = v5 + 1;
    p_dst = (__int128 *)operator new(v5 + 1);
    *((_QWORD *)&__dst + 1) = v3.__size_;
    v9 = v6 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
  }
  else
  {
    HIBYTE(v9) = v3.__size_;
    p_dst = &__dst;
    if (!v3.__size_)
      goto LABEL_9;
  }
  memmove(p_dst, v3.__data_, v3.__size_);
LABEL_9:
  *((_BYTE *)p_dst + v3.__size_) = 0;
  result = *(double *)&__dst;
  *(_OWORD *)a2 = __dst;
  *(_QWORD *)(a2 + 16) = v9;
  return result;
}

std::string *sub_2399271E0(std::string *a1, std::string *a2)
{
  std::string::size_type v3;
  BOOL v4;
  std::string::size_type size;

  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  LODWORD(v3) = SHIBYTE(a2->__r_.__value_.__r.__words[2]);
  v4 = (v3 & 0x80000000) != 0;
  size = a2->__r_.__value_.__l.__size_;
  if ((v3 & 0x80000000) != 0)
    a2 = (std::string *)a2->__r_.__value_.__r.__words[0];
  v3 = v3;
  if (v4)
    v3 = size;
  sub_23948900C(a1, a2, (std::string *)((char *)a2 + v3));
  return a1;
}

void sub_239927228(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

char *sub_239927244(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  __int128 v4;
  char *result;

  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= *(_QWORD *)(a1 + 16))
  {
    result = sub_23958837C((char **)a1, a2);
    *(_QWORD *)(a1 + 8) = result;
  }
  else
  {
    if (*(char *)(a2 + 23) < 0)
    {
      sub_23941A7F8(*(_BYTE **)(a1 + 8), *(void **)a2, *(_QWORD *)(a2 + 8));
    }
    else
    {
      v4 = *(_OWORD *)a2;
      *(_QWORD *)(v3 + 16) = *(_QWORD *)(a2 + 16);
      *(_OWORD *)v3 = v4;
    }
    result = (char *)(v3 + 24);
    *(_QWORD *)(a1 + 8) = v3 + 24;
    *(_QWORD *)(a1 + 8) = v3 + 24;
  }
  return result;
}

void sub_2399272D0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

BOOL sub_2399272D8(std::string *a1, std::string *a2)
{
  const std::string *v2;
  std::string::size_type v4;
  std::string::size_type size;
  uint64_t v6;
  BOOL v7;
  std::string __p;
  uint64_t v10;

  v2 = a2;
  memset(&__p, 0, sizeof(__p));
  v4 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  size = a2->__r_.__value_.__l.__size_;
  if ((v4 & 0x80u) != 0)
  {
    a2 = (std::string *)a2->__r_.__value_.__r.__words[0];
    v4 = size;
  }
  sub_23948900C(&__p, a2, (std::string *)((char *)a2 + v4));
  std::__fs::filesystem::__status((const std::__fs::filesystem::path *)&__p, 0);
  v6 = v10;
  if ((_BYTE)v10 && v10 != 255)
  {
    std::string::operator=(a1 + 1, v2);
    a1->__r_.__value_.__s.__data_[5] = 1;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v6)
    v7 = v6 == 255;
  else
    v7 = 1;
  return !v7;
}

void sub_239927390(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399273B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v3 = *(_QWORD *)(a1 + 8);
  }
  if (v3 && *(_QWORD *)(v3 + 16))
  {
    *(_BYTE *)(a1 + 4) = 1;
    return 1;
  }
  else
  {
    *(_BYTE *)(a1 + 4) = 0;
    return 1;
  }
}

uint64_t sub_239927458(uint64_t a1, const void *a2, int a3)
{
  int v5;
  _BYTE *v6;
  _BYTE *v7;
  int64_t v8;
  unint64_t v9;
  size_t v10;
  BOOL v11;
  char *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  _DWORD *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _BYTE *v39;
  char *v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  _OWORD *v44;
  uint64_t v45;
  __int128 *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  unint64_t v61;
  _QWORD *v62;
  int v63;
  int64_t v64;
  char *v65;
  int64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _BYTE *v71;
  uint64_t *v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  unint64_t v83;
  __int128 *v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int v88;
  _BYTE *v89;
  unint64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *__p;
  char *v95;
  void *v96;
  _BYTE *v97;
  char *v98;

  v5 = *(_DWORD *)(a1 + 4);
  v6 = (_BYTE *)operator new[]();
  v7 = v6;
  v8 = *(unsigned int *)(a1 + 4);
  v9 = *(unsigned int *)(a1 + 8);
  v85 = a1;
  v10 = (v9 * v8);
  v90 = v9;
  v91 = v8;
  if ((_DWORD)v10)
  {
    memcpy(v6, a2, v10);
    v9 = v90;
    v8 = v91;
  }
  v96 = 0;
  v97 = 0;
  v98 = 0;
  v11 = (int)v9 < 1 || (int)v8 < 1;
  v89 = v7;
  v86 = v5;
  if (!v11)
  {
    v55 = 0;
    v56 = 0;
    do
    {
      v57 = 0;
      v58 = v5;
      v59 = v5 * v56;
      v93 = v56 << 32;
      v60 = v58 * (v56 - 1);
      v61 = v56 + 1;
      v88 = v58 * (v56 + 1);
      do
      {
        if (!v7[(v59 + v57)])
          goto LABEL_72;
        v63 = v57 - 1;
        if (v57)
        {
          if (!v56)
            goto LABEL_84;
          if (!v7[v60 + v63])
            goto LABEL_96;
        }
        else if (!v56)
        {
LABEL_84:
          v64 = v57 + 1;
          if (!v57)
            goto LABEL_86;
LABEL_85:
          if (!v7[v59 + v63])
            goto LABEL_96;
          goto LABEL_86;
        }
        if (!v7[(v60 + v57)])
          goto LABEL_96;
        v64 = v57 + 1;
        if (v57 + 1 < (unint64_t)v8 && !v7[(v60 + v64)])
          goto LABEL_96;
        if (v57)
          goto LABEL_85;
LABEL_86:
        if (v64 < v8 && !v7[(v59 + v64)]
          || v57 && v61 < v9 && !v7[v88 + v63]
          || v61 < v9 && !v7[(v88 + v57)]
          || v64 < v8 && v61 < v9 && !v7[(v88 + v64)])
        {
LABEL_96:
          if (v55 < v98)
          {
            *(_QWORD *)v55 = v93 | v57;
            v62 = v55 + 8;
          }
          else
          {
            v65 = (char *)v96;
            v66 = v55 - (_BYTE *)v96;
            v67 = (v55 - (_BYTE *)v96) >> 3;
            v68 = v67 + 1;
            if ((unint64_t)(v67 + 1) >> 61)
              sub_2394189F8();
            v69 = v98 - (_BYTE *)v96;
            if ((v98 - (_BYTE *)v96) >> 2 > v68)
              v68 = v69 >> 2;
            if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFF8)
              v70 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v70 = v68;
            if (v70)
            {
              if (v70 >> 61)
                sub_239418A80();
              v71 = operator new(8 * v70);
            }
            else
            {
              v71 = 0;
            }
            v72 = (uint64_t *)&v71[8 * v67];
            *v72 = v93 | v57;
            v62 = v72 + 1;
            if (v55 != v65)
            {
              v73 = v55 - 8 - v65;
              if (v73 < 0x168
                || &v71[v66 - 8 - (v73 & 0xFFFFFFFFFFFFFFF8)] > &v71[v66 - 8]
                || &v55[-(v73 & 0xFFFFFFFFFFFFFFF8) - 8] > v55 - 8
                || (unint64_t)(v55 - v71 - v66) < 0x20)
              {
                v74 = v55;
                v7 = v89;
              }
              else
              {
                v76 = (v73 >> 3) + 1;
                v77 = 8 * (v76 & 0x3FFFFFFFFFFFFFFCLL);
                v74 = &v55[-v77];
                v72 = (uint64_t *)((char *)v72 - v77);
                v78 = &v71[8 * v67 - 16];
                v79 = v55 - 16;
                v80 = v76 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  v81 = *(_OWORD *)v79;
                  *(v78 - 1) = *((_OWORD *)v79 - 1);
                  *v78 = v81;
                  v78 -= 2;
                  v79 -= 32;
                  v80 -= 4;
                }
                while (v80);
                v7 = v89;
                if (v76 == (v76 & 0x3FFFFFFFFFFFFFFCLL))
                {
LABEL_111:
                  v55 = (char *)v96;
                  v96 = v72;
                  v98 = &v71[8 * v70];
                  if (v55)
                    goto LABEL_112;
                  goto LABEL_113;
                }
              }
              do
              {
                v75 = *((_QWORD *)v74 - 1);
                v74 -= 8;
                *--v72 = v75;
              }
              while (v74 != v65);
              goto LABEL_111;
            }
            v7 = v89;
            v96 = v72;
            v98 = &v71[8 * v70];
            if (v55)
LABEL_112:
              operator delete(v55);
LABEL_113:
            v9 = v90;
            v8 = v91;
            v61 = v56 + 1;
          }
          v97 = v62;
          v55 = (char *)v62;
        }
LABEL_72:
        ++v57;
      }
      while (v57 != v8);
      v56 = v61;
      v5 = v86;
    }
    while (v61 != v9);
  }
  v12 = 0;
  __p = 0;
  v95 = 0;
  v13 = v85;
LABEL_10:
  v14 = v96;
  if (v96 != v97)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a3)
        goto LABEL_63;
      --a3;
    }
    v15 = 0;
    v16 = (v97 - (_BYTE *)v96) >> 3;
    if (v16 <= 1)
      v16 = 1;
    v83 = v16;
    v18 = v90;
    v17 = v91;
LABEL_18:
    v19 = 0;
    v87 = v15;
    v20 = (char *)v96 + 8 * v15;
    v21 = *(_QWORD *)(v13 + 16) + 4 * ((*v20 + *(_DWORD *)(v13 + 4) * v20[1]) * *(_DWORD *)(v13 + 12));
    v84 = (__int128 *)(v21 + 16);
    v92 = v21;
    while (1)
    {
      v23 = dword_239F02870[v19];
      v24 = (v23 + *v20);
      if (v23 + *v20 < 0)
        goto LABEL_21;
      if ((int)v24 >= v17)
        goto LABEL_21;
      v25 = (dword_239F02890[v19] + v20[1]);
      if ((v25 & 0x80000000) != 0)
        goto LABEL_21;
      if ((int)v25 >= v18)
        goto LABEL_21;
      v26 = (v24 + v25 * v5);
      if (v7[v26])
        goto LABEL_21;
      v7[v26] = 1;
      v27 = *(unsigned int *)(v13 + 12);
      if ((_DWORD)v27)
      {
        v28 = *(_QWORD *)(v13 + 16);
        v29 = ((v24 + *(_DWORD *)(v13 + 4) * v25) * v27);
        if (v27 < 8 || (unint64_t)(4 * v29 + v28 - v21) < 0x20)
        {
          v30 = 0;
LABEL_31:
          v31 = (int *)(v21 + 4 * v30);
          v32 = (_DWORD *)(v28 + 4 * v30 + 4 * v29);
          v33 = v27 - v30;
          do
          {
            v34 = *v31++;
            *v32++ = v34;
            --v33;
          }
          while (v33);
          goto LABEL_33;
        }
        v30 = v27 & 0xFFFFFFF8;
        v44 = (_OWORD *)(v28 + 4 * v29 + 16);
        v45 = v30;
        v46 = v84;
        do
        {
          v47 = *v46;
          *(v44 - 1) = *(v46 - 1);
          *v44 = v47;
          v46 += 2;
          v44 += 2;
          v45 -= 8;
        }
        while (v45);
        if (v30 != v27)
          goto LABEL_31;
      }
LABEL_33:
      if (v12 >= v95)
      {
        v35 = (v12 - __p) >> 3;
        v36 = v35 + 1;
        if ((unint64_t)(v35 + 1) >> 61)
          sub_2394189F8();
        v37 = v95 - __p;
        if ((v95 - __p) >> 2 > v36)
          v36 = v37 >> 2;
        if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFF8)
          v38 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v38 = v36;
        if (v38)
        {
          if (v38 >> 61)
            sub_239418A80();
          v39 = operator new(8 * v38);
          v40 = &v39[8 * v35];
          *(_QWORD *)v40 = v24 | (v25 << 32);
          v22 = (uint64_t)(v40 + 8);
          if (v12 != __p)
          {
LABEL_43:
            v41 = v12 - 8 - __p;
            if (v41 < 0x168
              || &v39[v12 - __p - 8 - (v41 & 0xFFFFFFFFFFFFFFF8)] > &v39[v12 - __p - 8]
              || &v12[-(v41 & 0xFFFFFFFFFFFFFFF8) - 8] > v12 - 8
              || (unint64_t)(__p - v39) < 0x20)
            {
              v42 = v12;
              v7 = v89;
              v5 = v86;
            }
            else
            {
              v48 = (v41 >> 3) + 1;
              v49 = 8 * (v48 & 0x3FFFFFFFFFFFFFFCLL);
              v42 = &v12[-v49];
              v40 -= v49;
              v50 = &v39[8 * v35 - 16];
              v51 = v12 - 16;
              v52 = v48 & 0x3FFFFFFFFFFFFFFCLL;
              v5 = v86;
              do
              {
                v53 = *(_OWORD *)v51;
                *(v50 - 1) = *((_OWORD *)v51 - 1);
                *v50 = v53;
                v50 -= 2;
                v51 -= 32;
                v52 -= 4;
              }
              while (v52);
              v7 = v89;
              if (v48 == (v48 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_46:
                v12 = __p;
                __p = v40;
                v95 = &v39[8 * v38];
                if (v12)
                  goto LABEL_47;
                goto LABEL_48;
              }
            }
            do
            {
              v43 = *((_QWORD *)v42 - 1);
              v42 -= 8;
              *((_QWORD *)v40 - 1) = v43;
              v40 -= 8;
            }
            while (v42 != __p);
            goto LABEL_46;
          }
        }
        else
        {
          v39 = 0;
          v40 = (char *)(8 * v35);
          *(_QWORD *)(8 * v35) = v24 | (v25 << 32);
          v22 = 8 * v35 + 8;
          if (v12 != __p)
            goto LABEL_43;
        }
        v7 = v89;
        v5 = v86;
        __p = v40;
        v95 = &v39[8 * v38];
        if (v12)
LABEL_47:
          operator delete(v12);
LABEL_48:
        v13 = v85;
        v18 = v90;
        v17 = v91;
        v21 = v92;
        goto LABEL_20;
      }
      *(_QWORD *)v12 = v24 | (v25 << 32);
      v22 = (uint64_t)(v12 + 8);
LABEL_20:
      v12 = (char *)v22;
LABEL_21:
      if (++v19 == 8)
      {
        v15 = v87 + 1;
        if (v87 + 1 != v83)
          goto LABEL_18;
        sub_23992AD34((uint64_t)&v96, __p, v12, (v12 - __p) >> 3);
        v12 = __p;
        goto LABEL_10;
      }
    }
  }
LABEL_63:
  if (__p)
  {
    operator delete(__p);
    v14 = v96;
  }
  if (v14)
  {
    v97 = v14;
    operator delete(v14);
  }
  MEMORY[0x23B83E2F8](v7, 0x1000C8077774924);
  return 1;
}

void sub_239927BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,void *a22,uint64_t a23)
{
  uint64_t v23;

  if (__p)
    operator delete(__p);
  if (a22)
    operator delete(a22);
  MEMORY[0x23B83E2F8](v23, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

void **sub_239927C0C(void **a1)
{
  void **v2;
  void **v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = (void **)*a1;
  if (*a1)
  {
    v3 = (void **)a1[1];
    v4 = *a1;
    if (v3 == v2)
    {
LABEL_14:
      a1[1] = v2;
      operator delete(v4);
      return a1;
    }
    while (1)
    {
      if (*((char *)v3 - 1) < 0)
      {
        operator delete(*(v3 - 3));
        v5 = (std::__shared_weak_count *)*(v3 - 4);
        if (v5)
        {
LABEL_9:
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
      }
      else
      {
        v5 = (std::__shared_weak_count *)*(v3 - 4);
        if (v5)
          goto LABEL_9;
      }
      v3 -= 6;
      if (v3 == v2)
      {
        v4 = *a1;
        goto LABEL_14;
      }
    }
  }
  return a1;
}

void **sub_239927CC0(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  uint64_t v5;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v5 = *((_QWORD *)v3 - 1);
        if (v5)
        {
          MEMORY[0x23B83E2F8](v5, 0x1000C80451B5BE8);
          *((_QWORD *)v3 - 1) = 0;
        }
        v3 -= 24;
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void **sub_239927D40(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  uint64_t v5;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v5 = *((_QWORD *)v3 - 1);
        if (v5)
        {
          MEMORY[0x23B83E2F8](v5, 0x1000C8052888210);
          *((_QWORD *)v3 - 1) = 0;
        }
        v3 -= 24;
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void **sub_239927DC0(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  uint64_t v5;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v5 = *((_QWORD *)v3 - 1);
        if (v5)
        {
          MEMORY[0x23B83E2F8](v5 - 16, 0x1000C80451B5BE8);
          *((_QWORD *)v3 - 1) = 0;
        }
        v3 -= 24;
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void **sub_239927E44(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  uint64_t v5;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v5 = *((_QWORD *)v3 - 1);
        if (v5)
        {
          MEMORY[0x23B83E2F8](v5, 0x1000C8077774924);
          *((_QWORD *)v3 - 1) = 0;
        }
        v3 -= 24;
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_239927EC4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, _QWORD *a8)
{
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t **v38;
  uint64_t *v39;
  uint64_t **v40;
  uint64_t **v41;
  int v42;
  _DWORD *v43;
  uint64_t *v44;
  std::__fs::filesystem::path *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t **v48;
  uint64_t **v49;
  int v50;
  _DWORD *v51;
  uint64_t *v52;
  std::__fs::filesystem::path *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t **v56;
  uint64_t **v57;
  int v58;
  _DWORD *v59;
  uint64_t *v60;
  std::__fs::filesystem::path *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t **v64;
  uint64_t **v65;
  int v66;
  _DWORD *v67;
  uint64_t *v68;
  std::__fs::filesystem::path *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t **v72;
  uint64_t **v73;
  int v74;
  _DWORD *v75;
  uint64_t *v76;
  std::__fs::filesystem::path *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t **v80;
  uint64_t **v81;
  int v82;
  _DWORD *v83;
  uint64_t *v84;
  std::__fs::filesystem::path *v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t **v88;
  int v89;
  _DWORD *v90;
  uint64_t *v91;
  std::__fs::filesystem::path *v92;
  uint64_t v93;
  char *v94;
  __int128 v95;
  char *v96;
  std::__fs::filesystem::path *v97;
  char *v98;
  __int128 v99;
  int v100;
  _BYTE *v101;
  int v102;
  char v103;
  char v104;
  uint64_t v105;
  char v106;
  std::chrono::system_clock::time_point v107;
  char *v108;
  char *v109;
  void *v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  std::__shared_weak_count *v123;
  unint64_t *p_shared_owners;
  unint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  std::chrono::system_clock::time_point v135;
  std::__fs::filesystem::path v137;
  std::__fs::filesystem::path v138;
  std::__fs::filesystem::path __dst;
  uint64_t v140;
  __int16 v141;
  uint64_t *v142[3];
  _QWORD *v143;
  uint64_t *v144;
  uint64_t v145;
  std::string __p;
  void *v147;
  char *v148;
  unint64_t v149;
  uint64_t *v150;
  std::__shared_weak_count *v151;
  int v152;
  std::__fs::filesystem::path __replacement;
  std::__fs::filesystem::path *p_replacement;
  uint64_t v155;
  _QWORD *v156;
  std::string v157;
  uint64_t v158;
  int v159;
  void *v160;
  char v161;
  _QWORD v162[3];
  _QWORD *v163;
  _QWORD v164[3];
  _QWORD *v165;
  _BYTE v166[24];
  _BYTE *v167;
  _BYTE v168[24];
  _BYTE *v169;
  _BYTE v170[24];
  _BYTE *v171;
  _BYTE v172[24];
  _BYTE *v173;
  _QWORD v174[3];
  _QWORD *v175;
  _BYTE v176[24];
  _BYTE *v177;
  _BYTE v178[24];
  _BYTE *v179;
  _BYTE v180[24];
  _BYTE *v181;
  _BYTE v182[24];
  _BYTE *v183;
  _QWORD v184[3];
  _QWORD *v185;
  _BYTE v186[24];
  _BYTE *v187;
  _BYTE v188[24];
  _BYTE *v189;
  _BYTE v190[24];
  _BYTE *v191;
  _BYTE v192[24];
  _BYTE *v193;
  uint64_t v194;

  v194 = *MEMORY[0x24BDAC8D0];
  v15 = (_QWORD *)a8[3];
  if (v15)
  {
    if (v15 == a8)
    {
      v193 = v192;
      (*(void (**)(_QWORD *, _BYTE *))(*a8 + 24))(a8, v192);
    }
    else
    {
      v193 = (_BYTE *)(*(uint64_t (**)(_QWORD *))(*v15 + 16))(v15);
    }
  }
  else
  {
    v193 = 0;
  }
  v16 = a8[7];
  if (!v16)
    goto LABEL_9;
  if ((_QWORD *)v16 != a8 + 4)
  {
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
LABEL_9:
    v191 = (_BYTE *)v16;
    goto LABEL_11;
  }
  v191 = v190;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v16 + 24))(v16, v190);
LABEL_11:
  v17 = a8[11];
  if (!v17)
  {
LABEL_14:
    v189 = (_BYTE *)v17;
    goto LABEL_16;
  }
  if ((_QWORD *)v17 != a8 + 8)
  {
    v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
    goto LABEL_14;
  }
  v189 = v188;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v17 + 24))(v17, v188);
LABEL_16:
  v18 = a8[19];
  if (!v18)
  {
LABEL_19:
    v187 = (_BYTE *)v18;
    goto LABEL_21;
  }
  if ((_QWORD *)v18 != a8 + 16)
  {
    v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 16))(v18);
    goto LABEL_19;
  }
  v187 = v186;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v18 + 24))(v18, v186);
LABEL_21:
  v19 = (char *)operator new(0x60uLL);
  *((_QWORD *)v19 + 1) = 0;
  *((_QWORD *)v19 + 2) = 0;
  *(_QWORD *)v19 = &off_250ADEDC8;
  *(_OWORD *)(v19 + 24) = 0u;
  v20 = (uint64_t *)(v19 + 24);
  *(_OWORD *)(v19 + 72) = 0u;
  *(_OWORD *)(v19 + 40) = 0u;
  *(_OWORD *)(v19 + 56) = 0u;
  *((_QWORD *)v19 + 11) = 0;
  *((_QWORD *)v19 + 9) = v19 + 80;
  v150 = (uint64_t *)(v19 + 24);
  v151 = (std::__shared_weak_count *)v19;
  v185 = 0;
  if (!v193)
    goto LABEL_27;
  v162[0] = &off_250AF00E8;
  v162[1] = v192;
  v163 = v162;
  sub_239587C2C(v162, v184);
  v21 = v163;
  if (v163 == v162)
  {
    v22 = 4;
    v21 = v162;
  }
  else
  {
    if (!v163)
      goto LABEL_27;
    v22 = 5;
  }
  (*(void (**)(void))(*v21 + 8 * v22))();
LABEL_27:
  sub_239586FCC(v174, a8);
  v23 = (uint64_t)v185;
  if (!v185)
  {
LABEL_30:
    v163 = (_QWORD *)v23;
    goto LABEL_32;
  }
  if (v185 != v184)
  {
    v23 = (*(uint64_t (**)(_QWORD *))(*v185 + 16))(v185);
    goto LABEL_30;
  }
  v163 = v162;
  (*(void (**)(_QWORD *, _QWORD *))(v184[0] + 24))(v184, v162);
LABEL_32:
  sub_239587C2C(v162, v174);
  v24 = v163;
  if (v163 == v162)
  {
    v25 = 4;
    v24 = v162;
  }
  else
  {
    if (!v163)
      goto LABEL_37;
    v25 = 5;
  }
  (*(void (**)(void))(*v24 + 8 * v25))();
LABEL_37:
  v147 = 0;
  v148 = 0;
  v149 = 0;
  sub_239586FCC(v164, v174);
  v27 = sub_239917258(a1, a2, a3, v20, a5, a6, a7, v26, (uint64_t)&v147, 1, v164, 1, (const std::__fs::filesystem::path *)a4);
  v28 = v173;
  if (v173 == v172)
  {
    v29 = 4;
    v28 = v172;
  }
  else
  {
    if (!v173)
      goto LABEL_42;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_42:
  v30 = v171;
  if (v171 == v170)
  {
    v31 = 4;
    v30 = v170;
  }
  else
  {
    if (!v171)
      goto LABEL_47;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_47:
  v32 = v169;
  if (v169 == v168)
  {
    v33 = 4;
    v32 = v168;
  }
  else
  {
    if (!v169)
      goto LABEL_52;
    v33 = 5;
  }
  (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_52:
  v34 = v167;
  if (v167 == v166)
  {
    v35 = 4;
    v34 = v166;
  }
  else
  {
    if (!v167)
      goto LABEL_57;
    v35 = 5;
  }
  (*(void (**)(void))(*v34 + 8 * v35))();
LABEL_57:
  v36 = v165;
  if (v165 == v164)
  {
    v37 = 4;
    v36 = v164;
    goto LABEL_61;
  }
  if (v165)
  {
    v37 = 5;
LABEL_61:
    (*(void (**)(void))(*v36 + 8 * v37))();
  }
  if (v191 && ((*(uint64_t (**)(_BYTE *))(*(_QWORD *)v191 + 48))(v191) & 1) != 0)
    goto LABEL_232;
  v135.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  kdebug_trace();
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
  __p.__r_.__value_.__s.__data_[0] = 0;
  sub_23992A5B4((uint64_t)v162, &__p, 0, 0);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  HIDWORD(v140) = 1;
  v141 = 256;
  sub_239953B78(v142);
  LOBYTE(v140) = 1;
  v38 = &v144;
  v39 = v144;
  v40 = &v144;
  v41 = &v144;
  if (v144)
  {
    while (1)
    {
      while (1)
      {
        v41 = (uint64_t **)v39;
        v42 = *((_DWORD *)v39 + 8);
        if (v42 < 2)
          break;
        v39 = *v41;
        v40 = v41;
        if (!*v41)
          goto LABEL_73;
      }
      if (v42 == 1)
        break;
      v39 = v41[1];
      if (!v39)
      {
        v40 = v41 + 1;
        goto LABEL_73;
      }
    }
    v43 = v41;
  }
  else
  {
LABEL_73:
    v43 = operator new(0x48uLL);
    v43[8] = 1;
    *((_QWORD *)v43 + 8) = 0;
    *(_QWORD *)v43 = 0;
    *((_QWORD *)v43 + 1) = 0;
    *((_QWORD *)v43 + 2) = v41;
    *v40 = (uint64_t *)v43;
    v44 = (uint64_t *)v43;
    if (*v143)
    {
      v143 = (_QWORD *)*v143;
      v44 = *v40;
    }
    sub_2394213B8(v144, v44);
    ++v145;
  }
  __replacement.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF0130;
  p_replacement = &__replacement;
  sub_23958886C(&__replacement, (_QWORD *)v43 + 5);
  v45 = p_replacement;
  if (p_replacement == &__replacement)
  {
    v46 = 4;
    v45 = &__replacement;
  }
  else
  {
    if (!p_replacement)
      goto LABEL_82;
    v46 = 5;
  }
  (*(void (**)(void))(v45->__pn_.__r_.__value_.__r.__words[0] + 8 * v46))();
LABEL_82:
  v47 = v144;
  v48 = &v144;
  v49 = &v144;
  if (v144)
  {
    while (1)
    {
      while (1)
      {
        v49 = (uint64_t **)v47;
        v50 = *((_DWORD *)v47 + 8);
        if (v50 < 3)
          break;
        v47 = *v49;
        v48 = v49;
        if (!*v49)
          goto LABEL_89;
      }
      if (v50 == 2)
        break;
      v47 = v49[1];
      if (!v47)
      {
        v48 = v49 + 1;
        goto LABEL_89;
      }
    }
    v51 = v49;
  }
  else
  {
LABEL_89:
    v51 = operator new(0x48uLL);
    v51[8] = 2;
    *((_QWORD *)v51 + 8) = 0;
    *(_QWORD *)v51 = 0;
    *((_QWORD *)v51 + 1) = 0;
    *((_QWORD *)v51 + 2) = v49;
    *v48 = (uint64_t *)v51;
    v52 = (uint64_t *)v51;
    if (*v143)
    {
      v143 = (_QWORD *)*v143;
      v52 = *v48;
    }
    sub_2394213B8(v144, v52);
    ++v145;
  }
  __replacement.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF0130;
  p_replacement = &__replacement;
  sub_23958886C(&__replacement, (_QWORD *)v51 + 5);
  v53 = p_replacement;
  if (p_replacement == &__replacement)
  {
    v54 = 4;
    v53 = &__replacement;
  }
  else
  {
    if (!p_replacement)
      goto LABEL_98;
    v54 = 5;
  }
  (*(void (**)(void))(v53->__pn_.__r_.__value_.__r.__words[0] + 8 * v54))();
LABEL_98:
  v55 = v144;
  v56 = &v144;
  v57 = &v144;
  if (v144)
  {
    while (1)
    {
      while (1)
      {
        v57 = (uint64_t **)v55;
        v58 = *((_DWORD *)v55 + 8);
        if (v58 < 4)
          break;
        v55 = *v57;
        v56 = v57;
        if (!*v57)
          goto LABEL_105;
      }
      if (v58 == 3)
        break;
      v55 = v57[1];
      if (!v55)
      {
        v56 = v57 + 1;
        goto LABEL_105;
      }
    }
    v59 = v57;
  }
  else
  {
LABEL_105:
    v59 = operator new(0x48uLL);
    v59[8] = 3;
    *((_QWORD *)v59 + 8) = 0;
    *(_QWORD *)v59 = 0;
    *((_QWORD *)v59 + 1) = 0;
    *((_QWORD *)v59 + 2) = v57;
    *v56 = (uint64_t *)v59;
    v60 = (uint64_t *)v59;
    if (*v143)
    {
      v143 = (_QWORD *)*v143;
      v60 = *v56;
    }
    sub_2394213B8(v144, v60);
    ++v145;
  }
  __replacement.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF0130;
  p_replacement = &__replacement;
  sub_23958886C(&__replacement, (_QWORD *)v59 + 5);
  v61 = p_replacement;
  if (p_replacement == &__replacement)
  {
    v62 = 4;
    v61 = &__replacement;
  }
  else
  {
    if (!p_replacement)
      goto LABEL_114;
    v62 = 5;
  }
  (*(void (**)(void))(v61->__pn_.__r_.__value_.__r.__words[0] + 8 * v62))();
LABEL_114:
  v63 = v144;
  v64 = &v144;
  v65 = &v144;
  if (v144)
  {
    while (1)
    {
      while (1)
      {
        v65 = (uint64_t **)v63;
        v66 = *((_DWORD *)v63 + 8);
        if (v66 < 5)
          break;
        v63 = *v65;
        v64 = v65;
        if (!*v65)
          goto LABEL_121;
      }
      if (v66 == 4)
        break;
      v63 = v65[1];
      if (!v63)
      {
        v64 = v65 + 1;
        goto LABEL_121;
      }
    }
    v67 = v65;
  }
  else
  {
LABEL_121:
    v67 = operator new(0x48uLL);
    v67[8] = 4;
    *((_QWORD *)v67 + 8) = 0;
    *(_QWORD *)v67 = 0;
    *((_QWORD *)v67 + 1) = 0;
    *((_QWORD *)v67 + 2) = v65;
    *v64 = (uint64_t *)v67;
    v68 = (uint64_t *)v67;
    if (*v143)
    {
      v143 = (_QWORD *)*v143;
      v68 = *v64;
    }
    sub_2394213B8(v144, v68);
    ++v145;
  }
  __replacement.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF0130;
  p_replacement = &__replacement;
  sub_23958886C(&__replacement, (_QWORD *)v67 + 5);
  v69 = p_replacement;
  if (p_replacement == &__replacement)
  {
    v70 = 4;
    v69 = &__replacement;
  }
  else
  {
    if (!p_replacement)
      goto LABEL_130;
    v70 = 5;
  }
  (*(void (**)(void))(v69->__pn_.__r_.__value_.__r.__words[0] + 8 * v70))();
LABEL_130:
  v71 = v144;
  v72 = &v144;
  v73 = &v144;
  if (v144)
  {
    while (1)
    {
      while (1)
      {
        v73 = (uint64_t **)v71;
        v74 = *((_DWORD *)v71 + 8);
        if (v74 < 6)
          break;
        v71 = *v73;
        v72 = v73;
        if (!*v73)
          goto LABEL_137;
      }
      if (v74 == 5)
        break;
      v71 = v73[1];
      if (!v71)
      {
        v72 = v73 + 1;
        goto LABEL_137;
      }
    }
    v75 = v73;
  }
  else
  {
LABEL_137:
    v75 = operator new(0x48uLL);
    v75[8] = 5;
    *((_QWORD *)v75 + 8) = 0;
    *(_QWORD *)v75 = 0;
    *((_QWORD *)v75 + 1) = 0;
    *((_QWORD *)v75 + 2) = v73;
    *v72 = (uint64_t *)v75;
    v76 = (uint64_t *)v75;
    if (*v143)
    {
      v143 = (_QWORD *)*v143;
      v76 = *v72;
    }
    sub_2394213B8(v144, v76);
    ++v145;
  }
  __replacement.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF0130;
  p_replacement = &__replacement;
  sub_23958886C(&__replacement, (_QWORD *)v75 + 5);
  v77 = p_replacement;
  if (p_replacement == &__replacement)
  {
    v78 = 4;
    v77 = &__replacement;
  }
  else
  {
    if (!p_replacement)
      goto LABEL_146;
    v78 = 5;
  }
  (*(void (**)(void))(v77->__pn_.__r_.__value_.__r.__words[0] + 8 * v78))();
LABEL_146:
  v79 = v144;
  v80 = &v144;
  v81 = &v144;
  if (v144)
  {
    while (1)
    {
      while (1)
      {
        v81 = (uint64_t **)v79;
        v82 = *((_DWORD *)v79 + 8);
        if (v82 < 8)
          break;
        v79 = *v81;
        v80 = v81;
        if (!*v81)
          goto LABEL_153;
      }
      if (v82 == 7)
        break;
      v79 = v81[1];
      if (!v79)
      {
        v80 = v81 + 1;
        goto LABEL_153;
      }
    }
    v83 = v81;
  }
  else
  {
LABEL_153:
    v83 = operator new(0x48uLL);
    v83[8] = 7;
    *((_QWORD *)v83 + 8) = 0;
    *(_QWORD *)v83 = 0;
    *((_QWORD *)v83 + 1) = 0;
    *((_QWORD *)v83 + 2) = v81;
    *v80 = (uint64_t *)v83;
    v84 = (uint64_t *)v83;
    if (*v143)
    {
      v143 = (_QWORD *)*v143;
      v84 = *v80;
    }
    sub_2394213B8(v144, v84);
    ++v145;
  }
  __replacement.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF0130;
  p_replacement = &__replacement;
  sub_23958886C(&__replacement, (_QWORD *)v83 + 5);
  v85 = p_replacement;
  if (p_replacement == &__replacement)
  {
    v86 = 4;
    v85 = &__replacement;
  }
  else
  {
    if (!p_replacement)
      goto LABEL_162;
    v86 = 5;
  }
  (*(void (**)(void))(v85->__pn_.__r_.__value_.__r.__words[0] + 8 * v86))();
LABEL_162:
  v87 = v144;
  v88 = &v144;
  if (v144)
  {
    while (1)
    {
      while (1)
      {
        v88 = (uint64_t **)v87;
        v89 = *((_DWORD *)v87 + 8);
        if (v89 < 14)
          break;
        v87 = *v88;
        v38 = v88;
        if (!*v88)
          goto LABEL_169;
      }
      if (v89 == 13)
        break;
      v87 = v88[1];
      if (!v87)
      {
        v38 = v88 + 1;
        goto LABEL_169;
      }
    }
    v90 = v88;
  }
  else
  {
LABEL_169:
    v90 = operator new(0x48uLL);
    v90[8] = 13;
    *((_QWORD *)v90 + 8) = 0;
    *(_QWORD *)v90 = 0;
    *((_QWORD *)v90 + 1) = 0;
    *((_QWORD *)v90 + 2) = v88;
    *v38 = (uint64_t *)v90;
    v91 = (uint64_t *)v90;
    if (*v143)
    {
      v143 = (_QWORD *)*v143;
      v91 = *v38;
    }
    sub_2394213B8(v144, v91);
    ++v145;
  }
  __replacement.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF0130;
  p_replacement = &__replacement;
  sub_23958886C(&__replacement, (_QWORD *)v90 + 5);
  v92 = p_replacement;
  if (p_replacement == &__replacement)
  {
    v93 = 4;
    v92 = &__replacement;
    goto LABEL_177;
  }
  if (p_replacement)
  {
    v93 = 5;
LABEL_177:
    (*(void (**)(void))(v92->__pn_.__r_.__value_.__r.__words[0] + 8 * v93))();
  }
  if (v27)
  {
    sub_239929498((float *)(a5 + 56), v142);
    if (*(char *)(a4 + 23) < 0)
      sub_23941A7F8(&__replacement, *(void **)a4, *(_QWORD *)(a4 + 8));
    else
      __replacement = *(std::__fs::filesystem::path *)a4;
    v27 = sub_2399516C0((uint64_t)&__replacement, a3, v150, (uint64_t)&v140);
    if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
      v94 = v148;
      if ((unint64_t)v148 < v149)
        goto LABEL_184;
LABEL_189:
      v96 = sub_23958837C((char **)&v147, a4);
      goto LABEL_190;
    }
  }
  v94 = v148;
  if ((unint64_t)v148 >= v149)
    goto LABEL_189;
LABEL_184:
  if (*(char *)(a4 + 23) < 0)
  {
    sub_23941A7F8(v94, *(void **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    v95 = *(_OWORD *)a4;
    *((_QWORD *)v94 + 2) = *(_QWORD *)(a4 + 16);
    *(_OWORD *)v94 = v95;
  }
  v96 = v94 + 24;
LABEL_190:
  v148 = v96;
  if (*(char *)(a4 + 23) < 0)
    sub_23941A7F8(&__dst, *(void **)a4, *(_QWORD *)(a4 + 8));
  else
    __dst = *(std::__fs::filesystem::path *)a4;
  memset(&__replacement, 0, sizeof(__replacement));
  sub_23948900C(&__replacement.__pn_, (std::string *)".mtl", (std::string *)"");
  v97 = std::__fs::filesystem::path::replace_extension(&__dst, &__replacement);
  v98 = v148;
  if ((unint64_t)v148 >= v149)
  {
    v148 = sub_23958837C((char **)&v147, (uint64_t)v97);
    if ((SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_203;
    goto LABEL_196;
  }
  if (SHIBYTE(v97->__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(v148, v97->__pn_.__r_.__value_.__l.__data_, v97->__pn_.__r_.__value_.__l.__size_);
    v148 = v98 + 24;
    if ((SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_203;
LABEL_196:
    operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
    if (*(_BYTE *)(a5 + 424))
      v100 = v27;
    else
      v100 = 0;
    if (v100 != 1)
      goto LABEL_200;
LABEL_207:
    sub_239587260((uint64_t)&__replacement, &v140);
    std::string::operator=(&v157, (const std::string *)(a5 + 512));
    v158 = *(_QWORD *)(a5 + 536);
    v159 = *(_DWORD *)(a5 + 544);
    MEMORY[0x23B83DBFC](&v160, "ObjectCapture");
    if (*(char *)(a4 + 23) < 0)
      sub_23941A7F8(&v138, *(void **)a4, *(_QWORD *)(a4 + 8));
    else
      v138 = *(std::__fs::filesystem::path *)a4;
    memset(&v137, 0, sizeof(v137));
    sub_23948900C(&v137.__pn_, (std::string *)".usdz", (std::string *)"");
    std::__fs::filesystem::path::replace_extension(&v138, &v137);
    if (SHIBYTE(v137.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v137.__pn_.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v138.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_214;
    }
    else if ((SHIBYTE(v138.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_214:
      v137 = v138;
      goto LABEL_217;
    }
    sub_23941A7F8(&v137, v138.__pn_.__r_.__value_.__l.__data_, v138.__pn_.__r_.__value_.__l.__size_);
LABEL_217:
    v103 = sub_23995D19C((uint64_t)&v137, a3, v150, (uint64_t)&__replacement);
    v104 = v103;
    if (SHIBYTE(v137.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v137.__pn_.__r_.__value_.__l.__data_);
      if ((v104 & 1) != 0)
      {
LABEL_219:
        if (SHIBYTE(v138.__pn_.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v138.__pn_.__r_.__value_.__l.__data_);
          if ((v161 & 0x80000000) == 0)
          {
LABEL_221:
            if ((SHIBYTE(v157.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_222;
LABEL_313:
            operator delete(v157.__r_.__value_.__l.__data_);
LABEL_222:
            sub_2395879A4((uint64_t)&v155, v156);
            sub_23958781C((uint64_t)&__replacement.__pn_.__r_.__value_.__r.__words[2], (uint64_t)p_replacement);
            v27 = 1;
            v101 = v193;
            if (!v193)
              goto LABEL_224;
            goto LABEL_223;
          }
        }
        else if ((v161 & 0x80000000) == 0)
        {
          goto LABEL_221;
        }
        operator delete(v160);
        if ((SHIBYTE(v157.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_222;
        goto LABEL_313;
      }
    }
    else if ((v103 & 1) != 0)
    {
      goto LABEL_219;
    }
    if (a7)
      *(_DWORD *)(a6 + 384) = 15;
    if (v189)
    {
      *((_BYTE *)&v137.__pn_.__r_.__value_.__s + 23) = 0;
      v137.__pn_.__r_.__value_.__s.__data_[0] = 0;
      v152 = 15;
      (*(void (**)(_BYTE *, int *, std::__fs::filesystem::path *))(*(_QWORD *)v189 + 48))(v189, &v152, &v137);
      if (SHIBYTE(v137.__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v137.__pn_.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v138.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v138.__pn_.__r_.__value_.__l.__data_);
      if ((v161 & 0x80000000) == 0)
      {
LABEL_305:
        if ((SHIBYTE(v157.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_306;
LABEL_316:
        operator delete(v157.__r_.__value_.__l.__data_);
LABEL_306:
        sub_2395879A4((uint64_t)&v155, v156);
        sub_23958781C((uint64_t)&__replacement.__pn_.__r_.__value_.__r.__words[2], (uint64_t)p_replacement);
        v105 = 0;
        v106 = 0;
        if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_229;
        goto LABEL_228;
      }
    }
    else if ((v161 & 0x80000000) == 0)
    {
      goto LABEL_305;
    }
    operator delete(v160);
    if ((SHIBYTE(v157.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_306;
    goto LABEL_316;
  }
  v99 = *(_OWORD *)&v97->__pn_.__r_.__value_.__l.__data_;
  *((_QWORD *)v148 + 2) = *((_QWORD *)&v97->__pn_.__r_.__value_.__l + 2);
  *(_OWORD *)v98 = v99;
  v148 = v98 + 24;
  if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_196;
LABEL_203:
  if (*(_BYTE *)(a5 + 424))
    v102 = v27;
  else
    v102 = 0;
  if (v102 == 1)
    goto LABEL_207;
LABEL_200:
  v101 = v193;
  if (!v193)
  {
LABEL_224:
    if (v27)
      goto LABEL_225;
    goto LABEL_309;
  }
LABEL_223:
  *((_BYTE *)&__replacement.__pn_.__r_.__value_.__s + 23) = 0;
  __replacement.__pn_.__r_.__value_.__s.__data_[0] = 0;
  LODWORD(v138.__pn_.__r_.__value_.__l.__data_) = 1120403456;
  (*(void (**)(_BYTE *, std::__fs::filesystem::path *, std::__fs::filesystem::path *))(*(_QWORD *)v101 + 48))(v101, &v138, &__replacement);
  if ((SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_224;
  operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
  if (!v27)
  {
LABEL_309:
    v105 = 0;
    v106 = 1;
    if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_229;
LABEL_228:
    operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
    goto LABEL_229;
  }
LABEL_225:
  if (v187)
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)v187 + 48))(v187, &v147);
  v105 = 1;
  v106 = 1;
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_228;
LABEL_229:
  sub_2395879A4((uint64_t)&v143, v144);
  sub_23958781C((uint64_t)v142, (uint64_t)v142[1]);
  sub_23992A6A0((uint64_t)v162);
  if ((v106 & 1) == 0)
  {
LABEL_232:
    v105 = 0;
    goto LABEL_233;
  }
  sub_2399FC9C0();
  kdebug_trace();
  v107.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (a7)
    *(double *)(a6 + 376) = (double)(v107.__d_.__rep_ - v135.__d_.__rep_) / 1000000.0;
LABEL_233:
  v108 = (char *)v147;
  if (v147)
  {
    v109 = v148;
    v110 = v147;
    if (v148 != v147)
    {
      do
      {
        if (*(v109 - 1) < 0)
          operator delete(*((void **)v109 - 3));
        v109 -= 24;
      }
      while (v109 != v108);
      v110 = v147;
    }
    v148 = v108;
    operator delete(v110);
  }
  v111 = v183;
  if (v183 == v182)
  {
    v112 = 4;
    v111 = v182;
  }
  else
  {
    if (!v183)
      goto LABEL_246;
    v112 = 5;
  }
  (*(void (**)(void))(*v111 + 8 * v112))();
LABEL_246:
  v113 = v181;
  if (v181 == v180)
  {
    v114 = 4;
    v113 = v180;
  }
  else
  {
    if (!v181)
      goto LABEL_251;
    v114 = 5;
  }
  (*(void (**)(void))(*v113 + 8 * v114))();
LABEL_251:
  v115 = v179;
  if (v179 == v178)
  {
    v116 = 4;
    v115 = v178;
  }
  else
  {
    if (!v179)
      goto LABEL_256;
    v116 = 5;
  }
  (*(void (**)(void))(*v115 + 8 * v116))();
LABEL_256:
  v117 = v177;
  if (v177 == v176)
  {
    v118 = 4;
    v117 = v176;
  }
  else
  {
    if (!v177)
      goto LABEL_261;
    v118 = 5;
  }
  (*(void (**)(void))(*v117 + 8 * v118))();
LABEL_261:
  v119 = v175;
  if (v175 == v174)
  {
    v120 = 4;
    v119 = v174;
  }
  else
  {
    if (!v175)
      goto LABEL_266;
    v120 = 5;
  }
  (*(void (**)(void))(*v119 + 8 * v120))();
LABEL_266:
  v121 = v185;
  if (v185 == v184)
  {
    v122 = 4;
    v121 = v184;
    goto LABEL_270;
  }
  if (v185)
  {
    v122 = 5;
LABEL_270:
    (*(void (**)(void))(*v121 + 8 * v122))();
  }
  v123 = v151;
  if (v151)
  {
    p_shared_owners = (unint64_t *)&v151->__shared_owners_;
    do
      v125 = __ldaxr(p_shared_owners);
    while (__stlxr(v125 - 1, p_shared_owners));
    if (!v125)
    {
      ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
      std::__shared_weak_count::__release_weak(v123);
      v126 = v187;
      if (v187 != v186)
        goto LABEL_276;
LABEL_279:
      v127 = 4;
      v126 = v186;
      goto LABEL_280;
    }
  }
  v126 = v187;
  if (v187 == v186)
    goto LABEL_279;
LABEL_276:
  if (!v126)
    goto LABEL_281;
  v127 = 5;
LABEL_280:
  (*(void (**)(void))(*v126 + 8 * v127))();
LABEL_281:
  v128 = v189;
  if (v189 == v188)
  {
    v129 = 4;
    v128 = v188;
  }
  else
  {
    if (!v189)
      goto LABEL_286;
    v129 = 5;
  }
  (*(void (**)(void))(*v128 + 8 * v129))();
LABEL_286:
  v130 = v191;
  if (v191 == v190)
  {
    v131 = 4;
    v130 = v190;
  }
  else
  {
    if (!v191)
      goto LABEL_291;
    v131 = 5;
  }
  (*(void (**)(void))(*v130 + 8 * v131))();
LABEL_291:
  v132 = v193;
  if (v193 == v192)
  {
    v133 = 4;
    v132 = v192;
    goto LABEL_295;
  }
  if (v193)
  {
    v133 = 5;
LABEL_295:
    (*(void (**)(void))(*v132 + 8 * v133))();
  }
  return v105;
}

void sub_239929114(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a71;
  char a72;
  uint64_t v72;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;

  if (a23 < 0)
    operator delete(__p);
  if (a30 < 0)
    operator delete(a25);
  sub_239586A64((uint64_t)&a57);
  if (a37 < 0)
    operator delete(a32);
  sub_239586B24((uint64_t)&a39);
  sub_23992A6A0((uint64_t)&a71);
  if (a2 == 2)
  {
    __cxa_begin_catch(a1);
    if (a16)
      *(_DWORD *)(a17 + 384) = 1;
    if (*(_QWORD *)(v72 - 168))
    {
      sub_23941A4FC(&a71, "");
      LODWORD(a57) = 1;
      v75 = *(_QWORD *)(v72 - 168);
      if (!v75)
        sub_2394172E0();
      (*(void (**)(uint64_t, void **, void **))(*(_QWORD *)v75 + 48))(v75, &a57, &a71);
      if (a72 < 0)
        operator delete(a71);
    }
    __cxa_end_catch();
    JUMPOUT(0x239928CD4);
  }
  sub_23941A260(&a51);
  sub_239584310(&STACK[0x320]);
  v76 = *(_QWORD **)(v72 - 232);
  if (v76 == (_QWORD *)(v72 - 256))
  {
    v77 = 4;
    v76 = (_QWORD *)(v72 - 256);
  }
  else
  {
    if (!v76)
      goto LABEL_21;
    v77 = 5;
  }
  (*(void (**)(void))(*v76 + 8 * v77))();
LABEL_21:
  sub_239416DA0((uint64_t)&a54);
  v78 = *(_QWORD **)(v72 - 200);
  if (v78 == (_QWORD *)(v72 - 224))
  {
    v79 = 4;
    v78 = (_QWORD *)(v72 - 224);
  }
  else
  {
    if (!v78)
      goto LABEL_26;
    v79 = 5;
  }
  (*(void (**)(void))(*v78 + 8 * v79))();
LABEL_26:
  v80 = *(_QWORD **)(v72 - 168);
  if (v80 == (_QWORD *)(v72 - 192))
  {
    v81 = 4;
    v80 = (_QWORD *)(v72 - 192);
  }
  else
  {
    if (!v80)
      goto LABEL_31;
    v81 = 5;
  }
  (*(void (**)(void))(*v80 + 8 * v81))();
LABEL_31:
  v82 = *(_QWORD **)(v72 - 136);
  if (v82 == (_QWORD *)(v72 - 160))
  {
    v83 = 4;
    v82 = (_QWORD *)(v72 - 160);
  }
  else
  {
    if (!v82)
      goto LABEL_36;
    v83 = 5;
  }
  (*(void (**)(void))(*v82 + 8 * v83))();
LABEL_36:
  v84 = *(_QWORD *)(v72 - 104);
  if (v84 == v72 - 128)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v72 - 128) + 32))(v72 - 128);
    _Unwind_Resume(a1);
  }
  if (!v84)
    _Unwind_Resume(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v84 + 40))(v84);
  _Unwind_Resume(a1);
}

uint64_t sub_239929498(float *a1, uint64_t **a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  uint64_t **v14;
  uint64_t **v15;
  uint64_t **v16;
  int v17;
  char *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t **v22;
  uint64_t **v23;
  int v24;
  char *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t **v29;
  uint64_t **v30;
  int v31;
  char *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t **v36;
  uint64_t **v37;
  int v38;
  char *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t **v43;
  uint64_t **v44;
  int v45;
  char *v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t **v50;
  uint64_t **v51;
  int v52;
  char *v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t **v57;
  uint64_t **v58;
  int v59;
  char *v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t **v64;
  uint64_t **v65;
  int v66;
  char *v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t **v71;
  int v72;
  char *v73;
  uint64_t *v74;
  uint64_t *v75;
  std::string v77;
  __int16 v78;
  std::string v79;
  std::string v80;
  __int16 v81;
  std::string v82;
  std::string v83;
  __int16 v84;
  std::string v85;
  std::string v86;
  __int16 v87;
  std::string v88;
  std::string v89;
  __int16 v90;
  std::string v91;
  std::string v92;
  __int16 v93;
  std::string v94;
  std::string v95;
  __int16 v96;
  std::string __p;
  std::string v98;
  __int16 v99;
  std::string v100;
  std::string __str;
  __int16 v102;
  std::string v103[2];

  *((_BYTE *)&__str.__r_.__value_.__s + 23) = 5;
  strcpy((char *)&__str, "uchar");
  *((_BYTE *)&v103[0].__r_.__value_.__s + 23) = 4;
  strcpy((char *)v103, ".jpg");
  v4 = a1[10] * 100.0;
  if (v4 < 1.0)
    v4 = 1.0;
  if (v4 > 100.0)
    v4 = 100.0;
  v102 = (int)v4;
  std::operator+<char>();
  if (SHIBYTE(v103[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(v103[0].__r_.__value_.__l.__data_);
  v103[0] = v98;
  *((_BYTE *)&v98.__r_.__value_.__s + 23) = 5;
  strcpy((char *)&v98, "uchar");
  *((_BYTE *)&v100.__r_.__value_.__s + 23) = 4;
  strcpy((char *)&v100, ".jpg");
  v5 = a1[20] * 100.0;
  if (v5 < 1.0)
    v5 = 1.0;
  if (v5 > 100.0)
    v5 = 100.0;
  v99 = (int)v5;
  std::operator+<char>();
  if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v100.__r_.__value_.__l.__data_);
  v100 = v95;
  *((_BYTE *)&v95.__r_.__value_.__s + 23) = 5;
  strcpy((char *)&v95, "uchar");
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = 4;
  strcpy((char *)&__p, ".jpg");
  v6 = a1[50] * 100.0;
  if (v6 < 1.0)
    v6 = 1.0;
  if (v6 > 100.0)
    v6 = 100.0;
  v96 = (int)v6;
  std::operator+<char>();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  __p = v92;
  *((_BYTE *)&v92.__r_.__value_.__s + 23) = 5;
  strcpy((char *)&v92, "uchar");
  *((_BYTE *)&v94.__r_.__value_.__s + 23) = 4;
  strcpy((char *)&v94, ".jpg");
  v7 = a1[40] * 100.0;
  if (v7 < 1.0)
    v7 = 1.0;
  if (v7 > 100.0)
    v7 = 100.0;
  v93 = (int)v7;
  std::operator+<char>();
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v94.__r_.__value_.__l.__data_);
  v94 = v89;
  *((_BYTE *)&v89.__r_.__value_.__s + 23) = 5;
  strcpy((char *)&v89, "uchar");
  *((_BYTE *)&v91.__r_.__value_.__s + 23) = 4;
  strcpy((char *)&v91, ".jpg");
  v8 = a1[60] * 100.0;
  if (v8 < 1.0)
    v8 = 1.0;
  if (v8 > 100.0)
    v8 = 100.0;
  v90 = (int)v8;
  std::operator+<char>();
  if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v91.__r_.__value_.__l.__data_);
  v91 = v86;
  *((_BYTE *)&v86.__r_.__value_.__s + 23) = 5;
  strcpy((char *)&v86, "uchar");
  *((_BYTE *)&v88.__r_.__value_.__s + 23) = 4;
  strcpy((char *)&v88, ".jpg");
  v9 = a1[30] * 100.0;
  if (v9 < 1.0)
    v9 = 1.0;
  if (v9 > 100.0)
    v9 = 100.0;
  v87 = (int)v9;
  std::operator+<char>();
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  v88 = v83;
  *((_BYTE *)&v83.__r_.__value_.__s + 23) = 5;
  strcpy((char *)&v83, "uchar");
  *((_BYTE *)&v85.__r_.__value_.__s + 23) = 4;
  strcpy((char *)&v85, ".jpg");
  v10 = a1[70] * 100.0;
  if (v10 < 1.0)
    v10 = 1.0;
  if (v10 > 100.0)
    v10 = 100.0;
  v84 = (int)v10;
  std::operator+<char>();
  if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v85.__r_.__value_.__l.__data_);
  v85 = v80;
  *((_BYTE *)&v80.__r_.__value_.__s + 23) = 5;
  strcpy((char *)&v80, "uchar");
  *((_BYTE *)&v82.__r_.__value_.__s + 23) = 4;
  strcpy((char *)&v82, ".jpg");
  v11 = a1[80] * 100.0;
  if (v11 < 1.0)
    v11 = 1.0;
  if (v11 > 100.0)
    v11 = 100.0;
  v81 = (int)v11;
  std::operator+<char>();
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v82.__r_.__value_.__l.__data_);
  v82 = v77;
  *((_BYTE *)&v77.__r_.__value_.__s + 23) = 5;
  strcpy((char *)&v77, "uchar");
  *((_BYTE *)&v79.__r_.__value_.__s + 23) = 4;
  strcpy((char *)&v79, ".jpg");
  v12 = a1[90] * 100.0;
  if (v12 < 1.0)
    v12 = 1.0;
  if (v12 > 100.0)
    v12 = 100.0;
  v78 = (int)v12;
  std::operator+<char>();
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v79.__r_.__value_.__l.__data_);
  v79 = v103[1];
  v14 = a2 + 1;
  v13 = a2[1];
  v15 = a2 + 1;
  v16 = a2 + 1;
  if (v13)
  {
    while (1)
    {
      while (1)
      {
        v16 = (uint64_t **)v13;
        v17 = *((_DWORD *)v13 + 8);
        if (v17 < 2)
          break;
        v13 = *v16;
        v15 = v16;
        if (!*v16)
          goto LABEL_62;
      }
      if (v17 == 1)
        break;
      v13 = v16[1];
      if (!v13)
      {
        v15 = v16 + 1;
        goto LABEL_62;
      }
    }
    v18 = (char *)v16;
  }
  else
  {
LABEL_62:
    v18 = (char *)operator new(0x60uLL);
    *((_DWORD *)v18 + 8) = 1;
    *(_OWORD *)(v18 + 56) = 0u;
    *(_OWORD *)(v18 + 40) = 0u;
    *((_QWORD *)v18 + 11) = 0;
    *(_OWORD *)(v18 + 72) = 0u;
    v18[63] = 5;
    v18[44] = 114;
    *((_DWORD *)v18 + 10) = 1634231157;
    *((_WORD *)v18 + 32) = 100;
    v18[95] = 4;
    *((_DWORD *)v18 + 18) = 1735420462;
    *(_QWORD *)v18 = 0;
    *((_QWORD *)v18 + 1) = 0;
    *((_QWORD *)v18 + 2) = v16;
    *v15 = (uint64_t *)v18;
    v19 = (uint64_t *)v18;
    v20 = (uint64_t *)**a2;
    if (v20)
    {
      *a2 = v20;
      v19 = *v15;
    }
    sub_2394213B8(a2[1], v19);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::operator=((std::string *)(v18 + 40), &__str);
  *((_WORD *)v18 + 32) = v102;
  std::string::operator=((std::string *)v18 + 3, v103);
  v21 = *v14;
  v22 = a2 + 1;
  v23 = a2 + 1;
  if (*v14)
  {
    while (1)
    {
      while (1)
      {
        v23 = (uint64_t **)v21;
        v24 = *((_DWORD *)v21 + 8);
        if (v24 < 3)
          break;
        v21 = *v23;
        v22 = v23;
        if (!*v23)
          goto LABEL_73;
      }
      if (v24 == 2)
        break;
      v21 = v23[1];
      if (!v21)
      {
        v22 = v23 + 1;
        goto LABEL_73;
      }
    }
    v25 = (char *)v23;
  }
  else
  {
LABEL_73:
    v25 = (char *)operator new(0x60uLL);
    *((_DWORD *)v25 + 8) = 2;
    *(_OWORD *)(v25 + 56) = 0u;
    *(_OWORD *)(v25 + 40) = 0u;
    *((_QWORD *)v25 + 11) = 0;
    *(_OWORD *)(v25 + 72) = 0u;
    v25[63] = 5;
    v25[44] = 114;
    *((_DWORD *)v25 + 10) = 1634231157;
    *((_WORD *)v25 + 32) = 100;
    v25[95] = 4;
    *((_DWORD *)v25 + 18) = 1735420462;
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    *((_QWORD *)v25 + 2) = v23;
    *v22 = (uint64_t *)v25;
    v26 = (uint64_t *)v25;
    v27 = (uint64_t *)**a2;
    if (v27)
    {
      *a2 = v27;
      v26 = *v22;
    }
    sub_2394213B8(a2[1], v26);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::operator=((std::string *)(v25 + 40), &v98);
  *((_WORD *)v25 + 32) = v99;
  std::string::operator=((std::string *)v25 + 3, &v100);
  v28 = *v14;
  v29 = a2 + 1;
  v30 = a2 + 1;
  if (*v14)
  {
    while (1)
    {
      while (1)
      {
        v30 = (uint64_t **)v28;
        v31 = *((_DWORD *)v28 + 8);
        if (v31 < 4)
          break;
        v28 = *v30;
        v29 = v30;
        if (!*v30)
          goto LABEL_84;
      }
      if (v31 == 3)
        break;
      v28 = v30[1];
      if (!v28)
      {
        v29 = v30 + 1;
        goto LABEL_84;
      }
    }
    v32 = (char *)v30;
  }
  else
  {
LABEL_84:
    v32 = (char *)operator new(0x60uLL);
    *((_DWORD *)v32 + 8) = 3;
    *(_OWORD *)(v32 + 56) = 0u;
    *(_OWORD *)(v32 + 40) = 0u;
    *((_QWORD *)v32 + 11) = 0;
    *(_OWORD *)(v32 + 72) = 0u;
    v32[63] = 5;
    v32[44] = 114;
    *((_DWORD *)v32 + 10) = 1634231157;
    *((_WORD *)v32 + 32) = 100;
    v32[95] = 4;
    *((_DWORD *)v32 + 18) = 1735420462;
    *(_QWORD *)v32 = 0;
    *((_QWORD *)v32 + 1) = 0;
    *((_QWORD *)v32 + 2) = v30;
    *v29 = (uint64_t *)v32;
    v33 = (uint64_t *)v32;
    v34 = (uint64_t *)**a2;
    if (v34)
    {
      *a2 = v34;
      v33 = *v29;
    }
    sub_2394213B8(a2[1], v33);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::operator=((std::string *)(v32 + 40), &v95);
  *((_WORD *)v32 + 32) = v96;
  std::string::operator=((std::string *)v32 + 3, &__p);
  v35 = *v14;
  v36 = a2 + 1;
  v37 = a2 + 1;
  if (*v14)
  {
    while (1)
    {
      while (1)
      {
        v37 = (uint64_t **)v35;
        v38 = *((_DWORD *)v35 + 8);
        if (v38 < 5)
          break;
        v35 = *v37;
        v36 = v37;
        if (!*v37)
          goto LABEL_95;
      }
      if (v38 == 4)
        break;
      v35 = v37[1];
      if (!v35)
      {
        v36 = v37 + 1;
        goto LABEL_95;
      }
    }
    v39 = (char *)v37;
  }
  else
  {
LABEL_95:
    v39 = (char *)operator new(0x60uLL);
    *((_DWORD *)v39 + 8) = 4;
    *(_OWORD *)(v39 + 56) = 0u;
    *(_OWORD *)(v39 + 40) = 0u;
    *((_QWORD *)v39 + 11) = 0;
    *(_OWORD *)(v39 + 72) = 0u;
    v39[63] = 5;
    v39[44] = 114;
    *((_DWORD *)v39 + 10) = 1634231157;
    *((_WORD *)v39 + 32) = 100;
    v39[95] = 4;
    *((_DWORD *)v39 + 18) = 1735420462;
    *(_QWORD *)v39 = 0;
    *((_QWORD *)v39 + 1) = 0;
    *((_QWORD *)v39 + 2) = v37;
    *v36 = (uint64_t *)v39;
    v40 = (uint64_t *)v39;
    v41 = (uint64_t *)**a2;
    if (v41)
    {
      *a2 = v41;
      v40 = *v36;
    }
    sub_2394213B8(a2[1], v40);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::operator=((std::string *)(v39 + 40), &v92);
  *((_WORD *)v39 + 32) = v93;
  std::string::operator=((std::string *)v39 + 3, &v94);
  v42 = *v14;
  v43 = a2 + 1;
  v44 = a2 + 1;
  if (*v14)
  {
    while (1)
    {
      while (1)
      {
        v44 = (uint64_t **)v42;
        v45 = *((_DWORD *)v42 + 8);
        if (v45 < 6)
          break;
        v42 = *v44;
        v43 = v44;
        if (!*v44)
          goto LABEL_106;
      }
      if (v45 == 5)
        break;
      v42 = v44[1];
      if (!v42)
      {
        v43 = v44 + 1;
        goto LABEL_106;
      }
    }
    v46 = (char *)v44;
  }
  else
  {
LABEL_106:
    v46 = (char *)operator new(0x60uLL);
    *((_DWORD *)v46 + 8) = 5;
    *(_OWORD *)(v46 + 56) = 0u;
    *(_OWORD *)(v46 + 40) = 0u;
    *((_QWORD *)v46 + 11) = 0;
    *(_OWORD *)(v46 + 72) = 0u;
    v46[63] = 5;
    v46[44] = 114;
    *((_DWORD *)v46 + 10) = 1634231157;
    *((_WORD *)v46 + 32) = 100;
    v46[95] = 4;
    *((_DWORD *)v46 + 18) = 1735420462;
    *(_QWORD *)v46 = 0;
    *((_QWORD *)v46 + 1) = 0;
    *((_QWORD *)v46 + 2) = v44;
    *v43 = (uint64_t *)v46;
    v47 = (uint64_t *)v46;
    v48 = (uint64_t *)**a2;
    if (v48)
    {
      *a2 = v48;
      v47 = *v43;
    }
    sub_2394213B8(a2[1], v47);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::operator=((std::string *)(v46 + 40), &v89);
  *((_WORD *)v46 + 32) = v90;
  std::string::operator=((std::string *)v46 + 3, &v91);
  v49 = *v14;
  v50 = a2 + 1;
  v51 = a2 + 1;
  if (*v14)
  {
    while (1)
    {
      while (1)
      {
        v51 = (uint64_t **)v49;
        v52 = *((_DWORD *)v49 + 8);
        if (v52 < 8)
          break;
        v49 = *v51;
        v50 = v51;
        if (!*v51)
          goto LABEL_117;
      }
      if (v52 == 7)
        break;
      v49 = v51[1];
      if (!v49)
      {
        v50 = v51 + 1;
        goto LABEL_117;
      }
    }
    v53 = (char *)v51;
  }
  else
  {
LABEL_117:
    v53 = (char *)operator new(0x60uLL);
    *((_DWORD *)v53 + 8) = 7;
    *(_OWORD *)(v53 + 56) = 0u;
    *(_OWORD *)(v53 + 40) = 0u;
    *((_QWORD *)v53 + 11) = 0;
    *(_OWORD *)(v53 + 72) = 0u;
    v53[63] = 5;
    v53[44] = 114;
    *((_DWORD *)v53 + 10) = 1634231157;
    *((_WORD *)v53 + 32) = 100;
    v53[95] = 4;
    *((_DWORD *)v53 + 18) = 1735420462;
    *(_QWORD *)v53 = 0;
    *((_QWORD *)v53 + 1) = 0;
    *((_QWORD *)v53 + 2) = v51;
    *v50 = (uint64_t *)v53;
    v54 = (uint64_t *)v53;
    v55 = (uint64_t *)**a2;
    if (v55)
    {
      *a2 = v55;
      v54 = *v50;
    }
    sub_2394213B8(a2[1], v54);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::operator=((std::string *)(v53 + 40), &v86);
  *((_WORD *)v53 + 32) = v87;
  std::string::operator=((std::string *)v53 + 3, &v88);
  v56 = *v14;
  v57 = a2 + 1;
  v58 = a2 + 1;
  if (*v14)
  {
    while (1)
    {
      while (1)
      {
        v58 = (uint64_t **)v56;
        v59 = *((_DWORD *)v56 + 8);
        if (v59 < 9)
          break;
        v56 = *v58;
        v57 = v58;
        if (!*v58)
          goto LABEL_128;
      }
      if (v59 == 8)
        break;
      v56 = v58[1];
      if (!v56)
      {
        v57 = v58 + 1;
        goto LABEL_128;
      }
    }
    v60 = (char *)v58;
  }
  else
  {
LABEL_128:
    v60 = (char *)operator new(0x60uLL);
    *((_DWORD *)v60 + 8) = 8;
    *(_OWORD *)(v60 + 56) = 0u;
    *(_OWORD *)(v60 + 40) = 0u;
    *((_QWORD *)v60 + 11) = 0;
    *(_OWORD *)(v60 + 72) = 0u;
    v60[63] = 5;
    v60[44] = 114;
    *((_DWORD *)v60 + 10) = 1634231157;
    *((_WORD *)v60 + 32) = 100;
    v60[95] = 4;
    *((_DWORD *)v60 + 18) = 1735420462;
    *(_QWORD *)v60 = 0;
    *((_QWORD *)v60 + 1) = 0;
    *((_QWORD *)v60 + 2) = v58;
    *v57 = (uint64_t *)v60;
    v61 = (uint64_t *)v60;
    v62 = (uint64_t *)**a2;
    if (v62)
    {
      *a2 = v62;
      v61 = *v57;
    }
    sub_2394213B8(a2[1], v61);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::operator=((std::string *)(v60 + 40), &v83);
  *((_WORD *)v60 + 32) = v84;
  std::string::operator=((std::string *)v60 + 3, &v85);
  v63 = *v14;
  v64 = a2 + 1;
  v65 = a2 + 1;
  if (*v14)
  {
    while (1)
    {
      while (1)
      {
        v65 = (uint64_t **)v63;
        v66 = *((_DWORD *)v63 + 8);
        if (v66 < 12)
          break;
        v63 = *v65;
        v64 = v65;
        if (!*v65)
          goto LABEL_139;
      }
      if (v66 == 11)
        break;
      v63 = v65[1];
      if (!v63)
      {
        v64 = v65 + 1;
        goto LABEL_139;
      }
    }
    v67 = (char *)v65;
  }
  else
  {
LABEL_139:
    v67 = (char *)operator new(0x60uLL);
    *((_DWORD *)v67 + 8) = 11;
    *(_OWORD *)(v67 + 56) = 0u;
    *(_OWORD *)(v67 + 40) = 0u;
    *((_QWORD *)v67 + 11) = 0;
    *(_OWORD *)(v67 + 72) = 0u;
    v67[63] = 5;
    v67[44] = 114;
    *((_DWORD *)v67 + 10) = 1634231157;
    *((_WORD *)v67 + 32) = 100;
    v67[95] = 4;
    *((_DWORD *)v67 + 18) = 1735420462;
    *(_QWORD *)v67 = 0;
    *((_QWORD *)v67 + 1) = 0;
    *((_QWORD *)v67 + 2) = v65;
    *v64 = (uint64_t *)v67;
    v68 = (uint64_t *)v67;
    v69 = (uint64_t *)**a2;
    if (v69)
    {
      *a2 = v69;
      v68 = *v64;
    }
    sub_2394213B8(a2[1], v68);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::operator=((std::string *)(v67 + 40), &v80);
  *((_WORD *)v67 + 32) = v81;
  std::string::operator=((std::string *)v67 + 3, &v82);
  v70 = *v14;
  v71 = a2 + 1;
  if (*v14)
  {
    while (1)
    {
      while (1)
      {
        v71 = (uint64_t **)v70;
        v72 = *((_DWORD *)v70 + 8);
        if (v72 < 14)
          break;
        v70 = *v71;
        v14 = v71;
        if (!*v71)
          goto LABEL_150;
      }
      if (v72 == 13)
        break;
      v70 = v71[1];
      if (!v70)
      {
        v14 = v71 + 1;
        goto LABEL_150;
      }
    }
    v73 = (char *)v71;
  }
  else
  {
LABEL_150:
    v73 = (char *)operator new(0x60uLL);
    *((_DWORD *)v73 + 8) = 13;
    *(_OWORD *)(v73 + 56) = 0u;
    *(_OWORD *)(v73 + 40) = 0u;
    *((_QWORD *)v73 + 11) = 0;
    *(_OWORD *)(v73 + 72) = 0u;
    v73[63] = 5;
    v73[44] = 114;
    *((_DWORD *)v73 + 10) = 1634231157;
    *((_WORD *)v73 + 32) = 100;
    v73[95] = 4;
    *((_DWORD *)v73 + 18) = 1735420462;
    *(_QWORD *)v73 = 0;
    *((_QWORD *)v73 + 1) = 0;
    *((_QWORD *)v73 + 2) = v71;
    *v14 = (uint64_t *)v73;
    v74 = (uint64_t *)v73;
    v75 = (uint64_t *)**a2;
    if (v75)
    {
      *a2 = v75;
      v74 = *v14;
    }
    sub_2394213B8(a2[1], v74);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::operator=((std::string *)(v73 + 40), &v77);
  *((_WORD *)v73 + 32) = v78;
  std::string::operator=((std::string *)v73 + 3, &v79);
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v79.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v77.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_156:
      if ((SHIBYTE(v82.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_157;
      goto LABEL_175;
    }
  }
  else if ((SHIBYTE(v77.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_156;
  }
  operator delete(v77.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v82.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_157:
    if ((SHIBYTE(v80.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_158;
    goto LABEL_176;
  }
LABEL_175:
  operator delete(v82.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v80.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_158:
    if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_159;
    goto LABEL_177;
  }
LABEL_176:
  operator delete(v80.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_159:
    if ((SHIBYTE(v83.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_160;
    goto LABEL_178;
  }
LABEL_177:
  operator delete(v85.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v83.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_160:
    if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_161;
    goto LABEL_179;
  }
LABEL_178:
  operator delete(v83.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_161:
    if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_162;
    goto LABEL_180;
  }
LABEL_179:
  operator delete(v88.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_162:
    if ((SHIBYTE(v91.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_163;
    goto LABEL_181;
  }
LABEL_180:
  operator delete(v86.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v91.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_163:
    if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_164;
    goto LABEL_182;
  }
LABEL_181:
  operator delete(v91.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_164:
    if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_165;
    goto LABEL_183;
  }
LABEL_182:
  operator delete(v89.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_165:
    if ((SHIBYTE(v92.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_166;
    goto LABEL_184;
  }
LABEL_183:
  operator delete(v94.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v92.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_166:
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_167;
    goto LABEL_185;
  }
LABEL_184:
  operator delete(v92.__r_.__value_.__l.__data_);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_167:
    if ((SHIBYTE(v95.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_168;
    goto LABEL_186;
  }
LABEL_185:
  operator delete(__p.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v95.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_168:
    if ((SHIBYTE(v100.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_169;
    goto LABEL_187;
  }
LABEL_186:
  operator delete(v95.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v100.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_169:
    if ((SHIBYTE(v98.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_170;
    goto LABEL_188;
  }
LABEL_187:
  operator delete(v100.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v98.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_170:
    if ((SHIBYTE(v103[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_171;
LABEL_189:
    operator delete(v103[0].__r_.__value_.__l.__data_);
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return 1;
LABEL_190:
    operator delete(__str.__r_.__value_.__l.__data_);
    return 1;
  }
LABEL_188:
  operator delete(v98.__r_.__value_.__l.__data_);
  if (SHIBYTE(v103[0].__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_189;
LABEL_171:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_190;
  return 1;
}

void sub_23992A4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  uint64_t v56;

  sub_239586ACC((uint64_t)&a14);
  sub_239586ACC((uint64_t)&a21);
  sub_239586ACC((uint64_t)&a28);
  sub_239586ACC((uint64_t)&a35);
  sub_239586ACC((uint64_t)&a42);
  sub_239586ACC((uint64_t)&a49);
  sub_239586ACC((uint64_t)&a56);
  sub_239586ACC(v56 - 224);
  sub_239586ACC(v56 - 168);
  _Unwind_Resume(a1);
}

uint64_t sub_23992A5B4(uint64_t a1, const std::string *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[3];
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  *(_QWORD *)a1 = a3;
  *(_QWORD *)(a1 + 8) = a4;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 192) = 0;
  std::string::operator=((std::string *)(a1 + 16), a2);
  *(std::chrono::system_clock::time_point *)(a1 + 40) = std::chrono::system_clock::now();
  *(_QWORD *)(a1 + 56) = sub_2399FCAC0();
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
  {
    v6 = *(_QWORD *)task_info_out;
    v7 = v13;
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v6;
    *(_OWORD *)(a1 + 88) = v15;
    v8 = v11;
    *(_QWORD *)(a1 + 104) = v7;
    *(_QWORD *)(a1 + 112) = v8;
    *(_QWORD *)(a1 + 80) = v14;
  }
  return a1;
}

void sub_23992A684(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23992A6A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[3];
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  *(_OWORD *)(a1 + 184) = *(_OWORD *)a1;
  *(std::chrono::system_clock::time_point *)(a1 + 48) = std::chrono::system_clock::now();
  *(_QWORD *)(a1 + 120) = sub_2399FCAC0();
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
  {
    v2 = *(_QWORD *)task_info_out;
    v3 = v23;
    *(_QWORD *)(a1 + 128) = v22;
    *(_QWORD *)(a1 + 136) = v2;
    *(_OWORD *)(a1 + 152) = v25;
    v4 = v21;
    *(_QWORD *)(a1 + 168) = v3;
    *(_QWORD *)(a1 + 176) = v4;
    *(_QWORD *)(a1 + 144) = v24;
  }
  v5 = (void **)(a1 + 16);
  v6 = sub_2399FC9C0();
  v7 = v6;
  v8 = *(_QWORD *)(v6 + 8);
  if (v8 >= *(_QWORD *)(v6 + 16))
  {
    v10 = sub_23992A81C((char **)v6, a1 + 16);
  }
  else
  {
    if (*(char *)(a1 + 39) < 0)
    {
      sub_23941A7F8(*(_BYTE **)(v6 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
    }
    else
    {
      v9 = *(_OWORD *)v5;
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(a1 + 32);
      *(_OWORD *)v8 = v9;
    }
    v11 = *(_OWORD *)(a1 + 40);
    *(_OWORD *)(v8 + 40) = *(_OWORD *)(a1 + 56);
    *(_OWORD *)(v8 + 24) = v11;
    v12 = *(_OWORD *)(a1 + 72);
    v13 = *(_OWORD *)(a1 + 88);
    v14 = *(_OWORD *)(a1 + 104);
    *(_OWORD *)(v8 + 104) = *(_OWORD *)(a1 + 120);
    *(_OWORD *)(v8 + 88) = v14;
    *(_OWORD *)(v8 + 72) = v13;
    *(_OWORD *)(v8 + 56) = v12;
    v15 = *(_OWORD *)(a1 + 136);
    v16 = *(_OWORD *)(a1 + 152);
    v17 = *(_OWORD *)(a1 + 168);
    *(_OWORD *)(v8 + 168) = *(_OWORD *)(a1 + 184);
    *(_OWORD *)(v8 + 152) = v17;
    *(_OWORD *)(v8 + 136) = v16;
    *(_OWORD *)(v8 + 120) = v15;
    v10 = (char *)(v8 + 184);
  }
  *(_QWORD *)(v7 + 8) = v10;
  if (*(char *)(a1 + 39) < 0)
    operator delete(*v5);
  return a1;
}

void sub_23992A7FC(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 8) = v3;
  if (a2 == 2)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x23992A7D0);
  }
  sub_239416A48(a1);
}

char *sub_23992A81C(char **a1, uint64_t a2)
{
  char *v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  void **v23;
  char *v25;

  v3 = *a1;
  v4 = a1[1];
  v5 = 0xD37A6F4DE9BD37A7 * ((v4 - *a1) >> 3);
  v6 = v5 + 1;
  if (v5 + 1 > 0x1642C8590B21642)
    sub_2394189F8();
  if (0xA6F4DE9BD37A6F4ELL * ((a1[2] - v3) >> 3) > v6)
    v6 = 0xA6F4DE9BD37A6F4ELL * ((a1[2] - v3) >> 3);
  if (0xD37A6F4DE9BD37A7 * ((a1[2] - v3) >> 3) >= 0xB21642C8590B21)
    v8 = 0x1642C8590B21642;
  else
    v8 = v6;
  if (v8)
  {
    if (v8 > 0x1642C8590B21642)
      sub_239418A80();
    v9 = (char *)operator new(184 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[184 * v5];
  v25 = &v9[184 * v8];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_23941A7F8(v10, *(void **)a2, *(_QWORD *)(a2 + 8));
    v3 = *a1;
    v4 = a1[1];
    v10 = &v9[184 * v5];
  }
  else
  {
    *(_OWORD *)v10 = *(_OWORD *)a2;
    *((_QWORD *)v10 + 2) = *(_QWORD *)(a2 + 16);
  }
  v11 = &v9[184 * v5];
  *(_OWORD *)(v11 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v11 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(v11 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(v11 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(v11 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v11 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(v11 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v11 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 40);
  v13 = v11 + 184;
  *(_OWORD *)(v11 + 40) = v12;
  if (v4 == v3)
  {
    v22 = v3;
  }
  else
  {
    do
    {
      v14 = *(_OWORD *)(v4 - 184);
      *((_QWORD *)v10 - 21) = *((_QWORD *)v4 - 21);
      *(_OWORD *)(v10 - 184) = v14;
      *((_QWORD *)v4 - 22) = 0;
      *((_QWORD *)v4 - 21) = 0;
      *((_QWORD *)v4 - 23) = 0;
      v15 = *((_OWORD *)v4 - 5);
      v17 = *((_OWORD *)v4 - 8);
      v16 = *((_OWORD *)v4 - 7);
      *((_OWORD *)v10 - 6) = *((_OWORD *)v4 - 6);
      *((_OWORD *)v10 - 5) = v15;
      *((_OWORD *)v10 - 8) = v17;
      *((_OWORD *)v10 - 7) = v16;
      v18 = *((_OWORD *)v4 - 9);
      *((_OWORD *)v10 - 10) = *((_OWORD *)v4 - 10);
      *((_OWORD *)v10 - 9) = v18;
      v19 = *((_OWORD *)v4 - 1);
      v21 = *((_OWORD *)v4 - 4);
      v20 = *((_OWORD *)v4 - 3);
      *((_OWORD *)v10 - 2) = *((_OWORD *)v4 - 2);
      *((_OWORD *)v10 - 1) = v19;
      *((_OWORD *)v10 - 4) = v21;
      *((_OWORD *)v10 - 3) = v20;
      v10 -= 184;
      v4 -= 184;
    }
    while (v4 != v3);
    v22 = *a1;
    v3 = a1[1];
  }
  *a1 = v10;
  a1[1] = v13;
  a1[2] = v25;
  if (v3 != v22)
  {
    v23 = (void **)(v3 - 184);
    do
    {
      if (*((char *)v23 + 23) < 0)
        operator delete(*v23);
      v23 -= 23;
    }
    while (v23 + 23 != (void **)v22);
    v3 = v22;
  }
  if (v3)
    operator delete(v3);
  return v13;
}

void sub_23992AA70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23992AA84((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23992AA84(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v5;

  v3 = *(void ***)(a1 + 8);
  v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      v5 = v2 - 23;
      *(_QWORD *)(a1 + 16) = v2 - 23;
      if (*((char *)v2 - 161) < 0)
      {
        operator delete(*v5);
        v5 = *(void ***)(a1 + 16);
      }
      v2 = v5;
    }
    while (v5 != v3);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_23992AAE8(void **a1, unint64_t a2)
{
  _BYTE *v4;
  _BYTE *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  __int128 v25;
  char *v26;
  std::__shared_weak_count *v27;
  unint64_t *p_shared_owners;
  unint64_t v29;

  v4 = a1[1];
  v5 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v5 - v4) >> 4) < a2)
  {
    v6 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (_BYTE *)*a1) >> 4);
    v7 = v6 + a2;
    if (v6 + a2 > 0x555555555555555)
      sub_2394189F8();
    v8 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (_BYTE *)*a1) >> 4);
    if (2 * v8 > v7)
      v7 = 2 * v8;
    if (v8 >= 0x2AAAAAAAAAAAAAALL)
      v9 = 0x555555555555555;
    else
      v9 = v7;
    if (v9)
    {
      if (v9 > 0x555555555555555)
        sub_239418A80();
      v10 = (char *)operator new(48 * v9);
    }
    else
    {
      v10 = 0;
    }
    v14 = &v10[48 * v6];
    v15 = &v10[48 * v9];
    v16 = 48 * a2;
    v17 = &v14[48 * a2];
    v18 = v14 + 8;
    do
    {
      *((_WORD *)v18 - 2) = 0;
      *(_OWORD *)v18 = 0uLL;
      *((_OWORD *)v18 + 1) = 0uLL;
      *((_QWORD *)v18 + 4) = 0;
      v18 += 48;
      v16 -= 48;
    }
    while (v16);
    v19 = (char *)*a1;
    v20 = (char *)a1[1];
    if (v20 == *a1)
    {
      *a1 = v14;
      a1[1] = v17;
      a1[2] = v15;
      if (!v20)
        return;
      goto LABEL_38;
    }
    v21 = 0;
    do
    {
      v22 = &v14[v21];
      v23 = &v20[v21];
      v24 = *(_DWORD *)&v20[v21 - 48];
      *((_WORD *)v22 - 22) = *(_WORD *)&v20[v21 - 44];
      *((_DWORD *)v22 - 12) = v24;
      *(_OWORD *)(v22 - 40) = *(_OWORD *)&v20[v21 - 40];
      *((_QWORD *)v23 - 5) = 0;
      *((_QWORD *)v23 - 4) = 0;
      v25 = *(_OWORD *)&v20[v21 - 24];
      *((_QWORD *)v22 - 1) = *(_QWORD *)&v20[v21 - 8];
      *(_OWORD *)(v22 - 24) = v25;
      *((_QWORD *)v23 - 2) = 0;
      *((_QWORD *)v23 - 1) = 0;
      *((_QWORD *)v23 - 3) = 0;
      v21 -= 48;
    }
    while (&v20[v21] != v19);
    v26 = (char *)*a1;
    v20 = (char *)a1[1];
    *a1 = &v14[v21];
    a1[1] = v17;
    a1[2] = v15;
    if (v20 == v26)
    {
LABEL_35:
      if (!v20)
        return;
LABEL_38:
      operator delete(v20);
      return;
    }
    while (1)
    {
      if (*(v20 - 1) < 0)
      {
        operator delete(*((void **)v20 - 3));
        v27 = (std::__shared_weak_count *)*((_QWORD *)v20 - 4);
        if (v27)
        {
LABEL_30:
          p_shared_owners = (unint64_t *)&v27->__shared_owners_;
          do
            v29 = __ldaxr(p_shared_owners);
          while (__stlxr(v29 - 1, p_shared_owners));
          if (!v29)
          {
            ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
            std::__shared_weak_count::__release_weak(v27);
          }
        }
      }
      else
      {
        v27 = (std::__shared_weak_count *)*((_QWORD *)v20 - 4);
        if (v27)
          goto LABEL_30;
      }
      v20 -= 48;
      if (v20 == v26)
      {
        v20 = v26;
        goto LABEL_35;
      }
    }
  }
  if (a2)
  {
    v11 = &v4[48 * a2];
    v12 = 48 * a2;
    v13 = v4 + 8;
    do
    {
      *((_WORD *)v13 - 2) = 0;
      *(_OWORD *)v13 = 0uLL;
      *((_OWORD *)v13 + 1) = 0uLL;
      *((_QWORD *)v13 + 4) = 0;
      v13 += 48;
      v12 -= 48;
    }
    while (v12);
    a1[1] = v11;
  }
  else
  {
    a1[1] = v4;
  }
}

_QWORD *sub_23992AD34(uint64_t a1, char *a2, char *a3, size_t __sz)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  int64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  int64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  unint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  BOOL v42;
  char v43;
  unint64_t v45;
  uint64_t v46;
  __int128 *v47;
  _OWORD *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  unint64_t v54;
  char *v55;
  char *v56;
  unint64_t v57;
  BOOL v58;
  char v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  __int128 *v63;
  _OWORD *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;

  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD **)a1;
  result = v9;
  if (__sz <= (v8 - (uint64_t)v9) >> 3)
  {
    v18 = *(_QWORD **)(a1 + 8);
    v17 = (_QWORD *)(a1 + 8);
    v14 = v18;
    v19 = (char *)v18 - (char *)v9;
    v20 = v18 - v9;
    if (v20 < __sz)
    {
      v21 = &a2[8 * v20];
      if (v14 == v9)
        goto LABEL_18;
      if ((unint64_t)(v19 - 8) >= 0x78)
      {
        v38 = (v19 & 0xFFFFFFFFFFFFFFF8) - 4;
        v39 = (char *)v9 + v38;
        v40 = &a2[v38];
        v41 = a2 + 4;
        v42 = (char *)v9 + 4 >= &a2[v19 & 0xFFFFFFFFFFFFFFF8] || v41 >= (char *)v9 + (v19 & 0xFFFFFFFFFFFFFFF8);
        v43 = !v42;
        v22 = a2;
        if ((v39 <= a2 || v9 >= (_QWORD *)v40) && (v43 & 1) == 0)
        {
          v45 = ((unint64_t)(v19 - 8) >> 3) + 1;
          v46 = v45 & 0x3FFFFFFFFFFFFFF8;
          result = &v9[v46];
          v22 = &a2[v46 * 8];
          v47 = (__int128 *)(a2 + 32);
          v48 = v9 + 4;
          v49 = v45 & 0x3FFFFFFFFFFFFFF8;
          do
          {
            v51 = *(v47 - 2);
            v50 = *(v47 - 1);
            v53 = *v47;
            v52 = v47[1];
            v47 += 4;
            *(v48 - 2) = v51;
            *(v48 - 1) = v50;
            *v48 = v53;
            v48[1] = v52;
            v48 += 4;
            v49 -= 8;
          }
          while (v49);
          if (v45 == (v45 & 0x3FFFFFFFFFFFFFF8))
          {
LABEL_18:
            if (v21 == a3)
            {
              v16 = 0;
              goto LABEL_68;
            }
            v24 = &a2[v19];
            v25 = a3 - &a2[v19] - 8;
            if (v25 < 0x38)
            {
              v27 = (char *)v14;
            }
            else
            {
              v26 = (char *)v14 - v24;
              v27 = (char *)v14;
              if (v26 >= 0x20)
              {
                v28 = (v25 >> 3) + 1;
                v29 = v28 & 0x3FFFFFFFFFFFFFFCLL;
                v21 += v29 * 8;
                v27 = (char *)&v14[v29];
                v30 = v14 + 2;
                v31 = &a2[8 * v20 + 16];
                v32 = v28 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  v33 = *(_OWORD *)v31;
                  *(v30 - 1) = *((_OWORD *)v31 - 1);
                  *v30 = v33;
                  v30 += 2;
                  v31 += 32;
                  v32 -= 4;
                }
                while (v32);
                if (v28 == (v28 & 0x3FFFFFFFFFFFFFFCLL))
                  goto LABEL_67;
              }
            }
            do
            {
              v70 = *(_QWORD *)v21;
              v21 += 8;
              *(_QWORD *)v27 = v70;
              v27 += 8;
            }
            while (v21 != a3);
LABEL_67:
            v16 = v27 - (char *)v14;
            goto LABEL_68;
          }
        }
      }
      else
      {
        v22 = a2;
      }
      do
      {
        v23 = *(_QWORD *)v22;
        v22 += 8;
        *result++ = v23;
      }
      while (v22 != v21);
      goto LABEL_18;
    }
    if (a2 == a3)
    {
      v35 = (char *)v9;
    }
    else
    {
      v34 = a3 - a2 - 8;
      if (v34 < 0x78
        || ((v54 = v34 & 0xFFFFFFFFFFFFFFF8 | 4,
             v55 = (char *)v9 + v54,
             v56 = &a2[v54],
             v57 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8,
             (char *)v9 + 4 < &a2[v57])
          ? (v58 = a2 + 4 >= (char *)v9 + v57)
          : (v58 = 1),
            v58 ? (v59 = 0) : (v59 = 1),
            v55 > a2 ? (v60 = v9 >= (_QWORD *)v56) : (v60 = 1),
            !v60 || (v59 & 1) != 0))
      {
        v35 = (char *)v9;
        v36 = a2;
      }
      else
      {
        v61 = (v34 >> 3) + 1;
        v62 = v61 & 0x3FFFFFFFFFFFFFF8;
        v35 = (char *)&v9[v62];
        v36 = &a2[v62 * 8];
        v63 = (__int128 *)(a2 + 32);
        v64 = v9 + 4;
        v65 = v61 & 0x3FFFFFFFFFFFFFF8;
        do
        {
          v67 = *(v63 - 2);
          v66 = *(v63 - 1);
          v69 = *v63;
          v68 = v63[1];
          v63 += 4;
          *(v64 - 2) = v67;
          *(v64 - 1) = v66;
          *v64 = v69;
          v64[1] = v68;
          v64 += 4;
          v65 -= 8;
        }
        while (v65);
        if (v61 == (v61 & 0x3FFFFFFFFFFFFFF8))
          goto LABEL_32;
      }
      do
      {
        v37 = *(_QWORD *)v36;
        v36 += 8;
        *(_QWORD *)v35 = v37;
        v35 += 8;
      }
      while (v36 != a3);
    }
LABEL_32:
    v16 = v35 - (char *)v9;
    v14 = v9;
    goto LABEL_68;
  }
  if (v9)
  {
    *(_QWORD *)(a1 + 8) = v9;
    operator delete(v9);
    v8 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  if (__sz >> 61)
    goto LABEL_69;
  v11 = v8 >> 2;
  if (v8 >> 2 <= __sz)
    v11 = __sz;
  v42 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8;
  v12 = 0x1FFFFFFFFFFFFFFFLL;
  if (!v42)
    v12 = v11;
  if (v12 >> 61)
LABEL_69:
    sub_2394189F8();
  v13 = v12;
  result = operator new(8 * v12);
  v14 = result;
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = result;
  *(_QWORD *)(a1 + 16) = &result[v13];
  v15 = (char *)result;
  if (a2 != a3)
  {
    result = memcpy(result, a2, ((a3 - a2 - 8) & 0xFFFFFFFFFFFFFFF8) + 8);
    v15 = (char *)v14 + ((a3 - a2 - 8) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  v16 = v15 - (char *)v14;
  v17 = (_QWORD *)(a1 + 8);
LABEL_68:
  *v17 = (char *)v14 + v16;
  return result;
}

void sub_23992B06C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23992B080(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF00E8;
  result[1] = v3;
  return result;
}

uint64_t sub_23992B0B4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF00E8;
  a2[1] = v2;
  return result;
}

uint64_t sub_23992B0D0(uint64_t a1, float *a2)
{
  uint64_t result;
  float v3;
  float v4;

  result = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 24);
  if (result)
  {
    v3 = *a2 / 100.0 * 95.0;
    v4 = v3;
    return (*(uint64_t (**)(uint64_t, float *))(*(_QWORD *)result + 48))(result, &v4);
  }
  return result;
}

void sub_23992B134()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23992B148()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF0130;
  return result;
}

void sub_23992B16C(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF0130;
}

uint64_t sub_23992B184(uint64_t a1, uint64_t a2)
{
  void *v2;
  int v3;

  v2 = *(void **)a2;
  v3 = *(char *)(a2 + 23);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v3 < 0)
    operator delete(v2);
  return 1;
}

void sub_23992B1BC()
{
  JUMPOUT(0x23B83E2F8);
}

void sub_23992B1D4(uint64_t a1, uint64_t a2, uint64_t a3, float32x4_t *a4, double a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  int v27;
  unsigned int *v28;
  int v29;
  BOOL v33;
  BOOL v34;
  _BOOL4 v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  unsigned int *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  float32x4_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  unsigned int *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  float32x4_t v74;
  float32x4_t v75;
  float v76;
  float32x4_t v77;
  double v78;
  BOOL v79;
  float32x4_t v80;
  unint64_t v81;
  _QWORD *v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  void *exception;
  uint64_t v87;
  float32x4_t *v88;
  float32x4_t v89;
  float32x4_t v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  void *__p[2];
  char v95;
  unsigned int v96;

  v96 = -1;
  v95 = 12;
  strcpy((char *)__p, "flags hedges");
  sub_23992B82C((_QWORD *)a1, &v96, (uint64_t)__p);
  if (v95 < 0)
  {
    operator delete(__p[0]);
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * v96);
    v12 = *v13;
    v11 = (std::__shared_weak_count *)v13[1];
    if (!v11)
      goto LABEL_9;
  }
  else
  {
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * v96);
    v12 = *v10;
    v11 = (std::__shared_weak_count *)v10[1];
    if (!v11)
      goto LABEL_9;
  }
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldxr(p_shared_owners);
  while (__stxr(v15 + 1, p_shared_owners));
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (v16)
  {
LABEL_9:
    v17 = *(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128);
    if (!v17)
      goto LABEL_84;
    goto LABEL_10;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v17 = *(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128);
  if (!v17)
    goto LABEL_84;
LABEL_10:
  v18 = 0;
  v19 = v17 / 20;
  v20 = *(_QWORD *)(v12 + 40);
  if (v19 <= 1)
    v21 = 1;
  else
    v21 = v19;
  do
  {
    *(_QWORD *)(v20 + 8 * (v18 >> 6)) &= ~(1 << v18);
    ++v18;
  }
  while (v21 != v18);
  for (i = 0; i != v21; ++i)
  {
    v93 = i;
    v23 = *(_QWORD *)(v12 + 40);
    v24 = i >> 6;
    v25 = *(_QWORD *)(v23 + 8 * v24);
    if ((v25 & (1 << i)) == 0)
    {
      *(_QWORD *)(v23 + 8 * v24) = v25 | (1 << i);
      v26 = (_DWORD *)sub_239962518(a1 + 104, &v93);
      *(_QWORD *)(*(_QWORD *)(v12 + 40) + (((unint64_t)*v26 >> 3) & 0x1FFFFFF8)) |= 1 << *v26;
      v27 = *(_DWORD *)(*(_QWORD *)(a2 + 40) + 4 * *(unsigned int *)(sub_239962518(a1 + 104, &v93) + 12));
      v28 = (unsigned int *)sub_239962518(a1 + 104, &v93);
      v29 = *(_DWORD *)(*(_QWORD *)(a2 + 40) + 4 * *(unsigned int *)(sub_239962518(a1 + 104, v28) + 12));
      if ((v27 != 1 || v29 != 1) && (v27 != 1 || v29 != 4) && (v27 != 4 || v29 != 1))
      {
        v33 = v27 == 4;
        v34 = v29 == 2;
        if (v29 != 2)
          v33 = 0;
        if (v29 == 4)
          v34 = 1;
        if (v27 != 2)
          v34 = 0;
        if (!v34 && !v33)
        {
          v36 = v27 == 2 && v29 == 1;
          v37 = v29 == 2 && v27 == 1;
          if (v37 || v36)
          {
            v87 = a3;
            v88 = a4;
            v38 = *(unsigned int *)(sub_239962518(a1 + 104, &v93) + 12);
            v39 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
            v40 = *v39;
            v41 = (std::__shared_weak_count *)v39[1];
            if (v41)
            {
              v42 = (unint64_t *)&v41->__shared_owners_;
              do
                v43 = __ldxr(v42);
              while (__stxr(v43 + 1, v42));
              do
                v44 = __ldaxr(v42);
              while (__stlxr(v44 - 1, v42));
              if (!v44)
              {
                ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
                std::__shared_weak_count::__release_weak(v41);
              }
            }
            v89 = *(float32x4_t *)(*(_QWORD *)(v40 + 40) + 16 * v38);
            v45 = (unsigned int *)sub_239962518(a1 + 104, &v93);
            v46 = *(unsigned int *)(sub_239962518(a1 + 104, v45) + 12);
            v47 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
            v48 = *v47;
            v49 = (std::__shared_weak_count *)v47[1];
            if (v49)
            {
              v50 = (unint64_t *)&v49->__shared_owners_;
              do
                v51 = __ldxr(v50);
              while (__stxr(v51 + 1, v50));
              do
                v52 = __ldaxr(v50);
              while (__stlxr(v52 - 1, v50));
              if (!v52)
              {
                ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
                std::__shared_weak_count::__release_weak(v49);
              }
            }
            v53.i64[0] = 0x3F0000003F000000;
            v53.i64[1] = 0x3F0000003F000000;
            *(float32x4_t *)__p = vmulq_f32(vaddq_f32(v89, *(float32x4_t *)(*(_QWORD *)(v48 + 40) + 16 * v46)), v53);
            v54 = *(unsigned int *)(sub_239962518(a1 + 104, &v93) + 12);
            v55 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
            v56 = *v55;
            v57 = (std::__shared_weak_count *)v55[1];
            if (v57)
            {
              v58 = (unint64_t *)&v57->__shared_owners_;
              do
                v59 = __ldxr(v58);
              while (__stxr(v59 + 1, v58));
              do
                v60 = __ldaxr(v58);
              while (__stlxr(v60 - 1, v58));
              if (!v60)
              {
                ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
                std::__shared_weak_count::__release_weak(v57);
              }
            }
            v90 = *(float32x4_t *)(*(_QWORD *)(v56 + 40) + 16 * v54);
            v61 = (unsigned int *)sub_239962518(a1 + 104, &v93);
            v62 = *(unsigned int *)(sub_239962518(a1 + 104, v61) + 12);
            v63 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
            v64 = *v63;
            v65 = (std::__shared_weak_count *)v63[1];
            if (v65)
            {
              v66 = (unint64_t *)&v65->__shared_owners_;
              do
                v67 = __ldxr(v66);
              while (__stxr(v67 + 1, v66));
              do
                v68 = __ldaxr(v66);
              while (__stlxr(v68 - 1, v66));
              if (!v68)
              {
                ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
                std::__shared_weak_count::__release_weak(v65);
              }
            }
            v69 = (float32x4_t)xmmword_239F02850;
            v70 = vsubq_f32(*(float32x4_t *)(*(_QWORD *)(v64 + 40) + 16 * v62), v90);
            a4 = v88;
            v71 = *v88;
            v72 = vmulq_f32(v70, v70);
            v72.i32[3] = 0;
            v73 = vpaddq_f32(v72, v72);
            v74 = vpaddq_f32(v73, v73);
            if (v74.f32[0] > 0.0)
              v69 = vdivq_f32(v70, vsqrtq_f32(v74));
            v75 = vmulq_f32(v71, v70);
            v75.i32[3] = 0;
            v76 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v75, v75));
            v77 = vmulq_f32(v71, v69);
            v77.i32[3] = 0;
            v79 = fabsf(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v77, v77))) < a5;
            v78 = fabsf(v76);
            v79 = v79 || v78 < a5;
            a3 = v87;
            if (!v79)
            {
              v80 = vmulq_f32(v90, v71);
              v80.i32[3] = 0;
              *(float32x4_t *)__p = vaddq_f32(v90, vmulq_n_f32(v70, (float)-(float)(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v80, v80))+ v88[1].f32[0])/ v76));
            }
            v91 = -1;
            v92 = sub_23992B920(a1, __p, &v91);
            sub_23996428C(a1, &v93, &v92, 0);
            v81 = v92;
            *(_DWORD *)(*(_QWORD *)(a2 + 40) + 4 * v92) = 4;
            *(_QWORD *)(*(_QWORD *)(v87 + 40) + ((v81 >> 3) & 0x1FFFFFF8)) |= 1 << v81;
          }
          else if (v27 != 4 || v29 != 4)
          {
            exception = __cxa_allocate_exception(0x10uLL);
            MEMORY[0x23B83DB6C](exception, "Invalid he status.");
            __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
          }
        }
      }
    }
  }
LABEL_84:
  if (v96 != -1)
  {
    v82 = (_QWORD *)(*(_QWORD *)(a1 + 32) + 16 * v96);
    v83 = (std::__shared_weak_count *)v82[1];
    *v82 = 0;
    v82[1] = 0;
    if (v83)
    {
      v84 = (unint64_t *)&v83->__shared_owners_;
      do
        v85 = __ldaxr(v84);
      while (__stlxr(v85 - 1, v84));
      if (!v85)
      {
        ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
        std::__shared_weak_count::__release_weak(v83);
      }
    }
  }
}

void sub_23992B7E8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_23992B7FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_23992B810(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23992B82C(_QWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  char v14;

  v14 = 0;
  *a2 = sub_23992C744((uint64_t)(a1 + 4), (uint64_t)&v14, a3);
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 24))(a1);
  v5 = (uint64_t *)a1[4];
  v6 = (uint64_t *)a1[5];
  if (v5 != v6)
  {
    v7 = v4;
    do
    {
      v8 = *v5;
      v9 = (std::__shared_weak_count *)v5[1];
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(p_shared_owners);
        while (__stxr(v11 + 1, p_shared_owners));
      }
      if (v8)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 32))(v8, v7);
      if (v9)
      {
        v12 = (unint64_t *)&v9->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v5 += 2;
    }
    while (v5 != v6);
  }
}

void sub_23992B908(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EBED3C();
  _Unwind_Resume(exception_object);
}

unint64_t sub_23992B920(uint64_t a1, _OWORD *a2, _DWORD *a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t *v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;

  v5 = sub_239962620((void **)(a1 + 104), a3);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  v7 = *(uint64_t **)(a1 + 8);
  v8 = *(uint64_t **)(a1 + 16);
  if (v7 != v8)
  {
    v9 = v6;
    do
    {
      v10 = *v7;
      v11 = (std::__shared_weak_count *)v7[1];
      if (v11)
      {
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          v13 = __ldxr(p_shared_owners);
        while (__stxr(v13 + 1, p_shared_owners));
      }
      if (v10)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v10 + 32))(v10, v9);
      if (v11)
      {
        v14 = (unint64_t *)&v11->__shared_owners_;
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      v7 += 2;
    }
    while (v7 != v8);
    v7 = *(uint64_t **)(a1 + 8);
  }
  v16 = &v7[2 * *(unsigned int *)(a1 + 176)];
  v18 = *v16;
  v17 = (std::__shared_weak_count *)v16[1];
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  *(_OWORD *)(*(_QWORD *)(v18 + 40) + 16 * v5) = *a2;
  return v5;
}

void sub_23992BA64(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EC0960();
  _Unwind_Resume(exception_object);
}

uint64_t sub_23992BA7C(size_t a1, float32x4_t *a2, char a3, int *a4, char a5, double a6)
{
  __int128 v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  float v14;
  uint64_t *v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  float32x4_t v22;
  double v23;
  int v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _DWORD *v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unint64_t v48;
  int v49;
  BOOL v50;
  BOOL v51;
  uint64_t v52;
  char *v53;
  size_t v54;
  size_t v55;
  void **p_dst;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unsigned int v67;
  unint64_t v68;
  uint64_t v69;
  unsigned int i;
  unsigned int *v71;
  uint64_t v72;
  double v73;
  double v74;
  unint64_t v75;
  unsigned int v76;
  float *v77;
  double v78;
  double v79;
  double v80;
  BOOL v81;
  BOOL v82;
  BOOL v83;
  BOOL v84;
  uint64_t *v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  float32x4_t v92;
  uint64_t *v93;
  uint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  void *v99;
  int v100;
  uint64_t *v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  uint64_t *v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  uint64_t v110;
  uint64_t v111;
  int v112;
  char *v113;
  size_t v114;
  void *v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  float v121;
  uint64_t **v122;
  unsigned int v123;
  void **__dst;
  size_t v125;
  unint64_t v126;
  unsigned int v127;
  unsigned int v128;
  float32x4_t v129;
  int v130;
  int32x4_t v131;
  __int128 v132;
  void *__p[4];

  if ((a3 & 1) == 0)
  {
    a2[1].f32[0] = -a2[1].f32[0];
    *a2 = vnegq_f32(*a2);
  }
  v129 = 0uLL;
  v130 = 0;
  *(_QWORD *)&v10 = 0x80000000800000;
  *((_QWORD *)&v10 + 1) = 0x80000000800000;
  v131 = vdupq_n_s32(0x7F7FFFFFu);
  v132 = v10;
  sub_23992E814(a1, &v129);
  v11 = v131.i64[0];
  v12 = v129.f32[0];
  if (a6 == 0.0)
    a6 = v129.f32[0] / 1000.0;
  v121 = *(float *)&v131.i32[2];
  v13 = v132;
  v14 = *((float *)&v132 + 2);
  v128 = -1;
  HIBYTE(__p[2]) = 16;
  strcpy((char *)__p, "CutStatus vertex");
  sub_23992C55C((_QWORD *)a1, &v128, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0)
    operator delete(__p[0]);
  v122 = (uint64_t **)(a1 + 8);
  v15 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * v128);
  v17 = *v15;
  v16 = (std::__shared_weak_count *)v15[1];
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(p_shared_owners);
    while (__stxr(v19 + 1, p_shared_owners));
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (*(_QWORD *)(a1 + 112) != *(_QWORD *)(a1 + 104))
  {
    v21 = 0;
    do
    {
      v25 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v27 = *v25;
      v26 = (std::__shared_weak_count *)v25[1];
      if (v26)
      {
        v28 = (unint64_t *)&v26->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      v22 = vmulq_f32(*(float32x4_t *)(*(_QWORD *)(v27 + 40) + 16 * v21), *a2);
      v22.i32[3] = 0;
      v23 = (float)(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v22, v22)) + a2[1].f32[0]);
      if (v23 >= -a6)
        v24 = 4;
      else
        v24 = 2;
      if (a6 < v23)
        v24 = 1;
      *(_DWORD *)(*(_QWORD *)(v17 + 40) + 4 * v21++) = v24;
    }
    while (v21 < (uint64_t)(*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2);
  }
  v127 = -1;
  __p[0] = operator new(0x19uLL);
  *(_OWORD *)&__p[1] = xmmword_239EC7360;
  strcpy((char *)__p[0], "PlaneCutAffected vertex");
  sub_23992C650((_QWORD *)a1, &v127, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0)
    operator delete(__p[0]);
  v31 = &(*v122)[2 * v127];
  v32 = *v31;
  v33 = (std::__shared_weak_count *)v31[1];
  if (v33)
  {
    v34 = (unint64_t *)&v33->__shared_owners_;
    do
      v35 = __ldxr(v34);
    while (__stxr(v35 + 1, v34));
    do
      v36 = __ldaxr(v34);
    while (__stlxr(v36 - 1, v34));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  sub_23992B1D4(a1, v17, v32, a2, a6);
  if (*(_QWORD *)(a1 + 160) != *(_QWORD *)(a1 + 152))
  {
    v37 = 0;
    do
    {
      v38 = operator new(0xCuLL);
      __p[1] = v38 + 3;
      __p[2] = v38 + 3;
      *(_QWORD *)v38 = -1;
      v38[2] = -1;
      __p[0] = v38;
      LODWORD(__dst) = v37;
      sub_23996362C(a1, (unsigned int *)&__dst, (uint64_t)__p);
      v39 = __p[0];
      v40 = *(_QWORD *)(v17 + 40);
      v42 = *(unsigned int *)__p[0];
      v41 = *((unsigned int *)__p[0] + 1);
      v43 = *(_DWORD *)(v40 + 4 * v42);
      if (v43 == 1)
        v44 = 1;
      else
        v44 = 4;
      if (v43 == 2)
        v45 = 2;
      else
        v45 = v44;
      v46 = *(_DWORD *)(v40 + 4 * v41);
      if (v46 == 2)
        v45 = 2;
      if (v46 == 1)
        v47 = 1;
      else
        v47 = v45;
      v48 = *((unsigned int *)__p[0] + 2);
      v49 = *(_DWORD *)(v40 + 4 * v48);
      if (v49 == 1)
        goto LABEL_37;
      v50 = v49 == 2 || v47 == 4;
      v51 = v50 || v47 == 2;
      if (!v51
        || (v52 = *(_QWORD *)(v32 + 40),
            *(_QWORD *)(v52 + ((v42 >> 3) & 0x1FFFFFF8)) |= 1 << v42,
            *(_QWORD *)(v52 + ((v41 >> 3) & 0x1FFFFFF8)) |= 1 << v41,
            *(_QWORD *)(v52 + ((v48 >> 3) & 0x1FFFFFF8)) |= 1 << v48,
            sub_239968C38(a1, (unsigned int *)&__dst),
            (v39 = __p[0]) != 0))
      {
LABEL_37:
        __p[1] = v39;
        operator delete(v39);
      }
      ++v37;
    }
    while (v37 < (uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2);
  }
  if (!sub_2394ED744(a1) || !sub_2394ED928(a1) || !sub_2394EDB0C(a1))
  {
    v57 = 0;
    goto LABEL_69;
  }
  sub_23996A390((_QWORD *)a1);
  v53 = off_256934448[0];
  v54 = strlen(off_256934448[0]);
  if (v54 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v55 = v54;
  if (v54 >= 0x17)
  {
    v110 = (v54 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v54 | 7) != 0x17)
      v110 = v54 | 7;
    v111 = v110 + 1;
    p_dst = (void **)operator new(v110 + 1);
    v125 = v55;
    v126 = v111 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_144;
  }
  HIBYTE(v126) = v54;
  p_dst = (void **)&__dst;
  if (v54)
LABEL_144:
    memmove(p_dst, v53, v55);
  *((_BYTE *)p_dst + v55) = 0;
  memset(__p, 0, 24);
  v112 = sub_23958C0D8((uint64_t **)(a1 + 80), (uint64_t)__p, (unsigned __int8 *)&__dst);
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v126) & 0x80000000) == 0)
      goto LABEL_147;
LABEL_152:
    operator delete(__dst);
    if (v112 == -1)
      goto LABEL_154;
    goto LABEL_153;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v126) < 0)
    goto LABEL_152;
LABEL_147:
  if (v112 != -1)
LABEL_153:
    sub_239933E34(a1);
LABEL_154:
  v113 = off_256934408[0];
  v114 = strlen(off_256934408[0]);
  if (v114 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v115 = (void *)v114;
  if (v114 >= 0x17)
  {
    v117 = (v114 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v114 | 7) != 0x17)
      v117 = v114 | 7;
    v118 = v117 + 1;
    v116 = operator new(v117 + 1);
    __p[1] = v115;
    __p[2] = (void *)(v118 | 0x8000000000000000);
    __p[0] = v116;
  }
  else
  {
    HIBYTE(__p[2]) = v114;
    v116 = __p;
    if (!v114)
      goto LABEL_162;
  }
  memmove(v116, v113, (size_t)v115);
LABEL_162:
  *((_BYTE *)v115 + (_QWORD)v116) = 0;
  __dst = 0;
  v125 = 0;
  v119 = sub_2394E5F40(v122, (uint64_t)&__dst, (unsigned __int8 *)__p);
  if (SHIBYTE(__p[2]) < 0)
    operator delete(__p[0]);
  if (v119 == -1)
    v57 = 1;
  else
    v57 = sub_23996008C(a1);
LABEL_69:
  v59 = *(_QWORD *)(a1 + 104);
  v58 = *(_QWORD *)(a1 + 112);
  memset(__p, 0, 24);
  v60 = v58 - v59;
  if (v60)
  {
    if (v60 < 0)
      sub_2394189F8();
    v61 = a5;
    v62 = v60 >> 2;
    v63 = ((unint64_t)((v60 >> 2) - 1) >> 6) + 1;
    __p[0] = operator new(8 * v63);
    __p[1] = 0;
    __p[2] = (void *)v63;
    sub_23942D8C8(__p, v62, 0);
    v65 = *(_QWORD *)(a1 + 104);
    v64 = *(_QWORD *)(a1 + 112);
    if (v64 == v65)
      goto LABEL_126;
    v66 = 0;
    v67 = 0;
    do
    {
      v68 = v66 >> 6;
      v69 = 1 << v66;
      if ((*(_QWORD *)(*(_QWORD *)(v32 + 40) + 8 * v68) & v69) != 0)
      {
        *((_QWORD *)__p[0] + v68) |= v69;
        v123 = v67;
        sub_239962B1C((uint64_t)&__dst, (_QWORD *)(a1 + 104), &v123);
        for (i = sub_239962B44(&__dst); ; i = sub_239962B44(&__dst))
        {
          v123 = i;
          if (i == -1)
            break;
          v71 = (unsigned int *)sub_239962518(a1 + 104, &v123);
          v72 = sub_239962518(a1 + 104, v71);
          *(_QWORD *)((char *)__p[0] + (((unint64_t)*(unsigned int *)(v72 + 12) >> 3) & 0x1FFFFFF8)) |= 1 << *(_DWORD *)(v72 + 12);
        }
        v65 = *(_QWORD *)(a1 + 104);
        v64 = *(_QWORD *)(a1 + 112);
      }
      v66 = ++v67;
    }
    while (v67 < (unint64_t)((v64 - v65) >> 2));
    v73 = 0.001;
    if (a6 >= 0.001)
      v73 = a6;
    v74 = v12 + v12 >= v73 ? v12 + v12 : v73;
    if (v64 == v65)
    {
LABEL_126:
      v99 = __p[0];
      if (__p[0])
LABEL_127:
        operator delete(v99);
    }
    else
    {
      v75 = 0;
      v76 = 0;
      while (1)
      {
        if ((*(_QWORD *)(*(_QWORD *)(v32 + 40) + 8 * (v75 >> 6)) & (1 << v75)) != 0)
        {
          v86 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
          v87 = *v86;
          v88 = (std::__shared_weak_count *)v86[1];
          if (v88)
          {
            v89 = (unint64_t *)&v88->__shared_owners_;
            do
              v90 = __ldxr(v89);
            while (__stxr(v90 + 1, v89));
            do
              v91 = __ldaxr(v89);
            while (__stlxr(v91 - 1, v89));
            if (!v91)
            {
              ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
              std::__shared_weak_count::__release_weak(v88);
            }
          }
          v92 = vmulq_f32(*a2, *(float32x4_t *)(*(_QWORD *)(v87 + 40) + 16 * v75));
          v92.i32[3] = 0;
          if (v74 < fabsf(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v92, v92)) + a2[1].f32[0]))
            break;
        }
        if ((*((_QWORD *)__p[0] + (v75 >> 6)) & (1 << v75)) != 0)
        {
          v93 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
          v94 = *v93;
          v95 = (std::__shared_weak_count *)v93[1];
          if (v95)
          {
            v96 = (unint64_t *)&v95->__shared_owners_;
            do
              v97 = __ldxr(v96);
            while (__stxr(v97 + 1, v96));
            do
              v98 = __ldaxr(v96);
            while (__stlxr(v98 - 1, v96));
            if (!v98)
            {
              ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
              std::__shared_weak_count::__release_weak(v95);
            }
          }
          v77 = (float *)(*(_QWORD *)(v94 + 40) + 16 * v75);
          v78 = *v77;
          v79 = v77[1];
          v80 = v77[2];
          v81 = *(float *)&v11 - v74 > v78 || *((float *)&v11 + 1) - v74 > v79;
          v82 = v81 || v121 - v74 > v80;
          v83 = v82 || v74 + *(float *)&v13 < v78;
          v84 = v83 || v74 + *((float *)&v13 + 1) < v79;
          if (v84 || v74 + v14 < v80)
          {
            if (v61)
            {
              v100 = 1;
              goto LABEL_125;
            }
            goto LABEL_149;
          }
        }
        v75 = ++v76;
        if (v76 >= (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2))
        {
          v57 = v57;
          v99 = __p[0];
          if (__p[0])
            goto LABEL_127;
          goto LABEL_128;
        }
      }
      v100 = 0;
      if (v61)
      {
LABEL_125:
        v57 = 0;
        *a4 = v100;
        goto LABEL_126;
      }
LABEL_149:
      v57 = 0;
      v99 = __p[0];
      if (__p[0])
        goto LABEL_127;
    }
  }
LABEL_128:
  if (v127 != -1)
  {
    v101 = &(*v122)[2 * v127];
    v102 = (std::__shared_weak_count *)v101[1];
    *v101 = 0;
    v101[1] = 0;
    if (v102)
    {
      v103 = (unint64_t *)&v102->__shared_owners_;
      do
        v104 = __ldaxr(v103);
      while (__stlxr(v104 - 1, v103));
      if (!v104)
      {
        ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
        std::__shared_weak_count::__release_weak(v102);
      }
    }
  }
  v127 = -1;
  if (v128 != -1)
  {
    v105 = &(*v122)[2 * v128];
    v106 = (std::__shared_weak_count *)v105[1];
    *v105 = 0;
    v105[1] = 0;
    if (v106)
    {
      v107 = (unint64_t *)&v106->__shared_owners_;
      do
        v108 = __ldaxr(v107);
      while (__stlxr(v108 - 1, v107));
      if (!v108)
      {
        ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
        std::__shared_weak_count::__release_weak(v106);
      }
    }
  }
  return v57;
}

